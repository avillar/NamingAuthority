name: Entail, validate changes, update database
on:
  push:
    branches:
      - master
  pull_request:
      types: closed
  workflow_dispatch:
jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - name: Bring in repo
        uses: actions/checkout@v2
      - name: install Python dependencies
        run: |
          python -m pip install -U pip
          pip install -r scripts/requirements.txt
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: ','
      - name: embed context into JSON/JSON-LD documents
        run: |
          a="${{steps.file_changes.outputs.files_added}}"
          m="${{steps.file_changes.outputs.files_modified}}"
          jsona=$(python -m ogc.na.ingest_json --batch --fs ',' -t -j "$a")
          jsonm=$(python -m ogc.na.ingest_json --batch --fs ',' -t -j "$m")
          echo "Added JSON-LD files: $jsona"
          echo "Modified JSON-LD files: $jsonm"
          echo "jsona=$jsona" >> $GITHUB_ENV
          echo "jsonm=$jsonm" >> $GITHUB_ENV
      - name: detect file changes
        env:
            DB_USERNAME: ${{secrets.DB_USERNAME}}
            DB_PASSWORD: ${{secrets.DB_PASSWORD}}
        run: |
          echo 'Run update script...'
          a="${{steps.file_changes.outputs.files_added}},$jsona"
          m="${{steps.file_changes.outputs.files_modified}},$jsonm"
          r="${{steps.file_changes.outputs.files_removed}}"
          if [ -z $a ]; then a="x"; fi
          if [ -z $m ]; then m="x"; fi
          if [ -z $r ]; then r="x"; fi
          python scripts/update_vocabs.py -u -a "$a" -m "$m" -r "$r"
      - name: commit serialised versions of concept schemes
        uses: EndBug/add-and-commit@v7 # You can change this to use a specific version
        with:
          add: .
          message: "Generated entailment and validation results and serialisations"
          default_author: github_actions
