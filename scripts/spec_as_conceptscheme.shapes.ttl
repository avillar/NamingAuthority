# baseURI: https://www.opengis.net/def/profile/orm/specascs
# imports: http://datashapes.org/dash
# imports: http://www.w3.org/2004/02/skos/core

@prefix dash: <http://datashapes.org/dash#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix : <https://www.opengis.net/def/profile/orm/specascs#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix spec: <http://www.opengis.net/def/ont/modspec/> .

<https://www.opengis.net/def/profile/orm/specascs>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  skos:definition "Entails a concept scheme for a given specification, with topconcepts for each conformance class and each requirement being a narrower concept. Supports visualisation in a heirarchy"
.

:NodeShape_spec_add_as_doc
  a sh:NodeShape ;
  sh:rule :add_to_docs ;
  sh:targetClass spec:Specification ;
.

:add_to_docs
 a sh:SPARQLRule ;
  rdfs:label "Add spec as a Concept in /def/docs/ if not present"@en;
  rdfs:comment "May be detgails of an unpublished doc"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
			 prefix spec: <http://www.opengis.net/def/ont/modspec/>
		     CONSTRUCT  {
				 ?this policy:status ?status.
				 ?this a skos:Concept .
				 ?this skos:inScheme <http://www.opengis.net/def/docs> ;
				}
			 WHERE {
			    ?this a spec:Specification .
                OPTIONAL { ?this policy:status ?regstatus }
                OPTIONAL { ?this spec:status ?specstatus }
                BIND ( COALESCE ( ?specstatus , ?regstatus , <http://www.opengis.net/def/status/under-development>  ) AS ?status )
			    }
""" ;
.

:NodeShape_ConceptScheme
  a sh:NodeShape ;
  sh:rule :status ;
  sh:targetClass skos:ConceptScheme ;
.

:status
 a sh:SPARQLRule ;
  rdfs:label "Add status code if missing"@en;
  rdfs:comment "Two statuses - status of the specification and status of the definitions publication. Assume same and publication status experimental if not present.  Note original data and prior entailments for experimental resources must set status if not present"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
			 prefix spec: <http://www.opengis.net/def/ont/modspec/>
		     CONSTRUCT  {
				 ?this policy:status ?status .
				 ?this spec:status ?status .
				}
			 WHERE {
			    ?this a skos:ConceptScheme .
                OPTIONAL { ?this policy:status ?cstatus }
                OPTIONAL { ?this spec:status ?pstatus }
                BIND ( COALESCE ( ?cstatus , ?pstatus, <http://www.opengis.net/def/status/experimental> ) AS ?status )
			    }
""" ;
.

:NodeShape_conformance_class
  a sh:NodeShape ;
  sh:rule :specelements ;
  sh:targetClass spec:ConformanceClass ;
.

:specelements
  a sh:SPARQLRule ;
  rdfs:label "Create missing concept scheme" ;
  sh:construct """PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
CONSTRUCT {
  ?cs a skos:ConceptScheme ;
    rdfs:label ?cslabel ;
    skos:topConcept ?this ;
    .
  ?this a skos:Concept ;
    skos:topConceptOf ?cs ;
    skos:inScheme ?cs ;
    skos:narrower ?req ;
  .
  ?req skos:broader ?this .
}
WHERE {

    FILTER NOT EXISTS { ?c skos:broader ?this }
}""" ;
.


:NodeShape_class_dependency
  a sh:NodeShape ;
  sh:rule :specNarrower ;
  sh:rule :specBroader ;
  sh:rule :inscheme ;
  sh:targetClass skos:Concept ;
.

:specBroader
  a sh:SPARQLRule ;
  rdfs:label "Create skos:broader hierarchy for spec:dependency" ;
  sh:construct """PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
                  prefix spec: <http://www.opengis.net/def/ont/modspec/>
                  CONSTRUCT {
                    ?this skos:broader ?c .
                    ?c skos:narrower ?this .
                    }
                    WHERE {
                         ?this spec:dependency ?c
                  }""" ;
  sh:prefixes <http://www.w3.org/2004/02/skos/core> ;

.

:specNarrower
  a sh:SPARQLRule ;
  rdfs:label "Create skos:narrower hierarchy for modspec properties" ;
  sh:construct """PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
                  prefix spec: <http://www.opengis.net/def/ont/modspec/>
                  CONSTRUCT {
                    ?this skos:narrower ?c .
                    ?c skos:broader ?this .
                    }
                    WHERE {
                        { ?this spec:requirementsTested ?c }
                        UNION { ?this spec:requirement ?c }
                        UNION { ?this spec:conformanceTest ?c }
                  }""" ;
.

:inscheme
 a sh:SPARQLRule ;
  rdfs:label "Add inScheme if missing"@en;
  rdfs:comment "spin rule to create and link skos:inScheme not present. Run at conceptscheme for single pass efficiency"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
		     CONSTRUCT  {
				 ?this skos:inScheme ?s .
				}
			 WHERE {
			    ?s a skos:ConceptScheme .
			    { ?this a skos:Concept }  UNION {?this a skos:Collection }
			    FILTER NOT EXISTS{ ?this skos:inScheme ?cs } .
			    }
			""" ;
.
