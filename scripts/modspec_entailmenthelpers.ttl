# baseURI: https://www.opengis.net/helpers/modspec
# imports: http://datashapes.org/dash
# imports: http://www.w3.org/2004/02/skos/core

@prefix dash: <http://datashapes.org/dash#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix : <https://www.opengis.net/def/profile/skos/ogc#> .
@prefix swa: <http://topbraid.org/swa#> .
@prefix spec: <http://www.opengis.net/def/ont/modspec/> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://www.opengis.net/helpers/modspec>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://www.w3.org/2004/02/skos/core> ;
  dcterms:creator "Rob Atkinson" ;
  rdfs:comment "assertions necessary "
  owl:versionInfo "Created with TopBraid Composer" ;
.

:NodeShape_spec_add_as_doc
  a sh:NodeShape ;
  sh:rule :add_to_docs ;
  sh:targetClass spec:Specification ;
.


:NodeShape_status_is_concept
  a sh:NodeShape ;
  sh:rule :status_a_concept ;
  sh:targetObjectsOf spec:status ;
.

:NodeShape_default_spec_status
  a sh:NodeShape ;
  sh:rule :status ;
  sh:targetClass spec:Specification ;
.


:add_to_docs
 a sh:SPARQLRule ;
  rdfs:label "Add spec as a Concept in /def/docs/ if not present"@en;
  rdfs:comment "May be detgails of an unpublished doc"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
		     CONSTRUCT  {
				 ?this policy:status ?status.
				 ?this a skos:Concept .
				 ?this skos:inScheme <http://www.opengis.net/def/docs> ;
				}
			 WHERE {
			    ?this a spec:Specification .
                OPTIONAL { ?this policy:status ?regstatus }
                OPTIONAL { ?this spec:status ?specstatus }
                BIND ( COALESCE ( ?specstatus , ?regstatus , <http://www.opengis.net/def/status/under-development>  ) AS ?status )
			    }
""" ;
.

:status
 a sh:SPARQLRule ;
  rdfs:label "Add status of spec if missing"@en;
  rdfs:comment "Assume status valid if not present.  Note original data and prior entailments for experimental resources must set status if not present"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
		     CONSTRUCT  {
				 ?this spec:status <http://www.opengis.net/def/status/valid> .
				}
			 WHERE {
                OPTIONAL { ?this policy:status ?regstatus }
                OPTIONAL { ?this spec:status ?specstatus }
                BIND ( COALESCE ( ?specstatus , ?regstatus , <http://www.opengis.net/def/status/valid> ) AS ?status )
			    }
""" ;
.

:status_a_concept
 a sh:SPARQLRule ;
  rdfs:label "Add status code if missing"@en;
  rdfs:comment "Assume status valid if not present.  Note original data and prior entailments for experimental resources must set status if not present"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
		     CONSTRUCT  {
				 ?this a skos:Concept .
				}
			 WHERE {
			    ?this a skos:Concept .
			    ?this skos:inScheme ?S .
                OPTIONAL { ?this policy:status ?cstatus }
                OPTIONAL { ?S policy:status ?schemestatus }
                BIND ( COALESCE ( ?cstatus , ?schemestatus , <http://www.opengis.net/def/status/valid> ) AS ?status )
			    }
""" ;
.

:inscheme
 a sh:SPARQLRule ;
  rdfs:label "Add inScheme if missing"@en;
  rdfs:comment "spin rule to create and link skos:inScheme not present. Run at conceptscheme for single pass efficiency"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
		     CONSTRUCT  {
				 ?c skos:inScheme ?this .
				}
			 WHERE {
			    ?this a skos:ConceptScheme .
			    { ?c a skos:Concept } UNION {?c a skos:Collection }
			    FILTER NOT EXISTS{ ?c skos:inScheme ?cs } .

			    }
			""" ;
.

:topcollection
  a sh:SPARQLRule ;
  rdfs:label "Top level collection link"@en;
  rdfs:comment "spin rule to create and link top level Collection for a ConceptScheme if not present"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
			 PREFIX dcterms: <http://purl.org/dc/terms/>
		     CONSTRUCT  {
		    	?tc a skos:Collection .
		    	?tc dcterms:provenance "Generated by the OGC Definitions Server to support integration of the elements of this ConceptScheme into bigger collections. ogc_skos_profile_entailements.ttl" .
				?tc skos:inScheme ?this .
				?this policy:collectionView ?tc  .
				?tc skos:member ?member .
				?tc skos:prefLabel ?defaultlabel .
				}
			 WHERE {
			    ?this a skos:ConceptScheme .
			    OPTIONAL { ?this rdfs:label ?l }
				OPTIONAL { ?this skos:prefLabel ?pl }
				OPTIONAL { ?concept skos:topConceptOf ?this }
				OPTIONAL {
				  ?existing_collection a skos:Collection
				  FILTER NOT EXISTS { ?parent skos:member ?existing_collection }
				}
				BIND ( CONCAT ( "Concepts in ", COALESCE(?pl, ?l, STR(?this)) ) AS ?defaultlabel )
			    BIND ( URI(CONCAT(STR(?this),"/" )) AS ?tc )
			    BIND ( COALESCE(?existing_collection, ?concept) as ?member )
			    FILTER NOT EXISTS{ ?tc a skos:Collection} .

			    }
			""" ;
.

:linktopcollection
  a sh:SPARQLRule ;
  rdfs:label "Top level collection link"@en;
  rdfs:comment "spin rule to link top level Collection for a ConceptScheme if no other collections present"@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
		     CONSTRUCT  {
		    	?tc a skos:Collection .
				?tc skos:inScheme ?this .
				?this policy:collectionView ?tc  .
				?tc skos:member ?concept .
				?tc rdfs:label ?label .
				}
			 WHERE {
			    OPTIONAL { ?this rdfs:label ?l }
				OPTIONAL { ?this skos:prefLabel ?pl }
				OPTIONAL { ?concept skos:inScheme ?this }
				BIND ( CONCAT ( "Concepts in ", COALESCE(?pl, ?l, STR(?this)) ) AS ?defaultlabel )
			    BIND ( URI(CONCAT(STR(?this),"/" )) AS ?tc )
			    FILTER NOT EXISTS{ ?tc a skos:Collection} .
			    }
			""" ;
.

:collection
  a sh:SPARQLRule ;
  rdfs:label "Top level collection link"@en;
  rdfs:comment "what do we need for collections? we have gather heirarchy roots to top level.."@en ;
  sh:construct """
		     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
		     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
			 PREFIX policy: <http://www.opengis.net/def/metamodel/ogc-na/>
		     CONSTRUCT  {
		           skos:inScheme ?this .
				}
			 WHERE {
			    OPTIONAL { ?this rdfs:label ?l }
				OPTIONAL { ?this skos:prefLabel ?pl }
				OPTIONAL { ?concept skos:inScheme ?this }
				BIND ( CONCAT ( "Concepts in ", COALESCE(?pl, ?l, STR(?this)) ) AS ?label )
			    BIND ( URI(CONCAT(STR(?this),"/" )) AS ?tc )
			    FILTER NOT EXISTS{ ?tc a skos:Collection} .
			    }
			""" ;
.





