

OGC Testbed-13: Concepts of Data and Standards for Mass Migration Engineering Report







Publication Date: 2018-01-17




Approval Date: 2017-12-07




Posted Date: 2017-10-31




Reference number of this document: OGC 17-078




Reference URL for this document: http://www.opengis.net/doc/PER/t13-AB001




Category: Public Engineering Report




Editor: Jeff Harrison




Title: OGC Testbed-13: Concepts of Data and Standards for Mass Migration Engineering Report






OGC Engineering Report

COPYRIGHT




Copyright © 2018 Open Geospatial Consortium.
To obtain additional rights of use, visit http://www.opengeospatial.org/




WARNING




This document is not an OGC Standard. This document is an OGC Public Engineering Report created as a deliverable in an OGC Interoperability Initiative and is not an official position of the OGC membership. It is distributed for review and comment. It is subject to change without notice and may not be referred to as an OGC Standard. Further, any OGC Engineering Report should not be referenced as required or mandatory technology in procurements. However, the discussions in this document could very well lead to the definition of an OGC Standard.






LICENSE AGREEMENT




Permission is hereby granted by the Open Geospatial Consortium, ("Licensor"), free of charge and subject to the terms set forth below, to any person obtaining a copy of this Intellectual Property and any associated documentation, to deal in the Intellectual Property without restriction (except as set forth below), including without limitation the rights to implement, use, copy, modify, merge, publish, distribute, and/or sublicense copies of the Intellectual Property, and to permit persons to whom the Intellectual Property is furnished to do so, provided that all copyright notices on the intellectual property are retained intact and that each person to whom the Intellectual Property is furnished agrees to the terms of this Agreement.




If you modify the Intellectual Property, all copies of the modified Intellectual Property must include, in addition to the above copyright notice, a notice that the Intellectual Property includes modifications that have not been approved or adopted by LICENSOR.




THIS LICENSE IS A COPYRIGHT LICENSE ONLY, AND DOES NOT CONVEY ANY RIGHTS UNDER ANY PATENTS THAT MAY BE IN FORCE ANYWHERE IN THE WORLD. THE INTELLECTUAL PROPERTY IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE DO NOT WARRANT THAT THE FUNCTIONS CONTAINED IN THE INTELLECTUAL PROPERTY WILL MEET YOUR REQUIREMENTS OR THAT THE OPERATION OF THE INTELLECTUAL PROPERTY WILL BE UNINTERRUPTED OR ERROR FREE. ANY USE OF THE INTELLECTUAL PROPERTY SHALL BE MADE ENTIRELY AT THE USER’S OWN RISK. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ANY CONTRIBUTOR OF INTELLECTUAL PROPERTY RIGHTS TO THE INTELLECTUAL PROPERTY BE LIABLE FOR ANY CLAIM, OR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM ANY ALLEGED INFRINGEMENT OR ANY LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR UNDER ANY OTHER LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH THE IMPLEMENTATION, USE, COMMERCIALIZATION OR PERFORMANCE OF THIS INTELLECTUAL PROPERTY.




This license is effective until terminated. You may terminate it at any time by destroying the Intellectual Property together with all copies in any form. The license will also terminate if you fail to comply with any term or condition of this Agreement. Except as provided in the following sentence, no such termination of this license shall require the termination of any third party end-user sublicense to the Intellectual Property which is in force as of the date of notice of such termination. In addition, should the Intellectual Property, or the operation of the Intellectual Property, infringe, or in LICENSOR’s sole opinion be likely to infringe, any patent, copyright, trademark or other right of a third party, you agree that LICENSOR, in its sole discretion, may terminate this license without any compensation or liability to you, your licensees or any other party. You agree upon termination of any kind to destroy or cause to be destroyed the Intellectual Property together with all copies in any form, whether held by you or by any third party.




Except as contained in this notice, the name of LICENSOR or of any other holder of a copyright in all or part of the Intellectual Property shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Intellectual Property without prior written authorization of LICENSOR or such copyright holder. LICENSOR is and shall at all times be the sole entity that may authorize you or any third party to use certification marks, trademarks or other special designations to indicate compliance with any LICENSOR standards or specifications.




This Agreement is governed by the laws of the Commonwealth of Massachusetts. The application to this Agreement of the United Nations Convention on Contracts for the International Sale of Goods is hereby expressly excluded. In the event any provision of this Agreement shall be deemed unenforceable, void or invalid, such provision shall be modified so as to make it valid and enforceable, and as so modified the entire Agreement shall remain in full force and effect. No decision, action or inaction by LICENSOR shall be construed to be a waiver of any rights or remedies available to it.




None of the Intellectual Property or underlying information or technology may be downloaded or otherwise exported or reexported in violation of U.S. export laws and regulations. In addition, you are responsible for complying with any local laws in your jurisdiction which may impact your right to import, export or use the Intellectual Property, and you represent that you have complied with any regulations or registration procedures required by applicable law to make this license enforceable.






Table of Contents

	1. Summary
	1.1. Requirements and Demo Scenario
	1.2. Prior-After Comparison
	1.3. Technology Integration Experiments
	1.3.1. Key Findings



	1.4. What does this ER mean for the Working Group and OGC in general
	1.5. Document contributor contact points
	1.6. Future Work
	1.7. Foreword



	2. References
	3. Terms and Definitions
	3.1. Client
	3.2. Context
	3.3. Coordinate
	3.4. Feature
	3.5. Filter
	3.6. GeoJSON
	3.7. Geometry
	3.8. Interface
	3.9. Operation
	3.10. Service
	3.11. Abbreviated terms



	4. Overview
	5. Experiments
	5.1. Requirements and Demonstration Scenario
	5.1.1. Geospatial Web and Mobile Services
	5.1.2. Models, Encodings and Frameworks



	5.2. Technology Integration Experiments
	5.2.1. Client Applications
	5.2.2. Data and Services
	5.2.3. Encodings






	6. Findings
	Appendix A: Context Encodings
	Appendix B: Revision History
	Appendix C: Bibliography











1. Summary



The objective of the Mass Migration Source Integration effort in OGC Testbed 13 was to understand and document how interoperability tools and practices, including open geospatial and security standards, can enable information exchange on an international level for humanitarian relief and analysis of mass movement of populations.




This Engineering Report describes how Testbed 13 participants tested and demonstrated situational awareness using Internet and web technologies in a shared information exchange platform.  The purpose of this platform was to help realize a Common Operational Picture (COP) for coordinating humanitarian relief activities among nations and organizations. In addition, the platform exercised security-enabled interoperable exchange of messages.




1.1. Requirements and Demo Scenario


Testbed 13 focused on addressing challenges related to the coordination of multi-regional / multi-national operations and messaging related to the displacement and mass movement of populations in response to conflict. The current exodus of people across the Middle East to multiple nations was used as a scenario for this discussion.




In OGC Testbed 13, participants assessed the ability of open geospatial web services to support simulated users in a Mass Migration Scenario over Syria and Jordan.  In this scenario, large numbers of people have been displaced from the Daraa region of Syria to the Zaatari refugee camp in Jordan due to ongoing conflict. As the conflict ends 'de-escalation zones' are established by major powers and plans are made to return displaced people from refugee camps. Understanding the situation on the ground and the infrastructure, as well as transporting these people from refugee camps into a former conflict zone is a major challenge for relief agencies. To accomplish this task, they must understand the environment and transportation infrastructure in the region between Zaatari refugee camp and Daraa.




The following examples provide a brief sample of the scenario involved in testing the approach.








Figure 1. Testbed 13 assessed the ability of open geospatial technology to support simulated users in a Mass Migration scenario.








Figure 2. In the testing scenario, organizations seek to help displaced populations return home from refugee camps.








Figure 3. The test scenario included simulated users who are not familiar with  geospatial technology.








Figure 4. The test scenario also included users in a simulated operations center and users in the field.




Using this scenario as background, Testbed 13 participants demonstrated situational awareness using Internet and web technologies in an information exchange platform.




Four types of potential information exchange platform users were assessed -




	
Visualization Users - These users access the platform from simulated Relief Operations Centers, and have at least a laptop, client software and reliable internet connections.


	
Non-Expert Users - These users are not geospatial experts, and don’t know about satellite imagery or complex geospatial data sources. They just have questions to enter into the platform, such as: What are the safest routes from Zaatari refugee camp to Daraa?


	
Field Users - These users access data from the platform in the field on mobile devices as OGC GeoPackages. They often do not have a stable (or any) internet connection.


	
Expert Users - These users are geospatial experts and understand the OGC services, satellite imagery and complex data sources in the platform. They set up the profiles and OGC Context Documents that provide help for Non-Expert Users.







The following sections describe the existing OGC standards that were assessed during information exchange platform design.






1.2. Prior-After Comparison


Testbed 13 assessed a variety of OGC services and capabilities to support Mass Migration source integration and the needs of a shared information exchange platform. Some of these included:




	
Web Map Service (WMS)


	
Web Feature Service (WFS)


	
Web Coverage Service (WCS)


	
Web Processing Service (WPS)


	
Geospatial Visualization Clients


	
Mobile Clients


	
Limited / Disconnected environment capabilities


	
Security of the data capabilities







Testbed 13 also assessed a variety of geospatial and related standards that provide a consistent and well-understood means to express and exchange information among collaborating partners. Some of these included:




	
Geography Markup Language (GML)


	
Filter Encodings


	
Lightweight Encodings including JavaScript Object Notation (JSON) Context Documents


	
GeoPackage


	
Security Authentication and Authorization (SAML / OAuth 2.0)









1.3. Technology Integration Experiments


Based on the requirements, assessment of OGC services and capabilities and the demonstration scenario described above, an initial draft of the information exchange platform architecture was developed and is shown in the following diagram -








Figure 5. Test architecture for Mass Migration scenario.




The platform architecture shows a sequence of interactions between different geospatial capabilities and information, web services and standards, models and frameworks.




The testing architecture for this part of OGC Testbed 13 was configured using a combination of the following components -




	
Client Applications - Several types of client application components with the ability to request and visualize data and encodings from the information exchange platform were developed and demonstrated during Testbed 13. These included a visualization client for use in a relief operations center (provided by the University of Denver), mobile clients for use in the field (provided by Image Matters) and two clients that exercised new capability for Fit for Purpose technology to make it easy for 'non-geospatial experts to get quick answers to questions (NonExpert and Expert applications provided by Envitia) [3].


	
Data and Services - Sources of aerial or satellite imagery, available from commercial and government organizations, were used and represented a valuable source to support a wide variety of uses including navigation, environment, land-use, and emergency response.  Government and private industry sources of feature data were identified and supported effective and efficient support in population centers and during mass migrations. Such geospatial data sources included transportation networks, locations and capacities of key facilities, food supplies and sources, and many others. This data was deployed on multiple OGC Web Services including WMS, WFS and WCS from GeoSolutions, WMS and WCS from Rasdaman and WPS from 52North. Components were tested in a series of Technology integration experiments and demonstrated in the context of the scenario described in previous sections.


	
Encodings - Multiple OGC encodings to support data exchange in the platform were developed and demonstrated during Testbed 13. These included Geography Markup Language (GML) for geospatial feature data, GeoPackages that provided SQLite containers for geospatial feature and imagery data for use by mobile clients and JSON Context documents that were used to capture collections of services for easy access to information on the platform.







Four types of client applications were developed, tested and demonstrated as part of the information exchange platform:




	
Visualization Client - These users access the platform from simulated Relief Operations Centers, and have at least a laptop, client software and reliable internet connections.











Figure 6. Visualization client.




	
Non-Expert Users - These users are not geospatial experts, and do not know about satellite imagery or complex geospatial data sources. They just have questions to enter into the platform, such as: What are the safest routes from Zaatari refugee camp to Daraa?











Figure 7. Client for non-expert users.




	
Field Users – These users access data from the platform in the field on mobile devices as OGC GeoPackages. They often do not have a stable, or any, internet connection.











Figure 8. Field client.




	
Expert Users - These users are geospatial experts and understand the OGC services, satellite imagery and complex data sources in the platform. They set up the Context Documents that provide help for Non-Expert Users.











Figure 9. Client for geospatial expert users.




The four types of client applications tested the information exchange platform as outlined in the following Technology Integration Experiment (TIE) table.








Figure 10. Technology Integration Experiments.




In support of the mass migration scenario satellite imagery from commercial and government organizations was deployed to support situational awareness and analysis for all types of users. Government and private industry sources of feature data were also identified and supported visualization and analysis of transportation networks, locations and capacities of key facilities, food supplies and sources, and many other key geographic features. This data was deployed on multiple OGC Web Services including WMS, WFS and WCS from GeoSolutions, WMS and WCS from Rasdaman and WPS from 52North.




The following graphics summarize the data and services deployed in the information exchange platform.








Figure 11. Data deployed on Geoserver WFS.








Figure 12. Data deployed on Geoserver WMS and WCS.




1.3.1. Key Findings


The evidence obtained through Testbed 13 Mass Migration Technology Integration Experiments supports the following findings:




	
It is possible to cost-effectively develop a shared information exchange platform based on open standards for situational awareness, and coordinate humanitarian relief activities among nations and organizations. In addition, such a platform can securely enable interoperable exchange of messages.


	
Users who do not know about satellite imagery or complex geospatial data sources can access the platform using client applications that allow them to simply ask questions such as, "What are the best routes from Zaatari refugee camp to Daraa?" and get answers in an easy to understand form.


	
Geospatial data experts can configure information sources to quickly respond to a variety of user questions - with encodings such as OGC Context.


	
Relief Operations Centers can access high quality visualizations of data on the platform, to easily understand the changes in the region and mass migration over time. Access to data in these visualizations can be secure, and delivered only to authorized users.


	
Applications can access satellite imagery data on the platform using imagery metadata via WFS, select a subset based on the scenes characteristics and then trigger WMS for viewing, WCS for download and also WPS for processing. This flow differs from 'normal' OGC approaches in that the WFS is used to store metadata as features. This approach is common in large scale operational deployments.


	
Mobile application clients can be used in the field to provide access to data and services of the information exchange platform. In this scenario, users access data from the platform in the field on mobile devices as OGC GeoPackages (SQLite containers for geospatial feature and imagery data for use by mobile clients).  These 'field users' often do not have a stable (or any) internet connection since network infrastructure is not reliable or available throughout much of the Daraa region.


	
The platform can support advanced analytics such as conflation of feature data sets.











1.4. What does this ER mean for the Working Group and OGC in general


The ER is relevant to the work of the Web Feature Service (WFS)/Filter Encoding (FES) Standard Working Group (SWG). The SWG is currently working on a new version of the WFS standard, therefore the lessons learnt from Testbed-13 may inform the development of the standard.






1.5. Document contributor contact points


All questions regarding this Summary document should be directed to the editor or the contributors:



Table 1. Contacts	Name	Organization
	Jeff Harrison
	The Carbon Project

	Mark Mattson
	The Carbon Project

	Jing Li
	University of Denver

	Gate Jantaraweragul
	Image Matters

	Simone Giannecchini
	GeoSolutions

	Benjamin Pross
	52 North

	Christoph Stasch
	52 North

	Stefano Cavazzi
	Envitia

	Dean Hintz
	Safe Software






1.6. Future Work


It is expected that this document may result in changes in other documents, such as WFS, OWS Context and others based on Working Group review. Specifically, the ability for applications to access satellite imagery data on the platform using imagery metadata via WFS, select a subset based on the scenes characteristics and then trigger WMS for viewing, WCS for download and also WPS for processing seems especially useful. This flow differs from 'normal' OGC approaches in that the WFS is used to store metadata as features. This approach is common in large scale operational deployments. An OGC Best Practices document should be developed to document this approach.




In addition, given the massive refugee and mass migration crisis across the world in recent years, it would be beneficial to test a more robust Mass Migration scenario over multiple regions using additional standards for the data exchange platform. For example, a Testbed thread could focus on addressing challenges related to the coordination of operations and messaging related to the displacement and mass movement of populations in response to conflicts over multiple regions simultaneously. One example that comes to mind is the Sahel region in Africa, to Libya, then the Mediterranean then Italy. Such migration zones present significant challenges to African national governments, regional organizations, the US, the EU and international aid organizations [1].






1.7. Foreword


Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. The Open Geospatial Consortium shall not be held responsible for identifying any or all such patent rights.




Recipients of this document are requested to submit, with their comments, notification of any relevant patent claims or other intellectual property rights of which they may be aware that might be infringed by any implementation of the standard set forth in this document, and to provide supporting documentation.










2. References



The following normative documents are referenced in this document.




NOTE: 	Only normative standards are referenced here, e.g. OGC, ISO or other SDO standards. All other references are listed in the bibliography. Example:

	
OGC 06-121r9, OGC® Web Services Common Standard







	
Note

	
This OWS Common Standard contains a list of
normative references that are also applicable to this Engineering Report.






	
OGC 07-036, OpenGIS Geography Markup Language (GML) Encoding Standard, August 2007


	
OGC 09-025r2, OGC® Web Feature Service 2.0 Interface Standard – With Corrigendum, July 2014


	
OGC 09-026r2, OGC Filter Encoding 2.0 Encoding Standard - With Corrigendum, August 2014


	
OGC 06-042, OpenGIS Web Map Service (WMS) Implementation Specification, March 2006


	
OGC 07-057r7, OpenGIS Web Map Tile Service Implementation Standard, April 2010


	
OGC 12-080r2, OGC OWS Context Conceptual Model, January 2014


	
OGC 14-065, OGC® WPS 2.0 Interface Standard, March 2015











3. Terms and Definitions



For the purposes of this report, the definitions specified in Clause 4 of the OWS Common Implementation Standard OGC 06-121r9 shall apply. In addition, the following terms and definitions apply.




3.1. Client



The software component that can invoke an operation from a service.








3.2. Context



A document that specifies a fully configured service set which can be exchanged (with a consistent interpretation) among clients supporting the standard.








3.3. Coordinate



One of a sequence of n numbers designating the position of a point in n-dimensional space.








3.4. Feature



An application object that represents a physical entity, e.g. a building, a river, or a person. A feature may or may not have geometric aspects.








3.5. Filter



A filter expression predicate expression encoded using XML








3.6. GeoJSON



GeoJSON is an open standard format designed for representing simple geographical features, along with their non-spatial attributes, based on JavaScript Object Notation. The features include points (therefore addresses and locations), line strings (therefore streets, highways and boundaries), polygons (countries, provinces, tracts of land), and multi-part collections of these types.








3.7. Geometry



The geometry data type is used to house information on recognized objects, like points, lines, and polygons.








3.8. Interface



The named set of operations that characterize the behaviour of a service.








3.9. Operation



The specification of a transformation or query that a service may be called to execute.








3.10. Service



The distinct part of the functionality that is provided by an entity through interfaces.








3.11. Abbreviated terms


Some of the more frequently used abbreviated terms in this document include:




	
AOI       Area of Interest


	
API       Application Programming Interface


	
COTS      Commercial Off The Shelf


	
DCE       Distributed Computing Environment


	
ER        Engineering Report


	
FFP       Fit for Purpose


	
GML       Geography Markup Language


	
HTML      Hypertext Markup Language


	
HTTP      Hypertext Transfer Protocol


	
JSON      JavaScript Object Notation


	
OGC       Open Geospatial Consortium


	
OSM       OpenStreetMap


	
TIE       Technology Integration Experiment


	
TDS       Topographic Data Store


	
URL       Uniform Resource Locator


	
W3C       World Wide Web Consortium


	
WWW       World Wide Web


	
WFS       Web Feature Service


	
WPS       Web Processing Service


	
WCS       Web Coverage Service


	
WMS       Web Map Service


	
WMTS      Web Map Tile Service


	
XML       Extensible Markup Language


	
XSD       XML Schema Definition













4. Overview



The objective of the Mass Migration Source Integration work is to understand and document how information sharing and safeguarding interoperability tools and practices, including open geospatial standards, can enable cross-domain interoperability on an international level for structured, communication exchange and border surveillance for law enforcement and humanitarian aid.




This document contains the following sections:




	
Preface - This section presents information on administrative and legal aspects of this Engineering Report (ER).


	
Summary - This section presents information on scope, what this ER means for the OGC in general and document contributor contact points.


	
References - This section presents information on documents that are referenced in this Engineering Report.


	
Terms - This section presents information on terms and abbreviations that are used in this Engineering Report.


	
Experiments - This section presents information on the component implementations, architecture and the resultss of Technology Integration Experiments conducted.


	
Findings - This section summarizes the findings. It also provides forward-looking recommendations.











5. Experiments



The objective of the Mass Migration Source Integration effort in OGC Testbed 13 was to understand and document how interoperability tools and practices, including open geospatial and security standards, can enable information exchange on an international level for humanitarian relief and analysis of mass movement of populations.




This section describes how Testbed 13 participants tested and demonstrated situational awareness using Internet and web technologies in a shared information exchange platform.  The purpose of this platform was to help realize a Common Operational Picture (COP) for coordinating humanitarian relief activities among nations and organizations. In addition, the platform exercised security-enabled interoperable exchange of messages [4].




5.1. Requirements and Demonstration Scenario


Testbed 13 focused on addressing challenges related to the coordination of multi-regional / multi-national operations and messaging related to the displacement and mass movement of populations in response to conflict. The current exodus of people across the Middle East to multiple nations was used as a scenario for this discussion.




In OGC Testbed 13, participants assessed the ability of open geospatial web services to support simulated users in a Mass Migration Scenario over Syria and Jordan.  In this scenario, large numbers of people have been displaced from the Daraa region of Syria to the Zaatari refugee camp in Jordan due to ongoing conflict. As the conflict ends 'de-escalation zones' are established by major powers and plans are made to return displaced people from refugee camps. Understanding the situation on the ground and the infrastructure, as well as transporting these people from refugee camps into a former conflict zone is a major challenge for relief agencies. To accomplish this task, they must understand the environment and transportation infrastructure in the region between Zaatari refugee camp and Daraa.




The following examples provide a brief sample of the scenario involved in testing the approach.








Figure 13. Testbed 13 assessed the ability of open geospatial technology to support simulated users in a Mass Migration scenario.








Figure 14. In the testing scenario, organizations seek to help displaced populations return home from refugee camps.








Figure 15. The test scenario included simulated users who are not familiar with  geospatial technology.








Figure 16. The test scenario also included users in a simulated operations center and users in the field.




Using this scenario as background, Testbed 13 participants demonstrated situational awareness using Internet and web technologies in an information exchange platform.




Four types of potential information exchange platform users were assessed -




	
Visualization Users - These users access the platform from simulated Relief Operations Centers, and have at least a laptop, client software and reliable internet connections.


	
Non-Expert Users - These users are not geospatial experts, and do not know about satellite imagery or complex geospatial data sources. They just have questions to enter into the platform, such as: What are the safest routes from Zaatari refugee camp to Daraa?


	
Field Users - These users access data from the platform in the field on mobile devices as OGC GeoPackages. They often do not have a stable (or any) internet connection.


	
Expert Users - These users are geospatial experts and understand the OGC services, satellite imagery and complex data sources in the platform. They set up the profiles and OGC Context Documents that provide help for Non-Expert Users.







The following sections describe the existing OGC standards that were assessed during information exchange platform design.




5.1.1. Geospatial Web and Mobile Services


Testbed 13 assessed a variety of OGC services and capabilities to support Mass Migration source integration and the needs of a shared information exchange platform. Some of these included:




	
Web Map Service (WMS)


	
Web Feature Service (WFS)


	
Web Coverage Service (WCS)


	
Web Processing Service (WPS)


	
Geospatial Visualization Clients


	
Mobile Clients


	
Limited / Disconnected environment capabilities


	
Security of the data capabilities









5.1.2. Models, Encodings and Frameworks


Testbed 13 also assessed a variety of geospatial and related standards that provide a consistent and well-understood means to express and exchange information among collaborating partners. Some of these included:




	
Geography Markup Language (GML)


	
Filter Encodings


	
Lightweight Encodings (JSON / GeoJSON) including JSON Context Documents


	
GeoPackage


	
Security Authentication and Authorization (SAML / OAuth 2.0)











5.2. Technology Integration Experiments


Based on the requirements and demonstration scenario described above, an initial draft of the information exchange platform architecture was developed during the project and is shown in the following diagram -








Figure 17. Test architecture for Mass Migration scenario.




The platform architecture shows an initial sequence of interactions between different geospatial capabilities and information, web services and standards, models and frameworks. The testing architecture for this part of OGC Testbed 13 was configured using a combination of the following components -




	
Client Applications - Several types of client application components with the ability to request and visualize data and encodings from the information exchange platform were developed and demonstrated during Testbed 13. These included a visualization client for use in a relief operations center (provided by the University of Denver), mobile clients for use in the field (provided by Image Matters) and two clients that exercised new capability for Fit for Purpose technology to make it easy for 'non-geospatial experts to get quick answers to questions (NonExpert and Expert applications provided by Envitia).


	
Data and Services- Sources of aerial or satellite imagery, available from commercial and government organizations, were used and represented a valuable source to support a wide variety of uses including navigation, environment, land-use, and emergency response.  Government and private industry sources of feature data were identified and supported effective and efficient support in population centers and during mass migrations. Such geospatial data sources included transportation networks, locations and capacities of key facilities, food supplies and sources, and many others. This data was deployed on multiple OGC Web Services including WMS, WFS and WCS from GeoSolutions, WMS and WCS from Rasdaman and WPS from 52North. Components were tested in a series of Technology integration experiments and demonstrated in the context of the scenario described in previous sections.


	
Encodings - Multiple OGC encodings to support data exchange in the platform were developed and demonstrated during Testbed 13. These included GML for geospatial feature data, GeoPackages that provided SQLite containers for geospatial feature and imagery data for use by mobile clients and JSON Context documents that were used to capture collections of services for easy access to information on the platform.







5.2.1. Client Applications


Four types of client applications were developed, tested and demonstrated as part of the information exchange platform:




	
Visualization Client - These users access the platform from simulated Relief Operations Centers, and have at least a laptop, client software and reliable internet connections.


	
Non-Expert Users - These users are not geospatial experts, and do not know about satellite imagery or complex geospatial data sources. They just have questions to enter into the platform, such as: What are the safest routes from Zaatari refugee camp to Daraa?


	
Field Users – These users access data from the platform in the field on mobile devices as OGC GeoPackages. They often do not have a stable, or any, internet connection.


	
Expert Users - These users are geospatial experts and understand the OGC services, satellite imagery and complex data sources in the platform. They set up the Context Documents that provide help for Non-Expert Users.







The four types of client applications tested the information exchange platform as outlined in the following Technology Integration Experiment (TIE) table.








Figure 18. Technology Integration Experiments.




Visualization Client


Visualization of data on the platform in the simulated Relief Operations Center was provided by University of Denver via integration with the World Wind environment (AB105 - Security enabled Desktop client). This client can provide visualization capabilities for relevant geospatial web service standards including WMS, WFS, and WCS (e.g., via getting information and capabilities, rendering visualizations, providing data results). Users are provided with standard zoom, pan, adjusting, and layer management tools. This client also implemented OAuth 2.0 for secure connection to imagery and other data sources.




In the demonstration scenario one of the first actions personnel in the Relief Operations Center take is to try and understand and communicate the impact the conflict has on social conditions and infrastructure in the region. To help with this, they accessed NASA Black Marble from two different years. NASA Black Marble is a global view of the Earth’s city lights acquired by Suomi National Polar Orbiting (Suomi NPP) satellite. Visualizations from 2012 and 2016 are shown below as examples.








Figure 19. WMS visualization with satellite imagery from 2012, showing lights at night before the conflict.








Figure 20. WMS visualization with satellite imagery from 2016, showing lights at night during the conflict.




As shown in the visualization, the change in lights at night is significant in the region. To make it even easier to distribute this visualization, the Relief Operations Center also created a video of the changes and posted it on YouTube for anyone to access.








Figure 21. WMS visualization of lights at night on YouTube.




Examples for visualizing other layers from WFS and WCS in the Zaatari and Daraa region are shown in the following examples.  The base imagery layer is from a secure WCS with data provided by DigitalGlobe (2017 imagery). Feature data is represented on the base imagery and includes transportation lines, structural points, settlement polygons and information points. Please note, additional information on data sources used is provided in the following section.








Figure 22. Visualization client accessing secure OGC services.








Figure 23. Security-enabled visualization client accessing data over Zaatari refugee camp.








Figure 24. 3D visualization of data over Zaatari refugee camp.




Visualizing Web Services using this client application followed this basic sequence of events:




	
User opens the 'Service' tab at the top left of the interface, to display web service loading options for selection (WFS, WCS, or WMS).


	
Via the import web service features box, a user may specify the service URL. The client processes the capabilities file to identify layers, time and other information related to the service.


	
Users can include additional customization functions for handling and displaying data (feature type name, region of focus, visibility details, attributes to visualize on the globe).


	
The globe then auto-zooms in or out to the area of interest, and displays the selected dataset features as previously specified. The user may, while visualizing the uploaded data, take advantage of layer control options too to enable/disable layer views.


	
Once features are loaded, and depending on whether they contain additional attributes or metadata, clicking on each on the map will bring up a box with related details.







Some of the services for Zaatari and Daraa data used by the Visualization client were secured with OAuth2 via auth0.com, demonstrating the capability to provide access control on OGC services when required by the mission. With this security enabled client, users may access web services provided with different security configurations (e.g., basic authentication, OAuth2.0). With this security enabled client, the user is expected to provide both the URL for a web service and the security type of the web service.
In the case that an OAuth2.0 enabled service is provided, the user should then provide additional information required for OAuth2.0 authentication.  Depending on the configurations of the service, the client will take additional steps to obtain the access token. The client currently supports the “client credentials” as the grant type which requires the user to provide the following information: client id, client secrete, audience and grant type (i.e., client credentials).  A post request will be issued to retrieve the access token from the service provider.  Upon the submission of the service URL and the successful retrieval of the access token, the client will perform service retrieval automatically (e.g., GetCapablities and GetCoverage) and display the returned data from the service in the 3D Earth environment for interactive manipulations.








Figure 25. Interface to access secure OGC web service.








Figure 26. Configuring information to retrieve access token.






Client for Non-Experts


In the demonstration scenario clients accessed the platform using client applications configured for users who are not geospatial experts, and do not know about satellite imagery or complex geospatial data sources. They just have questions to enter into the platform, such as: What are the best routes from Zaatari refugee camp to Daraa?’




Examples of this client from Envitia are shown below:








Figure 27. Client for non-experts - Public view.








Figure 28. Client for non-experts - User interface.




This application can use complex filters (CQL_Filter) and Context documents that capture collections of services for access to information on the platform - with the complexity hidden from non-expert users. All they have to do is search for OWS context documents providing a specific analytical service. For example, they may type, "What is the fastest route out of Zaatari?" They are then presented results, and access the results via the abstracts. The application then automatically fires all the requests in the selected OWS Context document and visualizes them on screen.




Examples of this sequence are shown below:








Figure 29. Entering a question to search for information about Zaatari.








Figure 30. Results presented in response to a question.








Figure 31. Results accessed via the abstracts.








Figure 32. Application automatically requests in the selected OWS Context document, and visualizes results on screen.






Field Client


In the demonstration scenario, mobile application clients are used in the field to provide access to data and services of the information exchange platform. In this scenario, users access data from the platform in the field on mobile devices as OGC GeoPackages (SQLite containers for geospatial feature and imagery data for use by mobile clients).  These 'field users' often do not have a stable (or any) internet connection since network infrastructure is not reliable or available throughout much of the Daraa region.




Examples are shown below using the application developed and tested by Image Matters. The two examples show views of the GeoPackages (GPKG) with user captured media (photos) media as point features on a backgound image map from DigitalGlobe, and with OpenStreetMap (OSM) feature data from shapefiles for information on the infrastructure. The data is loaded from a GeoPackage (GPKG) provided by Safe Software (adjusted).








Figure 33. View of GeoPackage with user-captured media (photos) media as point features on a backgound image map from DigitalGlobe.








Figure 34. View of the GeoPackage with OpenStreetMap data.




The infrastructure data shown above is described by a Color Legend:




	
Utility Infrastructure - Indigo


	
Settlement - Violet


	
Structure - Gray


	
Transportation - Yellow


	
Facility - Orange


	
User Media - Blue









Field Client - GeoPackage Generation


The FME data integration and conversion application was used by Safe Software to generate the field client GeoPackage as shown below. Version 2017.1 was used as it supports writing both vector and raster writing to OGC GeoPackage. The first image shows the FME Workspace used to create the OGC GeoPackage. This workspace reads 26 themes from the project shape file: Daraa_Refugee_Camp_TDSv6.0_Shp, clips them by an area polygon around Daraa, and writes the results to the output GeoPackage.




Clipping is important to minimize the data the mobile client is required to display. It then reprojects the data to Web Mercator required by the mobile client. This workspace also reads recent satellite data from Sentinal-2 on AWS, performs the same clipping and reprojection and then writes this to a tile set within the same geopackage. The published parameters include options for choosing different raster tiling schemes, zoom level configuration and interpolation type. Further tests could be performed to find the optimal geopackage configuration for the mobile client particularly in relation to the raster tile structure.




The second screenshot shows a preview of the resulting GeoPackage using FME Data Inspector before loading to the mobile client. This allows inspection of both the vector and raster content to make sure values, imagery and positional accuracy are preserved. A key aspect of this workflow is updates can be readily automated. Once the workspace is configured correctly, it can be called from a command script or published as a scheduled service on FME Server. Ideally the field GeoPackages should be refreshed frequently so that field operatives are working with current data each day.








Figure 35. Creating a GeoPackage and previewing the results.






Client for Geospatial Experts


This section explains how expert users set up the encodings and filters used in the application for non-experts. These functions may be performed by a geospatial data production or analysis organization.




First, the user logs in to the 'Expert' capabilities of the Envitia application:








Figure 36. Client for experts - User login screen.








Figure 37. Client for experts - User interface.




They can then search for specific OGC web services (e.g. WFS Daraa Landsat 8):








Figure 38. Searching for 'Daraa' and WFS.




They can then visualize the WFS Daraa Landsat 8 timeseries (bounding boxes and feature attributes):








Figure 39. Visualizing metadata for Daraa Landsat timeseries from WFS.




Then they apply a CQL filter to access only features with cloud_cover<10 and earth_sun_distance<1. The first screenshot shows filter creation, the second the results of the filter, and then the CQL filter is automatically applied to GetFeature:








Figure 40. Applying a CQL filter to access only imagery metadata (features) with cloud_cover<10 and earth_sun_distance<1.








Figure 41. Reviewing results of the CQL filter.








Figure 42. CQL filter automatically applied to GetFeature requests.




Below the same CQL filter has been automatically applied to the related WMS (the only image satisfying that is 2017-03-25 00:00:00):








Figure 43. The same CQL filter used on imagery metadata WFS can be applied to the related WMS.




The client also allows to access individual images at different timestamps of the time series via a slider:








Figure 44. Individual images accessed at different timestamps of the time series via a slider.




They can search for other related web services such as WCS Daraa Landsat 8 timeseries:








Figure 45. Searching for imagery data over Daara (WCS).




They can also subset imagery data served by WCS using a lat/long filter. The screenshots below show the original, and then filtered using latitiude and longitude:








Figure 46. Unfiltered view of imagery data served by WCS.








Figure 47. View of imagery data served by WCS after applying a lat/long filter.




The example below shows search for specific web services (e.g. WMS Daraa OSM):








Figure 48. Searching for OpenStreetMap data.




In the following example the client is used to import a new web service and make it available to the client (e.g. WMS Daraa OSM):








Figure 49. Importing a new web service.




In addition, the client supports creation of an OWS Context document with the discovered web services for Zaatari. Examples for WMS, WFS and WCS and then WMS, WFS, WCS and WPS are shown below.








Figure 50. Creating an OWS Context document for Zaatari with WMS, WFS and WCS inputs.








Figure 51. Creating an OWS Context document for Zaatari with WMS, WFS, WCS and WPS inputs.




Finally, WPS can be used to execute conflation.  The graphic sequence below shows the output of the WPS Conflation first with OSM background, then with Landsat 8 background, then DigitalGlobe and finally the conflated data attributes:








Figure 52. Output of WPS Conflation over Zaatari with OSM background.








Figure 53. Output of WPS Conflation over Zaatari with Landsat 8 background.








Figure 54. Output of WPS Conflation over Zaatari with DigitalGlobe background.








Figure 55. Output of WPS Conflation showing conflated data attributes.








5.2.2. Data and Services


In the scenario for this part of Testbed 13, large numbers of people have been displaced from the Daraa region of Syria to the Zaatari refugee camp in Jordan due to ongoing conflict. As the conflict ends 'de-escalation zones' are established by major powers and plans are made to return displaced people from refugee camps to the region. Understanding the situation on the ground and the infrastructure, as well as transporting these people from refugee camps into a former conflict zone is a major challenge for relief agencies. To accomplish this task, they must understand the environment and transportation infrastructure in the region between Zaatari refugee camp and the Daraa region.




In support of this challenge, satellite imagery from commercial and government organizations was deployed to support situational awareness and analysis for all types of users. Government and private industry sources of feature data were also identified and supported visualization and analysis of transportation networks, locations and capacities of key facilities, food supplies and sources, and many other key geographic features. This data was deployed on multiple OGC Web Services including WMS, WFS and WCS from GeoSolutions, WMS and WCS from Rasdamman and WPS from 52North.




This section describes the data and services deployed in support of the demonstration scenario.




Data Deployed on Geoserver - Daraa and Zataari


Geospatial data for the Daraa region was deployed using a combination of existing OGC standards, and new techniques to make access for users and client applications more dynamic and useful, and to support analysis of multi-regional / multi-national operations and messaging related to the displacement and mass movement of populations in response to conflict.




The following two graphics and sections summarize the data deployed in this part of the information exchange platform.








Figure 56. Data deployed on Geoserver WFS.








Figure 57. Data deployed on Geoserver WMS and WCS.




Data for Daraa Region Deployed on Geoserver




Initial sets of data were deployed on Geoserver at the following URL:




http://cloudsdi.geo-solutions.it/geoserver/




A complete description of the CQL_Filters deployed may be found in the Fit-for-Purpose Testbed 13 ER [3]. Thanks to this work it is possible to use a WFS to store imagery metadata and for the metadata to simplify access to imagery on WMS and WCS and WMS services. This is accomplished by a CQL filter using the CQL_FILTER GeoServer extension. In addition, Geoserver supports the ability to sort WMS raster time series on attributes using another GeoServer extension.




This information was captured in the OWS Context document here:




http://cloudsdi.geo-solutions.it/owscontext/daraa.json




For Daraa OSM data from NGA and shapefiles for cultivated areas coming from DigitalGlobe were loaded. They are exposed both as WMS and WFS.  Participants also loaded multiple WorldView 3 scenes (full 8 bands 16 bits) which we are exposed as WMS and WCS as well as several True Color Landsat 8 scenes (bands 4,3,2); some sample queries for WMS are shown below:




WorldView




http://cloudsdi.geo-solutions.it/geoserver/daraa/wms?service=WMS&version=1.1.0&request=GetMap&layers=daraa:daraa_worldview_timeseries&styles=&bbox=36.20134352401918,33.01777873311933,36.29241382075683,33.20029119387408&width=383&height=768&srs=EPSG:4326&format=application/openlayers




Landsat 8




http://cloudsdi.geo-solutions.it/geoserver/daraa/wms?service=WMS&version=1.1.0&request=GetMap&layers=daraa:daraa_landsat8_timeseries&styles=&bbox=34.553315121788614,32.099447041750906,37.08220716431518,34.234622620081524&width=768&height=648&srs=EPSG:4326&format=application/openlayers




NGA vector data over Landsat8 imagery




http://cloudsdi.geo-solutions.it/geoserver/daraa/wms?service=WMS&version=1.1.0&request=GetMap&layers=daraa:Daraa-OSM&styles=&bbox=34.553315121788614,32.099447041750906,37.08220716431518,34.234622620081524&width=768&height=648&srs=EPSG:4326&format=application/openlayers




NGA vector data is exposed as different layers, the list can be retrieved with a WFS




http://cloudsdi.geo-solutions.it/geoserver/daraa/ows?service=wfs&version=1.3.0&request=GetCapabilities




Landsat 8 imagery covers a large area (with 30m resolution), including Daraa and Zaatari refugee camps, spanning from March 2017 to June 2017. The data is exposed as a GeoServer time series layer accessible via WMS and WCS: daraa_landsat8_timeseries; its WMS GetCapabilities link is shown below:




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/wms?service=WMS&version=1.3.0&request=GetCapabilities




The layer exposes a time dimension as follows. Notice the default value for the TIME dimensions which is used in case no value is specified.





<Dimension name="time" default="2017-06-29T00:00:00Z" units="ISO8601">

2017-03-09T00:00:00.000Z,2017-03-25T00:00:00.000Z,2017-04-10T00:00:00.000Z,2017-04-26T00:00:00.000Z,2017-05-12T00:00:00.000Z,2017-05-28T00:00:00.000Z,2017-06-13T00:00:00.000Z,2017-06-29T00:00:00.000Z

</Dimension>






The properties of each element in the time series plus its bounding box are accessible as a vector layer via WMS and WFS; the layer is called daraa_landsat8_timeseries_index and its GetCapabilities for WMS and WFS can be reached here below:




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/wms?service=WMS&version=1.3.0&request=GetCapabilities




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/wfs?service=WFS&version=2.0.0&request=GetCapabilities




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/wms?service=WMS&version=1.3.0&request=GetCapabilities




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/wfs?service=WFS&version=2.0.0&request=GetCapabilities




In particular, the DescribeFeatureType call can be found here:




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/wfs?service=WFS&version=2.0.0&request=DescribeFeatureType&typeNames=daraa:daraa_landsat8_timeseries_index




Attributes indicated above are available for querying via WFS. CQL_FILTER can be used to jump between different services to access the same data. An example is shown below:




For example, the daraa_landsat8_timeseries_index layer can be queried using WFS and a CQL filter with JSON output format to access data where sun_elevation > 51 and cloud_cover < 1 AND cloud_cover_land < 0.21




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/wfs?service=WFS&version=2.0.0&request=GetFeature&typeNames=daraa:daraa_landsat8_timeseries_index&CQL_FILTER=sun_elevation%3E51%20AND%20cloud_cover%20%3C%201%20AND%20cloud_cover_land%20%3C%200.21&outputFormat=application/JSON




Using the same filter one can jump to WMS and bring up the imagery associated to this same filter:




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=daraa%3Adaraa_landsat8_timeseries&SRS=EPSG%3A4326&WIDTH=768&HEIGHT=648&BBOX=36.06820106506348%2C32.591285705566406%2C36.13411903381348%2C32.64690399169922&CQL_FILTER=sun_elevation%3E51%20AND%20cloud_cover%20%3C%201%20AND%20cloud_cover_land%20%3C%200.21&time=P1Y/PRESENT




As well as to WCS:




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=daraa_landsat8_timeseries&subset=Long(36.06,36.14)&subset=Lat(32.59,32.65)&subset=time(%222017-01-01T00:00:00Z%22,%222018-01-01T00:00:00Z%22)&CQL_FILTER=sun_elevation%3E51%20AND%20cloud_cover%20%3C%201%20AND%20cloud_cover_land%20%3C%200.21




Please, notice the usage of the “time” parameter is set to “P1Y/PRESENT” to encompass all the available imagery. The result is shown below.








Figure 58. Result of CQL Filter.




It is important to point out that the TIME dimension applies a restriction to the provided CQL_FILTER (it is ANDed with the latter); the CQL_FILTER is a GeoServer vendor extension while the TIME dimension is standard WMS hence participants decided to adopt this behavior to not confuse users. Since the time dimension is assigned a default value if we don’t specify anything such value will be assigned by default to the provided CQL_FILTER, hence not specifying the time might lead to confusing results. As an instance if we remove the TIME from the WMS query above, the default time value will trigger but since there is no combination that corresponding to the intersection of the provided CQL_FILTER with the default time an empty image will be returned. See link below:




http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=daraa%3Adaraa_landsat8_timeseries&SRS=EPSG%3A4326&WIDTH=768&HEIGHT=648&BBOX=36.06820106506348%2C32.591285705566406%2C36.13411903381348%2C32.64690399169922&CQL_FILTER=sun_elevation%3E51%20AND%20cloud_cover%20%3C%201%20AND%20cloud_cover_land%20%3C%200.21




More information on how GeoServer supports TIME via WMS can be found at this link. Additional information on CQL_FILTERING can be found below:




Data for Zaatari Deployed on Geoserver


For Zaatari OSM data from NGA was loaded and exposed as WMS and WFS. The layers are the following:




	
InformationPnt


	
RecreationSrf


	
StructurePnt


	
StructureSrf


	
TransportationGroundCrv


	
TransportationGroundSrf


	
UtilityInfrastructureSrf


	
o2s_A


	
o2s_L


	
osm_points







Examples of WFS and WMS GetCapabilities and requests are shown below:




	
WFS GetCapabilities







http://cloudsdi.geo-solutions.it/geoserver/zaatari/ows?service=wfs&version=2.0.0&request=GetCapabilities




	
WMS GetCapabilities







http://cloudsdi.geo-solutions.it/geoserver/zaatari/ows?service=wms&version=1.3.0&request=GetCapabilities




	
A layer group showing worldview data as well as OSM data on top







http://cloudsdi.geo-solutions.it/geoserver/zaatari/wms?service=WMS&version=1.1.0&request=GetMap&layers=zaatari:Zaatari&styles=&bbox=36.28552436828613,32.27472407452737,36.36792397545432,32.31376157457074&width=768&height=363&srs=EPSG:4326&format=application/openlayers




WorldView Data




Raster data coming from DigitalGlobe, which was a time series of 5 elements, was also loaded. It is imagery from WorldView-1 (50cm resolution) but acquisition steps indicate only the years, 2013, 2016 and 2017. Some useful links are included below:




	
WMS GetCapabilities







http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?service=WMS&version=1.3.0&request=GetCapabilities




	
WCS GetCapabilities







http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?service=WCS&version=2.0.1&request=GetCapabilities




The layer is configured with a TIME dimension as follows:





<Dimension name="time" default="2017" units="ISO8601">

2013-01-01T00:00:00.000Z,2016-01-01T00:00:00.000Z,2017-01-01T00:00:00.000Z

</Dimension>






Notice that the default time for the layer is configured to be the whole 2017 year since participants assumed the image would cover that time span. Similar considerations to those introduce before about time management for WMS apply in this case.




GeoSolutions also exposed its catalog together with the properties which this time series exposes as both WMS and WFS. Some useful links below:




	
WMS GetCapabilities







http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/ows?service=WMS&version=1.3.0&request=GetCapabilities




	
WFS GetCapabilities







http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/ows?service=WFS&version=2.0.0&request=GetCapabilities




The properties accessible via the WFS layer are the following:




	
time


	
cloud_cover


	
sun_azimuth


	
sun_elevation







According to the following FeatureType Schema, obtained with this request:




http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/wfs?service=WFS&version=2.0.0&request=DescribeFeatureType&typeNames=zaatari:zaatari_worldview_timeseries_index&outputFormat=application/JSON




Note that the request returns JSON output this time, but if the outputFormat is removed it will go back to XML as the returned output format.




Filtering on this data is the same as the previous example, but since the time values span from 2013 to 2017 an inclusive filter can be “time=2013/2017”. Below are some sample requests to go from the imagery catalog to WMS and and WCS for the imagery using a CQL_FILTER.




STEP 1: Filter Imagery Catalog via WFS




Doing a GetFeature to check which imagery responds to these characteristics: sun_azimuth < 153 AND sun_elevation<38




http://cloudsdi.geo-solutions.it/geoserver/zaatari/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=zaatari:zaatari_worldview_timeseries_index&outputFormat=application%2Fjson&CQL_FILTER=sun_azimuth%20%3C%20153%20AND%20sun_elevation%3C38




There are two scenes.




STEP 2: Get a Map via WMS




http://cloudsdi.geo-solutions.it/geoserver/zaatari/wms?service=WMS&version=1.1.0&request=GetMap&layers=zaatari:zaatari_worldview_timeseries&styles=&bbox=36.28552436828613,32.27472407452737,36.36792397545432,32.31376157457074&width=768&height=363&srs=EPSG:4326&format=image/jpeg&CQL_FILTER=sun_azimuth%20%3C%20153%20AND%20sun_elevation%3C38




GeoServer filters on the fly the time series to show only those two images. Notice that the two images were acquired in 2017, hence, although a TIME value was not specified in the GetMap a valid image is still returned.




STEP 3: Get data via WCS




The following request extract the same data at lower resolution.




http://cloudsdi.geo-solutions.it/geoserver/zaatari/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=zaatari__zaatari_worldview_timeseries&subset=Long(36.28552436828613,36.36792397545432)&subset=Lat(32.27472407452737,32.31376157457074)&subset=time(%222017-01-01T00:00:00Z%22,%222017-12-31T00:00:00Z%22)&CQL_FILTER=sun_azimuth%20%3C%20153%20AND%20sun_elevation%3C38&scaleaxes=i(0.1),j(0.1)




SORT BY Support




This WV catalogue of imagery over Zaatari can be used to show the behaviour of the sortby parameter in GeoServer for WMS and WCS since the imagery at different years does not cover exactly the same area. In the following two requests the request is for GeoServer to filter results on the time property, first ascending and then descending.




http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=zaatari%3Azaatari_worldview_timeseries&SRS=EPSG%3A4326&bbox=36.28552436828613,32.27472407452737,36.36792397545432,32.31376157457074&width=768&height=363&time=2010/2017&cql_filter=sun_elevation%3C54&sortby=time%20A








Figure 59. Filter results from GeoServer using the time property, ascending sort.




http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=zaatari%3Azaatari_worldview_timeseries&SRS=EPSG%3A4326&bbox=36.28552436828613,32.27472407452737,36.36792397545432,32.31376157457074&width=768&height=363&time=2010/2017&cql_filter=sun_elevation%3C54&sortby=time%20D








Figure 60. Filter results from GeoServer using the time property, descending sort.




The same parameter can be used for WCS:




http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=zaatari_worldview_timeseries&subset=Long(36.28,36.37)&subset=Lat(32.27,32.31)&subset=time(%222010-01-01T00:00:00Z%22,%222018-01-01T00:00:00Z%22)&cql_filter=sun_elevation%3C54&scaleaxes=i(0.05),j(0.05)&sortby=time%20A




http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=zaatari_worldview_timeseries&subset=Long(36.28,36.37)&subset=Lat(32.27,32.31)&subset=time(%222010-01-01T00:00:00Z%22,%222018-01-01T00:00:00Z%22)&cql_filter=sun_elevation%3C54&scaleaxes=i(0.05),j(0.05)&sortby=time%20D




More information on the support for sortby in GeoServer can be found in the WFS reference here. All the properties that are exposed to the time series catalogue (so also cloud cover as an instance) can be used to sort the results.








WFS Filtering for Satellite Imagery Data - Expert Users


A common activity for an 'expert' geospatial data user is to connect to a catalog of imagery metadata via WFS, select a subset based on the scene characteristics and then trigger WMS for viewing, WCS for download and also WPS for processing. This flow differs from 'normal' OGC approaches in that the WFS is used to store metadata as features. This approach is actually common in large scale operational deployments.




An example based on the Zaatari data from WorldView is shown below:




STEP 1:  Load the proper OWS Context




STEP 2:  Select and load on map the WFS Service layer for the catalog of WorldView imagery over Zaatri




http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/wfs?request=getcapabilities&service=wfs&version=2.0.0




http://cloudsdi.geo-solutions.it/geoserver/zaatari/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=zaatari:zaatari_worldview_timeseries_index&maxFeatures=50&outputFormat=application%2Fjson




The catalog is shown below by using the GeoServer internal preview. This is the overall catalog from DigitalGlobe. It is a few scenes at different points in time, more or less covering the same area. See the available properties in the graphics below showing the footprints from the catalog of Worldview over Zaatari with the available filtering properties:








Figure 61. Metadata for satellite imagery over Zaatari on WFS and WMS.




The requestor can now filter on cloud cover, sun azimuth and time to extract two scenes with no cloud cover:  cloud_cover ⇐0 and sun_azimuth >158 and time after 2012-01-01T00:00:00.000 as in the following example:




The graphic and examples below shows the footprints after having applied a CQL Filter:








Figure 62. Footprint of available satellite imagery over Zaatari after applying a CQL Filter.




WFS GetFeature Request (in GeoJSON)
http://cloudsdi.geo-solutions.it/geoserver/zaatari/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=zaatari:zaatari_worldview_timeseries_index&maxFeatures=50&outputFormat=application%2Fjson&&CQL_FILTER=cloud_cover%20%3C%3D0%20and%20sun_azimuth%20%3E158%20and%20time%20after%202012-01-01T00%3A00%3A00.000




Now the requestor can go to the WMS service and filter using the same CQL_FILTER:




WMS GetMap Request




http://cloudsdi.geo-solutions.it/geoserver/zaatari/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=zaatari%3Azaatari_worldview_timeseries&CQL_FILTER=cloud_cover%20%3C%3D0%20and%20sun_azimuth%20%3E158%20and%20time%20after%202012-01-01T00%3A00%3A00.000&SRS=EPSG%3A4326&WIDTH=768&HEIGHT=363&BBOX=36.32453441619873%2C32.28879690170288%2C36.35749340057373%2C32.30437517166138




The graphic below shows the standard WMS view on the imagery associated to the catalog, unfiltered:








Figure 63. Unfiltered view of satellite imagery over Zaatari.




The graphic below shows the WMS view of the imagery when applying the same CQL_FILTER as above:








Figure 64. WMS view of satellite imagery over Zaatari using same CQL_FILTER as WFS.




Now the requestor can go to the WCS to get the raw data.






Data Deployed on Rasdaman - Daraa and Zataari


Satellite imagery and feature data were deployed on Rasdaman for both Daraa and Zataari regions and exposed via WMS and WCS. These services were also secured with OAuth2 via auth0.com, demonstrating the capability to provide access control on OGC services when required by the mission.




The following graphic and sections summarize the data deployed in this part of the information exchange platform.








Figure 65. Data deployed on Rasdaman WMS and WCS.




Data for Zaatari Region Deployed on Rasdaman




An example of a DescribeCoverage request to the Rasdaman WCS for 2013 DigitalGlobe imagery of the Zaatari refugee camp is shown below:




http://138.201.18.85/tb12/rasdaman/ows?service=WCS&version=2.0.1&request=DescribeCoverage&coverageId=Zaatari_2013




An example of a GetCoverage request to the Rasdaman WCS for 2013 DigitalGlobe imagery of the Zaatari refugee camp is shown below along with a sample result:




http://138.201.18.85/tb13/rasdaman/ows?service=WCS&version=2.0.1&request=GetCoverage&coverageId=Zaatari_2013&format=image/jpeg&subset=Lat(32.280,32.305)&subset=Long(36.310,36.346)&scaleFactor=4








Figure 66. Results of GetCoverage request to WCS for 2013 DigitalGlobe imagery over Zaatari refugee camp.




An example of a GetCoverage request to the Rasdaman WCS for 2016 DigitalGlobe imagery of the Zaatari refugee camp is shown below along with a sample result:




http://138.201.18.85/tb13/rasdaman/ows?service=WCS&version=2.0.1&request=GetCoverage&coverageId=Zaatari_2016&format=image/jpeg&subset=Lat(32.280,32.305)&subset=Long(36.310,36.346)&scaleFactor=4








Figure 67. Results of GetCoverage request to WCS for 2016 DigitalGlobe imagery over Zaatari refugee camp.




An example of a GetCoverage request to the Rasdaman WCS for 2017 DigitalGlobe imagery of the Zaatari refugee camp is shown below along with a sample result:




http://138.201.18.85/tb13/rasdaman/ows?service=WCS&version=2.0.1&request=GetCoverage&coverageId=Zaatari_2017&format=image/jpeg&subset=Lat(32.280,32.305)&subset=Long(36.310,36.346)&scaleFactor=4








Figure 68. Results of GetCoverage request to WCS for 2017 DigitalGlobe imagery over Zaatari refugee camp.




Data for Daraa Region Deployed on Rasdaman




An example of a DescribeCoverage request to the Rasdaman WCS for 2m resolution DigitalGlobe imagery ()2m resolution, 8 float bands band1 to band8, 3D cube with 4 time slices: May 2011, 2012, 2013, 2014) of the Daraa region is shown below:




http://138.201.18.85/tb12/rasdaman/ows?service=WCS&version=2.0.1&request=DescribeCoverage&coverageId=Daraa




Examples of ProcessCoverage requests to the Rasdaman WCS for the Daraa region (RGB view and a Reverse NDVI view that highlights roads and built up areas) are shown below along with sample results:




unix("2013-04-30"),%20Lat(33.05:33.15).band7%20-%20c[unix("2013-04-30"),%20Lat(33.05:33.15)].band5)%20/%20(c[unix("2013-04-30"),%20Lat(33.05:33.15)].band7%20+%20c[unix("2013-04-30"),%20Lat(33.05:33.15)].band5%20<%200.091,%20"jpeg")




unix("2013-04-30"),%20Lat(33.05:33.15).band7%20-%20c[unix("2013-04-30"),%20Lat(33.05:33.15)].band5)%20/%20(c[unix("2013-04-30"),%20Lat(33.05:33.15)].band7%20+%20c[unix("2013-04-30"),%20Lat(33.05:33.15)].band5%20<%200.091,%20"jpeg")








Figure 69. RGB view of data returned by ProcessCoverage request to WCS for Daraa region.








Figure 70. NDVI view of data returned by ProcessCoverage request to WCS for Daraa region.




Results of change detection are shown below: blue areas denote vegetation lost since May 2011, cyan and green mark vegetation lost since May 2012, and red/orange areas mark vegetation gained in May 2013.




unix("2013-04-30"),%20Lat(33.05:33.15).band7%20-%20c[unix("2013-04-30"),%20Lat(33.05:33.15)].band5)%20/%20(c[unix("2013-04-30"),%20Lat(33.05:33.15)].band7%20+%20c[unix("2013-04-30"),%20Lat(33.05:33.15)].band5%20+%20{r:0;%20b:500;%20g:0}%20*%20c[unix("2012-05-12"),%20Lat(33.05:33.15)].band7%20-%20c[unix("2012-05-12"),%20Lat(33.05:33.15)].band5)%20/%20(c[unix("2012-05-12"),%20Lat(33.05:33.15)].band7%20+%20c[unix("2012-05-12"),%20Lat(33.05:33.15)].band5%20+%20{r:0;%20b:0;%20g:500}%20*%20c[unix("2011-05-11"),%20Lat(33.05:33.15)].band7%20-%20c[unix("2011-05-11"),%20Lat(33.05:33.15)].band5)%20/%20(c[unix("2011-05-11"),%20Lat(33.05:33.15)].band7%20+%20c[unix("2011-05-11"),%20Lat(33.05:33.15)].band5,%20"jpeg")








Figure 71. Results of change detection for Daraa region.






Web Processing Service for Conflation


Conflation, also known as map matching of merging, is the process of combining two datasets based on a set of rules to produce a more complete dataset. One example is the combination of authoritative data, e.g. TIGER road data[1] with crowd-sourced data, e.g. OpenStreetMap[2]. The official data is collected with a high effort and follows strict requirements e.g. regarding data quality, which leads to a smaller frequency of updates. Crowd-sourced data on the other hand can be collected by virtually everyone e.g. by digitalizing streets from satellite imagery. The quality of the data is monitored by the community itself. Crowd-sourced data has therefore a high frequency of updates, with a trade of having the danger of poor data quality for newly collected data. Several software systems exist to perform conflation tasks, e.g. the Roadmatcher software that was investigated in the OWS-9 testbed (see OGC 12-159)[2]. In Testbed-12 the Hootenanny conflation software was investigated regarding the feasibility for web-based conflation. The software is described in the following section.




Hootenanny




Hootenanny [3] is an open source conflation tool. It features the automated and semi-automated conflation of polylines, polygons and points. It internally uses the OpenStreetMap data structure. Hootenanny software offers a command line interface. Also, a webapp is provided including a Web interface to visualize the data. In the past, a WPS 1.0.0 interface was provided as part of Hootenanny to enable web-based conflation however, the WPS 1.0.0 interface has now been deprecated footnote:https://github.com/ngageoint/hootenanny/issues/820]. Testbed-13 used the 52 North WPS, which provides a WPS 2.0.0 interface for Hootenanny.




The following data formats are supported by Hootenanny:




Import: Hootenanny can ingest from:




	
Shapefile (.shp)


	
OpenStreetMap (.osm)


	
ESRI File Geodatabase (.gdb)


	
.zip files containing shapefiles and/or .gdb files


	
geonames.org (.geonames)


	
OSM API database sources







Export: Hootenanny can export to:




	
Shapefile (.shp)


	
OpenStreetMap (.osm)


	
ESRI File Geodatabase (.gdb)


	
Web Feature Service (WFS)


	
OSM API database







Scenario




For the Mass Migration and Fit-for-Purpose scenario road datasets from the area of the Zaatari Refugee Camp should be conflated. For the authoritative dataset, road data from the United Nations was used [4]








Figure 72. UN roads data for Zaatari refugee camp.




The second dataset used for the conflation was exported from OpenStreetMap (OSM)[5]








Figure 73. OSM roads data for Zaatari refugee camp.




There are visible differences, the UN data is from December 2016, whereas the OSM data is constantly updated by the users. The conflated result looks like the following:








Figure 74. Conflated roads data from WPS for Zaatari refugee camp.




The Conflation process was accessed in the Mass Migration and Fit-for-Purpose scenario by the Expert user (Envitia client).








5.2.3. Encodings


Multiple OGC encodings were implemented to support data exchange in the platform, and demonstrated during Testbed 13. These included JSON Context documents that captured collections of services for easy access to information on the platform.




The JSON Context documents were used by the Envitia client to simplify access to data and services on the platform by Non-Expert Users. The JSON Context documents were set up by Expert Users, geospatial experts that understand the OGC services, satellite imagery and complex data sources in the platform.




The Zaatari sample context document in JSON can be found in Annex A under the Title: Zaatari Refugee Camp route analysis. This document includes references to a catalog of imagery as WFS and embeds CQL_Filters to help access imagery on WMS and WCS as needed.




The second sample Context Document in Annex A is under the Title: NASA Black Marble Global Timeseries for 2012-2016. NASA Black Marble is a global view of the Earth’s city lights acquired by Suomi National Polar Orbiting (Suomi NPP) satellite, and this context document references this data exposed as WCS and WMS.




The third OWS Context Document in Annex A is for Daraa and includes the ability to conflate existing road data sets, providing information for route analysis. In this document, there is one WPS request specifying two input data sets - United Nations (UN) roads data and OpenStreetMap (OSM) roads data.












6. Findings



This section describes findings and any associated recommendations.




The evidence obtained through Testbed 13 Mass Migration Technology Integration Experiments supports the following findings:




	
It is possible to cost-effectively develop a shared information exchange platform based on open standards for situational awareness, and coordinate humanitarian relief activities among nations and organizations. In addition, such a platform can securely enable interoperable exchange of messages.


	
Users who do not know about satellite imagery or complex geospatial data sources can access the platform using client applications that allow them to simply ask questions such as, "What are the best routes from Zaatari refugee camp to Daraa?" and get answers in an easy to understand form.


	
Geospatial data experts can configure information sources to quickly respond to a variety of user questions - with encodings such as OGC Context.


	
Relief Operations Centers can access high quality visualizations of data on the platform, to easily understand the changes in the region and mass migration over time. Access to data in these visualizations can be secure, and delivered only to authorized users.


	
Applications can access satellite imagery data on the platform using imagery metadata via WFS, select a subset based on the scenes characteristics and then trigger WMS for viewing, WCS for download and also WPS for processing. This flow differs from 'normal' OGC approaches in that the WFS is used to store metadata as features. This approach is actually common in large scale operational deployments.


	
Mobile application clients can be used in the field to provide access to data and services of the information exchange platform. In this scenario, users access data from the platform in the field on mobile devices as OGC GeoPackages (SQLite containers for geospatial feature and imagery data for use by mobile clients).  These 'field users' often do not have a stable (or any) internet connection since network infrastructure is not reliable or available throughout much of the Daraa region.


	
The platform can support advanced analytics such as conflation of feature data sets.











Appendix A: Context Encodings



Zaatari Context Document - Note the use of CQL_Filters





{
  "type": "FeatureCollection",
  "properties": {
    "lang": "en",
    "title": "Zaatari Refugee Camp route analysis",
    "keywords": [
      "fitForPurpose",
      "geoServer",
      "ows13",
      "Zaatari",
      "OSM",
      "demo"
    ],
    "taxonomy": "",
    "description": "Sample OWS context for Fit for Purpose Exercise for Zaatari",
    "timeFrame": "",
    "location": "Zaatari",
    "updated": "2017-08-01T08:00:00Z",
    "links": [
      {
        "rel": "profile",
        "href": "http://www.opengis.net/spec/owc-geojson/1.0/req/core",
        "title": "This file is compliant with version 1.0 of OWS Context"
      }
    ],
    "authors": [
      {
        "name": "GeoSolutions",
        "email": "info@geo-solutions.it",
        "uri": "http://www.geo-solutions.com"
      }
    ]
  },
  "id": 1496301789866,
  "bbox": [
    34.5,
    32,
    37.05,
    35.01
  ],
  "features": [

    {
      "type": "Feature",
      "id": "zaatari_worldview_timeseries_index",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              36.28,
              32.27
            ],
            [
              36.28,
              32.31
            ],
            [
              36.37,
              32.31
            ],
            [
              36.37,
              32.27
            ],
            [
              36.28,
              32.27
            ]
          ]
        ]
      },
      "properties": {
        "title": "Zaatari WV01 Timeseries Catalogue",
        "updated": "2017-07-29T12:00:00Z",
        "content": "Catalogue of WorldView-1 imagery over Zaatari exposed as WFS and WMS",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wfs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/ows?REQUEST=GetCapabilities&SERVICE=WFS"
              },
              {
                "code": "GetFeature",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/ows?request=GetFeature&SERVICE=WFS&VERSION=1.1.0&TYPENAME=zaatari:zaatari_worldview_timeseries_index&CQL_FILTER=sun_elevation%3E54"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries_index/ows?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fpng8&LAYERS=zaatari%3Azaatari_worldview_timeseries_index&CQL_FILTER=sun_elevation%3E54&SRS=EPSG%3A404000&WIDTH=768&HEIGHT=363&BBOX=36.261749267578125%2C32.262468338012695%2C36.393585205078125%2C32.32478141784668"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Feature",
      "id": "zaatari_worldview_timeseries",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              36.28,
              32.27
            ],
            [
              36.28,
              32.31
            ],
            [
              36.37,
              32.31
            ],
            [
              36.37,
              32.27
            ],
            [
              36.28,
              32.27
            ]
          ]
        ]
      },
      "properties": {
        "title": "Zaatari WPS conflation",
        "updated": "2017-04-10T14:00:00Z",
        "content": "Conflation operation for the zaatari data set",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.envitia.com/spec/owc-geojson/1.0/templated/wps",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://tb12.dev.52north.org/workflow-wps/WebProcessingService?service=wps&version=2.0.0&request=GetCapabilities"
              },
              {
                "code": "Execute",
                "method": "POST",
                "href": "http://tb12.dev.52north.org/workflow-wps/WebProcessingService",
                "request": {
                  "type" : "application/xml",
                  "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <wps:Execute xmlns:wps=\"http:\/\/www.opengis.net\/wps\/2.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xmlns:ows=\"http:\/\/www.opengis.net\/ows\/2.0\" xmlns:xlin=\"http:\/\/www.w3.org\/1999\/xlink\" xsi:schemaLocation=\"http:\/\/www.opengis.net\/wps\/2.0 http:\/\/schemas.opengis.net\/wps\/2.0\/wps.xsd\" service=\"WPS\" version=\"2.0.0\" response=\"document\" mode=\"sync\"> <ows:Identifier>testbed13.dsi.ConflationWorkflow<\/ows:Identifier> <wps:Input id=\"datasets\"> <wps:Reference xlin:href=\"http://geoprocessing.demo.52north.org:8080/geoserver/tb13/ows?service=WFS&amp;version=1.0.0&amp;request=GetFeature&amp;typeName=tb13:un-zataari-roads&amp;outputFormat=SHAPE-ZIP" mimeType=\"application\/x-zipped-shp\" \/> <\/wps:Input> <wps:Input id=\"datasets\"> <wps:Reference xlin:href=\"http://geoprocessing.demo.52north.org:8080/data/osm-zataari-roads.osm\" mimeType=\"application\/x-openstreetmap+xml\" \/> <\/wps:Input> <wps:Output id=\"conflated-dataset\" mimeType=\"text\/xml\" schema=\"http:\/\/schemas.opengis.net\/gml\/3.1.1\/base\/feature.xsd\" transmission=\"value\" \/><\/wps:Execute>"
                },
                "replacements":[
                ],
                "output":"wfs"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Feature",
      "id": "SettlementSrf",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              34.8844371486709,
              29.1834009533069
            ],
            [
              42.3745686975872,
              29.1834009533069
            ],
            [
              42.3745686975872,
              37.3184588992791
            ],
            [
              34.8844371486709,
              37.3184588992791
            ],
            [
              34.8844371486709,
              29.1834009533069
            ]
          ]
        ]
      },
      "properties": {
        "title": "Zaatari Refugee Camp Area",
        "updated": "2017-07-29T12:00:00Z",
        "content": "Vector Layer",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/SettlementSrf/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/wms?service=WMS&version=1.1.0&request=GetMap&layers=SettlementSrf&styles=&&WIDTH=768&HEIGHT=557&BBOX=36.31161689758301%2C32.280471324920654%2C36.34457588195801%2C32.30437517166138&srs=EPSG:4326&format=image%2Fpng&TRANSPARENT=true"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wfs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/SettlementSrf/ows?REQUEST=GetCapabilities&SERVICE=WFS"
              },
              {
                "code": "GetFeature",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/SettlementSrf/ows?request=GetFeature&SERVICE=WFS&VERSION=1.1.0&TYPENAME=SettlementSrf"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Feature",
      "id": "zaatari_worldview_timeseries",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              36.28,
              32.27
            ],
            [
              36.28,
              32.31
            ],
            [
              36.37,
              32.31
            ],
            [
              36.37,
              32.27
            ],
            [
              36.28,
              32.27
            ]
          ]
        ]
      },
      "properties": {
        "title": "Zaatari WV01 Imagery",
        "updated": "2017-07-29T12:00:00Z",
        "content": "WorldView-1 imagery over Zaatari exposed as WCS and WMS",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=zaatari_worldview_timeseries&SRS=EPSG%3A4326&bbox=36.28552436828613,32.27472407452737,36.36792397545432,32.31376157457074&width=768&height=363&time=2010/2017&cql_filter=sun_elevation%3C54&sortby=time%20A"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wcs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?REQUEST=GetCapabilities&SERVICE=WCS"
              },
              {
                "code": "GetCoverage",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/zaatari/zaatari_worldview_timeseries/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=zaatari_worldview_timeseries&subset=Long(36.28,36.37)&subset=Lat(32.27,32.31)&subset=time(%222010-01-01T00:00:00Z%22,%222018-01-01T00:00:00Z%22)&cql_filter=sun_elevation%3C54&scaleaxes=i(0.05),j(0.05)&sortby=time%20A"
              }
            ]
          }
        ]
      }
    }
  ]
}






NASA Black Marble Global Timeseries for 2012-2016 Context Document





{
	"type": "FeatureCollection",
	"properties": {
		"lang": "en",
		"title": "NASA Black Marble Global Timeseries for 2012-2016",
		"keywords": [
			"fitForPurpose",
			"geoServer",
			"ows13",
            "Daraa",
            "NASA",
			"Zataari",
			"World",
            "Black Marble"
		],
		"taxonomy": "",
		"description": "Sample OWS context for 'Fit for Purpose''",
		"timeFrame": "",
		"location": "Middle East",
		"updated": "2017-08-01T08:00:00Z",
		"links": [
			{
				"rel": "profile",
				"href": "http://www.opengis.net/spec/owc-geojson/1.0/req/core",
				"title": "This file is compliant with version 1.0 of OWS Context"
			}
		],
		"authors": [
			{
				"name": "GeoSolutions",
				"email": "info@geo-solutions.it",
				"uri": "http://www.geo-solutions.com"
			}
		]
	},
	"id": 1496301789899,
	"bbox": [
		-180, -90,
		180, 90
	],
	"features": [
     {
      "type": "Feature",
      "id": "black_marble_timeseries",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [-180, -90],
            [-180, 90],
            [180, 90],
            [180, -90],
            [-180, -90]
          ]
        ]
      },
      "properties": {
        "title": "NASA Black Marble Timeseries for 2012 and 2016",
        "updated": "2017-07-T12:00:00Z",
        "content": "NASA Black Marble Timeseries for 2012 and 2016, it is exposed as WCS and WMS",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/geosolutions/black_marble_timeseries/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/geosolutions/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=black_marble_timeseries&SRS=EPSG%3A4326&WIDTH=1900&HEIGHT=1000&BBOX=32.2998046875%2C24.466552734375%2C53.173828125%2C35.452880859375&TIME=2016"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wcs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/geosolutions/black_marble_timeseries/ows?REQUEST=GetCapabilities&SERVICE=WCS"
              },
              {
                "code": "GetCoverage",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/geosolutions/black_marble_timeseries/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=geosolutions__black_marble_timeseries&subset=Long(33,44)&subset=Lat(31,38)&subset=time(%222016-01-01T00:00:00Z%22,%2220187-01-01T00:00:00Z%22)"
              }
            ]
          }
        ]
      }
    }
  ]
}






Daraa Context Document





{
	"type": "FeatureCollection",
	"properties": {
		"lang": "en",
		"title": "Daraa",
		"keywords": [
			"fitForPurpose",
			"geoServer",
			"ows13",
            "Daraa",
            "OSM",
            "demo"
		],
		"taxonomy": "",
		"description": "This OWS context document provides the ability to conflate existing road datases (UN and OSM) providing exaustive road information for route analysis.",
		"timeFrame": "",
		"location": "Daraa",
		"updated": "2017-08-01T08:00:00Z",
		"links": [
			{
				"rel": "profile",
				"href": "http://www.opengis.net/spec/owc-geojson/1.0/req/core",
				"title": "This file is compliant with version 1.0 of OWS Context"
			}
		],
		"authors": [
			{
				"name": "GeoSolutions",
				"email": "info@geo-solutions.it",
				"uri": "http://www.geo-solutions.com"
			}
		]
	},
	"id": 1496301789865,
	"bbox": [
		34.5, 32,
		37.05, 35.01
	],
	"features": [
    {
      "type": "Feature",
      "id": "daraa_landsat8_timeseries_index",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [34.5, 32],
            [34.5, 35.01],
            [37.05, 35.01],
            [37.05, 32],
            [34.5, 32]
          ]
        ]
      },
      "properties": {
        "title": "Daraa Landsat 8 Catalogue of Imagery",
        "updated": "2017-07-29T12:00:00Z",
        "content": "Catalogue of Landsat 8 imagery over Daraa, it is exposed as WFS and WMS",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wfs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/ows?REQUEST=GetCapabilities&SERVICE=WFS"
              },
              {
                "code": "GetFeature",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/ows?request=GetFeature&SERVICE=WFS&VERSION=1.1.0&TYPENAME=daraa:daraa_landsat8_timeseries_index&CQL_FILTER=sun_elevation%3C51"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries_index/ows?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fpng8&TRANSPARENT=true&STYLES&LAYERS=daraa%3Adaraa_landsat8_timeseries_index&SRS=EPSG%3A4326&WIDTH=950&HEIGHT=700&BBOX=34.48883056640625%2C32.354736328125%2C37.09808349609375%2C34.27734375&CQL_FILTER=sun_elevation%3C51"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Feature",
      "id": "SettlementSrf",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
            [
                [35.9759318108738,32.5086069097217],
                [36.1709080890199,32.5086069097217],
                [36.1709080890199,32.6754186248039],
                [35.9759318108738,32.6754186248039],
                [35.9759318108738,32.5086069097217]
            ]
        ]
      },
      "properties": {
        "title": "Daraa Refugee Camp Area",
        "updated": "2017-06-29T12:00:00Z",
        "content": "Vector Layer for settlements from OSM over Daraa",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/SettlementSrf/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/wms?service=WMS&version=1.1.0&request=GetMap&layers=SettlementSrf&styles=&bbox=35.97593181087375,32.50860690972173,36.17090808901993,32.675418624803896&width=768&height=657&srs=EPSG:4326&format=image%2Fpng&transparent=true"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wfs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/SettlementSrf/ows?REQUEST=GetCapabilities&SERVICE=WFS"
              },
              {
                "code": "GetFeature",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/SettlementSrf/ows?request=GetFeature&SERVICE=WFS&VERSION=1.1.0&TYPENAME=daraa:SettlementSrf"
              }
            ]
          }
        ]
      }

    },
    {
      "type": "Feature",
      "id": "daraa_landsat8_timeseries",
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [34.5, 32],
            [34.5, 35.01],
            [37.05, 35.01],
            [37.05, 32],
            [34.5, 32]
          ]
        ]
      },
      "properties": {
        "title": "Daraa Landsat 8 Timeseries Imagery",
        "updated": "2017-07-29T12:00:00Z",
        "content": "Landsat 8 Timeseries over Daraa, it is exposed as WCS and WMS",
        "categories": [
          {
            "term": true,
            "scheme": "http://www.opengis.net/owc/active"
          },
          {
            "term": 1,
            "scheme": "http://www.envitia.com/horizon/layer/opacity"
          }
        ],
        "offerings": [
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wms",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/ows?REQUEST=GetCapabilities&SERVICE=WMS"
              },
              {
                "code": "GetMap",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&FORMAT=image%2Fjpeg&TRANSPARENT=true&STYLES&LAYERS=daraa_landsat8_timeseries&SRS=EPSG%3A4326&WIDTH=768&HEIGHT=648&BBOX=36.06820106506348%2C32.591285705566406%2C36.13411903381348%2C32.64690399169922&time=2017&cql_filter=sun_elevation%3E51"
              }
            ]
          },
          {
            "code": "http://www.opengis.net/spec/owc-geojson/1.0/req/wcs",
            "operations": [
              {
                "code": "GetCapabilities",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/ows?REQUEST=GetCapabilities&SERVICE=WCS"
              },
              {
                "code": "GetCoverage",
                "method": "GET",
                "href": "http://cloudsdi.geo-solutions.it/geoserver/daraa/daraa_landsat8_timeseries/ows?service=WCS&version=2.0.0&request=GetCoverage&coverageId=daraa_landsat8_timeseries&subset=Long(36.06,36.14)&subset=Lat(32.59,32.65)&subset=time(%222017-01-01T00:00:00Z%22,%222018-01-01T00:00:00Z%22)&cql_filter=sun_elevation%3E51"
              }
            ]
          }
        ]
      }
    }
  ]
}










Appendix B: Revision History



[



Table 2. Revision History	Date	Release	Editor	Primary clauses modified	Descriptions
	May 15, 2017
	Initial Engineering Reports (IER)
	J. Harrison
	all
	initial version

	July 31, 2017
	Updated Content
	J. Harrison
	all
	architecture and content integrated

	September 30, 2017
	Preliminary Draft Engineering Reports (DERs)
	J. Harrison
	all
	added TIE content and preparation for publication








Appendix C: Bibliography



[1] European Union: The European Union and the Sahel - fact sheet, European Union External Action Service (2017), https://eeas.europa.eu/headquarters/headquarters-homepage_en/4099




[2] Rieke, M., Pross, B.: OGC® OWS-9 Cross Community Interoperability (CCI) Conflation with Provenance Engineering Report, OGC 12-159, Open Geospatial Consortium (2012)




[3] Harrison, J.: OGC Testbed-13: Fit-for-Purpose Engineering Report, OGC 17-038,  Open Geospatial Consortium (2018)




[4] Matheus, A.: OGC Testbed-13: Security Engineering Report, OGC 17-021,  Open Geospatial Consortium (2018)













1. https://www.census.gov/geo/maps-data/data/tiger-line.html



2. http://www.openstreetmap.org/



3. https://github.com/ngageoint/hootenanny



4. https://github.com/impact-initiatives/reach-jor-zaatari-data/raw/master/data/roads/Roads_2016_12.shp.zip?raw=true



5. http://www.openstreetmap.org/export#map=15/32.2956/36.3382






Last updated 2018-01-18 12:22:55 EST




