
CR_SensorML_GML32.doc

The OGC Technical Committee Policies & Procedures 05-020r3




 Open Geospatial Consortium
OGC Doc 08-127

		CR-Form-v3



		CHANGE REQUEST



		



		(


		SensorML 

		CR

		?

		(

rev

		-

		(

Current version:

		1.0.1

		(




		



		For HELP on using this form, see bottom of this page or look at the pop-up text over the (
 symbols.



		



		Proposed change affects:
(


		AS 

		

		Imp Spec

		X

		Best Practices Paper 

		

		Other

		



		



		Title:
(


		GML 3.2 implementation of XML schemas in 07-000



		

		



		Source:
(


		CSIRO



		

		



		Work item code:
(


		

		

		Date: (


		2008-08-25



		

		

		

		

		



		Category:
(


		B

		

		



		

		Use one of the following categories:
F  (Critical correction)
A  (corresponds to a correction in an earlier release)
B  (Addition of feature), 
C  (Functional modification of feature)
D  (Editorial modification)


Detailed explanations of the above categories can
be found in the TC Policies and Procedures.

		



		

		



		Reason for change:
(


		A GML 3.2 binding of the SensorML schemas is required for applications that wish to use the current version of GML 3.2. It is also necessary to underpin an orderly revision process for SensorML and SWE Common, in which implementation specifics are handled separately from functional changes.  



		

		



		Summary of change:
(


		1. Add ANNEX E "GML 3.2 XML Schemas for SWE Common (Normative)" containing the schema documents in the accompanying zip document


Proposed namespace http://www.opengis.net/swe/1.0/gml32 

Dependencies


- GML 3.2 http://www.opengis.net/gml/3.2 

2. Add ANNEX F "GML 3.2 XML Schemas for SensorML (Normative)" containing the schema documents in the accompanying zip document

Proposed namespace http://www.opengis.net/sensorML/1.0/gml32

Dependencies: 


- GML 3.2 http://www.opengis.net/gml/3.2 

- SWE Common http://www.opengis.net/swe/1.0/gml32 





		

		



		Consequences if 
(

not approved:

		1. GML 3.2 applications incompatible with SensorML and SWE Common


2. Confused process for functional upgrades 



		

		



		Clauses affected:
(


		New Annex E and F



		

		



		Other specs
(


		X

		 Other core specifications
(


		Observations and Measurements



		Affected:

		

		 Abstract specifications

		



		

		

		 Best Practices Document

		



		Supporting Doc.        (


		



		

		



		Other comments:
(


		The strategy of issuing GML 3.2 bindings of the current schema, separate from upgrades to the model, appears to be consistent with recent updates to OGC's versioning and namespace policies. 

The details of the namespace pattern have been discussed with Clemens Portele and Paul Daisey. 


One minor issue that emerged is that use of the schema/@version tag may be improved. Per OGC policy the namespace name shall be changed for both major and minor upgrades. This means that the namespace name is the key identifier for a schema, and the version attribute can be used to supplement this with the bug-fix number, rather than reproducing information encoded or implied by the namespace name. 



		Status                         (


		



		Disposition                (


		





How to create CRs using this form:


Comprehensive information and tips about how to create CRs can be found at: https://portal.opengeospatial.org/files/?artifact_id=10678.  Below is a brief summary:


Fill out the above form. The symbols above marked ( contain pop-up help information about the field that they are closest to.


Obtain the latest version for the release of the specification to which the change is proposed. Use the MS Word "revision marks" feature (also known as "track changes") when making the changes. All Open GIS specifications can be downloaded from the OGC server under http://www.opengeospatial.org/specs/ 


If a Word version of the document is not available, please contact the TCC or his designee.


With "track changes" disabled, paste the entire CR form (use CTRL-A to select it) into the specification just in front of the clause containing the first piece of changed text.  Delete those parts of the specification that are not relevant to the change request.
































�PAGE \# "'Page: '#'�'"  �� Enter the AS or Implementation Specification Name and Number in this box. For example, WMS 1.1.1 or GML 3.0. Do not prefix the number with anything, i.e. do not use "OGC", "GSM" or "OGC" etc.


�PAGE \# "'Page: '#'�'"  �� Enter the CR number here. This number is allocated by the OGC support team.


�PAGE \# "'Page: '#'�'"  �� Enter the revision number of the CR here. If it is the first version, use a "-".


�PAGE \# "'Page: '#'�'"  �� Enter the version of the specification here. This number is the version of the specification to which the CR will be applied if it is approved. Make sure that the more recent version of the specification (of the relevant release) is used when creating the CR. If unsure what the latest version is, go to http://www.opengeospatial.org.


�PAGE \# "'Page: '#'�'"  �� For help on how to fill out a field, place the mouse pointer over the special symbol closest to the field in question.


�PAGE \# "'Page: '#'�'"  �� Mark one or more of the boxes with an X. AS = Abstract Specification, IS = Implementation Specification, BPD – Best Practices Document, Other = DIPR/IPR, etc.


�PAGE \# "'Page: '#'�'"  �� Enter a concise description of the subject matter of the CR. It should be no longer than one line.


�PAGE \# "'Page: '#'�'"  �� Enter the source of the CR. This is either (a) one or more OGC members or, (b) if a (sub)working group has already reviewed and agreed the CR, then list the group as the source.


�PAGE \# "'Page: '#'�'"  �� IF there is one, enter the work item code or issue code that is applicable to the change. These codes will relate to Work Items identified in a WBS associated with a particular OGC initiative. If there is no code, leave blank.


�PAGE \# "'Page: '#'�'"  �� Enter the date on which the CR was last revised.


�PAGE \# "'Page: '#'�'"  �� Enter a single letter corresponding to the most appropriate category listed below.


�PAGE \# "'Page: '#'�'"  �� Enter text which explains why the change is necessary.


�PAGE \# "'Page: '#'�'"  �� Enter text which describes the most important components of the change. i.e. How the change is made.


�PAGE \# "'Page: '#'�'"  �� Enter here the consequences if this CR was to be rejected. It is necessary to complete this section only if the CR is of category "F" (i.e. essential correction).


�PAGE \# "'Page: '#'�'"  �� Enter each the number of each clause which contains changes.


�PAGE \# "'Page: '#'�'"  �� Enter an X in the box if any other specifications are affected by this change.


�PAGE \# "'Page: '#'�'"  �� If known, list here the specification or best practices documents that are affected or the CRs which are linked.


�PAGE \# "'Page: '#'�'"  ��Explanation of Field: If there is associated documentation, such as an lengthy change request or new text for consideration, please reference the OGC document number and document title.


�PAGE \# "'Page: '#'�'"  �� Enter any other information which may be needed by the group being requested to approve the CR. This could include special conditions for it's approval which are not listed anywhere else above.


�PAGE \# "'Page: '#'�'"  ��This is the status of the change request. For a new submission, please enter “NEW”. Other options as the change request is processed are: Assigned, Verified, Resolved, and Closed.


�PAGE \# "'Page: '#'�'"  ��This field is used to assign the RWG decision for this Change Request. Options include: Deferred, Accepted, and Rejected.





PAGE  

2

Last Revision Date: 25 August 2008

Page 






SensorML/1.0.1_gml32/base.xsd
 
	
	 
		 Base class definitions for core SensorML

				Copyright (c) 2002 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	 
	
	 
	
	 
	
	 
		 
			 Main Abstract SensorML Object
		
		 
			 
				 
					 
						 
							 
							 
								 
									 The gml:name property should be used only as a label in SensorML, and thus is limited to one occurence. Multiple robust and well defined identifiers can be provided in the identification section.
                           
								
							
							 
								 
									 Specifies the possible extent of the component location
								
							
						
					
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Means of providing security constraints of description
		
		 
			 
				 
			
		
	
	
	 
		 
			 based on IC:ISM definition
		
		 
			 
		
	
	
	 
		 
			 Means of providing time validity constraint of description
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Means of providing legal constraints of description
		
		 
			 
				 
			
			 
		
	
	
	 
		 
			 based on IC:DDMS definition
		
		 
			 
				 
			
			 
			 
			 
			 
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Means of providing a list of keywords (with a codeSpace) for quick discovery
		
		 
			 
				 
					 
						 
							 
						
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 Means of providing various identity and alias values, with types such as "longName", "abbreviation", "modelNumber", "serialNumber", whose terms can be defined in a dictionary
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
									 
								
							
						
						 
					
				
			
			 
		
	
	
	 
		 
			 Means of specifying classification values with types such as "sensorType", "intendedApplication", etc., whose terms can be defined in a dictionary
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
									 
								
							
						
						 
					
				
			
			 
		
	
	
	 
		 
			 A well defined token used to specify identifier and classifier values (single spaces allowed)
		
		 
			 
				 
				 
			
			 
				 
					 Points to the term definition using a URI. Term definitions are things like uid, shortName, sensorType, application, etc...
				
			
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 Relevant contacts for that object
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Allows to group several contacts together in a list that can be referenced as a whole
		
		 
			 
				 
				 
					 
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 based on IC:DMMS
		
		 
			 
				 
				 
				 
				 
				 
				 
			
			 
		
	
	
	 
		 
			 based on ISO 19115
		
		 
			 
				 
				 
				 
				 
			
			 
		
	
	
	 
		 
			 
				 
					 
						 
							 
							 
						
					
				
				 
					 
						 
							 
							 
							 
							 
							 
							 
						
					
				
				 
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Relevant documentation for that object
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Document record with date/time, version, author, etc. pointing to an online resource related to the enclosing object
		
		 
			 
				 
				 
					 
						 Date of creation
					
				
				 
					 
						 Person who is responsible for the document
					
				
				 
					 
						 Specifies the fornat of the file pointed to by onlineResource
					
				
				 
					 
						 Points to the actual document corresponding to that version
					
				
			
			 
			 
		
	
	
	 
		 
			 List of documents related to the enclosing object
		
		 
			 
				 
				 
					 
						 
							 
						
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 History of the object described (Recalibration, adjustments, etc...)
		
		 
			 
				 
			
			 
		
	
	
	 
		 
			 List of events related to the enclosing object
		
		 
			 
				 
					 
						 
							 
						
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 Event record (change to the object) including a date/time, description, identification and additional references and metadata
		
		 
			 
				 
					 
						 Date/Time of event
					
				
				 
				 
				 
				 
			
			 
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 Capability list for quick discovery
		
		 
			 
				 
			
			 
			 
		
	
	
	 
		 
			 Characteristic list for quick discovery
		
		 
			 
				 
			
			 
			 
		
	




SensorML/1.0.1_gml32/ChangeLog.txt
OpenGIS(r) SensorML v1.0.1
==========================


This ChangeLog contains the changes for SensorML.
  * v0.0.0 approved in June 2006
  * v1.0.0 approved 23 June 2007 and published as sensorML 1.0.0 defined in the OGC SensorML document 07-000
  * v1.0.1 published as sensorML 1.0.1 defined in the OGC SensorML document 07-122r2

See the tail end of the ChangeLog for most recent details.


===============================================================================

Changes in SensorML version 1.0 (since Version 0.0, approved June 2006):

2006-09-06:
(1) added gml4sml.xsd compiled using GML subsetting stylesheets
(2) renamed sweImports.xsd to swe4sml.xsd
(3) removed PropertyList in base.xsd -> using swe:DataGroup instead
(4) renamed coordinateSystem.xsd to referenceFrame.xsd
(5) added spatialReferenceFrame and temporalReferenceFrame in referenceFrame.xsd

2006-09-06
(1) now deriving everything from gml:AbstractFeature by restriction in base.xsd
(2) global reorganization of all .xsd files
(3) renamed processes/ProcessList/process to components/ComponentList/component in process.xsd

2006-09-07
(1) derived sml:AbstractComponentType from sml:AbstractProcessType by extension
    adding sml:spatialReferenceFrame, sml:temporalReferenceFrame, gml:boundedBy, gml:location
    sml:interfaces, sml:inputs, sml:outputs, sml:parameters.
(2) Component derives from AbstractComponentType by simply adding an optional method
(3) System derives from AbstractComponentType by adding sml:components, sml:positions

2006-09-12
(1) added additional properties in Event as requested

2006-10-10
(1) Fixed to use SWE common AbstractRecordType instead of AbstractDataGroupType
(2) Removed referenceFrame.xsd schema since it consisted only of properties using gml:CRS -> moved to system.xsd

2006-10-11
(1) Harmonize use of onlineResource in both ResponsibleParty and Document objects
(2) Reordered capabilities and characteristics

2006-12-18 (svn version 1306)
(1) changed imports from gml 3.2.0 to gml 3.1.1 and fixed discepancies in element names

2007-01-24
(1) Harmonized with latest changes to SWE Common, mostly:
	(a) import paths and namespace fixes to 0.0.0 and 0.0 respectively
	(b) swe:propertyName attribute to xs:token
	(c) _DataRecord to AbstractDataRecord

2007-05-09
(1) BUG FIX: Made choice in IoComponentPropertyType optional in order to allow xlink to be used

=== sensorML v1.0.0 approved 23 June 2007 and published as sensorML 1.0.0 defined in the OGC SensorML document 07-000 ===

2007-07-24
(1) Removed "base" directory
(2) Moved "ic" folder location parallel to "sensorML" folder
(3) Changed imported schema location to relative paths according to OGC policy

2007-07-24
(1) Changed all sweCommon imports to point to version 1.0.1
(2) Updated SML namespace version to 1.0.1

2007-10-25 - Mike Botts, Simon Cox, Kevin Stegemoller
Changes based on Corrigendum 1 (07-122r2):
(1) import sweCommon 1.0.1
(2) updated namespace version to 1.0.1
(3) in base.xsd, added "name" attribute to "characteristic" and "capability"
elements to reflect proper relationship to input, output, and parameters
(4) Added copyright statement
(5) Minor documentation changes

=== sensorML v1.0.1 published as sensorML 1.0.1 defined in the OGC SensorML document 07-122r2 ===

2008-08-22 - Simon Cox
GML 3.2 implementation of SensorML
1. Changed target namespace to http://www.opengis.net/sensorML/1.0/gml32 in all documents
2. Change GML dependency to <xs:import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/> in all documents
3. Change SWE Common dependency to <xs:import namespace="http://www.opengis.net/swe/1.0/gml32" schemaLocation="../../sweCommon/1.0.1_gml32/swe.xsd"/> in all documents
4. In process.xsd and system.xsd change sml:_Process to sml:AbstractProcess per GML 3.2 conventions
5. In system.xsd change gml:_Curve to gml:AbstractCurve per GML 3.2 conventions



SensorML/1.0.1_gml32/method.xsd
 
	 
		 Defines Process Method

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	 
	
	 
		 
			 Method describing a process (Can also be a dictionary entry)
		
	
	 
		 
			 Complex Type for process methods definition
		
		 
			 
				 
					 
					 
						 
							 Text and/or language defining rules for process profile (e.g. inputs, outputs, parameters, and metadata)
						
						 
							 
								 
									 
										 
											 
												 
												 Textual description of the i/o structure
												
											
											 
										
									
								
							
						
					
					 
						 
							 Textual and/or MathML description of the algorithm
						
						 
							 
								 
									 
										 
											 
												 
												 Textual description of the algorithm
												
											
											 
												 
												 Includes or reference a MathML doc specifying the maths of the algorithm
												
												 
												 
												 
												
												 
												
											
										
									
								
							
						
					
					 
						 
							 Points to the reference implementation of this process in the specified programming language (can be a SensorML process chain)
						
						 
							 
								 
								 
									 
										 
											 
												 
												 Textual description of the algorithm
												
											
											 
											 
												 
												 
												
											
											 
												 
												 
												
											
										
										 
										 
										 
									
								
							
							 
						
					
				
			
		
	
	
	 
		 
			 process method
		
	
	 
		 
			 
		
		 
	
	
	 
		 
			 substitutionGroup for languages that define rules
		
	
	 
		 
	
	 
		 
			 Includes or references a schematron doc for enforcing process constraints
		
		 
			 
				 
					 
						 
					
				
			
		
	
	 
		 
			 Includes or references a relaxNG doc for enforcing process constraints
		
		 
			 
				 
					 
						 
					
				
			
		
	




SensorML/1.0.1_gml32/process.xsd
 
	 
		 Defines Basic Process Elements and Types for SensorML

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	 
		 
			 base substitution group for all processes
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 Group containing all metadata information
		
		 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Complex Type for all soft-typed processes
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 list of input signals
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 list of output signals
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 list of parameters
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 Simple atomic process defined using a ProcessMethod
		
	
	 
		 
			 Complex Type for atomic processes
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 Process formed by chaining sub-processes
		
	
	 
		 
			 Complex Type for process chains
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Collection of subprocesses that can be chained using connections
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
									 
									 
								
							
						
					
				
			
			 
		
	
	
	 
		 
			 Process with no inputs representing a source of data (Tables, Observations...) for other processes to connect to.
		
	
	 
		 
			 
				 
					 
						 
							 
								 
									 
										 
										 
									
									 
								
							
							 
								 
									 
										 
									
								
							
						
						 
							 
								 
							
						
					
				
			
		
	
	
	 
		 
			 provides links between processes or between data sources and processes
		
		 
			 
				 
					 
						 
							 
						
					
				
			
		
	
	
	 
		 
			 Specify a connection between two elements
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Link object used to make connections between processes
		
		 
			 
				 
					 
						 
					
				
				 
					 
						 
					
				
			
			 
		
	
	
	 
		 
	
	
	 
		 
			 Special Link to handle accessing array elements sequentially
		
		 
			 
				 
					 
						 
							 
								 
							
						
						 
							 
								 
							
						
					
					 
						 
							 
								 
							
						
						 
							 
								 
							
						
					
				
				 
			
		
	
	
	
	
	
	 
		 
			 
				 
					 
					 
					 
					 
						 
						 
							 
							 
							 
						
					
				
			
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
			 
		
		 
		 
	




SensorML/1.0.1_gml32/Readme.txt
OpenGIS(r) SensorML 1.0.1 - ReadMe.txt

Sensor Model Language (SensorML) v1.0.1

The SensorML schema were approved as Version 1.0.0 by the OGC membership
on 23 June 2007.  They are defined in the OGC SensorML document 07-000.
Corrigendum 1 (OGC 07-122r2) made changes to these and were released as
sensorML 1.0.1.

See ChangeLog.txt for additional details.

-----------------------------------------------------------------------

Policies, Procedures, Terms, and Conditions of OGC(r) are available
  http://www.opengeospatial.org/ogc/policies/ .

Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved.





SensorML/1.0.1_gml32/sensorML.xsd
 
	 
		 SensorML document root definition

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	 
		 
			 SensorML document root
		
		 
			 
				 
				 
					 
						 
							 
							 
							 
						
						 
					
				
			
			 
		
	




SensorML/1.0.1_gml32/system.xsd
 
	 
		 Component and System objects for core SensorML

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	 
		 
			 Complex Type to allow creation of component profiles by extension
		
		 
			 
				 
					 
					 
					 
						 
						 
					
					 
					 
				
			
		
	
	
	 
		 
			 Complex Type for all generic components (soft typed inputs/outputs/parameters)
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Textual definition of a spatial frame axes (origin, orientation). Spatial frames can be related to one another by specifying relative positions.
		
		 
			 
				 
			
		
	
	 
		 
			 Textual definition of a temporal frame (time origin). Temporal frames can be related to one another by specifying relative times.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Uses a gml:Point for a fixed location or a (time dependant) curve for time variable location
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Full position (location + orientation) given by a swe:Position or a Process (if variable)
		
		 
			 
				 
				 
				 
			
			 
			 
		
	
	
	 
		 
			 Provide the ability to relate  a local time frame to a reference time frame
		
		 
			 
				 
				 
			
			 
			 
		
	
	
	 
		 
			 Atomic SensorML Component
		
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 System is a composite component containing sub-components.
		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Relative positions of the System components
		
		 
			 
				 
					 
						 
							 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 List of interfaces useable to access System inputs and outputs
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 
				 
			
			 
			 
		
	
	
	 
		 
			 Interface definition based on the OSI model. (http://en.wikipedia.org/wiki/OSI_model)
		
		 
			 
				 
					 
						 Layer 8 (not in OSI). Type of web service used to access the data. (Ex: SOS, WCS, WFS)
					
				
				 
					 
						 Layer 7 of the OSI model. Provides a means for the user to access information on the network through an application. (Ex: HTTP, SMTP, FTP, XMPP, Telnet, NTP, RTP, NFS)
					
				
				 
					 
						 Layer 6 of the OSI model. Transforms the data to provide a standard interface for the Application layer. (Ex: SSL, TLS, ASCII, MIDI, MPEG, SWECommon)
					
				
				 
					 
						 Layer 5 of the OSI model. Controls the dialogues (sessions) between computers by establishing, managing and terminating connections between the local and remote application. (Ex: NetBios, TCP session establishment)
					
				
				 
					 
						 Layer 4 of the OSI model. Provides transparent transfer of data between end users and can control reliability of a given link. (Ex: TCP, UDP, SPX)
					
				
				 
					 
						 Layer 3 of the OSI model. Provides functional and procedural means of transfering data from source to destination via one or more networks while insuring QoS. (Ex: IP, ICMP, ARP, IPSec, IPX)
					
				
				 
					 
						 Layer 2 of the OSI model. Provides functional and procedural means of transfering data between network entities and detecting/correcting errors. (Ex: Ethernet, 802.11, Token ring, ATM, Fibre Channel)
					
				
				 
					 
						 Layer 1 of the OSI model. Provides all electrical and physical characteristics of the connection including pin layouts, voltages, cables specifcations, etc... (Ex: RS232, 100BASE-T, DSL, 802.11g)
					
				
				 
					 
						 Layer 0 (not is OSI). Type of connector used. (Ex: DB9, DB25, RJ45, RJ11, MINIDIN-8, USB-A, USB-B)
					
				
			
			 
		
	
	
	 
		 
			 
			 
		
		 
	
	
	 
		 
			 
			 
			 
			 
		
		 
	
	
	 
		 
			 Special Type of system used to describe large arrays of almost identical components. An indexing mechanism can be used to vary certain parameters according to one or more indices value
		
	
	
	 
		 
			 
				 
					 
					 
					 
						 
							 
								 
									 
										 
											 
												 
												 
												 
												 
												 
												 
												 
												
												 
												
												
												 
												
												
												
											
										
									
								
							
						
					
					 
					 
					 
				
			
		
	




SensorML/1.0.1_gml32/.svn/all-wcprops
K 25
svn:wc:ra_dav:version-url
V 62
/ogc-projects/!svn/ver/2455/ows/swe/trunk/sensorML/1.0.1_gml32
END
sensorML.xsd
K 25
svn:wc:ra_dav:version-url
V 75
/ogc-projects/!svn/ver/2460/ows/swe/trunk/sensorML/1.0.1_gml32/sensorML.xsd
END
system.xsd
K 25
svn:wc:ra_dav:version-url
V 73
/ogc-projects/!svn/ver/2460/ows/swe/trunk/sensorML/1.0.1_gml32/system.xsd
END
ChangeLog.txt
K 25
svn:wc:ra_dav:version-url
V 76
/ogc-projects/!svn/ver/2456/ows/swe/trunk/sensorML/1.0.1_gml32/ChangeLog.txt
END
base.xsd
K 25
svn:wc:ra_dav:version-url
V 71
/ogc-projects/!svn/ver/2460/ows/swe/trunk/sensorML/1.0.1_gml32/base.xsd
END
Readme.txt
K 25
svn:wc:ra_dav:version-url
V 73
/ogc-projects/!svn/ver/2455/ows/swe/trunk/sensorML/1.0.1_gml32/Readme.txt
END
process.xsd
K 25
svn:wc:ra_dav:version-url
V 74
/ogc-projects/!svn/ver/2460/ows/swe/trunk/sensorML/1.0.1_gml32/process.xsd
END
method.xsd
K 25
svn:wc:ra_dav:version-url
V 73
/ogc-projects/!svn/ver/2460/ows/swe/trunk/sensorML/1.0.1_gml32/method.xsd
END




SensorML/1.0.1_gml32/.svn/entries
9

dir
2455
https://svn.opengeospatial.org/ogc-projects/ows/swe/trunk/sensorML/1.0.1_gml32
https://svn.opengeospatial.org/ogc-projects



2008-08-22T02:05:04.530425Z
2455
scox


svn:special svn:externals svn:needs-lock


















0
�
sensorML.xsd
file
2460



2008-08-22T12:53:43.937500Z
ad6a614c465868a56c8307f1f6cdf304
2008-08-22T13:01:04.381981Z
2460
scox





















1867
�
system.xsd
file
2460



2008-08-22T12:54:03.828125Z
69b10af42d28bd4f8423c3c581d29f5c
2008-08-22T13:01:04.381981Z
2460
scox





















15430
�
ChangeLog.txt
file
2456



2008-08-22T02:07:27.741109Z
447653c5200d937910ecf3d990b50464
2008-08-22T02:07:47.020893Z
2456
scox





















3933
�
base.xsd
file
2460



2008-08-22T12:52:45.890625Z
fe6a02d3d20ad2adadbcb1814d90536f
2008-08-22T13:01:04.381981Z
2460
scox





















21052
�
process.xsd
file
2460



2008-08-22T12:53:28.531250Z
c92256a6fc42fccbfb66d8c1fd44ae87
2008-08-22T13:01:04.381981Z
2460
scox





















17223
�
Readme.txt
file




2007-11-12T23:06:33.937500Z
622c321daea57b06711ee292caccc03e
2008-08-22T02:05:04.530425Z
2455
scox





















622
�
method.xsd
file
2460



2008-08-22T12:53:05.640625Z
3da7abdba8dc63c231b8d0bc0e648812
2008-08-22T13:01:04.381981Z
2460
scox





















8008
�




SensorML/1.0.1_gml32/.svn/format
9




SensorML/1.0.1_gml32/.svn/text-base/base.xsd.svn-base
 
	
	 
		 Base class definitions for core SensorML

				Copyright (c) 2002 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	 
	
	 
	
	 
	
	 
		 
			 Main Abstract SensorML Object
		
		 
			 
				 
					 
						 
							 
							 
								 
									 The gml:name property should be used only as a label in SensorML, and thus is limited to one occurence. Multiple robust and well defined identifiers can be provided in the identification section.
                           
								
							
							 
								 
									 Specifies the possible extent of the component location
								
							
						
					
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Means of providing security constraints of description
		
		 
			 
				 
			
		
	
	
	 
		 
			 based on IC:ISM definition
		
		 
			 
		
	
	
	 
		 
			 Means of providing time validity constraint of description
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Means of providing legal constraints of description
		
		 
			 
				 
			
			 
		
	
	
	 
		 
			 based on IC:DDMS definition
		
		 
			 
				 
			
			 
			 
			 
			 
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Means of providing a list of keywords (with a codeSpace) for quick discovery
		
		 
			 
				 
					 
						 
							 
						
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 Means of providing various identity and alias values, with types such as "longName", "abbreviation", "modelNumber", "serialNumber", whose terms can be defined in a dictionary
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
									 
								
							
						
						 
					
				
			
			 
		
	
	
	 
		 
			 Means of specifying classification values with types such as "sensorType", "intendedApplication", etc., whose terms can be defined in a dictionary
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
									 
								
							
						
						 
					
				
			
			 
		
	
	
	 
		 
			 A well defined token used to specify identifier and classifier values (single spaces allowed)
		
		 
			 
				 
				 
			
			 
				 
					 Points to the term definition using a URI. Term definitions are things like uid, shortName, sensorType, application, etc...
				
			
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 Relevant contacts for that object
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Allows to group several contacts together in a list that can be referenced as a whole
		
		 
			 
				 
				 
					 
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 based on IC:DMMS
		
		 
			 
				 
				 
				 
				 
				 
				 
			
			 
		
	
	
	 
		 
			 based on ISO 19115
		
		 
			 
				 
				 
				 
				 
			
			 
		
	
	
	 
		 
			 
				 
					 
						 
							 
							 
						
					
				
				 
					 
						 
							 
							 
							 
							 
							 
							 
						
					
				
				 
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Relevant documentation for that object
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Document record with date/time, version, author, etc. pointing to an online resource related to the enclosing object
		
		 
			 
				 
				 
					 
						 Date of creation
					
				
				 
					 
						 Person who is responsible for the document
					
				
				 
					 
						 Specifies the fornat of the file pointed to by onlineResource
					
				
				 
					 
						 Points to the actual document corresponding to that version
					
				
			
			 
			 
		
	
	
	 
		 
			 List of documents related to the enclosing object
		
		 
			 
				 
				 
					 
						 
							 
						
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 History of the object described (Recalibration, adjustments, etc...)
		
		 
			 
				 
			
			 
		
	
	
	 
		 
			 List of events related to the enclosing object
		
		 
			 
				 
					 
						 
							 
						
						 
						 
					
				
			
			 
		
	
	
	 
		 
			 Event record (change to the object) including a date/time, description, identification and additional references and metadata
		
		 
			 
				 
					 
						 Date/Time of event
					
				
				 
				 
				 
				 
			
			 
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 Capability list for quick discovery
		
		 
			 
				 
			
			 
			 
		
	
	
	 
		 
			 Characteristic list for quick discovery
		
		 
			 
				 
			
			 
			 
		
	




SensorML/1.0.1_gml32/.svn/text-base/ChangeLog.txt.svn-base
OpenGIS(r) SensorML v1.0.1
==========================


This ChangeLog contains the changes for SensorML.
  * v0.0.0 approved in June 2006
  * v1.0.0 approved 23 June 2007 and published as sensorML 1.0.0 defined in the OGC SensorML document 07-000
  * v1.0.1 published as sensorML 1.0.1 defined in the OGC SensorML document 07-122r2

See the tail end of the ChangeLog for most recent details.


===============================================================================

Changes in SensorML version 1.0 (since Version 0.0, approved June 2006):

2006-09-06:
(1) added gml4sml.xsd compiled using GML subsetting stylesheets
(2) renamed sweImports.xsd to swe4sml.xsd
(3) removed PropertyList in base.xsd -> using swe:DataGroup instead
(4) renamed coordinateSystem.xsd to referenceFrame.xsd
(5) added spatialReferenceFrame and temporalReferenceFrame in referenceFrame.xsd

2006-09-06
(1) now deriving everything from gml:AbstractFeature by restriction in base.xsd
(2) global reorganization of all .xsd files
(3) renamed processes/ProcessList/process to components/ComponentList/component in process.xsd

2006-09-07
(1) derived sml:AbstractComponentType from sml:AbstractProcessType by extension
    adding sml:spatialReferenceFrame, sml:temporalReferenceFrame, gml:boundedBy, gml:location
    sml:interfaces, sml:inputs, sml:outputs, sml:parameters.
(2) Component derives from AbstractComponentType by simply adding an optional method
(3) System derives from AbstractComponentType by adding sml:components, sml:positions

2006-09-12
(1) added additional properties in Event as requested

2006-10-10
(1) Fixed to use SWE common AbstractRecordType instead of AbstractDataGroupType
(2) Removed referenceFrame.xsd schema since it consisted only of properties using gml:CRS -> moved to system.xsd

2006-10-11
(1) Harmonize use of onlineResource in both ResponsibleParty and Document objects
(2) Reordered capabilities and characteristics

2006-12-18 (svn version 1306)
(1) changed imports from gml 3.2.0 to gml 3.1.1 and fixed discepancies in element names

2007-01-24
(1) Harmonized with latest changes to SWE Common, mostly:
	(a) import paths and namespace fixes to 0.0.0 and 0.0 respectively
	(b) swe:propertyName attribute to xs:token
	(c) _DataRecord to AbstractDataRecord

2007-05-09
(1) BUG FIX: Made choice in IoComponentPropertyType optional in order to allow xlink to be used

=== sensorML v1.0.0 approved 23 June 2007 and published as sensorML 1.0.0 defined in the OGC SensorML document 07-000 ===

2007-07-24
(1) Removed "base" directory
(2) Moved "ic" folder location parallel to "sensorML" folder
(3) Changed imported schema location to relative paths according to OGC policy

2007-07-24
(1) Changed all sweCommon imports to point to version 1.0.1
(2) Updated SML namespace version to 1.0.1

2007-10-25 - Mike Botts, Simon Cox, Kevin Stegemoller
Changes based on Corrigendum 1 (07-122r2):
(1) import sweCommon 1.0.1
(2) updated namespace version to 1.0.1
(3) in base.xsd, added "name" attribute to "characteristic" and "capability"
elements to reflect proper relationship to input, output, and parameters
(4) Added copyright statement
(5) Minor documentation changes

=== sensorML v1.0.1 published as sensorML 1.0.1 defined in the OGC SensorML document 07-122r2 ===

2008-08-22 - Simon Cox
GML 3.2 implementation of SensorML
1. Changed target namespace to http://www.opengis.net/sensorML/1.0/gml32 in all documents
2. Change GML dependency to <xs:import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/> in all documents
3. Change SWE Common dependency to <xs:import namespace="http://www.opengis.net/swe/1.0/gml32" schemaLocation="../../sweCommon/1.0.1_gml32/swe.xsd"/> in all documents
4. In process.xsd and system.xsd change sml:_Process to sml:AbstractProcess per GML 3.2 conventions
5. In system.xsd change gml:_Curve to gml:AbstractCurve per GML 3.2 conventions



SensorML/1.0.1_gml32/.svn/text-base/method.xsd.svn-base
 
	 
		 Defines Process Method

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	 
	
	 
		 
			 Method describing a process (Can also be a dictionary entry)
		
	
	 
		 
			 Complex Type for process methods definition
		
		 
			 
				 
					 
					 
						 
							 Text and/or language defining rules for process profile (e.g. inputs, outputs, parameters, and metadata)
						
						 
							 
								 
									 
										 
											 
												 
												 Textual description of the i/o structure
												
											
											 
										
									
								
							
						
					
					 
						 
							 Textual and/or MathML description of the algorithm
						
						 
							 
								 
									 
										 
											 
												 
												 Textual description of the algorithm
												
											
											 
												 
												 Includes or reference a MathML doc specifying the maths of the algorithm
												
												 
												 
												 
												
												 
												
											
										
									
								
							
						
					
					 
						 
							 Points to the reference implementation of this process in the specified programming language (can be a SensorML process chain)
						
						 
							 
								 
								 
									 
										 
											 
												 
												 Textual description of the algorithm
												
											
											 
											 
												 
												 
												
											
											 
												 
												 
												
											
										
										 
										 
										 
									
								
							
							 
						
					
				
			
		
	
	
	 
		 
			 process method
		
	
	 
		 
			 
		
		 
	
	
	 
		 
			 substitutionGroup for languages that define rules
		
	
	 
		 
	
	 
		 
			 Includes or references a schematron doc for enforcing process constraints
		
		 
			 
				 
					 
						 
					
				
			
		
	
	 
		 
			 Includes or references a relaxNG doc for enforcing process constraints
		
		 
			 
				 
					 
						 
					
				
			
		
	




SensorML/1.0.1_gml32/.svn/text-base/process.xsd.svn-base
 
	 
		 Defines Basic Process Elements and Types for SensorML

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	 
		 
			 base substitution group for all processes
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 Group containing all metadata information
		
		 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Complex Type for all soft-typed processes
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 list of input signals
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 list of output signals
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 list of parameters
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 Simple atomic process defined using a ProcessMethod
		
	
	 
		 
			 Complex Type for atomic processes
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 Process formed by chaining sub-processes
		
	
	 
		 
			 Complex Type for process chains
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Collection of subprocesses that can be chained using connections
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
									 
									 
								
							
						
					
				
			
			 
		
	
	
	 
		 
			 Process with no inputs representing a source of data (Tables, Observations...) for other processes to connect to.
		
	
	 
		 
			 
				 
					 
						 
							 
								 
									 
										 
										 
									
									 
								
							
							 
								 
									 
										 
									
								
							
						
						 
							 
								 
							
						
					
				
			
		
	
	
	 
		 
			 provides links between processes or between data sources and processes
		
		 
			 
				 
					 
						 
							 
						
					
				
			
		
	
	
	 
		 
			 Specify a connection between two elements
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Link object used to make connections between processes
		
		 
			 
				 
					 
						 
					
				
				 
					 
						 
					
				
			
			 
		
	
	
	 
		 
	
	
	 
		 
			 Special Link to handle accessing array elements sequentially
		
		 
			 
				 
					 
						 
							 
								 
							
						
						 
							 
								 
							
						
					
					 
						 
							 
								 
							
						
						 
							 
								 
							
						
					
				
				 
			
		
	
	
	
	
	
	 
		 
			 
				 
					 
					 
					 
					 
						 
						 
							 
							 
							 
						
					
				
			
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
			 
		
		 
		 
	




SensorML/1.0.1_gml32/.svn/text-base/Readme.txt.svn-base
OpenGIS(r) SensorML 1.0.1 - ReadMe.txt

Sensor Model Language (SensorML) v1.0.1

The SensorML schema were approved as Version 1.0.0 by the OGC membership
on 23 June 2007.  They are defined in the OGC SensorML document 07-000.
Corrigendum 1 (OGC 07-122r2) made changes to these and were released as
sensorML 1.0.1.

See ChangeLog.txt for additional details.

-----------------------------------------------------------------------

Policies, Procedures, Terms, and Conditions of OGC(r) are available
  http://www.opengeospatial.org/ogc/policies/ .

Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved.





SensorML/1.0.1_gml32/.svn/text-base/sensorML.xsd.svn-base
 
	 
		 SensorML document root definition

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	 
		 
			 SensorML document root
		
		 
			 
				 
				 
					 
						 
							 
							 
							 
						
						 
					
				
			
			 
		
	




SensorML/1.0.1_gml32/.svn/text-base/system.xsd.svn-base
 
	 
		 Component and System objects for core SensorML

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	 
		 
			 Complex Type to allow creation of component profiles by extension
		
		 
			 
				 
					 
					 
					 
						 
						 
					
					 
					 
				
			
		
	
	
	 
		 
			 Complex Type for all generic components (soft typed inputs/outputs/parameters)
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Textual definition of a spatial frame axes (origin, orientation). Spatial frames can be related to one another by specifying relative positions.
		
		 
			 
				 
			
		
	
	 
		 
			 Textual definition of a temporal frame (time origin). Temporal frames can be related to one another by specifying relative times.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Uses a gml:Point for a fixed location or a (time dependant) curve for time variable location
		
		 
			 
				 
				 
			
			 
		
	
	
	 
		 
			 Full position (location + orientation) given by a swe:Position or a Process (if variable)
		
		 
			 
				 
				 
				 
			
			 
			 
		
	
	
	 
		 
			 Provide the ability to relate  a local time frame to a reference time frame
		
		 
			 
				 
				 
			
			 
			 
		
	
	
	 
		 
			 Atomic SensorML Component
		
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 System is a composite component containing sub-components.
		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Relative positions of the System components
		
		 
			 
				 
					 
						 
							 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 List of interfaces useable to access System inputs and outputs
		
		 
			 
				 
					 
						 
							 
						
						 
					
				
			
			 
		
	
	
	 
		 
			 
				 
			
			 
			 
		
	
	
	 
		 
			 Interface definition based on the OSI model. (http://en.wikipedia.org/wiki/OSI_model)
		
		 
			 
				 
					 
						 Layer 8 (not in OSI). Type of web service used to access the data. (Ex: SOS, WCS, WFS)
					
				
				 
					 
						 Layer 7 of the OSI model. Provides a means for the user to access information on the network through an application. (Ex: HTTP, SMTP, FTP, XMPP, Telnet, NTP, RTP, NFS)
					
				
				 
					 
						 Layer 6 of the OSI model. Transforms the data to provide a standard interface for the Application layer. (Ex: SSL, TLS, ASCII, MIDI, MPEG, SWECommon)
					
				
				 
					 
						 Layer 5 of the OSI model. Controls the dialogues (sessions) between computers by establishing, managing and terminating connections between the local and remote application. (Ex: NetBios, TCP session establishment)
					
				
				 
					 
						 Layer 4 of the OSI model. Provides transparent transfer of data between end users and can control reliability of a given link. (Ex: TCP, UDP, SPX)
					
				
				 
					 
						 Layer 3 of the OSI model. Provides functional and procedural means of transfering data from source to destination via one or more networks while insuring QoS. (Ex: IP, ICMP, ARP, IPSec, IPX)
					
				
				 
					 
						 Layer 2 of the OSI model. Provides functional and procedural means of transfering data between network entities and detecting/correcting errors. (Ex: Ethernet, 802.11, Token ring, ATM, Fibre Channel)
					
				
				 
					 
						 Layer 1 of the OSI model. Provides all electrical and physical characteristics of the connection including pin layouts, voltages, cables specifcations, etc... (Ex: RS232, 100BASE-T, DSL, 802.11g)
					
				
				 
					 
						 Layer 0 (not is OSI). Type of connector used. (Ex: DB9, DB25, RJ45, RJ11, MINIDIN-8, USB-A, USB-B)
					
				
			
			 
		
	
	
	 
		 
			 
			 
		
		 
	
	
	 
		 
			 
			 
			 
			 
		
		 
	
	
	 
		 
			 Special Type of system used to describe large arrays of almost identical components. An indexing mechanism can be used to vary certain parameters according to one or more indices value
		
	
	
	 
		 
			 
				 
					 
					 
					 
						 
							 
								 
									 
										 
											 
												 
												 
												 
												 
												 
												 
												 
												
												 
												
												
												 
												
												
												
											
										
									
								
							
						
					
					 
					 
					 
				
			
		
	




sweCommon/1.0.1_gml32/aggregateTypes.xsd
 
	 
		 SWE Common schema for aggregate data types

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	 
	
	
	
	 
	
	 
		 
			 
		
	
	
	 
		 
			 Implementation of ISO-11404 Record datatype. This allows grouping of data components which can themselves be Records, Arrays or Simple Types
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 DataRecord is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Implementation of ISO-11404 Record datatype that takes only simple scalars (i.e. no data aggregates)
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 SimpleDataRecord is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Implemetation of ISO-11404 Array datatype. This defines an array of identical data components with a elementCount. Values are given as a block and can be encoded in different ways
		
	
	
	 
		 
			 
				 
					 
						 
							 Specifies the size of the array (i.e. the number of elements of the defined type it contains)
						
						 
							 
								 
									
								
								
							
							 
								 
									 If present, the array size is variable and should be obtained from the referenced component.
			                    The referenced component must occur before the array values in a data stream to allow parsing.
								
							
						
					
				
			
		
	
	
	 
		 
			 Implemetation of ISO-11404 Array datatype. This defines an array of identical data components with a elementCount. Values are given as a block and can be encoded in different ways
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 DataArray is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Use to point or include data values inline
		
		 
			 
				 
				 
			
		
	
	
	
	
	 
		 
			 List of Conditional Values for a property
		
	
	
	 
		 
			 
				 
					 
						 
							 
								 
							
							 
							 
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
							 Specifies one or more conditions for which the given value is valid
						
						 
							 
							 
							 
						
					
				
			
		
	
	
	 
		 
			 Qualifies data (scalar or not) with one or more conditions
		
	
	
	 
		 
			 
				 
					 
						 
							 
							 
						
					
				
			
		
	
	
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Complex Type for all properties taking the AnyData Group with a "name" key
		
		 
		 
		 
	
	
	 
		 
			 Complex Type for all properties taking the AnyData Group
		
		 
		 
	
	
	 
		 
			 
				 
					 Specifies an encoding for the data structure defined by the enclosing element
				
			
			 
				 
					 Carries the block of values encoded as specified by the encoding element
				
			
		
	




sweCommon/1.0.1_gml32/basicTypes.xsd
 
	 
		 basicTypes.xsd

Some basic types (simpleContent) required in various places in OWS Sensor Web application schemas

			Copyright (c) 2008 OGC, All Rights Reserved.
			For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	
	
	 
		 
			 Property type that indicates unit-of-measure, either by (i) inline definition; (ii)  reference; (iii)  UCUM code
		
		 
			 
				 
					 Defines a unit inline
				
			
		
		 
			 
				 Specifies a unit by using a UCUM expression (prefered)
			
		
		 
			 
				 Specifies a unit by referencing a dictionary entry (to be used only for units not defined in UCUM)
			
		
	
	
	
	
	 
		 
			 Property type that indicates the codespace
		
		 
	
	
	
	
	
	 
		 
			 Choice of time position encodings, not including numeric representation. 
	      A minor variation on gml:TimePositionUnion - carrying "indeterminate value" as content instead of an attribute.
		
		 
	
	
	 
		 
			 Choice of time position encodings, including numeric representation but no frame. 
	A minor variation on gml:TimePositionUnion - carrying "indeterminate value" as content instead of an attribute. 
		
		 
	
	
	
	
	
	 
		 
			 Explicit implementation of ISO 19103 ScopedName. 
			Extension of string which also carries a codeSpace attribute.
			Note: in future versions of this specification based on GML 3.2, this will be removed in favour of gml:CodeWithAuthorityType. 
		
		 
			 
				 
			
		
	
	
	
	
	 
		 
			 Simple list of double-precision numbers. 
	Note: xs:double supports either decimal or scientific notation
		
		 
	
	
	 
		 
			 Pair of double-precision numbers. 
	Note: xs:double supports either decimal or scientific notation
		
		 
			 
		
	
	
	 
		 
			 Simple list of integers. 
		
		 
	
	
	 
		 
			 Pair of integers. 
		
		 
			 
		
	
	
	 
		 
			 Simple list of tokens. 
			Note: xs:token is a string with no embedded white-space allowed
		
		 
	
	
	 
		 
			 Simple list of time positions. 
		
		 
	
	
	 
		 
			 Pair of time positions. 
		
		 
			 
		
	
	
	
	
	 
		 
			 A generic interval. The type of the two limits will normally be the same.
		
		 
			 
				 
					 Implicit xs:anyType
				
			
			 
				 
					 Implicit xs:anyType
				
			
		
	
	
	 
		 
			 A generic interval. The type of the two limits will normally be the same.
		
	
	
	 
		 
			 Inline property type for generic intervals
		
		 
			 
		
	
	




sweCommon/1.0.1_gml32/ChangeLog.txt
Sensor Web Enablement (SWE) Common data types V1.0.1


This ChangeLog contains the changes for Sensor Web Enablement (SWE) Common data types.  
  * v0.0.0 approved in June 2006
  * v1.0.0 approved 23 June 2007 and published as sweCommon 1.0.0 defined in the OGC SensorML document 07-000
  * v1.0.1 published as sweCommon 1.0.1 defined in the OGC SensorML document 07-122r2

See the tail end of the ChangeLog for the most recent details.


===============================================================================

Changes for SWE Common made prior to V1.0 release since Version 0.0 approved in June 2006:

2006-09-07:
(1) Switch from attributes to elements for various component properties
(2) Improved harmonization with GML: using gml:UomSymbol, gml:UnitDefinition
    not using gml:description because it brings nothing and forces to switch namespace just for it...
(3) Added Matrix deriving from DataArray + ref and local Frame in parameters.xsd
(4) Added quality components Accuracy, Tolerance and ConfidenceLevel in parameters.xsd
(5) Added constraints to data components to better support SPS type descriptions

2006-09-12:
(1) Removed Hard Typed versions of Location, Orientation, GeoLocation in positionData.xsd

2006-10-06
(1) Fixed bug in Time constraints -> harmonize with Numerical Constraints

2006-10-10:
(1) Finished harmonization with ISO 19404 aggregate data types Record and Array
    Should allow to merge with Simon's recordType.xsd
(2) Moved codespace as an element just like uom for consistency
(3) Renamed axisCode to referenceAxis for consistency with referenceFrame
(4) Refactored schemas -> split/merge recordType.xsd + parameters.xsd into:
    basicTypes.xsd (all xsd simple types decimalList, decimalPair...)
    simpleTypes.xsd (Boolean, Quantity, Count, Category, Text, ItemDefinition)
    aggregateTypes.xsd (Record, Vector, Array, Series, ConditionalValue)
    curveTypes.xsd (Curve, NormalizedCurve)
    positionTypes (Position, SquareMatrix, GeoLocationArea, Envelope)
    --> Should be able to eliminate recordType.xsd and SWE_basicTypes.xsd (need to confirm with Simon)
    
2006-10-10
(1) Added DataStreamDefinition in data.xsd using MultiplexEncoding

2006-11-01  Several undocumented changes happened here

2006-12-18 (SVN version was 1306)
(1) switched to gml 3.1.1
(2) Removed recordType.xsd.old
(3) Removed ItemDefinition from simpleTypes and corresponding schema simpleTypeDerivation.xsd
(4) Renamed "referenceAxis" attribute in data types to "axisID" and clarified the annotation

2007-01-18 
(1) basicTypes.xsd:
replace AssociationAttributes with gml:AssociationAttributeGroup
merge SWE_basicTypes in
use UomSymbol for uom "code"
(2) simpleTypes.xsd:
General revision from type-derivation -> content-model-composition style
[Rationale: type derivation is only necessary to support substitution groups, which were not present; 
presence of complex derivation-by-restriction patterns suggested over-generalization of parents] 
Note: net effect is no change in elements!
(3) aggregates.xsd -> xmlData.xsd
(4) aggregateTypes.xsd:
add XMLData to the AnyData group
(5) phenomenon.xsd:
change to include basicTypes.xsd instead of SWE_basicTypes.xsd
(6) swe.xsd:
add include phenomenon.xsd and temporalAggregates.xsd
(7) added some notes and questions to Alex

2007-01-19 - by Alex Robin
(1) basicTypes.xsd
    Answered Simon's question about similarities with gml:TimePositionType
(2) simpleTypes.xsd:
    finished cleaning up simpleTypes.xsd and responded to some of Simon's comments. 
    Removed hard typed components for quality and used generic components instead.
    Type of quality will be specified through the use of URIs like on other components.
    Made CodeSpace an element just like Uom (following Simon's suggestion and my own intention)
(3) aggregateTypes.xsd:
    Added ConditionalData for future use in SensorML
(4) Created a folder for version 1.0

2007-07-24
(1) Changed imported schema location to relative paths according to OGC policy

=== SWE v1.0 published as sweCommon V1.0.0 defined in the OGC SensorML document 07-000 ===

2007-10-22 - Mike Botts & Simon Cox
Changes made as a result of Corrigendum 1 (OGC 07-122r2):
(1) In aggregateTypes.xsd, added recordCount attribute to DataValuePropertyType
(2) In aggregateTypes.xsd, renamed SimpleDataPropertyType to AnyDataPropertyType
(3) In aggregateTypes.xsd, allowed for optional "value" element in DataArray even when "encoding" 
      element is present; brings DataArray in line with other SWE Common data components and supports 
      need for template in SOS service
(4) In basicTypes.xsd, removed all elements of TypedValue*
(5) In phenomenon.xsd, changed import of basicTypes to import of aggregateTypes
(6) In phenomenon.xsd, changed singleConstraint to AnyDataPropertyType (from TypedValuePropertyType)
(7) In phenomenon.xsd, changed constraintList to DataArrayPropertyType (from TypedValueListPropertyType)
(8) Updated SML namespace version to 1.0.1

2007-10-25 - Kevin Stegemoller
(1) Added copyright statement
(2) Minor documentation changes

=== SWE v1.0.1 published as sweCommon V1.0.1 defined in the OGC SensorML document 07-122r2 ===

2008-08-22 - Simon Cox
Create a GML 3.2 implementation

1. Changed target namespace to http://www.opengis.net/swe/1.0/gml32 in all documents
2. Change GML dependency to <xs:import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/> in all documents
3. In basicType.xsd, replace swe:UomSymbol derivation with gml:UomSymbol







sweCommon/1.0.1_gml32/curveTypes.xsd
 
	 
		 Schema for defining different types of curves based on aggregate data types

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	
	
	 
		 
			 Curve describing variations of a parameter vs. another quantity
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Curve is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	
	
	 
		 
			 
			 
		
	




sweCommon/1.0.1_gml32/data.xsd
 
	 
		 Schema allowing definition of structure and encoding of sensor data. Multiplexed streams can also be described

		      Copyright (c) 2008 OGC, All Rights Reserved.
		      For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	 
	
	 
		
				 
					 
					 
				
				 
			
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		
				 
					 
					 
				
				 
			
	
	
	 
		 
			 
		
		 
	
	




sweCommon/1.0.1_gml32/encoding.xsd
 
	 
		 Defines basic ResponseType definition and commonly used sensor characteristics

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	
	 
		 
			 
			 
			 
			 
		
		 
	
	
	 
		 
		
		
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Max three characters to use as token or block separator
		
		 
			 
		
	
	
	 
		 
			 One character to use as a decimal separator
		
		 
			 
		
	
	
	
	 
		 
			 
				 
					 
						 
							 
								 
									 
										 
											 
											 
											 
											 
											 
											 
											 
										
									
									 
										 
											 
											 
											 
											 
											 
											 
										
									
								
							
						
					
					 
					 
					 
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 Allows specification of the stream/packaging format used (ex: RTP, ASF, AAF, TML...)
		
	
	
	 
		 
			 
				 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	 
		 
			 Carries the designator for an element implementing an XML-encoded data-type
		
	
	
	 
		 
			 Carries the designator for an element implementing an XML-encoded data-type
		
		 
			 
				 
					 
						 May be any XML Schema defined global element. 
		typically this will be swe:Array, swe:Record, cv:CV_DiscreteCoverage, etc
					
				
			
		
	
	




sweCommon/1.0.1_gml32/phenomenon.xsd
 
	 
		 phenomenon.xsd

A GML conformant schema 
for definitions of phenomena, per Annex C of OM specification

			Copyright (c) 2008 OGC, All Rights Reserved.
			For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	 
	 
	
	 
		 
			 Basic Phenomenon definition, and head of substitution group of specialized phenomenon defs. 
			gml:description may be used for a more extensive description of the semantics, with a link to a definitive version (if available).  
			gml:name should be used for the name or label.
			
			Note: In GML 3.2 the gml:identifier element should be used for the identifier assigned by or preferred by the data provider. 
			This identifier will typically be in the form of a URN, for example following the OGC URN scheme
			e.g. urn:x-ogc:def:phenomenon:OGC:Age
			
		
		 
			 
		
	
	
	 
		 
			 Basic Phenomenon definition, and head of substitution group of specialized phenomenon defs. 
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 A scalar Phenomenon is defined by adding constraints to an existing property.
		
		 
			 
				 
					 
						 
							 Property that forms the basis for generating a set of more refined Phenomena; e.g. Chemical Composition, Radiance
						
					
					 
						 
							 Constraints that cannot be expressed as values of an orthogonal/helper phenomenon
						
					
					 
						 
							 Constraint expressed as a value or range of an orthogonal/helper phenomenon
						
					
				
			
		
	
	
	 
		 
			 Description of a scalar Phenomenon defined by adding constraints to a property previously defined elsewhere.
		
	
	
	
	 
		 
			 Description of a set of Phenomena.  
	  CompoundPhenomenon is the abstract head of a substitution group of specialized compound phenomena
		
		 
			 
				 
					 
						 The number of components in the tuple
					
				
			
		
	
	
	 
		 
			 Description of a set of Phenomena.  
	  CompoundPhenomenon is the abstract head of a substitution group of specialized compound phenomena
		
	
	
	 
		 
			 A Phenomenon defined as a set of explicitly enumerated components which may or may not be related to one another
		
		 
			 
				 
					 
						 
							 Optional phenomenon that forms the basis for generating more specialized composite Phenomenon by adding more components
						
					
					 
				
			
		
	
	
	 
		 
			 A Phenomenon defined as a set of explicitly enumerated components which may or may not be related to one another
		
	
	
	 
		 
			 A phenomenon defined as a base property convolved with a set of constraints
      The set of constraints may be either
      * an explicit set of soft-typed measures, intervals and categories
      * one or more lists of soft-typed measures, intervals and categories
      * one or more sequences of soft-typed measures and intervals
		
		 
			 
				 
					 
						 
							 Phenomenon that forms the basis for generating a set of more refined Phenomena; e.g. Chemical Composition, Radiance
						
					
					 
						 
							 A set of values of some secondary property that constraints the basePhenomenon to generate a Phenomenon set.  
							If more than one set of constraints are possible, then these are applied simultaneously to generate
						
					
					 
						 
							 Other constraints are described in text
						
					
				
			
		
	
	
	 
		 
			 A phenomenon defined as a base property convolved with a set of constraints
      The set of constraints may be either
      * an explicit set of soft-typed measures, intervals and categories
      * one or more lists of soft-typed measures, intervals and categories
      * one or more sequences of soft-typed measures and intervals
		
	
	
	




sweCommon/1.0.1_gml32/positionTypes.xsd
 
	 
		 Schema for defining position data (location, orientation, etc...) based on aggregate data types

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	 
		 
			 Position is given as a group of Vectors/Matrices, each of which can specify location, orientation, velocity, angularVelocity, acceleration or angularAcceleration or a combination of those in a composite state Vector. Each Vector can have a separate frame of reference or inherit the frame from the parent Position object.
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 Points to a spatial reference frame definition. Coordinates of the vector will be expressed in this reference frame
					
				
				 
					 
						 Specifies the spatial frame which location and/or orientation is given by the enclosing vector
					
				
			
		
	
	
	 
		 
			 This is a square matrix (so the size is the square of one dimension) which is a DataArray of Quantities. 		It has a referenceFrame in which the matrix components are described
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Vector/SquareMatrix is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
			 
		
	
	
	
	
	 
		 
			 Area used to define bounding boxes
		
		 
			 
				 
					 
						 
							 
								 Is this an aggregate geometry?
							
						
					
					 
				
			
		
	
	
	 
		 
			 Envelope described using two vectors specifying lower and upper corner points.
           This is typically use to define rectangular bounding boxes in any coordinate system.
		
	
	
	 
		 
			 
				 
					 
						 
							 Optionally provides time range during which this bounding envelope applies
						
					
					 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 Points to a spatial reference frame definition. Coordinates of the vector will be expressed in this reference frame
					
				
				 
					 
						 Specifies the spatial frame which location and/or orientation is given by the enclosing vector
					
				
			
		
	
	
	 
		 
			 A Vector is a special type of DataRecord that takes a list of numerical scalars called coordinates. The Vector has a referenceFrame in which the coordinates are expressed
		
	
	
	 
		 
			 
				 
					 
						 
							 
							 
						
					
				
			
		
	
	
	 
		 
			 Vector is a data-type so usually appears "by value" rather than by reference. However, by reference is still useful when objects, for instance, share a location.
		
		 
			 
		
		 
	
	
	




sweCommon/1.0.1_gml32/Readme.txt
OpenGIS(r) SWE Common v1.0.1 - ReadMe.txt

Sensor Web Enablement (SWE) Common data types v1.0.1.

The SWE Common schema were approved as Version 1.0.0 by the OGC membership on
23 June 2007.  They are defined in the OGC SensorML document 07-000.
Corrigendum 1 (OGC 07-122r2) made changes to these and were released as
sweCommon 1.0.1.

See ChangeLog.txt for additional details.

-----------------------------------------------------------------------

Policies, Procedures, Terms, and Conditions of OGC(r) are available
  http://www.opengeospatial.org/ogc/policies/ .

Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved.





sweCommon/1.0.1_gml32/simpleTypes.xsd
 
	 
		 SWE common schema for simple data types (i.e. without children)		

		These have mostly been implemented using the "composition" pattern, rather than using inheritance/type-derivation. 
Note: In general, content model definition using composition is more easily accomplished using groups and attribute groups.
			* global/named type definitions are not needed unless type derivation is required. 
			* type derivation is not needed unless substitution groups are to be supported. 
			* parent types that are too generalized will require derivation by restriction further down, so should be avoided.

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	
	
	 
		 
			 Base type for all data components. 
			This is implemented as an XML Schema complexType because it includes both element and attribute content.
		
		 
			 
				 
					 
						 Specifies if the value of a component stays fixed in time or is variable. Default is variable
					
				
				 
					 
						 Points to semantics information defining the precise nature of the component
					
				
			
		
	
	
	
	
	 
		 
			 Basic attributes required for all simple data components (i.e. without children)
		
		 
			 
				 A reference frame anchors a value to a datum or interval scale
			
		
		 
			 
				 Specifies the reference axis using the gml:axisID. The reference frame URI is inherited from parent Vector
			
		
	
	
	
	
	 
		 
			 Scalar component used to express truth: True or False, 0 or 1
		
		 
			 
				 
					 
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Boolean is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 Decimal number with optional unit and constraints
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Quantity is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Decimal pair for specifying a quantity range with constraints
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
						
					
					 
				
			
		
	
	
	 
		 
			 QuantityRange is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Integer number used for a counting value
		
		 
			 
				 
					 
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
						
					
					 
				
			
		
	
	
	 
		 
			 Count is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Integer pair used for specifying a count range
		
		 
			 
				 
					 
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
							
						
						
					
					 
				
			
		
	
	
	 
		 
			 CountRange is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 A simple token identifying a term or category (single spaces allowed); definition attribute should provide dictionary entry useful for interpretation of the value
		
		 
			 
				 
					 
						 
							 
								 Provides link to dictionary or rule set to which the value belongs
							
						
						 
							 
								 The constraint property defines the permitted values, as an enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Category is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 
				 Specifies the origin of the temporal reference frame as an ISO8601 date (used to specify time after an epoch)
			
		
		 
			 
				 Points to a temporal reference frame definition. Time value will be expressed relative to this frame
			
		
		 
			 
				 Specifies the temporal frame which origin is given by this time component
			
		
	
	
	 
		 
			 Either ISO 8601 (e.g. 2004-04-18T12:03:04.6Z) or time relative to a time origin
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Time is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Time value pair for specifying a time range (can be a decimal or ISO 8601)
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
							
						
					
					 
				
			
		
	
	
	 
		 
			 TimeRange is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 Free textual component
		
		 
			 
				 
					 
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
				
			
		
	
	
	 
		 
			 Text is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 ObservableProperty should be used to identify (through reference only) stimuli or measurable property types. The consequence is that it does not have a uom because it has not been measured yet.  This is used to define sensor/detector/actuator inputs and outputs, for instance.
		
		 
			 
				 
			
		
	
	
	
	
	 
		 
			 Allows for a simple quality assessment of the values carried by this component.
	      This value can be numerical or categorical thus allowing for things like accuracy, precision, tolerance, confidence level, etc...
	      
	      The  meaning of the quality measure is indicated by the definition attribute of the chosen sub-component.
	      
	      The use of the 'ref'attribute indicate that the value of accuracy is included itself in the data inside the referred component. 
	      
	      This soft-typed Data Quality description may be replaced by ISO 19115/19139 DQ_DataQuality elements in later versions
		
		 
			 
			 
			 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 List of allowed values (There is an implicit AND between all members)
		
		 
			 
				 
					 
						 
							 Specifies minimum allowed value for an open interval (no max)
						
					
					 
						 
							 Specifies maximum allowed value for an open interval (no min)
						
					
				
				 
					 
						 
							 Range of allowed values (closed interval) for this component
						
					
					 
						 
							 List of allowed values for this component
						
					
				
			
			 
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 Enumeration of allowed values
		
		 
			 
				 
					 
						 List of allowed token values for this component
					
					
					
				
			
			 
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 List of allowed time values (There is an implicit AND between all members)
		
		 
			 
				 
					 
						 
							 Specifies minimum allowed time value for an open interval (no max)
						
					
					 
						 
							 Specifies maximum allowed time value for an open interval (no min)
						
					
				
				 
					 
						 
							 Range of allowed time values (closed interval) for this component
						
					
					 
						 
							 List of allowed time values for this component
						
					
				
			
			 
		
	
	
	
	
	 
		 
			 Re-usable group providing a choice of scalar data types
		
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Complex Type for all properties taking the AnyScalar Group
		
		 
		 
		 
	
	
	 
		 
			 Re-usable group providing a choice of numeric data types
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Re-usable group providing a choice of range data types
		
		 
			 
			 
			 
		
	




sweCommon/1.0.1_gml32/swe.xsd
 
	 
		 swe document root definition

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	
	
	 
	 
	 
	 
	 
	 
	




sweCommon/1.0.1_gml32/sweCommonPackageDependencies.png


sweCommon/1.0.1_gml32/temporalAggregates.xsd
 
	 
		 
temporalAggregates.xsd

time geometric complex, time aggregates and time grids

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice http://www.opengeospatial.org/legal/

	
	
	
	 
	
	
	
	 
		 
			 Compact list of time instants, following gml:posList pattern. 
		
		 
	
	
	 
		 
			 TimePositionList instances hold a sequence of time positions within the same frame.
		
		 
			 
				 
				 
				 
				 
					 
						 "count" allows to specify the number of direct positions in the list. 
					
				
			
		
	
	
	
	
	 
		 
			 Property type not provided by GML
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Explicit implementation of ISO 19108 TM_GeometricComplex - a self-consistent set of TimeInstants and TimePeriods
		
		 
			 
				 
					 
						 
							 Reference to an identified time primitive
						
					
				
			
		
	
	
	 
		 
			 Explicit implementation of ISO 19108 TM_GeometricComplex - a self-consistent set of TimeInstants and TimePeriods
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	
	
	 
		 
			 Property type not provided by GML
		
		 
			 
		
		 
	
	
	 
		 
			 an arbitrary set of TimeObjects, often TimeInstants and TimePeriods
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 an arbitrary set of TimeObjects, often TimeInstants and TimePeriods
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
		 
			 A set of uniformly spaced time instants described using an implicit notation.
      Follow pattern of (ISO 19123) spatial grids: 
  these have (dimension,axisName,extent(,origin,offsetVector))
  For temporal case, dimension is fixed (1), axisName is fixed ("time")
		
		 
			 
				 
					 
					 
						 
							 
								 Simple-content time position
							
						
						 
							 
								 Reference to an identified time instant
							
						
					
					 
						 
							 
								 XML Schema built-in simple type for duration: e.g. 
                P1Y (1 year) 
                P1M (1 month) 
                P1DT12H (1 day 12 hours) 
                PT5M (5 minutes) 
                PT0.007S (7 milliseconds)
							
						
						 
							 
								 representation of the ISO 11404 model of a time interval length: e.g. 
                value=1, unit="year"  
                value=1, unit="other:month" (or see next)
                value=1, unit="year" radix="12" factor="1" (1/12 year)
                value=1.5, unit="day"  
                value=36, unit="hour" 
                value=5, unit="minute"  
                value=7, unit="second" radix="10" factor="3" (7 milliseconds)
							
						
					
					 
				
			
		
	
	
	 
		 
			 A set of uniformly spaced time instants described using an implicit notation
			      Follow pattern of (ISO 19123) spatial grids: 
  these have (dimension,axisName,extent(,origin,offsetVector))
  For temporal case, dimension is fixed (1), axisName is fixed ("time")
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
				 
					 Grid extent specified in grid coordinates - i.e. 2 integers
				
				 
					 
						 
						 
					
				
			
		
	
	
	 
		 
			 Extend time instant grid with window size property
		
		 
			 
		
	
	
	 
		 
			 A set of uniformly spaced time instants described using an implicit notation
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 Extend time instant grid with window size property
		
		 
			 
				 
					 
						 
							 
								 XML Schema built-in simple type for duration
							
						
						 
							 
								 representation of the ISO 11404 model of a time interval length
							
						
					
				
			
		
	
	
	 
		 
			 A set of uniformly spaced time intervals described using an implicit notation
		
	
	
	 
		 
			 
		
		 
	
	




sweCommon/1.0.1_gml32/xmlData.xsd
 
	 
		 A basic schema for XML-tagged data aggregates (Records and Arrays), using terminology consistent with ISO 11404. 

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	 
		 
			 An Item is an item of data of any type
		
	
	
	 
		 
			 
		
	
	
	
	 
		 
			 A record is a list of fields
		
		 
			 
				 
					 A Record/field contains an item of data
				
			
		
		 
			 
				 Optional pointer to record-type schema
			
		
		 
			 
				 Optional count of the number of fields in the record. 
			
		
	
	
	 
		 
			 A record is a list of fields
		
	
	
	 
		 
			 
		
	
	
	
	 
		 
			 An array is an indexed set of records of homogeneous type
		
		 
			 
				 
					 An Array/element contains an Item or a Record or an Array
				
			
		
		 
			 
				 Optional pointer to the record-type schema. This should be used when the elements of the array are Records
			
		
		 
			 
				 Optional count of the number of elements in the array. 
			
		
	
	
	 
		 
			 An array is an indexed set of records of homogeneous type
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Choice of Item or Record or Array - used in composing Arrays
		
		 
	
	
	 
		 
			 Convenience group that bundles all the soft-typed XML-encoded aggregates into a choice group
		
		 
			 
			 
			 
		
	
	




sweCommon/1.0.1_gml32/.svn/all-wcprops
K 25
svn:wc:ra_dav:version-url
V 63
/ogc-projects/!svn/ver/2454/ows/swe/trunk/sweCommon/1.0.1_gml32
END
basicTypes.xsd
K 25
svn:wc:ra_dav:version-url
V 78
/ogc-projects/!svn/ver/2461/ows/swe/trunk/sweCommon/1.0.1_gml32/basicTypes.xsd
END
encoding.xsd
K 25
svn:wc:ra_dav:version-url
V 76
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/encoding.xsd
END
phenomenon.xsd
K 25
svn:wc:ra_dav:version-url
V 78
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/phenomenon.xsd
END
ChangeLog.txt
K 25
svn:wc:ra_dav:version-url
V 77
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/ChangeLog.txt
END
curveTypes.xsd
K 25
svn:wc:ra_dav:version-url
V 78
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/curveTypes.xsd
END
data.xsd
K 25
svn:wc:ra_dav:version-url
V 72
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/data.xsd
END
positionTypes.xsd
K 25
svn:wc:ra_dav:version-url
V 81
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/positionTypes.xsd
END
xmlData.xsd
K 25
svn:wc:ra_dav:version-url
V 75
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/xmlData.xsd
END
aggregateTypes.xsd
K 25
svn:wc:ra_dav:version-url
V 82
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/aggregateTypes.xsd
END
temporalAggregates.xsd
K 25
svn:wc:ra_dav:version-url
V 86
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/temporalAggregates.xsd
END
Readme.txt
K 25
svn:wc:ra_dav:version-url
V 74
/ogc-projects/!svn/ver/2454/ows/swe/trunk/sweCommon/1.0.1_gml32/Readme.txt
END
simpleTypes.xsd
K 25
svn:wc:ra_dav:version-url
V 79
/ogc-projects/!svn/ver/2461/ows/swe/trunk/sweCommon/1.0.1_gml32/simpleTypes.xsd
END
swe.xsd
K 25
svn:wc:ra_dav:version-url
V 71
/ogc-projects/!svn/ver/2459/ows/swe/trunk/sweCommon/1.0.1_gml32/swe.xsd
END
sweCommonPackageDependencies.png
K 25
svn:wc:ra_dav:version-url
V 96
/ogc-projects/!svn/ver/2454/ows/swe/trunk/sweCommon/1.0.1_gml32/sweCommonPackageDependencies.png
END




sweCommon/1.0.1_gml32/.svn/entries
9

dir
2454
https://svn.opengeospatial.org/ogc-projects/ows/swe/trunk/sweCommon/1.0.1_gml32
https://svn.opengeospatial.org/ogc-projects



2008-08-22T01:40:12.780565Z
2454
scox


svn:special svn:externals svn:needs-lock


















0
�
basicTypes.xsd
file
2461



2008-08-22T13:43:10.296875Z
a2c4d3ed3e0465e58983a77ccb2d9cae
2008-08-22T14:23:57.802025Z
2461
scox





















8288
�
encoding.xsd
file
2459



2008-08-22T12:49:25.453125Z
7278101c1d11c646398a5cd13e46d0bb
2008-08-22T12:59:42.324068Z
2459
scox





















8923
�
phenomenon.xsd
file
2459



2008-08-22T12:49:46.890625Z
74ab851204d6cafaa41dc59561d8c800
2008-08-22T12:59:42.324068Z
2459
scox





















8917
�
ChangeLog.txt
file
2459



2008-08-22T12:50:32.734375Z
d44e6394acf402d4412986c8099cbc7c
2008-08-22T12:59:42.324068Z
2459
scox





















5552
�
curveTypes.xsd
file
2459



2008-08-22T12:49:09.468750Z
ce174b13a719824403920db7995099ce
2008-08-22T12:59:42.324068Z
2459
scox





















3590
�
data.xsd
file
2459



2008-08-22T12:48:16.828125Z
0f61f88b6f0fee498c7804e41af1691d
2008-08-22T12:59:42.324068Z
2459
scox





















2931
�
positionTypes.xsd
file
2459



2008-08-22T12:50:03.828125Z
7ca9c2488d88c01dce572fe80b9fac4e
2008-08-22T12:59:42.324068Z
2459
scox





















9573
�
xmlData.xsd
file
2459



2008-08-22T12:52:11.296875Z
9e3f748eeb2cce8e96072ec052ec6d8c
2008-08-22T12:59:42.324068Z
2459
scox





















4159
�
aggregateTypes.xsd
file
2459



2008-08-22T12:48:47.875000Z
759d12e2fb51ad88c14445940b519d18
2008-08-22T12:59:42.324068Z
2459
scox





















11947
�
temporalAggregates.xsd
file
2459



2008-08-22T12:51:57.406250Z
395898ce4a147459eb7720aac85fd5ce
2008-08-22T12:59:42.324068Z
2459
scox





















12280
�
Readme.txt
file




2007-11-12T23:06:34.640625Z
3c3918337a65256a0ee1c4d5ae6ec513
2008-08-22T01:40:12.780565Z
2454
scox





















642
�
simpleTypes.xsd
file
2461



2008-08-22T13:42:55.234375Z
af4633f79d8c3e9b1c38e970efd8bbcc
2008-08-22T14:23:57.802025Z
2461
scox





















31019
�
swe.xsd
file
2459



2008-08-22T12:51:40.468750Z
fa98b3aff23ed878d6d86231ba6765ff
2008-08-22T12:59:42.324068Z
2459
scox





















1183
�
sweCommonPackageDependencies.png
file




2008-08-22T00:51:28.770286Z
9f061cf17b19789f104b27da36f839e4
2008-08-22T01:40:12.780565Z
2454
scox
has-props




















22778
�




sweCommon/1.0.1_gml32/.svn/format
9




sweCommon/1.0.1_gml32/.svn/text-base/aggregateTypes.xsd.svn-base
 
	 
		 SWE Common schema for aggregate data types

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	 
	
	
	
	 
	
	 
		 
			 
		
	
	
	 
		 
			 Implementation of ISO-11404 Record datatype. This allows grouping of data components which can themselves be Records, Arrays or Simple Types
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 DataRecord is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Implementation of ISO-11404 Record datatype that takes only simple scalars (i.e. no data aggregates)
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 SimpleDataRecord is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Implemetation of ISO-11404 Array datatype. This defines an array of identical data components with a elementCount. Values are given as a block and can be encoded in different ways
		
	
	
	 
		 
			 
				 
					 
						 
							 Specifies the size of the array (i.e. the number of elements of the defined type it contains)
						
						 
							 
								 
									
								
								
							
							 
								 
									 If present, the array size is variable and should be obtained from the referenced component.
			                    The referenced component must occur before the array values in a data stream to allow parsing.
								
							
						
					
				
			
		
	
	
	 
		 
			 Implemetation of ISO-11404 Array datatype. This defines an array of identical data components with a elementCount. Values are given as a block and can be encoded in different ways
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 DataArray is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Use to point or include data values inline
		
		 
			 
				 
				 
			
		
	
	
	
	
	 
		 
			 List of Conditional Values for a property
		
	
	
	 
		 
			 
				 
					 
						 
							 
								 
							
							 
							 
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
							 Specifies one or more conditions for which the given value is valid
						
						 
							 
							 
							 
						
					
				
			
		
	
	
	 
		 
			 Qualifies data (scalar or not) with one or more conditions
		
	
	
	 
		 
			 
				 
					 
						 
							 
							 
						
					
				
			
		
	
	
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Complex Type for all properties taking the AnyData Group with a "name" key
		
		 
		 
		 
	
	
	 
		 
			 Complex Type for all properties taking the AnyData Group
		
		 
		 
	
	
	 
		 
			 
				 
					 Specifies an encoding for the data structure defined by the enclosing element
				
			
			 
				 
					 Carries the block of values encoded as specified by the encoding element
				
			
		
	




sweCommon/1.0.1_gml32/.svn/text-base/basicTypes.xsd.svn-base
 
	 
		 basicTypes.xsd

Some basic types (simpleContent) required in various places in OWS Sensor Web application schemas

			Copyright (c) 2008 OGC, All Rights Reserved.
			For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	
	
	 
		 
			 Property type that indicates unit-of-measure, either by (i) inline definition; (ii)  reference; (iii)  UCUM code
		
		 
			 
				 
					 Defines a unit inline
				
			
		
		 
			 
				 Specifies a unit by using a UCUM expression (prefered)
			
		
		 
			 
				 Specifies a unit by referencing a dictionary entry (to be used only for units not defined in UCUM)
			
		
	
	
	
	
	 
		 
			 Property type that indicates the codespace
		
		 
	
	
	
	
	
	 
		 
			 Choice of time position encodings, not including numeric representation. 
	      A minor variation on gml:TimePositionUnion - carrying "indeterminate value" as content instead of an attribute.
		
		 
	
	
	 
		 
			 Choice of time position encodings, including numeric representation but no frame. 
	A minor variation on gml:TimePositionUnion - carrying "indeterminate value" as content instead of an attribute. 
		
		 
	
	
	
	
	
	 
		 
			 Explicit implementation of ISO 19103 ScopedName. 
			Extension of string which also carries a codeSpace attribute.
			Note: in future versions of this specification based on GML 3.2, this will be removed in favour of gml:CodeWithAuthorityType. 
		
		 
			 
				 
			
		
	
	
	
	
	 
		 
			 Simple list of double-precision numbers. 
	Note: xs:double supports either decimal or scientific notation
		
		 
	
	
	 
		 
			 Pair of double-precision numbers. 
	Note: xs:double supports either decimal or scientific notation
		
		 
			 
		
	
	
	 
		 
			 Simple list of integers. 
		
		 
	
	
	 
		 
			 Pair of integers. 
		
		 
			 
		
	
	
	 
		 
			 Simple list of tokens. 
			Note: xs:token is a string with no embedded white-space allowed
		
		 
	
	
	 
		 
			 Simple list of time positions. 
		
		 
	
	
	 
		 
			 Pair of time positions. 
		
		 
			 
		
	
	
	
	
	 
		 
			 A generic interval. The type of the two limits will normally be the same.
		
		 
			 
				 
					 Implicit xs:anyType
				
			
			 
				 
					 Implicit xs:anyType
				
			
		
	
	
	 
		 
			 A generic interval. The type of the two limits will normally be the same.
		
	
	
	 
		 
			 Inline property type for generic intervals
		
		 
			 
		
	
	




sweCommon/1.0.1_gml32/.svn/text-base/ChangeLog.txt.svn-base
Sensor Web Enablement (SWE) Common data types V1.0.1


This ChangeLog contains the changes for Sensor Web Enablement (SWE) Common data types.  
  * v0.0.0 approved in June 2006
  * v1.0.0 approved 23 June 2007 and published as sweCommon 1.0.0 defined in the OGC SensorML document 07-000
  * v1.0.1 published as sweCommon 1.0.1 defined in the OGC SensorML document 07-122r2

See the tail end of the ChangeLog for the most recent details.


===============================================================================

Changes for SWE Common made prior to V1.0 release since Version 0.0 approved in June 2006:

2006-09-07:
(1) Switch from attributes to elements for various component properties
(2) Improved harmonization with GML: using gml:UomSymbol, gml:UnitDefinition
    not using gml:description because it brings nothing and forces to switch namespace just for it...
(3) Added Matrix deriving from DataArray + ref and local Frame in parameters.xsd
(4) Added quality components Accuracy, Tolerance and ConfidenceLevel in parameters.xsd
(5) Added constraints to data components to better support SPS type descriptions

2006-09-12:
(1) Removed Hard Typed versions of Location, Orientation, GeoLocation in positionData.xsd

2006-10-06
(1) Fixed bug in Time constraints -> harmonize with Numerical Constraints

2006-10-10:
(1) Finished harmonization with ISO 19404 aggregate data types Record and Array
    Should allow to merge with Simon's recordType.xsd
(2) Moved codespace as an element just like uom for consistency
(3) Renamed axisCode to referenceAxis for consistency with referenceFrame
(4) Refactored schemas -> split/merge recordType.xsd + parameters.xsd into:
    basicTypes.xsd (all xsd simple types decimalList, decimalPair...)
    simpleTypes.xsd (Boolean, Quantity, Count, Category, Text, ItemDefinition)
    aggregateTypes.xsd (Record, Vector, Array, Series, ConditionalValue)
    curveTypes.xsd (Curve, NormalizedCurve)
    positionTypes (Position, SquareMatrix, GeoLocationArea, Envelope)
    --> Should be able to eliminate recordType.xsd and SWE_basicTypes.xsd (need to confirm with Simon)
    
2006-10-10
(1) Added DataStreamDefinition in data.xsd using MultiplexEncoding

2006-11-01  Several undocumented changes happened here

2006-12-18 (SVN version was 1306)
(1) switched to gml 3.1.1
(2) Removed recordType.xsd.old
(3) Removed ItemDefinition from simpleTypes and corresponding schema simpleTypeDerivation.xsd
(4) Renamed "referenceAxis" attribute in data types to "axisID" and clarified the annotation

2007-01-18 
(1) basicTypes.xsd:
replace AssociationAttributes with gml:AssociationAttributeGroup
merge SWE_basicTypes in
use UomSymbol for uom "code"
(2) simpleTypes.xsd:
General revision from type-derivation -> content-model-composition style
[Rationale: type derivation is only necessary to support substitution groups, which were not present; 
presence of complex derivation-by-restriction patterns suggested over-generalization of parents] 
Note: net effect is no change in elements!
(3) aggregates.xsd -> xmlData.xsd
(4) aggregateTypes.xsd:
add XMLData to the AnyData group
(5) phenomenon.xsd:
change to include basicTypes.xsd instead of SWE_basicTypes.xsd
(6) swe.xsd:
add include phenomenon.xsd and temporalAggregates.xsd
(7) added some notes and questions to Alex

2007-01-19 - by Alex Robin
(1) basicTypes.xsd
    Answered Simon's question about similarities with gml:TimePositionType
(2) simpleTypes.xsd:
    finished cleaning up simpleTypes.xsd and responded to some of Simon's comments. 
    Removed hard typed components for quality and used generic components instead.
    Type of quality will be specified through the use of URIs like on other components.
    Made CodeSpace an element just like Uom (following Simon's suggestion and my own intention)
(3) aggregateTypes.xsd:
    Added ConditionalData for future use in SensorML
(4) Created a folder for version 1.0

2007-07-24
(1) Changed imported schema location to relative paths according to OGC policy

=== SWE v1.0 published as sweCommon V1.0.0 defined in the OGC SensorML document 07-000 ===

2007-10-22 - Mike Botts & Simon Cox
Changes made as a result of Corrigendum 1 (OGC 07-122r2):
(1) In aggregateTypes.xsd, added recordCount attribute to DataValuePropertyType
(2) In aggregateTypes.xsd, renamed SimpleDataPropertyType to AnyDataPropertyType
(3) In aggregateTypes.xsd, allowed for optional "value" element in DataArray even when "encoding" 
      element is present; brings DataArray in line with other SWE Common data components and supports 
      need for template in SOS service
(4) In basicTypes.xsd, removed all elements of TypedValue*
(5) In phenomenon.xsd, changed import of basicTypes to import of aggregateTypes
(6) In phenomenon.xsd, changed singleConstraint to AnyDataPropertyType (from TypedValuePropertyType)
(7) In phenomenon.xsd, changed constraintList to DataArrayPropertyType (from TypedValueListPropertyType)
(8) Updated SML namespace version to 1.0.1

2007-10-25 - Kevin Stegemoller
(1) Added copyright statement
(2) Minor documentation changes

=== SWE v1.0.1 published as sweCommon V1.0.1 defined in the OGC SensorML document 07-122r2 ===

2008-08-22 - Simon Cox
Create a GML 3.2 implementation

1. Changed target namespace to http://www.opengis.net/swe/1.0/gml32 in all documents
2. Change GML dependency to <xs:import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://schemas.opengis.net/gml/3.2.1/gml.xsd"/> in all documents
3. In basicType.xsd, replace swe:UomSymbol derivation with gml:UomSymbol







sweCommon/1.0.1_gml32/.svn/text-base/curveTypes.xsd.svn-base
 
	 
		 Schema for defining different types of curves based on aggregate data types

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	
	
	 
		 
			 Curve describing variations of a parameter vs. another quantity
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Curve is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	
	
	 
		 
			 
			 
		
	




sweCommon/1.0.1_gml32/.svn/text-base/data.xsd.svn-base
 
	 
		 Schema allowing definition of structure and encoding of sensor data. Multiplexed streams can also be described

		      Copyright (c) 2008 OGC, All Rights Reserved.
		      For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	 
	
	 
		
				 
					 
					 
				
				 
			
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		
				 
					 
					 
				
				 
			
	
	
	 
		 
			 
		
		 
	
	




sweCommon/1.0.1_gml32/.svn/text-base/encoding.xsd.svn-base
 
	 
		 Defines basic ResponseType definition and commonly used sensor characteristics

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	
	 
		 
			 
			 
			 
			 
		
		 
	
	
	 
		 
		
		
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Max three characters to use as token or block separator
		
		 
			 
		
	
	
	 
		 
			 One character to use as a decimal separator
		
		 
			 
		
	
	
	
	 
		 
			 
				 
					 
						 
							 
								 
									 
										 
											 
											 
											 
											 
											 
											 
											 
										
									
									 
										 
											 
											 
											 
											 
											 
											 
										
									
								
							
						
					
					 
					 
					 
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 
			 
		
	
	
	 
		 
			 Allows specification of the stream/packaging format used (ex: RTP, ASF, AAF, TML...)
		
	
	
	 
		 
			 
				 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	 
		 
			 Carries the designator for an element implementing an XML-encoded data-type
		
	
	
	 
		 
			 Carries the designator for an element implementing an XML-encoded data-type
		
		 
			 
				 
					 
						 May be any XML Schema defined global element. 
		typically this will be swe:Array, swe:Record, cv:CV_DiscreteCoverage, etc
					
				
			
		
	
	




sweCommon/1.0.1_gml32/.svn/text-base/phenomenon.xsd.svn-base
 
	 
		 phenomenon.xsd

A GML conformant schema 
for definitions of phenomena, per Annex C of OM specification

			Copyright (c) 2008 OGC, All Rights Reserved.
			For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	 
	 
	
	 
		 
			 Basic Phenomenon definition, and head of substitution group of specialized phenomenon defs. 
			gml:description may be used for a more extensive description of the semantics, with a link to a definitive version (if available).  
			gml:name should be used for the name or label.
			
			Note: In GML 3.2 the gml:identifier element should be used for the identifier assigned by or preferred by the data provider. 
			This identifier will typically be in the form of a URN, for example following the OGC URN scheme
			e.g. urn:x-ogc:def:phenomenon:OGC:Age
			
		
		 
			 
		
	
	
	 
		 
			 Basic Phenomenon definition, and head of substitution group of specialized phenomenon defs. 
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 A scalar Phenomenon is defined by adding constraints to an existing property.
		
		 
			 
				 
					 
						 
							 Property that forms the basis for generating a set of more refined Phenomena; e.g. Chemical Composition, Radiance
						
					
					 
						 
							 Constraints that cannot be expressed as values of an orthogonal/helper phenomenon
						
					
					 
						 
							 Constraint expressed as a value or range of an orthogonal/helper phenomenon
						
					
				
			
		
	
	
	 
		 
			 Description of a scalar Phenomenon defined by adding constraints to a property previously defined elsewhere.
		
	
	
	
	 
		 
			 Description of a set of Phenomena.  
	  CompoundPhenomenon is the abstract head of a substitution group of specialized compound phenomena
		
		 
			 
				 
					 
						 The number of components in the tuple
					
				
			
		
	
	
	 
		 
			 Description of a set of Phenomena.  
	  CompoundPhenomenon is the abstract head of a substitution group of specialized compound phenomena
		
	
	
	 
		 
			 A Phenomenon defined as a set of explicitly enumerated components which may or may not be related to one another
		
		 
			 
				 
					 
						 
							 Optional phenomenon that forms the basis for generating more specialized composite Phenomenon by adding more components
						
					
					 
				
			
		
	
	
	 
		 
			 A Phenomenon defined as a set of explicitly enumerated components which may or may not be related to one another
		
	
	
	 
		 
			 A phenomenon defined as a base property convolved with a set of constraints
      The set of constraints may be either
      * an explicit set of soft-typed measures, intervals and categories
      * one or more lists of soft-typed measures, intervals and categories
      * one or more sequences of soft-typed measures and intervals
		
		 
			 
				 
					 
						 
							 Phenomenon that forms the basis for generating a set of more refined Phenomena; e.g. Chemical Composition, Radiance
						
					
					 
						 
							 A set of values of some secondary property that constraints the basePhenomenon to generate a Phenomenon set.  
							If more than one set of constraints are possible, then these are applied simultaneously to generate
						
					
					 
						 
							 Other constraints are described in text
						
					
				
			
		
	
	
	 
		 
			 A phenomenon defined as a base property convolved with a set of constraints
      The set of constraints may be either
      * an explicit set of soft-typed measures, intervals and categories
      * one or more lists of soft-typed measures, intervals and categories
      * one or more sequences of soft-typed measures and intervals
		
	
	
	




sweCommon/1.0.1_gml32/.svn/text-base/positionTypes.xsd.svn-base
 
	 
		 Schema for defining position data (location, orientation, etc...) based on aggregate data types

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	
	 
		 
			 Position is given as a group of Vectors/Matrices, each of which can specify location, orientation, velocity, angularVelocity, acceleration or angularAcceleration or a combination of those in a composite state Vector. Each Vector can have a separate frame of reference or inherit the frame from the parent Position object.
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 Points to a spatial reference frame definition. Coordinates of the vector will be expressed in this reference frame
					
				
				 
					 
						 Specifies the spatial frame which location and/or orientation is given by the enclosing vector
					
				
			
		
	
	
	 
		 
			 This is a square matrix (so the size is the square of one dimension) which is a DataArray of Quantities. 		It has a referenceFrame in which the matrix components are described
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Vector/SquareMatrix is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
			 
		
	
	
	
	
	 
		 
			 Area used to define bounding boxes
		
		 
			 
				 
					 
						 
							 
								 Is this an aggregate geometry?
							
						
					
					 
				
			
		
	
	
	 
		 
			 Envelope described using two vectors specifying lower and upper corner points.
           This is typically use to define rectangular bounding boxes in any coordinate system.
		
	
	
	 
		 
			 
				 
					 
						 
							 Optionally provides time range during which this bounding envelope applies
						
					
					 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 Points to a spatial reference frame definition. Coordinates of the vector will be expressed in this reference frame
					
				
				 
					 
						 Specifies the spatial frame which location and/or orientation is given by the enclosing vector
					
				
			
		
	
	
	 
		 
			 A Vector is a special type of DataRecord that takes a list of numerical scalars called coordinates. The Vector has a referenceFrame in which the coordinates are expressed
		
	
	
	 
		 
			 
				 
					 
						 
							 
							 
						
					
				
			
		
	
	
	 
		 
			 Vector is a data-type so usually appears "by value" rather than by reference. However, by reference is still useful when objects, for instance, share a location.
		
		 
			 
		
		 
	
	
	




sweCommon/1.0.1_gml32/.svn/text-base/Readme.txt.svn-base
OpenGIS(r) SWE Common v1.0.1 - ReadMe.txt

Sensor Web Enablement (SWE) Common data types v1.0.1.

The SWE Common schema were approved as Version 1.0.0 by the OGC membership on
23 June 2007.  They are defined in the OGC SensorML document 07-000.
Corrigendum 1 (OGC 07-122r2) made changes to these and were released as
sweCommon 1.0.1.

See ChangeLog.txt for additional details.

-----------------------------------------------------------------------

Policies, Procedures, Terms, and Conditions of OGC(r) are available
  http://www.opengeospatial.org/ogc/policies/ .

Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved.





sweCommon/1.0.1_gml32/.svn/text-base/simpleTypes.xsd.svn-base
 
	 
		 SWE common schema for simple data types (i.e. without children)		

		These have mostly been implemented using the "composition" pattern, rather than using inheritance/type-derivation. 
Note: In general, content model definition using composition is more easily accomplished using groups and attribute groups.
			* global/named type definitions are not needed unless type derivation is required. 
			* type derivation is not needed unless substitution groups are to be supported. 
			* parent types that are too generalized will require derivation by restriction further down, so should be avoided.

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	 
	 
	 
	
	
	
	 
		 
			 Base type for all data components. 
			This is implemented as an XML Schema complexType because it includes both element and attribute content.
		
		 
			 
				 
					 
						 Specifies if the value of a component stays fixed in time or is variable. Default is variable
					
				
				 
					 
						 Points to semantics information defining the precise nature of the component
					
				
			
		
	
	
	
	
	 
		 
			 Basic attributes required for all simple data components (i.e. without children)
		
		 
			 
				 A reference frame anchors a value to a datum or interval scale
			
		
		 
			 
				 Specifies the reference axis using the gml:axisID. The reference frame URI is inherited from parent Vector
			
		
	
	
	
	
	 
		 
			 Scalar component used to express truth: True or False, 0 or 1
		
		 
			 
				 
					 
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Boolean is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 Decimal number with optional unit and constraints
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Quantity is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Decimal pair for specifying a quantity range with constraints
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
						
					
					 
				
			
		
	
	
	 
		 
			 QuantityRange is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Integer number used for a counting value
		
		 
			 
				 
					 
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
						
					
					 
				
			
		
	
	
	 
		 
			 Count is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Integer pair used for specifying a count range
		
		 
			 
				 
					 
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
							
						
						
					
					 
				
			
		
	
	
	 
		 
			 CountRange is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 A simple token identifying a term or category (single spaces allowed); definition attribute should provide dictionary entry useful for interpretation of the value
		
		 
			 
				 
					 
						 
							 
								 Provides link to dictionary or rule set to which the value belongs
							
						
						 
							 
								 The constraint property defines the permitted values, as an enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Category is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 
				 Specifies the origin of the temporal reference frame as an ISO8601 date (used to specify time after an epoch)
			
		
		 
			 
				 Points to a temporal reference frame definition. Time value will be expressed relative to this frame
			
		
		 
			 
				 Specifies the temporal frame which origin is given by this time component
			
		
	
	
	 
		 
			 Either ISO 8601 (e.g. 2004-04-18T12:03:04.6Z) or time relative to a time origin
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
					 
				
			
		
	
	
	 
		 
			 Time is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	 
		 
			 Time value pair for specifying a time range (can be a decimal or ISO 8601)
		
		 
			 
				 
					 
						 
							 
								 Unit of measure
							
						
						 
							 
								 The constraint property defines the permitted values, as a range or enumerated list
							
						
						 
							 
								 The quality property provides an indication of the reliability of estimates of the asociated value
							
						
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
							
						
					
					 
				
			
		
	
	
	 
		 
			 TimeRange is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 Free textual component
		
		 
			 
				 
					 
						 
							 
								 Value is optional, to enable structure to act in a schema for values provided using other encodings
							
						
					
				
			
		
	
	
	 
		 
			 Text is a data-type so usually appears "by value" rather than by reference.
		
		 
			 
		
	
	
	
	
	 
		 
			 ObservableProperty should be used to identify (through reference only) stimuli or measurable property types. The consequence is that it does not have a uom because it has not been measured yet.  This is used to define sensor/detector/actuator inputs and outputs, for instance.
		
		 
			 
				 
			
		
	
	
	
	
	 
		 
			 Allows for a simple quality assessment of the values carried by this component.
	      This value can be numerical or categorical thus allowing for things like accuracy, precision, tolerance, confidence level, etc...
	      
	      The  meaning of the quality measure is indicated by the definition attribute of the chosen sub-component.
	      
	      The use of the 'ref'attribute indicate that the value of accuracy is included itself in the data inside the referred component. 
	      
	      This soft-typed Data Quality description may be replaced by ISO 19115/19139 DQ_DataQuality elements in later versions
		
		 
			 
			 
			 
			 
		
		 
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 List of allowed values (There is an implicit AND between all members)
		
		 
			 
				 
					 
						 
							 Specifies minimum allowed value for an open interval (no max)
						
					
					 
						 
							 Specifies maximum allowed value for an open interval (no min)
						
					
				
				 
					 
						 
							 Range of allowed values (closed interval) for this component
						
					
					 
						 
							 List of allowed values for this component
						
					
				
			
			 
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 Enumeration of allowed values
		
		 
			 
				 
					 
						 List of allowed token values for this component
					
					
					
				
			
			 
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 List of allowed time values (There is an implicit AND between all members)
		
		 
			 
				 
					 
						 
							 Specifies minimum allowed time value for an open interval (no max)
						
					
					 
						 
							 Specifies maximum allowed time value for an open interval (no min)
						
					
				
				 
					 
						 
							 Range of allowed time values (closed interval) for this component
						
					
					 
						 
							 List of allowed time values for this component
						
					
				
			
			 
		
	
	
	
	
	 
		 
			 Re-usable group providing a choice of scalar data types
		
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Complex Type for all properties taking the AnyScalar Group
		
		 
		 
		 
	
	
	 
		 
			 Re-usable group providing a choice of numeric data types
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Re-usable group providing a choice of range data types
		
		 
			 
			 
			 
		
	




sweCommon/1.0.1_gml32/.svn/text-base/swe.xsd.svn-base
 
	 
		 swe document root definition

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	
	
	 
	 
	 
	 
	 
	 
	




sweCommon/1.0.1_gml32/.svn/text-base/sweCommonPackageDependencies.png.svn-base


sweCommon/1.0.1_gml32/.svn/text-base/temporalAggregates.xsd.svn-base
 
	 
		 
temporalAggregates.xsd

time geometric complex, time aggregates and time grids

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice http://www.opengeospatial.org/legal/

	
	
	
	 
	
	
	
	 
		 
			 Compact list of time instants, following gml:posList pattern. 
		
		 
	
	
	 
		 
			 TimePositionList instances hold a sequence of time positions within the same frame.
		
		 
			 
				 
				 
				 
				 
					 
						 "count" allows to specify the number of direct positions in the list. 
					
				
			
		
	
	
	
	
	 
		 
			 Property type not provided by GML
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Explicit implementation of ISO 19108 TM_GeometricComplex - a self-consistent set of TimeInstants and TimePeriods
		
		 
			 
				 
					 
						 
							 Reference to an identified time primitive
						
					
				
			
		
	
	
	 
		 
			 Explicit implementation of ISO 19108 TM_GeometricComplex - a self-consistent set of TimeInstants and TimePeriods
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	
	
	 
		 
			 Property type not provided by GML
		
		 
			 
		
		 
	
	
	 
		 
			 an arbitrary set of TimeObjects, often TimeInstants and TimePeriods
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 an arbitrary set of TimeObjects, often TimeInstants and TimePeriods
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
		 
			 A set of uniformly spaced time instants described using an implicit notation.
      Follow pattern of (ISO 19123) spatial grids: 
  these have (dimension,axisName,extent(,origin,offsetVector))
  For temporal case, dimension is fixed (1), axisName is fixed ("time")
		
		 
			 
				 
					 
					 
						 
							 
								 Simple-content time position
							
						
						 
							 
								 Reference to an identified time instant
							
						
					
					 
						 
							 
								 XML Schema built-in simple type for duration: e.g. 
                P1Y (1 year) 
                P1M (1 month) 
                P1DT12H (1 day 12 hours) 
                PT5M (5 minutes) 
                PT0.007S (7 milliseconds)
							
						
						 
							 
								 representation of the ISO 11404 model of a time interval length: e.g. 
                value=1, unit="year"  
                value=1, unit="other:month" (or see next)
                value=1, unit="year" radix="12" factor="1" (1/12 year)
                value=1.5, unit="day"  
                value=36, unit="hour" 
                value=5, unit="minute"  
                value=7, unit="second" radix="10" factor="3" (7 milliseconds)
							
						
					
					 
				
			
		
	
	
	 
		 
			 A set of uniformly spaced time instants described using an implicit notation
			      Follow pattern of (ISO 19123) spatial grids: 
  these have (dimension,axisName,extent(,origin,offsetVector))
  For temporal case, dimension is fixed (1), axisName is fixed ("time")
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
				 
					 Grid extent specified in grid coordinates - i.e. 2 integers
				
				 
					 
						 
						 
					
				
			
		
	
	
	 
		 
			 Extend time instant grid with window size property
		
		 
			 
		
	
	
	 
		 
			 A set of uniformly spaced time instants described using an implicit notation
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 Extend time instant grid with window size property
		
		 
			 
				 
					 
						 
							 
								 XML Schema built-in simple type for duration
							
						
						 
							 
								 representation of the ISO 11404 model of a time interval length
							
						
					
				
			
		
	
	
	 
		 
			 A set of uniformly spaced time intervals described using an implicit notation
		
	
	
	 
		 
			 
		
		 
	
	




sweCommon/1.0.1_gml32/.svn/text-base/xmlData.xsd.svn-base
 
	 
		 A basic schema for XML-tagged data aggregates (Records and Arrays), using terminology consistent with ISO 11404. 

				Copyright (c) 2008 OGC, All Rights Reserved.
				For conditions, see OGC Software Notice - http://www.opengeospatial.org/legal/
		
	
	
	
	 
		 
			 An Item is an item of data of any type
		
	
	
	 
		 
			 
		
	
	
	
	 
		 
			 A record is a list of fields
		
		 
			 
				 
					 A Record/field contains an item of data
				
			
		
		 
			 
				 Optional pointer to record-type schema
			
		
		 
			 
				 Optional count of the number of fields in the record. 
			
		
	
	
	 
		 
			 A record is a list of fields
		
	
	
	 
		 
			 
		
	
	
	
	 
		 
			 An array is an indexed set of records of homogeneous type
		
		 
			 
				 
					 An Array/element contains an Item or a Record or an Array
				
			
		
		 
			 
				 Optional pointer to the record-type schema. This should be used when the elements of the array are Records
			
		
		 
			 
				 Optional count of the number of elements in the array. 
			
		
	
	
	 
		 
			 An array is an indexed set of records of homogeneous type
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Choice of Item or Record or Array - used in composing Arrays
		
		 
	
	
	 
		 
			 Convenience group that bundles all the soft-typed XML-encoded aggregates into a choice group
		
		 
			 
			 
			 
		
	
	




sweCommon/1.0.1_gml32/.svn/prop-base/sweCommonPackageDependencies.png.svn-base
K 13
svn:mime-type
V 24
application/octet-stream
END



