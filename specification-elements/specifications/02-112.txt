
Open GIS Consortium
35 Main Street, Suite 5
Wayland, MA 01778

Telephone: +1-508-655-5858
Facsimile: +1-508-655-2237

Editor:
George Percivall

Telephone: +1-301-286-4073
percivall@gsfc.nasa.gov

The OpenGIS Abstract Specification
Topic 12: OpenGIS Service Architecture

Version 4.3

OpenGIS Project Document Number 02-112.doc front material



The OpenGIS Abstract Specification

Copyright ' 2002, Open GIS Consortium, Inc.

NOTICE

The information contained in this document is subject to change without notice.

The material in this document details an Open GIS Consortium (OGC) specification in accordance with the license and
notice set forth on this page. This document does not represent a commitment to implement any portion of this
specification in any companies  products.

While the information in this publication is beleived to be accurate, the Open GIS Consortium makes no warranty of
any kind with regard to this material including but not limited to the implied warranties of merchantability and fitness
for a particular purpose. The Open GIS Consortium shall not be liable for errors contained herein or for incidental or
consequential damages in connection with the furnishing, performance or use of this material. The information
contained in this document is subject to change without notice.

The Open GIS Consortium is and shall at all times be the sole entity that may authorize developers, suppliers and
sellers of computer software to use certification marks, trademarks, or other special designations to indicate compliance
with these materials.

This document contains information which is protected by copyright. All Rights Reserved. Except as otherwise
provided herein, no part of this work may be reproduced or used in any form or by any means (graphic, electronic, or
mechanical including photocopying, recording, taping, or information storage and retrieval systems) without the
permission of the copyright owner. All copies of this document must include the copyright and other information
contained on this page.

The copyright owner grants member companies of the OGC permission to make a limited number of copies of this
document (up to fifty copies) for their internal use as a part of the OGC Technology Development process.



The OpenGIS Abstract Specification

Revision History

Date Description
Carry 98-112r1 forward as 99-112; incorporate change proposal 99-009, approved 9 February
1999 into Section 5; follow guidance of change proposal 99-010 w/ friendly amendments to
remove Section 1 boilerplate from individual topic volumes, approved 9 February 1999;
incorporate change proposal 99-003 (Feature Linking), approved 9 February 1999; fix mislabeled
heading (from Image Merging and Rectification Services to Image Map Generation Services); fix
garbled heading.

May 2001
Version 4.1

Based on resolution adopted at OGC Technical Committee in April 2001, adopt ISO CD 19119.2
as OGC Topic 12.

September 2001
Version 4.2

Based on a resolution adopted at OGC Technical Committee in September 2001, adopt the final
text of CD 19119 as OGC Topic 12.  Additionally version 4.1 includes the contents of OGC
document 045r1 as approved by the TC for inclusion during the June 2001 TC meeting.

January 2002
Version 4.3

Incorporated ISO DIS 19119, replacing the final text of ISO CD 19119  in version 4.2.  Retain
the Future Work of Version 4.2. ISO/DIS 19119 Geographic information  Services  issued by
ISO Central Secretariat for DIS Enquiry vote beginning on 2002-01-24.

Future Work
(Editors note: these future work items were made as OGC comments on the previous version of this document (Version
4.1) and have, in part, been resolved and implemented.  The entire list as adopted at the June 2001 OGC meeting is
retained here for completeness at this time.)
Improvement of this document is needed to meet all OGC Abstract Specification needs, including the following.
1. Adapt Annex A: Conformance, to meet OGC needs for compliance of OGC Implementation Specifications with the
Abstract Specification. For example, either ISO/TS 19103 also needs to be adopted and distributed by the OGC, or the
current compliance material needs to be adapted so that use of ISO/TS 19103 is not considered normative.
2. Add additional services to those now listed in Clause 7.3: Geospatial services, to include all high-level services
known to the OGC, including all mentioned in the old Topic 12, OGC document 99-112. For example, the comments
on ISO/CD 19119.2 submitted by OGC (written by Arliss Whiteside) suggested adding about nine services based on
the old OGC Topic 12, and those suggestions are known to be incomplete.
3. Add service details as they are developed by various OGC Special Interest Groups and Working Groups (SIGs and
WGs), including adding references to service details recorded in other parts of the OGC Abstract Specification. For
example, Topic 15: Image Exploitation Services includes considerably more detail on some services.
4. Consider adopting later versions of ISO 19119, as they become available.



 

 

 

DRAFT INTERNATIONAL STANDARD ISO/DIS 19119 

ISO/TC 211 Secretariat:  NSF 

Voting begins on Voting terminates on 
2002-01-24 2002-06-24 

INTERNATIONAL ORGANIZATION FOR STANDARDIZATION   •   МЕЖДУНАРОДНАЯ ОРГАНИЗАЦИЯ ПО СТАНДАРТИЗАЦИИ   •   ORGANISATION INTERNATIONALE DE NORMALISATION 
  

Geographic information — Services  
 

 
Information géographique — Services  

ICS  35.240.70 

 

 

 
In accordance with the provisions of Council Resolution 15/1993 this document is circulated 
in the English language only. 

Conformément aux dispositions de la Résolution du Conseil 15/1993, ce document est 
distribué en version anglaise seulement.  

 

To expedite distribution, this document is circulated as received from the committee 
secretariat. ISO Central Secretariat work of editing and text composition will be undertaken at 
publication stage. 

Pour accélérer la distribution, le présent document est distribué tel qu'il est parvenu du 
secrétariat du comité. Le travail de rédaction et de composition de texte sera effectué au 
Secrétariat central de l'ISO au stade de publication.  

 
 
THIS DOCUMENT IS A DRAFT CIRCULATED FOR COMMENT AND APPROVAL. IT IS THEREFORE SUBJECT TO CHANGE AND MAY NOT BE REFERRED TO 
AS AN INTERNATIONAL STANDARD UNTIL PUBLISHED AS SUCH. 

IN ADDITION TO THEIR EVALUATION AS BEING ACCEPTABLE FOR INDUSTRIAL, TECHNOLOGICAL, COMMERCIAL AND USER PURPOSES, DRAFT 
INTERNATIONAL STANDARDS MAY ON OCCASION HAVE TO BE CONSIDERED IN THE LIGHT OF THEIR POTENTIAL TO BECOME STANDARDS TO WHICH 
REFERENCE MAY BE MADE IN NATIONAL REGULATIONS. 

©   International Organization for Standardization, 2002  



ISO/DIS 19119

ii

Copyright notice

This ISO document is a Draft International Standard and is copyright-protected by ISO. Except as permitted
under the applicable laws of the user's country, neither this ISO draft nor any extract from it may be reproduced,
stored in a retrieval system or transmitted in any form or by any means, electronic, photocopying, recording or
otherwise, without prior written permission being secured.

Requests for permission to reproduce should be addressed to either ISO at the address below or ISO's member
body in the country of the requester.

ISO copyright office
Case postale 56 • CH-1211 Geneva 20
Tel.  + 41 22 749 01 11
Fax  + 41 22 749 09 47
E-mail  copyright@iso.ch
Web  www.iso.ch

Reproduction may be subject to royalty payments or a licensing agreement.

Violators may be prosecuted.



ISO/DIS 19119

© ISO 2001 — All rights reserved iii

Contents

Foreword.................................................................................................................................................................... vi
Introduction ............................................................................................................................................................... vi
1 Scope ............................................................................................................................................................. 1
2 Conformance ................................................................................................................................................. 1
3 Normative references ................................................................................................................................... 1
4 Terms and definitions................................................................................................................................... 2
5 Abbreviated terms......................................................................................................................................... 3
6 Overview of geographic services architecture .......................................................................................... 4
6.1 Purpose and justification ............................................................................................................................. 4
6.2 Interoperability reference model – based on ISO RM-ODP ...................................................................... 4
6.3 Service Abstraction ...................................................................................................................................... 6
6.4 Interoperability .............................................................................................................................................. 6
6.5 Use of other geographic information standards in service specifications............................................. 7
6.6 Architecture Patterns.................................................................................................................................... 7
7 Computational viewpoint: a basis for service chaining............................................................................ 8
7.1 Component and service interoperability and the computational viewpoint........................................... 8
7.2 Services, interfaces and operations ........................................................................................................... 8
7.3 Service chaining.......................................................................................................................................... 10
7.3.1 Introduction to Service Chaining .............................................................................................................. 10
7.3.2 Anatomy of a service chain ....................................................................................................................... 10
7.3.3 Services organizer folder ........................................................................................................................... 12
7.3.4 Services to enable service chaining ......................................................................................................... 12
7.3.5 Architecture patterns for service chaining .............................................................................................. 13
7.3.6 Variations on chaining patterns ................................................................................................................ 18
7.4 Service metadata......................................................................................................................................... 19
7.4.1 Introduction ................................................................................................................................................. 19
7.4.2 Service metadata main class diagram...................................................................................................... 20
7.4.3 Data dictionary for geographic service metadata ................................................................................... 21
7.5 Service instance of unknown type ............................................................................................................ 21
7.6 Simple service architecture ....................................................................................................................... 22
8 Information viewpoint: a basis for semantic interoperability................................................................. 22
8.1 Information model interoperability and the information viewpoint ....................................................... 22
8.2 Extended open systems environment for geographic services ............................................................ 23
8.3 Geographic services taxonomy................................................................................................................. 24
8.3.1 Geographic services taxonomy requirements......................................................................................... 24
8.3.2 Geographic human interaction services .................................................................................................. 25
8.3.3 Geographic model/information management services........................................................................... 26
8.3.4 Geographic workflow/task management services .................................................................................. 27
8.3.5 Geographic processing services .............................................................................................................. 27
8.3.6 Geographic communication services ....................................................................................................... 30
8.3.7 Geographic system management services.............................................................................................. 31
8.4 ISO 19100 series standards in geographic service taxonomy............................................................... 31
8.5 Geographic service chaining validity ....................................................................................................... 31
8.6 Services organizer folder (SOF) ................................................................................................................ 32
8.6.1 Introduction ................................................................................................................................................. 32
8.6.2 Image Exploitation SOF.............................................................................................................................. 32
8.6.3 Geographic data fusion SOF ..................................................................................................................... 33
9 Engineering viewpoint: A basis for distribution...................................................................................... 34



ISO/DIS 19119

iv © ISO 2001 — All rights reserved

9.1 Distribution transparencies and the engineering viewpoint .................................................................. 34
9.2 Distributing components using a multi-tier architecture model ............................................................ 35
10 Technology viewpoint: a basis for cross platform interoperability....................................................... 38
10.1 Infrastructure interoperability and the technology viewpoint................................................................ 38
10.2 A need for multiple platform-specific specifications .............................................................................. 39
10.3 Conformance between Platform-neutral and Platform-specific service specifications ...................... 39
10.4 From platform-neutral to platform-specific specifications..................................................................... 40
Annex A (normative)  Conformance ........................................................................................................................ 41
A.1 Conformance Requirements ...................................................................................................................... 41
A.2 Service architecture test module .............................................................................................................. 41
A.2.1 Geographic service types definition ......................................................................................................... 41
A.2.2 Service chain ............................................................................................................................................... 41
A.2.3 Service chaining patterns .......................................................................................................................... 42
A.2.4 Simple service architecture ....................................................................................................................... 42
A.3 Service specification test module ............................................................................................................. 42
A.3.1 Introduction ................................................................................................................................................. 42
A.3.2 Platform-neutral service specifications.................................................................................................... 42
A.3.3 Platform-specific service specifications .................................................................................................. 43
A.3.4 Platform-specific service implementations.............................................................................................. 44
Annex B (informative)  Example user scenarios .................................................................................................... 45
B.1 Example 1 - Service Chaining for Remote Sensed Data ......................................................................... 45
B.1.1 Summary...................................................................................................................................................... 45
B.1.2 Precondition ................................................................................................................................................ 45
B.1.3 Detailed Steps.............................................................................................................................................. 45
B.1.4 Post Conditions........................................................................................................................................... 46
B.1.5 Service Chain Directed Acyclic Graph...................................................................................................... 46
B.2 Example 2 - Roadside Services ................................................................................................................. 47
B.2.1 Summary...................................................................................................................................................... 47
B.2.2 Precondition ................................................................................................................................................ 47
B.2.3 Detailed Steps.............................................................................................................................................. 47
Annex C (normative)  Data dictionary for geographic service metadata............................................................. 48
C.1 Data dictionary overview............................................................................................................................ 48
C.1.1 Introduction ................................................................................................................................................. 48
C.1.2 Attribute name/Role name.......................................................................................................................... 48
C.1.3 Definition...................................................................................................................................................... 48
C.1.4 Obligation/Condition................................................................................................................................... 48
C.1.5 Maximum occurrence ................................................................................................................................. 49
C.1.6 Data type ...................................................................................................................................................... 49
C.1.7 Attribute class or target class of role ....................................................................................................... 49
C.1.8 Prefixes to Names ....................................................................................................................................... 49
C.2 Metadata data dictionaries ......................................................................................................................... 49
C.2.1 Data dictionary for MD_Identification ....................................................................................................... 49
C.2.2 Data dictionary for SV_ServiceIdentification ........................................................................................... 51
C.2.3 Data dictionary for SV_OperationMetadata.............................................................................................. 52
C.2.4 Data dictionary for SV_ServiceProvider ................................................................................................... 52
C.2.5 Data dictionary for MD_DataIdentification ............................................................................................... 53
C.2.6 Data dictionary for SV_OperationChainMetadata.................................................................................... 53
C.2.7 Data dictionary for SV_Parameter............................................................................................................. 53
Annex D (informative)  Mapping to Distributed Computing Platforms ................................................................ 55
D.1 From platform-neutral to platform-specific specifications..................................................................... 55
D.2 UML constructs used in the ISO 19100 series of standards .................................................................. 57
D.3 Platform-neutral technology model........................................................................................................... 58
D.4 Mapping to CORBA-specific service specifications ............................................................................... 59
D.5 Mapping to MS COM-specific service specifications.............................................................................. 61
D.6 Mapping to J2EE/EJB-specific service specifications............................................................................ 62
D.7 Mapping to EXPRESS/SDAI-specific service specifications .................................................................. 64
D.8 Mapping to SQL-specific service specifications ..................................................................................... 65



ISO/DIS 19119

© ISO 2001 — All rights reserved v

Bibliography ............................................................................................................................................................. 67

Figures
Figure 1 — Abstract and Implementation Service Specifications................................................................................ 6

Figure 2 — Interoperability........................................................................................................................................... 7

Figure 3 — Service definition relationships.................................................................................................................. 9

Figure 4 — Chain ....................................................................................................................................................... 11

Figure 5 — Transparent chaining .............................................................................................................................. 15

Figure 6 — Translucent chaining ............................................................................................................................... 16

Figure 7 — Opaque chaining ..................................................................................................................................... 18

Figure 8 — Services and service metadata ............................................................................................................... 20

Figure 9 — Service metadata class diagram............................................................................................................. 21

Figure 10 — Logical multi-tiered architecture ............................................................................................................ 35

Figure 11 — From Logical 4-tier to Physical 2-tier or 3-tier architecture ................................................................... 36

Figure 12 — Mapping logical 4 tier to thick and thin clients....................................................................................... 37

Figure 13 — Mapping from platform independent UML models ................................................................................ 38

Figure 14 — Technology viewpoint model of the Interoperability Reference Model ................................................. 39

Figure 15 — From platform-neutral abstract specifications to multiple platform-specific implementations............... 40

Figure B.1 — DAG for Service Chaining Scenario Example ..................................................................................... 46

Figure B.2 — Roadside service scenario................................................................................................................... 47

Figure D.1 — From platform-neutral to specific models through UML mappings...................................................... 56

Figure D.2 — From platform-neutral to platform-specific specifications.................................................................... 57

Figure D.3 — Platform-neutral abstract technology model........................................................................................ 58

Figure D.4 — CORBA Technologies related to Abstract Architecture model............................................................ 59

Figure D.5 — MS DNA/COM Model .......................................................................................................................... 61

Figure D.6 — J2EE/EJB model.................................................................................................................................. 62

Figure D.7 — EXPRESS/SDAI model ....................................................................................................................... 64

Figure D.8 — SQL Model........................................................................................................................................... 65



ISO/DIS 19119

vi © ISO 2001 — All rights reserved

Foreword

ISO (the International Organization for Standardization) is a worldwide federation of national standards bodies (ISO
member bodies). The work of preparing International Standards is normally carried out through ISO technical
committees. Each member body interested in a subject for which a technical committee has been established has
the right to be represented on that committee. International organizations, governmental and non-governmental, in
liaison with ISO, also take part in the work. ISO collaborates closely with the International Electrotechnical
Commission (IEC) on all matters of electrotechnical standardization.

International Standards are drafted in accordance with the rules given in the ISO/IEC Directives, Part 3.

The main task of technical committees is to prepare International Standards. Draft International Standards adopted
by the technical committees are circulated to the member bodies for voting. Publication as an International
Standard requires approval by at least 75 % of the member bodies casting a vote.

Attention is drawn to the possibility that some of the elements of this International Standard may be the subject of
patent rights. ISO shall not be held responsible for identifying any or all such patent rights.

ISO 19119 was prepared by Technical Committee ISO/TC 211, Geographic information/Geomatics.

This work item has been harmonized with Topic 12 of the OGC Abstract Specification [3], The Open GIS Service
Architecture, Version 2. Ongoing work in CEN/TC 287, OMG, ODMG and other activities has been taken into
account.

Annexes A and C form a normative part of this International Standard, annexes B and D are for information only.



ISO/DIS 19119

© ISO 2001 — All rights reserved vii

Introduction

The widespread application of computers and use of geographic information systems (GIS) have led to the
increased analysis of geographic data within multiple disciplines. Based on advances in information technology,
society’s reliance on such data is growing.  Geographic datasets are increasingly being shared, exchanged, and
used for purposes other than their producers’ intended ones.  GIS, remote sensing, automated mapping and
facilities management (AM/FM), traffic analysis, geopositioning systems, and other technologies for Geographic
Information (GI) are entering a period of radical integration.

This International Standard provides a framework for developers to create software that enables users to access
and process geographic data from a variety of sources across a generic computing interface within an open
information technology environment.

 “a framework for developers” means this International Standard is based on a comprehensive, common (i.e.,
formed by consensus for general use) plan for interoperable geoprocessing.

 “access and process” means that geodata users can query remote databases and control remote processing
resources, and also take advantage of other distributed computing technologies such as software delivered to
the user's local environment from a remote environment for temporary use.

 “from a variety of sources” means that users will have access to data acquired in a variety of ways and stored
in a wide variety of relational and non-relational databases.

 “across a generic computing interface” means that ISO 19119 interfaces provide reliable communication
between otherwise disparate software resources that are equipped to use these interfaces.

 “within an open information technology environment” means that this Standard enables geoprocessing to take
place outside of the closed environment of monolithic GIS, remote sensing, and AM/FM systems that control
and restrict database, user interface, network, and data manipulation functions.





DRAFT INTERNATIONAL STANDARD ISO/DIS 19119

© ISO 2001 — All rights reserved 1

Geographic information — Services

1 Scope

The scope of this International Standard is as follows:

Identification and definition of the architecture patterns for service interfaces used for geographic information and
definition of the relationships to the Open Systems Environment model.

This International Standard presents a geographic services taxonomy and a list of example geographic services
placed in the services taxonomy.

This International Standard prescribes how to create a platform-neutral service specification, and how to derive
platform-specific service specifications that are conformant with this.

This International Standard provides guidelines for the selection and specification of geographic services from both
platform-neutral and platform-specific perspectives.

2 Conformance

Any product claiming conformance with this International Standard shall pass all the requirements described in the
abstract test suite given in Annex A.

NOTE The definition of an abstract test suite appears in ISO 19105.

3 Normative references

The following standards contain provisions that, through reference in the text, constitute provisions of this
International Standard.  At the time of publication, the editions indicated were valid.  All standards are subject to
revision, and parties to agreements based on this International Standard are encouraged to investigate the
possibility of applying the most recent editions of the standards shown below.  Members of IEC and ISO maintain
registers of currently valid International Standards.

ISO/IEC 10746-1:1998, Information technology — Open Distributed Processing — Reference model: Overview

ISO/IEC 10746-2:1996, Information technology — Open Distributed Processing — Reference model: Foundations

ISO/IEC TR 14252:1996 Information technology — Guide to the POSIX Open System Environment (OSE)

ISO/TS 19103: —1), Geographic information — Conceptual schema language

ISO 19115:—1), Geographic information — Metadata

                                                     

1) To be published.



ISO/DIS 19119

2 © ISO 2001 — All rights reserved

4 Terms and definitions

For the purposes of this International Standard, the following terms and definitions apply.

4.1.1
service
distinct part of the functionality that is provided by an entity through interfaces [ISO/IEC TR 14252]

NOTE See 6.2 for a discussion of service

4.1.2
interface
named set of operations that characterize the behaviour of an entity

NOTE See 6.2 for a discussion of interface

4.1.3
operation
specification of a transformation or query that an object may be called to execute

NOTE An operation has a name and a list of parameters.

NOTE See 6.2 for a discussion of operation

4.1.4
interoperability
capability to communicate, execute programs, or transfer data among various functional units in a manner that
requires the user to have little or no knowledge of the unique characteristics of those units [ISO 2382-1]

4.1.5
service chain
sequence of services where, for each adjacent pair of services, occurrence of the first action is necessary for the
occurrence of the second action

4.1.6
workflow
automation of a business process, in whole or part, during which documents, information or tasks are passed from
one participant to another for action, according to a set of procedural rules

4.1.7
viewpoint (on a system)
form of abstraction achieved using a selected set of architectural concepts and structuring rules, in order to focus
on particular concerns within a system [ISO/IEC 10746-2]

4.1.8
enterprise viewpoint
viewpoint on an ODP system and its environment that focuses on the purpose, scope and policies for that system
[ISO/IEC 10746-2]

4.1.9
information viewpoint
viewpoint on an ODP system and its environment that focuses on the semantics of information and information
processing [ISO/IEC 10746-2]

4.1.10
computational viewpoint
viewpoint on a system and its environment that enables distribution through functional decomposition of the system
into objects which interact at interfaces [ISO/IEC 10746-2]



ISO/DIS 19119

© ISO 2001 — All rights reserved 3

4.1.11
engineering viewpoint
viewpoint on an ODP system and its environment that focuses on the mechanisms and functions required to
support distributed interaction between objects in the system [ISO/IEC 10746-2]

4.1.12
technology viewpoint
viewpoint on an ODP system and its environment that focuses on the choice of technology in that system [ISO/IEC
10746-2]

4.1.13
distribution transparency
property of hiding from a particular user the potential behaviour of some parts of a distributed system [ISO/IEC
10746-2]

NOTE Distribution transparencies enable complexities associated with system distribution to be hidden from applications
where they are irrelevant to their purpose.

5 Abbreviated terms

For the purposes of this document the following abbreviations apply.

API Application Programming Interface

CORBA Common Object Request Broker Architecture

DAG Directed Acyclic Graph

DCP Distributed Computing Platform

DEM Digital Elevation Model

EDOC Enterprise Distributed Object Computing

EJB Enterprise Java Beans

EOSE Extended Open Systems Environment Model

GIOP General Inter-ORB Protocol

HTI Human Technology Interface

IDL Interface Definition Language

HIS Information Technology Human Interaction Service

IIOP Internet Inter-ORB Protocol

IT Information Technology

J2EE Java 2 Enterprise Edition with EJB

JDBC Java Data Base Connectivity

JIM Java IDL

JSP Java Server Pages

MTS Microsoft Transaction Server

OCL Object Constraint Language

ODBC Open Database Connectivity

ODP Open Distributed Processing (see RM-ODP)

OGC Open GIS Consortium

OMG Object Management Group



ISO/DIS 19119

4 © ISO 2001 — All rights reserved

ORB Object Request Broker

OSE Open Systems Environment

RMI Remote Method Invocation

RM-ODP Reference Model of Open Distributed Processing
(ISO/IEC 10746)

RPC Remote Procedure Call

SOAP Simple Object Access Protocol

SOF Service Organizer Folder

SQL Structured Query Language

UML Unified Modelling Language

XML Extensible Markup Language

XML RDF XML Resource Description Framework

6 Overview of geographic services architecture

6.1 Purpose and justification

The definition of service includes a variety of applications with different levels of functionality to access and use
geographic information. While specialized services will appropriately remain an area for proprietary products,
standardization of the interfaces to those services allows interoperability between proprietary products. Geographic
information system and software developers will use these standards to provide general and specialized services
that can be used for all geographic information.  The approach of this standard is integrated with the approaches
being developed within the more general world of information technology.

The geographic services architecture specified in this International Standard has been developed to meet the
following purposes:

 provide an abstract framework to allow coordinated development of specific services,

 enable interoperable data services through interface standardization,

 support development of a service catalogue through the definition of service metadata,

 allow separation of data instances & service instances,

 enable use of one provider's service on another provider's data, and

 define an abstract framework which can be implemented in multiple ways.

This International Standard extends the architectural reference model defined in ISO 19101. ISO 19101 defines an
Extended Open Systems Environment (EOSE) model for geographic services.

6.2 Interoperability reference model – based on ISO RM-ODP

This International Standard is developed based on a system architecture approach to system design known as the
Reference Model of Open Distributed Processing [ISO/IEC 10746]. Architecture is defined as a set of components,
connections and topologies defined through a series of views.  The geographic infrastructure enabled by this
International Standard will have multiple users, developers, operators, and reviewers.  Each group will view the
system from their own perspective.  The purpose of architecture is to provide a description of the system from



ISO/DIS 19119

© ISO 2001 — All rights reserved 5

multiple viewpoints. Furthermore, architecture helps to ensure that each view will be consistent with the
requirements and with the other views.

Table 1 shows how the RM-ODP viewpoints are utilized in this International Standard.

Table 1 — Use of RM-ODP viewpoints in this Standard

Viewpoint
Name

Definition of RM-ODP Viewpoint
[ISO/IEC 10746-1]

How viewpoint is addressed in this
Standard

Enterprise
viewpoint

A viewpoint on an ODP system and its
environment that focuses on the purpose, scope
and policies for that system.

Available in other parts of 19100 series of
standards, e.g., Reference model (ISO
19101)

Computational
viewpoint

A viewpoint on an ODP system and its
environment that enables distribution through
functional decomposition of the system into
objects which interact at interfaces.

See clause 7 - Computational viewpoint

Information
viewpoint

A viewpoint on an ODP system and its
environment that focuses on the semantics of
information and information processing.

See clause 8 - Information viewpoint

Engineering
viewpoint

A viewpoint on an ODP system and its
environment that focuses on the mechanisms and
functions required to support distributed
interaction between objects in the system.

See clause 9 - Engineering viewpoint

Technology
viewpoint

A viewpoint on an ODP system and its
environment that focuses on the choice of
technology in that system.

See clause 10 - Technology viewpoint.
Also to be addressed by platform-specific
service specifications

The enterprise viewpoint is concerned with the purpose, scope and policies of an enterprise or business and how
they relate to the specified system or service. An enterprise specification of a service is a model of that service and
the environment with which the service interacts. It covers the role of the service in the business and the human
user roles and business policies related to the service.

The computational viewpoint is concerned with the interaction patterns between the components (services) of
the system, described through their interfaces. A computational specification of a service is a model of the service
interface seen from a client, and the potential set of other services that this service requires to have available, with
the interacting services described as sources and sinks of information.

The information viewpoint is concerned with the semantics of information and information processing.   An
information specification of an ODP system is a model of the information that it holds and of the information
processing that it carries out.

The engineering viewpoint is concerned with the design of distribution-oriented aspects, i.e., the infrastructure
required to support distribution. An engineering specification of an ODP system defines a networked computing
infrastructure that supports the system structure defined in the computational specification and provides the
distribution transparencies that it defines. ODP defines the following distribution transparencies: access, failure,
location, migration, relocation, replication, persistence and transaction.  Security may also be a mechanism.

The technology viewpoint describes the implementation of the ODP system in terms of a configuration of
technology objects representing the hardware and software components of the implementation. It is constrained by
cost and availability of technology objects (hardware and software products) that would satisfy this specification.
These may conform to platform-specific standards which are effectively templates for technology objects.

In the computational and information viewpoint clauses of this International Standard specific approaches that shall
be followed for defining geographic information services are provided. For the engineering and technology



ISO/DIS 19119

6 © ISO 2001 — All rights reserved

viewpoints, this International Standard defines how a particular service shall be mapped on to an implementation
technology such as SQL-3/ODBC, ODMG, CORBA, DCOM/OLE, Internet or similar.

6.3 Service Abstraction

This International Standard defines the approach to defining services that shall be used in the ISO 19100 series of
standards.  Figure 1 defines the relationship between the various types of service specifications.
SV_ServiceSpecification defines services without reference to the type of specification or to its implementation.  A
SV_PlatformNeutralServiceSpecification provides the abstract definition of a specific type of service but does not
specify the implementation of the service.  Service types are given in the geographic service taxonomy in 8.3.
SV_PlatformSpecificServiceSpecification defines the implementation of a specific type of service.  There may be
multiple platform-specific specifications for a single platform-neutral specification.  SV_service is an implementation
of a service.  The requirements for these specifications are addressed in this International Standard, in particular in
clause 10.

SV_ServiceSpecification

+ name : CharacterString
+ opModel : SV_OperationModel

SV_PlatformNeutralServiceSpecifiation

+ serviceType : SV_ServiceType

1

type : SV_ServiceType

1

+typeSpec 1

+abstSpec

SV_PlatformSpecificServiceSpecification

+ DCP : DCPList

1

name : DCPList

1

+implSpec

+typeSpec

SV_Service

0..n

1..n

+specification

+implementation

Figure 1 — Abstract and Implementation Service Specifications

6.4 Interoperability

Interoperability is the capability to communicate, execute programs, or transfer data among various functional units
in a manner that requires the user to have little or no knowledge of the unique characteristics of those units.

Two components X and Y (see Figure 2) can interoperate (are interoperable) if X can send requests R for services
to Y, based on a mutual understanding of R by X and Y, and if Y can similarly return mutually understandable
responses S to X.



ISO/DIS 19119

© ISO 2001 — All rights reserved 7

YX

R

S

Figure 2 — Interoperability

This means that two interoperable systems can interact jointly to execute tasks. For the geographic domain, the
following description of the term “geographic interoperability” is applicable:

“Geographic interoperability” is the ability of information systems to 1) freely exchange all kinds of spatial
information about the Earth and about the objects and phenomena on, above, and below the Earth’s surface; and
2) cooperatively, over networks, run software capable of manipulating such information.

The ODP viewpoint abstraction provides a framework for describing a system at several abstraction levels. In this
International Standard, interoperability is viewed in terms of the different abstraction levels provided by RM-ODP.
This International Standard focuses, from different viewpoints, on how semantic and syntactic interoperability of
geographic metadata and geographic data can be supported.

When two different organizations have independently developed distributed systems, each can be described
according to the RM-ODP viewpoints, and interoperability between the systems can be discussed with respect to
each of the five RM-ODP viewpoints.

For each interoperability aspect, a distinction is made between syntactical interoperability and semantic
interoperability. Syntactical interoperability assures that there is a technical connection, i.e., that the data can be
transferred between systems.  Semantic interoperability assures that the content is understood in the same way in
both systems, including by those humans interacting with the systems in a given context.

6.5 Use of other geographic information standards in service specifications

A service specification shall include relevant information models from the appropriate geographic information
standards in the ISO 19100 series. The corresponding UML models shall be used in the definition of the service
interfaces as appropriate.

6.6 Architecture Patterns

An architecture pattern expresses a fundamental structural organization or schema for software services.  It
identifies a set of services, specifies their responsibilities, and includes rules and guidelines for organizing the
relationships between them.  Services, implemented by classes and objects, may use design patterns but this level
of detail is outside the scope of this International Standard.

The Table 2 provides a listing of the elements of a pattern.  When specific architecture patterns are defined in this
International Standard, these elements shall be used.



ISO/DIS 19119

8 © ISO 2001 — All rights reserved

Table 2 — Elements of a Pattern

Element of a Pattern Description of Element

Name The name is a word or short meaningful phrase that describes the pattern. The name is
extremely important, since it is used to reduce communication overhead. Nicknames or
synonyms may be provided.

Problem This is a statement of the problem which describes its intent, goals and objectives it
wants to reach within the given context and forces.  Often the forces oppose these
objectives as well as each other.

Context Context defines the preconditions under which the problem and its solution seem to
recur, and for which the solution is desirable. This defines the pattern's applicability. It
can be thought of as the initial configuration of the system before the pattern is applied.

Forces The forces are considerations that must be weighed to reach the best solution. Forces
define the kinds of trade-offs that must be considered in the presence of the tension or
dissonance they create. The forces answer the question, "Why is this a hard problem?"

Structure Structure defines the static relationships and dynamic rules describing how to realize
the desired outcome. The structure description is accomplished through a collaboration
diagram.

7 Computational viewpoint: a basis for service chaining

7.1 Component and service interoperability and the computational viewpoint

The computational viewpoint is concerned with describing the entities of a distributed system independent of
implementation and semantic content. It describes the interaction patterns between the entities and their interfaces.
To be able to interoperate from the computational viewpoints two systems must be interfaces and services
interoperable. Two systems are interface and services interoperable if they agree on the set of services offered by
the entities of the two systems and the interfaces to these entities. If standardized interfaces are defined, the
entities of one system will be able to request services from entities in another system.

The computational viewpoint clause provides the following:

 defines the concepts of services, interfaces and operations and the relations between these concepts;

 provides an approach to physical distribution of services using an n-tier architecture;

 defines a model for combining services in a dependent series to achieve larger tasks – service chaining; and

 defines a service metadata model to support service discovery through a service catalogue.

7.2 Services, interfaces and operations

Definitions and relationships of several terms are provided in this clause. These terms are used extensively in this
International Standard:

 Service:  distinct part of the functionality that is provided by an entity through interfaces.

 Interface: named set of operations that characterize the behaviour of an entity.  

 Operation: specification of a transformation or query that an object may be called to execute. It has a name
and a list of parameters.



ISO/DIS 19119

© ISO 2001 — All rights reserved 9

These terms are related to each other as depicted in Figure 3. Figure 3 shows that services are specified by set of
interfaces that are a set of operations.  Interfaces are implemented as ports that make services available to users.

SV_PortSpecification

+ binding : DCPList
+ address : URI

SV_Service

SV_Port

SV_ServiceSpecification

+ name : CharacterString
+ opModel : SV_OperationModel

SV_Interface

+ typeName : TypeName

1..n

1..n

SV_Operation

+ operationName : MemberName

operationName : MemberName

1..n

1

+interface

+operation

Figure 3 — Service definition relationships

The aggregation of interfaces in a service shall be for the purpose of defining functionality of value to the users.
Users in this context are either software agents or human users. A service provides functionality that adds value.
The value is apparent to the user who invoked the service.

The aggregation of operations in an interface, and the definition of interface, shall be for the purpose of software
reusability.  Interfaces shall be defined in order to be reusable for multiple service types.  The syntax of an interface
may be reused with multiple services with different semantics.

Services of multiple types may be aggregated.  The service types shall be defined consistent with the service
taxonomy of 8.3.  When a service provides functionally beyond that of a single category in the service taxonomy it
shall be an aggregate service. Services chaining results in aggregate services as defined in 7.3.5.

Interfaces are abstract specifications separate from the concrete deployment or data format bindings.  The
specification of an interface shall include a static portion that includes definition of the operations.  The specification
of an interface shall include a dynamic portion that includes any restrictions on the order of invoking the operations.

An implementation of an interface is a port.  The implementation includes implementation of the platform-specific
specification and a method to identify the service, e.g., an address.

An implementation of a service may be associated with a specific dataset or it may be a service that can be used to
operate on multiple, unspecified datasets.  The first case is referred to as tightly-coupled service.  The second case
is referred to as a loosely-coupled service. (See 7.4.1).

Interfaces are defined through operations. An operation specifies a transformation on the state of the target object
or a query that returns a value to the caller of the operation.  An operation shall be an abstract description of an
action supported by the interface. Operations contain parameters.



ISO/DIS 19119

10 © ISO 2001 — All rights reserved

7.3 Service chaining

7.3.1 Introduction to Service Chaining

7.3 defines a model for combining services in a dependent series to achieve larger tasks. 7.3 addresses the
syntactic issues of service chaining, e.g., data structure of a chain.  Semantic issues associated with service
chaining are addressed in 8.6, e.g., does a specific chain produce a valid result? Examples of service chaining are
provided in Annex B.

This International Standard enables users to combine data and services in ways that are not pre-defined by the
data or service providers. This level of data/service interoperability will be achieved in stages.  At first service
catalogues will hold entries with tight data/service binding.  Eventually the infrastructure will be available for a user
to determine which data can be acted on by a loosely coupled service.  This capability will be enabled by the
infrastructure of the larger domain of IT.

Based on the ODP definition of Chain, a Service Chain is defined as a sequence of services where, for each
adjacent pair of services, occurrence of the first action is necessary for the occurrence of the second action.

7.3.2 Anatomy of a service chain

7.3.2.1 Chains as directed graphs

The action of making the input of one service dependent upon another service leads to treating service chains as
directed graphs, where each service is a node in the graph and references to service interactions form the edges.
In some cases the directed graph structure is implicit.  In other cases it is necessary to make the notion of a
processing graph explicit and allow such graphs to be considered as entities in their own right.  Explicit
representation of a service chain allows the chain to be visually represented and passed to a chain execution
service, e.g., workflow service.

A node in the directed graph is a representation of the service.  When explicitly formed into a data structure, a
service node contains two types of information: parameters and sources.  Parameters in a service node provide the
configurations of the service for the particular chain in which the service class is being used.  Sources in a service
node indicate the sources of input data to the node.

The arcs of a directed graph representing a service chain can be of several types.  These types of arcs are detailed
below as service interactions.

A key aspect of a directed graph is whether it is cyclic or acyclic.  The case of directed graphs without loops, i.e.
acyclic, is simpler.  In some applications an iterative approach is needed, therefore the chain will be cyclic with
conditions in the control function to address convergence.

Chains can be considered templates or as immutable graphs.  A template is a directed graph which defines the
chain based on abstract classes including identification of each service type.  A template can be instantiated as an
immutable graph at which time the service instances are fixed.

Additional elements characterizing a service chain:

 Parallel vs. serial chains: does the directed graph have parallel paths based on branches or are only serial
chains permitted?  Potential branch types include: if/else, merge, switch, and trigger

 Iteration: does a node in the directed graph operate as an iteration, e.g., while and count loops?

 Data transport types: does the directed graph allow variations in the links between nodes reflecting different
methods for transporting data or invoking the service?



ISO/DIS 19119

© ISO 2001 — All rights reserved 11

 Parameters in nodes: do the description of nodes in the directed graph contain parameters that can be
changed?

 Variations in control design pattern:  pull processing vs. push processing

7.3.2.2 UML modelling of a chain

Figure 4 provides a UML model of a chain.

SV_OperationChain

+ name : CharacterString
+ description[0,1] : CharacterString

SV_Operation
(from Service Model)

+ operationName : MemberName

1..n

+operation
{ordered}

+chain

Chaining

0..n

+dependsOn

Dependencies

Figure 4 — Chain

In accordance with ISO/TS 19103, the modelling of directed graphs for service chains shall be done using the
Unified Modeling Language (UML) activity graphs.  An activity graph represents the states of executing a service
chain. Table 3 identifies the elements of an activity graph.

Table 3 — UML Activity Graph entities

Element of an UML Activity Graph Description for Service Chaining

Activity State A state that represents the execution of a service, typically
triggered by the invocation of an operation.

Transition A relationship between two states.  A transition indicates
that specified Actions are performed in the first state and
the second state is entered when a specified Event occurs
and specified Guard Conditions are satisfied.

Branch/Merge The beginning/end of alternative threads in an activity
graph

Fork/Join The beginning/end of concurrent threads in an activity
graph

Signal An asynchronous communication between services
intended to trigger transitions in an activity graph.



ISO/DIS 19119

12 © ISO 2001 — All rights reserved

7.3.3 Services organizer folder

Services are of many types as indicated in 8.3. Only a subset of available services is applicable to a specific
situation, e.g., image analysis. A service organizer folder is an aid for users in finding services applicable to their
situation. A user may construct a SOF and then make that SOF available to other users performing tasks in a
similar situation.

A services organizer folder (SOF) is a data structure that shall contain references to a set of services that are
applicable to a given situation. The SOF need not contain service chains but may contain just individual services.

7.3.4 Services to enable service chaining

Table 4 provides a list of services that are needed to enable service chaining.  These services are placed in the
extended OSE framework.  Details on the services can be found in clause 8.  Some of the services are generic to
all IT domains.  Other services are specific to geographic data and the large size of geographic data sets.



ISO/DIS 19119

© ISO 2001 — All rights reserved 13

Table 4 — Services to enable service chaining

Services needed to enable service chaining

OSE Categories Generic IT Services Geographic services

Human interaction services • service-centric service for defining, controlling
and statusing service chains

• catalogue-centric service that views and
browses metadata about services

• catalogue-centric service that locates,
browses, and manages metadata about spatial
data

• spatial-centric service for editing, displaying,
querying, and analyzing map data

• Calculation-centric service allowing viewing
and manipulation of geographic data using a
spreadsheet format.

Workflow/Task services • Workflow enactment service to define, invoke,
status and control service chaining. (interaction
with other Workflow services, optional)

• Service chain validation service

• Resource reservation and co-allocation
mechanism for both storage system and other
resources such as networks, to support the
end-to-end performance guarantee required
for predictable transfer.

Processing services • Geographic processing services (See clause
8)

Model/Information management
services

• Service instance metadata catalogue - with
discovery and management sub-services

• Service type registry - with discovery and
management sub-services

• Brokering

• Mediation

• Geographic Dataset instance

• Geographic metadata catalogue - with
discovery, access and management sub-
services.

System management service • authorization and authentication

• payment methods

• privacy of client

• Performance measurement and estimation
techniques for key resources involved in data
grid operation, including storage systems,
networks, and computer

• Instrumentation services that enable the end-
to-end instrumentation of storage transfer and
other operation

Communication services • Messaging mechanisms

• Large data object transfer

• Remote file and executable management:
provides access to secondary storage as if it
were local.

• Format conversions

• Geographic format conversions

7.3.5 Architecture patterns for service chaining

7.3.5.1 Introduction

The remainder of this clause provides architecture patterns for service chaining. The architecture patterns use the
template provided in 6.6.



ISO/DIS 19119

14 © ISO 2001 — All rights reserved

There are many options for the allocation of service chaining services to components.  Different allocation
approaches reflect different priorities for different applications: user in the loop vs. user supervision.  To
demonstrate the breadth of the trade space defined by this variation, three design patterns are offered that vary the
allocation of the control function:

• User defined (transparent) chaining: the Human user manages the workflow.

• Workflow-managed (translucent) chaining: in which the Human user invokes a Workflow Management service
that controls the chain and the user is aware of the individual services.

• Aggregate service (opaque): in which the user invokes a service that carries out the chain, with the user having
no awareness of the individual services.

In addition to the difference in visibility of the services to the user, a key distinction between these patterns is the
difference in control.  In transparent chaining the control is exclusively with the user.  In translucent, a workflow
service is present which controls the chain execution, perhaps with oversight by the human.  In the aggregate
pattern, the aggregate service exclusively performs the control function with no visibility by the user.

7.3.5.2 User defined (transparent) chaining

7.3.5.2.1 Name

As the name implies, the user defines and controls the order of execution of the individual services. Details of the
services are not hidden from the user, hence, the alias for this pattern is Transparent Chaining.

7.3.5.2.2 Problem

In this pattern the user is knowledgeable of how services can be combined.  The user discovers and evaluates the
available services, determine their fitness to the need, determines a valid sequence of services, and controls the
chaining.  This pattern anticipates a knowledgeable user.  The user is provided information sufficient to make the
control decisions.

7.3.5.2.3 Context

The user knows of a service catalogue in order to discover services of interest.  A specific chain does not exist
before the user begins.  The user has the ability to define a valid chain and/or be able to modify the implied chain if
there are failures in execution.

7.3.5.2.4 Forces

The user must be able to design an efficient chain that will execute.  The inputs and outputs of the individual
services must be compatible, or an intervening service must be added, e.g., format translation.  These patterns
assume that each service has sufficient resources to run efficiently, but the user may need to choose services
based on network considerations, e.g., network bandwidth, security, authorization.  The semantic correctness of
the chain is judged by the user; issues such as when data is re-gridded in a chain will affect the validity of the
results.  A user may iterate a chain until an acceptable result is achieved, resulting in a chain that can be saved and
used by others, perhaps using the workflow chaining pattern.

7.3.5.2.5 Structure

The User Defined Chaining Architecture Pattern is shown in Figure 5.

NOTE: The unique feature of the transparent pattern is that the chain is defined and controlled by the user.  In the figure, the
user discovers available service through a catalogue service.  Alternatives for the user to select services are part of this pattern.
For example, a Service Organizer Folder could be substituted for the catalogue.



ISO/DIS 19119

© ISO 2001 — All rights reserved 15

Client

Catalogue
Service

Service Service

Service

1. Search Request

2. Search Results

5a. Invoke Service

4a. Invoke Service
3. Invoke Service

4b. Request Input 5b. Request Input

5c. Request Input

Figure 5 — Transparent chaining

Table 5 — Description of steps in Figure 5

Step 1. Search Request A human uses a client to send a search request (or series of searches) to a
catalogue service.  The catalogue service provides queries on service metadata.

Step 2. Search Results Catalogue Service returns metadata about services of interest to the user.  For this
example the user has found three services which will be chained.

Step 3. Invoke Service User invokes a service using the client, causing a result to be available for a
subsequent service

Step 4a. Invoke Service
Step 4b. Request Input

User invokes a second service using the client.  The request includes a reference to
the results from the previous step.  The service creates a result that is available for
the next service.

Step 5a. Invoke Service
Step 5b. Request Input
Step 5c. Request Input

User invokes a third service using the client.  The request includes references to the
two previous services.  This third service returns a result to the client.

7.3.5.3 Workflow-Managed (translucent) chaining

7.3.5.3.1 Name

As the name implies in this pattern the execution of the chain is managed by a workflow service (or multiple
workflow services).   The user’s involvement in the steps of the chain is mostly one of watching the chain execute
the individual services that are apparent to the user, hence the alias of translucent chaining.  A key distinction for
this pattern is the existence of a defined chain prior to the user executing the pattern.

7.3.5.3.2 Problem

In this pattern the user relies on a workflow service to execute a predefined chain of services.  The user has
determined an existing chain assumed to produce results of interest to the user.  The user may need to provide
parameters particular to specific instance, but relies on the workflow service to carry out the chain.



ISO/DIS 19119

16 © ISO 2001 — All rights reserved

7.3.5.3.3 Context

The user knows of a workflow service and has selected a chain of interest.  The user interacts with the workflow
service to execute the chain including providing parameters specific to the data instances of interest to the user.

7.3.5.3.4 Forces

To reduce the user’s workload, the workflow service handles details of the distributed computing aspects of
executing the chain.  Although the predefined chain is assumed to have a degree of semantic validity, by
evaluating interim results, the user can evaluate the semantic validity of the specific instance of this processing.
For example for a service that includes an iterative algorithm, the user may need to judge if convergence to a
sufficient degree of accuracy has been achieved.

7.3.5.3.5 Structure

The Workflow-Managed (translucent) chaining architecture pattern is shown in Figure 6.

NOTE:  There may be multiple workflow services.  If there is more than one the workflow services must coordinate to carry out
the predefined chain.  In the extreme case, each service in the chain contains a workflow service and the chain is passed along
with the service results.  The unique features of the translucent pattern are the existence of a predefined chain and the user’s
awareness of the chain.

Client

Workflow
Service

Service Service

Service

1. Invoke a chain

5. Chain Results

2a. Invoke Service

4a. Invoke Service

3b. Request Input 4b. Request Input

4c. Request Input

4d. Service Status

2b. Service Status

3c. Service Status

3a. Invoke Service

Figure 6 — Translucent chaining



ISO/DIS 19119

© ISO 2001 — All rights reserved 17

Table 6 — Description of steps in Figure 6

Step 1. Invoke a Chain A human uses a client to request that a workflow service execute a chain.  The
user may be allowed to modify some aspects of the chain prior to execution.

Step 2a. Invoke service
Step 2b. Service status

The workflow service determines the services in the chain and invokes the first
service.  The service informs the workflow service of the completion of the task.
Status of the service may be provided directly to the client.  The client may stop
the workflow.

Step 3a. Invoke service
Step 3b. Request input
Step 3c. Service status

Upon notification of completion of the first service, the workflow service
determines the next service in the chain and invokes it.  The second service
requests results from the first service.  The service informs the workflow service
of the completion of the task.  Status of the service may be provided directly to
the client. The client may stop the workflow.

Step 4a. Invoke service
Step 4b. Request input
Step 4c. Request input
Step 4d. Service status

Upon notification of completion of the second service, the workflow service
determines the next service in the chain and invokes it.  The third service
requests results from the first and second services.  The service informs the
workflow service of the completion of the task.  Status of the service may be
provided directly to the client. The client may stop the workflow.

Step 5. Chain results Upon notification of completion of the last service, the workflow service informs
the client of the completion of the chain.

7.3.5.4 Aggregate Service (opaque-chaining)

7.3.5.4.1 Name

As the name implies in this pattern the services appear as a single service which handles all coordination of the
individuals services behind the aggregate service.  The user has no awareness that there is a set of services
behind the aggregate, hence the alias of opaque chaining.

7.3.5.4.2 Problem

In this pattern the user relies on an aggregate service to execute a predefined chain of services.  The user has
discovered the aggregate service and may have no knowledge of how the aggregate accomplishes the service.
The user may need to provide parameters particular to the specific instance, but relies on the aggregate service to
carry out the chain.

7.3.5.4.3 Context

The user knows of an aggregate service perhaps not knowing that a chain of services implements the aggregate.
The user interacts with the aggregate service to execute the chain including providing parameters specific to the
data instances of interest to the user.

7.3.5.4.4 Forces

To reduce the user’s workload, the aggregate service handles all details of the multi-service aspects of executing
the chain.  Although the aggregate service chain is assumed to have a degree of semantic validity, by evaluating
interim results, the user can evaluate the semantic validity of the specific instance of this processing.  For example
for a service that includes an iterative algorithm, the user may need to judge if a sufficient degree of convergence
has been achieved.  These intermediate results need not reveal the underlying services.

7.3.5.4.5 Structure

The Aggregate service (opaque-chaining) architecture pattern is shown in Figure 7.



ISO/DIS 19119

18 © ISO 2001 — All rights reserved

Client

Aggregate
Service

Service Service

Service

1. Invoke Service 5. Service Results

4a. Invoke Service

3a. Invoke Service

2. Invoke Service

3b. Request Input 4b. Request Input

4c. Request Input

Figure 7 — Opaque chaining

Table 7 — Description of steps in Figure 7

Step 1. Invoke a service A human uses a client to request that an aggregate service execute a chain.  The
user may have no knowledge that the service is implemented using a chain of
services.

Step 2a. Invoke service The aggregate service determines the services in the chain and invokes the first
service.  The service informs the aggregate service of the completion of the task.

Step 3a. Invoke service
Step 3b. Request input

Upon notification of completion of the first service, the aggregate service
determines the next service in the chain and invokes it.  The second service
requests results from the first service.  The service informs the aggregate service
of the completion of the task.

Step 4a. Invoke service
Step 4b. Request input
Step 4c. Request input

Upon notification of completion of the second service, the aggregate service
determines the next service in the chain and invokes it.  The third service
requests results from the first and second services.  The service informs the
aggregate service of the completion of the task.

Step 5. Chain results Upon notification of completion of the last service, the aggregate service informs
the client of the completion of the chain.

7.3.6 Variations on chaining patterns

The three chaining patterns discussed above could be combined in a variety of ways.

Each of the lowest level services shown in the pattern diagrams could in turn implement a chain. This is recursive
composition of services supported by the opaque pattern.  A service chain can become a new service.  The ability
to define recursive composition of services provides scalability and support for top-down progressive refinement as
well as for bottom-up aggregation.

The patterns could be used to define how a library of chains is constructed.  A knowledgeable user could build
chains using the transparent pattern.  Through iterative use of the transparent pattern a chain is constructed that



ISO/DIS 19119

© ISO 2001 — All rights reserved 19

produces valid results.  Chains are then made available for wider use following the translucent pattern. Certain
chains may become routinely used and an aggregate service is built as an interface.

An example need for a translucent or opaque chaining pattern occurs in decision support. The Decision-Maker is
an individual using decision support aids to help make a decision. An example of decision support aids is a service
chain.  The Decision Support Aid Developer is an individual who “integrates” chains of services into decision
support aids.

Another type of service interaction can be considered as chaining, where a user makes a request of a lead service
and the lead service then invokes a secondary service, which invokes a tertiary service.  Each of the services
responds to the request when it has sufficient information from the underlying services.  In this way there is no
explicit chain but rather a chain is implied.

7.4 Service metadata

7.4.1 Introduction

Service metadata records can be managed and searched using a catalogue service as is done for dataset
metadata.  In order to provide a catalogue for discovering services, a schema for describing a service is needed.
This section defines a metadata model for service instances. The metadata elements for a service provide
sufficient information to allow a client to invoke the service based on the metadata record.  In order to place the
Service Metadata in context three types of entities need to be described:

 Service Instance: a service instance is the service itself, hosted on a specific set of hardware and accessible
over a network.

 Service Metadata: a service metadata record describes a service instance including a description of the
services operations and an "address" to access the specific service instance.

 Service Type: in some cases a service metadata record will describe a service instance which is of a "well
known type".  By well-known type, it is meant that the service conforms to a published definition of a service
type, i.e., a platform-specific service specification.  Some clients will be able access only services of well-
known type.  A user could search the service metadata catalogue to find instances of a specific well-known
service type.  A service registry is defined to be the service that provides details on service types.

A service instance may be tightly-coupled with a dataset instance, or it may be un-associated with specific data
instances, i.e. loosely-coupled.  Loosely-coupled services may have an association with data types through the
service type definition.  In the tightly-coupled case, the service metadata shall describe both the service and the
geographic dataset, the latter being defined in accordance with ISO 19115. Also for the tightly-coupled case, the
permitted values in the SV_operations shall be constrained by the values defined by the datasets associated with
the service.  For the loosely-coupled case, dataset metadata need not be provided in the service metadata.

Figure 8 compares the structure of service specification with service metadata. A service specification describing a
service type includes an aggregation of interfaces; Interfaces are an aggregation of operations. The aggregation of
operations in an interface, and the definition of interface, is for the purpose of software reusability. To describe a
service instance, the aggregation associated with an interface is not needed.  A service instance is described by
SV_ServiceIdentification and SV_OperationMetadata. SV_ServiceIdentification describes the functionality provided
by the service.  SV_OperationMetadata describes the operations by which the service instance can be invoked.



ISO/DIS 19119

20 © ISO 2001 — All rights reserved

SV_ServiceIdentification

+ serviceType : GenericName
+ serviceTypeVersion[0..n] : CharacterString
+ accessProperties[0,1] : MD_StandardOrderProcess
+ restrictions[0,1] : MD_Constraints

SV_OperationMetadata

+ operationName : CharacterString
+ DCP[1..*] : DCPList
+ operationDescription[0,1] : CharacterString
+ invocationName[0,1] : CharacterString
+ connectPoint[1..*] : CI_OnlineResource

0..n
+dependsOn

Dependencies

1..n+containsOperations

SV_Operation

+ operationName : MemberName

(from Service Model)

0..n
+dependsOn

Dependencies

SV_Interface

+ typeName : TypeName

(from Service Model)

operationName : MemberName

1..n

1

+interface

+operation

SV_ServiceSpecification
(from Service Model)

1..n

1..n

Figure 8 — Services and service metadata

7.4.2 Service metadata main class diagram

Figure 9 provides a UML static model of service metadata for a service instance.

The structure of service metadata includes three major classes: a section of basic service metadata
(SV_ServiceIdentification class) that provides a general description of the service and two sections that describe
the operations (SV_OperationMetadata) and data (MD_DataIdentification) available from a particular service. The
service metadata schema is defined using elements of ISO 19115.

The classes shown in Figure 9 are described in Annex C.



ISO/DIS 19119

© ISO 2001 — All rights reserved 21

MD_Identification

+ citation : CI_Citation
+ abstract : CharacterString
+ purpose [0..1] : CharacterString
+ credit [0..*] : CharacterString
+ status [0..*] : MD_ProgressCode
+ pointOfContact [0..*] : CI_ResponsibleParty

(from Identification information)

<<Abstract>>
SV_ParameterDirection

+ in : Code
+ out : Code
+ in/out : Code

<<enumeration>>

DCPList

+ XML : Code
+ CORBA : Code
+ JAVA : Code
+ COM : Code
+ SQL : Code
+ WebServices : Code

<<CodeList>>

Type
(from Records and Class Metadata)

<<Metaclass>>
SV_Parameter

+ direction[0,1] : SV_ParameterDirection
+ description[0,1] : CharacterString
+ optionality : CharacterString = "Mandatory"
+ repeatability : Boolean

<<DataType>>

+valueType

MD_DataIdentification

+ spatialRepresentationType [0..*] : MD_SpatialRepresentationTypeCode
+ spatialResolution [0..*] : MD_Resolution
+ language [1..*] : CharacterString
+ characterSet [0..1] : MD_CharacterSetCode = "utf8"
+ topicCategory [1..*] : MD_TopicCategoryCode
+ geographicBox [0..*] : EX_GeographicBoundingBox
+ geographicDescription [0..*] : EX_GeographicDescription
+ environmentDescription  [0..1] : CharacterString
+ extent [0..*] : EX_Extent
+ supplementalInformation [0..1] : CharacterString

(from Identification information)

SV_OperationMetadata

+ operationName : CharacterString
+ DCP[1..*] : DCPList
+ operationDescription[0,1] : CharacterString
+ invocationName[0,1] : CharacterString
+ connectPoint[1..*] : CI_OnlineResource

0..n

+dependsOn

0..n

Dependencies

name : MemberName

1

+operation

+parameters

SV_ServiceIdentification

+ serviceType : GenericName
+ serviceTypeVersion[0..n] : CharacterString
+ accessProperties[0,1] : MD_StandardOrderProcess
+ restrictions[0,1] : MD_Constraints

+operatesOn

1..n+containsOperations

SV_ServiceProvider

+ serviceContact : CI_ResponsibleParty
+ providerName : CharacterString

1..n

0..n

+services

+provider

Figure 9 — Service metadata class diagram

7.4.3 Data dictionary for geographic service metadata

A data dictionary for geographic service metadata is provided in Annex C.  The entities in Figure 9 are defined in
the data dictionary.

7.5 Service instance of unknown type

One approach for a service catalogue is to assume that the metadata alone provides sufficient information for a
client to invoke the service.  An alternate approach is to require that the metadata record for the instance make
reference to a service type definition.  E.g., a metadata record for a service instance of coordinate transformation
would reference the OGC implementation specification.  Table 8 describes the implications of assuming that the
service is of a well-known type or is not.  A key aspect to dealing with services of unknown type is to assume the
presence of intelligence in the client, e.g., a human in the loop.  As a human is able to interpret the semantics
intended by the service metadata where a software client cannot, the table shows what is feasible.



ISO/DIS 19119

22 © ISO 2001 — All rights reserved

Table 8 — Options for well known type in service metadata

Services in the Catalogue are of a known type Services in the Catalogue maybe of an unknown type

Human is in the loop
with the client

feasible Conceivably feasible assuming that the client interaction
is done with opaque messages, so there can be a
generalized client that can create marked-up messages.
The human fills in the message based on the operations
descriptions retrieved from the catalogue

Machine-to-machine.
no human at the client

This is feasible if the Client implements a metamodel for
the known service, in addition to the syntax for the
service.

Questions if this is feasible.

7.6 Simple service architecture

The following simplifying assumptions should be considered when implementing a message-based architecture to
support service chaining. Systems compliant to this set of guidelines shall be referred to as instances of simple
service architectures.  Systems should comply with the simple service architecture.

• Message-operations.  For simplicity it is desirable to model the operations as messages.  A message operation
shall consist of a request and response.  Requests and responses contain parameters as the payload, which is
transferred in uniform manner independent of content. Simple applications are characterized by message
exchange patterns such as one-way (or event), and two-way (or synchronous) request response interactions. A
service specification should make such simple exchange applications as easy as possible to create and to use.

• Separation of control and data.  A client controlling a service may not want the full results of the service.  For
example, the user may have no need for the potentially voluminous intermediate products in a service chain.
Only the final result of a service chain may be needed by the client.  Therefore, operations of an interface
should separate the control of the service from the access to the data resulting from a service.  A client should
have the option of receiving just the status of an operation and separately the data should be accessible
through a separate operation.

• Stateful vs. stateless service.  For simplicity it is desired that a service be stateless, i.e., that a service
invocation be composed of a single request-response pair with no dependence on past or future interactions.
This will not always be possible. For some services, preconditions must be set and iteration may be required,
then it will be necessary to model the service with a state diagram having multiple states.  Transitions between
the states are triggered by operations.

• Known service type.  All service instances are of specific service types and the client knows the type prior to
runtime.  Clients shall contain software for accessing the service type prior to encountering service instances of
the type in an implemented architecture.  This assumption is that the client knows the service types.

• Adequate hardware.  The services described in this International Standard are software implementations
running on hardware hosts.  This International Standard assumes that the issues of hardware hosting of the
software are transparent to the user.  This is the assumption that the service has adequate hardware, i.e.
hardware assignment is transparent to user.

8 Information viewpoint: a basis for semantic interoperability

8.1 Information model interoperability and the information viewpoint

To achieve information model interoperability is one of the main goals of the ISO 19100 series of standards. Many
of the other standards in this series, i.e. ISO 19107, 19115 and others, are primarily focusing on defining the
content of the information that is being processed by the services and exchanged between services. The
Information Viewpoint is defined in the ODP to include a static information model and a dynamic information model.
The semantics of service interactions, e.g. what services make sense to chain, are developed in 8.6.



ISO/DIS 19119

© ISO 2001 — All rights reserved 23

To be able to interoperate in the information viewpoint, two systems must be information model interoperable.  To
achieve information model interoperability the two systems must be both syntactically interoperable and
semantically interoperable:

 Syntactically interoperable – Two systems are syntactically interoperable if they use the same structure for the
information that flows in the systems and is processed by the systems.

 Semantically interoperable – Two systems are semantically interoperable if they have a common
understanding of the semantics of the information that flows in the systems and is processed by the systems.

The common structural models being defined by the information models address syntactic interoperability. In the
ISO 19100 suite of standards the models are based on a generic feature model, which allows for representation of
various types of features, all having the same structure. To achieve semantic interoperability for feature types it is
in addition necessary to match or make mappings between feature type definitions from feature type catalogues.
The issues of such information model interoperability will not be addressed in this International Standard.

The information viewpoint in ISO RM-ODP describes the information that flows in a system and is processed by a
system.  It focuses on the structuring of semantic information, typically the information that will be stored in a
database and communicated between the components of a system.  An information model is used to describe the
information viewpoint.  This information model defines the structure and semantics of the information used in
system by defining objects, their properties and their relationships.

The information viewpoint is also concerned with the semantics of the information processing. Each particular
service will need to define its syntactical interfaces through operations and its semantics through description of the
meaning of the operations and their legal sequencing. The latter can be done through pre- and post-conditions and
invariants in OCL, and by UML state diagrams.

This section contains a description of a taxonomy of various services. There exist multiple possible taxonomies for
services, based on various classification dimensions. The one that is used here is based on the extended OSE
model. The purpose of defining a taxonomy in this International Standard is to have one way of identifying
geographic extensions to various existing service types. It is not intended to be the only taxonomy to be used in the
context of geographic services.

The work of identifying required services for geographic information standardization shall categorize if a needed
service is GIS specific or more IT general, and which of the 6 service domains it belongs to. The processing
services domain will typically contain a variety of application-area (GI) specific services.

The next sections will describe typical IT Services and then show some possible geographic services in each of the
six service domains.

8.2 Extended open systems environment for geographic services

The model for the information viewpoint is provided by ISO 19101.  ISO 19101 defines the Extended Open
Systems Environment (EOSE) model for geographic information.  The EOSE defines classes of services based on
the semantic type of computation that they provide.  EOSE provides the functional decomposition of the services
for the geographic domain by extending the more general Open System Environment model [ISO/IEC TR 14252].

Consistent with ISO 19101, this sub-clause defines six classes of information technology services that shall be
used to categorize geographic services.

 Human interaction services are services for management of user interfaces, graphics, multimedia, and for
presentation of compound documents.

 Model/Information management services are services for management of the development, manipulation,
and storage of metadata, conceptual schemas, and datasets.

 Workflow/Task services are services for support of specific tasks or work-related activities conducted by
humans. These services support use of resources and development of products involving a sequence of
activities or steps that may be conducted by different persons.



ISO/DIS 19119

24 © ISO 2001 — All rights reserved

 Processing services are services that perform large-scale computations involving substantial amounts of
data. Examples include services for providing the time of day, spelling checkers, and services that perform
coordinate transformations (e.g., that accept a set of coordinates expressed using one reference system and
converting them to a set of coordinates in a different reference system). A processing service does not include
capabilities for providing persistent storage of data or transfer of data over networks.

 Communication services are services for encoding and transfer of data across communications networks.

 System management services are services for the management of system components, applications, and
networks. These services also include management of user accounts and user access privileges.

Not every information technology service needs to be changed or specialized to be useful for processing
geographic information. A separation between geographic services and IT services is made in ISO 19101. This
separation is being focused on, because it is essential to identify and make use of general IT services whenever
they exist.

8.3 Geographic services taxonomy

8.3.1  Geographic services taxonomy requirements

The following sub-clauses shall define the geographic services taxonomy.  The taxonomy shall consist of the titles
of the categories (Table 9) and the definitions for the categories.  Definitions of the categories are provided in 8.2.
Systems compliant to this International Standard shall use the geographic services taxonomy to organize its
services. A specific service shall be categorized in one and only one category, unless it is an aggregate service that
may perform services from more than one category.

The following sub-clauses provide examples of geographic services within the geographic services taxonomy.  It is
not required that a system provide any service listed in these sub-clauses.  It is required that if a system provides a
service named in these sub-clauses that the service shall be categorized as defined in these sub-clauses. A
service catalogue compliant with this International Standard shall categorize service metadata instances in the
categories of the geographic service taxonomy.

If a service uses the name of an example service, the service shall provide the functionality that is defined in these
sub-clauses. For example, if a service titled catalogue viewer is provided, it shall perform the services defined for
the catalogue viewer in the geographic human interaction services category.  Systems providing services should
name services as found in the service examples.



ISO/DIS 19119

© ISO 2001 — All rights reserved 25

Table 9 – Geographic services taxonomy

 Geographic human interaction services

 Geographic model/information management services

 Geographic workflow/task management services

 Geographic processing services

 Geographic processing services – spatial

 Geographic processing services – thematic

 Geographic processing services – temporal

 Geographic processing services – metadata

 Geographic communication services

 Geographic system management services

8.3.2 Geographic human interaction services

Geographic human interaction services shall be a category in the geographic service taxonomy.  Examples of
human interaction services for working with geographic data and services:

 Catalogue viewer. Client service that allows a user to interact with a catalogue to locate, browse, and manage
metadata about geographic data or geographic services.

 Geographic viewer. Client service that allows a user to view one or more feature collections or coverages.
This viewer allows a user to interact with map data, e.g., displaying, overlaying and querying.  An example is
the viewer client generator defined in ISO 19128.

 Geographic viewer – animation.  Geographic viewer that allows a human to sequence views of the same
geographic location at different times.

 Geographic viewer – mosaicing.  Geographic viewer that allows combination of views of geographic data for
adjacent areas into a single view.

 Geographic viewer – perspective.  A perspective geographic viewer allows the viewpoint to be changed. For
example, to specify how high off the ground, what direction, and what angle a viewpoint is seeing a scene
from.

 Geographic viewer – imagery.  Geographic viewer that visualizes coverage data including the mapping of
sample dimensions in the coverage to colours in the display.

 Geographic spreadsheet viewer.  Client service that allows a user to interact with multiple data objects and to
request calculations similar to an arithmetic spreadsheet but extended to geographic data.

 Service editor. Client service that allows a user to control geographic processing services.  Views include
understanding a service, composing/scripting service chains, invoking a service, statusing a service,
scheduling services for peak performance times, and invoking a service chain.

 Chain definition editor. Provides user interaction with a chain definition service.



ISO/DIS 19119

26 © ISO 2001 — All rights reserved

 Workflow enactment manager.  Provides user interaction with a workflow enactment service.

 Geographic feature editor.  Geographic viewer that allows a user to interact with feature data, e.g., displaying,
querying.  Supports feature annotation. The user controls view orientation, perspective, depth cueing, hidden-
line/surface, light-sources, transparency, and texture mapping onto the objects. Objects in view can be picked
or drawn onto to generate new objects in the model.

 Geographic symbol editor.  Client service that allows a human to select and manage symbol libraries. ISO
19117 is relevant to symbol libraries.

 Feature generalization editor.  Client service that allows a user to modify the cartographic characteristics of a
feature or feature collection by simplifying its visualization, while maintaining its salient elements – the spatial
equivalent of simplification.

 Geographic data-structure viewer. Client service that allows a user to access part of dataset to see its internal
structure.  Allows user to request creation of new objects from parts of an object being browsed.  Allow user to
request a check of an object, e.g., type checking.

8.3.3 Geographic model/information management services

Examples of model/information management services for working with geographic data and services:

 Feature access service.  Service that provides a client access to and management of a feature store. An
access service may include a query that filters the data returned to the client.  ISO 19125-1, ISO 19107 and
ISO 19111 are relevant to feature access.

 Map access service.  Service that provides a client access to a geographic graphics, i.e., pictures of
geographic data. ISO 19128 is relevant to map access.

 Coverage access service.  Service that provides a client access to and management of a coverage store. An
access service may include a query that filters the data returned to the client.  ISO 19123 and ISO 19111 are
relevant to coverage access.

 Coverage Access Service – sensor.  Service that provides access to a coverage where the source of the
coverage data is a real-time sensor, i.e., not a persistent store.

 Sensor description service.  Service that provides the description of a coverage sensor, including sensor
location and orientation, as well as the sensor’s geometric, dynamic, and radiometric characteristics for
geoprocessing purposes.

 Product access service.  Service that provides access to and management of a geographic product store. A
product can be a predefined feature collection and metadata with known boundaries and content,
corresponding to a paper map or report.  A product can alternately be a previously defined set of coverages
with associated metadata.

 Feature type service.  Service that provides a client to access to and management of a store of feature type
definitions.  The static and dynamic information models for a feature type catalogue are provided in ISO 19110.

 Catalogue service.  Service that provides discovery and management services on a store of metadata about
instances.  The metadata may be for dataset instances, e.g., dataset catalogue, or may contain service
metadata, e.g., service catalogue. ISO 19115 is relevant to catalogue service for dataset metadata. Annex C of
this International Standard is relevant to catalogue service for service metadata.

 Registry Service.  Service that provides access to store of metadata about types. Types are vocabularies that
can be organized and related to each other.  Example registries are information community registries, type
dictionaries, service registries and schema registries



ISO/DIS 19119

© ISO 2001 — All rights reserved 27

 Gazetteer service.  Service that provides access to a directory of instances of a class or classes of real-world
phenomena containing some information regarding position. An information model for a gazetteer is provided
by ISO 19112.

 Order handling service.   Service that provides a client with the ability to order products from a provider
including: formulation of quotes on orders, selection of geographic processing options, submission of an order,
statusing of orders, and billing and accounting of users' orders.

 Standing order service. Order handling service that allows a user to request that a product over a geographic
area be disseminated when it becomes available.  Such dissemination includes receive, prepare (i.e., reformat,
compress, decompress, etc.), prioritize, and transmit geographic information requested through standing
queries or profiles.

8.3.4 Geographic workflow/task management services

Examples of workflow/task management services for working with geographic data and services:

 Chain definition service.  Service to define a chain and to enable it to be executed by the workflow enactment
service. This includes information about its starting and completion conditions, constituent activities and rules
for navigating between them, user tasks to be undertaken, references to applications which may to be invoked,
definition of any workflow relevant data which may need to be referenced, etc.  Chain definition service may
also provide a chain validation service.

 Workflow enactment service.  The workflow enactment service interprets a chain and controls the instantiation
of services and sequencing of activities. This is done through one or more co-operating workflow management
engines, which manages the execution of individual instances of the various services. A workflow enactment
service maintains control data either centralised or distributed across a set of workflow engines.  Workflow
control data includes the internal state information associated with the various services under execution and
may also include check-pointing and recovery/restart information used by the workflow engines to co-ordinate
and recover from failure conditions.

 Subscription service.  Service to allow clients to register for notification about events.  Events are defined by a
service that performs an activity resulting in the event.  Events are catalogued by the subscription service.
Clients identify events of interest, e.g. receipt of data with a specific geographic extent.  When an event occurs,
the subscription service sends notification to all clients who have registered an interest in the event. Once an
event occurs a subscription service may cause an activity to occur, e.g., delivery of a product.

8.3.5 Geographic processing services

8.3.5.1 Relation of geographic processing services to general feature model

The taxonomy within the Processing Services category is based on the General Feature Model as presented in ISO
19109.  Processing Services partially modify the attributes of Features; therefore Processing Services categories
are based on the property types for features given by the General Feature Model.  The processing services
category of EOSE is subdivided into the categories for geographic processing services shown in Table 10.

Table 10 — Geographic processing services taxonomy

 Geographic processing services – spatial

 Geographic processing services – thematic

 Geographic processing services – temporal

 Geographic processing services – metadata



ISO/DIS 19119

28 © ISO 2001 — All rights reserved

8.3.5.2 Geographic processing services – spatial

The following is a non-exhaustive listing of geographic processing services – spatial.

 Coordinate conversion service. Service to change coordinates from one coordinate system to another
coordinate system that is related to the same datum. In a coordinate conversion the parameters’ values are
exact. Coordinate conversion services include map projection services. ISO 19111 is relevant to coordinate
conversion.

 Coordinate transformation service. Service to change coordinates from a coordinate reference system based
on one datum to a coordinate reference system based on a second datum. A coordinate transformation differs
from a coordinate conversion in that the coordinate transformation parameter values are derived empirically:
therefore there may be several different estimations (or realizations). ISO 19111 is relevant to coordinate
transformation.

 Coverage/vector conversion service. Service to change the spatial representation from a coverage schema to
a vector schema, or vice versa.  A standard relevant to vector schema definition is ISO 19107. A standard
relevant to coverage schema definition is ISO 19123.

 Image coordinate conversion service. A coordinate transformation or coordinate conversion service to change
the coordinate reference system for an image. A standard relevant to image coordinates is ISO 19123;
standardization relevant to image coordinates is also discussed in ISO/TR 19121.

 Rectification service. Service for transforming an image into a perpendicular parallel projection and therefore a
constant scale.

 Orthorectification service. A rectification service that removes image tilt and displacement due to terrain
elevation.  Orthorectification requires use of digital elevation data, usually in grid form.

 Sensor geometry model adjustment service. Service that adjusts sensor geometry models to improve the
match of the image with other images and/or known ground positions.

 Image geometry model conversion service. Service that converts sensor geometry models into a different but
equivalent sensor geometry model.

 Subsetting service. Service that extracts data from an input in a continuous spatial region either by geographic
location or by grid coordinates.

 Sampling service. Service that extracts data from an input using a consistent sampling scheme either by
geographic location or by grid coordinates.

 Tiling change service. Service that changes the tiling of geographic data.

 Dimension measurement service. Service to compute dimensions of objects visible in an image or other
geodata. An alternative name for this service is “image mensuration services.”

 Feature manipulation services. Register one feature to another, an image, or another data set or coordinate
set; correcting for relative translation shifts, rotational differences, scale differences, and perspective
differences. Verify that all features in the Feature Collection are topologically consistent according to the
topology rules of the Feature Collection, and identifies and/or corrects any inconsistencies that are discovered

 Feature matching service. Service that determines which features and portions of features represent the same
real world entity from multiple data sources, e.g., edge matching and limited conflation.

 Feature generalization service. Service that reduces spatial variation in a feature collection to increase the
effectiveness of communication by counteracting the undesirable effects of data reduction.



ISO/DIS 19119

© ISO 2001 — All rights reserved 29

 Route determination service. Service to determine the optimal path between two specified points based on the
input parameters and properties contained in the Feature Collection.  May also determine· the measured
distance between two points along a specified path based on the properties supported in the Feature
Collection. Further may determine the length of time it takes to follow a route through the geographic data in
the Feature Collection.

 Positioning service. Service provided by a position-providing device to use, obtain and unambiguously interpret
position information, and determine whether the results meet the requirements of the use. A standard relevant
to position services is ISO 19116.

 Proximity analysis service. Given a position or geographic feature, finds all objects with a given set of attributes
that are located within an user-specified distance of the position or feature.

8.3.5.3 Geographic processing services – thematic

The following is a non-exhaustive listing of geographic processing services – Thematic.

 Geoparameter calculation service. Service to derive application-oriented quantitative results that are not
available from the raw data itself.

 Thematic classification service. Service to classify regions of geographic data based on thematic attributes.
Classification of coverages (including images) subdivides a coverage into regions based on attribute values.
Classification of features sorts features into groups based on attribute values or feature associations.

 Feature generalization service. Service that generalizes feature types in a feature collection to increase the
effectiveness of communication by counteracting the undesirable effects of data reduction.

 Subsetting service. Service that extracts data from an input based on parameter values.

 Spatial counting service. Service that counts geographic features of a given type within a specified area.

 Change detection services. Service to find differences between two data sets that represent the same
geographical area at different times.

 Geographic information extraction services. Services supporting the extraction of feature and terrain
information from remotely  sensed and scanned images

 Image processing service. Service to change the values of thematic attributes of an image using a
mathematical function.  Example functions include: convolution, data compression, feature extraction,
frequency filters, geometric operations, non-linear filters, and spatial filters

 Reduced resolution generation service. Service that reduces the resolution of an image.

 Image Manipulation Services. Services for manipulating data values in images: changing colour and contrast
values, applying various filters, manipulating image resolution, noise removal, "striping", systematic-radiometric
corrections, atmospheric attenuation, changes in scene illumination, etc.

 Image understanding services. Services that provide automated image change detection, registered image
differencing, significance-of-difference analysis and display, and area-based and model-based differencing.

 Image synthesis services. Services for creating or transforming images using computer-based spatial models,
perspective transformations, and manipulations of image characteristics to improve visibility, sharpen
resolution, and/or reduce the effects of cloud cover or haze.

 Multi-band image manipulation. Services that modify an image using the multiple bands of the image.
Examples include: ratioing; principal components transformation, Intensity-Hue-Saturation colour space
transformation, de-correlation-stretching



ISO/DIS 19119

30 © ISO 2001 — All rights reserved

 Object detection service. Service to detect real-world objects in an image.

 Geoparsing service. Service to scan text documents for location-based references, such as a place names,
addresses, postal codes, etc., in preparation for passage to a geocoding service.

 Geocoding service. Service to augment location-based text references with geographic coordinates (or some
other spatial reference).

8.3.5.4 Geographic processing services – temporal

The following is a non-exhaustive listing of geographic processing services – temporal.

 Temporal reference system transformation service. Service to change the values of temporal instances from
one temporal reference system to another temporal reference system.  ISO 19108 is relevant to temporal
reference systems.  Using the terminology of ISO 19108, a temporal reference system transformation service
replaces the TM_Position value of a given TM_Instant with an equivalent TM_Position value associated with a
different temporal reference system.

 Subsetting service. Service that extracts data from an input in a continuous interval based on temporal position
values.

 Sampling service. Service that extracts data from an input using a consistent sampling scheme based on
temporal position values.

 Temporal proximity analysis service. Given a temporal interval or event, find all objects with a given set of
attributes that are located within an user-specified interval from the interval or event.

8.3.5.5 Geographic processing services – metadata

The following is a non-exhaustive listing of geographic processing services – metadata.

 Statistical calculation service. Service to calculate the statistics of a data set, e.g., mean, median, mode, and
standard deviation; histogram statistics and histogram calculation; minimum and maximum of an image; multi-
band cross correlation matrix; spectral statistics; spatial statistics; other statistical calculations

 Geographic annotation services. Services to add ancillary information to an image or a feature in a Feature
Collection (e.g., by way of a label, a hot link, or an entry of a property for a feature into a database) that
augments or provides a more complete description.

8.3.6 Geographic communication services

Examples of communications services for working with geographic data and services:

 Encoding service. Service that provides implementation of an encoding rule and provides an interface to
encoding and decoding functionality.  A standard relevant to encoding is ISO 19118.

 Transfer service. Service that provides implementation of one or more transfer protocols, which allows data
transfer between distributed information systems over off-line or on-line communication media. To successfully
transfer data between two systems the sender and receiver need to agree on the transfer protocol to be used.
A standard relevant to transfer is ISO 19118.  For some geographic data sets large data object transfer is
required.

 Geographic compression service. Service that converts spatial portions of a feature collection to and from
compressed form.

 Geographic format conversion service. Service that converts from one geographic data format to another.



ISO/DIS 19119

© ISO 2001 — All rights reserved 31

 Messaging service. Service that allows multiple users to simultaneously view, comment about, and request
edits of feature collections.  This service allows collaboration involving geographic data.

 Remote file and executable management. Service that provides access to secondary storage of geographic
features as if it were local to the client.

8.3.7 Geographic system management services

NOTE No geographic-specific system management services have been identified.

8.4 ISO 19100 series standards in geographic service taxonomy

This clause summarizes the references to geographic information standards in the ISO 19100 series that are listed
in the geographic service taxonomy of 8.3. Table 11 provides a mapping of the referenced ISO 19100 series of
standards to the extended OSE service categories.

Table 11 — Mapping ISO 19100 series standards to extended OSE service categories

Extended OSE Service Category Relevant ISO 19100 series standard

19117  Geographic information - PortrayalGeographic human interaction services

19128  Geographic information - Web Map server interface

19107  Geographic information - Spatial schema

19110  Geographic information - Methodology for feature cataloguing

19111  Geographic information - Spatial referencing by coordinates

19112  Geographic information - Spatial referencing by geographic identifiers

19115  Geographic information - Metadata

19123  Geographic information - Schema for coverage geometry and
functions

19125-1  Geographic information - Simple feature access - Part 1: Common
architecture

Geographic model/Information
management services

19128  Geographic information - Web Map server interface.

Geographic Workflow/Task management services (no relevant ISO 19100 series standards)

19107  Geographic information - Spatial schema

19108  Geographic Information - Temporal schema

19109  Geographic information - Rules for application schema

19111  Geographic information - Spatial referencing by coordinates

19116  Geographic information - Positioning services

19123  Geographic information - Schema for coverage geometry and
functions

Geographic processing service

19118  Geographic information - Encoding

Geographic communication services (no relevant ISO 19100 series standards)

Geographic system management services (no relevant ISO 19100 series standard)

8.5 Geographic service chaining validity

A service chain combines services to produce results that the individual services could not produce alone.  The
early parts of this clause have defined type of services that could be chained.  Clause 7 defines the syntactic issues
of service chaining, e.g., data structure of a chain, architecture patterns for chaining.  Clause 7 defines how to
construct chains; it does not address if the results of a chain are semantically valid.  The human user that
constructed a new chain or invoked an existing chain of services should determine semantic validity of the results



ISO/DIS 19119

32 © ISO 2001 — All rights reserved

of a service chain.  (Here it is assumed that the chain is syntactically correct, i.e., the input and outputs types
internal to a chain match and the chain produces a result.)  Some factors to consider in the semantic evaluation of
a chain result are listed below:

 Appropriateness of starting data: are the based datasets suited to the subsequent processing? For example,
accuracy and resolution of the data, thematic values are relevant.

 Affect of services on data: how do the individual services effect the data, e.g., error sources and propagation.

 Sequence of the services: how does the order of the chain affect the results?  For example, should a spatial
operation, e.g., orthorectification, be performed before or after a thematic operation, e.g., resampling the
attribute values?

The evaluations depend upon understanding the services, e.g., through review of the service metadata, but also
rely upon the users understanding of the combinations of the services.

8.6 Services organizer folder (SOF)

8.6.1 Introduction

Services organizer folders (SOFs) were introduced in 7.3 as groupings of services that are used for a specific task.
Clause 7 introduced SOF as a structure.  The remainder of this clause provides example SOFs based on the
service taxonomy defined earlier in clause 8.

8.6.2 Image Exploitation SOF

Image exploitation services are required to support most aspects of image exploitation, including precision
measurement of ground positions and of object dimensions. For example, a variety of services are needed for
extracting features from images, or digital elevations from stereoscopic images. Image exploitation services are
widely implemented and used in photogrammetric systems, currently using custom interfaces.

Table 12 provides an example Image Exploitation SOF.



ISO/DIS 19119

© ISO 2001 — All rights reserved 33

Table 12 — Image Exploitation SOF

Geographic Service Taxonomy Image Exploitation Services

Human interaction services Geographic viewer – mosaicing

Model/Information management services Coverage access service

Feature access service

Catalogue service

Workflow/Task services. Chain definition service

Workflow enactment service

Processing services

  Processing services – spatial Coordinate conversion service

Coordinate transformation service

Image coordinate conversion service

Orthorectification service

  Processing services – thematic Geoparameter calculation service

Thematic classification service

Image processing service

  Processing services – temporal Subsetting service

Subsampling service

  Processing services – metadata Statistical calculation service

Communication services Geographic format conversion service

System management services

8.6.3 Geographic data fusion SOF

Geographic data fusion is a framework of services for the synthesis of data originating from different sources. It
aims at obtaining information of greater quality; the exact definition of greater quality will depend upon the
application. Geographic fusion is accomplished through organizing, relating and linking disparate sources of
location-based information.  Geographic fusion relates to the fusion of two or more geographic elements and the
fusion of geographic elements with other sources of structured and unstructured data from distributed sources.

Table 13 provides an example Geographic Fusion SOF.



ISO/DIS 19119

34 © ISO 2001 — All rights reserved

Table 13 — Geographic data fusion SOF

Geographic Service Taxonomy Image Exploitation Services

Human interaction services Geographic viewer

Model/Information management services Map access service

Feature access service

Catalogue service

Gazetteer service.

Feature type service

Workflow/Task services.

Processing services

  processing services – spatial Feature matching service

  processing services – thematic Object detection service

Change detection services

Geoparsing service

Geocoding service

  processing services – temporal

  processing services – metadata

Communication Services Encoding service

Messaging service

System management services

9 Engineering viewpoint: A basis for distribution

9.1 Distribution transparencies and the engineering viewpoint

The engineering viewpoint focuses on mechanisms for distribution, distribution transparencies, and support
services such as security and persistence. Distribution transparencies enable complexities associated with system
distribution to be hidden from applications where they are irrelevant to their purpose.

Location transparency masks the need for an application to have information about location in order to invoke a
service.  Location transparency is handled by name-servers that transparently map logical names to physical
server addresses. The underlying mechanisms used may differ between physical communication solutions. For
example, if CORBA is used, the CORBA naming service can be used as a name service. If socket communication
is used, a proprietary name server is used.

Replication transparency masks the fact that multiple copies of a service may be provided in order to provide
reliability and availability.  Replication transparency is handled to the extent that different calling semantics can be
transparently implemented in the framework, dependent on the policies desired. The supported semantics are
shallow copy (copy of one object without its associated objects), partial copy (copy of one object with its direct
associated objects) and deep copy (copy of one object and transitively a copy of all its associated objects until no
more objects are reachable).

There are other distribution transparencies that are also important to relate to, such as the following:

 Failure transparency – masks failures and recoveries of objects

 Federation transparency – masks interworking across multiple administrations

 Group transparency – masks the use of a group of objects to provide an interface



ISO/DIS 19119

© ISO 2001 — All rights reserved 35

 Migration transparency – masks the relocation of an object

 Resource transparency - masks passivation and reactivation

 Persistence transparency – hides the actual activation and deactivation of objects from a persistent store, and
the actual storage mechanisms and representation format used.

 Transaction transparency – hides coordination for achieving the transactional properties

 Security transparency – hides the mechanisms that are being used for authentication and authorisation

In order to achieve interoperability between different platforms it is necessary to have mappings between the
platforms’ support for these transparencies. This can be done through a higher abstraction layer that maps to the
implementation and representation of these services in various platforms.

Some of these transparencies are being addressed in the current market-development around Application Server
technologies and underlying infrastructures such as Enterprise Java Beans, Microsoft Transaction Server (MS
MTS) and CORBA Components. Once these are established it is a natural step to specify an abstraction layer for
addressing distribution transparencies. This is currently in development at OMG in the context of “UML profile and
human readable language for EDOC – Enterprise Distributed Object Computing”.

9.2 Distributing components using a multi-tier architecture model

To support flexible deployment, IT architectures are structured as multi-tiered distributed architectures. As a
reference model, a logical 4-tier architecture is presented with discussion on variations in different physical
architectures. The logical architecture is the arrangement of services and associated interfaces that are present in
the system (see Figure 10).  The physical architecture is the arrangement of components and associated interfaces
that implement the services.  The components are hosted on hardware computing resources or nodes.

Human interaction
services

Model/Information
management

services

Communication
services

Workflow/Task
services

System
management

services

User processing
services

Shared processing
services

Figure 10 — Logical multi-tiered architecture

The OSE model, as defined in ISO 19101, structures the types of services of an IT system.  Each tier can contain
both IT-general services and GIS-extended services for that tier.



ISO/DIS 19119

36 © ISO 2001 — All rights reserved

 The Human interaction services tier is responsible for physical interaction with the user, through display and
input media and an appropriate dialogue. This might be separated into a presentation tier and a dialogue tier.

 The User processing services tier is a part of the processing services responsible for the functionality required
by the user.

 The Shared processing services tier is part of the processing services responsible for common services (both
domain specific and general) that can be used by multiple users.

 The Model/Information management services tier is responsible for physical data storage and data
management.

 The Workflow/Task services are a set of services that can be viewed as a specialized processing service.

 The Communication services are responsible for connecting the various tiers together (The communication
services are present as the connections between the other service tiers).

 The System management services are orthogonal to the multi-tiered architecture and might be introduced in
multiple tiers.

The logical architecture can be mapped to multiple physical architectures. All tiers could be mapped into one
monolithic application or could be mapped using different physical client-server architectures. Figures 12 and 13
shows mappings to various physical architectures.

Human intercation services

User processing services

Shared processing services

Model/Information
management services

Data server Data server

User interface
client

User interface client

Application server

Logical2-tier physical 3-tier physical

Figure 11 — From Logical 4-tier to Physical 2-tier or 3-tier architecture

In Figure 11, a Data server contains the logic which interfaces either with a data storage system or with some other
type of external data source such as a data feed or an external application system. The Data server provides
Model/Information management services.

An Application server contains components that are responsible for processing services. An Application server may
provide both User processing services and Shared processing services.

A User interface client provides interaction services, contains the logic that presents information to an external
source and obtains input from that source. In most cases the external source is a human end user working at their



ISO/DIS 19119

© ISO 2001 — All rights reserved 37

own computer, although the external source might also be process-oriented. The client logic generally provides
menus of options to allow the user to navigate through the different parts of the application, and it manipulates the
input and output fields on the display device. Frequently, the presentation component also performs a limited
amount of input data validation.

As shown in Figure 11, a 2-tier physical architecture typically consists of a user interface client interacting directly
with a data server. User services are normally executed in the user interface client, while the data server provides
shared processing services.

As shown in Figure 11, a 3-tier physical architecture introduces an intermediate application server that is
responsible for the execution of shared processing services, sometimes also for user services. A major advantage
of using a three-tier distributed information system is that the user can choose how to combine components to
perform tasks.  In an interoperable component environment, the user can select components that perform similar
tasks and combine the chosen components to best produce the information that is needed for application.

Human intercation services

User processing services

Shared processing services

Model/Information
management services

Data server Data server

User interface
client

Web Browser client

Application server

LogicalThick client Thin client

Application server

Web-server

Figure 12 — Mapping logical 4 tier to thick and thin clients

As shown in Figure 12, a thick user interface client architecture will typically contain a larger part of the functionality
in the user service. A thin user interface client  (typically a web browser) will mostly contain user dialogue and
presentation code. A Web browser client is a user interface client that interacts with a Web server, using the
Internet HTTP protocol with content represented in HTML and/or XML.

A platform independent abstract specification can include specification of both user interface (UI), service and
data/information aspects. This means that a large specification can be broken into different parts, each addressing
a different part of a total system specification (see Figure 13). The various parts can typically be mapped into
different kind of specific technologies.



ISO/DIS 19119

38 © ISO 2001 — All rights reserved

Human interaction
services

Model/Information
management services

User processing
services

Shared processing
services

Platform
independent UML
User interface model

Platform
independent UML
Processing model

Platform
independent UML
information model

Platform
independent 
UML model

Abstract
specification

Map to Web,
PC, PDA, 
GUI

Map to COM,
J2EE, CORBA,
Webservices, ...

Map to RDB,
OODB, file, ..

Figure 13 — Mapping from platform independent UML models

10 Technology viewpoint: a basis for cross platform interoperability

10.1 Infrastructure interoperability and the technology viewpoint

The technology viewpoint of ISO RM-ODP is concerned with the underlying infrastructure in a distributed system.  It
describes the hardware and software components used in a distributed system.  To achieve interoperability in the
technology viewpoint, an infrastructure that allows the components of a distributed system to interoperate is
needed.  This infrastructure, which may be provided by a Distributed Computing Platform  (DCP), allows objects to
interoperate across computer networks, hardware platforms, operating systems and programming languages.

The communication between the objects in a DCP is handled by a “communication service”, for instance such as
realized by the Object Request Broker (ORB) in the CORBA environment.

The Communication service is responsible for routing service requests from a client object to a server object.  A
request from a client object to a server object is called a remote method invocation. To perform this remote method
invocation on server objects, the Communication service needs to collect all the request parameters from the client,
package these in a neutral, platform independent structure, and send it to the server object.  The result from the
request is then collected and packaged and returned to the calling client.



ISO/DIS 19119

© ISO 2001 — All rights reserved 39

Client A Client B

Communication Service A Communication Service B

Geographic
Data Server A

Geographic
Data Server B

Geographic
Processing
Service A

Geographic
Processing
Service B

+ +
+ +

Geographic Services on Platform A Geographic Services on Platform B

Figure 14 — Technology viewpoint model of the Interoperability Reference Model

The Communication service allows the components in a distributed system to interoperate.  In the two systems
depicted in Figure 14, Communication service A allows the components of System A (Client A, Geodata Server A
and GIS Service Component A) to interoperate, while Communication service B allows the components of System
B to interoperate.  To allow System A to interoperate with System B, the components of System A must be able to
request services from the components of System B and vice versa.  There are two cases to consider:

 The two systems use the same DCP

OMG has defined the GIOP (General Inter-ORB Protocol) and IIOP (Internet Inter-ORB Protocol) standards which
allow two systems that use CORBA to interoperate (Crowcroft 1996).  These standards define how objects in
System A can invoke services from objects in System B.  DCOM and Java RMI also have support for allowing
objects in one system to invoke services from objects in another system.

 The two systems use two different DCPs

If the two systems use different DCPs, they can interoperate through the use of special “bridging” tools. These
bridging tools allow objects that use one DCP to interoperate with objects that use another DCP.

10.2 A need for multiple platform-specific specifications

It is assumed that one platform-neutral service specification will be the basis for multiple platform-specific service
specifications. The OGC (OpenGIS Consortium) service specifications for Simple Feature Access is an example of
a set of platform-specific service specifications for SQL, COM/OLE and CORBA, and has demonstrated the need
for at least 3 different implementation specifications of the same platform-neutral specification.

Multiple platform-specific specifications are necessary because of the variety of DCP's and the differences in the
way in which they support the functional requirements. One platform-neutral service specification is needed to
support interoperability of multiple platform-specific specifications.

10.3 Conformance between Platform-neutral and Platform-specific service specifications

Platform-neutral models shall be described in UML according to the rules and guidelines in ISO/TS 19103.
Platform-neutral service specifications shall define both static and dynamic models. Static models define objects
including the attributes and operations for each object. Dynamic models capture the interaction patterns between
objects and state modelling.



ISO/DIS 19119

40 © ISO 2001 — All rights reserved

Platform-specific models may be described in UML, together with a description of their mapping to the
corresponding platform-neutral models. It is allowed to describe the platform-specific models directly in a platform
specific language such as SQL, CORBA/IDL, Web Services Description Language, etc. as long as the mapping to
the corresponding platform independent model is well defined.

Development of service specifications may proceed from platform-specific to platform-neutral or from platform-
neutral to platform-specific.  In either case, a service specification shall not be consider complete until it has a
platform-neutral model and at least one platform-specific model.

Platform-neutral
service specification

Platform-specific
service

specification
(DCP-A)

Platform-specific
service

specification
(DCP-B)

Platform-specific
service

specification
(DCP-C)

Two-way mappings

Figure 15 — From platform-neutral abstract specifications to multiple platform-specific implementations

A platform-neutral service specification shall be defined using the relevant parts of the UML information models
defined in other standards in the ISO 19100 series.  A platform-specific service specification shall show how it
meets the intentions of the platform-neutral specification, by showing how the various parts of the platform-neutral
service specification are mapped onto the platform-specific service implementation. In order to support
interoperability between different implementation specifications, the reverse mapping back to the concepts in the
platform-neutral model should be defined.  As relevant, a platform-specific specification should include the
encoding of information according to ISO 19118.

10.4 From platform-neutral to platform-specific specifications

It will be necessary for any ISO 19100 series specification that addresses a particular platform, i.e. SQL, CORBA or
other, to include a detailed mapping specification from the basic data types used in the platform-neutral UML
models to corresponding types in the platform.  For the ISO 19100 series of standards, basic data types for use in
platform-neutral UML models are defined in ISO/TS 19103.

Implementation specifications for a particular platform may be described through the use of the UML. In particular if
platform-specific aspects have been introduced through the use of platform-specific stereotypes, tagged values and
constraints. UML profiles with platform-specific types exists for various platforms.

Annex D provides mappings of the platform neutral services of the Computational Viewpoint to a variety of DCPs.



ISO/DIS 19119

© ISO 2001 — All rights reserved 41

Annex A 
(normative)

Conformance

A.1 Conformance Requirements

This International Standard defines two classes of conformance: service architecture test module and service
specification test module.

The framework, concepts and methodology for conformance and testing for ISO 19100 series standards is defined
in ISO 19105.

A.2 Service architecture test module

A.2.1 Geographic service types definition

Test Purpose: Verify that a service has been categorized in accordance with the Geographic Services Taxonomy.

Test Method: Determine if the service has been categorized in accordance with ISO 19119.  If so, determine if the
categorization of the service is correct.  If the service has a title identical with an example service in 8.3, determine
if the service provides the functionality that is defined in the example.

NOTE If the service provides the same functionality as an example service in 8.3, the services should use the name of the
example.

Reference: ISO 19119, clause 8.

Test Type: Basic.

A.2.2 Service chain

Test Purpose: Verify that the implementation of a service chain is conformant with ISO 19119.

Test Method: Review the data structure for a service chain and determine if it is a directed graph.  Determine if the
nodes of the service chains are services.

NOTE An architecture should provide a means for users to evaluate the validity of a chain.  Guidelines for evaluating chain
validity are provided in 8.5.

NOTE An architecture should provide a means to make a chain extant and transferable between users.  An extant service
chain is required for the translucent chaining pattern.

Reference: ISO 19119, 7.3.

Test Type: Basic.

Test Type: Basic.



ISO/DIS 19119

42 © ISO 2001 — All rights reserved

A.2.3 Service chaining patterns

Test Purpose: Verify that an architecture correctly uses the service chaining architecture patterns.

Test Method: If an architecture claims to implement the transparent chaining pattern, confirm that a human user is
controlling the execution of the chain. If an architecture claims to implement the translucent chaining pattern,
confirm that a service chain can be made extant separate from human users and that control of the chain execution
is accomplished separate from human user.

NOTE For the transparent chaining pattern, the architecture should provide the human user with mechanisms to determine
services of value, e.g., a service catalogue or service organizer folder.

Reference: ISO 19119, 7.3.

Test Type: Basic.

A.2.4 Simple service architecture

Implementing a simple service architecture is not required by this International Standard.  An architecture should
implement the simple service architecture.  Systems that claim conformance to the simple service architecture shall
comply with this clause.

Test Purpose: Verify that an architecture correctly implements the simple service architecture.

Test Method: Verify that the services in the architecture are implemented with message-operations.  Evaluate if the
architecture provides for the separation of control operations from data access operations.  Evaluate if the services
are defined as stateless services, when possible.  Verify that clients in the architecture utilize pre-defined service
types when encountering service instances.  Verify that the utilization of hardware resources is transparent to
clients in the architecture.

Reference: ISO 19119, 7.6.

Test Type: Basic.

A.3 Service specification test module

A.3.1 Introduction

Any specification, including a profile or functional standard that claims conformance with ISO 19119 shall pass all
of the corresponding requirements described in the following abstract test module. This distinguishes between
three different conformance classes.

Platform-neutral service specifications: A base standard that specifies a specific geographic service in an platform-
neutral way.

Platform-specific service specifications: An environment or language specific specification that have been derived
from an platform-neutral service specification, and is to be claimed to be a profile standard of this.

Platform-specific service implementations: An actual implementation of a service that can be conformance-tested
against the abstract test suite of an platform-specific service specification.

A.3.2 Platform-neutral service specifications

The test for each platform-neutral service specification is to check that it has been described according to the
service definition rules of ISO 19119 and the modelling conventions of ISO/TS 19103.



ISO/DIS 19119

© ISO 2001 — All rights reserved 43

Test Purpose: Verify that a geographic service standard is defined in an platform-neutral way, i.e., the usage of
UML has been done according to the rules.

Verify that the usage of the following elements has been done according to ISO/TS 19103.

 General usage of UML

 Classes

 Attributes

 Basic data types

 Associations

 Operations

 Stereotypes and tagged values

 Packages

 Constraints

Interfaces are abstract specifications separate from the concrete deployment or data format bindings.  The
specification of an interface shall include a static portion that includes definition of the operations.  The specification
of an interface shall include a dynamic portion that includes any restrictions on the order of invoking the operations.

Verify that the dynamic aspects of the service are defined, e.g., use cases or interactions diagrams are provided
and described.  Evaluate if the service could be used in a service chain.

Test Method: Inspect the diagrams, use the checking/validation capabilities of the UML-tools that are being used.

Reference: ISO 19119, clause 10, ISO/TS 19103.

Test Type: Basic.

The platform-neutral service specification shall not use constructs that are special for one specific implementation
environment.

The platform-neutral service specification shall contain a platform-neutral abstract test suite for corresponding
platform-specific service specifications and implementations of these.

The platform-neutral service specification shall contain a use-case oriented scenario for the usage of the service,
as illustrated by the example in the Annex B.

A.3.3 Platform-specific service specifications

The test for each platform-specific service specification is to check that it is related to the corresponding platform-
neutral service specification.

Test Purpose: Verify that the platform-specific service specification is conformant with the corresponding platform-
neutral service specification.

Test Method: For each part of the platform-neutral service specification, verify that there is a description of how this
part is mapped into and handled by the platform-specific service specification.

It is recommended to show the mapping from the platform-neutral UML model to an platform-specific UML model
for the platform-specific service specification. It is mandatory to describe the mapping from the platform-neutral



ISO/DIS 19119

44 © ISO 2001 — All rights reserved

specification to the platform-specific specification in the language of the implementation environment (e.g. IDL,
SQL, etc.), either directly from the platform-neutral specification or through the intermediary UML model.

The platform-specific service specification shall contain an platform-specific test suite to be executed to check
conformance of corresponding actual implementations. The test suite shall be based on the corresponding test
suite from the platform-neutral service specification.

Reference: ISO 19119, clause 10.

A.3.4 Platform-specific service implementations

Actual implementations claiming conformance to an platform-specific service specification shall be conformance
checked against the test suite specified for the platform-specific service specification.

Test Purpose: Verify that an implementation is conformant with the corresponding platform-specific service
specification.

Test Method: For each part of the platform-specific service specification, verify that implementation conforms.

Reference: ISO 19119, clause 10.



ISO/DIS 19119

© ISO 2001 — All rights reserved 45

Annex B 
(informative)

Example user scenarios

B.1 Example 1 - Service Chaining for Remote Sensed Data

B.1.1 Summary

Working in a distributed environment, a user of geographic data first locates several data sets and services, then
chains the services to produce resulting geographic products of interest.

A User wants to determine the land cover classification of a geographic area, e.g., wetlands, urban, etc., using
remote sensed Coverage data. The user wants a graphical image of the analysis which can be used in a
presentation or document.  The user wants to include an existing base map in the image.

This scenario is an example of the transparent type of service chaining.  The functionality could also be achieved
using translucent or opaque service chaining.  In the case of opaque chaining, the user would interact with an
aggregate service.

B.1.2 Precondition

The User accesses various geographic information services using "thin" client software located on the user's
hardware.  The user has access to a network over which the Services are accessed.  Financial transactions and
user authorization issues are ignored in this scenario. The user (or the user's client software) knows the network
location of a catalogue service for geographic data and services. The user is familiar with coverage data and
classification services.

B.1.3 Detailed Steps

1) The User accesses a Catalogue Service to search for Coverage data with a geographic extent of interest
to the user.  The User identifies several Coverages with data over a specific geographic area of interest.
Also using the Catalogue Service, the User discovers a Digital Elevation Model covering the same
geographic extent.

2) The User accesses a Catalogue Service to search for geographic Services of interest to the user.  The
User identifies several Orthorectification Services and several Classification Services.  The User reviews
the Service Metadata for the Services and determines the best Orthorectification and Classification
Services for use on the Coverages that were selected in the prior step.  The User also identifies a
Portrayal Service using the Catalogue Service.

3) The User examines the Coverages by providing a reference to the Coverages to the Portrayal Service.
Based on a visual examination, the User estimates whether the Coverages would be appropriate for this
use.

4) The User accesses the Orthorectification Service.  The access operation includes references to the
Coverage and DEM.  The Orthorectification Service provides the user with a reference to an Orthorectified
Coverage.

5) The User accesses the Classification Service.  The access operation includes a reference to the
Orthorectified Coverage.  The User interacts with the semi-automated Classification Service identifying



ISO/DIS 19119

46 © ISO 2001 — All rights reserved

training areas of known land cover type. Statistical measures and visual techniques are provided to the
User to determine if land cover classification has been precise.  The Classification Service result is a
Feature Collection consisting of polygons identifying the classified regions over the geographic extent of
interest. (Note that the order of services could be switched, first performing the Classification and then the
Orthorectification.  The user needs to make this type of decision based on knowledge of the services.)

6) The User combines the Orthorectified Coverage and the Feature Collection into a viewable image using
the Portrayal Service.

7) The User accesses the Catalogue Service to locate a Feature Collection of transportation data over the
same geographic extent.

8) The User combines the Orthorectified Coverage, the classification Feature Collection, and the
transportation Feature Collection into a viewable image using the Portrayal Service.   The User chooses
an alternative symbology set for the transportation Features and requests the Portrayal service to recreate
the composite image.

B.1.4 Post Conditions

Image file that can be viewed, printed, or integrated into other desktop applications is on the user's computer.

B.1.5 Service Chain Directed Acyclic Graph

The scenario was presented above using the "transparent" design pattern described in 7.3.5.  With the transparent
design pattern, the human user controls the flow of the service chaining and the service chain is not explicitly
materialized.  When moving to one of the other design patterns - translucent or opaque - the service chain is an
explicit DAG as described in 7.3.  Figure B.1 shows the DAG for this scenario.

Coverage Data Server DEM Data Server
Transportation Network

Data Server

Orthorectification Service

Land Use Classification Service

Visualize Land Use and Transportation Network

Figure B.1 — DAG for Service Chaining Scenario Example



ISO/DIS 19119

© ISO 2001 — All rights reserved 47

B.2 Example 2 - Roadside Services

B.2.1 Summary

The Roadside Services scenario illustrates the various future network-resident services that might come into play
when a motorist tells his “personal information appliance” that he wants to find a service, e.g., pizza restaurant,
near the highway on which he is travelling.

B.2.2 Precondition

The motorist has a personal information appliance that has access to network services while travelling on the
highway.

B.2.3 Detailed Steps

 Voice Recognition software interprets a spoken request as a query for the nearest restaurant.

 The broker submits the request along with coordinates and direction from the onboard positioning service to a
roadside services database that reports the nearest three restaurant locations to a Mapping Service.

 The Mapping Service queries a Road Map Database and a set of Preferences describing how the user prefers
to have the data presented; map, voice directions, etc.

 The Mapping Service presents route information and preferences to the Presentation service, which packages
information for delivery to the user.

Voice
recognition

Positioning
services

Presentation
service

Broker

Roadside services
database

Mapping
service

Map
database

Nearest
three

Figure B.2 — Roadside service scenario



ISO/DIS 19119

48 © ISO 2001 — All rights reserved

Annex C 
(normative)

Data dictionary for geographic service metadata

C.1 Data dictionary overview

C.1.1 Introduction

This data dictionary describes the characteristics of the service metadata defined in the UML model of 7.4, Figure
9.  UML classes of Figure 9 are mapped into metadata entities in the data dictionary and the attributes of the UML
classes are mapped into metadata elements.  Within the data dictionary, entities and elements are defined by
attributes (those attributes are listed below and are based on those specified in ISO/IEC 11179-3 for the description
of data element concepts, i.e. data elements without representation).

C.1.2 Attribute name/Role name

A label assigned to a metadata entity or to a metadata element. Metadata entity names start with an upper case
letter. Spaces do not appear in a metadata entity name.  Instead, multiple words are concatenated, with each new
sub-word starting with a capital letter (example: XnnnYmmm).  Metadata entity names are unique within the entire
data dictionary of this International Standard.  Metadata element names are unique within a metadata entity, not
the entire data dictionary of this International Standard.  Role names are used to identify the targets of metadata
abstract model associations and are preceded by “Role name:” to distinguish them from other metadata elements.
Names and role names may be in a language other than that used in this International Standard.

C.1.3 Definition

The metadata entity/element description.

C.1.4 Obligation/Condition

C.1.4.1 General

This is a descriptor indicating whether a metadata entity or metadata element shall always be documented or
sometimes be documented (i.e. contains value(s)). This descriptor may have the following values: M (mandatory),
C (conditional), or O (optional).

C.1.4.2 Mandatory (M)

The metadata entity or metadata element shall be documented.

C.1.4.3 Optional (O)

The metadata entity or the metadata element may be documented or may not be documented. Optional metadata
entities and optional metadata elements have been defined to provide a guide to those looking too fully document
their data. (Use of this common set of defined elements will help promote interoperability among geographic data
users and producers world-wide.)  If an optional entity is not used, the elements contained within that entity
(including mandatory elements) will also not be used. Optional entities may have mandatory elements; those
elements only become mandatory if the optional entity is used.



ISO/DIS 19119

© ISO 2001 — All rights reserved 49

C.1.5 Maximum occurrence

Specifies the maximum number of instances the metadata entity or the metadata element may have. Single
occurrences are shown by “1”; repeating occurrences are represented by “N”.  Fixed number occurrences other
than one are allowed, and will be represented by the corresponding number (i.e. “2”, “3”…etc).

C.1.6 Data type

Specifies a set of distinct values for representing the metadata elements; for example, integer, real, string,
DateTime, and Boolean.

NOTE Data types are defined in ISO 19118, 8.2.2.

C.1.7 Attribute class or target class of role

When the element described is an attribute, the value of this column is the class used by the attribute.  When the
element described is a role, the value of this column is the target class of the role.

C.1.8 Prefixes to Names

The domain of elements and entities listed in these tables is indicated by a two-letter prefix for the name.  Items
defined in this International Standard have the prefix “SV_”.  Several elements and entities listed in the data
dictionary have prefixes other than SV indicating they are defined in these other standards:

• SV – Services (ISO 19119)

• MD – Metadata (ISO 19115)

• CI – Citation (ISO 19115)

• EX – Extent (ISO 19115)

C.2 Metadata data dictionaries

C.2.1 Data dictionary for MD_Identification

The data dictionary for MD_Identification is contained in ISO 19115.



ISO/DIS 19119

© ISO 2001 — All rights reserved 50

C.2.2 Data dictionary for SV_ServiceIdentification

SV_ServiceIdentification provides descriptive data for a Service instance sufficient to allow a client to invoke the service.

SV_ServiceIdentification has an aggregation relationship with multiple instances SV_operationMetadata.  While it is known that the service structure may be more complicated
than this aggregation, the additional detail of services aggregating services is not needed in a service metadata record.

The data dictionary for SV_ServiceIdentification is provided below.

Attribute name/Role name Definition Obligation / Condition Maximum
occurrence

Attribute class or target class of
role

1. serviceType A service type name from a registry of services. For example, the
values of the nameSpace and name attributes of GeneralName may
be "OGC " and "catalogue.”

M 1 GenericName

2. serviceTypeVersion Provides for searching based on the version of serviceType.  For
example, we may only be interested in OGC Catalogue V1.1 services.
If version is maintained as a separate attribute, users can easily
search for all services of a type regardless of the version.

O N CharacterString

3. accessProperties Information about the availability of the service, including,
- Fees
- Planned available date and time
- Ordering instructions
- Turnaround

O 1 MD_StandardOrderProcess

4. restrictions Legal and security constraints on accessing the service and
distributing data generated by the service.

O 1 MD_DataConstraints

5. keywords Keywords to assist the search process. Registries to control keywords
may exist, but control is not required as a part of this model.

O 1 sequence{MD_Keywords}

8. Role name:
containsOperations

Provides information about the  operations that comprise the service M N SV_OperationMetadata

9. Role name:
operatesOn

Provides  information on the datasets that the service operates on O N MD_DataIdentification



ISO/DIS 19119

51 © ISO 2001 — All rights reserved

C.2.3 Data dictionary for SV_OperationMetadata

SV_OperationMetadata describes the signature of one and only one method provided by the service.

The data dictionary for SV_OperationMetadata is provided below.

Attribute name/Role name Definition Obligation / Condition Maximum
occurrence

Attribute class or target class of
role

1. operationName A unique identifier for this interface. M 1 MemberName

2. DCP Distributed Computing Platforms on which the operation has been
implemented

M N DCPlist

3. operationDescription Free text description of the intent of the operation and the results of
the operation.

O 1 CharacterString

4. invocationName The name used to invoke this interface within the context of the DCP. O 1 CharacterString

5. parameters The parameters that are required for this interface. O 1 sequence(SV_Parameter)

6. connectPoint Handle for accessing the service interface. M N CL_OnlineResource

7. dependsOn List of operations that must be completed immediately before current
operation is invoked, structured as a list for capturing alternate
predecessor paths and sets for capturing parallel predecessor paths.

O 1 set{sequence{OperationName} |
set(OperationName}

C.2.4 Data dictionary for SV_ServiceProvider

SV_ServiceProvider describes an organization that provides services.

The data dictionary for SV_ ServiceProvider is provided below.

Attribute name/Role name Definition Obligation / Condition Maximum
occurrence

Attribute class or target class of
role

1. providerName A unique identifier for this organization. M 1 CharacterString

2. serviceContact Information for contacting the service provider M N CL_ResponsibleParty



ISO/DIS 19119

© ISO 2001 — All rights reserved 52

C.2.5 Data dictionary for MD_DataIdentification

The data dictionary for MD_DataIdentification is contained in ISO 19115.

C.2.6 Data dictionary for SV_OperationChainMetadata

The data dictionary for SV_OperationChainMetadata is provided below.

Attribute name/Role name Definition Obligation / Condition Maximum
occurrence

Attribute class or target class of
role

1. name The name, as used by the service for this chain. M 1 CharacterString

C.2.7 Data dictionary for SV_Parameter

The data dictionary for SV_Parameter is provided below.

Attribute name/Role name Definition Obligation / Condition Maximum
occurrence

Attribute class or target class of
role

1. Name The name, as used by the service for this parameter. M 1 MemberName

2. Direction Indication if the parameter is an input to the service, an output or both. O 1 ParameterDirection

3. Description A narrative explanation of the role of the parameter O 1 CharacterString

4. Optionality Indication if the parameter is required M 1 CharacterString

5. Repeatability Indication if more than one value of the parameter may be provided. M 1 Boolean



ISO/DIS 19119

© ISO 2001 — All rights reserved 53

Annex D 
(informative)

Mapping to Distributed Computing Platforms

D.1 From platform-neutral to platform-specific specifications

This annex illustrates the principles of mapping from a platform-neutral specification to a platform-specific
specification through partial examples for several Distributed Computing Platforms (DCPs). The intention is to
demonstrate the principle rather than to fully specify DCP mappings.

An implementation for a particular platform can be described by using a UML model in the platform-specific
specification.  Platform-specific aspects are introduced through the use of platform-specific stereotypes, tagged
values and constraints. UML profiles with platform-specific types exist for various platforms, such as the OMG UML
Profile for CORBA and the Java community UML Profile for Java/EJB.

The following environments and DCPs are considered as potential targets for platform-specific profiles of platform-
neutral specifications.

 SQL-92 and SQL-99

 CORBA using ISO IDL

 Java 2 Enterprise Edition with EJB (J2EE)

 COM+

 EXPRESS/SDAI

 ODMG

 C++ and other more traditional commercial OO programming languages

 Internet/http/Web Services

The goal of this annex is to show how a platform-specific service specification is conformant with a platform-neutral
service specification, and the associated geographic information standards that are used by the service.

The existing UML profiles for various DCPs represent the concepts available in a target environment. It is possible
to do the mapping from the platform-neutral UML model to an platform-specific UML model (see figure D.1). There
is then a straightforward mapping from the platform-specific UML model to an platform-specific specification directly
in the relevant language of the target environment, such as COM or CORBA IDL, SQL or similar.



ISO/DIS 19119

54 © ISO 2001 — All rights reserved

Impl.-neutral
UML model

Mapping

COM
UML model

CORBA
UML model

SQL
UML model

EXPRESS
UML model

UML to
COM
IDL

UML to
CORBA
IDL

UML to
SQL

UML to
EXPRESS

COM
IDL spec

CORBA
IDL spec

EXPRESS
spec

SQL
spec

Figure D.1 — From platform-neutral to specific models through UML mappings

The final platform-specific specification is expressed in the appropriate language for the target environment, and
going through an platform-specific UML model is only a logical path that can be used.

The mappings may be done by hand or (semi-) automatically, based on a set of defined rules. The goal is to create
an platform-specific specification that is conformant with the platform-neutral model, thus meeting its intended
functionality and information requirements.  It is assumed that the first platform-specific specifications will be done
manually, and that providing a description of how the mapping has been done, and how the elements of the
platform-neutral model are reflected in the platform-specific specification will show conformance.

An platform-neutral specification is conceptual and might not have described the exact basis for representation of
basic types. For example, a platform-neutral specification might not specify if a Real is to be represented as a float
or a double, and with what kind of precision. This needs to be decided for an platform-specific specification. When
a decision is made, it is necessary to link this decision back to the platform-neutral specification, so that future
platform-specific specifications can make representation decisions that do not violate the potential for
interoperability.



ISO/DIS 19119

© ISO 2001 — All rights reserved 55

Impl.-neutral
UML model

Mapping

XML
DTD
based

XML
schema
based

Proprietary
Binary

COM
spec

CORBA
spec

J2EE
spec

SQL
spec

XML
DTD

ISO 19118
Encoding and
data exchange

XML Stream
R/W

XML Stream
R/W

XML Stream
R/W

Implementation
specific
service specifications

Figure D.2 — From platform-neutral to platform-specific specifications

Figure D.2 illustrates a direct mapping, without going through a platform-specific UML model. The top part also
illustrates that the same approach can be used for exchange formats, such as the XML DTD defined in ISO 19118,
and optimized binary formats from the same base model.

Platform-neutral models are described in UML according to the rules and guidelines in ISO/TS 19103. These
models are mapped to an XML-based encoding format according to ISO 19118. Platform-specific models are
created for target implementation environments and DCPs according to a mapping. The mapping describes how
each construct of an platform-neutral model is handled on the platform-specific level. These principles are briefly
described in the following sections.

D.2 UML constructs used in the ISO 19100 series of standards

The following UML constructs are used in the ISO 19100 series of geographic information standards and need to
be mapped to be platform-specific constructs:

 Packages

 Classes

 Attributes

 Basic data types

 Associations

 Operations

 Constraints



ISO/DIS 19119

56 © ISO 2001 — All rights reserved

The ISO/TS 19103 basic data types (Table D.1) need to be mapped into concrete types in the various
implementation environments.

Table D.1 — Summary of ISO/TS 19103 basic data types

Data type Description

Integer An integer number.

Real A float floating point real number, or a double that describes a signed, approximate, numeric
value with a typical binary precision 53 (zero or absolute value 10[-308] to 10[308]).

Binary A sequence of octets.

CharacterString A string of characters.

Date A string that follows the ISO 8601 formats for time.

Time A string that follows the ISO 8601 formats for date.

DateTime A string which follows the combined date / time format of ISO 8601.

Boolean A quantity that takes the values TRUE or FALSE. – or UNKNOWN ?

D.3 Platform-neutral technology model

Figure D.3 shows a platform-neutral model of various services available in a typical target environment, such as
COM, CORBA or Java 2 Enterprise Edition. It shows that there is a basic IT technology support for the various
services described in the extended OSE model.

Deferred
Synch request

Naming
service

Message

Synchron.
request

Event - publish
& subscribe 

Trading
service

Streaming

Communication
services

Abstract technology model

Human interaction
services

User  processing
services

Shared processing
services

Model/Information
management serv.Security

service

User interface
document model
Web interaction

Workflow/Task
services

System
Management serv  

Server
components

Concurrency
service

Transaction
service 

Persistence serviceIntegration service

XML

Figure D.3 — Platform-neutral abstract technology model

Human interaction services are supported by various user interface mechanisms, including web-browsers.



ISO/DIS 19119

© ISO 2001 — All rights reserved 57

Communication services are supported by a principal set of 3+2 interaction modes: operations (synchronous or
deferred synchronous requests), signals (event publish/subscribe or asynchronous messaging) and flows (with
streaming). Associated with this is general naming and trading services.

Workflow/Task services are supported by a set of workflow/task services.

System management services are supported by various kinds of user, application and security management
services.

Processing services are separated into user and shared services, where user services typically are supported in a
single user mode, while shared services adds functionality for server-side and multi-user support with concurrency
and transactions.

Model/Information management services are supported through data storage, persistence and manipulation
services – potentially including various legacy system/format integration services.

It is possible to describe platform-neutral services using these generic platform-neutral concepts, and to define a
mapping for how to support these in various environments.

Clauses D.4 through D.8 describe how various implementation environments and DCPs provide these services.

D.4 Mapping to CORBA-specific service specifications

CORBA
Dynamic API

Naming
service

CORBA
messaging

service

CORBA ORB
w/IDL

Event &
notification

service 

Trading
service

Communication
services

CORBA

Human interaction
services

User  processing
services

Shared processing
services

Model/Information
management serv.Security

service

Workflow
service

CORBA
components

(CCM)  

Concurrency
service

Transaction
service 

Persistence service

XML, IIOP
mapping

+ real-time/min. CORBA
+ Firewall + QoS + ...

Figure D.4 — CORBA Technologies related to Abstract Architecture model

Human interaction services are not directly supported.

Communication services are supported by the CORBA ORB and dynamic API, as well as with the CORBA
messaging service and event&notification service. Further support for communication of XML-structures will be
provided by the CORBA XML-value mapping.

Workflow/Task services are supported by the CORBA workflow service.



ISO/DIS 19119

58 © ISO 2001 — All rights reserved

System management services are supported by CORBA Security and associated user services.

Processing services are supported by server-side CORBA-objects and the concurrency and transaction service. In
CORBA 2 the CORBA Components Model will provide further services for server-side objects.

Model/Information management services are supported by the CORBA persistence service.

For mappings from platform-neutral UML models to CORBA the following apply:

 Packages – are typically mapped to CORBA modules

 Classes – are typically mapped to interfaces

 Attributes – are typically mapped to attributes of interfaces

 Basic data types – are mapped according to Table D.2 shown below

 Associations – are typically mapped to access operations in the involved interfaces, in the case of attributes of
the association it might be mapped to a separate association interface

 Operations – are typically mapped to operations in interfaces, exceptions are mapped to CORBA exceptions

 Constraints – are typically not mapped directly into an implementation

Table D.2 — From ISO/TS 19103 to CORBA

19103 Data type Suggested CORBA mapping

Integer long , short, long, unsigned short, unsigned long

Real Float, double

Binary Sequence of octet

CharacterString Wstring, string

Date Date

Time Time

DateTime DateTime

Boolean boolean



ISO/DIS 19119

© ISO 2001 — All rights reserved 59

D.5 Mapping to MS COM-specific service specifications

Automation

MAPI

MSMQ

MS IDL

COM+ Events

Active
directory

Communication
services

MS DNA/COM+

Human interaction
services

User  processing
services

Shared processing
services

Model/Information
management serv.Security

service

XML/XSL
(SOAP)

MTS

Integration
server, CICS, ..

ADO,OLE/DB
ODBC

BYO Transactions

IIS, ASP,
XML/HTML

Figure D.5 — MS DNA/COM Model

Human interaction services are supported by the Windows windowing system and through support for web-
browsers, typically with web-server support such as Active Server Pages and increased support for XML and
XSLT.

Communication services are supported by the DCOM and Automation for synchronous requests, as well as with
MSMQ messaging service and the COM+ event&notification service. Further support for communication of XML-
structures is being provided through SOAP (Simple Object Access Protocol), providing a synchronous RPC-
mechanism using HTTP and XML.

Workflow/Task services are not directly supported.

System management services are supported by Windows NT/2000 Security and associated user services.

Processing services are supported by server-side COM-objects and the associated MTS concurrency and
transaction service.

Model/Information management services are supported by OLE/DB, ADO and ODBC.

For mappings from platform-neutral UML models to CORBA the following apply:

 Packages – are typically mapped to COM modules

 Classes – are typically mapped to COM interfaces

 Attributes – are typically mapped to attributes of interfaces

 Basic data types – are mapped according to Table D.3 shown below



ISO/DIS 19119

60 © ISO 2001 — All rights reserved

 Associations – are typically mapped to access operations in the involved interfaces, in the case of attributes of
the association it might be mapped to a separate association interface

 Operations – are typically mapped to operations in interfaces, exceptions are mapped to CORBA exceptions

 Constraints  – are typically not mapped directly into an implementation

Table D.3 — From ISO/TS 19103 to MS COM

19103 Data type Suggested COM  mapping

Integer long , short, long, unsigned short, unsigned long

Real Float, double

Binary Sequence of octet

CharacterString char

Date Date

Time Time

DateTime DateTime

Boolean boolean

D.6 Mapping to J2EE/EJB-specific service specifications

Remote Method
Invocation
(RMI, IIOP)

Naming and
Directory Interface

(JNDI)

Java
Messaging

Service (JMS)

Java IDL
(JMI)

Java Mail & Java
Activation Framework

(JMI+JAF)

JINI (Trading)

Communication
services

J2EE/EJB

Human interaction
services

User  processing
services

Shared processing
services

Model/Information
management serv.

XML

Enterprise
Java Beans

(EJB)

Connectors
(CICS,

SAP, ERP)

Database
Connectivity

(JDBC+)Transaction
API (JTA, JTS)

Servlets & Java 
Server Pages + XSL

(Servlets+JSP)

Figure D.6 — J2EE/EJB model

Human interaction services are supported by the Java windowing system and through support for web-browsers,
typically with web-server support such as Java Server Pages (JSP) and increased support for XML and XSLT.



ISO/DIS 19119

© ISO 2001 — All rights reserved 61

Communication services are supported by Java RMI, as well as with the Java messaging service and
event&notification through the messaging service. Further support for communication of XML-structures will be
provided by the Java XML-API.

Workflow/Task services are not supported directly.

System management services are supported by Java Security and associated user services.

Processing services are supported by server-side Enterprise Java Beans (EJB) and the associated concurrency
and transaction service.

Model/Information management services are supported by the JDBC and a forthcoming Java persistence service,
as well as the current Java serialisation.

For mappings from platform-neutral UML models to Java the following apply:

 Packages – are typically mapped to CORBA modules

 Classes – are typically mapped to interfaces

 Attributes – are typically mapped to attributes of interfaces

 Basic data types – are mapped according to Table D.4 shown below

 Associations – are typically mapped to access operations in the involved interfaces, in the case of attributes of
the association it might be mapped to a separate association interface

 Operations – are typically mapped to operations in interfaces, exceptions are mapped to Java exceptions

 Constraints  – are typically not mapped directly into an implementation

Table D.4 — From ISO/TS 19103 to Java 2

19103 Data type Suggested Java mapping

Integer int, short, long

Real Float, double

Binary Binary

CharacterString String

Date Date

Time Time

DateTime DateTime

Boolean boolean



ISO/DIS 19119

62 © ISO 2001 — All rights reserved

D.7 Mapping to EXPRESS/SDAI-specific service specifications

EXPRESS/SDAI

Human interaction
services

User  processing
services

Shared processing
services

Model/Information
management serv.

SDAI interface

Data stored according
to EXPRESS schemas

Underlying storage &
file systems

Figure D.7 — EXPRESS/SDAI model

The EXPRESS environment is focusing on providing Model/Information management services

For mappings from platform-neutral UML models to EXPRESS the following apply:

 Packages – are typically mapped to schemas

 Classes – are typically mapped to entities

 Attributes – are typically mapped to attributes of entities

 Basic data types – are mapped according to Table D.5 shown below

 Associations – are typically mapped to attributes of the involved entities

 Operations – are typically mapped to events in EXPRESS-2

 Constraints – are typically mapped into EXPRESS rules



ISO/DIS 19119

© ISO 2001 — All rights reserved 63

Table D.5 — From ISO/TS 19103 to EXPRESS

19103 Data type Suggested EXPRESS mapping

Integer Integer

Real Real

Binary Binary

CharacterString String

Date Date

Time Time

DateTime DateTime

Boolean Boolean, Logical

D.8 Mapping to SQL-specific service specifications

SQL

Human interaction
services

User  processing
services

Shared processing
services

Model/Information
management serv.

SQL API

Data stored according
to SQL table
representations

Figure D.8 — SQL Model

The SQL environment is focused on providing Model/Information management services

For mappings from platform-neutral UML models to SQL the following apply:

 Packages – are typically mapped to groups of tables

 Classes – are typically mapped to tables

 Attributes – are typically mapped to columns in tables

 Basic data types – are mapped according to Table D.6 shown below

 Associations – are typically mapped to tables



ISO/DIS 19119

64 © ISO 2001 — All rights reserved

 Operations – are typically mapped to stored procedures/functions or are not supported

 Constraints – are typically not mapped directly into an implementation

Table D.6 — From ISO/TS 19103 to SQL

19103 Data type Suggested SQL mapping

Integer INTEGER, SMALLINT

Float NUMERIC, REAL, FLOAT, DOUBLE PRECISION

Double double

Binary BIT, BIT VARYING, BINARY LARGE OBJECT

CharacterString (NATIONAL) CHARACTER VARYING

Date DATE

Time TIME

DateTime TIMESTAMP (WITH TIMEZONE), INTERVAL

Boolean BOOLEAN



ISO/DIS 19119

© ISO 2001 — All rights reserved 65

Bibliography

[1] Open System Environment (OSE): Architectural Framework for Information Infrastructure" Fredrik (Fritz)
Schulz, NIST Special Publication 500-232, December 1995

[2] Open GIS Consortium, Guide to Interoperable Geoprocessing, 1996, http://www.opengis.org

[3] OpenGIS Consortium, 1999. The OGC Abstract Specification, Wayland, Massachusetts,
http://www.opengis.org

[4] Enterprise JavaBeans™ Specification, v1.1, Sun Microsystems Inc., 1999.

[5] CORBA 3.0 New Components Chapters, OMG TC Document ptc/99-10-04, October 29, 1999

[6] The Unified Modeling Language Reference Handbook, Rumbaugh, Jacobson, Booch, Addison-Wesley,
1999.

[7] UML 1.3, Object Management Group, http://www.omg.org

[8] “Content Standard for Computational Models”, Alexandria Digital Earth Prototype Project, University of
California, Santa Barbara, Version 1.0, May 2001, http://www.alexandria.ucsb.edu/doc/CSCMv1.doc

[9] ISO 8601, Data elements and interchange formats — Information interchange — Representation of dates
and times

[10] ISO 8879:1986, Information processing — Text and office systems — Standard Generalized Markup
Language (SGML)

[11] ISO 10303-11:1994, Industrial automation systems and integration — Product data representation and
exchange — Part 11: Description methods: The EXPRESS language reference manual

[12] ISO 19101:—2), Geographic information — Reference model

[13] ISO 19105:2000, Geographic information — Conformance and testing

[14] ISO 19108:—2), Geographic information — Spatial schema

[15] ISO 19108:—2), Geographic information — Temporal schema

[16] ISO 19109:—2), Geographic information — Rules for application schema

[17] ISO 19110:—2), Geographic information — Methodology for feature cataloguing

[18] ISO 19111:—2), Geographic information — Spatial referencing by coordinates

[19] ISO 19112:—2), Geographic information — Spatial referencing by geographic identifiers

[20] ISO 19113:—2), Geographic information — Quality principles

[21] ISO 19114:—2), Geographic information — Quality evaluation procedures

[22] ISO 19116:—2), Geographic information — Positioning services
                                                     

2) To be published.



ISO/DIS 19119

66 © ISO 2001 — All rights reserved

[23] ISO 19117:— 2), Geographic information — Portrayal

[24] ISO 19118:—2), Geographic information — Encoding

[25] ISO 19123:—2), Geographic information — Coverage geometry and functions

[26] ISO/TR 19121:2000, Geographic information — Imagery and gridded data

[27] ISO 19125-1:—2), Geographic information — Simple feature access — Part 1: Common architecture

[28] ISO 19128:—2), Geographic information — Web map server interface

[29] ISO/IEC 2382:1:1993, Information technology — Vocabulary — Part 1: Fundamental terms

[30] ISO/IEC 11179-3:1994, Information technology — Specification and standardization of data elements —
Part 3: Basic attributes of data elements



 

FORM 8A (ISO) FORMULAIRE 8A (ISO) 
Version/V2000.1 

 
 
 
 

This form should be sent to the ISO Central Secretariat, 
together with the English and French versions of the 
committee draft, by the secretariat of the technical committee 
or subcommittee concerned 

 Ce formulaire doit être envoyé au Secrétariat central de l'ISO
en même temps que les versions anglaise et française du
projet de comité, par le secrétariat du comité technique ou du
sous-comité concerné 

The accompanying document is submitted for circulation to 
member body vote as a DIS, following consensus of the 
P-members of the committee obtained 

 Le document ci-joint est soumis, pour diffusion comme DIS,
au vote comité membre, suite au consensus des membres
(P) du comité obtenu 

 
 on 

le 
2001-05-06 
(yyyy-mm-dd) 

 
at the meeting of 
à la réunion du 

TC 211/SC      : see 
voir 

resolution 
résolution 

No.
no 

188 in 
dans le 

document N 1192 

 by postal ballot initiated on 
par un vote par correspondance démarré le 

2001-02-06 
(yyyy-mm-dd) 

P-members in favour: 
Membres (P) approuvant le projet: 

Australia, Belgium, Canada, China, Czech Republic, 
Denmark, Finland, Germany, Italy, Japan, Rep. of Korea, 
Malaysia, New Zealand, Norway, Portugal, Saudi Arabia, 
Spain, Sweden, Thailand, Turkey, United Kingdom, USA, 
Yugoslavia 

P-members voting against: 
Membres (P) désapprouvant: 

None 

P-members abstaining: 
Membres (P) s'abstenant: 

France, South Africa, Switzerland 

P-members who did not vote: 
Membres (P) n'ayant pas voté: 

Austria, Hungary, Iran, Jamaica, Morocco, Russian 
Federation 

 

Remarks/Remarques 

The voting result is in response to document N 44. No members objected to the 
revised document N 1145 being sent to ISO for registration as DIS, and resolution 
188 at the Adelaide 2001-10-25/26 plenary meeting was approved unanimously. 

I hereby confirm that this draft meets the requirements of part 3 of the ISO/IEC Directives 
Je confirme que ce projet satisfait aux prescriptions de la partie 3 des Directives ISO/CEI 

Date  Name and signature of the secretary 
 Nom et signature du secrétaire 
 
2001-12-17 

 

 
 
Bjørnhild Sæterøy 

 

 EXPLANATORY REPORT 
RAPPORT EXPLICATIF 

ISO/DIS 19119 

will supersede:  
remplacera:  N 1145 

ISO/TC 211  /SC       Secretariat  NSF 


