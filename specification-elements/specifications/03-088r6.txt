
03-088r6/03-088r6 OWS Common.doc
OGC 03-088r6

OGC 03-088r6



Open GIS Consortium Inc.

Date: 2004-1-19


Reference number of this OpenGIS® document: OGC 03-088r6

Version: 0.2.0


Category: OpenGIS® Recommendation Paper


Editor: Arliss Whiteside


OWS Common Implementation Specification

Copyright notice


This OGC document is copyright-protected by OGC. While the reproduction of documents in any form for use by participants in the OGC standards development process is permitted without prior permission from OGC, neither this document nor any extract from it may be reproduced, stored or transmitted in any form for any other purpose without prior written permission from OGC.

Warning


This document is not an OGC Standard. It is distributed for review and comment. It is subject to change without notice and may not be referred to as an OGC Standard.


Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation. Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. Open GIS Consortium shall not be held responsible for identifying any or all such patent rights.  However, to date, no such rights have been claimed or identified.


This version of the specification cancels and replaces all previous versions.

Document language: 
English 
Document type:

OpenGIS® Recommendation Paper


Document subtype:
Normatively referenced by Implementation Specifications


Document stage:
Approved


Contents
Page

vi.
Preface


ii.
Subclauses ready for normative referencing
vi

iii.
Document contributor contact points
vi

iv.
Revision history
vii

v.
Changes to the OpenGIS( Abstract Specification
vii

vi.
Future work
vii

Introduction
ix

1
Scope
1

2
Conformance
1

3
Normative references
1

4
Terms and definitions
2

5
Conventions
4

5.1
Symbols (and abbreviated terms)
4

5.2
UML notation
4

5.3
Document terms and definitions
6

6
Document overview
7

7
GetCapabilities operation
8

7.1
Introduction
8

7.2
GetCapabilities request
8

7.2.1
GetCapabilities request parameters
8

7.2.2
GetCapabilities request KVP encoding
10

7.2.3
GetCapabilities request XML encoding
11

7.3
Parameter discussions
14

7.3.1
Version parameter
14

7.3.2
Version negotiation
14

7.3.3
Sections parameter
15

7.3.4
updateSequence parameter
16

7.3.5
AcceptFormats parameter
16

7.4
GetCapabilities response
17

7.4.1
Exceptions
17

7.4.2
Service metadata document contents
18

7.4.3
ServiceIdentification section contents
19

7.4.4
ServiceProvider section contents
20

7.4.5
OperationsMetadata section contents
21

7.4.6
Capabilities document XML encoding
23

7.4.7
ServiceIdentification section XML encoding
25

7.4.8
ServiceProvider section XML encoding
31

7.4.9
OperationsMetadata section XML encoding
32

7.4.10
OperationsMetadata section standard contents
37

7.4.11
Service metadata XML example
39

8
Exception reports
41

8.1
Introduction
41

8.2
Exception report contents
41

8.3
exceptionCode parameter values
42

8.4
“locator” parameter values
43

8.5
Exception report XML encoding
44

8.6
Exception report XML example
46

9
All operations except GetCapabilities, minimum abilities
46

9.1
Introduction
46

9.2
Operation request
46

9.2.1
Operation request parameters
46

9.2.2
Operation request KVP encoding example
47

9.2.3
Operation request XML encoding
47

9.3
Operation response
48

10
Other operation parameters
49

10.1
Introduction
49

10.2
Bounding box
49

10.3
Coordinate reference system references
49

11
Operation request and response encoding
50

11.1
General HTTP rules
50

11.2
HTTP GET
50

11.3
Reserved characters in HTTP GET URLs
51

11.4
HTTP POST
51

11.5
KVP encoding
52

11.5.1
Introduction
52

11.5.2
Capitalization
52

11.5.3
Parameter lists
52

11.6
XML encoding
53

11.6.1
Introduction
53

11.6.2
Capitalization
53

11.6.3
XML Schema documentation
53

11.6.4
XML Schema extension and restriction
53

11.7
HTTP responses
53

12
Guidance for OWS Implementation Specifications
54

Annex A (normative)  XML schemas
55

Annex B (informative)  UML models
59

Annex C (informative)  Reasons for parameters
64

C.1
Introduction
65

C.2
Reasons for GetCapabilities parameters
65

C.3
Reasons for service metadata sections
66

C.4
Reasons for ServiceIdentification parameters
67

C.5
Reasons for ServiceProvider parameters
68

C.6
Reasons for OperationsMetadata parameters
70

C.7
Reasons for all operations except GetCapabilities minimum parameters
72

C.8
Reasons for Exception Report parameters
72

C.9
Use cases for Sections parameter
73

C.10
Requirements for exception reports
74

C.11
Version negotiation backward compatibility
74

Bibliography
76




i. Preface


This document specifies many of the aspects that are, or should be, common to all or multiple OGC Web Service (OWS) interface Implementation Specifications. These common aspects are primarily some of the parameters and data structures used in operation requests and responses. Of course, each such Implementation Specification must specify the additional aspects of that interface, including specifying all additional parameters and data structures needed in all operation requests and responses.


One expected use of this document is as a normative reference from all future versions of OWS interface Implementation Specifications. Rather than continuing to repeat this material in each such Implementation Specification, usually with small changes, each specification should normatively reference each relevant part of this document. Such normative references can take the form of stating “This TBD shall include TBD as specified in Subclause TBD of OGC document TBD.” Such normative references are expected to:


a) Reduce the work needed to edit and read each such Implementation Specification


b) Reduce the length of each such Implementation Specification


c) Increase interoperability among such Implementation Specifications by increasing commonality and discouraging non-essential differences

d) Provide useful guidance to writers of new and revised Implementation Specifications

Each existing OGC-approved and draft OWS interface Implementation Specification should consider this document to be a formal change request to modify that specification in its next revision to agree with all the relevant material specified herein. Each such specification is also requested to normatively reference each relevant part of this document (instead of repeating the same material).


Most of the current contents of this document have been agreed on by an ad-hoc OGC working group on OWS (or W*S) harmonization, initiated at the June 2003 OGC meeting. The current editors of the various OWS interface Implementation Specifications have participated in this OWS harmonization group. For most of the open issues not yet decided by that working group, this document contains an EDITOR’S NOTE that mentions the currently open issue(s).


This version of this document has been adopted as an OGC Recommendation Paper. The first version of this document was released as an OGC Discussion Paper 03-088r1, and is now superseded.


Suggested additions, improvements, and comments on this specification are welcome and encouraged. Such suggestions may be submitted to the editor by email message. Extensive and/or multiple changes can be suggested by making changes in an edited copy of this document. If you choose to submit suggested changes by editing this document, please make your suggested changes with change tracking on.


ii. Subclauses ready for normative referencing


The subclauses in this version of this document that are believed to be sufficiently mature to be normatively referenced from other OGC Implementation Specifications are Clauses:


7
GetCapabilities operation (all subclauses)


8
Exception reports (all subclauses)


iii. Document contributor contact points


All questions regarding this document should be directed to the editor or the contributors:


		Contact

		Company

		Address

		Phone

		Email



		Arliss Whiteside

		BAE SYSTEMS Mission Solutions

		10920 Technology Dr. 
San Diego, CA 
92127-1608 USA

		+1 858-592-1608

		Arliss.Whiteside@baesystems.com



		Jeff de La Beaujardière

		NASA Goddard Space Flight Center

		Code 933
Greenbelt MD 20771 USA

		+1 301-286-1569

		delabeau@iniki.gsfc.nasa.gov



		Peter Vretanos

		CubeWerx, Inc.

		

		+1 416-701-1985 

		pvretano@cubewerx.com 



		John Evans

		NASA / GST, Inc.

		

		+1 301-286-0803 

		jdevans@gst.com 



		Keith Pomakis

		CubeWerx, Inc.

		200 rue Montcalm, Gatineau, Québec J8Y 3B5 Canada

		+1 819-771-8303 x204

		pomakis@cubewerx.com



		Jeff Simon

		General Dynamics - AIS

		

		+1 703-668-3696




		jeff.simon@gd-ais.com



		Jerome Sonnet

		IONIC Software S.A.

		Rue de Wallonie, 18. B-4460 GRACE-HOLLOGNE - Belgium

		+32.4.3640364

		jerome.sonnet@ionicsoft.com



		George Percivall

		NASA / GST, Inc.

		NASA Goddard Space Flight Center, Code 101.4

		1+301-286-4073

		percivall@gsfc.nasa.gov





iv. Revision history


		Date

		Release

		Editor

		Primary clauses modified

		Description



		2003-10-06

		0.0.0

		Arliss Whiteside

		All

		Initial version



		2003-10-16

		0.1.0

		Arliss Whiteside

		7.2.2.3, 7.4.3, 8.1

		First approved discussion paper, small additions based on discussions in Architecture WG



		2003-11-26

		0.1.1

		Arliss Whiteside

		7.2.2, 7.2.3, 7.2.5, 8.1, 8.3, 11, A.2, A.4, B, C

		Large additions to 7.2.5; significant editing of 7.4; addition of 11, B, and C; editing of most other parts



		2003-12-22

		0.1.2

		Arliss Whiteside

		6-11, A-C

		Document reorganized, edited most parts



		2004-01-05

		0.1.3

		Arliss Whiteside

		5.1, 7, A-C

		Document edited to correct errors and make clearer



		2004-01-11

		0.1.4

		Arliss Whiteside

		7.4, A-C

		Modify two sections of service metadata



		2004-01-15

		0.2.0

		Arliss Whiteside

		7.4.2, 7.4.5, cover, i

		Corrected Tables 7 and 13, edited to reflect approval as a Recommendation Paper





v. Changes to the OpenGIS( Abstract Specification


The OpenGIS® Abstract Specification does not require changes to accommodate the technical contents of this document.


vi. Future work


This document should be extended to include other aspects that should be common among multiple OWS Implementation Specifications, such as:


e) Improve organization of service metadata documents, such as to better match WSDL and UDDI


f) More of the contents of service metadata documents, such as for:


1) Contents section


2) Query language metadata


g) More parameters used in operation requests and responses, such as for:


1) Output format


2) Interpolation method


3) Coordinate reference system


4) Units


h) More common operations, such as for:


1) Transaction


2) Get(data)


3) Describe(data)


i) More guidance for editing OWS Implementation Specifications


j) Expansion to handle chained services


k) Better accommodate use of various languages, when applicable in most operation requests and responses


Introduction


This document specifies many of the aspects that are common to all or multiple OWS interface Implementation Specifications. Those specifications currently include the Web Map Service (WMS), Web Feature Service (WFS), and Web Coverage Service (WCS). These common aspects include: operation request and response contents; parameters included in operation requests and responses; and encoding of operation requests and responses.


One expected use of this document is as a normative reference from future versions of OWS interface Implementation Specifications. Rather than continuing to repeat this material in each such Implementation Specification, each specification should normatively reference each relevant part of this document.


OWS Common Implementation Specification

1 Scope


This document specifies many of the aspects that are, or should be, common to all or multiple OWS interface Implementation Specifications. The common Implementation Specification aspects specified by this document currently include:


l) Operation request and response contents, most partial


m) Parameters included in operation requests and responses


n) XML and KVP encoding of operation requests and responses


One use of this document is as a normative reference from future versions of OWS interface Implementation Specifications. Those specifications currently include the Web Map Service (WMS), Web Feature Service (WFS), and Web Coverage Service (WCS). Rather than continuing to repeat this material in each such Implementation Specification, each specification should normatively reference each relevant part of this document.


2 Conformance


Conformance with this specification shall be checked using all the relevant tests specified in each separate specification that normatively references this specification, and specifically references the applicable parts of this specification.


3 Normative references


The following normative documents contain provisions which, through reference in this text, constitute provisions of this document. For dated references, subsequent amendments to, or revisions of, any of these publications do not apply. For undated references, the latest edition of the normative document referred to applies.


IETF RFC 2045 (November 1996), Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies, Freed, N. and Borenstein N., eds., <http://www.ietf.org/rfc/rfc2045.txt>


IETF RFC 2396 (August 1998), Uniform Resource Identifiers (URI): Generic Syntax, Berners-Lee, T., Fielding, N., and Masinter, L., eds., <http://www.ietf.org/rfc/rfc2396.txt>


IETF RFC 2616 (June 1999), Hypertext Transfer Protocol – HTTP/1.1, Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and Berners-Lee, T., eds., <http://www.ietf.org/rfc/rfc2616.txt>


IANA, Internet Assigned Numbers Authority, MIME Media Types, available at <http://www.iana.org/assignments/media-types/> 

ISO 8601:2000(E), Data elements and interchange formats - Information interchange - Representation of dates and times.


ISO 19115:2003, Geographic information — Metadata

ISO 19119:TBD, Geographic information — Services

W3C Recommendation 6 October 2000, Extensible Markup Language (XML) 1.0 (Second Edition), http://www.w3.org/TR/REC-xml


W3C Recommendation 2 May 2001: XML Schema Part 0: Primer, http://www.w3.org/TR/2001/REC-xmlschema-0-20010502/

W3C Recommendation 2 May 2001: XML Schema Part 1: Structures, http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/

W3C Recommendation 2 May 2001: XML Schema Part 2: Datatypes, http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/

4 Terms and definitions


For the purposes of this document, the following terms and definitions apply.


bounding box


rectangle in two spatial dimensions, or rectangular solid in three dimensions, that surrounds all relevant data


NOTE 
This bounding box usually has (near) minimum dimensions to surround all relevant data, and is thus sometimes referred to as the minimum bounding rectangle.


client


software component that can invoke an operation from a server


geographic information


information concerning phenomena implicitly or explicitly associated with a location relative to the Earth [ISO 19128 draft]

interface


named set of operations that characterize the behaviour of an entity [ISO 19119]

operation


specification of a transformation or query that an object may be called to execute [ISO 19119]


parameter


variable whose name and value are included in an operation request or response


request


invocation of an operation by a client


response


result of an operation, returned from a server to a client


server


service instance


a particular instance of a service [ISO 19119 edited]

service


distinct part of the functionality that is provided by an entity through interfaces [ISO 19119]


capability which a service provider entity makes available to a service user entity at the interface between those entities [ISO 19104 terms repository]

service metadata


metadata describing the operations and geographic information available at a server [ISO 19128 draft]


version


version of an Implementation Specification (document) and XML Schemas to which the requested operation conforms


NOTE 
An OWS Implementation Specification version may specify XML Schemas against which an XML encoded operation request or response must conform and should be validated.


5 Conventions


5.1 Symbols (and abbreviated terms)


KVP
Key Value Pair


MIME
Multipurpose Internet Mail Extensions


OGC
Open GIS Consortium


OWS
OGC Web Service, or Open Web Service


TBD
To Be Determined


TBR
To Be Reviewed


UML
Unified Modeling Language


URI
Universal Resource Identifier


URL
Uniform Resource Locator


WCS
Web Coverage Service


WFS
Web Feature Service


WMS
Web Map Service


XML
eXtensible Markup Language


5.2 UML notation


Some of the diagrams in this document are presented using the Unified Modeling Language (UML) static structure diagram. The UML notations used in this document are described in the diagram below.




Association between classes


role-1


role-2


Association Name


Class #1


Class #2


Association Cardinality


Class


Only one


Class


Zero or more


Class


Optional (zero or one )


1..*


Class


One or more


n


Class


Specific number


Aggregation between classes


Aggregate


Class


Component


Class #1


Component


Class #2


Component


Class #n


……….


0..*


0..1


Class Inheritance (subtyping of classes)


Superclass


Subclass #1


…………..


Subclass #2


Subclass #n




Figure 0\IF >= 1 "A." 

SEQ figure 
1
 — UML notation


In these UML class diagrams, the class boxes with a light background are the primary classes being shown in this diagram, often the classes from one UML package. The class boxes with a gray background are other classes used by these primary classes, usually classes from other packages.


In this diagram, the following six stereotypes of UML classes are used:


o) <<DataType>> A descriptor of a set of values that lack identity (independent existence and the possibility of side effects). A DataType is a class with no operations, whose primary purpose is to hold the information.


p) <<Enumeration>> A data type whose instances form a list of alternative literal values. Enumeration means a short list of well-understood potential values within a class.


q) <<CodeList>> A flexible enumeration for expressing a long list of potential alternative values. If the list alternatives are completely known, an enumeration shall be used; if the only likely alternatives are known, a code list shall be used.


r) <<Interface>> A definition of a set of operations that is supported by objects having this interface. An Interface class cannot contain any attributes.


s) <<Type>> A stereotyped class used for specification of a domain of instances (objects), together with the operations applicable to the objects. A Type class may have attributes and associations.


t) <<Union>> A list of alternate attributes where only one of those attributes can be present at any time.


NOTE 
All the stereotypes listed above are adapted from Subclauses 6.8.2 and D.8.3 of ISO 19103.


In this document, the following standard data types are used:


u) CharacterString – A sequence of characters


v) Boolean – A value specifying TRUE or FALSE


w) URI – An identifier of a resource that provides more information


x) URL – An identifier of an on-line resource that can be electronically accessed


y) Integer – An integer number


z) Double – A double precision floating point number


5.3 Document terms and definitions


The following specification terms and definitions are used in this document:


aa) shall – verb form used to indicate a requirement to be strictly followed to conform to this specification, from which no deviation is permitted


ab) should – verb form used to indicate desirable ability or use, without mentioning or excluding other possibilities


ac) may – verb form used to indicate an action permissible within the limits of this specification


ad) can – verb form used for statements of possibility


ae) informative – a part of a document that is provided for explanation, but is not required


af) normative – a part of a standards document that is required


ag) annex – an auxiliary part of a document, called an “appendix” in United States English


ah) clause – a major part of a document, called a “section” or “paragraph” in United States English


ai) subclause – a secondary part of a clause or annex, called a “subsection” in United States English


6 Document overview


This document is organized into clauses that discuss the:


aj) GetCapabilities operation that is used by all OWSs, currently including the parameters:

1) “service”


2) “request”


3) “AcceptVersions”


4) “Sections”


5) “updateSequence”

6) “AcceptFormats”

ak) Exception report responses to all operation requests of all OWSs, including the parameters:

1) “ExceptionText”

2) “exceptionCode”

3) “locator”

4) “version”


5) “language”


al) All operations except GetCapabilities, minimum parameters including:

1) “service”


2) “request”


3) “version”


am) Other parameters used by multiple OWSs and operations, including the parameters:


1) “BoundingBox”


2) “CRS”


an) Encoding of OWS operation requests and responses


The annexes to this document provide related informative information on:


ao) More complete XML Schemas, ready to use (normative)


ap) UML model of aspects specified herein (informative)


aq) Reasons for including various parameters (informative)


NOTE 
The following clauses and annexes are written to be relatively independent of one another. They can thus be read in any order, depending on reader knowledge and interests. For example, Clause 11 “Operation request and response encoding” contains detailed information supporting Clauses 7 through 10, and can be read first or last.


7 GetCapabilities operation


7.1 Introduction


This clause partially specifies the GetCapabilities operation that shall be provided by each OWS. The mandatory GetCapabilities operation allows any client to retrieve metadata about the services available from any server that implements an OWS interface Implementation Specification. The normal response to the GetCapabilities operation is a service metadata document that is returned to the requesting client. This service metadata document primarily contains metadata about the specific server abilities (such as about the specific data available from that server). This service metadata also makes an OWS server self-describing, supporting late binding of clients.

7.2 GetCapabilities request


7.2.1 GetCapabilities request parameters


A request to perform the GetCapabilities operation shall include the parameters listed and defined in Table 1. This table also specifies the UML model data type, source of values, and optionality of each listed parameter, plus the meaning to servers when each optional parameter is not included in the operation request. Although some values listed in the “Name” column appear to contain spaces, they shall not contain spaces.

Table 1 — Parameters in GetCapabilities operation request


		Name

		Definition

		Data Type and Value

		Multiplicity and Use



		service

		Service type identifier

		Character String type, not empty


Value is OWS type abbreviation 
(e.g., “WMS”, “WFS”)

		One (mandatory)



		request

		Operation name

		Character String type, not empty


Value is operation name
(e.g., “GetCapabilities”)

		One (mandatory)



		Accept‌Versions

		Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first

		Sequence of Character String type, not empty


Value is list of x.y.z “version” values

		Zero or one (optional)


When omitted, return latest supported version (see Version negotiation subclause)



		Sections

		Unordered list of zero or more names of requested sections in complete service metadata document (see Note 1)

		Sequence of Character String type, not empty


Value is list of section names


Allowed section names are specified by each Implementation Specification

		Zero or one (optional)


When omitted or not supported by server, return complete service metadata document 



		update‌Sequence

		Service metadata document version, value is “increased” whenever any change is made in complete service metadata document

		Character String type, not empty


Values are selected by each server, and are always opaque to clients

		Zero or one (optional)


When omitted or not supported by server, return latest service metadata document



		Accept‌Formats

		Prioritized sequence of zero or more response formats desired by client, with preferred formats listed first

		Sequence of Character String type, not empty


Value is list of format identifiers


Identifiers are MIME types of formats useful for service metadata documents

		Zero or one (optional)


When omitted or not supported by server, return service metadata document using MIME type "text/xml"



		NOTE 1
The “Sections” parameter specifies which XML elements within a service metadata document shall be returned, within an (usually abbreviated) “Capabilities” element. The allowed section name values shall be specified by each Implementation Specification, as specified in Subclause 7.3.3.





NOTE 1
The name capitalization rules being used here are specified in Subclause 11.6.2.


NOTE 2
The data type of many parameters is specified as “Character String type, not empty”. In the XML Schemas specified herein, these parameters are encoded with the xsd:string type, which does NOT require that these strings not be empty.


7.2.2 GetCapabilities request KVP encoding


An Implementation Specification fragment for KVP encoding of the GetCapabilities operation request, with specific values appropriate for WCS 1.0.0, is shown in Table 2.


Table 2 — GetCapabilities operation request URL parameters


		Name and Example (Note 1)

		Optionality and Use

		Definition and Format



		service=WCS

		Mandatory

		Service type identifier text



		request=GetCapabilities

		Mandatory

		Operation name text



		AcceptVersions=1.0.0,0.8.3

		Optional


When omitted, return latest supported version (see Version negotiation subsection)

		Comma-separated prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first



		Sections=Contents

		Optional


When omitted or not supported by server, return complete service metadata document

		Comma-separated unordered list of zero or more names of sections of service metadata document to be returned in service metadata document



		updateSequence=XXX 
(where XXX is character string previously provided by server)

		Optional


When omitted or not supported by server, return latest service metadata document version 

		Service metadata document version, value is “increased” whenever any change is made in complete service metadata document



		AcceptFormats= text/xml

		Optional


When omitted or not supported by server, return service metadata document using MIME type "text/xml"

		Comma-separated prioritized sequence of zero or more response formats desired by client, with preferred formats listed first



		NOTE 1
All parameter names are here listed using mostly lower case letters. However, any parameter name capitalization shall be allowed in KVP encoding, see Subclause 11.5.2.





In a specific OWS Implementation Specification, this table shall be supported by a specification of the section names allowed in the Sections parameter, with the meaning of each value for that specific OWS. These section names and meanings shall be based on Subclause 7.4.2.

A corresponding example of a GetCapabilities request message encoded using KVP is:


http://hostname:port/path?SERVICE=WCS&REQUEST=GetCapabilities&ACCEPTVERSIONS=1.0.0,0.8.3&SECTIONS=Contents&UPDATESEQUENCE=XYZ123& ACCEPTFORMATS=text/xml

This example includes all six possible parameters, but only the “service” and “request” parameters are required.


7.2.3 GetCapabilities request XML encoding


The XML Schema fragment for encoding a generic GetCapabilities operation request is:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="0.1.3" xml:lang="en">



<annotation>




<appinfo>owsGetCapabilitiesRequest.xsd 2004/1/02</appinfo>




<documentation>





<description>This XML Schema encodes the GetCapabilities operation request. This XML Schema must be edited by each OWS, to specify a specific value for the "service" attribute. Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2003 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="GetCapabilities" type="ows:GetCapabilitiesType"/>



<!-- =========================================================== -->



<complexType name="GetCapabilitiesType">




<annotation>





<documentation>XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </documentation>




</annotation>




<sequence>





<element name="AcceptVersions" type="ows:AcceptVersionsType" minOccurs="0">






<annotation>







<documentation>When omitted, server shall return latest supported version. </documentation>






</annotation>





</element>





<element name="Sections" type="ows:SectionsType" minOccurs="0">






<annotation>







<documentation>When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. </documentation>






</annotation>





</element>





<element name="AcceptFormats" type="ows:AcceptFormatsType" minOccurs="0">






<annotation>







<documentation>When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". </documentation>






</annotation>





</element>




</sequence>




<attribute name="service" type="ows:ServiceType" use="required"/>




<attribute name="updateSequence" type="ows:UpdateSequenceType" use="optional">





<annotation>






<documentation>When omitted or not supported by server, server shall return latest complete service metadata document. </documentation>





</annotation>




</attribute>



</complexType>



<!-- =========================================================== -->



<simpleType name="ServiceType">




<annotation>





<documentation>Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- ========================================================= -->



<complexType name="AcceptVersionsType">




<annotation>





<documentation>Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. </documentation>




</annotation>




<sequence>





<element name="Version" type="ows:VersionType" maxOccurs="unbounded"/>




</sequence>



</complexType>



<!-- ========================================================= -->



<simpleType name="VersionType">




<annotation>





<documentation>Specification version for a WCS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- =========================================================== -->



<complexType name="SectionsType">




<annotation>





<documentation>Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information. </documentation>




</annotation>




<sequence>





<element name="Section" type="string" minOccurs="0" maxOccurs="unbounded"/>




</sequence>



</complexType>



<!-- =========================================================== -->



<simpleType name="UpdateSequenceType">




<annotation>





<documentation>Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- =========================================================== -->



<complexType name="AcceptFormatsType">




<annotation>





<documentation>Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. </documentation>




</annotation>




<sequence>





<element name="OutputFormat" type="ows:FormatType" minOccurs="0" maxOccurs="unbounded"/>




</sequence>



</complexType>



<!-- =========================================================== -->



<simpleType name="FormatType">




<annotation>





<documentation>Data transfer format identifier, identified by its MIME type. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>


</schema>





This XML Schema fragment contains documentation of the meaning of each element, attribute, and type, and this documentation shall be considered normative as specified in Subclause 11.6.3.


A corresponding example of a GetCapabilities request message encoded in XML is:


<?xml version="1.0" encoding="UTF-8"?>


<GetCapabilities xmlns="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/ows owsCommon.xsd" service="WCS" updateSequence="XYZ123">



<!-- Maximum example for WCS. Primary editor: Arliss Whiteside. Last updated 2003/12/20. -->



<AcceptVersions>




<Version>1.0.0</Version>




<Version>0.8.3</Version>



</AcceptVersions>



<Sections>




<Section>Contents</Section>



</Sections>



<AcceptFormats>




<OutputFormat>text/xml</OutputFormat>



</AcceptFormats>


</GetCapabilities>



This example includes all of the possible XML attributes and elements, but only the “service” attribute is required, within the required GetCapabilities root element.


7.3 Parameter discussions


7.3.1 Version parameter


Each OWS Implementation Specification revision shall specify a version number, which enables interacting clients and servers to agree on which version of the specification they are conforming to. A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99.


Through the evolution of specifications, each service will have a number of versions defined for it, each with a different version number. Each OWS shall have its own sequence of version numbers; the version numbers of different services are independent and therefore may overlap. When the protocol version number changes, it shall increase monotonically and shall comprise no more than three integers separated by decimal points, with the first integer being the most significant. There may be gaps in the numerical sequence, and some numbers may denote draft versions. Servers and their clients need not support all defined versions, but are encouraged to support multiple versions.


7.3.2 Version negotiation


Version negotiation is performed using the optional AcceptVersions parameter in the GetCapabilities operation request. Although optional, client software should always include this parameter, to simplify version negotiation. The value of this parameter is a sequence of protocol version numbers that the client supports, in order of client preference.


The server, upon receiving a GetCapabilities request, shall scan through this list and find the first version number that it supports. It shall then return a service metadata document conforming to that version of the specification, and containing that value of the “version” parameter. If the list does not contain any version numbers that the server supports, the server shall return an Exception with exceptionCode="VersionNegotiationFailed".


To ensure backward compatibility, clients shall also be prepared to accept an unknown response and treat this situation as an indication that version negotiation has failed. Furthermore, if a server receives a GetCapabilities request without the AcceptVersions parameter, it shall return a service metadata document that is compliant to the highest protocol version that the server supports. This makes it convenient for humans to make requests manually, and allows for forward compatibility with possible future incarnations of version negotiation.


This new version negotiation process is designed to be compatible with the old-style version negotiation that was defined in earlier versions of the various OWS specifications, as described in Subclause C.11.


7.3.3 Sections parameter


The Sections parameter value shall contain an unordered list of zero or more names, of the XML elements within a service metadata XML document that shall be returned. If no names are listed, the service metadata returned shall not include any of the sections that could be listed. When one or more names are listed, those section(s) shall be included within a (usually abbreviated) service metadata document returned.


The allowed section name values shall be specified in each Implementation Specification, and shall include, but are not limited to, all the values specified in Table 3 that are relevant to the specific OWS. The values allowed shall include “All”.


Table 3 — Meanings of section name values


		Section name

		Meaning



		ServiceIdentification

		Return ServiceIdentification element in service metadata document



		ServiceProvider

		Return ServiceProvider metadata element in service metadata document



		Operations‌Metadata

		Return OperationsMetadata element in service metadata document



		Contents

		Return Contents metadata element in service metadata document



		All

		Return complete service metadata document, containing all elements





NOTE 1
The allowed section names with their meanings should be specified in an Implementation Specification using a table such as Table 3 above, or by referencing this subclause and table. All of the section name values listed in Table 3 are expected to be common for all OWSs, but some can add additional sections.

The Sections parameter shall be optional implementation by clients. When a client does not implement this Sections parameter, it shall not include this parameter in a GetCapabilities operation request. When any server receives a GetCapabilities operation request without this parameter, it shall return the complete service metadata document.


The Sections parameter shall be optional implementation by servers. When a server does not implement this Sections parameter, it shall ignore this parameter if present in a GetCapabilities operation request, and shall return the complete service metadata document.


NOTE 2
A referencing OGC Implementation Specification is expected to leave optional the implementation of the Sections parameter, by both servers and clients. This flexibility allows Implementation Specification profiles to make server implementation of this parameter either required or prohibited.


7.3.4 updateSequence parameter


The optional updateSequence parameter can be used for maintaining the consistency of a client cache of the contents of a service metadata document. The parameter value can be an integer, a timestamp in [ISO 8601:2000] format, or any other number or string. The server can include an updateSequence value in its service metadata document. If present, this value shall be increased when any changes are made to the complete service metadata document (for example, when new coverages are added to the service). The server is the sole judge of lexical ordering sequence. The client may include this parameter in its GetCapabilities request. The response of the server based on the presence and relative value of updateSequence in the client request and the server metadata shall be as specified in Table 4.


Table 4 ( Use of updateSequence parameter


		Operation request 
updateSequence value

		Service metadata 
updateSequence value

		Server response



		None

		Any

		most recent service metadata document



		Any

		None

		most recent service metadata document



		Equal

		Equal

		service metadata document with only “version” and “updateSequence” parameters



		Lower

		Higher

		most recent service metadata document



		Higher

		Lower

		exception report with exceptionCode = InvalidUpdateSequence





7.3.5 AcceptFormats parameter


The optional AcceptFormats parameter can be used by a client to attempt to negotiate a GetCapabilities operation response format other than "text/xml". When included in an operation request, this parameter shall contain a comma-separated list of the alternative MIME types that the client wants to be returned, listed in the client's preferred order. The MIME type "text/xml" is always an implicit last option, but can be explicitly included.


When a server implements the AcceptFormats parameter and receives a value for it, the server shall return the Capabilities document in the format of the first MIME type in this list that it is capable of returning. When not received or not implemented, the server shall return the Capabilities document in normal XML, using the MIME type "text/xml". All clients and servers shall implement the "text/xml" MIME type for the GetCapabilities operation. Since "text/xml" is always an implicit last option, the server always has an implemented MIME type to use to return a Capabilities document to the client.


This parameter shall be optional implementation by all servers and clients. A variety of alternative formats (with different MIME types) have been proposed for transfer of XML documents, but many have not yet been completely specified, and none has yet been widely accepted. Many of these alternative formats reduce the size of the transferred message, thus reducing the communication time and load.


This document does not now specify any alternative format, but the AcceptFormats parameter is included to provide flexibility to allow experimentation and allow other documents to identify allowed alternative format(s). A specific OWS Implementation Specification that expects to interoperably use this AcceptFormats parameter shall thus identify the alternative format(s) that can be used (or that shall be implemented by servers).


EXAMPLE 1
One possible alternative format is the ISO standard for binary encoding of MPEG-7 or “BiM” as specified in [ISO/IEC 15938-1], with MIME type "application/x-bix". (Note that the use of this MIME type is discouraged as it is not in-line with the web architecture.)

EXAMPLE 2
Another possible alternative format is “BXML” as specified in [OGC 03-002r8], with MIME type "application/x-bxml". (That document is an OGC Discussion Paper, and has not been endorsed by the OGC.)


NOTE 
A non-XML format whose MIME type is well-defined might be used if a method is specified to convert a Capabilities XML document, as specified herein, into that alternative format.

7.4 GetCapabilities response


7.4.1 Exceptions


In the event that an OWS server encounters an error servicing a GetCapabilities operation request, it shall return an exception report message as specified in Clause 8. The allowed exception codes shall include those listed in Table 5, assuming the updateSequence parameter is implemented by the server.

Table 5 — Exception codes for GetCapabilities operation

		exceptionCode value

		Meaning



		VersionNegotiationFailed

		List of versions in “AcceptVersions” parameter value in GetCapabilities operation request did not include any version supported by this server



		InvalidUpdateSequence

		Value of (optional) updateSequence parameter in GetCapabilities operation request is greater than current value of service metadata updateSequence number



		MissingParameterValue

		Operation request does not include a parameter value, and this server did not declare a default value for that parameter



		InvalidParameterValue

		Operation request contains an invalid parameter value



		NoApplicableCode

		No other exceptionCode specified by this service and server applies to this exception





7.4.2 Service metadata document contents


A service metadata document shall be the normal response to a client from performing the GetCapabilities operation, and shall contain metadata appropriate to the specific server for the specific OWS. For a server with tightly coupled data that it serves or uses, this service metadata document shall include metadata about that data. That service metadata document shall be encoded in XML, and shall use XML Schemas to specify the correct document contents and organization.


NOTE 1
The term “Capabilities XML” document was previously usually used for what is here called “service metadata” document. The term “service metadata” is now used because it is more descriptive and is compliant with OGC Abstract specification topic 12 (ISO 19119). This “service metadata” includes metadata for a specific server and for tightly coupled data that it serves.


Each service metadata document shall include, in addition to other data, the parameters named and defined in Table 6. This table also specifies the data type, source of values, and multiplicity of each listed parameter, plus the meaning to the client when each optional parameter is not included in the service metadata document. Although some values listed in the “Name” column appear to contain spaces, they shall not contain spaces.

Table 6 — Parameters included in service metadata document


		Name

		Definition

		Data Type and Value

		Multiplicity and Use



		version

		Specification version for operation, in this case for GetCapabilities operation response

		Character String type, not empty


Value format is x.y.z, where x, y, and z are non-negative integers separated by decimal points (e.g., “2.1.3”)


Value is specified by each Implementation Specification and Schemas version

		One (mandatory)



		update‌Sequence

		Service metadata document version, value is “increased” whenever any change is made in complete service metadata document

		Character String type, not empty


Values are selected by each server, and are always opaque to clients

		Zero or one (optional)


Omitted when parameter not supported by server





Each service metadata document shall include a set of document sections that correspond to the set of section names specified for that specific OWS, as specified in Subclause 7.3.3 and used in the Sections parameter specified in Subclause 7.2. The common set of section names and meanings shall be as specified in Table 7. Each specific OWS shall use these section names and meanings when relevant, and can specify additional sections when needed.


Table 7 — Section name values and contents


		Section name

		Contents



		ServiceIdentification

		Metadata about this specific server. The schema of this section shall be the same for all OWSs.



		ServiceProvider

		Metadata about the organization operating this server. The schema of this section shall be the same for all OWSs.



		OperationsMetadata

		Metadata about the operations specified by this service and implemented by this server, including the URLs for operation requests. The basic contents and organization of this section shall be the same for all OWSs, but individual services can add elements and/or change the optionality of optional elements.



		Contents

		Metadata about the data served by this server. The schema of this section is specific to each OWS type, as defined by that Implementation Specification. 


Whenever applicable, this section shall contain a set of dataset descriptions, which should each be based on the MD_DataIdentification class specified in ISO 19115 and used in ISO 19119.





NOTE 2
The first two section names listed above have been changed to be more descriptive and more compliant with ISO 19119 (OGC Abstract Specification Topic 12).

The allowed section names with their meanings should be specified in an Implementation Specification using a table such as Table 7 above, or by referencing this subclause and table. Most of the section name values listed in Table 7 are expected to be common for all OWS.


7.4.3 ServiceIdentification section contents


The ServiceIdentification section of a service metadata document contains basic metadata about this specific server. The contents and organization of this section shall be the same for all OWSs. The ServiceIdentification section shall include the parameters and parts listed in Table 8. This table also specifies the data type, source of values, and multiplicity of each listed parameter, plus the meaning to the client of that multiplicity. Although some values listed in the “Name” column appear to contain spaces, they shall not contain spaces.

Table 8 — Parameters included in ServiceIdentification section


		Name

		Definition

		Data Type

		Multiplicity and Use



		ServiceType

		A service type name from registry of services, normally used for machine-to-machine communication

		Character string type, not empty

		One (mandatory)



		ServiceType‌Version

		Version of this service type implemented by this server




		Character string type, not empty

		One or more (mandatory)


One for each version implemented by server, unordered



		Title

		Title of this server, normally used for display to a human

		Character string type, not empty

		One (mandatory)



		Abstract

		Brief narrative description of this server, normally available for display to a human

		Character string type, not empty

		Zero or one (optional)


Include when server chooses, recommended and usually included



		Keywords

		Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe this server

		See MD_Keywords class in ISO 19115

		Zero or more (optional)


One for each keyword authority used



		Fees

		Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217

		Character string type, not empty, reserved value NONE shall be used to mean no fees or terms

		Zero or one (optional))


Include when server chooses, recommended and usually included 



		Access‌Constraints

		Access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server

		Character string type, not empty, reserved value NONE shall be used to mean no constraints are imposed

		Zero or more (optional)


Include when server chooses, recommended and usually included





As indicated, the Keywords parameter listed in Table 8 shall have contents based on the corresponding classes in ISO 19115: Metadata (and OGC Abstract Specification Topic 11). With the exception of the ServiceType, all parameters contain server-specific information (not general service information). More detailed information on the contents and uses of all listed parameters is provided in the owsServiceIdentification.xsd XML Schema in Subclause 7.4.7.

7.4.4 ServiceProvider section contents


The ServiceProvider section of a service metadata document contains metadata about the organization operating this server. The contents and organization of this section shall be the same for all OWSs. The ServiceProvider section shall include the parameters and parts listed in Table 9. This table also specifies the data type, source of values, and multiplicity of each listed parameter, plus the meaning to the client of that multiplicity.


Table 9 — Parameters included in ServiceProvider section


		Name

		Definition

		Data Type

		Multiplicity



		ProviderName

		Unique identifier for service provider organization

		Character string type, not empty

		One (mandatory)



		ProviderSite

		Reference to the most relevant web site of the service provider

		See CI_OnlineResource class in ISO 19115

		Zero or one (optional)



		Service‌Contact

		Information for contacting service provider

		See CI_ResponsibleParty and subsidiary classes in ISO 19115

		One (mandatory)





As indicated, the ProviderSite and Service‌Contact subsections listed in Table 9 shall have contents based on the corresponding classes in ISO 19115: Metadata (and OGC Abstract Specification Topic 11). More detailed information on the contents and uses of all listed parts is provided in the owsServiceProvider.xsd XML Schema in Subclause 7.4.8.

7.4.5 OperationsMetadata section contents


The OperationsMetadata section of a service metadata document contains metadata about the operations provided by this service and implemented by this server, including the URLs for operation requests. The basic contents and organization of this section shall be the same for all OWSs, but individual services can add elements and/or change the optionality of optional elements. The OperationsMetadata section shall include the subsections listed in Table 10. This table also specifies the required multiplicity of each subsection, and the meaning to the client of that multiplicity.


Table 10 — Subsections included in OperationsMetadata section


		Name

		Definition

		Multiplicity and Use



		Operation

		Metadata for one operation that this server interface implements

		Two or more (mandatory)


One for each implemented operation



		Parameter

		Parameter valid domain that applies to two or more operations which this server implements

		Zero or more (optional)


One for each such parameter with limited domain



		Constraint

		Constraint on valid domain of a non-parameter quantity that applies to this server

		Zero or more (optional)


One for each such quantity with limited domain



		Extended‌Capabilities

		Metadata about server and software additional abilities

		Zero or one (optional)


Included when server provides additional capabilities





The possible contents of the ExtendedCapabilities subsection are not specified here. The Operation, Parameter, and Constraint subsections shall include the parts specified in Tables 11-15. These tables also specify the data type, source of values, and multiplicity of each listed parameter, plus the meaning to the client of that multiplicity. More detailed information on the contents and uses of these parts is provided in the owsOperationsMetadata.xsd XML Schema in Subclause 7.4.9.

Table 11 — Parts of Operation subsection


		Name

		Definition

		Contents

		Multiplicity and Use



		name

		Name of this operation (request) (for example, GetCapabilities)

		Character string type, not empty

		One (mandatory)






		DCP

		Information for a distributed Computing Platform (DCP) supported for this operation 

		See Table 12

		One or more (mandatory)


One for each supported DCP for this operation request (Note 1)



		Parameter

		Parameter valid domain that applies to this operation which this server implements

		See Table 15

		Zero or more (optional)


One for each such parameter



		Metadata

		Metadata about this operation and its' implementation (Note 2)

		Metadata contents or reference to metadata

		Zero or more (optional)


One for each such metadata object



		NOTE 1
At present, only the HTTP DCP is defined, so the Operation subsection only includes one DCP subsection. 


NOTE 2
Each operation that uses some form or query of filtering should include metadata describing the query or filter languages and associated capabilities implemented by this server. The schema of this query languages metadata is (currently) specific to each OWS type, as defined by that Implementation Specification.





Table 12 — Parts of DCP subsection


		Name

		Definition

		Contents

		Multiplicity and Use



		HTTP

		Connect point URLs for the HTTP Distributed Computing Platform (DCP)

		See Table 13

		One (mandatory)

(Note 1)



		NOTE 1
At present, only the HTTP DCP is defined, so the DCP subsection always includes the HTTP subsection.





Table 13 — Parts of HTTP subsection


		Name

		Definition

		Contents

		Multiplicity and Use



		Get

		Connect point URL prefix for HTTP "Get" request method for this operation request

		See ISO 19115 CI_Online​Resource type

		Zero or more (Note 1)

One for each supported URL



		Post

		Connect point URL and accepted format(s) for HTTP "Post" request method for this operation request

		See Table 14

		Zero or more (Note 1)


One for each supported URL



		NOTE 1
Normally, one Get and/or one Post is included in this subsection. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup.





Table 14 — Parts of Post subsection


		Name

		Definition

		Contents





		URL

		Connect point URL for this operation request

		See ISO 19115 CI_Online​Resource type

		One (mandatory)






		Input‌Format

		Format of operation request that can be sent to this URL

		Character string type, not empty


Values are MIME types

		One or two (mandatory)





Table 15 — Parts of Parameter and Constraint subsections


		Name

		Definition

		Contents

		Multiplicity and Use



		name

		Name or identifier of this parameter or other quantity

		Character string type, not empty

		One (mandatory)



		Value

		Valid value for this parameter or other quantity (Note 1)

		Character string type, not empty

		One or more (mandatory)


One for each such value



		Metadata

		Metadata about domain of this parameter or other quantity 

		Metadata contents or reference to metadata

		Zero or more (optional)


One for each such metadata object



		NOTE 1
For those parameters that contain a list or sequence of values, these values shall be for individual values in the list.





7.4.6 Capabilities document XML encoding


In a “Capabilities” or service metadata XML document, all sections shall be encoded as XML elements, using the names and capitalization shown in Table 7. The XML Schema fragment for a generic service metadata document is:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>owsGetCapabilitiesResponse.xsd 2004/1/11</appinfo>




<documentation>





<description>This XML Schema encodes the GetCapabilities operation response, also known as the Capabilities XML document. This XML Schema must be expanded or edited by each OWS, to specify specific contents of the Contents element and perhaps of the OperationsMetadata element. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<include schemaLocation="owsServiceIdentification.xsd"/>



<include schemaLocation="owsServiceProvider.xsd"/>



<include schemaLocation="owsOperationsMetadata.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="Capabilites" type="ows:CapabilitesType"/>



<!-- =========================================================== -->



<complexType name="CapabilitesType">




<annotation>





<documentation>XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. </documentation>




</annotation>




<sequence>





<element ref="ows:ServiceIdentification" minOccurs="0"/>





<element ref="ows:ServiceProvider" minOccurs="0"/>





<element ref="ows:OperationsMetadata" minOccurs="0"/>





<element ref="ows:Contents" minOccurs="0">






<annotation>







<documentation>This element shall be included whenever this OWS operates on any tightly-coupled data, by any specified operation (even when that data is also available to clients from another service). </documentation>






</annotation>





</element>




</sequence>




<attribute name="version" type="ows:VersionType" use="required"/>




<attribute name="updateSequence" type="ows:UpdateSequenceType" use="optional"/>



</complexType>



<!-- =========================================================== -->



<element name="Contents" abstract="true">




<annotation>





<documentation>Metadata about the data served by this server. The XML Schema of this section is specific to each OWS type. </documentation>




</annotation>



</element>



<!-- =========================================================== -->



<simpleType name="UpdateSequenceType">




<annotation>





<documentation>Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>


</schema>





The above schema fragment uses three separate schemas, named owsServiceIdentification.xsd, owsServiceProvider.xsd, and owsOperationsMetadata.xsd, which specify the contents of the ServiceIdentification, ServiceProvider, and OperationsMetadata sections. Also, the above XML Schema does not specify the contents of the Contents section, which are different for each OWS (and often for each version thereof).


7.4.7 ServiceIdentification section XML encoding


The XML Schema for the standard “ServiceIdentification” section of Capabilities XML documents shall be:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ows="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>owsServiceIdentification.xsd 2004/1/11</appinfo>




<documentation>





<description>This XML Schema encodes the common "ServiceIdentification" (formerly part of the "Service") section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceIdentification class of ISO 19119 (OGC Abstract Specification Topic 12). Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<include schemaLocation="ows19115subset.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="ServiceIdentification">




<annotation>





<documentation>General metadata for this specific server. This XML Schema of this section shall be the same for all OWS. </documentation>




</annotation>




<complexType>





<sequence>






<element name="ServiceType" type="ows:CodeType">







<annotation>








<documentation>A service type name from a registry of services. For example, the values of the nameSpace attribute and name and name string may be "OGC" and "catalogue." This name is normally used for machine-to-machine communication. </documentation>







</annotation>






</element>






<element name="ServiceTypeVersion" type="ows:VersionType" maxOccurs="unbounded">







<annotation>








<documentation>Unordered list of one or more versions of this service type implemented by this server. This information is not adequate for version negotiation, and shall not be used for that purpose. </documentation>







</annotation>






</element>






<element name="Title" type="string">







<annotation>








<documentation>Title of this server, normally used for display to a human. </documentation>







</annotation>






</element>






<element name="Abstract" type="string" minOccurs="0">







<annotation>








<documentation>Brief narrative description of this server, normally used for display to a human. </documentation>







</annotation>






</element>






<element ref="ows:Keywords" minOccurs="0" maxOccurs="unbounded"/>






<element name="Fees" type="string" minOccurs="0">







<annotation>








<documentation>Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE shall be used to mean no fees or terms. If this element is omitted, no meaning is implied. </documentation>







</annotation>






</element>






<element name="AccessConstraints" type="string" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Unordered list of access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE shall be used to mean no access constraints are imposed. If this element is omitted, no meaning is implied. </documentation>







</annotation>






</element>





</sequence>




</complexType>



</element>



<!-- ========================================================= -->



<simpleType name="VersionType">




<annotation>





<documentation>Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>


</schema>





The above XML Schema uses parts of an XML encoding of ISO 19115 metadata, as specified in the following XML Schema:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ows="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>ows19115subset.xsd 2004/1/09</appinfo>




<documentation>





<description>This XML Schema encodes the parts of ISO 19115 used by the common "ServiceIdentification" and "ServiceProvider" sections of the GetCapabilities operation response, known as the service metadata XML document. The parts encoded here are the MD_Keywords, CI_ResponsibleParty, and related classes. Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<import namespace="http://www.w3.org/1999/xlink" schemaLocation="http://schemas.opengis.net/gml/3.0.0/xlink/xlinks.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="Keywords">




<annotation>





<documentation>Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe the subject. When needed, the optional "type" can name the type of the associated list of keywords that shall all have the same type. Also when needed, the codeSpace attribute of that "type" can reference the type name authority and/or thesaurus. </documentation>




</annotation>




<complexType>





<sequence>






<element name="Keyword" type="string" maxOccurs="unbounded"/>






<element name="Type" type="ows:CodeType" minOccurs="0"/>





</sequence>




</complexType>



</element>



<!-- ===========================================================-->



<complexType name="CodeType">




<annotation>





<documentation>Type copied from basicTypes.xsd of GML 3.0 with documentation edited. </documentation>





<documentation>Name or code with an (optional) authority. If the codeSpace attribute is present, its value should reference a dictionary, thesaurus, or authority for the name or code, such as the organisation who assigned the value, or the dictionary from which it is taken. </documentation>




</annotation>




<simpleContent>





<extension base="string">






<attribute name="codeSpace" type="anyURI" use="optional"/>





</extension>




</simpleContent>



</complexType>



<!-- =========================================================== -->



<!-- =========================================================== -->



<complexType name="ResponsiblePartyType">




<annotation>





<documentation>Identification of, and means of communication with, person(s) and organizations responsible for the server. </documentation>





<documentation>For OWS, the optional OrganizationName element has been removed, since this type is always used with another element which provides that information. </documentation>




</annotation>




<sequence>





<element name="IndividualName" type="string">






<annotation>







<documentation>Name of the responsible person: surname, given name, title separated by a delimiter. </documentation>






</annotation>





</element>





<element name="PositionName" type="string" minOccurs="0">






<annotation>







<documentation>Role or position of the responsible person. </documentation>






</annotation>





</element>





<element name="ContactInfo" type="ows:ContactType" minOccurs="0">






<annotation>







<documentation>Address of the responsible party. </documentation>






</annotation>





</element>




</sequence>



</complexType>



<!-- =========================================================== -->



<complexType name="ContactType">




<annotation>





<documentation>Information required to enable contact with the responsible person and/or organization. </documentation>




</annotation>




<sequence>





<element name="Phone" type="ows:TelephoneType" minOccurs="0">






<annotation>







<documentation>Telephone numbers at which the organization or individual may be contacted. </documentation>






</annotation>





</element>





<element name="Address" type="ows:AddressType" minOccurs="0">






<annotation>







<documentation>Physical and email address at which the organization or individual may be contacted. </documentation>






</annotation>





</element>





<element name="OnlineResource" type="ows:OnlineResourceType" minOccurs="0">






<annotation>







<documentation>On-line information that can be used to contact the individual or organization. OWS specifics: The xlink:href attribute in the xlink:simpleLink attribute group shall be used to reference this resource. Whenever practical, the xlink:href attribute with type anyURI should be a URL from which more contact information can be electronically retrieved. The xlink:title attribute with type "string" can be used to name this set of information. The other attributes in the xlink:simpleLink attribute group should not be used. </documentation>






</annotation>





</element>




</sequence>



</complexType>



<!-- =========================================================== -->



<complexType name="OnlineResourceType">




<annotation>





<documentation>Reference to on-line resource from which data can be obtained. </documentation>




</annotation>




<attributeGroup ref="xlink:simpleLink"/>



</complexType>



<!-- ========================================================== -->



<complexType name="TelephoneType">




<annotation>





<documentation>Telephone numbers for contacting the responsible individual or organization. </documentation>




</annotation>




<sequence>





<element name="Voice" type="string" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Telephone number by which individuals can speak to the responsible organization or individual. </documentation>






</annotation>





</element>





<element name="Facsimile" type="string" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Telephone number of a facsimile machine for the responsible


organization or individual. </documentation>






</annotation>





</element>




</sequence>



</complexType>



<!-- =========================================================== -->



<complexType name="AddressType">




<annotation>





<documentation>Location of the responsible individual or organization. </documentation>




</annotation>




<sequence>





<element name="DeliveryPoint" type="string" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Address line for the location (as described in ISO 11180, Annex A). </documentation>






</annotation>





</element>





<element name="City" type="string" minOccurs="0">






<annotation>







<documentation>City of the location. </documentation>






</annotation>





</element>





<element name="AdministrativeArea" type="string" minOccurs="0">






<annotation>







<documentation>State or province of the location. </documentation>






</annotation>





</element>





<element name="PostalCode" type="string" minOccurs="0">






<annotation>







<documentation>ZIP or other postal code. </documentation>






</annotation>





</element>





<element name="Country" type="string" minOccurs="0">






<annotation>







<documentation>Country of the physical address. </documentation>






</annotation>





</element>





<element name="ElectronicMailAddress" type="string" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Address of the electronic mailbox of the responsible organization or individual. </documentation>






</annotation>





</element>




</sequence>



</complexType>


</schema>





7.4.8 ServiceProvider section XML encoding


The XML Schema for the standard “ServiceProvider” section of Capabilities XML documents shall be:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ows="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>owsServiceProvider.xsd 2004/1/09</appinfo>




<documentation>





<description>This XML Schema encodes the common "ServiceProvider" (formerly part of the "Service") section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceProvider class of ISO 19119 (OGC Abstract Specification Topic 12). Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<include schemaLocation="ows19115subset.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="ServiceProvider">




<annotation>





<documentation>Metadata about the organization that provides this specific service instance or server. </documentation>




</annotation>




<complexType>





<sequence>






<element name="ProviderName" type="string">







<annotation>








<documentation>A unique identifier for the service provider organization. </documentation>







</annotation>






</element>






<element name="ProviderSite" type="ows:OnlineResourceType" minOccurs="0">







<annotation>








<documentation>Reference to the most relevant web site of the service provider. </documentation>







</annotation>






</element>






<element name="ServiceContact" type="ows:ResponsiblePartyType">







<annotation>








<documentation>Information for contacting the service provider. The OnlineResource element within this ServiceContact element should not be used to reference a web site of the service provider. </documentation>







</annotation>






</element>





</sequence>




</complexType>



</element>


</schema>



The above XML Schema also uses parts of an XML encoding of ISO 19115 metadata, as specified in the preceding subclause.


7.4.9 OperationsMetadata section XML encoding


The XML Schema for the standard “OperationsMetadata” section of Capabilities XML documents shall be:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>owsOperationsMetadata.xsd 2004/1/11</appinfo>




<documentation>





<description>This XML Schema encodes the basic contents of the "OperationsMetadata" (formerly "Capability") section of the GetCapabilities operation response, also known as the Capabilities XML document. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<include schemaLocation="ows19115subset.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="OperationsMetadata">




<annotation>





<documentation>Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements. </documentation>




</annotation>




<complexType>





<sequence>






<element ref="ows:Operation" minOccurs="2" maxOccurs="unbounded">







<annotation>








<documentation>Metadata for unordered list of all the (requests for) operations that this server interface implements. The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. </documentation>







</annotation>






</element>






<element name="Parameter" type="ows:DomainType" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Optional unordered list of parameter valid domains that each apply to two or more operations which this server interface implements. The list of required and optional parameter domain limitations shall be specified in the Implementation Specification for this service. </documentation>







</annotation>






</element>






<element name="Constraint" type="ows:DomainType" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this server. The list of required and optional constraints shall be specified in the Implementation Specification for this service. </documentation>







</annotation>






</element>






<element ref="ows:ExtendedCapabilities" minOccurs="0"/>





</sequence>




</complexType>



</element>



<!-- ========================================================== -->



<element name="ExtendedCapabilities" type="anyType">




<annotation>





<documentation>Individual software vendors and servers can use this element to provide metadata about any additional server abilities. </documentation>




</annotation>



</element>



<!-- ========================================================== -->



<element name="Operation">




<annotation>





<documentation>Metadata for one operation that this server implements. </documentation>




</annotation>




<complexType>





<sequence>






<element ref="ows:DCP" maxOccurs="unbounded">







<annotation>








<documentation>Unordered list of Distributed Computing Platforms (DCPs) supported for this operation. At present, only the HTTP DCP is defined, so this element will appear only once. </documentation>







</annotation>






</element>






<element name="Parameter" type="ows:DomainType" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Optional unordered list of parameter domains that each apply to this operation which this server implements. If one of these Parameter elements has the same "name" attribute as a Parameter element in the OperationsMetadata element, this Parameter element shall override the other one for this operation. The list of required and optional parameter domain limitations for this operation shall be specified in the Implementation Specification for this service. </documentation>







</annotation>






</element>






<element ref="ows:Metadata" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Optional unordered list of additional metadata about this operation and its' implementation. A list of required and optional metadata elements for this operation should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the operation request parameters or provide the XML Schemas for the operation request.) </documentation>







</annotation>






</element>





</sequence>





<attribute name="name" type="string" use="required">






<annotation>







<documentation>Name or identifier of this operation (request) (for example, GetCapabilities). The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. </documentation>






</annotation>





</attribute>




</complexType>



</element>



<!-- ========================================================== -->



<element name="DCP">




<annotation>





<documentation>Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.


</documentation>




</annotation>




<complexType>





<choice>






<element ref="ows:HTTP"/>





</choice>




</complexType>



</element>



<!-- ========================================================== -->



<element name="HTTP">




<annotation>





<documentation>Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup. </documentation>




</annotation>




<complexType>





<choice maxOccurs="unbounded">






<element ref="ows:Get"/>






<element ref="ows:Post"/>





</choice>




</complexType>



</element>



<!-- ========================================================== -->



<element name="Get" type="ows:OnlineResourceType">




<annotation>





<documentation>Connect point URL prefix for the HTTP "Get" request method for this operation request. The xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL prefix. The other attributes in the xlink:simpleLink attribute group should not be used. </documentation>




</annotation>



</element>



<!-- ========================================================== -->



<element name="Post">




<annotation>





<documentation>Connect point URL and accepted format(s) for the HTTP "Post" request method for this operation request. In the OnlineResourceType, the xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL. The other attributes in the xlink:simpleLink attribute group should not be used. </documentation>




</annotation>




<complexType>





<complexContent>






<extension base="ows:OnlineResourceType">







<sequence>








<element name="InputFormat" type="ows:FormatType" maxOccurs="2">









<annotation>










<documentation>Format MIME types of operation requests that can be sent to this Post connect point URL. </documentation>









</annotation>








</element>







</sequence>






</extension>





</complexContent>




</complexType>



</element>



<!-- =========================================================== -->



<simpleType name="FormatType">




<annotation>





<documentation>Data transfer format identifier, identified by its MIME type. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- ========================================================== -->



<complexType name="DomainType">




<annotation>





<documentation>Valid domain (or set of values) of one parameter or other quantity used by this server. A non-parameter quantity may not be explicitly represented in the server software. (Informative: An example is the outputFormat parameter of a WFS. Each WFS server should provide a Parameter element for the outputFormat parameter that lists the supported output formats, such as GML2, GML3, etc. as the allowed "Value" elements.) </documentation>




</annotation>




<sequence>





<element name="Value" type="string" maxOccurs="unbounded">






<annotation>







<documentation>Unordered list of all the valid values for this parameter or other quantity. For those parameters that contain a list or sequence of values, these values shall be for individual values in the list. The allowed set of values and the allowed server restrictions on that set of values shall be specified in the Implementation Specification for this service. </documentation>






</annotation>





</element>





<element ref="ows:Metadata" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Optional unordered list of additional metadata about this parameter. A list of required and optional metadata elements for this domain should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the meanings of the valid values.) </documentation>






</annotation>





</element>




</sequence>




<attribute name="name" type="string" use="required">





<annotation>






<documentation>Name or identifier of this parameter or other quantity. </documentation>





</annotation>




</attribute>



</complexType>



<!-- ========================================================== -->



<element name="Metadata">




<annotation>





<documentation>This element either references or contains more metadata about the element that includes this element. Either at least one of the attributes in xlink:simpleLink or a substitute for the _MetaData element shall be included, but not both. An Implementation Specification can restrict the contents of this element to always be a reference or always contain metadata. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.) </documentation>




</annotation>




<complexType>





<sequence>






<element ref="ows:_MetaData" minOccurs="0"/>





</sequence>





<attributeGroup ref="xlink:simpleLink">






<annotation>







<documentation>Reference to metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, the xlink:href attribute with type anyURI should include a URL from which this metadata can be electronically retrieved. </documentation>






</annotation>





</attributeGroup>





<attribute name="about" type="anyURI" use="optional">






<annotation>







<documentation>Optional reference to the aspect of the element which includes this "metadata" element that this metadata provides more information about. </documentation>






</annotation>





</attribute>




</complexType>



</element>



<!-- ========================================================== -->



<element name="_MetaData" abstract="true">




<annotation>





<documentation>Abstract element containing more metadata about the element that includes the containing "metadata" element. An Implementation Specification can define concrete elements in the _MetaData substitution group. </documentation>




</annotation>



</element>


</schema>


7.4.10 
OperationsMetadata section standard contents


Each Implementation Specification that normatively references the OperationsMetadata section shall specify the mandatory and optional values to be included for various XML elements and attributes in the OperationsMetadata section. This specification should be in the form of tables such as Tables 16 and 17. In addition to being an example table, the OWS common items listed in Table 16 shall be included in all such tables. Similarly, the OWS common items listed in Table 17 can be included in such tables when considered useful. In Tables 16 and 17, the “Item name” column uses dot-separator notation to specify parts of a parent item. The “Multiplicity” column shows the optionality of that Item value. Although many values listed in the “Item value” column appear to contain spaces, they shall not contain spaces.

Table 16 — Required values of OperationsMetadata attributes


		Item name

		Item value

		Multiplicity

		Meaning of value



		Operation.name

		GetCapabilities

		One (Mandatory)

		The GetCapabilities operation is implemented by this server





Table 17 — Optional values of OperationsMetadata attributes


		Item name

		Item value

		Optionality

		Meaning of value



		Operations‌Metadata‌.Parameter‌.name

		service

		Mandatory for all operations

		Service type identifier



		

		request

		Mandatory for HTTP GET binding

		Operation name



		

		version

		Mandatory except for GetCapabilities

		Specification version for operation



		

		version

		Mandatory in ExceptionReport

		Specification version for operation request



		

		language

		Optional


Should be included

		Language used by ExceptionText values



		

		ExceptionText

		Zero or more


Omitted when no more useful information is available

		Text describing the specific exception represented by the exceptionCode



		

		exception‌Code

		Mandatory for all operations

		Code representing the type of this exception



		

		locator

		Optional


Omitted when no useful value is available

		Indicator of the location in the client's operation request where this exception was encountered



		Operation‌.Parameter‌.name

		Accept‌Versions

		Optional for GetCapabilities operation

		Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first



		

		Sections

		Optional for GetCapabilities operation

		Unordered list of zero or more names of requested sections in complete service metadata document



		

		update‌Sequence

		Optional for GetCapabilities operation

		Service metadata document version, value is “increased” whenever any change is made in complete service metadata document



		

		AcceptFormats

		Optional for GetCapabilities operation

		Prioritized sequence of zero or more formats accepted by client, with preferred formats listed first



		Operation‌.Parameter‌.value


When Parameter‌.name is exception‌Code

		Version‌Negotiation​‌Failed

		Optional for GetCapabilities operation

		List of versions in “AcceptVersions” parameter value did not include any version supported by this server



		

		Invalid‌Update‌Sequence

		Optional for GetCapabilities operation

		Value of updateSequence parameter in GetCapabilities operation request is greater than current value of service metadata updateSequence number



		

		Missing‌Parameter‌Value

		Mandatory for GetCapabilities operation

		Operation request does not include a parameter value, and this server did not declare a default value for that parameter



		

		Invalid‌‌Parameter‌Value

		Mandatory for GetCapabilities operation

		Operation request contains an invalid parameter value





7.4.11 Service metadata XML example


A corresponding partial example of a “Capabilities” XML document (or GetCapabilities response message) encoded in XML is:


<?xml version="1.0" encoding="UTF-8"?>


<Capabilites xmlns="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/ows owsCommon.xsd" version="1.2.0" updateSequence="ABC123">



<!-- Partial example for WMS. Primary editor: Arliss Whiteside. Last updated 2004/01/09. -->



<ServiceIdentification>




<ServiceType>OGC:WMS</ServiceType>




<ServiceTypeVersion>1.2.0</ServiceTypeVersion>




<ServiceTypeVersion>1.1.1</ServiceTypeVersion>




<Title>Acme Corp. Map Server</Title>




<Abstract>


      Map Server maintained by Acme Corporation.


      Contact: webmaster@wmt.acme.com.


      High quality maps showing roadrunner nests and possible ambush locations. </Abstract>




<Keywords>





<Keyword>bird</Keyword>





<Keyword>roadrunner</Keyword>





<Keyword>ambush</Keyword>




</Keywords>




<Fees>NONE</Fees>




<AccessConstraints>NONE</AccessConstraints>



</ServiceIdentification>



<ServiceProvider>




<ProviderName>Acme Corporation</ProviderName>




<ProviderSite xlink:href="http://hostname/"/>




<ServiceContact>





<IndividualName>Jeff Smith, Server Administrator</IndividualName>





<PositionName>Computer Scientist</PositionName>





<ContactInfo>






<Phone>







<Voice>+1 301 555-1212</Voice>







<Facsimile>+1 301 555-1212</Facsimile>






</Phone>






<Address>







<DeliveryPoint>NASA Goddard Space Flight Center</DeliveryPoint>







<City>Greenbelt</City>







<AdministrativeArea>MD</AdministrativeArea>







<PostalCode>20771</PostalCode>







<Country>USA</Country>







<ElectronicMailAddress>user@host.com</ElectronicMailAddress>






</Address>





</ContactInfo>




</ServiceContact>



</ServiceProvider>



<OperationsMetadata>




<Operation name="GetCapabilities">





<DCP>






<HTTP>







<Get xlink:href="http://hostname:port/path?"/>






</HTTP>





</DCP>





<Parameter name="Format">






<Value>text/xml</Value>





</Parameter>




</Operation>




<Operation name="GetMap">





<DCP>






<HTTP>







<Get xlink:href="http://hostname:port/path?"/>







<Post xlink:href="http://hostname:port/path?">








<InputFormat>text/xml</InputFormat>







</Post>






</HTTP>





</DCP>





<Parameter name="Format">






<Value>image/gif</Value>






<Value>image/png</Value>






<Value>image/jpeg</Value>





</Parameter>





<Parameter name="ExceptionFormat">






<Value>text/xml</Value>






<Value>text/plain</Value>






<Value>text/html</Value>






<Value>application/vnd.ogc.se_inimage</Value>





</Parameter>




</Operation>




<Operation name="GetFeatureInfo">





<DCP>






<HTTP>







<Get xlink:href="http://hostname:port/path?"/>






</HTTP>





</DCP>





<Parameter name="Format">






<Value>text/xml</Value>






<Value>text/plain</Value>






<Value>text/html</Value>





</Parameter>




</Operation>




<Parameter name="ExceptionFormat">





<Value>text/xml</Value>





<Value>text/plain</Value>





<Value>text/html</Value>




</Parameter>




<Constraint name="MaximumLayerLevels">





<Value>5</Value>




</Constraint>




<Constraint name="MaximumWidth">





<Value>4000</Value>




</Constraint>




<Constraint name="MaximumHeight">





<Value>4000</Value>




</Constraint>



</OperationsMetadata>


</Capabilites>





8 Exception reports


8.1 Introduction


Upon receiving an invalid operation request, each OWS shall respond to the client using an Exception Report message to describe to the client application and/or its human user the reason(s) that the request is invalid. Whenever a server detects an exception condition while responding to a valid operation request, and cannot produce a normal response to that operation, the server shall also respond to the client using an Exception Report. This clause specifies the Exception Report response to all operation requests for all OWSs.

8.2 Exception report contents


Each Exception Report shall be encoded in XML and shall contain one or more Exception elements, with each such element signalling detection of an independent error. Each Exception element shall contain the parameters specified in Table 18. This table also specifies the data type, source of values, and multiplicity of each listed parameter, plus the optionality of each listed parameter, and the meaning to a client when each optional parameter is not included.


Table 18 — Parameters in Exception element


		Name

		Definition

		Data Type and Value

		Multiplicity and Use



		ExceptionText

		Text describing the specific exception represented by the exceptionCode

		Character String type, not empty


Value is exception description as defined by individual servers

		Zero or more (optional, Note 1)


Omitted only when no more useful information available



		exceptionCode

		Code representing the type of this exception

		Character String type, not empty


Allowed values are specified by each Implementation Specification and server implementation

		One (mandatory)



		locator

		Indicator of the location in the client's operation request where this exception was encountered

		Character String type, not empty


Contents defined for each allowed exceptionCode value for each operation (Note 2)

		Zero or one (optional)


Omitted when no useful value available



		NOTE 1
When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first.


NOTE 2
The contents and meaning of this parameter shall be defined for each allowed exceptionCode value. For some exceptionCode values, the meaning may be different for different operations. This locator should be included whenever meaningful information can be provided by the server.





In addition to the Exception elements, an Exception Report shall also contain the parameters specified in Table 19.


Table 19 — Additional Parameters in Exception Report


		Name

		Definition

		Data Type and Value

		Multiplicity and Use



		version

		Specification version, in this case the version to which this Exception Report conforms

		Character String type, not empty


Value format is x.y.z, where x, y, and z are non-negative integers separated by decimal points (e.g., “2.1.3”)


Value is specified by each Implementation Specification and Schemas version

		One (mandatory)



		language

		Language used by all included exception text values

		Character String type, not empty


Values are language codes as specified by IETF RFC 1766

		Zero or one (optional)


Should be included





8.3 exceptionCode parameter values


Each Implementation Specification shall specify a set of standard allowed values for the exceptionCode parameter, as needed for each operation specified for that OWS. For each operation, the allowed standard exceptionCode values shall include all the relevant values specified in Table 20. The allowed standard exceptionCode values for each operation should be specified in a table such as Table 20. (The right column of Table 20 is described in the following subclause.)


Table 20 — Standard exception codes and meanings


		exceptionCode value

		Meaning of code

		“locator” value



		OperationNotSupported 

		Request is for an operation that is not supported by this server

		Name of operation not supported



		VersionNegotiationFailed

		List of versions in “AcceptVersions” parameter value in GetCapabilities operation request did not include any version supported by this server

		None, omit “locator” parameter



		InvalidUpdateSequence

		Value of (optional) updateSequence parameter in GetCapabilities operation request is greater than current value of service metadata updateSequence number

		None, omit “locator” parameter



		MissingParameterValue

		Operation request does not include a parameter value, and this server did not declare a default value for that parameter

		Name of missing parameter



		InvalidParameterValue

		Operation request contains an invalid parameter value

		Name of parameter with invalid value



		NoApplicableCode

		No other exceptionCode specified by this service and server applies to this exception

		None, omit “locator” parameter





We assume most specific OWSs will need to specify additional allowed exceptionCode values. In addition to the standard exceptionCode values specified in each Implementation Specification, each server implementation is allowed to specify additional exceptionCode values and their meanings, for each implemented operation. These additional exceptionCode values and their meanings should be clearly documented in TBD.


Because a client may not always know what set of exceptionCode values are being used by a server, all clients should be coded to allow exceptionCode values that it does not recognize. An unrecognized exceptionCode should be treated as an unknown exceptionCode (not like a NoApplicableCode).


8.4 “locator” parameter values


Each Implementation Specification shall also specify the expected contents of the “locator” parameter value for each allowed exceptionCode, as needed for each operation specified for that OWS. Inclusion of the “locator” parameter in an Exception element shall be optional, but is recommended whenever useful information is available.


The standard contents of the “locator” parameter for each exceptionCode should be as specified in the right column of Table 20. As shown for several exceptionCodes, the “locator” parameter should be omitted when no appropriate value is defined.


EXAMPLE 
When the operation request includes values of a "handle" parameter, the "locator" parameter for some specified exceptionCode(s) should be the relevant value of the "handle" parameter.


8.5 Exception report XML encoding


The XML schema for an Exception Report shall be:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="0.0.1" xml:lang="en">



<annotation>




<appinfo>owsExceptionReport.xsd 2004/1/11</appinfo>




<documentation>





<description>This XML Schema encodes the Exception Report response to all OWS operations. Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<import namespace="http://www.w3.org/1999/xlink" schemaLocation="http://schemas.opengis.net/gml/3.0.0/xlink/xlinks.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="ExceptionReport">




<annotation>





<documentation>Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request. </documentation>




</annotation>




<complexType>





<sequence>






<element name="Exception" type="ows:ExceptionType" maxOccurs="unbounded">







<annotation>








<documentation>Unordered list of one or more Exception elements that each describes an error. These Exception elements shall be interpreted by clients as being independent of one another (not hierarchical). </documentation>







</annotation>






</element>





</sequence>





<attribute name="version" type="ows:VersionType" use="required">






<annotation>







<documentation>The version of the Implementation Specification (document) to which this Exception Report conforms. </documentation>






</annotation>





</attribute>





<attribute name="language" type="language" use="optional">






<annotation>







<documentation>Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 1766. When this attribute is omitted, the language used is not identified. </documentation>






</annotation>





</attribute>




</complexType>



</element>



<!-- ======================================================= -->



<complexType name="ExceptionType">




<annotation>





<documentation>An Exception element describes one detected error that a server chooses to convey to the client. </documentation>




</annotation>




<sequence>





<element name="ExceptionText" type="string" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Ordered sequence of text strings that describe this specific exception or error. The contents of these strings are left open to definition by each server implementation. A server is strongly encouraged to include at least one ExceptionText value, to provide more information about the detected error than provided by the exceptionCode. When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first. </documentation>






</annotation>





</element>




</sequence>




<attribute name="exceptionCode" type="string" use="required">





<annotation>






<documentation>A code representing the type of this exception, which shall be selected from a set of exceptionCode values specified for the specific service operation and server. </documentation>





</annotation>




</attribute>




<attribute name="locator" type="string" use="optional">





<annotation>






<documentation>When included, this locator shall indicate to the client where an exception was encountered in servicing the client's operation request. This locator should be included whenever meaningful information can be provided by the server. The contents of this locator will depend on the specific exceptionCode and OWS service, and shall be specified in the OWS Implementation Specification. </documentation>





</annotation>




</attribute>



</complexType>



<!-- ========================================================= -->



<simpleType name="VersionType">




<annotation>





<documentation>Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>


</schema>



This XML Schema fragment contains documentation of the meaning of each element and attribute, and this documentation shall be considered normative as specified in Subclause 11.6.3.


8.6 Exception report XML example


An example of an Exception Report encoded in XML is:


<?xml version="1.0" encoding="UTF-8"?>


<ExceptionReport xmlns="http://www.opengis.net/ows" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/ows owsCommon.xsd" version="1.0.0" language="en">



<!-- Simple example. Primary editor: Arliss Whiteside. Last updated 2004/1/11. -->



<Exception exceptionCode="MissingParameterValue" locator="service"/>



<Exception exceptionCode="InvalidParameterValue" locator="version"/>


</ExceptionReport>


9 
All operations except GetCapabilities, minimum abilities


9.1 Introduction


This clause specifies minimum abilities of all operations except GetCapabilities that are implemented by any OWS.

9.2 Operation request


9.2.1 Operation request parameters


A request to perform any operation except GetCapabilities shall include, in addition to operation-specific parameters, the parameters specified in Table 21.


Table 21 — Parameters used by all operation requests except GetCapabilities


		Name

		Definition

		Data Type and Value

		Multiplicity



		service

		Service type identifier

		Character String type, not empty


Value is OWS type abbreviation 
(e.g., “WMS”, “WFS”)

		One (mandatory)



		request

		Operation name

		Character String type, not empty


Value is operation name (e.g., “GetCapabilities”)

		One (mandatory)



		version

		Specification version for operation

		Character String type, not empty


Value format is x.y.z, where x, y, and z are non-negative integers separated by decimal points (e.g., “2.1.3”)


Value is specified by each Implementation Specification and Schemas version

		One (mandatory)





9.2.2 Operation request KVP encoding example


An example of a corresponding partial operation request message encoded using KVP is:


http://hostname:port/path?SERVICE=WCS&REQUEST=GetCoverage&VERSION=1.0.0&


9.2.3 Operation request XML encoding


A XML Schema fragment for encoding the parameters used by all operation requests except GetCapabilities is:


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ows="http://www.opengis.net/ows" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>owsRequestBase.xsd 2004/1/11</appinfo>




<documentation>





<scope>OGC Web Service. </scope>





<description>This XML Schema fragment encodes the common parameters in all OWS operation requests except GetCapabilities. This XML Schema shall be edited by each OWS, to specify a specific value for the "service" attribute. This XML Schema shall also be extended for each operation used by that OWS. Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved.</copyright>




</documentation>



</annotation>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="RequestBase" type="ows:RequestBaseType"/>



<!-- =========================================================== -->



<complexType name="RequestBaseType">




<annotation>





<documentation>XML encoded operation request base, for all operations except Get Capabilities. In this XML encoding, no "request" parameter is included, since the final element name will specify the specific operation. </documentation>




</annotation>




<sequence/>




<attribute name="service" type="ows:ServiceType" use="required"/>




<attribute name="version" type="ows:VersionType" use="required"/>



</complexType>



<!-- =========================================================== -->



<simpleType name="ServiceType">




<annotation>





<documentation>Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- ========================================================= -->



<simpleType name="VersionType">




<annotation>





<documentation>Specification version for OWS operation. String value shall contain one x.y.z "version" value (e.g., "2.1.3") Each version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation requests must conform and should be validated. See Version negotiation subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>


</schema>



An example of a corresponding partial operation request message encoded in XML is:


<?xml version="1.0" encoding="UTF-8"?>


<RequestBase xmlns="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/ows owsRequestBase.xsd" service="WCS" version="1.0"/>


<!-- Partial example for WCS. Primary editor: Arliss Whiteside. Last updated 2003/11/25. -->


9.3 
Operation response


In the event that an OWS server encounters an error servicing an operation request, it shall return an exception report message as specified in Clause 8. The allowed exception codes shall be specified for each operation in the Implementations specification, and shall include the relevant standard exception codes listed in Table 19.

10 Other operation parameters


10.1 Introduction


This clause specifies some other parameters used in multiple OWSs by multiple operation requests and responses.


10.2 Bounding box


EDITOR’S NOTE 
The Harmonization working group has just started to specify a bounding box that can be used by various operations in various OWSs. The following rough draft outlines one of several possible approaches, this one adapting gml:envelope.


Bounding box parameters are used by various operations in various OWSs. Each bounding box data structure shall contain the parameters specified in Table 22.


Table 22 — Parameters used by BoundingBox data type


		Name

		Definition

		Data Type

		Multiplicity



		minimum‌Ordinates

		Coordinates of bounding box corner with minimum coordinate values (Note 1)

		Ordinates, see Table 22

		One (mandatory)



		maximum‌Ordinates

		Coordinates of bounding box corner with maximum coordinate values (Note 1)

		Ordinates, see Table 22

		One (mandatory)



		crsName

		Reference to definition of the Coordinate Reference System (CRS) used by minimum‌Ordinates and maximum‌Ordinates

		URN, as specified in IETF RFC 2396

		Zero or one (optional)


Omitted only when specified elsewhere



		NOTE 1
The minimum and maximum ordinate values refer to the bounding box edges with algebraic minimum and maximum coordinate values, except for geographic Longitude coordinates. For a geographic Longitude coordinate, the “minimum” shall be the West-most box edge, and the “maximum” shall be the East-most box edge (TBR).





The “Ordinates” data type used in Table 21 shall contain the parameters specified in Table 23.


Table 23 — Parameters used by Ordinates data type


		Name

		Definition

		Data Type

		Multiplicity and Use



		Ordinate

		Position ordinate, in referenced Coordinate Reference System (CRS)

		Double

		Two to three (mandatory)


One for each axis of referenced CRS (Note 1)



		NOTE 1
The referenced CRS can have two or three spatial coordinate axes, and shall not include a time axis.





10.3 Coordinate reference system references


EDITOR’S NOTE 
The Harmonization working group plans to next specify parameters that reference Coordinate Reference Systems (CRSs).


11 Operation request and response encoding

11.1 General HTTP rules


This specification applies to OWS interfaces that use the distributed computing platform (DCP) comprising Internet hosts that support the Hypertext Transfer Protocol (HTTP) [IETF RFC 2616]. Thus the Online Resource of each operation supported by a server is an HTTP Uniform Resource Locator (URL). Each URL shall conform to the description in Section 3.2.2 "HTTP URL" of [IETF RFC 2616], but is otherwise implementation-dependent. Only the query portion comprising the service request itself is defined by this specification.


This document defines two methods of encoding OWS operation requests. One method uses XML as the encoding language, and the other method uses keyword-value pairs to encode the various parameters. An example of a keyword value pair (KVP) is:


REQUEST=GetCapabilities


where "REQUEST" is the parameter name and "GetCapabilitites" is the value. A KVP value can include XML encoded elements. In both cases, the response to a request or exception reporting must be identical.


HTTP supports two request methods: GET and POST. One or both of these methods may be offered by a server for each operation, and the use of the Online Resource URL differs in each case.


11.2 HTTP GET


An Online Resource URL intended for HTTP GET requests is in fact only a URL prefix to which additional parameters are appended in order to construct a valid operation request. A URL prefix is defined in accordance with [IETF RFC 2396] as a string including, in order, the scheme ("http" or "https"), Internet Protocol hostname or numeric address, optional port number, path, mandatory question mark '?', and optional string comprising one or more server-specific parameters ending in an ampersand '&'. The prefix defines the network address to which request messages are to be sent for a particular operation on a particular server, and may also identify a configuration of that server. Each operation may have a different prefix, and each prefix is entirely at the discretion of the service provider.


This document defines how to construct a query part that is appended to the URL prefix in order to form a complete request message. Every OWS operation request has several mandatory and/or optional request parameters. Each parameter has a defined name. Each parameter may have one or more legal values, which are either defined by this document, defined by an Implementation Specification that builds on this document, or are selected by the client based on service metadata. To formulate the query part of the URL, a client shall append the mandatory request parameters, and any desired optional parameters, as name/value pairs in the form "name=value&" (parameter name, equals sign, parameter value, ampersand). The '&' is a separator between name/value pairs, and is therefore optional after the last pair in the request string.


When the HTTP GET method is used, the client-constructed query part is appended to the URL prefix defined by the server, and the resulting complete URL is invoked as defined by HTTP [IETF RFC 2616]. Table 24 summarizes the components of an operation request URL when HTTP GET is used.


Table 0\IF >= 1 "A." 
24 — Structure of operation request using HTTP GET


		URL Component

		Description



		http://host[:port]/path[?{name[=value]&}]

		URL prefix of service operation. [ ] denotes 0 or 1 occurrence of an optional part; {} denotes 0 or more occurrences..



		name=value&

		One or more standard request parameter name/value pairs as defined for each operation by this International Standard. This parameter encoding is referred to as Key Value Pair (KVP) encoding elsewhere in this document.





11.3 Reserved characters in HTTP GET URLs


The URL specification [IETF RFC 2396] reserves particular characters as significant and requires that these be escaped when they might conflict with their defined usage. This specification explicitly reserves several of those characters for use in operation requests. When the characters '&', '=', ',' and '+' appear in one of the roles defined in Table 24, they shall appear literally in the URL. When those characters appear elsewhere (for example, in the value of a parameter), they shall be encoded as defined in [IETF RFC 2396]. A server shall be prepared to decode any character escaped in this manner, and to decode the '+' character as a space.


Table 0\IF >= 1 "A." 
24 — Reserved Characters in WMS Query String


		Character

		Reserved Usage



		?

		Separator indicating start of query string.



		&

		Separator between parameters in query string.



		=

		Separator between name and value of parameter.



		,

		Separator between individual values in list-oriented parameters (such as BBOX, LAYERS and STYLES in the GetMap request).



		+

		Shorthand representation for a space character.





11.4 HTTP POST


An Online Resource URL intended for HTTP POST operation requests is a complete URL (not merely a prefix as in the HTTP GET case) that is valid according to [IETF RFC 2396]. This is the URL to which clients transmit request parameters in the body of the POST message. An OWS shall not require additional parameters to be appended to the URL in order to construct a valid target for the operation request. The URL may be different for each operation, or the same, at the discretion of the server provider. When POST is used, the operation request message can be encoded as an XML document, formatted as specified by one or more XML Schemas. When POST is used, the operation request message can alternately be KVP encoded.


11.5 KVP encoding


11.5.1 Introduction


This subclause specifies the Key Value Pair (KVP) encoding of the operation request parameters specified in Clauses 7 through 10.


11.5.2 Capitalization


The capitalization of parameter names when KVP encoded shall be case insensitive, meaning that parameter names may have mixed case or not.


EXAMPLES 
The “request” parameter name could be REQUEST, request, Request, or ReQuEsT.


NOTE 
The XML capitalization is uniformly used in Clauses 7 through 10 plus Annex C of this document.


The capitalization of parameter values when encoded using Key Value Pairs shall be as used in Clause 7 through 10 of this document. More generally, all value strings shall have the first word and any subsequent words in the name capitalized. All other letters will be lower case.


EXAMPLE 
One possible “request” parameter value shall be GetCapabilities.


11.5.3 Parameter lists


Parameters values containing lists (for example, AcceptVersions and AcceptFormats in the GetCapabilities operation request) shall use the comma (",") as the separator between items in the list. Additional white space shall not be used to delimit list items. If a list item value includes a space or comma, it shall be escaped using the URL encoding rules [IETF RFC 2396].


In some lists, individual entries may be empty, and shall be represented by the empty string (""). Thus, two successive commas indicates an empty item, as does a leading comma or a trailing comma. An empty list ("") can either be interpreted as a list containing no items or as a list containing a single empty item, depending on the context.


11.6 XML encoding


11.6.1 Introduction


This subclause specifies the XML encoding of the operation request and response parameters specified in Clauses 7 through 10.


11.6.2 Capitalization


The capitalization of parameter and operation names when encoded as XML elements and attributes shall be as used in Clauses 7 through 10 of this document. More generally, these name capitalization rules shall be used:


ar) All names of XML elements shall have the first word and any subsequent words in the name capitalized. All other letters will be lower case.


as) All names of XML attributes shall have the first word in lower case and any subsequent word in the name capitalized. All other letters shall be lower case.


EXAMPLES 
The GetCapabilities operation request element name shall be GetCapabilities. The updateSequence parameter attribute name shall be updateSequence.


The capitalization of parameter values when encoded as XML stings shall be as used in Clauses 7 through 10 of this document. More generally, all XML string values shall have the first word and any subsequent words in the name capitalized. All other letters will be lower case.


EXAMPLE 
One possible “request” parameter value shall be GetCapabilities.


11.6.3 XML Schema documentation


All XML Schemas shall contain documentation of the meaning of each element, attribute, and type. In many cases, a documentation element is included only for the (complex or simple) types, but is applicable to all the elements or attributes that use that type. All of these documentation elements shall be considered normative, except where labelled “informative”.


11.6.4 XML Schema extension and restriction


TBD


11.7 HTTP responses


Upon receiving a valid operation request, the service shall send a response corresponding exactly to the request as detailed in the Implementation Specification, or send an exception report if unable to respond correctly. Only in the case of Version Negotiation (Subclause 7.3.2) may the server returning a differing result. Upon receiving an invalid request, the service shall issue an exception report as specified in Clause 8.


NOTE 
As a practical matter, a client should be prepared to receive either a valid result, or nothing, or any other result. This is because the client may have formed a non-conforming request that inadvertently triggered a reply by something other than an OWS, because the server may be non-conforming, etc.


A server may send an HTTP Redirect message (using HTTP response codes as defined in [IETF RFC 2616]) to an absolute URL that is different from the valid request URL that was sent by the client. HTTP Redirect causes the client to issue a new HTTP request for the new URL. Several redirects could in theory occur. Practically speaking, the redirect sequence ends when the server responds with an operation response. The final response shall be an OWS operation response that corresponds exactly to the original operation request (or an exception report).


Response objects shall be accompanied by the appropriate Multipurpose Internet Mail Extensions (MIME) type [IETF RFC 2045] for that object. A list of MIME types in common use on the internet is maintained by the Internet Assigned Numbers Authority [IANA]. Allowable types for operation responses and exception reports are discussed below.


The basic structure of a MIME type is a string of the form "type/subtype". MIME allows additional parameters in a string of the form "type/subtype; param1=value1; param2=value2". A server may include parameterized MIME types in its list of supported output formats. In addition to any parameterized variants, the server should offer the basic un-parameterized version of the format.


Response objects should be accompanied by other HTTP entity headers as appropriate and to the extent possible. In particular, the Expires and Last-Modified headers provide important information for caching; Content-Length may be used by clients to know when data transmission is complete and to efficiently allocate space for results, and Content-Encoding or Content-Transfer-Encoding may be necessary for proper interpretation of the results.


12 Guidance for OWS Implementation Specifications


This clause provides some guidance for editors of OWS Implementation Specifications, currently in the form of a list:


at) Rather than continuing to duplicate common material in each Implementation Specification, each specification should normatively reference each relevant part of this document. Such normative references can take the form of stating “This TBD shall include TBD as specified in Subclause TBD of OGC document TBD.”


au) The “Normative references” Clause of each Implementation Specification that normatively references any part of this document shall list this document, and shall include the relevant version number of this document.


Annex A
(normative)

XML schemas


The common OWS abilities now specified in this document use five XML Schemas, all included in the zip file with this document. These XML Schema files roughly match the fivw UML packages described in Annex B, and are named:


av) owsOperationsMetadata.xsd — This file is listed in Subclause 7.4.7.


aw) owsServiceIdentification.xsd — This file is listed in Subclause 7.4.8.


ax) ows19115subset.xsd — This file is also listed in Subclause 7.4.8.


ay) owsServiceProvider.xsd — This file is listed in Subclause 7.4.9.


az) owsExceptionReport.xsd — This file is listed in Subclause 8.5.


ba) owsCommon.xsd — This file combines the other XML Schema fragments listed in various subclauses, eliminating duplications. This XML Schema “includes” the first four XML Schema files listed above, and is listed below.


<?xml version="1.0" encoding="UTF-8"?>


<schema targetNamespace="http://www.opengis.net/ows" xmlns:ows="http://www.opengis.net/ows" xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="0.1.4" xml:lang="en">



<annotation>




<appinfo>owsCommon.xsd 2004/1/11</appinfo>




<documentation>





<description>This XML Schema encodes many of the UML classes that are common to all OWSs. This XML Schema shall be edited by each OWS, for example, to specify a specific value for the "service" attribute. Primary editor: Arliss Whiteside. </description>





<copyright>Copyright (c) 2004 OpenGIS, All Rights Reserved. </copyright>




</documentation>



</annotation>



<!-- ==============================================================




includes and imports



============================================================== -->



<include schemaLocation="owsServiceIdentification.xsd"/>



<include schemaLocation="owsServiceProvider.xsd"/>



<include schemaLocation="owsOperationsMetadata.xsd"/>



<!-- ==============================================================




elements and types



============================================================== -->



<element name="Capabilites" type="ows:CapabilitesBaseType"/>



<!-- =========================================================== -->



<complexType name="CapabilitesBaseType">




<annotation>





<documentation>XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. </documentation>




</annotation>




<sequence>





<element ref="ows:ServiceIdentification" minOccurs="0"/>





<element ref="ows:ServiceProvider" minOccurs="0"/>





<element ref="ows:OperationsMetadata" minOccurs="0"/>




</sequence>




<attribute name="version" type="ows:VersionType" use="required"/>




<attribute name="updateSequence" type="ows:UpdateSequenceType" use="optional"/>



</complexType>



<!-- =========================================================== -->



<element name="GetCapabilities" type="ows:GetCapabilitiesType"/>



<!-- =========================================================== -->



<complexType name="GetCapabilitiesType">




<annotation>





<documentation>XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </documentation>




</annotation>




<sequence>





<element name="AcceptVersions" type="ows:AcceptVersionsType" minOccurs="0">






<annotation>







<documentation>When omitted, server shall return latest supported version. </documentation>






</annotation>





</element>





<element name="Sections" type="ows:SectionsType" minOccurs="0">






<annotation>







<documentation>When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. </documentation>






</annotation>





</element>





<element name="AcceptFormats" type="ows:AcceptFormatsType" minOccurs="0">






<annotation>







<documentation>When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". </documentation>






</annotation>





</element>




</sequence>




<attribute name="service" type="ows:ServiceType" use="required"/>




<attribute name="updateSequence" type="ows:UpdateSequenceType" use="optional">





<annotation>






<documentation>When omitted or not supported by server, server shall return latest complete service metadata document. </documentation>





</annotation>




</attribute>



</complexType>



<!-- =========================================================== -->



<element name="RequestBase" type="ows:RequestBaseType"/>



<!-- =========================================================== -->



<complexType name="RequestBaseType">




<annotation>





<documentation>XML encoded operation request base, for all operations except Get Capabilities. In this XML encoding, no "request" parameter is included, since the final element name will specify the specific operation. Also, no "service" parameter is included, since the value of this parameter is specified by specific OWS schemas. </documentation>




</annotation>




<sequence/>




<attribute name="version" type="ows:VersionType" use="required"/>



</complexType>



<!-- =========================================================== -->



<!-- =========================================================== -->



<simpleType name="ServiceType">




<annotation>





<documentation>Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- ========================================================= -->



<complexType name="AcceptVersionsType">




<annotation>





<documentation>Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. </documentation>




</annotation>




<sequence>





<element name="Version" type="ows:VersionType" maxOccurs="unbounded"/>




</sequence>



</complexType>



<!-- =========================================================== -->



<complexType name="SectionsType">




<annotation>





<documentation>Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information.  </documentation>




</annotation>




<sequence>





<element name="Section" type="string" minOccurs="0" maxOccurs="unbounded"/>




</sequence>



</complexType>



<!-- =========================================================== -->



<simpleType name="UpdateSequenceType">




<annotation>





<documentation>Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. </documentation>




</annotation>




<restriction base="string"/>



</simpleType>



<!-- =========================================================== -->



<complexType name="AcceptFormatsType">




<annotation>





<documentation>Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. </documentation>




</annotation>




<sequence>





<element name="OutputFormat" type="ows:FormatType" minOccurs="0" maxOccurs="unbounded"/>




</sequence>



</complexType>


</schema>





These XML Schemas contain documentation of the meaning of each element, attribute, and type, and this documentation shall be considered normative as specified in Subclause 11.6.3.


Annex B
(informative)

UML models

Figures B.1 through B.5 provide UML models for many of the items specified in this document. Figure B.1 shows an OWS Common UML package that includes the:


bb) OWService interface class that models the GetCapabilities operation


bc) GetCapabilities and Section classes that model the GetCapabilities operation request specified in Subclause 7.2


bd) ServiceIdentification class that models the GetCapabilities operation response specified in Subclause 7.4. The associated ServiceIdentification, ServiceProvider, and OperationsMetadata classes shown are modeled in the OWS Server Metadata and OWS Operations Metadata UML packages shown in Figures B.2 through B.4.


be) RequestBase class that models the parameters included in all operations except GetCapabilities specified in Subclause 9.2


Many of the classes in the OWS Common UML package shown in Figure B.1 are {Abstract}, because they must be specialized for each specific OWS.


OWService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


<<Interface>>


This abstract class is subtyped and expanded 


by each OGC Web Service interface.


RequestBase {Abstract}


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


Section


+ serviceIdentification


+ serviceProvider


+ operationsMetadata


+ contents


+ all


<<CodeList>>


GetCapabilities {Abstract}


+ service : CharacterString


+ request : CharacterString = "GetCapabilities" {frozen}


+ acceptVersions [0..1] : Sequence<CharacterString>


+ sections [0..1] : List<Section>


+ updateSequence [0..1] : CharacterString


+ acceptFormats [0..1] : Sequence<CharacterString>


ServiceIdentification


(from OWS Service Identification)


OperationsMetadata


(from OWS Operations Metadata)


ServiceProvider


(from OWS Service Provider)


ServiceMetadata {Abstract}


+ version : CharacterString


+ updateSequence [0..1] : CharacterString


0..1


1


+serviceIdentification


0..1


1


0..1


1


+operationsMetadata


0..1


1


0..1


1


+serviceProvider


0..1


1




Figure 0\IF >= 1 "A." 
B.1 — OWS Common UML package


Figure B.2 shows the OWS Service Identification UML package that models the contents of the ServiceIdentification section of all service metadata documents, as specified in Subclauses 7.4.3 and 7.4.7. In addition to the ServiceIdentification class, this diagram shows the Keywords class used from ISO 19115: Metadata and the Code class used from GML 3.


Code


+ code : CharacterString


+ codeSpace [0..1] : URI


(from GML Subset)


Keywords


+ keyword [1..*] : CharacterString


(from ISO 19115 Subset)


1


0..1


1


+type


0..1


ServiceIdentification


+ serviceTypeVersion [1..*] : CharacterString


+ title : CharacterString


+ abstract [0..1] : CharacterString


+ fees [0..1] : CharacterString


+ accessConstraints [0..1] : CharacterString


1


1


+serviceType


1


1


0..*


1


+keywords


0..*


1




Figure 0\IF >= 1 "A." 
B.2 — OWS Service Identification UML package


Figure B.3 shows the OWS Service Provider UML package that models the contents of the ServiceProvider section of all Service Metadata documents, as specified in Subclauses 7.4.4 and 7.4.9. In addition to the ServiceProvider class, this diagram shows the various classes used from ISO 19115: Metadata.


ServiceProvider


+ providerName : CharacterString


(from OWS Service Identification)


ResponsibleParty


+ individualName [0..1] : CharacterString


+ organisationName [0..0] : CharacterString


+ positionName [0..1] : CharacterString


(from ISO 19115 Subset)


<<DataType>>


1


1


+serviceContact


1


1


Address


+ deliveryPoint [0..*] : CharacterString


+ city [0..1] : CharacterString


+ administrativeArea [0..1] : CharacterString


+ postalCode [0..*] : CharcterString


+ country [0..*] : CharcterString


+ electronicMailAddress [0..*] : CharcterString


(from ISO 19115 Subset)


<<DataType>>


Telephone


+ voice [0..*] : CharcterString


+ facsimile  [0..*] : CharcterString


(from ISO 19115 Subset)


<<DataType>>


OnlineResource


+ linkage : URL


(from ISO 19115 Subset)


<<DataType>>


0..1


1


+providerSite


0..1


1


Contact


(from ISO 19115 Subset)


<<DataType>>


0..1


1


+contactInfo


0..1


1


0..1


1


+address


0..1


1


0..1


1


+phone


0..1


1


0..1


1


+onlineResource


0..1


1




Figure 0\IF >= 1 "A." 
B.3 — OWS Service Provider UML package


Figure B.4 shows the OWS Operations Metadata UML package that models the contents of the OperationsMetadata section of service metadata documents, as specified in Subclauses 7.4.5 and 7.4.9. In addition to the OWS specific classes, this diagram shows the OnLineResource class used from ISO 19115: Metadata.


ExtendedCapabilities {Abstract}


<<DataType>>


OperationsMetadata


0..1


1


+extendedCapabilities0..1


1


Domain


+ name : CharacterString


+ value [1..*] : CharacterString


<<DataType>>


0..*


1


+parameter


0..*


1


0..*


1


+constraint


0..*


1


Metadata


+ linkage : URI


+ metadata : Any


<<Union>>


0..*


1


+metadata


0..*


1


Post


+ inputFormat [1..2] : CharacterString


<<DataType>>


OnlineResource


+ linkage : URL


(from ISO 19115 Subset)


<<DataType>>


Operation


+ name : CharacterString


2..*


1


+operation


2..*


1


0..*1


+parameter


0..*1


0..*


1


+metadata


0..*


1


HTTP


<<DataType>>


0..*


1


+post


0..*


1


0..*


1


+get


0..*


1


DCP


<<Union>>


1..*


1


+DCP1..*


1


0..1


1


+HTTP0..1


1




Figure 0\IF >= 1 "A." 
B.4 — OWS Operations Metadata UML package


Figure B.5 shows the OWS Exception Report UML package that models the contents of the Exception Reports, as specified in Clause 8.


ExceptionReport


+ version : CharacterString


+ language [0..1] : CharacterString


<<DataType>>


Language 


code values 


from 639.2


Exception


+ exceptionCode : CharacterString


+ exceptionText [0..*] : CharacterString


+ locator [0..1] : CharacterString


<<DataType>>


1


+exception


1..*


1


1..*




Figure 0\IF >= 1 "A." 
B.5 — OWS Exception Report UML package


Annex C
(informative)

Reasons for parameters

C.1
Introduction


This annex briefly states reasons for deciding to include parameters in the various operation request and response messages specified in this document.

C.2
Reasons for GetCapabilities request parameters


The reasons for deciding to include the parameters listed in the GetCapabilities operation request, in Subclause 7.2.2, are briefly stated in the Table C.1.


Table C.1 — Reasons for GetCapabilities request parameters


		Name

		Reason



		service

		The service must be identified in all operation requests because a single endpoint may implement more than one service, and the same operation name may be used by multiple service types.



		request

		The requested operation must be identified in all operation requests because a single endpoint may implement more than one operation.



		version

		 (Deprecated: The specification version was optional in the GetCapabilities operation request for all OGC Web Services to support client-server version negotiation.)



		AcceptVersions

		The AcceptVersions is optional in the GetCapabilities operation request for all OWSs, but its use is encouraged to support efficient client-server version negotiation as specified in Subclause 7.3.2. It is optional partly to support backwards compatibility as discussed in Subclause C.11.



		Sections

		The Sections parameter should be optional in the GetCapabilities operation request for all OWSs to allow clients to request, and servers to respond, with only the needed part(s) of the complete service metadata document.


The allowed value of “All” is included to allow a client to request all sections, when that doing so is easier than omitting this parameter.


This parameter is significantly more flexible than required by the use cases that have been identified, but is hoped to be cost-effective. See summary of the use cases identified in Subclause C.4.



		updateSequence

		The updateSequence should be optional in the GetCapabilities operation request for all OWSs to allow clients to request, and servers to respond, with a service metadata document only when it has been updated since the last version returned (see Subclause 7.3.3).



		AcceptFormats

		The AcceptFormats parameter is included to provide flexibility to allow experimentation and allow other documents to identify allowed alternative format(s). (Note 1)



		NOTE 1
The AcceptFormats parameter can be optional in the GetCapabilities operation request for all OWSs to allow clients to request different formats for return of service metadata (Capabilities) XML documents. However, implementation should not be required by servers or clients, partially for backwards compatibility. The GetCapabilities operation is unique in that it is the only operation for which the client cannot be expected to know anything about the server. In order to avoid complicated negotiation rounds such as the deprecated version-negotiation mechanism, a GetCapabilities request should contain enough information so that the server can respond to a GetCapabilities request in a way that best satisfies the needs of the client. For this reason, the single “format” parameter that exists in some other operation requests does not suffice. The AcceptFormats parameter allows the client and server to negotiate the best return format in one round. This is similar to the AcceptVersions parameter which has been added to the GetCapabilities request for the same reason. The common first use of this parameter is likely to be by clients that are capable of receiving XML documents in a format which is much smaller than the equivalent text/xml documents. This parameter allows such clients to request the preferred format(s) while still negotiating down to text/xml for servers that do not support the preferred format(s).





The reasons for deciding to NOT include some possible parameters in the GetCapabilities operation request are briefly stated in the Table C.2.


Table C.2 — Reasons against GetCapabilities parameters


		Definition

		Data type and value

		Reason



		Identifier of server configuration (data or other)

		Character String type, not empty


Values are selected by each server

		Different server configurations can and should use different URLs (Note 1)



		Expression to retrieve any subsection(s) of capabilities document

		anyURI or XPATH expression type, not empty (optional)

Values are selected by clients

		Complexity of implementing extraction of any capabilities document subsection



		NOTE 1
At the client-server interface, different server configurations are logically separate servers. Implementations of these logically separate servers can share software, and may also share selected data, but such sharing is not explicitly visible to clients.





C.3
Reasons for service metadata sections


The reasons for deciding to organize the service metadata (or Capabilities) document into the sections listed in the Service metadata document contents, in Subclause 7.4.2, are briefly stated in the Table C.3.


Table C.3 — Reasons for service metadata sections


		Name

		Reason



		ServiceIdentification

		Corresponds to and expands the SV_ServiceIdentification class in ISO 19119



		ServiceProvider

		Corresponds to and expands the SV_ServiceProvider class in ISO 19119



		OperationsMetadata

		Contains set of Operation elements that each corresponds to and expand the SV_OperationsMetadata class in ISO 19119



		Contents

		Whenever relevant, contains set of elements that each corresponds to the MD_DataIdentification class in ISO 19119 and 19115





C.4
Reasons for ServiceIdentification parameters


The reasons for deciding to include the parameters and subsections listed in the ServiceIdentification section, in Subclause 7.4.3, are briefly stated in the Table C.4.


Table C.4 — Reasons for ServiceIdentification parameters


		Name

		Reason



		ServiceType (mandatory)

		Useful to provide service type name useful for machine-to-machine communication



		ServiceType‌Version (mandatory)

		Useful to provide list of server-supported versions.



		Title (mandatory)

		Useful to provide a server title for display to a human.



		Abstract (optional)

		Usually useful to provide narrative description of server, useful for display to a human.



		Keywords (optional)

		Often useful to provide keywords useful for server searching.



		Fees (optional)

		Usually useful to specify fees, or NONE if no fees.



		Access‌Constraints (optional)

		Usually useful to specify access constraints, or NONE if no access constraints.





Other reasons for deciding to include most of the parameters listed in the ServiceIdentification section were that they either or both:


bf) Contain the same information as previously included in both the WMS and WFS Implementation Specifications, in the Service section


bg) Are included in the service metadata specified in ISO 19119, in the SV_ServiceIdentification and MD_Identification classes

NOTE 1
ISO 19119 specifies service metadata in Subclauses 7.4.2 and C.2. Almost all this service metadata is for a specific server instance, not for a general service type. This is consistent with the “ServiceIdentification” section of an “OWS Capabilities” document, in which most contents are server specific. Almost all general service metadata is assumed to be available in the Implementation Specification, and to be known by clients.


NOTE 2
Although the revised DIS_(E) version of ISO 19119 no longer lists the association to MD_Keywords in Subclause C.2.2, we assume the association of MD_Identification to MD_Keywords in ISO 19115 can be included when useful.

Table C.5 lists the names of the parameters in the ServiceIdentification section with the names of corresponding Parameters. The center column lists all the parameter names in the ServiceIdentification section, and the left column lists the corresponding parameter names in the Service section of BOTH WMS and WFS. The right column lists the corresponding UML attribute names in the SV_ServiceIdentification and MD_Identification classes specified in ISO 19119. The right column does NOT list optional UML attributes that have no corresponding parameter in the ServiceIdentification section. All three columns uses dot-separator notation to specify parts of a parent item.

Table C.5 — Corresponding parameter names


		WMS and WFS parameter

		ServiceIdentification parameter

		ISO 19119 UML attribute



		Name (mandatory)

		ServiceType (mandatory)

		SV_ServiceIdentification.‌‌‌serviceType (mandatory)



		(none)

		ServiceType‌Version (mandatory)

		SV_ServiceIdentification.‌serviceTypeVersion (optional)



		Title (mandatory)

		Title (mandatory)

		MD_Identification.‌citation.title 
(mandatory, mandatory)



		(none)

		(none)

		MD_Identification.‌citation.date 
(mandatory, mandatory)



		Abstract (optional)

		Abstract (optional)

		MD_Identification.abstract (mandatory)



		Fees (optional)

		Fees (optional)

		SV_ServiceIdentification. accessProperties.fees 
(optional, optional)



		AccessConstraints (optional)

		Access‌Constraints (optional)

		SV_ServiceIdentification.‌‌restrictions.accessConstraints (optional, optional)



		KeywordList (optional)

		Keywords.Keyword (optional,mandatory)

		MD_Identification.‌keywords.keyword 
(optional, mandatory)



		(none)

		Keywords.Type.string 
(optional, optional, mandatory)

		MD_Identification.‌keywords.type 
(optional, optional)



		(none)

		Keywords.Type.codeSpace 
(optional, optional, optional)

		MD_Identification.‌keywords.thesaurus 
(optional, optional)





C.5
Reasons for ServiceProvider parameters


The reasons for deciding to include the parameters and subsections listed in the ServiceProvider section, in Subclause 7.4.4, are briefly stated in the Table C.6.


Table C.6 — Reasons for ServiceProvider parameters and subsections


		Name

		Reason



		ProviderName (mandatory)

		Useful to allow providing name of service provider at top level.



		ProviderSite (optional)

		Usually useful to provide reference to provider web site.



		Service‌Contact (mandatory)

		Often useful to provide service provider contact information.





Other reasons for deciding to include most of the parameters and subsections listed in the ServiceIdentification section were that they either or both:


bh) Contain the same information as previously included in both the WMS and WFS Implementation Specifications, in the Service section


bi) Are included in the service metadata specified in ISO 19119, in the SV_ServiceProvider class

Table C.7 lists the names of the parameters in the ServiceProvider section with the names of corresponding Parameters. The center column lists all the parameter names in the ServiceProvider section, and the left column lists the corresponding parameter names in the Service section of BOTH WMS and WFS. The right column lists the corresponding UML attribute names in the SV_ServiceProvider class specified in ISO 19119. The right column does NOT list optional UML attributes that have no corresponding parameter in the ServiceIdentification section. All three columns uses dot-separator notation to specify parts of a parent item.

Table C.7 — Corresponding parameter names


		WMS and WFS parameter

		ServiceProvider parameter

		ISO 19119 UML attribute



		ContactPersonPrimary.‌ContactOrganization 
(optional, optional, mandatory)

		Provider.ProviderName 
(optional, mandatory)

		SV_ServiceProvider.‌providerName 
(optional, mandatory)


SV_ServiceProvider.‌serviceContact.‌organizationName (optional, mandatory, mandatory)



		OnlineResource (mandatory)

		Provider.ProviderSite
(optional, optional)

		(none)



		ContactInformation.‌ContactPersonPrimary.‌ContactPerson 
(optional, optional, mandatory)

		Provider. ServiceContact.‌IndividualName (optional, mandatory, optional)

		SV_ServiceProvider.‌serviceContact.‌individualName (optional, mandatory, optional)



		ContactInformation.‌ContactPersonPrimary.‌ContactPosition 
(optional, optional, mandatory)

		Provider. ServiceContact.‌PositionName (optional, mandatory, optional)

		SV_ServiceProvider.‌serviceContact.‌positionName (optional, mandatory, mandatory)



		(none)

		(none)

		SV_ServiceProvider.‌serviceContact.‌role (optional, mandatory, mandatory)



		(none)

		Provider. ServiceContact.‌ContactInfo.OnlineResource
(optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.onlineResource (optional, mandatory, optional, optional)



		ContactInformation.‌ContactVoiceTelephone (optional, optional)

		Provider. ServiceContact.‌ContactInfo.Phone.Voice (optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.phone.voice 
(optional, mandatory, optional, optional, optional)



		ContactInformation.‌ContactFacsimileTelephone (optional, optional)

		Provider. ServiceContact.‌‌ContactInfo.Phone.Facsimile (optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.phone.facsimile (optional, mandatory, optional, optional, optional)



		ContactInformation.‌ContactAddress.AddressType 
(optional, optional, mandatory)

		(none)

		(none)



		ContactInformation.‌ContactAddress.Address (optional, optional, mandatory)

		Provider.ServiceContact.‌Address.DeliveryPoint (optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.address.‌deliveryPoint (optional, mandatory, optional, optional, optional)



		ContactInformation.‌ContactAddress.City 
(optional, optional, mandatory)

		Provider.ServiceContact.‌Address.City 
(optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.address.city 
(optional, mandatory, optional, optional, optional)



		ContactInformation.‌ContactAddress.‌StateOrProvince 
(optional, optional, mandatory)

		Provider.ServiceContact.‌‌Address.AdministrativeArea (optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.address.‌administrativeArea 
(optional, mandatory, optional, optional, optional)



		ContactInformation.‌ContactAddress.PostCode (optional, optional, mandatory)

		Provider.ServiceContact.‌‌Address.PostalCode 
(optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.address.postalcode (optional, mandatory, optional, optional, optional)



		ContactInformation.‌Contact.Address.Country (optional, optional, mandatory)

		Provider.ServiceContact.‌‌Address.Country 
(optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.address.country (optional, mandatory, optional, optional, optional)



		ContactInformation.‌Contact.ElectronicMailAddress (optional, optional)

		Provider. ServiceContact.‌ElectronicMailAddress (optional, mandatory, optional, optional)

		SV_ServiceProvider.‌serviceContact.‌contactInfo.address. electronicMailAddress 
(optional, mandatory, optional, optional, optional)





C.6
Reasons for OperationsMetadata parameters


The reasons for deciding to include the parameters and subsections listed in the OperationsMetadata section, in Subclause 7.4.5, are briefly stated in the Table C.8.


Table C.8 — Reasons for OperationsMetadata parameters and subsections


		Name

		Reason



		Operation.name 
(mandatory)

		Required to identify operation request.



		Operation.DCP.HTTP.Get (mandatory, optional)

		Required to identify Get connect point of HTTP Distributed Computing Platform.



		Operation.DCP.HTTP.Post.URL (mandatory, optional)

		Required to identify Post connect point URL of HTTP Distributed Computing Platform.



		Operation.DCP.HTTP.Post‌.InputFormat 
(mandatory, optional, mandatory)

		Required to identify Post format(s) of HTTP Distributed Computing Platform.



		Operation.Parameter.name (optional, mandatory)

		Required to identify constrained parameter.



		Operation.Parameter.Value 
(optional, mandatory)

		Required to specify allowed value of constrained parameter.



		Operation.Parameter.‌Metadata 
(optional, mandatory)

		Sometimes useful for constrained parameter information.



		Operation.‌Metadata 
(optional)

		Sometimes useful for specific operation information.



		OperationsMetadata.‌Parameter.name 
(optional, mandatory)

		Required to identify constrained parameter.



		OperationsMetadata.‌Parameter.Value 
(optional, mandatory)

		Required to specify allowed value of constrained parameter.



		OperationsMetadata.‌Parameter.Metadata 
(optional, mandatory)

		Sometimes useful for constrained parameter information.



		Constraint.name 
(optional, mandatory)

		Required to identify constrained quantity.



		Constraint.Value 
(optional, mandatory)

		Required to specify allowed value of constrained quantity.



		Constraint.Metadata 
(optional, mandatory)

		Sometimes useful for constrained quantity information.



		Extended‌Capabilities (optional)

		Sometimes useful for server-specific abilities.





Other reasons for deciding to include many of the parameters and subsections listed in the OperationsMetadata section were that they either or both:


bj) Contain the same information as previously included in both the WMS and WFS Implementation Specifications, in the Capability section


bk) Are included in the service metadata specified in ISO 19119, in the SV_OperationMetadata class

C.7
Reasons for all operations except GetCapabilities minimum parameters


The reasons for deciding to include the minimum parameters listed for all operation request and response messages except GetCapabilities, in Clause 9, are briefly stated in the Table C.9.


Table C.9 — Reasons for minimum parameters in all operations except GetCapabilities 


		Name

		Reason



		service

		The service must be identified in all operation requests because a single endpoint may implement more than one service, and the same operation name may be used by multiple service types.



		request

		The requested operation must be identified in all operation requests because a single endpoint may implement more than one operation.



		version

		The specification version must be identified in all operation requests except GetCapabilities because a single server may support more than one version of a specification, and thus needs to know the specific version of the operation being requested.





C.8
Reasons for Exception Report parameters


The reasons for deciding to include the parameters listed for Exception Reports, in Clause 8, are briefly stated in the Table C.10.


Table C.10 — Reasons for Exception Report parameters


		Name

		Reason



		ExceptionText

		Encourage inclusion of text providing more information about exception



		exceptionCode

		Require inclusion of one of a set of specified exception type identifiers for each exception reported to clients



		locator

		Often useful to provide an indicator of the location in the client's operation request where this exception was encountered 



		version

		Require inclusion of “version” of exception report XML Schema



		language

		Allow and encourage identification of the language used for ExceptionText values





The reasons for deciding to NOT include some possible parameters in Exception Reports are briefly stated in the Table C.11.


Table C.11 — Reasons against Exception Report parameters


		Definition

		Data type and value

		Reason



		Reference to on-line resource used by this operation request

		URL type


Value is URL that received this operation request

		We cannot now identify a use for this parameter (Note 1)



		Service type identifier

		Character String type, not empty


Value is OWS type abbreviation 
(e.g., “WMS”, “WFS”)

		We believe the software that sends an operation request will always receive any corresponding Exception Report (Note 1)



		NOTE 1
Future handling of chained services might require adding parameters such as these.





C.9
Use cases for Sections parameter


The following uses cases have been identified for the Sections parameter, in a GetCapabilities operation request:


bl) A client does NOT need the Contents part of the service metadata document, but needs one or more other parts. This need will occur when either:


1) The client expects that the Contents part of the service metadata document is large, and wants to first check one or more other parts to see if the client can and should use this server.


2) The client has access through another service (e.g., a catalog service) to all the client-needed data contained in the Contents part of the service metadata document.


NOTE 1
If all parts except the Contents part of the service metadata document are relatively small, it would be acceptable to return all parts except the Contents part of the service metadata document even if only one other part is needed.


bm) A client needs only the Contents part of the service metadata document. This need will occur when either:


1) The client has already retrieved the rest of the service metadata document, and now needs the Contents part.


2) The client has already retrieved the complete service metadata document, and now needs to check for any update (which is most likely to affect the Contents part).


NOTE 2
If all parts except the Contents part of the service metadata document are relatively small, it would be acceptable to return all parts of the service metadata document even if only the Contents part is needed.


bn) A client needs all parts of the service metadata document. This need will occur when both:


1) The client has not yet retrieved any part of the service metadata document, and now needs several parts.


2) The client does not have access through another service (e.g., a catalog service) to the client-needed data contained in the Contents part of the service metadata document.


C.10
Requirements for exception reports


The assumed requirements for exception reports include:


bo) Allow one exception report to report multiple errors


bp) Allow exception report to report a hierarchy of error indicators for one basic error


bq) Require exception reports to report one of a set of specified error types for each error


br) Strongly encourage exception reports to also report ad-hoc information about each error


bs) Allow ad-hoc error information to be in various languages


C.11
Version negotiation backward compatibility


The new version negotiation process, defined in Subclause 7.3.2, was designed to be compatible with the old-style version negotiation defined in earlier versions of the various OWS specifications. That old-style version negotiation used the optional “version” parameter in a GetCapabilities request.


The old-style version negotiation process stated that if the “version” parameter is missing, then a service metadata document compliant to the highest-supported version shall be returned. Therefore, if a new client sends a GetCapabilities request containing an AcceptVersions parameter to an old server that does not recognize it, the server will return a service metadata document compliant to the highest version that it supports. The client will either recognize this version, in which case version negotiation has been successful, or it does not. In the situation where the client sees a service metadata document for a version that it does not recognize, the client may optionally revert back to the old-style version negotiation mechanism to complete the negotiation.


A server may also optionally implement the old-style version negotiation mechanism so that old clients that send GetCapabilities requests containing a “version” parameter can be served. If both a “version” and an AcceptVersions parameter exist in a GetCapabilities request, the server shall ignore the “version” parameter.


The old-style version negotiation process is as follows. In response to a GetCapabilities request containing a version number, an OWS shall either respond with output that conforms to that version of the specification, or negotiate a mutually agreeable version if the requested version is not implemented on the server. If no version number is specified in the request, the server shall respond with the highest version it understands and label the response accordingly. Version number negotiation occurs as follows:


bt) If the server implements the requested version number, the server shall send that version.


bu) If the client request is for a version lower than any of those known to the server, then the server shall send the lowest version it knows.


bv) If a version unknown to the server is requested that is NOT lower than any of those known to the server, the server shall send the highest version it knows that is less than the requested version.


bw) If the client does not understand the new version number sent by the server, it may either cease communicating with the server or send a new request with a new version number that the client does understand but which is less than that sent by the server (if the server had responded with a lower version).


bx) If the server responds with a higher version (because the request was for a version lower than any known to the server), and the client does not understand the proposed higher version, then the client may send a new request with a version number higher than that sent by the server.


The process is repeated until a mutually understood version is reached, or until the client determines that it will not or cannot communicate with that particular server.

Bibliography


[1] ISO/IEC 15938-1 - Information Technology - Multimedia Content Description Interface - Part 1: Systems


[2] ISO/TS 19103, Geographic information — Conceptual schema language


[3] OGC 00-014r1, Guidelines for Successful OGC Interface Specifications,


[4] OGC 02-058, Web Feature Service Implementation Specification, v1.0.0


[5] OGC 02-61r2, Web Coordinate Transformation Service Implementation Specification, draft


[6] OGC 03-002r8, Binary-XML Encoding Specification, version 0.0.8


[7] OGC 03-065r6, Web Coverage Service Implementation Specification, v1.0


[8] OGC 03-086, Geographic information — Web Map Service interface, v1.2


		File name: 03-088r6 OWS Common.doc

		





		ii

		OGC 2004 – All rights reserved





		© OGC 2004 – All rights reserved

		iii







_1000170285.doc




Association between classes







role-1







role-2







Association Name







Class #1







Class #2







Association Cardinality







Class







Only one







Class







Zero or more







Class







Optional (zero or one )







1..*







Class







One or more







n







Class







Specific number







Aggregation between classes







Aggregate







Class







Component







Class #1







Component







Class #2







Component







Class #n







……….







0..*







0..1







Class Inheritance (subtyping of classes)







Superclass







Subclass #1







…………..







Subclass #2







Subclass #n















03-088r6/ows19115subset.xsd
 
	 
		 ows19115subset.xsd 2004/1/09
		 
			 This XML Schema encodes the parts of ISO 19115 used by the common "ServiceIdentification" and "ServiceProvider" sections of the GetCapabilities operation response, known as the service metadata XML document. The parts encoded here are the MD_Keywords, CI_ResponsibleParty, and related classes. Primary editor: Arliss Whiteside. 
			 Copyright (c) 2004 OpenGIS, All Rights Reserved. 
		
	
	
	 
	
	 
		 
			 Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe the subject. When needed, the optional "type" can name the type of the associated list of keywords that shall all have the same type. Also when needed, the codeSpace attribute of that "type" can reference the type name authority and/or thesaurus. 
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Type copied from basicTypes.xsd of GML 3.0 with documentation edited. 
			 Name or code with an (optional) authority. If the codeSpace attribute is present, its value should reference a dictionary, thesaurus, or authority for the name or code, such as the organisation who assigned the value, or the dictionary from which it is taken. 
		
		 
			 
				 
			
		
	
	
	
	 
		 
			 Identification of, and means of communication with, person(s) and organizations responsible for the server. 
			 For OWS, the optional OrganizationName element has been removed, since this type is always used with another element which provides that information. 
		
		 
			 
				 
					 Name of the responsible person: surname, given name, title separated by a delimiter. 
				
			
			 
				 
					 Role or position of the responsible person. 
				
			
			 
				 
					 Address of the responsible party. 
				
			
		
	
	
	 
		 
			 Information required to enable contact with the responsible person and/or organization. 
		
		 
			 
				 
					 Telephone numbers at which the organization or individual may be contacted. 
				
			
			 
				 
					 Physical and email address at which the organization or individual may be contacted. 
				
			
			 
				 
					 On-line information that can be used to contact the individual or organization. OWS specifics: The xlink:href attribute in the xlink:simpleLink attribute group shall be used to reference this resource. Whenever practical, the xlink:href attribute with type anyURI should be a URL from which more contact information can be electronically retrieved. The xlink:title attribute with type "string" can be used to name this set of information. The other attributes in the xlink:simpleLink attribute group should not be used. 
				
			
		
	
	
	 
		 
			 Reference to on-line resource from which data can be obtained. 
		
		 
	
	
	 
		 
			 Telephone numbers for contacting the responsible individual or organization. 
		
		 
			 
				 
					 Telephone number by which individuals can speak to the responsible organization or individual. 
				
			
			 
				 
					 Telephone number of a facsimile machine for the responsible
organization or individual. 
				
			
		
	
	
	 
		 
			 Location of the responsible individual or organization. 
		
		 
			 
				 
					 Address line for the location (as described in ISO 11180, Annex A). 
				
			
			 
				 
					 City of the location. 
				
			
			 
				 
					 State or province of the location. 
				
			
			 
				 
					 ZIP or other postal code. 
				
			
			 
				 
					 Country of the physical address. 
				
			
			 
				 
					 Address of the electronic mailbox of the responsible organization or individual. 
				
			
		
	




03-088r6/owsCommon.xsd
 
	 
		 owsCommon.xsd 2004/1/11
		 
			 This XML Schema encodes many of the UML classes that are common to all OWSs. This XML Schema shall be edited by each OWS, for example, to specify a specific value for the "service" attribute. Primary editor: Arliss Whiteside. 
			 Copyright (c) 2004 OpenGIS, All Rights Reserved. 
		
	
	
	 
	 
	 
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. 
		
		 
			 
			 
			 
		
		 
		 
	
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 When omitted, server shall return latest supported version. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". 
				
			
		
		 
		 
			 
				 When omitted or not supported by server, server shall return latest complete service metadata document. 
			
		
	
	
	 
	
	 
		 
			 XML encoded operation request base, for all operations except Get Capabilities. In this XML encoding, no "request" parameter is included, since the final element name will specify the specific operation. Also, no "service" parameter is included, since the value of this parameter is specified by specific OWS schemas. 
		
		 
		 
	
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	
	 
		 
			 Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information.  
		
		 
			 
		
	
	
	 
		 
			 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. 
		
		 
	
	
	 
		 
			 Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. 
		
		 
			 
		
	




03-088r6/owsExceptionReport.xsd
 
	 
		 owsExceptionReport.xsd 2004/1/11
		 
			 This XML Schema encodes the Exception Report response to all OWS operations. Primary editor: Arliss Whiteside. 
			 Copyright (c) 2004 OpenGIS, All Rights Reserved. 
		
	
	
	 
	
	 
		 
			 Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request. 
		
		 
			 
				 
					 
						 Unordered list of one or more Exception elements that each describes an error. These Exception elements shall be interpreted by clients as being independent of one another (not hierarchical). 
					
				
			
			 
				 
					 The version of the Implementation Specification (document) to which this Exception Report conforms. 
				
			
			 
				 
					 Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 1766. When this attribute is omitted, the language used is not identified. 
				
			
		
	
	
	 
		 
			 An Exception element describes one detected error that a server chooses to convey to the client. 
		
		 
			 
				 
					 Ordered sequence of text strings that describe this specific exception or error. The contents of these strings are left open to definition by each server implementation. A server is strongly encouraged to include at least one ExceptionText value, to provide more information about the detected error than provided by the exceptionCode. When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first. 
				
			
		
		 
			 
				 A code representing the type of this exception, which shall be selected from a set of exceptionCode values specified for the specific service operation and server. 
			
		
		 
			 
				 When included, this locator shall indicate to the client where an exception was encountered in servicing the client's operation request. This locator should be included whenever meaningful information can be provided by the server. The contents of this locator will depend on the specific exceptionCode and OWS service, and shall be specified in the OWS Implementation Specification. 
			
		
	
	
	 
		 
			 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
		
		 
	




03-088r6/owsOperationsMetadata.xsd
 
	 
		 owsOperationsMetadata.xsd 2004/1/11
		 
			 This XML Schema encodes the basic contents of the "OperationsMetadata" (formerly "Capability") section of the GetCapabilities operation response, also known as the Capabilities XML document. 
			 Copyright (c) 2004 OpenGIS, All Rights Reserved. 
		
	
	
	 
	
	 
		 
			 Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements. 
		
		 
			 
				 
					 
						 Metadata for unordered list of all the (requests for) operations that this server interface implements. The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of parameter valid domains that each apply to two or more operations which this server interface implements. The list of required and optional parameter domain limitations shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this server. The list of required and optional constraints shall be specified in the Implementation Specification for this service. 
					
				
				 
			
		
	
	
	 
		 
			 Individual software vendors and servers can use this element to provide metadata about any additional server abilities. 
		
	
	
	 
		 
			 Metadata for one operation that this server implements. 
		
		 
			 
				 
					 
						 Unordered list of Distributed Computing Platforms (DCPs) supported for this operation. At present, only the HTTP DCP is defined, so this element will appear only once. 
					
				
				 
					 
						 Optional unordered list of parameter domains that each apply to this operation which this server implements. If one of these Parameter elements has the same "name" attribute as a Parameter element in the OperationsMetadata element, this Parameter element shall override the other one for this operation. The list of required and optional parameter domain limitations for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of additional metadata about this operation and its' implementation. A list of required and optional metadata elements for this operation should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the operation request parameters or provide the XML Schemas for the operation request.) 
					
				
			
			 
				 
					 Name or identifier of this operation (request) (for example, GetCapabilities). The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
				
			
		
	
	
	 
		 
			 Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.

		
		 
			 
				 
			
		
	
	
	 
		 
			 Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup. 
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Connect point URL prefix for the HTTP "Get" request method for this operation request. The xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL prefix. The other attributes in the xlink:simpleLink attribute group should not be used. 
		
	
	
	 
		 
			 Connect point URL and accepted format(s) for the HTTP "Post" request method for this operation request. In the OnlineResourceType, the xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL. The other attributes in the xlink:simpleLink attribute group should not be used. 
		
		 
			 
				 
					 
						 
							 
								 Format MIME types of operation requests that can be sent to this Post connect point URL. 
							
						
					
				
			
		
	
	
	 
		 
			 Data transfer format identifier, identified by its MIME type. 
		
		 
	
	
	 
		 
			 Valid domain (or set of values) of one parameter or other quantity used by this server. A non-parameter quantity may not be explicitly represented in the server software. (Informative: An example is the outputFormat parameter of a WFS. Each WFS server should provide a Parameter element for the outputFormat parameter that lists the supported output formats, such as GML2, GML3, etc. as the allowed "Value" elements.) 
		
		 
			 
				 
					 Unordered list of all the valid values for this parameter or other quantity. For those parameters that contain a list or sequence of values, these values shall be for individual values in the list. The allowed set of values and the allowed server restrictions on that set of values shall be specified in the Implementation Specification for this service. 
				
			
			 
				 
					 Optional unordered list of additional metadata about this parameter. A list of required and optional metadata elements for this domain should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the meanings of the valid values.) 
				
			
		
		 
			 
				 Name or identifier of this parameter or other quantity. 
			
		
	
	
	 
		 
			 This element either references or contains more metadata about the element that includes this element. Either at least one of the attributes in xlink:simpleLink or a substitute for the _MetaData element shall be included, but not both. An Implementation Specification can restrict the contents of this element to always be a reference or always contain metadata. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.) 
		
		 
			 
				 
			
			 
				 
					 Reference to metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, the xlink:href attribute with type anyURI should include a URL from which this metadata can be electronically retrieved. 
				
			
			 
				 
					 Optional reference to the aspect of the element which includes this "metadata" element that this metadata provides more information about. 
				
			
		
	
	
	 
		 
			 Abstract element containing more metadata about the element that includes the containing "metadata" element. An Implementation Specification can define concrete elements in the _MetaData substitution group. 
		
	




03-088r6/owsServiceIdentification.xsd
 
	 
		 owsServiceIdentification.xsd 2004/1/11
		 
			 This XML Schema encodes the common "ServiceIdentification" (formerly part of the "Service") section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceIdentification class of ISO 19119 (OGC Abstract Specification Topic 12). Primary editor: Arliss Whiteside. 
			 Copyright (c) 2004 OpenGIS, All Rights Reserved. 
		
	
	
	 
	
	 
		 
			 General metadata for this specific server. This XML Schema of this section shall be the same for all OWS. 
		
		 
			 
				 
					 
						 A service type name from a registry of services. For example, the values of the nameSpace attribute and name and name string may be "OGC" and "catalogue." This name is normally used for machine-to-machine communication. 
					
				
				 
					 
						 Unordered list of one or more versions of this service type implemented by this server. This information is not adequate for version negotiation, and shall not be used for that purpose. 
					
				
				 
					 
						 Title of this server, normally used for display to a human. 
					
				
				 
					 
						 Brief narrative description of this server, normally used for display to a human. 
					
				
				 
				 
					 
						 Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE shall be used to mean no fees or terms. If this element is omitted, no meaning is implied. 
					
				
				 
					 
						 Unordered list of access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE shall be used to mean no access constraints are imposed. If this element is omitted, no meaning is implied. 
					
				
			
		
	
	
	 
		 
			 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
		
		 
	




03-088r6/owsServiceProvider.xsd
 
	 
		 owsServiceProvider.xsd 2004/1/09
		 
			 This XML Schema encodes the common "ServiceProvider" (formerly part of the "Service") section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceProvider class of ISO 19119 (OGC Abstract Specification Topic 12). Primary editor: Arliss Whiteside. 
			 Copyright (c) 2004 OpenGIS, All Rights Reserved. 
		
	
	
	 
	
	 
		 
			 Metadata about the organization that provides this specific service instance or server. 
		
		 
			 
				 
					 
						 A unique identifier for the service provider organization. 
					
				
				 
					 
						 Reference to the most relevant web site of the service provider. 
					
				
				 
					 
						 Information for contacting the service provider. The OnlineResource element within this ServiceContact element should not be used to reference a web site of the service provider. 
					
				
			
		
	



