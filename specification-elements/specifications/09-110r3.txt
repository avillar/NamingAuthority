
Open Geospatial Consortium Inc.  
Date:  2010-10-27 

Reference number of this Document: OGC 09-110r3 

Version: 2.0.0 

Category: OpenGIS® Interface Standard 

Editor:  Peter Baumann 

OGC® WCS 2.0 Interface Standard - Core 
 

 

Copyright © 2010 Open Geospatial Consortium 
To obtain additional rights of use, visit http://www.opengeospatial.org/legal/. 

 
 

 

Warning 

This document is an OGC Member approved international standard. This document is avail-
able on a royalty free, non-discriminatory basis. Recipients of this document are invited to 
submit, with their comments, notification of any relevant patent rights of which they are 
aware and to provide supporting documentation. 

 

 

 

 

 

Document type: OpenGIS® Interface Standard 
Document subtype: Core 
Document stage: Approved 
Document language: English 

 

http://www.opengeospatial.org/legal/


 

ii Copyright © 2012 Open Geospatial Consortium 
 

License Agreement 

Permission is hereby granted by the Open Geospatial Consortium, ("Licensor"), free of charge and subject to the terms set forth below, 
to any person obtaining a copy of this Intellectual Property and any associated documentation, to deal in the Intellectual Property 
without restriction (except as set forth below), including without limitation the rights to implement, use, copy, modify, merge, publish, 
distribute, and/or sublicense copies of the Intellectual Property, and to permit persons to whom the Intellectual Property is furnished to 
do so, provided that all copyright notices on the intellectual property are retained intact and that each person to whom the Intellectual 
Property is furnished agrees to the terms of this Agreement. 

If you modify the Intellectual Property, all copies of the modified Intellectual Property must include, in addition to the above 
copyright notice, a notice that the Intellectual Property includes modifications that have not been approved or adopted by LICENSOR. 

THIS LICENSE IS A COPYRIGHT LICENSE ONLY, AND DOES NOT CONVEY ANY RIGHTS UNDER ANY PATENTS 
THAT MAY BE IN FORCE ANYWHERE IN THE WORLD. 

THE INTELLECTUAL PROPERTY IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
PURPOSE, AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. THE COPYRIGHT HOLDER OR HOLDERS INCLUDED 
IN THIS NOTICE DO NOT WARRANT THAT THE FUNCTIONS CONTAINED IN THE INTELLECTUAL PROPERTY WILL 
MEET YOUR REQUIREMENTS OR THAT THE OPERATION OF THE INTELLECTUAL PROPERTY WILL BE 
UNINTERRUPTED OR ERROR FREE. ANY USE OF THE INTELLECTUAL PROPERTY SHALL BE MADE ENTIRELY AT 
THE USER’S OWN RISK. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ANY CONTRIBUTOR OF 
INTELLECTUAL PROPERTY RIGHTS TO THE INTELLECTUAL PROPERTY BE LIABLE FOR ANY CLAIM, OR ANY 
DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING 
FROM ANY ALLEGED INFRINGEMENT OR ANY LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF 
CONTRACT, NEGLIGENCE OR UNDER ANY OTHER LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH 
THE IMPLEMENTATION, USE, COMMERCIALIZATION OR PERFORMANCE OF THIS INTELLECTUAL PROPERTY. 

This license is effective until terminated. You may terminate it at any time by destroying the Intellectual Property together with all 
copies in any form. The license will also terminate if you fail to comply with any term or condition of this Agreement. Except as 
provided in the following sentence, no such termination of this license shall require the termination of any third party end-user 
sublicense to the Intellectual Property which is in force as of the date of notice of such termination. In addition, should the Intellectual 
Property, or the operation of the Intellectual Property, infringe, or in LICENSOR’s sole opinion be likely to infringe, any patent, 
copyright, trademark or other right of a third party, you agree that LICENSOR, in its sole discretion, may terminate this license 
without any compensation or liability to you, your licensees or any other party. You agree upon termination of any kind to destroy or 
cause to be destroyed the Intellectual Property together with all copies in any form, whether held by you or by any third party. 

Except as contained in this notice, the name of LICENSOR or of any other holder of a copyright in all or part of the Intellectual 
Property shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Intellectual Property without 
prior written authorization of LICENSOR or such copyright holder. LICENSOR is and shall at all times be the sole entity that may 
authorize you or any third party to use certification marks, trademarks or other special designations to indicate compliance with any 
LICENSOR standards or specifications. 

This Agreement is governed by the laws of the Commonwealth of Massachusetts. The application to this Agreement of the United 
Nations Convention on Contracts for the International Sale of Goods is hereby expressly excluded. In the event any provision of this 
Agreement shall be deemed unenforceable, void or invalid, such provision shall be modified so as to make it valid and enforceable, 
and as so modified the entire Agreement shall remain in full force and effect. No decision, action or inaction by LICENSOR shall be 
construed to be a waiver of any rights or remedies available to it. 

None of the Intellectual Property or underlying information or technology may be downloaded or otherwise exported or reexported in 
violation of U.S. export laws and regulations. In addition, you are responsible for complying with any local laws in your jurisdiction 
which may impact your right to import, export or use the Intellectual Property, and you represent that you have complied with any 
regulations or registration procedures required by applicable law to make this license enforceable 
  



OGC 09-110r3 

Content Page 

i. Preface ..................................................................................................................... v 
ii. Terms and definitions ............................................................................................. v 
iii. Submitting organizations ........................................................................................ v 
iv. Document Contributor Contact Points ................................................................... vi 
v. Revision history ..................................................................................................... vi 

vi. Changes to the OpenGIS® Abstract Specification ................................................. vi 
vii. Future Work ........................................................................................................... vi 
1 Scope ....................................................................................................................... 1 
2 Conformance ........................................................................................................... 1 
3 Normative references .............................................................................................. 1 
4 Terms and definitions ............................................................................................. 2 

4.1 coverage ............................................................................................................ 2 
4.2 GML coverage…. ............................................................................................. 2 
4.3 offered coverage ................................................................................................ 2 
4.4 (coverage) subsetting ........................................................................................ 2 
4.5 (coverage) trimming .......................................................................................... 3 
4.6 (coverage) slicing .............................................................................................. 3 

5 Conventions ............................................................................................................ 3 
5.1 Use of term “coverage” ..................................................................................... 3 
5.2 UML notation .................................................................................................... 3 
5.3 Data dictionary tables ....................................................................................... 3 
5.4 Namespace prefix conventions ......................................................................... 4 
5.5 XPath / Schematron notation ............................................................................ 4 
5.6 Multiple representations ................................................................................... 4 

6 WCS data model ..................................................................................................... 4 
6.1 Overview ........................................................................................................... 4 
6.2 OfferedCoverage ............................................................................................... 5 
6.3 Coverages .......................................................................................................... 6 
6.4 ServiceParameters ............................................................................................. 6 
6.5 ServiceMetadata ................................................................................................ 8 

7 WCS  service model ................................................................................................ 9 
7.1 WCS operation types ........................................................................................ 9 
7.2 WCS service handling package ...................................................................... 10 

8 WCS operations .................................................................................................... 11 
8.1 Overview ......................................................................................................... 11 
8.2 GetCapabilities operation................................................................................ 11 

8.2.1 GetCapabilities request ............................................................................. 11 
8.2.2 GetCapabilities response ........................................................................... 12 

ii Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 

8.2.3 Sample GetCapabilities response .............................................................. 14 
8.2.4 GetCapabilities exceptions ....................................................................... 16 

8.3 DescribeCoverage operation ........................................................................... 16 
8.3.1 DescribeCoverage request ........................................................................ 16 
8.3.2 DescribeCoverage response ...................................................................... 16 
8.3.3 DescribeCoverage exceptions ................................................................... 20 

8.4 GetCoverage operation ................................................................................... 20 
8.4.1 GetCoverage request ................................................................................. 21 
8.4.2 GetCoverage response .............................................................................. 24 
8.4.3 GetCoverage exceptions ........................................................................... 27 

8.5 Information Coherence ................................................................................... 28 
9 Extensions ............................................................................................................. 28 

9.1 Index-based subsetting .................................................................................... 29 
9.2 Protocol binding .............................................................................................. 29 
9.3 Coverage encoding formats ............................................................................ 29 

Bibliography ..................................................................................................................... 30 
Annex A (normative)  Abstract test suite ......................................................................... 31 

A.1 Conformance Test Class: core ........................................................................ 31 
A.1.1 Coverage structure contains Envelope ...................................................... 31 
A.1.2 Coverage structure contains srsName ....................................................... 31 
A.1.3 Coverage structure contains axisLabels .................................................... 31 
A.1.4 Coverage element name dictionary ........................................................... 32 
A.1.5 Coverage element name lookup ................................................................ 32 
A.1.6 ServiceMetadata structure................................................................ 33 
A.1.7 GetCapabilities: Profile lists valid external conformance classes ...... 33 
A.1.8 GetCapabilities response contents: OperationsMetadata ......................... 34 
A.1.9 Request base .............................................................................................. 34 
A.1.10 Service name ............................................................................................. 34 
A.1.11 Version value ............................................................................................ 35 
A.1.12 Correct GetCapabilities request structure ................................................. 35 
A.1.13 Correct GetCapabilities response structure .............................................. 35 
A.1.14 GetCapabilities response contents: service metadata ............................... 35 
A.1.15 GetCapabilities response contents: CoverageSummary ........................... 36 
A.1.16 DescribeCoverage supported .................................................................... 36 
A.1.17 Correct DescribeCoverage request structure ............................................ 36 
A.1.18 Valid coverage identifiers in DescribeCoverage request ......................... 37 
A.1.19 Correct DescribeCoverage response structure ......................................... 37 
A.1.20 DescribeCoverage returns information on all coverages requested ......... 37 
A.1.21 Correct DescribeCoverage response contents .......................................... 38 
A.1.22 DescribeCoverage srsName value ............................................................ 38 
A.1.23 DescribeCoverage exceptions ................................................................... 38 
A.1.24 GetCoverage supported ............................................................................. 39 
A.1.25 GetCoverage request structure .................................................................. 39 
A.1.26 GetCoverage request addresses existing coverage ................................... 39 
A.1.27 GetCoverage subsetting: allowed coverage types .................................... 40 
A.1.28 GetCoverage request parameter dimension ......................................... 40 
A.1.29 No duplicate dimension subsetting in GetCoverage ................................. 40 

iii Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 

A.1.30 GetCoverage trimming within coverage limits ......................................... 41 
A.1.31 GetCoverage slicing within coverage limits ............................................. 41 
A.1.32 GetCoverage response structure ............................................................... 41 
A.1.33 Correct coverage representation in GetCoverage result ........................... 42 
A.1.34 Correct coverage contents in GetCoverage result .................................... 42 
A.1.35 GetCoverage trimming operation ............................................................. 42 
A.1.36 GetCoverage slicing operation ................................................................. 43 
A.1.37 Dimension subsetting sequence invariance in GetCoverage .................... 43 
A.1.38 GetCoverage exceptions ........................................................................... 43 
A.1.39 Information coherence across request types ............................................. 44 
A.1.40 Grid subsetting .......................................................................................... 44 
A.1.41 Protocol binding extensions ...................................................................... 45 
A.1.42 Coverage encoding format extensions ...................................................... 45 

Tables Page 
Table 1 — Namespace mappings ............................................................................... 4 
Table 2 — WCS CoverageOfferings components ........................................... 5 
Table 3 — WCS OfferedCoverage components ................................................ 5 
Table 4 — WCS WcsServiceParameters components ................................... 7 
Table 5 — WCS WCSServiceMetadata additional components ..................... 8 
Table 6 — DescribeCoverage components ..................................................... 17 
Table 7 — WCS CoverageDescriptions components .................................. 18 
Table 8 — WCS CoverageDescription components ..................................... 18 
Table 9 — Exception codes for DescribeCoverage operation ......................... 20 
Table 10 — WCS GetCoverage operation request ............................................... 21 
Table 11 — WCS DimensionSubset structure ................................................... 22 
Table 12 — WCS DimensionTrim structure ........................................................ 23 
Table 13 — WCS DimensionSlice structure ...................................................... 23 
Table 14 — Exception codes for GetCoverage operation ..................................... 28 
 

iv Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 

v Copyright © 2010 Open Geospatial Consortium
 

i. Preface 

This document specifies the service core of an OGC Web Coverage Service (WCS). As such, 
it is based on the GML Application Schema for Coverages [OGC 09-146r1], OWS Common 
[OGC 06-121r9], and OGC Abstract Topic 6 [OGC 07-011]. 

Suggested additions, changes, and comments on this draft document are welcome and en-
couraged. Such suggestions may be submitted by email message or by making suggested 
changes in an edited copy of this document. 

ii. Terms and definitions 

This document uses the standard terms defined in Subclause 5.3 of [OGC 06-121r9], which is 
based on the ISO/IEC Directives, Part 2, Rules for the structure and drafting of International 
Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a 
requirement to be strictly followed to conform to this standard. 

iii. Submitting organizations 

The following organizations have submitted this Interface Specification to the Open Geospa-
tial Consortium, Inc.: 

• Jacobs University Bremen 
• National Center for Atmospheric Re-

search (NCAR) 
• Oracle USA 
• PCI Geomatics Inc. 
• ERDAS, Inc. 

• EOX IT Services GmbH 
• Spot Image 
• BAE Systems - C3I Systems 
• Natural Environment Research Council 

(NERC) 
• George Mason University 

 



 OGC 09-110

 

vi Copyright © 2010 Open Geospatial Consortium
 

iv. Document Contributor Contact Points 

 Name Organization  
Peter Baumann Jacobs University Bremen, rasdaman GmbH 
Andrei Aiordachioaie Jacobs University Bremen 
Jinsongdi Yu Jacobs University Bremen 
Arliss Whiteside BAE Systems 
Max Martinez ERDAS, Inc. 

 

 

v. Revision history 
Date Release Author Paragraph 

modified
Description 

2009-11-08 2.0.0 Peter Baumann, 
Andrei Aiordachioiae

All Created

vi. Changes to the OpenGIS® Abstract Specification 

The OpenGIS® Abstract Specification does not require any changes to accommodate the 
technical contents of this (part of this) document. 

vii.  Future Work 

Based on this WCS core interface standard, several extensions are foreseen; see [6] for a ten-
tative list. 



OGC 09-110r3 
 

Foreword 

This version 2.0 of the Web Coverage Service (WCS) Interface Standard improves (but does 
not supersede) previous version 1.1.2 [1]. Technical changes from WCS version 1.1.2 include 
building on the GML 3.2 encoding of coverages, and dividing the standard into this core plus 
multiple extensions. 

This document includes one annex; this annex is normative. 

Attention is drawn to the possibility that some of the elements of this document may be the 
subject of patent rights. The Open Geospatial Consortium Inc. shall not be held responsible 
for identifying any or all such patent rights. 

Recipients of this document are requested to submit, with their comments, notification of any 
relevant patent claims or other intellectual property rights of which they may be aware that 
might be infringed by any implementation of the standard set forth in this document, and to 
provide supporting documentation. 

 

Copyright © 2010 Open Geospatial Consortium  vii
 



OGC 09-110r3 
 

viii Copyright © 2010 Open Geospatial Consortium
 

Introduction 

The OGC Web Coverage Service (WCS) supports electronic retrieval of geospatial data as 
"coverages" – that is, digital geospatial information representing space/time-varying phe-
nomena. 

This document specifies the WCS core; every implementation of a WCS shall adhere to this 
standard. This standard thus defines only basic requirements. Extensions to the core  will 
define extensions to meet additional requirements, such as the response encoding. Indeed, 
additional extensions are required in order to completely specify a WCS for implementation. 

A WCS provides access to coverage data in forms that are useful for client-side rendering, as 
input into scientific models, and for other clients. The WCS may be compared to the OGC 
Web Feature Service (WFS) [4] and the Web Map Service (WMS) [5]. As WMS and WFS 
service instances, a WCS allows clients to choose portions of a server's information holdings 
based on spatial constraints and other query criteria. 

Unlike WMS, which portrays spatial data to return static maps (rendered as pictures by the 
server), the Web Coverage Service provides available data together with their detailed de-
scriptions; defines a rich syntax for requests against these data; and returns data with its 
original semantics (instead of pictures) which may be interpreted, extrapolated, etc., and not 
just portrayed. 

Unlike WFS, which returns discrete geospatial features, the Web Coverage Service returns 
coverages representing space/time-varying phenomena that relate a spatio-temporal domain 
to a (possibly multidimensional) range of properties. As such, WCS focuses on coverages as 
a specialized class of features and, correspondingly, defines streamlined functionality. 

WCS 2.0 uses the coverage model of the GML Application Schema for Coverages [OGC 09-
146r1] which has been developed with the goal that coverages handled by a WCS can be 
more easily interchanged with other OGC services. WCS 2.0 supports all coverage types 
supported by said Application Schema; it is not constrained to quadrilateral grid coverages 
like previous WCS versions. 

Explanations and best practices for users and implementers of WCS 2.0 are provided in [6]. 

 



OGC 09-110r3 
 

OGC® WCS 2.0 Interface Standard - 
Core 

1 Scope  

This document specifies how a Web Coverage Service (WCS) offers multi-dimensional cov-
erage data for access over the Internet. This document specifies a core set of requirements 
that a WCS implementation must fulfil. WCS extension standards add further functionality to 
this core; some of these are required in addition to the core to obtain a complete implementa-
tion. This document indicates which extensions, at a minimum, need to be considered in ad-
dition to this core to allow for a complete WCS implementation. 

This core does not prescribe support for any particular coverage encoding format. This also 
holds for GML as a coverage delivery format: while GML constitutes the canonical format 
for the definition of WCS, it is not required by this core that a WCS implements the GML 
coverage format. WCS extensions specifying use of data encoding formats in the context of 
WCS are designed in a way that the GML coverage information contents specified in this 
core is consistent with the contents of an encoded coverage. 

2 Conformance 

Standardization target are WCS 2.0 implementations (currently: servers).  

This document establishes a single requirements class, core, of  
http://www.opengis.net/spec/WCS/2.0/req/core with a single pertaining conformance class, 
core, with URI http://www.opengis.net/spec/WCS/2.0/conf /core. Requirements and confor-
mance test URIs defined in this document are relative to 
http://www.opengis.net/spec/WCS/2.0/. 

Annex A lists the conformance tests which shall be exercised on any software artefact claim-
ing to implement an OGC WCS.  

3 Normative references 

This OGC WCS 2.0 Core specification consists of the present document and an XML 
Schema. The complete specification is identified by OGC URI 
http://www.opengis.net/spec/WCS/2.0, the document has OGC URI 
http://www.opengis.net/doc/IS/WCS/2.0.  

The complete specification is available for download from 
http://www.opengeospatial.org/standards/wcs; additionally, the XML Schema is posted 
online at http://schemas.opengis.net/wcs/2.0/ as part of the OGC schema repository. In the 
event of a discrepancy between bundled and schema repository versions of the XML Schema 
files, the schema repository shall be considered authoritative. 

The following normative documents contain provisions that, through reference in this text, 
constitute provisions of this specification. For dated references, subsequent amendments to, 

Copyright © 2010 Open Geospatial Consortium  1
 

http://www.opengis.net/spec/WCS/2.0/req/core
http://www.opengis.net/spec/WCS/2.0/conf-class/core
http://www.opengis.net/spec/WCS/2.0/
http://www.opengis.net/spec/WCS/2.0
http://www.opengis.net/doc/IS/WCS/2.0
http://www.opengeospatial.org/standards/wcs
http://schemas.opengis.net/wcs/2.0/


OGC 09-110r3 
 

or revisions of, any of these publications do not apply. For undated references, the latest edi-
tion of the normative document referred to applies. 

OGC 07-036, Geography Markup Language (GML) Encoding Standard, version 3.2.1  
Conformance classes used: 

• GML writing 

OGC 06-121r9, OGC Web Service Common Specification, version 2.0  
Conformance classes used: 

• GetCapabilities operation (Clause 7) 

OGC 09-146r1, OGC® GML Application Schema for Coverages, version 1.0 
Conformance classes used: 

• gml-coverage 
OGC 10-151, OGC® Web Coverage Service 2.0 Interface Standard – Index Subsetting Exten-
sion, version 1.0 

Conformance classes used: 
• index-subsetting 

4 Terms and definitions 

For the purposes of this document, the terms and definitions given in the above references 
apply. In addition, the following terms and definitions apply. 

4.1 coverage 

feature that acts as a function to return values from its range for any direct position within its 
spatiotemporal domain [OGC 07-111] 

4.2 GML coverage…. 

feature which is a concrete subclass (specialization) of gmlcov:AbstractCoverage 

NOTE The term “GML coverage” does not imply that such a coverage always needs to be represented 
by a GML document; a coverage can well be represented by some well-known encoding different from 
GML as long as the data model contents is semantically equivalent. 

4.3 offered coverage 

extended →GML coverage structure, stored on a WCS server and accessible by clients via 
WCS operations, which additionally carries WCS service relevant information 

4.4 (coverage) subsetting 

operation on →GML coverages which, for a coverage provided, extracts part or all of its 
cell/value pairs and returns a →GML coverage containing these cell/value pairs 

2 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

4.5 (coverage) trimming 

→ GML coverage subsetting operation which returns a →coverage with the same number of 
dimensions as the input → GML coverage 

4.6 (coverage) slicing 

→ GML coverage subsetting operation which returns a → GML coverage with a reduced 
number of dimensions as compared to the input → GML coverage 

5 Conventions 

5.1 Use of term “coverage” 

The definition of “coverage” in Subclause 4.1 is the generic one provided by Abstract Topic 
6 [OGC 07-111]. The term “GML coverage” is coined to denote the concrete data structure 
definition provided in the document on hand, relying on the GML Application Schema for 
Coverages [OGC 09-146r1] and SWE Common [OGC 08-094]. 

For the remainder of this document, “coverage” shall be understood as shorthand for “GML 
coverage” unless explicitly stated otherwise. 

5.2 UML notation 

Unified Modeling Language (UML) static structure diagrams appearing in this specification 
are used as described in Subclause 5.2 of OGC Web Service Common [OGC 06-121r9]. Fur-
ther, the following conventions hold: 

• UML elements having a package name of “OWS Common” are those defined in the 
UML model of OWS Common [OGC 06-121r9]. 

• UML elements having a package name of GML are those defined in the UML model 
of GML [OGC 07-036]. 

• UML elements having a package name of “SWE Common” are those defined in the 
UML model of SWE Common [OGC 08-094]. 

• UML elements having a package name of GMLCOV are those defined in the UML 
model of the GML Application Schema for Coverages [OGC 09-146r1]. 

• UML elements not qualified with a package name are those defined in this Standard. 

• UML data type Any is used here as an equivalence to XML’s xsd:any. 

5.3 Data dictionary tables 

The UML model data dictionary is specified herein in a series of tables. The contents of the 
columns in these tables are described in Subclause 5.5 of [OGC 06-121r9]. The contents of 
these data dictionary tables are normative, including any table footnotes. 

For the reader’s convenience, table rows describing inherited components are shaded. 

Copyright © 2010 Open Geospatial Consortium  3
 



OGC 09-110r3 
 

5.4 Namespace prefix conventions 

The following namespaces are used in this document. The prefix abbreviations used consti-
tute conventions used here, but are not normative. The namespaces to which the prefixes 
refer are normative, however. 
 

Table 1 — Namespace mappings 

Prefix Namespace URI Description 

xsd http://www.w3.org/2001/XMLSchema  XML Schema 

gml http://www.opengis.net/gml/3.2  GML 3.2.1 

gmlcov http://www.opengis.net/gmlcov/1.0 GML Application Schema for Coverages 
1.0 

wcs http://www.opengis.net/wcs/2.0 WCS 2.0 

 
5.5 XPath / Schematron notation 

Requirements on the contents of XML documents, derivation of complex entities, and the 
contents of WCS responses are specified herein using XPath 2.0 and Schematron. 

5.6 Multiple representations 

When multiple representations of the same information are given in a specification document, 
then reference to the XML schema takes precedence. 

6 WCS data model 

6.1 Overview 

This clause specifies the underlying coverage data model used in the later clauses of this 
standard. For reasons of extensibility and flexibility, many components of the core GML 
structure CoverageOfferings introduced in this standard are left underspecified (e.g., in 
terms of multiplicity of the elements or proper semantics and use of a component), sometimes 
even in cases where other standards applying (like OWS Common and SWE Common) leave 
such details open. Any item thus underspecified can be handled arbitrarily by implementa-
tions – among others, a server is free to deliver optional elements or not, and a client is free 
to ignore optional elements when present. Note, however, that WCS extensions may regulate 
further syntax and semantics of such underspecified items. 

A WCS server offers a – possibly empty – set of coverage objects. The offering of a WCS 
server is described by a single instance of type CoverageOfferings. The components of 
CoverageOfferings are as shown in Figure 1 and Table 2. 

 

4 Copyright © 2010 Open Geospatial Consortium
 

http://www.w3.org/2001/XMLSchema
http://www.opengis.net/gml/3.2
http://www.opengis.net/gmlcov/1.0
http://www.opengis.net/wcs/2.0


OGC 09-110r3 
 

class Cov erageOfferings

«FeatureType»
OfferedCov erage

«Data Type»
Cov erageOfferings

{1}

Feature

«FeatureType»
GMLCOV::Coverage

«Data Type»
Serv iceParameters

+ coverageSubtype:  QName
+ extension:  Any [0..*]

details omitted here

OWSServiceMetadata

«DataType»
Serv iceMetadata

1*
+wcsServiceMetadata

+offeredCoverage

0..* 1

+ extension:  Any [0..*]

1
+coverage

1
+serviceParameters

1 1

 

Figure 1 — CoverageOfferings UML class diagram 

Table 2 — WCS CoverageOfferings components 

Name Definition Data type Multiplicity 
offered-
Coverage 

Set of coverages offered by 
this service 

OfferedCoverage zero or more  
(optional) 

service-
Metadata 

Information specific to this 
WCS service as a whole 

ServiceMetadata one  
(mandatory) 

 

6.2 OfferedCoverage 

An OfferedCoverage is a coverage as specified in the GML Application Schema for Cov-
erages [OGC 09-146r1] and the further standards referenced therein. The components of an 
OfferedCoverage are detailed in Figure 1 and Table 3. 

Table 3 — WCS OfferedCoverage components 

Name Definition Data type Multiplicity 
coverage The coverage  GMLCOV::Coverage one  

(mandatory) 

service-
Parameters 

Service parameters individual 
for the coverage on hand 

ServiceParameters zero or more 
(optional) 

Copyright © 2010 Open Geospatial Consortium  5
 



OGC 09-110r3 
 

 

Coverages are uniquely identified within a service through the GML::Id attribute of the root 
of the coverage component. The corresponding requirement is stated in Subclause 8.5. 

NOTE Class GMLCOV::AbstractCoverage inherits this attribute from class GML::Abs-
tractFeature according to GML [OGC 07-036] and the GML Application Schema for Coverages 
[OGC 09-146r1]. 

6.3 Coverages 

Coverages offered through a WCS need to fulfil particular requirements to allow for the 
WCS operations. Concretely, coordinate-based subsetting is based on the gml:Envelope 
structure of a coverage; to this end, this optional GML element is made mandatory in this 
Core. The gml:Envelope is part of the gml:boundedBy element which is defined in 
gml:AbstractFeature, cf. [OGC 09-146r1]. As both DescribeCoverage and GetCover-
age responses inherit from gml:AbstractFeature, the gml:boundedBy element can be 
provided by both. 

Requirement 1 /req/core/structure-boundedBy: 
The coverage element of every gmlcov:OfferedCoverage shall contain a valid 
gml:boundedBy element. 
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage 

NOTE Requirements on the contents of this element are specified in [OGC 07-036]. 

Additionally, this gml:boundedBy element shall specify an srsName attribute. 

Requirement 2 /req/core/structure-with-srsName: 
The srsName attribute in the gml:Envelope element of a gmlcov:OfferedCoverage 
shall not be empty. 
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage 

NOTE Requirements on the contents of this attribute are specified in [OGC 07-036]. 

The gml:boundedBy element of a coverage shall specify an axisLabels attribute con-
taining the coverage’s dimension axis names. This is necessary as domain subsetting refers to 
them. 

Requirement 3 /req/core/structure-with-axisLabels: 
The axisLabels attribute in the gml:Envelope element of a gmlcov:OfferedCov-
erage shall not be empty. 
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage 

NOTE Requirements on the contents of this attribute are specified in [OGC 07-036]. 

It follows the construction rules given in OWS Common [OGC 06-121r9]. 

6.4 ServiceParameters 

WCS ServiceParameters include coverage-specific information about functionality the 
server can offer on a particular coverage (as opposed to the overall service description pro-

6 Copyright © 2010 Open Geospatial Consortium
 

http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage
http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage
http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage


OGC 09-110r3 
 

vided by ServiceMetadata, see Subclause 6.5). The definition of ServiceParameters 
is shown in Figure 2 and Table 4. 

class Serv iceParameters

«Data Type»
Serv iceParameters

+ coverageSubtype:  QName
+ extension:  Any [0..*]

 

Figure 2 — ServiceParameters UML class diagram 

Table 4 — ServiceParameters components 

Name Definition Data type Multiplicity 
coverage-
Subtype 

Indicator of the type of cover-
age 

QName one 
(mandatory) 

extension Any kind of ancillary data Any zero or more 
(optional) 

 

Component CoverageSubtype characterizes the type of the OfferedCoverage. This 
information is delivered in GetCapabilities and DescribeCoverage to allow clients an estima-
tion of the amount of data to be expected in the domain and range set.  

Requirement 4 /req/core/coverageSubtype-content: 
The coverageSubtype in the ServiceParameters of an OfferedCoverage shall 
indicate the coverage’s type. 

NOTE Both domain set and range set of a coverage can become quite large; which of these can be-
come unwieldy for complete transfer is determined by the type of the coverage. In gridded coverages, for 
example, the range set usually is the large part. In multi-solid coverages the domain set may become large 
while the range set usually will be small. 

Normally, the coverage type will be given by one of the concrete (instantiateable) coverage 
types defined in the GML Application Schema for Coverages [OGC 09-146r1]. However, 
WCS extensions may derive further coverage types, and these are candidates for the Cov-
erageSubtype as well. 

Requirement 5 /req/core/coverageSubtype-reference: 
The content model definition of the coverage type referenced in the coverageSubtype in 
the ServiceParameters of an OfferedCoverage shall either be normatively 
referenced by this WCS Core or by a WCS extension requirements class supported by the 
server. 

Component extension is provided as a canonical place for extensions to define coverage-
specific service quality information which is not part of Coverage. It follows the construc-
tion rules given in OWS Common [OGC 06-121r9].  

Copyright © 2010 Open Geospatial Consortium  7
 



OGC 09-110r3 
 

The ServiceParameters section is delivered – in different shapes – in both GetCapabili-
ties and DescribeCoverage response, but is not included in the coverage when delivered via 
GetCoverage. 

6.5 ServiceMetadata 

WCS ServiceMetadata provide service details plus information about the concrete ser-
vice capabilities of the WCS service as a whole (as opposed to coverage-specific Service-
Parameters, see Subclause 6.4). The definition of ServiceMetadata follows OWS 
Common [OGC 06-121r9]. The additional element extension within ServiceMetadata 
defines a canonical place for additional information eventually provided by WCS extension 
standards. This is shown in Figure 3, Table 5, and Table 9. 

Requirement 6 /req/core/serviceMetadata-structure: 
The ServiceMetadata structure shall adhere to Figure 3 and Table 5. 

class Serv iceMetadata

«DataType»
Serv iceMetadata

+ extension:  Any [0..*]

«Data Type»
OWS Common::

OWSServ iceMetadata

«Data Type»
OWS Common::

Serv iceIdentification

«Data Type»
OWS Common::
Serv iceProv ider

«Data Type»
OWS Common::

OperationsMetadata

ISO 19115::
Metadata

0..1

+serviceProvider

1

0..1

+operationsMetadata0..1 0..1

1
1

+serviceIdentification +isoMetadata

 

Figure 3 — ServiceMetadata UML class diagram 

Table 5 —  ServiceMetadata additional components 

Name Definition Data type Multiplicity 
extension Any kind of ancillary infor-

mation about the service 
Any zero or more 

(optional) 

 

8 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Among other information, the URI identifiers of all conformance classes of OGC standards 
supported in addition to this WCS Core are published by the server. 

Requirement 7 /req/core/conformance-class-in-profile: 
Each element in the Profile list of the ServiceMetadata shall be the identifier of an 
OGC Interface Standard conformance class. 

NOTE Typically, these will be WCS extensions and application profiles. 

The operations metadata specified in OWS Common [OGC 06-121r9] describe the request 
types supported by the server. For the WCS Core, these are GetCapabilities, DescribeCover-
age, and GetCoverage; extensions may add further request types to this list. 

Requirement 8 /req/core/operationsMetadata: 
The OperationsMetadata component shall contain three Operation instances with 
case-sensitive name values “GetCapabilities”, “DescribeCoverage”, and “GetCoverage”, 
respectively. 

NOTE 1 Further operation instances can be present, this is only a minimum requirement of this WCS 
Core – extensions may add further request types. 

NOTE 2 See [OGC 06-121r9] for proper use of the many optional elements in an OWS Common  
ServiceMetadata structure. 

NOTE 3 OWS Common 2.0 [OGC 06-121r9], for historical reasons, uses different names for Service-
Metadata.  In said standard, Figure 3 uses “OWSServiceMetadata“, Table 8 uses "service metadata 
document", and owsGetCapabilities.xsd uses "CapabilitiesBaseType". (The name Capabil-
itiesBaseType is used because the XML encoding of service metadata is commonly named Cap-
abilities, and the suffix "Base" is used because it does not include any Contents, since not all ser-
vices have Contents).  Except for not including Contents in the XML Schema, all three names mean 
the same service metadata.   

7 WCS  service model 

7.1 WCS operation types 

The WCS interface herein specified supports retrieval of geospatial coverage data – that is, 
digital geospatial information representing space/time-varying phenomena [OGC 07-011]. To 
this end, the WCS interface specifies the following operations that may be invoked by a 
WCS client and performed by a WCS server: 

a) GetCapabilities – This operation allows a client to request information about the 
server’s capabilities and coverages offered (see Subclause 8.2). 

b) DescribeCoverage – This operation allows a client to request detailed metadata on 
selected coverages offered by a server (see Subclause 8.3). 

c) GetCoverage – This operation allows a client to request a coverage comprised of se-
lected range properties at a selected set of spatio-temporal locations, expedited in some 
coverage encoding format (see Subclause 8.4). 

NOTE Extensions to this WCS Core may add further operation types. 

A client should first, during a sequence of WCS requests, issue a GetCapabilities request to 
the server to obtain an up-to date listing of available data. Then, it may issue a DescribeCov-

Copyright © 2010 Open Geospatial Consortium  9
 



OGC 09-110r3 
 

erage request to find out more details about particular coverages offered. To retrieve a cover-
age or a part thereof, a client will issue a GetCoverage request.  

NOTE A WCS server can change its offering at any time, in particular: between a GetCapabilities, a 
subsequent DescribeCoverage, and a subsequent GetCoverage request. Such a change in the service offer-
ing can be effected, e.g., through an intervening WCS-T [2] request. 

7.2 WCS service handling package 

The DescribeCoverage and GetCoverage request types make use of the RequestBase 
structure which mimics the OWS Common [OGC 06-121r9] RequestBase data struc-
ture,with the following adaptations, as shown in in Figure 4 and Table 6: 

• Attributes service contains the WCS service name, which is fixed to the string 
“WCS”. 

• Attributes version contains the WCS version number, which is fixed to the string 
“2.0”. 

• Extension is a placeholder for further request parameters defined by WCS exten-
sion standards. 

class WCSServ iceMetadata

«Data Type»
RequestBase

+ service:  string = WCS {readOnly}
+ version:  string
+ extension:  Any [0..*]

 

Figure 4 — RequestBase data structure UML class diagram 

Table 6 — RequestBase components 

Name Definition Data type Multiplicity 
service Service name String,  

fixed to “WCS” 
one  

(mandatory) 

version  Coverage identifiers String one or more 
(mandatory) 

extension Any ancillary information to be 
sent from client to server 

Any zero or more 
(optional) 

 

Requirement 9 /req/core/requestbase: 
All WCS request types shall be a subtype of RequestBase. 

NOTE This applies not only to the request types in the Core, but to any request type supported by the 
service on hand. 

10 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Requirement 10 /req/core/service-name: 
For all WCS request types, the request service parameter shall have a fixed value of 
“WCS”. 

Requirement 11 /req/core/version-number: 
For all WCS request types, the request version parameter shall have a fixed value of “2.0”. 

8 WCS operations 

8.1 Overview 

In this Clause, the WCS core operations GetCapabilities, DescribeCoverage, and GetCover-
age are specified. Definition is based on the GML structure specified in Clause 6. 

8.2 GetCapabilities operation 

A GetCapabilities operation, as required by OWS Common [OGC 06-121r9], allows a WCS 
client to retrieve service metadata and coverages offered by a WCS server. 

8.2.1 GetCapabilities request 

Requirement 12 /req/core/getCapabilities: 
A GetCapabilities request shall consist of a GetCapabilities structure as defined in 
Figure 5 and Table 7. 

class GetCapabilities

«Data Type»
OWS Common::GetCapabilities details omitted, see 

OWS Common [OGC 
06-121r9]

«Data Type»
GetCapabilities

+ service:  OWS Common::ServiceType = WCS {readOnly}

 

Figure 5 — GetCapabilities operation request UML class diagram 

Table 7 — GetCapabilities components 

Name Definition Data type Multiplicity 
service Service name String,  

fixed to “WCS” 
one  

(mandatory) 

 

Copyright © 2010 Open Geospatial Consortium  11
 



OGC 09-110r3 
 

8.2.2 GetCapabilities response 

The GetCapabilities response document consists of a service metadata section and an op-
tional contents section. Service metadata are those defined in the serviceMetadata com-
ponent of the server’s coverage offering. The contents section delivers information about the 
coverage offering of the server. Figure 6 and Table 8 show this structure. 

Requirement 13 /req/core/wcsServiceMetadata-structure: 
The response to a successful GetCapabilities request shall consist of a Capabilities 
structure as defined in Figure 6, Table 8, Figure 7, and Table 9. 

class Capabilities

«Data Type»
Capabilities

OWSContents

«Data Type»
Contents

OWSServiceMetadata

«DataType»
Serv iceMetadata

+serviceMetadata +contents

0..1

details omitted here details omitted here

+ extension:  Any [0..*]

 

Figure 6 — Capabilities UML class diagram 

Table 8 — Capabilities components 
Name Definition Data type Multiplicity 

service-
Metadata 

Service metadata and func-
tionality specific information 

ServiceMetadata one 
(mandatory) 

contents Information about coverages 
offered by this service 

Contents zero or one 
(optional) 

 

The Contents section provides details about the coverages offered by the service. Its struc-
ture is derived from the Contents definition in OWS Common [OGC 06-121r9] along the 
mechanism prescribed there: 

12 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

class Contents

«Data Type»
Cov erageSummary

+ coverageId:  NCName
+ coverageSubtype:  QName

«Data Type»
Contents

«Data Type»
OWS Common::

Description

«Data Type»
OWS Common::Metadata

«Data Type»
OWS Common::WCS84BoundingBox

«Data Type»
OWS Common::OWSContents In OWS Common [OGC 06-121r9] 

the XML type representing this class 
is ows:ContentsBaseType.

«Data Type»
OWS Common::BoundingBox

CoverageSummary replaces OWS 
Common::DatasetSummary, according 
to the rules of OWS Common [06-
121r9].

CoverageSummary is cloned from OWS Common::DatasetDescriptionSummary 
according to the rules set forth in OWS Common [06-121r9] Subclause 7.4.8.

«Invariant»
{count(@identifier)=0}

0..*
+metadata0..*

0..*

+wgs84BoundingBox

1

0..*

+boundingBox

1

1 +coverageSummary

0..*

 

Figure 7 — Contents and CoverageSummary UML class diagram 

a) DatasetSummary is renamed to CoverageSummary. 

b) This CoverageSummary is extended (over DatasetSummary) with two addition-
nal components: coverageId and coverageSubtype. 

c) The DatasetSummary attribute identifier is omitted (ie, set to cardinality zero 
in the XML Schema). Identification of items (i.e., coverages) offered is done through 
coverageId instead (see Figure 7 and Table 9). 

Table 9 — CoverageSummary additional components 
Name Definition Data type Multiplicity 

coverageId Identifier of a coverage of-
fered by the service on hand 

NCName one 
(mandatory) 

coverage- Type indicator for the cover- QName one 

Copyright © 2010 Open Geospatial Consortium  13
 



OGC 09-110r3 
 

Subtype age on hand (mandatory) 

wgs84-
BoundingBox  

 

Minimum bounding rectangle 
surrounding dataset, using 
WGS 84 CRS with decimal 
degrees and longitude before 
latitude 

OWS Common:: 
WGS84BoundingBox 

zero or more  
(optional) 

boundingBox  

 

Minimum bounding rectangle 
surrounding dataset, in avail-
able CRS 

OWS Common:: 
BoundingBox 

zero or more  
(optional) 

metadata Reference to more metadata 
about this dataset 

OWS Common:: 
Metadata 

zero or one  
(optional) 

 

NOTE OWS Common [OGC 06-121r9] Table 21 footnotes contain further normative rules for wgs-
84BoundingBox and boundingBox. See OWS Common [OGC 06-121r9] Subclause D.9 for 
proper use of the many optional elements in an OWS Common Contents structure. 

Requirement 14 /req/core/wcsServiceMetadata-contents: 
If present in the response to a successful GetCapabilities request, the Contents section 
shall be populated as specified by OWS Common [OGC 06-121r9]. 
Dependency: [OGC 06-121r9] Clause 7 (http://www.opengis.net/doc/OWS/2.0/clause/7) 

Whether a Contents section is provided in the response is up to the server.  If it is provided 
then all coverage identifiers reported shall be valid: 

Requirement 15  /req/core/coverageSummary: 
In the response to a successful GetCapabilities request containing a CoverageSummary 
section, each coverage identifier listed shall refer to a coverage offered by the server. 

NOTE There may be coverages which are not reported via GetCapabilities, but nevertheless accessi-
ble through DescribeCoverage and GetCoverage. 

8.2.3 Sample GetCapabilities response 

Example The response to a valid GetCapabilities may look like this: 

<?xml version="1.0" encoding="UTF-8"?> 
<wcs:Capabilities  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' 
   xmlns:ows='http://www.opengis.net/ows/1.2' 
   xmlns:wcs='http://www.opengis.net/wcs/2.0' 
   xmlns:gml='http://www.opengis.net/gml/3.2' 
   xmlns='http://www.opengis.net/ows/1.2' 
   xmlns:xlink='http://www.w3.org/1999/xlink' 
   xsi:schemaLocation='http://schemas.opengis.net/wcs/2.0 ../wcsAll.xsd' version="2.0.0"> 
    <ServiceIdentification> 
        <Title>rasdaman</Title> 
        <Abstract>WCS Server developed at Jacobs University</Abstract> 
        <ServiceType>OGC WCS</ServiceType> 
        <ServiceTypeVersion>2.0.0</ServiceTypeVersion> 
        <Profile> 
            http://www.opengis.net/spec/WCS_service-model_index-subsetting/1.0/conf/index-subsetting 

14 Copyright © 2010 Open Geospatial Consortium
 

http://www.opengis.net/doc/OWS/2.0/clause/7


OGC 09-110r3 
 

        </Profile> 
        <Profile> 
            http://www.opengis.net/spec/WCS_service-model_processing/1.1/conf/processing 
        </Profile> 
        <Profile> 
            http://www.opengis.net/spec/WCS_protocol-binding_soap/1.0/conf/soap 
        </Profile> 
        <Profile> 
            http://www.opengis.net/spec/WCS_coverage-encoding_netcdf/1.0/conf/netcdf 
        </Profile> 
    </ServiceIdentification> 
    <ServiceProvider> 
        <ProviderName>Jacobs University Bremen</ProviderName> 
        <ProviderSite xlink:href="http://www.jacobs-university.de/"/> 
        <ServiceContact> 
            <IndividualName>Andrei Aiordachioaie</IndividualName> 
            <PositionName>Developer</PositionName> 
            <ContactInfo> 
                <Phone> 
                    <Voice></Voice> 
                </Phone> 
            </ContactInfo> 
        </ServiceContact> 
    </ServiceProvider> 
    <OperationsMetadata> 
        <Operation name="GetCapabilities"> 
            <DCP> 
                <HTTP> 
                    <Get xlink:href="http://server:port/GetCapabilitiesURL"/> 
                </HTTP> 
            </DCP> 
        </Operation> 
        <Operation name="DescribeCoverage"> 
            <DCP> 
                <HTTP> 
                    <Get xlink:href="http://server:port/DescribeCoverageURL"/> 
                </HTTP> 
            </DCP> 
        </Operation> 
        <Operation name="GetCoverage"> 
            <DCP> 
                <HTTP> 
                    <Get xlink:href="http://server:port/GetCoverageURL"/> 
                </HTTP> 
            </DCP> 
        </Operation> 
    </OperationsMetadata> 
    <wcs:Contents> 
        <wcs:CoverageSummary> 
            <wcs:CoverageId>C0001</wcs:CoverageId /> 
            <wcs:CoverageSubtype>GridCoverage</wcs:CoverageSubtype> 
        </wcs:CoverageSummary> 
        <wcs:CoverageSummary> 
            <wcs:CoverageId>C0002</wcs:CoverageId /> 
            <wcs:CoverageSubtype>MultiPointCoverage</wcs:CoverageSubtype> 
        </wcs:CoverageSummary> 
        <wcs:CoverageSummary> 
            <wcs:CoverageId>C0003</wcs:CoverageId /> 

Copyright © 2010 Open Geospatial Consortium  15
 



OGC 09-110r3 
 

            <wcs:CoverageSubtype>MultiCurveCoverage</wcs:CoverageSubtype> 
        </wcs:CoverageSummary> 
        <wcs:CoverageSummary> 
            <wcs:CoverageId>C0004</wcs:CoverageId /> 
            <wcs:CoverageSubtype>MultiSurfaceCoverage</wcs:CoverageSubtype> 
        </wcs:CoverageSummary> 
        <wcs:CoverageSummary> 
            <wcs:CoverageId>C0005</wcs:CoverageId /> 
            <wcs:CoverageSubtype>MultiSolidCoverage</wcs:CoverageSubtype> 
        </wcs:CoverageSummary> 
    </wcs:Contents> 
</wcs:Capabilities> 

8.2.4 GetCapabilities exceptions 

When a WCS server encounters an error while performing a GetCapabilities operation, it 
shall return an exception report message as set forth in Subclause 7.4 of [OGC 06-121r9]. 

8.3 DescribeCoverage operation 

A DescribeCoverage request submits a list of coverage identifiers and returns, for each iden-
tifier, a description of the coverage. 

NOTE A GetCapabilities request allows retrieval of the identifiers of all coverage objects currently 
offered by the WCS service. However, a client is not required to retrieve identifiers via a GetCapabilities 
request.  Alternative means of retrieving these identifiers, not defined in this standard, are allowed. 

Requirement 16 /req/core/describeCoverage: 
Every WCS server shall offer the DescribeCoverage operation. 

8.3.1 DescribeCoverage request  

The DescribeCoverage request structure is derived from RequestBase, extended with a 
non-empty list of coverage identifiers. This structure is shown in Figure 8 and Table 10. 

Requirement 17 /req/core/describeCoverage-request-structure: 
A DescribeCoverage request shall consist of a structure as defined in Figure 8 and Table 10. 

The concrete representation of this structure depends on the protocol binding chosen. 

Requirement 18 /req/core/describeCoverage-valid-identifier: 
Each coverage identifier in the list submitted in a DescribeCoverage request shall identify a 
wcs:OfferedCoverage object available on the server addressed. 

8.3.2 DescribeCoverage response 

The response to a successful DescribeCoverage request contains a list of coverage metadata, 
one for each coverage identifier passed in the request. 

Requirement 19 /req/core/describeCoverage-response-structure: 
The response to a successful DescribeCoverage request shall consist of a CoverageDe-
scriptions as described in Figure 9, Table 11, and Table 12.  

16 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

class DescribeCov erage

«Data Type»
DescribeCov erage

«Data Type»
RequestBase

+ service:  string = WCS {readOnly}
+ version:  string
+ extension:  Any [0..*]

+ coverageId:  CoverageId [1..*]

 
Figure 8 — DescribeCoverage operation request UML class diagram 

Table 10 — DescribeCoverage components 

Name Definition Data type Multiplicity 
service Service identifier String,  

fixed to “WCS” 
one 

(mandatory) 

version WCS service version 
indicator 

String,  
fixed to a pattern of three 
dot-separated decimal digits 

one 
(mandatory) 

extension Any ancillary information 
to be sent from client to 
server 

Any zero or more 
(optional) 

coverageId  Coverage identifiers List of NCName one or more 
(mandatory) 

 

Requirement 20 /req/core/describeCoverage-response-list-size: 
The response to a successful DescribeCoverage request with n>0 coverage identifiers shall 
be a list containing n items. 

NOTE For brevity, the substructures of domainSet, rangeType, and rangeSet have been 
omitted in Figure 4. OGC document [OGC 09-146r1] contains their complete definitions. 

Table 11 lists the components of a CoverageDescriptions list, Table 12 those of a sin-
gle CoverageDescription. 

 

Copyright © 2010 Open Geospatial Consortium  17
 



OGC 09-110r3 
 

class Cov erageDescriptions

«Data Type»
Cov erageDescriptions

«Data Type»
Cov erageDescription

+ coverageId:  NCName
+ coverageFunction:  CoverageFunction [0..1]
+ metadata:  Any [0..*]

«Union»
GML::DomainSet

«FeatureType»
GML::Feature

«Data Type»
Serv iceParameters

+ coverageSubtype:  QName
+ extension:  Any [0..*]

«type»
SWE Common::DataRecord

1

+coverageDescription
1..*

1
+rangeType1

1
+domainSet

1

1
+serviceParameters

1

 

Figure 9 — CoverageDescriptions UML class diagram 

Table 11 — WCS CoverageDescriptions components 

Name Definition Data type Multiplicity 
coverage-
Description 

List of descriptions of coverages Coverage-
Description 

one or more 
(mandatory) 

 

Table 12 — WCS CoverageDescription components 

Name Definition Data type Multiplicity 
coverageId Identifier of the coverage 

described 
NCName one 

(mandatory) 
coverage-
Function 

GML 3.2.1 coverage func-
tion to describe how range 
values at coverage locations 
can be obtained 

GML:: 
CoverageFunction 

zero or one  
(optional) 

metadata Application specific meta-
data 

Any zero or more  
(optional) 

domainSet Domain description of this 
coverage 

GML::DomainSet one  
(mandatory) 

rangeType Range structure description 
of this coverage 

SWE Common:: 
DataRecord 

one  
(mandatory) 

service-
Parameters 

Service-specific parameters 
of this coverage 

ServiceParameters one  
(mandatory) 

18 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Requirement 21 /req/core/describeCoverage-response-contents: 
The response to a successful DescribeCoverage request containing n>0 identifiers id1, …, 
idn shall contain, at position i in the response list,  a wcs:coverageDescription con-
sisting of a copy of the identified coverage’s metadata, that is: the complete wcs:Cover-
ageOffering information minus the coverage rangeSet. 
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage 

NOTE GML [OGC 07-036] allows the domain set of a coverage to be referenced externally, using 
xlink:href. This feature may be useful when the coverage domain set becomes unwieldy in size, 
which can occur particularly with multi-point/curve/surface/ solid-coverages. 

Requirement 22  /req/core/describeCoverage-response-srsName: 
If a geometric or temporal object in the domainSet of a coverageDescription specif-
ies an srsName attribute, the value of this attribute shall be identical to the srsName 
attribute of the boundedBy element of the containing coverageDescription. 

Example The response to a valid DescribeCoverage request for coverage with id C0001 might be: 

<?xml version="1.0" encoding="UTF-8"?> 
<wcs:CoverageDescriptions  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' 
    xmlns='http://www.opengis.net/gml/3.2' 
    xmlns:gml='http://www.opengis.net/gml/3.2' 
    xmlns:gmlcov='http://www.opengis.net/gmlcov/1.0' 
    xmlns:swe='http://www.opengis.net/swe/2.0' 
    xsi:schemaLocation='http://schemas.opengis.net/swe/2.0 ../sweCommon/2.0/swe.xsd 
        http://www.opengis.net/wcs/2.0 ../wcsAll.xsd' 
    xmlns:wcs='http://www.opengis.net/wcs/2.0'> 
    <wcs:CoverageDescription gml:id=”cd0001”> 
        <gml:boundedBy> 
            <gml:Envelope srsName=http://www.opengis.net/def/crs/EPSG/0/4326 
                axisLabels="Lat Long" uomLabels="deg deg" srsDimension="2">  
                <gml:lowerCorner>1 1</gml:lowerCorner> 
                <gml:upperCorner>5 3</gml:upperCorner> 
            </gml:Envelope> 
        </gml:boundedBy> 
        <wcs:CoverageId>C0002</wcs:CoverageId /> 
        <domainSet> 
            <Grid gml:id="gr0001_C0001" dimension="2"> 
                <limits> 
                    <GridEnvelope><!-- This is a 5-by-3 matrix --> 
                        <low>1 1</low> 
                        <high>5 3</high> 
                    </GridEnvelope> 
                </limits> 
                <axisLabels>Lat Long</axisLabels> 
            </Grid> 
        </domainSet> 
        <gmlcov:rangeType> 
            <swe:field name="singleBand"> 
               <swe:Quantity definition="http://opengis.net/def/property/OGC/0/Radiance"> 
                       <gml:description>Panchromatic Channel</gml:description> 
                       <gml:name>single band</gml:name> 
                       <swe:uom code="W/cm2"/> 
                       <swe:constraint> 
                           <swe:AllowedValues> 
                               <swe:interval>0 255</swe:interval> 

Copyright © 2010 Open Geospatial Consortium  19
 

http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage


OGC 09-110r3 
 

                               <swe:significantFigures>3</swe:significantFigures> 
                           </swe:AllowedValues> 
                       </swe:constraint> 
                   </swe:Quantity> 
            </swe:field> 
        </gmlcov:rangeType> 
        <wcs:ServiceParameters> 
            <wcs:CoverageSubtype>GridCoverage</wcs:CoverageSubtype> 
        </wcs:ServiceParameters> 
    </wcs:CoverageDescription> 
</wcs:CoverageDescriptions> 
 

8.3.3 DescribeCoverage exceptions 

Requirement 23 /req/core/describeCoverage-exceptions: 
When a WCS server encounters an error while performing a DescribeCoverage operation it 
shall return an exception report message chosen as follows: 
- if the error occurs while performing some extension functionality:  
 an exception as specified by the respective extension; 
- otherwise, if an error occurs which is described in column “meaning of exception 
 code” in Table 13:  
 the corresponding exception as listed in Table 13; 
- otherwise:  
 an exception as specified in Clause 8 of [OGC 06-121r9].  
For each listed exceptionCode, the contents of the locator parameter value shall be as 
specified in the right column of  Table 13. 
Dependency: [OGC 06-121r9] Clause 8 (http://www.opengis.net/doc/OWS/2.0/clause/8) 

Table 13 — Exception codes for DescribeCoverage operation 

exceptionCode 
value 

HTTP 
code 

Meaning of exception code locator value 

NoSuchCoverage 404 One of the identifiers passed does not 
match with any of the coverages offered 
by this server 

list of violating 
coverage identifiers 

 

8.4 GetCoverage operation 

A GetCoverage request prompts a WCS service to process a particular coverage selected 
from the service’s offering and return a derived coverage. The WCS Core standard defines 
the domain subsetting operation which delivers all data from a coverage inside a specified 
request envelope (“bounding box”), relative to the coverage’s envelope – more precisely, the 
intersection of the request envelope with the coverage envelope.  

Requirement 24 /req/core/getCoverage: 
Every WCS implementation shall support the GetCoverage operation. 

Domain subsetting is subdivided into trimming and slicing. A trim operation identifies a di-
mension and a lower and upper bound (which both must lie inside the coverage’s domain) 
and delivers a coverage whose domain, in the dimension specified, is reduced to these new, 
narrower limits. The result coverage’s dimension is identical to that of the input coverage. 

20 Copyright © 2010 Open Geospatial Consortium
 

http://www.opengis.net/doc/OWS/2.0/clause/8


OGC 09-110r3 
 

A domain slice operation receives a dimension and a position (which must lie inside the cov-
erage’s domain) and delivers a coverage which is a slice of the offered coverage obtained at 
the cutting position provided. The dimension of the result coverage is reduced by one as 
compared to the operand coverage.  

Both trimming and slicing can be combined arbitrarily in a request and on as many dimen-
sions as desired. However, per request at most one operation can be applied per dimension. 

8.4.1 GetCoverage request 

Requirement 25 /req/core/getCoverage-request-structure: 
A GetCoverage request shall consist of a structure as defined in Figure 10, Table 14, Table 
15, Table 16, and Table 17. 
Dependency: [OGC 06-121r9] Clause 7 (http://www.opengis.net/doc/OWS/2.0/clause/7) 

class GetCov erage

«DataType»
GetCov erage

«Data Type»
RequestBase

+ service:  string = WCS {readOnly}
+ version:  string
+ extension:  Any [0..*]

+ request:  CharacterString = GetCoverage {readOnly}
+ coverageId:  NCName

+dimensionSubset

0..*

«DataType»
DimensionSubset

+ dimension:  NCname

«DataType»
DimensionTrim

«DataType»
DimensionSlice

+ trimLow:  Real [0..1]
+ trimHigh:  Real [0..1]

+ slicePoint:  Real

 

Figure 10 — GetCoverage operation request UML class diagram 

Table 14 — WCS GetCoverage operation request 

Name Definition Data type Multiplicity 
service Service identifier String,  one 

Copyright © 2010 Open Geospatial Consortium  21
 

http://www.opengis.net/doc/OWS/2.0/clause/7


OGC 09-110r3 
 

fixed to “WCS” (mandatory) 

version WCS service version indicator String,  
fixed to a pattern of 
three dot-separated 
decimal digits 

one 
(mandatory) 

extension Any ancillary information to 
be sent from client to server 

Any zero or more 
(optional) 

coverageId  Identifier of coverage evaluated NCName One  
(mandatory) 

dimension-
Subset 

Subsetting specifications, one 
per subsetting dimension 

DimensionSubset  Zero or more  
(optional) 

 

Requirement 26 /req/core/getCoverage-request-valid-identifier: 
The id parameter value in a GetCoverage request shall be equal to the identifier of one of 
the coverages offered by the server addressed. 

Subsetting in the core is defined only on point coverages, that is: coverages of type GML-
COV::GridCoverage , GMLCOV::RectifiedGridCoverage, GMLCOV::Referen-
ceableGridCoverage and GMLCOV::MultiPointCoverage.  

NOTE Extensions may specify subsetting on additional coverage types. 

Requirement 27 /req/core/getCoverage-request-subsetting-type: 
If a GetCoverage request contains a dimensionSubset component then the id parameter 
in the request shall refer to a coverage on the server which is of one of the following sub-
types of GMLCOV::Coverage:  GMLCOV:GridCoverage , GMLCOV:RectifiedGrid-
Coverage, GMLCOV:ReferenceableGridCoverage, GMLCOV:MultiPointCover-
age.  
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage 

The DomainSubset structure consists of a set of subsetting specifications for the cover-
age’s dimensions. The corresponding class, DimensionSubset, is described in Table 15. 

Table 15 — WCS DimensionSubset structure 

Name Definition Data type Multiplicity 
Dimension Name of dimension along which to subset NCName One  

(mandatory) 
 

Subsetting in this Core is evaluated against the gml:Envelope element contained in the 
boundedBy element of a coverage. No CRS parameter is foreseen in the Core GetCoverage 
request; subsetting coordinates are always interpreted as being relative to the CRS in which 
the gml:Envelope coordinates are expressed; this CRS is listed in the srsName attribute 
of the gml:Envelope.  

NOTE This CRS is always present as per Requirement 2. 

22 Copyright © 2010 Open Geospatial Consortium
 

http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage


OGC 09-110r3 
 

Subsetting dimension names refer to the coverage’s dimension names as listed in the 
gml:SRSInformationGroup of the coverage’s gml:Envelope. 

Requirement 28 /req/core/getCoverage-request-valid-dimension: 
Every dimension value in a GetCoverage request shall be equal to one of the axisLab-
els dimension names specified in the gml:SRSInformationGroup of the coverage’s 
gml:Envelope, unless the server offers a WCS CRS extension which overrides this requi-
rement. 
Dependency: [OGC 07-036] Clause 10 http://www.opengis.net/doc/GML/3.2/clause/10 

NOTE GML [OGC 07-036] states in schema file geometryBasic0d1d.xsd: “The attribute axisLabels is 
an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these 
axis labels, after spaces and forbidden characters are removed.” 

In one single GetCoverage request, subsetting can be done at most once for every axis. 

Requirement 29 /req/core/getCoverage-request-no-duplicate-dimension: 
A GetCoverage request shall contain at most one subsetting operation for each of the dimen-
sions of the coverage addressed. 

Depending on whether the DimensionSubset is a trim or slice operation, its correspond-
ing subclasses are DimensionTrim and DimensionSlice, as shown in Table 16 and 
Table 17. 

Table 16 — WCS DimensionTrim structure 

Name Definition Data type Multiplicity 
trimLow Lower bound of cutout along dimension Real Zero or one  

(optional) 
trimHigh Upper bound of cutout along dimension Real Zero or one  

(optional) 
 

Requirement 30 /req/core/getCoverage-request-trim-within-extent: 
Let the extent of the coverage’s gml:Envelope along the dimension specified in the trim 
request range from L to H. Then, for the trim bounds trimLow  and trimHigh the follow-
ing shall hold: L ≤ trimLow ≤ trimHigh ≤ H. 

Table 17 — WCS DimensionSlice structure 

Name Definition Data type Multiplicity 
slicePoint Slicing point along dimension Real One  

(mandatory) 
 

Requirement 31 /req/core/getCoverage-request-slice-within-extent: 
For an extent L to H of the input coverage along the given dimension, the slicing position, 
slicePoint, shall be L ≤ slicePoint ≤ H. 

NOTE Extensions to this core may add further functionality, including further parameters required to 
invoke such functionality. 

Copyright © 2010 Open Geospatial Consortium  23
 

http://www.opengis.net/doc/GML/3.2/clause/10


OGC 09-110r3 
 

8.4.2 GetCoverage response 

8.4.2.1. General coverage response structure 

The response to a successful GetCoverage request is a coverage as per [OGC 09-146r1].  

Requirement 32 /req/core/getCoverage-response-structure: 
The contents of the response to a successful GetCoverage request shall be a concrete subtype 
of  AbstractCoverage. 
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage 

Further, the response is expected to be a data structure whose type is the same subtype of 
gmlcov:AbstractCoverage as the requested coverage has, unless the server offers a 
WCS extension which overrides this requirement. 

NOTE As the latter cannot be tested it is not phrased as a formal requirement. 

Requirement 33 /req/core/getCoverage-response-encoding: 
The contents of the response to a successful GetCoverage request shall be encoded as specif-
ied in one of the coverage format extensions supported, with the coverage information 
contents being consistent with the requirements stated in this WCS Core. 

NOTE This WCS Core and [OGC 09-146r1] refer to the DataBlock choice in the gmlcov: 
rangeSet component in the response to a successful GetCoverage request. This GML encoding is sole-
ly used for the purpose of defining the response semantics. It does not exclude that a server delivers a re-
sult coverage in some other format (defined by a WCS format extension, see Clause 9), and it does not 
even mandate that a server supports this concrete GML encoding. However, it is required that result cover-
ages, regardless of what the encoding chosen is, have a contents which is consistent with the above speci-
fication. 

8.4.2.2. Complete coverage retrieval 

In this Subclause, retrieval of a complete coverage is described. This is the case whenever 
neither trimming nor slicing is specified in the corresponding GetCoverage request. 

Requirement 34 /req/core/getCoverage-response-contents: 
The response to a successful GetCoverage request with coverage identifier id shall consist 
of the coverage component of the OfferedCoverage identified by id, unless the server 
supports a WCS extension which overrides this requirement. 

NOTE This states that a complete coverage retrieval returns the coverage identified. One deviation 
from this is specified by the WCS extension handling range subsetting; it changes this Requirement in a 
way that, for each coverage cell, also part of its range values can be retrieved. 

Example Assume an unrectified, unreferenced grid coverage with two dimensions Lat and Long, extent 
[1:3,1:5], and a single integer-valued field, singleBand. The response to a GetCoverage request selecting 
this whole coverage could be like this: 

<?xml version="1.0" encoding="UTF-8"?> 
<gmlcov:GridCoverage xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' 
    xmlns:gml='http://www.opengis.net/gml/3.2' 
    xmlns='http://www.opengis.net/gml/3.2' 
    xmlns:swe='http://www.opengis.net/swe/2.0' 
    xmlns:gmlcov='http://www.opengis.net/gmlcov/1.0' 
    xsi:schemaLocation='http://www.opengis.net/swe/2.0 ../sweCommon/2.0/swe.xsd 
        http://schemas.opengis.net/gmlcov/1.0 ../gmlcov/1.0/gmlcovAll.xsd'  

24 Copyright © 2010 Open Geospatial Consortium
 

http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-coverage


OGC 09-110r3 
 

    gml:id="C0001"> 
    <gml:boundedBy> 
        <gml:Envelope srsName="http://www.opengis.net/def/crs/EPSG/0/4326" 
            axisLabels="Lat Long" uomLabels="deg deg" srsDimension="2"> 
            <gml:lowerCorner>1 1</gml:lowerCorner > 
            <gml:upperCorner >5 3</gml:upperCorner> 
        </gml:GridEnvelope> 
    </gml:boundedBy> 
    <domainSet> 
        <Grid gml:id="gr0001_C0001" dimension="2"> 
            <limits> 
                <GridEnvelope> 
                    <low>1 1</low> 
                    <high>5 3</high> 
                </GridEnvelope> 
            </limits> 
            <axisLabels>Lat Long</axisLabels> 
        </Grid> 
    </domainSet> 
    <gmlcov:rangeType> 
        <swe:field name="singleBand"> 
           <swe:Quantity definition="http://opengis.net/def/property/OGC/0/Radiance"> 
                   <gml:description>Panchromatic Channel</gml:description> 
                   <gml:name>single band</gml:name> 
                   <swe:uom code="W/cm2"/> 
                   <swe:constraint> 
                       <swe:AllowedValues> 
                           <swe:interval>0 255</swe:interval> 
                           <swe:significantFigures>3</swe:significantFigures> 
                       </swe:AllowedValues> 
                   </swe:constraint> 
               </swe:Quantity> 
        </swe:field> 
    </gmlcov:rangeType> 
    <gml:rangeSet> 
        <DataBlock> 
            <rangeParameters/> 
            <tupleList> 
                1  2  3  4  5 
                6  7  8  9  10 
                11 12 13 14 15 
            </tupleList> 
        </DataBlock> 
    </gml:rangeSet> 
</gmlcov:GridCoverage>  

8.4.2.3. Single Dimension Trimming 

In this Subclause, the GetCoverage response is defined for the case that one trimming is in-
cluded in the request and no slicing.  

For trimming a coverage in a particular dimension, the corresponding dimension name is 
indicated as well as the lower and upper bound of the resulting coverage. Both lower and 
upper bound are optional. A lower bound omitted shall be substituted in the server by the 
coverage’s lower bound in the dimension on hand, an upper bound omitted shall be substi-
tuted in the server by the coverage’s upper bound. The result coverage shall contain only 

Copyright © 2010 Open Geospatial Consortium  25
 



OGC 09-110r3 
 

those range values of the original coverage which lie within the effective lower and upper 
bound, obtained as described. 

Let  

id be the coverage identifier specified in the GetCoverage request; 
dname be the dimension name specified in the trim request parameter; 
tLow and tHigh be the trimLow and trimHigh parameter, resp., in the request, if 
provided 

where 

the coverage addressed is of type gmlcov:GridCoverage, gmlcov:Rectified-
GridCoverage, gmlcov:ReferenceableGridCoverage, or gmlcov:Multi-
PointCoverage. 

Let further 

c be the OfferedCoverage of the server addressed; 

low = tLow if specified in the request, otherwise low is set to the coverage’s lower 
bound in dimension dname; 

high = tHigh if specified in the request, otherwise high is set to the coverage’s upper 
bound in dimension dname; 

B be an envelope  equal to the domain of c, except that in dimension dname the extent 
is given by the closed interval [low,high]; 

Then, the following requirement holds: 

Requirement 35 /req/core/getCoverage-response-trimming: 
The response to a successful GetCoverage request on coverage identifier id of admissible 
type containing no slicing and exactly one trimming operation with dimension name dname, 
lower bound parameter evaluating to low, and upper bound parameter evaluating to high 
shall be a coverage identical to c, but with extent B and containing all points of c with 
location inside B, and no other points.  

8.4.2.4. Single Dimension Slicing 

In this Subclause, the GetCoverage response is defined for the case that slicing in one dimen-
sion is included in the request and no trimming.  

Let 

id be the coverage identifier specified in the GetCoverage request; 
dname be the dimension name specified in the slice request parameter; 
s be the slicePoint request parameter 

where 

26 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

the coverage addressed is of type gmlcov:GridCoverage, gmlcov:Rectified-
GridCoverage, gmlcov:ReferenceableGridCoverage, or gmlcov:Multi-
PointCoverage. 

Let further 

c be the OfferedCoverage of the server addressed; 

B be an envelope equal to the domain of c, except that in dimension dname the extent 
is given by the closed interval [s,s]. 

Then, the following requirement holds: 

Requirement 36 /req/core/getCoverage-response-slicing: 
The response to a successful GetCoverage request on coverage identifier id of admissible 
type containing no trimming and exactly one slicing operation with dimension name dname, 
and slice point s shall be a coverage identical to c, but containing exactly those cells from c 
which lie within B, with dimension dname removed from both the coverage’s domain set and 
all of the coverage’s cell coordinate positions, with the number of dimensions of the result 
coverage set to the number of dimensions c minus 1. 

NOTE In this WCS Core, no further details are required on the CRS of the result coverage; that is left 
to a CRS extension. The only (implicit) requirement is that the result be a complete, consistent coverage in 
the sense of GML and [OGC 09-146r1], which induces a CRS definition consistent with the domain of the 
result coverage. 

8.4.2.5. Multiple and Mixed Subsetting 

A GetCoverage request may contain several subsetting operations; trimming and slicing op-
erations may be combined in a single request in any sequence. 

Requirement 37 /req/core/getCoverage-response-multiple-subsetting: 
The response to a GetCoverage request containing multiple dimensionSubset elements 
shall be identical to applying the evaluation steps in Subclauses 8.4.2.3 and 8.4.2.4 to the 
coverage addressed in any sequence. 

8.4.3 GetCoverage exceptions 

Requirement 38 /req/core/getCoverage-exception-noSuchCoverage: 
When a WCS server encounters an error while performing a GetCoverage operation it shall 
return an exception report message chosen as follows: 
- if the error occurs while performing some extension functionality:  
 an exception as specified by the respective extension; 
- otherwise, if an error occurs which is described in column “meaning of exception 
 code” in Table 18:  
 the corresponding exception as listed in Table 18; 
- otherwise:  
 an exception as specified in Clause 8 of [OGC 06-121r9].  
For each listed exceptionCode, the contents of the locator parameter value shall be as 
specified in the right column of  Table 18. 
Dependency: [OGC 06-121r9] Clause 8 (http://www.opengis.net/doc/OWS/2.0/clause/8) 

Copyright © 2010 Open Geospatial Consortium  27
 

http://www.opengis.net/doc/OWS/2.0/clause/8


OGC 09-110r3 
 

Table 18 — Exception codes for GetCoverage operation 

exceptionCode value HTTP 
code 

Meaning of exception code locator 
value 

NoSuchCoverage 404 The identifier passed does not match with 
any of the coverages offered by this server 

list of violating 
coverage iden-
tifiers 

InvalidAxisLabel 404 The dimension subsetting operation 
specified an axis label that does not exist in 
the Envelope or has been used more than 
once in the GetCoverage request 

List of violat-
ing dimension 
names 

InvalidSubsetting 404 Operation request contains an invalid sub-
setting value; either a trim or slice para-
meter value is outside the extent of the cov-
erage or, in a trim operation, a lower bound 
is above the upper bound 

Name of pa-
rameter with 
invalid value 

 

8.5 Information Coherence 

Coverages are uniquely identified within a service through their coverageId identifier – in 
other words, the information which a service delivers with respect to a given coverage identi-
fier through any of the request types specified in this document shall depend only on the 
value of this identifier. The identifier’s property of being the link between the request types 
has been established in requirements Requirement 18 and Requirement 26.  

Additionally, addressing a coverage by its identifier through different WCS Core request 
types shall deliver the same information with respect to the common parts. 

Requirement 39 /req/core/information-coherence: 
For every coverage identifier returned in a GetCapabilities response, DescribeCoverage and 
GetCoverage requests on such an identifier shall always deliver information about the same 
OfferedCoverage object. 

NOTE The above holds as long as the service offering is unchanged. The service offering can be up-
dated at any time, though, through successful WCS-T requests, updates by the service operator, for exam-
ple. 

Identifiers of coverages offered by a WCS server shall be immutable over the lifetime of the 
coverage identified, and not be reused for any other coverage offered by this service in fu-
ture.  

NOTE As this requirement cannot be stated formally for conformance testing based on the WCS re-
quest types only, it is not expressed as a requirement. 

9 Extensions 

The specification contained in this WCS Core is not sufficient for a WCS implementation. In 
this Clause, the additional specifications are listed which, together with the core, constitute a 
specification of a minimal WCS-conformant implementation. These specifications are con-
tained in WCS extension standards. 

28 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

A client can verify implementation of such an extension in a server by evaluating the URIs 
delivered in the Profile elements of a GetCapabilities response (see Clause 8.2.2). 

In the sequel, extensions are listed which WCS implementations are required to support. 

9.1 Index-based subsetting 

On grid coverages, access by array index coordinates is required.  

Requirement 40 /req/core/index-subsetting: 
If a WCS implementation offers coverages of type GMLCOV::GridCoverage , GML-
COV::RectifiedGridCoverage, or GMLCOV::ReferenceableGridCoverage 
then it shall support the extension for indexed subsetting, which has URI identifier  
http://www.opengis.net/spec/WCS_service-model_index-subsetting/1.0 . 

NOTE This way, clients can subset coverages in two independent ways, either by indicating coordi-
nates in the CRS named in the srsName attribute of the coverage’s gml:Envelope or by using grid 
coordinates (sometimes referred to as “ImageCRS” coordinates) as specified in the coverage’s 
gml:Grid. 

9.2 Protocol binding 

For communication between client and server, at least one protocol extension is required to 
be implemented by both. 

Requirement 41 /req/core/protocol-extension: 
For the transmission of all operation requests and responses, WCS implementations shall 
support at least one WCS protocol extension, that is: an extension whose URI starts with 
  http://www.opengis.net/spec/WCS_protocol-binding_  

Example The GET/KVP protocol encoding version 1.0 for WCS Core 2.0 is defined by URI 
 http://www.opengis.net/spec/WCS_protocol-binding_get-kvp/1.0  

NOTE As there is no canonical practice among and within communities dealing with coverages to use 
one particular protocol none of the protocols specified in WCS extensions is mandatory. In practice, this 
may lead to a lack of interoperability between client and server implementations. In future user communi-
ties might agree eventually to make on particular protocol binding mandatory. 

9.3 Coverage encoding formats 

For the transfer of coverage-valued results from server to client, at least one coverage format 
encoding extension is required to be implemented by both. 

Requirement 42 /req/core/format-extension: 
For transmission of GetCoverage responses, WCS implementations shall support the 
coverage-encoding conformance class of the Coverage Format Extension, that is: the 
conformance class with URI http://www.opengis.net/spec/WCS_coverage-
encoding/1.0/conf/coverage-encoding. 

NOTE The conformance class mentioned specifies alternatives to return a coverage either as pure 
GML, in some well-known data format (such as GeoTIFF), or as a GML envelope plus a separate file en-
coded in some well-known coverage data format. 

 

Copyright © 2010 Open Geospatial Consortium  29
 

http://www.opengis.net/spec/WCS_service-model_index-subsetting/1.0
http://www.opengis.net/spec/WCS_protocol-binding_
http://www.opengis.net/spec/WCS_protocol-binding_get-kvp/1.0
http://www.opengis.net/spec/WCS_coverage-encoding/1.0/conf/coverage-encoding
http://www.opengis.net/spec/WCS_coverage-encoding/1.0/conf/coverage-encoding


OGC 09-110r3 
 

Bibliography 

[1] OGC 07-067r5, Web Coverage Service Implementation Standard, version 1.1.2 

[2] OGC 07-068r4, Web Coverage Service (WCS) – Transaction operation extension, ver-
sion 1.1.4 

[3] OGC 08-059r3, Web Coverage Service (WCS) – Processing extension, version 1.0.0 

[4] OGC 04-094, Web Feature Service (WFS) Implementation Specification, version 1.1.0 

[5] OGC 06-042, Web Map Service (WMS) Implementation Specification, version 1.3.0 

[6] OGC 09-153, WCS 2.0 Overview: Core and Extensions, version 1.0.0 

[7] OGC 07-036, Geography Markup Language (GML) Encoding Standard, version 3.2.1 

[8] OGC 07-011, Abstract Specification Topic 6: The Coverage Type and its Subtypes, ver-
sion 7.0 (identical to ISO 19123:2005) 

 

 

30 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Annex A 
(normative) 

 
Abstract test suite 

A WCS implementation must satisfy the following system characteristics to be conformant 
with this specification. 

A.1 Conformance Test Class: core 

The OGC URI identifier of this conformance class is: 
http://www.opengis.net/spec/WCS/2.0/conf/core.  

Tests identifiers below are relative to http://www.opengis.net/spec/WCS/2.0/. 

A.1.1 Coverage structure contains Envelope 

Test id: /conf/core/structure-with-boundedBy 

Test Purpose: Requirement /req/core/structure-boundedBy: 
The coverage element of every gmlcov:OfferedCoverage shall 
contain a valid gml:boundedBy element. 

Test method: For all coverages offered by the server under test, retrieve coverage infor-
mation via both DescribeCoverage and GetCoverage operations. Verify 
that both responses contain a gml:Envelope, and that both responses 
contain the same information. Test passes if all individual tests pass. 

A.1.2 Coverage structure contains srsName 

Test id: /conf/core/structure-with-srsName 

Test Purpose: Requirement /req/core/structure-with-srsName: 
The srsName attribute in the gml:Envelope element of a 
gmlcov:OfferedCoverage shall not be empty. 

Test method: For all coverages offered by the server under test, retrieve gml:domain-
Set information through either DescribeCoverage or GetCoverage re-
quests. Verify that the srsName attribute refers to a valid CRS definition, 
and is the same in both responses. Test passes if all individual tests pass. 

A.1.3 Coverage structure contains axisLabels 

Test id: /conf/core/structure-with-axisLabels 

Test Purpose: Requirement /req/core/structure-with-axisLabels: 
The axisLabels attribute in the gml:Envelope element of a 
gmlcov:OfferedCoverage shall not be empty. 

Copyright © 2010 Open Geospatial Consortium  31
 

http://www.opengis.net/spec/WCS/2.0/conf/core
http://www.opengis.net/spec/WCS/2.0/


OGC 09-110r3 
 

Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-
coverage 

Test method: For all coverages offered by the server under test, retrieve gml:domain-
Set information through both DescribeCoverage and GetCoverage re-
quests. Verify that the srsName attribute refers to a valid CRS definition, 
and is the same in both responses. Test passes if all individual tests pass. 

A.1.4 Coverage element name dictionary 

Test id: /conf/core/coverageSubtype-content 

Test Purpose: Requirement /req/core/coverageSubtype-content: 
The coverageSubtype in the ServiceParameters of an Off-
eredCoverage shall indicate the coverage’s type. 

Test method: Send a GetCapabilities request to the server under test.  

For each coverage identifier delivered: 

• If GML is supported by the server as a coverage encoding format:  

o Send a GetCoverage request (with or without subsetting) 
indicating output format GML.  

o Verify that the root element of the coverage returned is 
equal to the coverage’s coverageSubtype value as de-
livered through GetCapabilities. 

• Otherwise, if a coverage encoding format is supported by the server 
which allows to extract the coverage type: 

o Send a GetCoverage request (with or without subsetting) 
indicating said output format.  

o Verify that the coverage type returned is equal to the cover-
age’s coverageSubtype value as delivered through Get-
Capabilities. 

• Otherwise: 

o Do nothing (property cannot be tested). 

Overall test passes if all individual tests pass. 

A.1.5 Coverage element name lookup 

Test id: /conf/core/coverageSubtype-reference 

32 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Test Purpose: Requirement /req/core/coverageSubtype-reference: 
The content model definition of the coverage type referenced in the cov-
erageSubtype in the ServiceParameters of an Offered-
Coverage shall either be normatively referenced by this WCS Core or by 
a WCS extension requirements class supported by the server. 

Test method: Send a GetCapabilities request to the server under test. 

For each coverageSubtype reported check that one of the following 
holds: 

• Its value is equal to one of the (non-abstract) coverage types de-
fined in the GML Application Schema for Coverages [OGC 09-
146r1]. 

• Its value is equal to a coverage type defined in a WCS extension, 
the associated conformance class for which has been included in the 
ows:Profiles of the server’s GetCapabilities response. 

Overall test passes if all individual tests pass. 

A.1.6 ServiceMetadata structure  

Test id: /conf/core/serviceMetadata-structure 

Test Purpose: Requirement /req/core/serviceMetadata-structure: 
The ServiceMetadata structure shall adhere to Figure 3 and Table 5. 

Test method: Send a valid GetCapabilities request to the service under test. Verify that 
the result contains an XML subtree of type ServiceMetadata. 

A.1.7 GetCapabilities: Profile lists valid external conformance classes 

Test id: /conf/core/conformance-class-in-profile 

Test Purpose: Requirement /req/core/conformance-class-in-profile: 
Each element in the Profile list of the ServiceMetadata shall be the 
identifier of an OGC Interface Standard conformance class. 

Test method: Send a valid GetCapabilities request to the service under test; for each 
ows:Profile element listed in the response, check that the correspond-
ing conformance class exists and, if so, perform its conformance tests in 
completeness. Test passes if all conformance classes listed exist and each 
check succeeds completely. 

Copyright © 2010 Open Geospatial Consortium  33
 



OGC 09-110r3 
 

A.1.8 GetCapabilities response contents: OperationsMetadata 

Test id: /conf/core/operationsMetadata 

Test Purpose: Requirement /req/core/operationsMetadata: 
The OperationsMetadata component shall contain three Operation 
instances with case-sensitive name values “GetCapabilities”, “Describe-
Coverage”, and “GetCoverage”, respectively. 

Test method: Send a GetCapabilities request to the service under test; for each operation 
listed in the OperationsMetadata part of the response (if this part is 
present), send a valid request. Check that these requests do not result in 
exceptions. Test passes if all checks are successful. 

A.1.9 Request base 

Test id: /conf/core/requestbase 

Test Purpose: Requirement /req/core/requestbase: 
All WCS request types shall be a subtype of RequestBase. 

Test method: For each request type, send valid requests to server under test. Verify that 
all parameters defined in RequestBase are mandatory. 

Overall test passes if all individual tests pass. 

A.1.10 Service name 

Test id: /conf/core/service-name 

Test Purpose: Requirement NOTE This applies not only to the request types in the Core, but to 
any request type supported by the service on hand. 

/req/core/service-name: 
For all WCS request types, the request service parameter shall have a 
fixed value of “WCS”. 

Test method: For each request type, send valid requests to server under test. Modulate 
request parameter: 

• Parameter value equal to what is required. Verify that request suc-
ceeds. 

• Parameter value not equal to what is required. Verify that request 
fails. 

Overall test passes if all individual tests deliver the result expected. 

34 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

A.1.11 Version value 

Test id: /conf/core/version-number 

Test Purpose: Requirement /req/core/version-number: 
For all WCS request types, the request version parameter shall have a fixed 
value of “2.0”. 

Test method: For each request type, send valid requests to server under test. Modulate 
version parameter: 

• Parameter value equal to what is required. Verify that request suc-
ceeds. 

• Parameter value not equal to what is required. Verify that request 
fails. 

Overall test passes if all individual tests deliver the result expected. 

A.1.12 Correct GetCapabilities request structure 

Test id: /conf/core/getCapabilities 

Test Purpose: Requirement /req/core/getCapabilities: 
A GetCapabilities request shall consist of a GetCapabilities structure 
as defined in Figure 5 and Table 7. 

Test method: Send GetCapabilities requests with valid and invalid request structure. Pass 
test if appropriate valid results or exceptions, resp., are delivered. 

A.1.13 Correct GetCapabilities response structure 

Test id: /conf/core/wcsServiceMetadata-structure 

Test Purpose: Requirement /req/core/wcsServiceMetadata-structure: 
The response to a successful GetCapabilities request shall consist of a 
Capabilities structure as defined in Figure 6, Table 8, Figure 7, and 
Table 9. 

Test method: Send a valid GetCapabilities request to the server under test, check the re-
sult consists of an XML document of type Capabilities and the appro-
priate components, as defined in the places referenced. 

A.1.14 GetCapabilities response contents: service metadata 

Test id: /conf/core/wcsServiceMetadata-contents 

Copyright © 2010 Open Geospatial Consortium  35
 



OGC 09-110r3 
 

Test Purpose: Requirement /req/core/wcsServiceMetadata-contents: 
If present in the response to a successful GetCapabilities request, the 
Contents section shall be populated as specified by OWS Common 
[OGC 06-121r9]. 
Dependency: [OGC 06-121r9] Clause 7 
(http://www.opengis.net/doc/OWS/2.0/clause/7) 

Test method: Test the referenced conformance class of OWS Common [OGC 06-121r9]. 
Test passes if the conformance test passes in completeness. 

A.1.15 GetCapabilities response contents: CoverageSummary 

Test id: /conf/core/operationsMetadata 

Test Purpose: Requirement /req/core/coverageSummary: 
In the response to a successful GetCapabilities request containing a 
CoverageSummary section, each coverage identifier listed shall refer to 
a coverage offered by the server. 

Test method: Send a GetCapabilities request to the service under test. If a wcs:Cover-
ageSummary section is contained in the response then send, for each cov-
erage identifier listed, a valid DescribeCoverage request. Check that none 
of these requests results in an exception. Test passes if all checks are suc-
cessful. 

A.1.16 DescribeCoverage supported 

Test id: /conf/core/describeCoverage 

Test Purpose: Requirement /req/core/describeCoverage: 
Every WCS server shall offer the DescribeCoverage operation. 

Test method: Send a valid DescribeCoverage request and check that the result is not an 
exception. 

A.1.17 Correct DescribeCoverage request structure 

Test id: describeCoverage-request-structure 

Test Purpose: Requirement /req/core/describeCoverage-request-structure: 
A DescribeCoverage request shall consist of a structure as defined in Fig-
ure 8 and Table 10. 

Test method: Send DescribeCoverage requests with valid and invalid request structure. 
Pass test if appropriate valid results or exceptions, resp., are delivered. 

36 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

A.1.18 Valid coverage identifiers in DescribeCoverage request 

Test id: /conf/core/describeCoverage-valid-identifier 

Test Purpose: Requirement /req/core/describeCoverage-valid-identifier: 
Each coverage identifier in the list submitted in a DescribeCoverage re-
quest shall identify a wcs:OfferedCoverage object available on the 
server addressed. 

Test method: Send DescribeCoverage requests with more than one id to server under test 
where 

 All coverages exist 

 At least one exists, and at least one does not exist 

 None of the coverages exist. 

Pass test if appropriate valid results or exceptions, resp., are delivered. 

A.1.19 Correct DescribeCoverage response structure 

Test id: /conf/core/describeCoverage-response-structure 

Test Purpose: Requirement /req/core/describeCoverage-response-structure: 
The response to a successful DescribeCoverage request shall consist of a 
CoverageDescriptions as described in Figure 9, Table 11, and Table 
12. 

Test method: For all coverages offered by the server under test, send a DescribeCoverage 
request to server under test, check the result consists of an XML document 
of type CoverageDescriptions as described in the references stated by 
the requirement. Test passes if all individual tests pass. 

A.1.20 DescribeCoverage returns information on all coverages requested 

Test id: /conf/core/describeCoverage-response-list-size 

Test Purpose: Requirement /req/core/describeCoverage-response-list-size: 
The response to a successful DescribeCoverage request with n>0 coverage 
identifiers shall be a list containing n items. 

Test method: Obtain the list of coverage identifiers by sending a valid GetCapabilities 
request to the server under test. Send DescribeCoverage requests with a 
(non-empty) subset of the list and with the complete identifier list. Check 
that the response list matches the request list in size. 

Copyright © 2010 Open Geospatial Consortium  37
 



OGC 09-110r3 
 

A.1.21 Correct DescribeCoverage response contents 

Test id: /conf/core/describeCoverage-response-contents 

Test Purpose: Requirement /req/core/describeCoverage-response-contents: 
The response to a successful DescribeCoverage request containing n>0 
identifiers id1, …, idn shall contain, at position i in the response list,  a 
wcs:coverageDescription consisting of a copy of the identified cov-
erage’s metadata, that is: the complete wcs:CoverageOffering infor-
mation minus the coverage rangeSet. 
Dependency: http://www.opengis.net/spec/GMLCOV/1.0/conf/gml-
coverage 

Test method: Obtain the list of coverage identifiers by sending a valid GetCapabilities 
request to the server under test. Send DescribeCoverage requests with a 
(non-empty) subset of the list and with the complete identifier list. Check 
responses whether they fulfill the requirement for each coverage description 
returned. 

A.1.22 DescribeCoverage srsName value 

Test id: /conf/core/describeCoverage-response-srsName 

Test Purpose: Requirement /req/core/describeCoverage-response-srsName: 
If a geometric or temporal object in the domainSet of a coverage-
Description specifies an srsName attribute, the value of this attribute 
shall be identical to the srsName attribute of the boundedBy element of 
the containing coverageDescription. 

Test method: Send DescribeCoverage requests containing an identifier of a coverage on 
the server under test which contains an srsName attribute value in its 
coverageDescription. Check that, in the response, both srsName 
values addressed in the requirement are equal. Pass test if check succeeds. 

A.1.23 DescribeCoverage exceptions 

Test id: /conf/core/describeCoverage-exceptions 

Test Purpose: Requirement /req/core/describeCoverage-exceptions: 
When a WCS server encounters an error while performing a Describe-
Coverage operation it shall return an exception report message chosen as 
follows: 
- if the error occurs while performing some extension functionality:  
 an exception as specified by the respective extension; 
- otherwise, if an error occurs which is described in column “meaning of 
exception 
 code” in Table 13:  
 the corresponding exception as listed in Table 13; 
- otherwise:  

38 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

 an exception as specified in Clause 8 of [OGC 06-121r9].  
For each listed exceptionCode, the contents of the locator parameter 
value shall be as specified in the right column of  Table 13. 
Dependency: [OGC 06-121r9] Clause 8 
(http://www.opengis.net/doc/OWS/2.0/clause/8) 

Test method: For each exception referenced in the requirement: Send an erroneous De-
scribeCoverage request to the server under test provoking this exception, as 
per its definition. Check for proper exception reporting. Pass test if all 
checks succeed. 

A.1.24 GetCoverage supported 

Test id: /conf/core/getCoverage 

Test Purpose: Requirement /req/core/getCoverage: 
Every WCS implementation shall support the GetCoverage operation. 

Test method: Send a valid GetCoverage request to the server under test and check that 
the response is not an exception. 

A.1.25 GetCoverage request structure 

Test id: /conf/core/getCoverage-request-structure 

Test Purpose: Requirement /req/core/getCoverage-request-structure: 
A GetCoverage request shall consist of a structure as defined in Figure 10, 
Table 14, Table 15, Table 16, and Table 17. 
Dependency: [OGC 06-121r9] Clause 7 
(http://www.opengis.net/doc/OWS/2.0/clause/7) 

Test method: Send a valid GetCoverage request to server under test which conforms to 
the references in the requirement. Check that the response is not an excep-
tion. 

A.1.26 GetCoverage request addresses existing coverage 

Test id: /conf/core/getCoverage-request-valid-identifier 

Test Purpose: Requirement /req/core/getCoverage-request-valid-identifier: 
The id parameter value in a GetCoverage request shall be equal to the 
identifier of one of the coverages offered by the server addressed. 

Test method: Send valid GetCoverage requests to server under test addressing existing 
and non-existing coverages, resp. Check if appropriate results or excep-
tions, resp., are delivered. 

Copyright © 2010 Open Geospatial Consortium  39
 



OGC 09-110r3 
 

A.1.27 GetCoverage subsetting: allowed coverage types 

Test id: /conf/core/getCoverage-request-subsetting-type 

Test Purpose: Requirement /req/core/getCoverage-request-subsetting-type: 
If a GetCoverage request contains a dimensionSubset component then 
the id parameter in the request shall refer to a coverage on the server 
which is of one of the following subtypes of GMLCOV::Coverage:  
GMLCOV:GridCoverage , GMLCOV:RectifiedGridCoverage, 
GMLCOV:ReferenceableGridCoverage, GMLCOV:MultiPoint-
Coverage. 

Test method: Send valid GetCoverage subsetting requests on all coverages on the server 
on hand. Check that for the disallowed subtypes an exception is returned 
and for the allowed subtypes a non-exception response. 

A.1.28 GetCoverage request parameter dimension 

Test id: /conf/core/getCoverage-request-valid-dimension 

Test Purpose: Requirement /req/core/getCoverage-request-valid-dimension: 
Every dimension value in a GetCoverage request shall be equal to one of 
the axisLabels dimension names specified in the 
gml:SRSInformationGroup of the coverage’s gml:Envelope, 
unless the server offers a WCS CRS extension which overrides this requi-
rement. 

Test method:  If a CRS extension is implemented by the server under test which over-
rides this requirement:  

Do nothing. 

 Otherwise:  

Send otherwise valid GetCoverage requests with all dimension val-
ues appearing in the axisLabel of the coverage addressed, with some 
of the dimension values appearing there, and with none of the dimen-
sion names provided appearing there. Verify that coverage response is 
returned if an only if dimension occurring in the axisLabel attrib-
ute are used, and an exception is reported otherwise. 

A.1.29 No duplicate dimension subsetting in GetCoverage 

Test id: /conf/core/getCoverage-request-no-duplicate-dimension 

Test Purpose: Requirement /req/core/getCoverage-request-no-duplicate-dimension: 
A GetCoverage request shall contain at most one subsetting operation for 
each of the dimensions of the coverage addressed. 

40 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Test method: Send otherwise valid GetCoverage  requests to server under test which con-
tain duplicate, and send requests which contain no duplicate dimension 
names. Do so for requests with single, multiple, and mixed subsetting. Veri-
fy that, whenever at least one duplicate dimension occurs, an exception is 
returned and a normal response otherwise. 

A.1.30 GetCoverage trimming within coverage limits 

Test id: /conf/core/getCoverage-request-trim-within-extent 

Test Purpose: Requirement /req/core/getCoverage-request-trim-within-extent: 
Let the extent of the coverage’s gml:Envelope along the dimension 
specified in the trim request range from L to H. Then, for the trim bounds 
trimLow  and trimHigh the following shall hold: L ≤ trimLow ≤ 
trimHigh ≤ H. 

Test method: Send otherwise valid GetCoverage requests with matching and with violat-
ing trimming positions to server under test. Check if appropriate results are 
returned if and only if the requirement is fulfilled, and an exception other-
wise. Pass test if all checks succeed. 

A.1.31 GetCoverage slicing within coverage limits 

Test id: /conf/core/getCoverage-request-slice-within-extent 

Test Purpose: Requirement /req/core/getCoverage-request-slice-within-extent: 
For an extent L to H of the input coverage along the given dimension, the 
slicing position, slicePoint, shall be L ≤ slicePoint ≤ H. 

Test method: Send otherwise valid GetCoverage requests with matching and with violat-
ing slicing positions to server under test. Check if appropriate results are 
returned if and only if the requirement is fulfilled, and an exception other-
wise. Pass test if all checks succeed. 

A.1.32 GetCoverage response structure 

Test id: /conf/core/getCoverage-response-structure 

Test Purpose: Requirement /req/core/getCoverage-response-structure: 
The contents of the response to a successful GetCoverage request shall be a 
concrete subtype of  AbstractCoverage. 

Test method: For each coverage offered by the server on hand, send a valid GetCoverage 
request to server under test. Check that the result validates against 
gmlcov:AbstractCoverage. Test passes if all individual tests pass. 

Copyright © 2010 Open Geospatial Consortium  41
 



OGC 09-110r3 
 

A.1.33 Correct coverage representation in GetCoverage result 

Test id: /conf/core/getCoverage-response-encoding 

Test Purpose: Requirement /req/core/getCoverage-response-encoding: 
The contents of the response to a successful GetCoverage request shall be 
encoded as specified in one of the coverage format extensions supported, 
with the coverage information contents being consistent with the require-
ments stated in this WCS Core. 

Test method: For each coverage encoding format (i.e., format encoding extension) sup-
ported by the server under test: Send a valid GetCoverage request to re-
trieve a coverage in this format. Check that the result is a valid instance of 
the format indicated. Do so for both complete and subsetted coverages. Pass 
test if all checks succeed. 

A.1.34 Correct coverage contents in GetCoverage result 

Test id: /conf/core/getCoverage-response-contents 

Test Purpose: Requirement /req/core/getCoverage-response-contents: 
The response to a successful GetCoverage request with coverage identifier 
id shall consist of the coverage component of the OfferedCoverage 
identified by id, unless the server supports a WCS extension which over-
rides this requirement. 

Test method: For all coverage types supported for all coverage types supported and for 
all coverage encoding formats (i.e., format encoding extension) supported 
by the server under test:  

 Perform two GetCoverage requests on the same coverage where the 
request envelopes contain a non-empty overlap.  If the coverage type 
supports subsetting then include trim and slice operations in the cover-
age requests, otherwise retrieve the complete coverage twice.  

 For all locations present in both coverage responses (i.e., for all loca-
tions in the overlap region) check that corresponding locations in both 
response coverages have identical values.  

Test passes if all comparison reveal equality. 

A.1.35 GetCoverage trimming operation 

Test id: /conf/core/getCoverage-response-trimming 

Test Purpose: Requirement /req/core/getCoverage-response-trimming: 
The response to a successful GetCoverage request on coverage identifier 
id of admissible type containing no slicing and exactly one trimming op-
eration with dimension name dname, lower bound parameter evaluating to 

42 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

low, and upper bound parameter evaluating to high shall be a coverage 
identical to c, but with extent B and containing all points of c with location 
inside B, and no other points. 

Test method: Send valid GetCoverage requests to the server under test with a single 
trimming as the only subsetting operation. Check correctness of the cover-
age response returned. Do so up to the maximum number of dimensions 
supported by the server and for subsetting dimensions at any position in the 
list of dimensions. Pass test if all checks succeed. 

A.1.36 GetCoverage slicing operation 

Test id: /conf/core/getCoverage-response-slicing 

Test Purpose: Requirement /req/core/getCoverage-response-slicing: 
The response to a successful GetCoverage request on coverage identifier 
id of admissible type containing no trimming and exactly one slicing op-
eration with dimension name dname, and slice point s shall be a coverage 
identical to c, but containing exactly those cells from c which lie within B, 
with dimension dname removed from both the coverage’s domain set and 
all of the coverage’s cell coordinate positions, with the number of dimen-
sions of the result coverage set to the number of dimensions c  

Test method: Send valid GetCoverage requests to the server under test with a single slic-
ing as the only subsetting operation. Check correctness of the coverage 
response returned. Do so up to the maximum number of dimensions sup-
ported by the server and for subsetting dimensions at any position in the list 
of dimensions. Pass test if all checks succeed. 

A.1.37 Dimension subsetting sequence invariance in GetCoverage 

Test id: /conf/core/getCoverage-response-multiple-subsetting 

Test Purpose: Requirement /req/core/getCoverage-response-multiple-subsetting: 
The response to a GetCoverage request containing multiple dimension-
Subset elements shall be identical to applying the evaluation steps in 
Subclauses 8.4.2.3 and 8.4.2.4 to the coverage addressed in any sequence. 

Test method: Pick some combination of trimming and slicing operations on a given cov-
erage. Construct a set of GetCoverage requests by building all permutations 
of these subsetting operations. Compare the results of all requests whether 
the result returned is identical. Pass test if all checks succeed. 

A.1.38 GetCoverage exceptions 

Test id: /conf/core/getCoverage-exceptions 

Copyright © 2010 Open Geospatial Consortium  43
 



OGC 09-110r3 
 

Test Purpose: Requirement /req/core/getCoverage-exception-noSuchCoverage: 
When a WCS server encounters an error while performing a GetCoverage 
operation it shall return an exception report message chosen as follows: 
- if the error occurs while performing some extension functionality:  
 an exception as specified by the respective extension; 
- otherwise, if an error occurs which is described in column “meaning of 
exception 
 code” in Table 18:  
 the corresponding exception as listed in Table 18; 
- otherwise:  
 an exception as specified in Clause 8 of [OGC 06-121r9].  
For each listed exceptionCode, the contents of the locator parameter 
value shall be as specified in the right column of  Table 18. 

Test method: For each exception referenced in the requirement: Send an erroneous Get-
Coverage request to the server under test provoking this exception, as per 
its definition. Check for proper exception reporting. Pass test if all checks 
succeed. 

A.1.39 Information coherence across request types 

Test id: /conf/core/information-coherence 

Test Purpose: Requirement /req/core/information-coherence: 
For every coverage identifier returned in a GetCapabilities response, De-
scribeCoverage and GetCoverage requests on such an identifier shall al-
ways deliver information about the same OfferedCoverage object. 

Test method: Send a valid GetCapabilities request to the server under test to obtain an 
identifier list, idList, of the coverages offered.  

For each identifier id within idList: 

• Issue a valid DescribeCoverage, resulting in response did 

• Issue a valid GetCoverage request retrieving the complete, un-
changed coverage as specified in Subclause 8.4.2.2 (i.e., without 
any subsetting operation), resulting in response gid 

• Check if common components of did and gid (as per schema) are 
equal 

Pass test if all checks succeed. 

A.1.40 Grid subsetting 

Test id: /conf/core/index-subsetting 

44 Copyright © 2010 Open Geospatial Consortium
 



OGC 09-110r3 
 

Copyright © 2010 Open Geospatial Consortium  45
 

Test Purpose: Requirement /req/core/index-subsetting: 
If a WCS implementation offers coverages of type GMLCOV::GridCov-
erage , GMLCOV::RectifiedGridCoverage, or GMLCOV::Refer-
enceableGridCoverage then it shall support the extension for indexed 
subsetting, which has URI identifier  
http://www.opengis.net/spec/WCS_service-model_index-
subsetting/1.0 

Test method: Determine the list of supported extensions via a valid GetCapabilities re-
quest; check that the extension required is listed. 

A.1.41 Protocol binding extensions 

Test id: /conf/core/protocol-extension 

Test Purpose: Requirement /req/core/protocol-extension: 
For the transmission of all operation requests and responses, WCS imple-
mentations shall support at least one WCS protocol extension, that is: an 
extension whose URI starts with 
  http://www.opengis.net/spec/WCS_protocol-binding_ 

Test method: Determine the list of supported extensions via a valid GetCapabilities re-
quest; check that there is at least one protocol extension listed. 

A.1.42 Coverage encoding format extensions 

Test id: /conf/core/format-extension 

Test Purpose: Requirement /req/core/format-extension: 
For transmission of GetCoverage responses, WCS implementations shall 
support the coverage-encoding conformance class of the Coverage 
Format Extension, that is: the conformance class with URI 
http://www.opengis.net/spec/WCS_coverage-
encoding/1.0/conf/coverage-encoding 

Test method: Determine the list of supported extensions via a valid GetCapabilities re-
quest; check that the coverage-encoding conformance class is listed in 
the response. 

 

-- end of ATS -- 


	1 Scope 
	2 Conformance
	3 Normative references
	4 Terms and definitions
	5 Conventions
	6 WCS data model
	7 WCS  service model
	8 WCS operations
	8.2.1 GetCapabilities request
	8.2.2 GetCapabilities response
	8.2.3 Sample GetCapabilities response
	8.2.4 GetCapabilities exceptions
	8.3.1 DescribeCoverage request 
	8.3.2 DescribeCoverage response
	8.3.3 DescribeCoverage exceptions
	8.4.1 GetCoverage request
	8.4.2 GetCoverage response
	8.4.2.1. General coverage response structure
	8.4.2.2. Complete coverage retrieval
	8.4.2.3. Single Dimension Trimming
	8.4.2.4. Single Dimension Slicing
	8.4.2.5. Multiple and Mixed Subsetting
	8.4.3 GetCoverage exceptions


	9 Extensions
	Bibliography
	Annex A(normative)Abstract test suite



