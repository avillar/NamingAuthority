
OGC 01-063r2 

File name: 02-102  
 

Open GIS Consortium Inc.  
Date:   2002-03-08 

Reference number of this OpenGIS© project document:    OGC 01-063r2 

Version: 1.0.2 

Category: OpenGIS© Abstract Specification 

Editor:   Roel Nicolai, Shell International E and P Inc. 

The OpenGIS® Abstract Specification  

Topic 2: Spatial Referencing by Coordinates 

 

Copyright notice 

This OGC document is a draft and is copyright-protected by OGC. While the 
reproduction of drafts in any form for use by participants in the OGC standards 
development process is permitted without prior permission from OGC, neither this 
document nor any extract from it may be reproduced, stored or transmitted in any 
form for any other purpose without prior written permission from OGC. 

 
Warning 

This document is not an OGC Standard. It is distributed for review and comment. It 
is subject to change without notice and may not be referred to as an OGC Standard. 

Recipients of this document are invited to submit, with their comments, notification 
of any relevant patent rights of which they are aware and to provide supporting 
documentation. 

Document type:     OpenGIS© Publicly Available Standard 
Document subtype:     
Document stage:    Draft 
Document language:  English 



OGC 00-063r2 

ii © OGC 2002 – All rights reserved 
 

Contents 

i. Preface ................................................................................................................... iv 

ii. Revision history .................................................................................................... iv 

Foreword ............................................................................................................................ v 

Introduction ...................................................................................................................... vi 

1 Scope....................................................................................................................... 1 

2 Conformance.......................................................................................................... 1 

3 Normative references ............................................................................................ 1 

4 Terms and definitions ........................................................................................... 2 

5 Conventions.......................................................................................................... 11 
5.1 Symbols (and abbreviated terms) ...................................................................... 11 
5.2 UML Notation...................................................................................................... 12 
5.3 Attribute status.................................................................................................... 13 

6 Coordinates and coordinate reference systems ................................................ 14 
6.1  Coordinates .......................................................................................................... 14 
6.2 Some geodetic concepts....................................................................................... 15 
6.3 Coordinate reference system.............................................................................. 17 
6.3.1 Introduction ......................................................................................................... 17 
6.3.2  Kind of coordinate reference system ................................................................. 17 
6.3.3 Single coordinate reference system.................................................................... 18 
6.3.4 Compound coordinate reference system........................................................... 20 
6.4 Coordinate system............................................................................................... 22 
6.4 Coordinate system............................................................................................... 22 
6.5 Coordinate system axis ....................................................................................... 25 
6.6 Datum ................................................................................................................... 27 
6.6.1 Types of datums................................................................................................... 27 
6.6.2 Datum description............................................................................................... 27 
6.7 Prime meridian.................................................................................................... 31 
6.8 Ellipsoid................................................................................................................ 32 

7. Coordinate operation .......................................................................................... 33 
7.1 General ................................................................................................................. 33 
7.2 Coordinate conversions....................................................................................... 34 
7.3 Concatenated coordinate operation................................................................... 35 
7.4 The derivation of coordinate operations from other coordinate 

operations............................................................................................................. 35 
7.5 Pass-through coordinate operation.................................................................... 37 
7.6 Coordinate operation method and parameters ................................................ 39 



OGC 01-063r2 

© OGC 2002 – All rights reserved iii
 

8. Metadata for spatial referencing ....................................................................... 40 
8.1 RS_Identifier........................................................................................................ 40 
8.2 Names and aliases................................................................................................ 41 
8.3 Unit of Measure ................................................................................................... 42 
8.4 Accuracy............................................................................................................... 44 
A.1 UML Schema for Coordinate Reference System, Coordinate System and 

Datum packages................................................................................................... 48 
A.2 UML Schema for Coordinate Operation package ........................................... 49 
A.3 UML Schema showing relationships between Coordinate Reference 

System package and Coordinate Operation package ...................................... 50 
A.4 UML Schema for Coordinate Quality package................................................ 51 
A.5 UML Schema for Metadata Coordinates package........................................... 52 
B.1 UML modeling..................................................................................................... 53 
B.2 Coordinate Reference System subtypes ............................................................ 54 
B.3 Coordinate System subtypes .............................................................................. 54 
B.4 Coordinate conversions and their role in defining Coordinate Reference 

Systems ................................................................................................................. 55 
B.5 Coordinate operations......................................................................................... 56 
B.6 RS_Identifier........................................................................................................ 57 
B.7 Name attribute added ......................................................................................... 58 
B.8 Modelling of ellipsoid parameters ..................................................................... 58 
B.9 Unit of measure.................................................................................................... 58 
B.10 Accuracy............................................................................................................... 58 

Bibliography .................................................................................................................... 61 
 



OGC 00-063r2 

iv © OGC 2002 – All rights reserved 
 

 

i. Preface 

This document describes modelling requirements for spatial referencing by coordinates. 
Coordinate Reference System data is metadata about spatial data whose positions are 
described by coordinates. Without the Coordinate Reference System data, interpretation 
of coordinates is ambiguous. 

This document supplements and corrects ISO 19111: Geographic Information – Spatial 
Referencing by Coordinates. It makes use of contents and formatting of the ISO 
document where possible, providing additional modelling detail and textual clarification 
only where it was felt to be required. The differences with ISO DIS 19111 are 
summarized in an annex. 

This document replaces OGC document 99-102r1 – The OpenGISTM Abstract 
Specification, Topic 2: Spatial Reference Systems. 

ii. Revision history 

Date Release Author Paragraph modified Description 
7 Sept 2001 01-063 RN New document First draft for internal OGC feedback 
12 Nov 2001 01-063r1 

(v 1.0.1) 
RN Various editorial comments 

and a modification of the 
UML model 

Initial feedback from CT Working 
Group implemented 

8 Jan 2002 01-063r2 
v 1.0.2 

RN Various editorial comments 
and modifications of the 
UML model  

Final feedback implemented from the 
CT Working Group 

 

 



OGC 01-063r2 

© OGC 2002 – All rights reserved v
 

Foreword 

Attention is drawn to the possibility that some of the elements of this document may be 
the subject of patent rights. The Open GIS Consortium Inc. shall not be held responsible 
for identifying any or all such patent rights. 

This document replaces OGC Document 99-102r1, titled “The OpenGIS® Abstract 
Specification – Topic 2: Spatial Reference Systems”. The reasons for complete 
replacement rather than a revision are: 

a) The publication of ISO 19111, which covers largely the same ground as OGC 
Document 99-102r1 and the alignment with that document. 

b) Alignment with published Implementation Specification “OpenGIS® Coordinate 
Transformation Services Implementation Specification” and OpenGIS® 
Recommendation Paper: “Recommended Definition Data for Coordinate Reference 
Systems and Coordinate Transformations”. The abstract model that underlies both of 
these documents has progressed considerably from that described in OGC Document 
99-102r1 and is more in line with ISO 19111. 

Although this document is to a very large extent based on ISO 19111, it deviates on a 
number of points and adds a degree of detail. A list of these variations is provided in 
Annex B. Rather than publishing a list of variations with ISO 19111 and forcing the 
reader to continually make cross-references, it was decided to provide the reader with a 
coherent document that reproduces parts of ISO 19111 verbatim, interlaced with the 
additions and variations mentioned. It is felt that this enhances readability and will 
facilitate understanding this specialist subject matter. 

 

 



OGC 00-063r2 

vi © OGC 2002 – All rights reserved 
 

Introduction 

Position on or near the Earth’s surface can be described by systems of spatial referencing. 
These are of two basic types: 

− those using coordinates; 

− those based on geographic identifiers (for example postal addresses, administrative 
areas). 

Spatial referencing by geographic identifiers is defined in ISO 19112, Geographic 
information - Spatial referencing by geographic identifiers. The subject matter of this 
document is confined to spatial referencing by coordinates. 

Coordinates are unambiguous only when the coordinate reference system to which those 
coordinates are related has been fully defined. A coordinate reference system is a 
coordinate system that has a reference to the Earth. 

This document describes the elements that are necessary to fully define various types of 
coordinate systems and coordinate reference system applicable to geographic 
information. The subset of elements required is partially dependent upon the type of 
coordinates. The document also includes optional fields to allow for the inclusion of non-
essential coordinate reference system information. The elements are intended to allow 
implementations to be designed that permit both machine and human interpretation of the 
data. A set of coordinates on the same coordinate reference system requires one 
coordinate reference system description. 

In addition to describing a coordinate reference system, this document provides for the 
description of a coordinate transformation or coordinate conversion between two 
different coordinate reference systems. With such information, geographic data referred 
to different coordinate reference systems can be merged together for integrated 
manipulation. Alternatively an audit trail of coordinate reference system manipulations 
can be maintained. 

 



DRAFT OpenGIS© Specification OGC 01-063r2

 

© OGC 2002 – All rights reserved 1
 

OGC Abstract Specification – Topic 2: Spatial Referencing by 
Coordinates 

1 Scope 

This part of the OGC Abstract Specification defines the conceptual schema for the 
description of spatial referencing by coordinates, optionally extended by temporal 
referencing. It describes the minimum data required to define 1-, 2- and 3-dimensional 
coordinate reference systems with an extension to merged spatial-temporal coordinate 
reference systems. It allows additional descriptive information to be provided. It also 
describes the information required to change coordinate values from one coordinate 
reference system to another. It is applicable to producers and users of geographic 
information. Although it is applicable to digital geographic data, its principles can be 
extended to many other forms of geographic data such as maps, charts, and text 
documents. 

2 Conformance 

This document does not currently specify requirements for conformance to this 
specification, of OGC Implementation Specifications and other OGC documents. Such 
conformance requirements will be added to future versions of this document, as 
considered needed. Requirements for conformance to OGC Implementation 
Specifications or other documents based on the OGC Abstract Specification are specified 
in those documents. 

3 Normative references 

The following normative documents contain provisions that, through reference in this 
text, constitute provisions of this document. For dated references, subsequent 
amendments to, or revisions of, any of these publications do not apply. However, parties 
to agreements based on this document are encouraged to investigate the possibility of 
applying the most recent editions of the normative documents indicated below. For 
undated references, the latest edition of the normative document referred to applies. 

ISO 19103, Geographic Information – Conceptual Schema Language 

ISO 19108, Geographic Information – Temporal Schema 

ISO 19111, Geographic Information – Spatial Referencing by Coordinates 



OGC 00-063r2 

2 © OGC 2002 – All rights reserved 
 

ISO 19114, Geographic information – Quality Evaluation Procedures 

ISO19115, Geographic Information – Metadata 

Guidelines for Successful OGC Interface Specifications, OGC document 00-014r1. 

Normative reference to ISO 19115 is restricted as follows. ISO 19115 contains 
descriptions of elements of coordinate reference systems and coordinate operations, 
which are described in these Abstract Specifications as well as in ISO 19111. These 
elements are described as optional in ISO 19115, and are excluded as normative 
references for these Abstract Specifications.  

4 Terms and definitions 

For the purposes of this document, the following terms and definitions apply.   Some 
definitions deviate from ISO/DIS 19111, where more universally valid definitions are 
provided. 

4.1  
Cartesian coordinate system 
coordinate system which gives the position of points relative to N mutually-perpendicular 
straight axes 

NOTE In the context of geospatial coordinates the maximum value of N is three. 

4.2  
compound coordinate reference system 
coordinate system describing the position of points through two or more independent 
coordinate reference systems 

EXAMPLE  One coordinate reference system can be a two-dimensional horizontal coordinate system, and the 
other coordinate reference system can be a vertical gravity-related height system. 

4.3  
concatenated transformation  
sequential application of multiple transformations 

4.4  
coordinate 
one of a sequence of N numbers designating the position of a point in N-dimensional 
space 

NOTE In a coordinate reference system, the coordinate numbers must be qualified by units. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 3
 

4.5  
coordinate conversion 
change of coordinates, based on a one-to-one relationship, from one coordinate reference 
system to another based on the same datum 

EXAMPLE Between geodetic and Cartesian coordinate systems or between geodetic coordinates and projected 
coordinates, or change of units such as from radians to degrees or feet to metres. 

NOTE A conversion uses parameters which have specified values, not empirically determined values. 

4.6  
coordinate reference system 
coordinate system which is related to the real world by a datum 

NOTE For geodetic and vertical datums, it will be related to the Earth. 

4.7  
coordinate system  
set of (mathematical) rules for specifying how coordinates are to be assigned to points 

NOTE 1 One coordinate system may be used in many coordinate reference systems. 

NOTE 2 The geometric properties of a coordinate space determine how distances and angles between points are 
calculated from the coordinates. For example, in an ellipsoidal (2D) space distances are defined as curves on the 
surface of the ellipsoid, whereas in a Euclidean plane as used for projected CRS distance is the length of a straight line 
between two points.  The mathematical rules that determine distances and angles are calculated from coordinates and 
vice versa are comprised in the concept of coordinate system. 

4.8  
coordinate transformation 
computational process of converting a position given in one coordinate reference system 
into the corresponding position in another coordinate reference system 

NOTE 1 A coordinate transformation can require and use the parameters of the ellipsoids associated  with the 
source and  target coordinate reference systems,  in addition to the parameters explicitly associated with the 
transformation. 

 
NOTE 2 The term ‘transformation’ is used only when the parameter values associated with the transformation have 
been determined empirically from a measurement / calculation process.  This is typically the case when a change of 
datum is involved. 

4.9  
covariance matrix 
matrix of elements (or cells) that contain the expected average values of the product of 
the error in the matrix row coordinate times the simultaneous error in the matrix column 
coordinate 

NOTE 1 A covariance matrix is a form of detailed error estimate data. Covariance matrices are sometimes called 
variance-covariance matrices. 

NOTE 2 All complete covariance matrices are symmetrical, meaning that the same element values appear on both 
sides of the diagonal elements. 

NOTE 3 Covariance matrices contain information about the absolute and/or relative accuracy of the data elements 
(e.g. coordinates).  The absolute accuracy information is contained in the diagonal matrix elements.  Relative accuracy 



OGC 00-063r2 

4 © OGC 2002 – All rights reserved 
 

is a function of multiple diagonal and off-diagonal elements.  A complete covariance matrix for N specific points in 3D 
space would contain 3N rows by 3N columns 

EXAMPLE For three coordinates, a covariance matrix is a 3 by 3 matrix, with the matrix rows and columns each 
corresponding to the three coordinates. For just two horizontal coordinates, a covariance matrix is a 2 by 2 matrix, with 
the matrix rows and columns each corresponding to the two horizontal coordinates. Similarly, for two image 
coordinates, a covariance matrix is a 2 by 2 matrix, with the matrix rows and columns each corresponding to the two 
image coordinates.  

4.10  
cylindrical coordinates  
3-dimensional coordinates with two distance and one angular coordinate 

4.11  
datum 
parameter or set of parameters that determine the location of the origin, the orientation 
and the scale of a coordinate reference system 

4.12  
depth 
distance of a point below a chosen reference surface usually measured along the local 
vertical (gravity vector). 

NOTE 1 Depth is sometimes measured along a line that does not follow the vector of gravity locally.  An example 
is depth in an oil or gas well.  These are generally measured along the wellbore path, which may vary significantly from 
the local vertical.  Some sections of a wellbore path may even run horizontally or slope upwards.  Nevertheless the 
distance along the wellbore path is referred to as ‘depth’. 

NOTE 2 See elevation, ellipsoidal height, and gravity-related height. 

4.13  
dimension 
number of ordinates needed to describe a position in a coordinate system 

4.14  
elevation 
distance of a point from a chosen reference surface along the direction of the gravity 
vector from the point to that surface. 

NOTE 1 See ellipsoidal height and gravity-related height.  It should be noted that ellipsoidal height is defined w.r.t. 
an ellipsoidal model of the shape of the earth.  Ellipsoidal height is measured from the point along the line 
perpendicular to the ellipsoid’s surface.  

NOTE 2 Height of a point outside the surface treated as positive; negative height is also named as depth. 

4.15  
ellipsoid 
surface formed by the rotation of an ellipse about an axis 

NOTE 1 In this document the axis of rotation is always the minor axis.  

NOTE 2 Sometimes the alternative word ‘spheroid’ is used in geodetic or survey practice to express the same 
concept.  Although mathematically speaking incorrect the more common term in geodetic or survey practice is 
‘ellipsoid’. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 5
 

NOTE 3 An alternative term used in geodetic practice is ‘reference ellipsoid’  

4.16  
ellipsoidal coordinate system  
geodetic coordinate system 
coordinate system in which position is specified by geodetic latitude, geodetic longitude 
and (in the three-dimensional case) ellipsoidal height, associated with one or more 
geographic coordinate reference systems. 

4.17  
ellipsoidal height 
geodetic height 
distance of a point from the ellipsoid measured along the perpendicular from the ellipsoid 
to this point, positive if upwards or outside of the ellipsoid 

NOTE Only used as part of a three-dimensional geodetic coordinate system and never on its own. 

4.18  
engineering coordinate reference system 
a coordinate reference system that is defined for and usually used in a contextually local 
sense, which may be an area, significantly less than the complete surface of the earth or a 
moving platform and its vicinity 

EXAMPLE Local engineering and architectural coordinates, grids, and drawings; also:  vessel navigation 
systems and CRS’s associated with orbiting spacecraft  

NOTE 1 A transformation of engineering coordinates to geodetic coordinates may or may not be possible 
depending on whether such operation parameters have been determined (or defined). 

NOTE 2 An Engineering CRS may be defined to describe geometry that is local to the context of a moving 
platform, such as a car, a ship, an aircraft or a spacecraft.  Transformation of such engineering coordinates to geodetic 
coordinates involves time dependent operation parameters and, when repeated at (regular) time-intervals, will result in 
a record of the ‘track’ of the moving platform. Additionally such a transformation may be used for real-time navigation 
of the platform. The term ‘vicinity of the moving platform’ may constitute an area varying from the immediate 
surroundings of the platform to the entire earth, the latter being the case in a number of space applications. 

4.19  
flattening 
ratio of the difference between the semi-major (a) and semi-minor axis (b) of an ellipsoid 
to the semi-major axis; f = (a-b)/a 

NOTE Sometimes inverse flattening 1/f = a/(a-b) is given instead of flattening; 1/f is also known as reciprocal 
flattening. 

4.20  
geocentric coordinate reference system 
3-dimensional coordinate reference system with its origin at the (approximate) centre of 
the Earth.  



OGC 00-063r2 

6 © OGC 2002 – All rights reserved 
 

4.21  
geodetic coordinates 
coordinates defined in a geocentric, geographic (2D or 3D) or projected coordinate 
reference system. 

4.22  
geodetic datum 
datum describing the relationship of a 3D or 2D coordinate system to the Earth 

NOTE In most cases, the geodetic datum includes an ellipsoid definition. 

4.23  
geographic coordinate reference system 
coordinate reference system using an ellipsoidal coordinate system and based on an 
ellipsoid that approximates the shape of the Earth 

NOTE 1 A geographic coordinate system can be 2D or 3D. In a 3D geographic coordinate system, the third 
dimension is height above the ellipsoid surface 

4.24  
geographic dataset  
dataset with a spatial content 

4.25  
geoid 
level surface which best fits mean sea level either locally or globally 

NOTE “Level surface” means an equipotential surface of the Earth’s gravity field that is everywhere 
perpendicular to the direction of gravity. 

4.26  
gravity-related height 
height dependent on the Earth’s gravity field 

NOTE In particular, orthometric height or normal height, which are both approximations of the distance of a 
point above the geoid. 

4.27  
Gregorian calendar 
calendar in general use first introduced in 1582 to correct an error in the Julian calendar 

NOTE  In the Gregorian calendar, common years have 365 days and leap years 366 days divided into 12 
sequential months . 

4.28  
Greenwich meridian 
prime meridian passing through Greenwich, United Kingdom 

NOTE Most geodetic datums use the Greenwich meridian as the prime meridian. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 7
 

4.29  
ground coordinates 
earth referenced coordinates 
terrestrial coordinates 
coordinates of points expressed in a non-image, earth-fixed coordinate reference system  

NOTE   The term ground coordinates is used herein to distinguish such coordinates from image coordinates. Even 
when an image is collected by a near vertical camera, image coordinates are different from ground coordinates. 

4.30  
image 
record of the likeness of any features, objects, and activities 

NOTE  An image can be acquired through the sensing of visual or any other segment of the electromagnetic 
spectrum by sensors, such as thermal infrared, and high resolution radar. 

4.31  
image coordinates 
definition of position within an image, expressed in image row and column coordinates 

4.32  
image geometry model 
mathematical model that specifies the mapping (or projection) from 3D ground position 
coordinates to the corresponding 2D image position coordinates 

NOTE 1 An image geometry model is alternately called an image sensor model, sensor model, imaging model, or 
image mathematical model. The term “sensor” is often used when the image is generated by a digital camera and is thus 
originally digital. The word “camera” is usually used when the image is recorded in analogue form, normally on film. 
Of course, film images can be later scanned or digitised and are then “digital”. 
  
NOTE 2 An image geometry model can also be used to determine the correct ground position for an image 
position, if used with additional data. When a single (or monoscopic) image is used, this additional data normally 
defines the shape and position of the visible ground (or object) surface. For example, this additional data is often a 
single elevation or is grid elevation data, sometimes called a Digital Terrain Model (DTM). Alternately, two 
stereoscopic images or multiple overlapping images can be used, that show the same ground point viewed from 
different directions. In this case, the two (or more) image geometry mathematical models can also be used, with the 
point coordinates in each individual image, to determine the corresponding 3D ground position. 

4.33  
image version 
new image produced by sub-setting and/or re-sampling the pixels in an original image 

4.34  
interface 
named set of operations that characterise the behaviour of an element 

NOTE  An interface standard specifies the services in terms of the functional characteristics and behaviour 
observed at the interface.  The standard is a contract in the sense that it documents a mutual obligation between the 
service user and provider and assures stable definition of that obligation. 



OGC 00-063r2 

8 © OGC 2002 – All rights reserved 
 

4.35  
latitude 
geodetic latitude 
ellipsoidal latitude 
angle from the equatorial plane to the perpendicular to the ellipsoid through a given point, 
northwards treated as positive 

4.36  
local datum 
engineering datum 
datum with a local reference, used as a basis for an engineering coordinate reference 
system 

NOTE Engineering datum excludes both geodetic and vertical datums. 

4.37  
longitude  
geodetic longitude 
ellipsoidal longitude 
angle from the prime meridian plane to the meridian plane of the given point, eastward 
treated as positive 

4.38  
map projection 
conversion from a geodetic coordinate system to a planar surface 

4.39  
mean sea level 
average level of the surface of the sea over all stages of tide 

NOTE Mean sea level in a local context normally means mean sea level for the region as measured by tide gauge 
measurements at one or more points over a given period of time. Mean sea level in a global context differs from a 
global geoid by not more than 2 metres. 

4.40  
meridian 
intersection of an ellipsoid by a plane containing the semi-minor axis of the ellipsoid 

NOTE This term is often used for the pole-to-pole arc rather than the complete closed figure. 

4.41  
oblique Cartesian coordinate system 
coordinate system with straight axes that are not necessarily mutually perpendicular 

4.42  
pixel 
two-dimensional picture element that is the smallest non-divisible element of a digital 
image. In image processing, the smallest element of a digital image that can be assigned a 
grey level.  



OGC 01-063r2 

© OGC 2002 – All rights reserved 9
 

NOTE  This term originated as a contraction for “picture element”. 

4.43  
polar coordinates  
2-dimensional coordinates in which position is specified by distance to the origin and the 
direction angle 

NOTE  ISO/DIS 19111 does not specify the number of dimensions and therefore implicitly permits a 
3-dimensional polar coordinate system to exist.   The equivalent of the latter is termed "spherical coordinate system" in 
this document. 

4.44  
position 
spatial reference of a point or an object 

4.45  
prime meridian 
zero meridian 
meridian from which the longitudes of other meridians are quantified 

4.46  
projected coordinate reference system 
two-dimensional coordinate system resulting from a map projection. 

NOTE   A projected coordinate reference system is derived from a 2D geographic coordinate reference system by 
applying a parameterised coordinate transformation known as a ‘map projection’. 

NOTE   A projected coordinate reference system commonly uses a Cartesian coordinate system. 

4.47  
reference ellipsoid 
ellipsoid used as the best local or global approximation of the surface of the geoid. 

4.48  
semi-major axis 
semi-diameter of the longest axis of a reference ellipsoid. 

NOTE This equates to the semi-diameter of the reference ellipsoid measured in its equatorial plane 

4.49  
semi-minor axis 
semi-diameter of the shortest axis of a reference ellipsoid 

NOTE The shortest axis coincides with the rotation axis of the reference ellipsoid and therefore contains both 
poles. 

4.50  
spherical coordinate system 
3-dimensional coordinate system with one distance, measured from the origin and two 
angular coordinates, commonly associated with a geocentric coordinate reference system 

NOTE  Not to be confused with an ellipsoidal coordinate system based on an ellipsoid ‘degenerated’ into a sphere. 



OGC 00-063r2 

10 © OGC 2002 – All rights reserved 
 

4.51  
temporal coordinate 
distance from the origin of the interval time scale used as the basis for a temporal 
reference system 

4.52  
temporal coordinate reference system 
reference system against which time is measured 

4.53  
transformation 
change of coordinates from one coordinate reference system to another coordinate 
reference system based on a different datum through a one-to-one relationship 

NOTE A transformation uses parameter values which may have to be derived empirically by a set of points 
common to both coordinate reference systems. See coordinate conversion and coordinate transformation. 

4.54  
unit 
unit of measure 
defined quantity in which dimensioned parameters are expressed 

NOTE  In this document, the subtypes of units are length units, angular units, time units, scale units and pixel 
spacing units . 

4.55  
UTC 
coordinated Universal Time 
time scale maintained by the Bureau International des Poids et Mesures (International 
Bureau of Weights and Measures) and the International Earth Rotation Service (IERS) 
that forms the basis of a coordinated dissemination of standard frequencies and time 
signals 

4.56  
vertical coordinate system 
1-dimensional coordinate reference system used for elevation, height, or depth 
measurements 

4.57  
vertical datum 
datum describing the relation of gravity-related heights to the Earth 

NOTE In most cases the vertical datum will be related to sea level. Ellipsoidal heights are treated as related to a 
three-dimensional ellipsoidal coordinate system referenced to a geodetic datum. Vertical datums include sounding 
datums (used for hydrographic purposes), in which case the heights may be negative heights or depths. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 11
 

4.58  
well-known 
shared 
data that has been completely specified and published by some recognised authority, and 
is accessible through use of an identifier 

5 Conventions 

5.1 Symbols (and abbreviated terms) 

a semi-major axis 

a addition parameter numerator in unit of measure conversion formula 

b semi-minor axis  

b multiplication parameter numerator in unit of measure conversion formula 

c addition parameter denominator in unit of measure conversion formula 

d multiplication parameter denominator in unit of measure conversion formula 

C conditional 

CC Change Coordinates (package abbreviation in UML model) 

CD Coordinate datum (package abbreviation in UML model) 

CCRS Compound coordinate reference system 

CI Citation 

CRS Coordinate reference system 

CS Coordinate system (also package abbreviation in UML model) 

DQ Data quality (package abbreviation in UML model) 

E Easting  

f flattening 

h ellipsoidal height 

H gravity-related height 

ISO International Organization for Standardization 



OGC 00-063r2 

12 © OGC 2002 – All rights reserved 
 

M mandatory 

MC Metadata Coordinates (package abbreviation in UML model) 

N Northing  

O optional  

OGC Open GIS Consortium 

SC Spatial referencing by Coordinates (package abbreviation in UML model) 

SI Le Système International d’Unités  

UML Unified Modeling Language 

XML eXtensible Markup Language 

1D One Dimensional 

2D Two Dimensional 

3D Three Dimensional 

λ geodetic longitude 

ϕ geodetic latitude 

X, Y, Z Cartesian coordinates in a geocentric coordinate reference system 

i, j, k Cartesian coordinates in an engineering coordinate reference system, 
(integer or real) 

5.2 UML Notation 

The diagrams that appear in this standard are presented using the Unified Modeling 
Language (UML) static structure diagram.  The UML notations used in this standard are 
described in Figure 1 below. 

In this standard, the following stereotypes of UML classes are used: 

a) <<DataType>> A descriptor of a set of values that lack identity (independent 
existence and the possibility of side effects). A DataType is a class with no 
operations whose primary purpose is to hold the information. 

b) <<CodeList>> A flexible enumeration that uses string values for expressing a list of 
potential values. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 13
 

c) <<Enumeration>> A fixed enumeration that uses string values for expressing a list of 
potential values. 

d) <<Abstract>> A class that cannot be directly instantiated. 

In this standard, the following standard data types are used: 

a) CharacterString – A sequence of characters 

b) Integer – An integer number 

c) Real – A signed real (floating point) number consisting of a mantissa and an 
exponent, the length of a real is encapsulation and usage dependent. 

d) DateTime – A character string, as specified by ISO/DIS 19108, that comprises year, 
month, day and time of the day to the appropriate level of precision. 

 

Association between classes

role-1 role-2

Association Name
Class #1 Class #2

Association Cardinality

Class Only one

Class Zero or more

Class Optional (zero or one )

1..* Class One or more

n Class Specific number

Aggregation between classes

Aggregate
Class

Component
Class #1

Component
Class #2

Component
Class #n

……….

0..*

0..1

Class Inheritance (subtyping of classes)
Superclass

Subclass #1

…………..

Subclass #2 Subclass #n

 

Figure 1 — UML notation 

5.3 Attribute status 

In the clauses below attributes are given a requirement status: 



OGC 00-063r2 

14 © OGC 2002 – All rights reserved 
 

requirement definition comment 
M mandatory this attribute shall be supplied. 
C conditional this attribute shall be supplied if the condition (given in the attribute description) 

is true. It may be supplied if the condition is false. 
O optional this attribute may be supplied 

 

The Occurrence column indicates the maximum number of occurrences of attribute 
values that are permissible, with N indicating no upper limit. The conceptual schema for 
describing coordinate reference systems is modelled with the Unified Modelling 
Language (UML) in annex B. In case of inconsistency between the metadata textual 
description and the UML model (re: annex B), the textual description shall prevail. The 
basic data types are defined in ISO 19103. 

6 Coordinates and coordinate reference systems 

6.1  Coordinates 

The position(s) of a feature can be described by (a set of) coordinates. Coordinates are 
unambiguous only when the associated coordinate reference system has been fully 
defined. 

The geometry of spatial features might also be expressed in terms of invariant geometric 
quantities, viz. shapes and relative positions/orientations (strictly speaking only distance 
ratios and angles are invariant quantities). However, this would be unworkable: 
performing calculations on spatial data would become a major effort. The expression of 
the position of a point by coordinates introduces simplicity in terms of overview and 
calculus. However, there is a price to be paid for this convenience. To describe a simple 
shape such as a triangle in a plane six (plane) coordinates are required, whereas only a 
single distance ratio and an angle would suffice. 

The inherent degrees of freedom (four in 2D, seven in 3D) have to be satisfied by 
choosing the origin of the coordinate axes, their unit of measure and the orientations of 
the axes. This choice underlines the fact that coordinates are human-defined quantities 
and not natural phenomena. Although this may seem self-evident, it is often overlooked 
and has consequences for the interpretation of coordinates and their error characteristics. 

The choice of values for the parameters that constitute the degrees of freedom of the 
coordinate space is captured in the concept of coordinate reference system. Without the 
full specification of the coordinate reference system, coordinates are ambiguous at best 
and meaningless at worst. The fact that such a choice must be made, either arbitrarily or 
by adopting values from survey measurements, leads for example to the large number of 
coordinate reference systems in use around the world. It also the cause of the little 
understood fact that the latitude and longitude of a point are not unique. 

In the context of this specification the term “coordinates” indicates the tuple of ordered 
scalar values that defines the position of a single point in a coordinate reference system. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 15
 

The tuple is composed of one, two or three “ordinates”. The ordinates must be mutually 
independent and their number must be equal to the dimension of the coordinate space; for 
example a tuple of coordinates may not contain two heights. 

In this specification the term “set of coordinates” is used to indicate the coordinates of 
multiple points. However, it must be pointed out that usage in practice of the term 
“coordinates” is subject to some ambiguity. Sometimes the term “coordinate” is used to 
indicate the tuple; the plural “coordinates” in that case describes the coordinates of 
multiple points. Others use the term “set of coordinates” to describe the coordinates of a 
single point. In that case the term “coordinate” is sometimes used instead of “ordinate”. 
The reader is advised to carefully infer the intended meaning from the context. 

The concept of coordinates may be expanded from a strictly spatial context to include 
time. Time is then added as another ordinate to the coordinate tuple. It is even possible to 
add two time-coordinates, provided the two coordinates describe different independent 
quantities. An example of the latter is the time/space position of a subsurface point of 
which the vertical ordinate is expressed as the two-way travel time of a sound signal in 
milliseconds, as is common in seismic imaging. A second time-ordinate indicates the 
time of observation, usually expressed in whole years. 

In summary: each tuple of coordinates describing the position of a point shall be related 
to a coordinate reference system. 

Instead of supplying the definition of the coordinate reference system with every single 
point, coordinates may be supplied in datasets in which all coordinates shall belong to the 
same coordinate reference system. Each dataset shall then include one coordinate 
reference system description that applies to all coordinates in that dataset. 

6.2 Some geodetic concepts 

Geodesy is the applied science that aims to determine the size and shape of the earth. In a 
more practical and local sense, this may be understood to mean the determination of the 
relative positions of points on or near the earth’s surface. Survey measurements and 
techniques are the means to achieve this aim. 

The most accurate reference shape approximating the earth is the geoid, the surface that is 
defined as the locus of all points with equal gravity at mean sea level. This shape 
excludes topography and the effects of tides, currents and weather on the oceans and seas. 
Topographic heights are typically expressed relative to the geoid. The gravity vector at 
mean sea level is everywhere perpendicular to this surface. Due to the irregular mass 
distribution in the earth’s interior the geoid has an irregular shape. This makes it 
unfortunately unsuitable to use in calculations on spatial data. Unfortunate because the 
familiar concept of height derives from the geoid and the geoid therefore implicitly plays 
an important role in all engineering and mapmaking activities. The direction of gravity 
also plays an important role in the mentioned survey techniques. 



OGC 00-063r2 

16 © OGC 2002 – All rights reserved 
 

The geoid is approximated by the nearest regular body, an oblate spheroid, of which the 
oblateness corresponds to the flattening of the physical earth (and thus the geoid) at the 
poles due to the earth's rotation. In survey practice this spheroid is often referred to as an 
ellipsoid. Although mathematically the term “spheroid” is a more precise description than 
“ellipsoid”, the latter term will be used in this specification in preference to “spheroid”, in 
accordance with ISO 19111. The ellipsoid is a reasonably accurate approximation of the 
geoid, the latter undulating around the ellipsoid’s surface with variations only in the order 
of several tens of metres. 

The advantage of the ellipsoid is that it is much easier to work with mathematically than 
the geoid. It forms the basis of the best-known type of coordinate reference systems: the 
Geographic CRS. The position of a point relative to the ellipsoid is then expressed by 
means of geographic coordinates: geodetic latitude (ϕ) and geodetic longitude (λ). The 
height (h) above the ellipsoid is of not much practical use because everyday heights are 
related to the geoid (gravity-related heights, indicated by H). Ellipsoidal height is an 
inseparable element of a 3D coordinate tuple and originates either directly from a 3D 
survey technique (e.g. GPS) or from the transformation of horizontal coordinates 
extended with a gravity-related height. See Subclause 6.5 below for this concept. 

Unfortunately there is not just one ellipsoid. An ellipsoid is a matter of choice and 
therefore many choices are possible. The size and shape of the ellipsoid are traditionally 
chosen such that the surface of the geoid is matched as closely as possible locally, e.g. in 
a country, although a number global of best-fits are available. Each association of an 
ellipsoid with earth surface geometry results in the implicit choice of parameters to 
satisfy the degrees of freedom problem described in Subclause 6.1 above. In this case, the 
choice results in the definition of the origin, orientation, size, and shape of the ellipsoid. 
Collectively this choice is captured by the concept of “geodetic datum”. 

A Geographic CRS is not suitable for mapmaking, because it describes geometry on a 
curved surface. It is impossible to represent such geometry in a Euclidean plane without 
introducing distortions. The need to control these distortions has given rise to the 
development of the science of map projections. Although some map projections can be 
represented as a geometric process, in general a map projection is a set of formulae that 
converts geodetic latitude and longitude to plane (map) coordinates. Height plays no role 
in this process, which is entirely two-dimensional. 

Heights are traditionally determined separate from horizontal position in separate height 
networks, which is due to the different survey techniques used for the determination of 
horizontal and vertical geometry. Most practical heights are defined in close relationship 
with the gravity vector. Geodetic science distinguishes several different types of gravity-
related heights. The differences between those are considered irrelevant for the purposes 
of this specification. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 17
 

6.3 Coordinate reference system 

6.3.1 Introduction 

A coordinate reference system consists of a coordinate system and a datum. 

The coordinate system is composed of a set of coordinate axes with specified units of 
measure. The concept implies the mathematical rules that define how coordinate values 
are calculated from distances, angles and other geometric elements and vice versa. 

The datum defines the origin, orientation, and scale of the coordinate system and ties it to 
the earth, ensuring that the abstract mathematical concept “coordinate system” can be 
applied to the practical problem of describing positions of features on or near the earth’s 
surface by means of coordinates. The datum implicitly (occasionally explicitly) contains 
the values chosen for the set parameters that represent the degrees of freedom of the 
coordinate system, as described in Subclause 6.1 above. 

The high level abstract model for spatial referencing by coordinates is therefore as shown 
in Figure 2 below. 

Datum Coordinate System

Coordinate OperationSingle Coordinate Reference System

+source

+target

 

Figure 2 — High-level model for spatial referencing by coordinates 

6.3.2  Kind of coordinate reference system 

A coordinate reference system may be either single or compound. Single coordinate 
reference system is defined in 6.3.3 and compound coordinate reference system is defined 
in 6.3.4. The requirements for identifying the kind of the coordinate reference system 
shall be in accordance with Table 1. 



OGC 00-063r2 

18 © OGC 2002 – All rights reserved 
 

Table 1 — Requirements for describing the kind of coordinate reference system 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Coordinate reference 
system kind code 
 

kindCode SC_KindCode M 1 Code denoting the kind of 
coordinate reference system 
1 — a single coordinate reference 
system 
2 — a compound coordinate 
reference system 

Coordinate reference 
system remarks 

remarks CharacterString O 1 Comments on the coordinate 
reference system including source 
information 

 

6.3.3 Single coordinate reference system 

A coordinate reference system consists of a set of coordinate system axes that is related to 
the earth through a datum. A coordinate reference system is realised by a set of 
coordinates. The realisation is sometimes known as a reference frame. 

A coordinate reference system shall be defined by one datum and by one coordinate 
system, see Figure 2. 

For the purposes of this specification a coordinate reference system shall not change with 
time, with the exception of engineering coordinate reference systems defined on moving 
platforms such as cars, ships, aircraft and spacecraft. The intention is to exclude the 
option to describe the time variability of geodetic coordinate reference systems as a result 
of e.g. tectonic motion. This variability is part of the subject matter of geophysical and 
geodetic science. The model for spatial referencing by coordinates described in this 
specification is in principle not suitable for such zero-order geodetic problems. Such 
time-variability of coordinate reference systems shall be covered in the spatial 
referencing model described in this document by creating different coordinate reference 
systems, each with a different datum, for (consecutive) epochs. The date of realisation of 
the datum shall then be included in its definition. It is further recommended to include the 
date of realisation in the names of those datums and coordinate reference systems. 

The requirements for describing a coordinate reference system shall be in accordance 
with Table 2. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 19
 

Table 2 — Requirements for describing a coordinate reference system 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Coordinate reference 
system identifier 

SRSID RS_identifier O 1 Identifier of the spatial (i.e. 
coordinate) reference system 

Coordinate reference 
system name 

CRSname CharacterString M 1 The name by which this coordinate 
system is uniquely identified 

Coordinate reference 
system alias 

alias MC_Alias O N Alternative name or identifier by 
which this coordinate reference 
system is known 

Coordinate reference 
system type 

CRSType SC_Coordinate 
ReferenceSystem
Type 

M 1 The type of coordinate reference 
system. 

Coordinate reference 
system valid area 

domainOf
Validity 

Ex_Extent O 1 Area for which the coordinate 
reference system is valid 

Coordinate reference 
system scope 

scope CharacterString O 1 Application for which the 
coordinate reference system is 
valid 

Coordinate reference 
system remarks 

remarks CharacterString O 1 Comments on or information about 
this coordinate reference system, 
including data source information 

 

Coordinate reference systems are usually divided into sub-types. ISO 19111 does not 
provide any sub-typing of coordinate reference systems. This specification does provide 
sub-typing, because it is commonly used in geodetic survey practice and serves a clear 
purpose. 

The common classification criterion for sub-typing of coordinate reference systems can 
be described as the way in which they deal with earth curvature. This has a direct effect 
on the portion of the earth’s surface that can be covered by that type of CRS with an 
acceptable degree of error. 

Table 3 lists the subtypes for coordinate reference system with a description how it 
satisfies the classification criterion. The exceptions to the rule is the subtype “Temporal”, 
which has been added by analogy and those Engineering CRS’s that are used on moving 
platforms such as road vehicles, vessels, aircraft and spacecraft. 



OGC 00-063r2 

20 © OGC 2002 – All rights reserved 
 

Table 3 — Single coordinate reference system subtypes 

CRS subtype Description 

Geocentric CRS that deals with the earth’s curvature by taking the 3D spatial view, which obviates the 
need to model the earth’s curvature. The origin of a geocentric CRS is at the approximate 
centre of mass of the earth. 

Geographic CRS based on an ellipsoidal approximation of the geoid; this provides an accurate 
representation of the geometry of geographic features for a large portion of the earth’s surface. 

Projected The shape of the earth’s surface is approximated by a plane, but in such a way that the 
distortion that is inherent to the approximation is carefully controlled and known. Distortion 
correction is commonly applied to calculated bearings and distances to produce values that are 
a close match to actual field values. 

Engineering Contextually local CRS; which can be divided into two broad categories: 
- earth-fixed systems, applied to engineering activities on or near the surface of the earth; 
- CRSs on moving platforms such as road vehicles, vessels, aircraft or spacecraft. 
 
Earth-fixed Engineering CRSs are commonly based on a simple flat-earth approximation of 
the earth’s surface, and the effect of earth curvature on feature geometry is ignored: 
calculations on coordinates use simple plane arithmetic without any corrections for earth 
curvature. The application of such Engineering CRSs to relatively small areas and 
"contextually local" is in this case equivalent to "spatially local". 
Engineering CRSs used on moving platforms are usually intermediate CRSs that are 
computationally required to calculate geodetic coordinates. These CRSs are subject to all the 
motions of the platform with which they are associated. In this case "contextually local" 
means that the associated coordinates are meaningful only relative to the moving platform. In 
the spatial sense their applicability may extend from the immediate vicinity of the platform 
(e.g. a moving seismic ship) to the entire earth (e.g. in space applications). The determining 
factor is the mathematical model deployed in the positioning calculations. Transformation of 
coordinates from these moving Engineering CRSs to an earth-referenced CRSs involves time-
dependent coordinate operation parameters, which can be accommodated by the abstract 
model described in this document. 

Image Engineering coordinate reference systems applied to images. Image SRSs warrant treatment as 
a separate sub-type because a separate user community exists for images with its own 
vocabulary. 

Vertical Used for the recording of heights or depths. Vertical CRSs make use of the direction of 
gravity to define the concept of height or depth, but its relationship with gravity may not be 
straightforward. By implication ellipsoidal heights (h) cannot be captured in a vertical 
coordinate reference system. Ellipsoidal heights cannot exist independently, but only as 
inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference 
system. 

Temporal Used for the recording of time. 
 

 

6.3.4 Compound coordinate reference system 

The traditional separation of horizontal and vertical position has resulted in coordinate 
reference systems that are horizontal (2D) in nature and vertical (1D). It is established 



OGC 01-063r2 

© OGC 2002 – All rights reserved 21
 

practice to combine the horizontal coordinates of a point with a height or depth from a 
different coordinate reference system. 

The coordinate reference system to which these 3D coordinates are referenced is 
composed of the separate horizontal and vertical coordinate reference systems of the 
horizontal and vertical coordinates. Such a coordinate system is called a compound 
coordinate reference system (CCRS). It consists of an ordered sequence of the two or 
more single coordinate reference systems. An example is provided in Figure 3. 

Compound CRS

Geographic CRS (2D) Vertical CRS

Vertical DatumGeodetic Datum Time Datum

Temporal CRS

Ellipsoidal CS Temporal CSGravity-related CS

 

Figure 3 — Example of a compound coordinate reference system 

A compound coordinate reference system is thus a coordinate reference system that 
combines two or more coordinate reference systems, none of which can themselves be 
compound. In general, a compound coordinate reference system may contain any number 
of axes. 

For spatial coordinates, a number of constraints exist for the construction of compound 
coordinate reference systems. For example, the coordinate reference systems that are 
combined should not contain any duplicate or redundant axes. Valid combinations 
include: 

− Geographic 2D + Vertical 

− Geographic 2D + Engineering 1D (near vertical) 

− Projected + Vertical 

− Projected + Engineering 1D (near vertical) 

− Engineering (horizontal 2D or 1D linear) + Vertical 

Any coordinate reference system, or any of the above listed combinations of coordinate 
reference systems, can have a temporal coordinate reference system added. More than 
one temporal coordinate reference system may be added if these axes represent different 
time quantities. For example, the oil industry sometimes uses “4D seismic”, by which is 



OGC 00-063r2 

22 © OGC 2002 – All rights reserved 
 

meant seismic data with the vertical axis expressed in milliseconds (signal travel time). A 
second time axis indicates how it changes with time (years), e.g. as a reservoir is 
gradually exhausted of its recoverable oil or gas). 

The requirements for describing a compound coordinate reference system shall be in 
accordance with Table 4. 

Table 4 — Requirements for describing a compound coordinate reference system 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Compound coordinate 
reference system 
identifier 

SRSID RS_identifier O 1 Identifier of the compound 
coordinate reference system. 

Compound coordinate 
reference system name 

CRSName CharacterString M 1 The name by which this compound 
coordinate reference system is 
identified 

Compound coordinate 
reference system alias 

alias MC_Alias O N Alternative name or identifier by 
which this compound coordinate 
reference system is known 

Compound coordinate 
reference system valid 
area 

domainOf
Validity 

Ex_Extent O 1 Area for which the compound 
coordinate reference system is 
valid 

Compound coordinate 
reference system scope 

scope CharacterString O 1 Application for which the 
compound coordinate reference 
system is valid 

Compound coordinate 
reference system 
remarks 

remarks CharacterString O 1 Comments on or information about 
this compound coordinate 
reference system, including data 
source information  

 

Each of the two coordinate reference systems shall be described in accordance with 
requirements in Table 2 above.   

6.4 Coordinate system 

Each of the two coordinate reference systems shall be described in accordance with 
requirements in Table 2 above. 

6.4 Coordinate system 

The coordinates of points are recorded in a coordinate system. A coordinate system is the 
set of coordinate system axes that spans the coordinate space. This concept implies the set 
of mathematical rules that determine how coordinates are associated with invariant 
quantities such as angles and distances1). In other words: a coordinate system implies how 
                                                 

1) The word ‘distances’ is used loosely in this description. Strictly speaking distances are not invariant quantities, as 
they are expressed in the unit of measure defined for the coordinate system; ratios of distances are invariant. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 23
 

coordinates are calculated from geometric elements such as distances and angles and vice 
versa. The calculus required to derive angles and distances from point coordinates and 
vice versa is in a map plane is simple Euclidean 2D arithmetic. To do the same on the 
surface of an ellipsoid (curved 2D space) involves more complex ellipsoidal calculus. 
These rules cannot be specified in detail, but are implied in the geometric the properties 
of the coordinate space. 

One coordinate system may be used by multiple coordinate reference systems. Its axes 
can be spatial, temporal, or mixed. 

The dimension of the coordinate space, the names, the units of measure, the directions 
and sequence of the axes are recorded in 'Coordinate system'. Coordinates in coordinate 
tuples must be listed according to the defined axes sequence. The number of coordinates 
in a tuple and the number of axes in a coordinate system shall be equal to the specified 
dimension of the coordinate system. 

Coordinate systems are divided in subtypes by the geometric properties of the coordinate 
space spanned and the geometric properties of the axes themselves (straight or curved; 
perpendicular or not). Certain subtypes of coordinate system can only be used with specific 
subtypes of coordinate reference system. A description of coordinate system subtypes is 
provided in Table 5. The constraints on their usage are also shown in Figure 4. 

Table 5 — Subtypes of coordinate system and constraints in its relationship with 
coordinate reference system 

CS subtype Description Used with 
CRS type 

Cartesian 1-, 2-, or 3-dimensional coordinate system. It gives the position of points 
relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 
1-dimensional case, it contains a single straight coordinate axis. In the 
multi-dimensional case, all axes shall have the same unit of measure. 

Geocentric 

Projected 

Engineering 

Image 

oblique Cartesian Coordinate system with straight axes that are not necessarily orthogonal Engineering 

Image 

ellipsoidal 2- or 3-dimensional coordinate system in which position is specified by 
geodetic latitude, geodetic longitude and (in the three-dimensional case) 
ellipsoidal height, associated with one or more geographic coordinate 
reference systems. 

Geographic 

Engineering 

spherical 3-dimensional coordinate system with one distance, measured from the 
origin, and two angular coordinates. Not to be confused with an ellipsoidal 
coordinate system based on an ellipsoid ‘degenerated’ into a sphere 

Geocentric 

Engineering 

cylindrical 3-dimensional coordinate system consisting of a polar coordinate system 
extended by a straight coordinate axis perpendicular to the plane spanned 
by the polar coordinate system. 

Engineering 

polar 2-dimensional coordinate system in which position is specified by distance 
to the origin and the angle between the line from origin to point and a 
reference direction. 

Note: ISO 19111 does not specify the number of dimensions and therefore 
implicitly permits a 3-dimensional polar coordinate system to exist. The 
equivalent of the latter is termed "spherical coordinate system" in this 
Abstract Specification. 

Engineering 



OGC 00-063r2 

24 © OGC 2002 – All rights reserved 
 

CS subtype Description Used with 
CRS type 

gravity-related 1-dimensional coordinate system used to record the heights (or depths) of 
points dependent on the Earth’s gravity field. An exact definition is 
deliberately not provided as the complexities of the subject fall outside the 
scope of this specification. 

Vertical 

Engineering 

multi-linear Coordinate system containing one or more coordinate system axes that may 
have any shape that has no intersections with itself. This/these axes may be 
supplemented by one or two straight axes to complete a 2 or 3 dimensional 
coordinate system. The non-straight axes are typically incrementally 
straight or curved. 

In the one-dimensional case only the position of points that lie on this axis 
can be described. The associated ordinate is the distance from the specified 
origin to the point along the axis. Example: usage of the line feature 
representing a road to describe points on or along that road. 

In the multidimensional case it must be specified how the axes intersect and 
how the position of a point is defined. An example is a 2-dimensional 
coordinate system that can be used to describe points along a river, based 
on one linear axis following the river centre line. A point in 2d space can be 
defined by the distance along the river centre line from the origin and the 
perpendicular offset from the centre line. The positive direction needs to be 
specified as with other multi-dimensional coordinate systems.  

Engineering 

temporal 1-dimensional coordinate system containing a single time axis and used to 
describe the temporal position of a point in the specified time units from a 
specified time origin. 

Temporal 

Projected CRS

Geocentric CRSSpherical CS
0..*0..1 0..*0..1

Geographic CRS
Ellipsoidal CS

0..*1 0..*1

Cartesian CS 0..*1 0..*1

0..*
0..1

0..*
0..1

Image CRS
0..*

0..1
0..*

0..1

Oblique Cartesian CS 0..*0..1 0..*0..1

Vertical CRSGravity-related CS
0..*1 0..*1

Temporal CRSTemporal CS
0..*1 0..*1

Single Coordinate Reference System

Linear CS

Engineering CRS

Coordinate System

0..*

1

0..*

1

Cylindrical CS

 

Figure 4 — Relationship constraints between coordinate reference system and 
coordinate system 



OGC 01-063r2 

© OGC 2002 – All rights reserved 25
 

The requirements for describing a coordinate system shall be in accordance with Tables 6 
and 7. 

Table 6 — Requirements for describing a coordinate system 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Coordinate system 
identifier 
 

CSID  RS_identifier O 1 Identifier of the coordinate system. 
 

Coordinate system 
name 

CSname CharacterString M 1 The name by which this coordinate 
system is identified 

Coordinate system 
type 
 

type SC_Coordinate 
SystemType 

M 1 Type of the coordinate system, 
identifying the coordinate axes and 
coordinate space geometry.  

Coordinate system 
dimension 

dimension Integer M 1 Number of coordinates {3,2,1} in 
the coordinate tuple 

Coordinate system 
remarks 

remarks CharacterString O 1 Comments on or information about 
the coordinate system, including 
data source information 

 

6.5 Coordinate system axis 

Each coordinate system axis2) shall be described, the order of each axis description 
following the order of the coordinates in the dataset. The elements for each coordinate 
system axis, as described in Table 7, shall be kept together (as in a data block), and the 
number of data blocks shall be equal to the value provided for coordinate system 
dimension in Table 6. 

Usage of coordinate system axis names is constrained by geodetic custom in a number of 
cases, depending mainly on the coordinate reference system type. These constraints are 
shown in Table 8 below. This constraint works in two directions; for example the names 
‘geodetic latitude’ and ‘geodetic longitude’ shall be used to designate the coordinate axis 
names associated with a geographic coordinate reference system. Conversely, these 
names shall not be used in any other context. 

Image and engineering coordinate reference systems may make use of names specific to 
the local context or custom and are therefore not included as constraints in the above list. 

                                                 

2 ) The concept 'coordinate system axis' as a constituting part of a coordinate system should be interpreted to mean the 
definition of the relevant coordinate.  That definition can be associated with an axis only with Cartesian coordinate 
systems. The x-axis in an arbitrary x,y,z coordinate system is defined as the locus of points with y=z=0. In the case of 
coordinate systems that make use of angular coordinates this concept may lead to confusion.  An ellipsoidal coordinate 
system is said to be composed of a Latitude axis and a Longitude axis.  By definition the Latitude axis would be the 
locus of points for which Longitude = 0, in other words the Prime Meridian! 



OGC 00-063r2 

26 © OGC 2002 – All rights reserved 
 

A coordinate system shall contain the number of coordinate system axes defined by its 
dimension attribute. Each of its axes is completely characterised by a unique combination 
of axis name, axis abbreviation, axis direction and axis unit of measure. 

Example: The combination {Latitude, Lat, north, degree} would lead to one instance of the object class 'coordinate 
system axis'; the combination {Latitude, ϕ, north, degree} to another instance, the axis abbreviation being different. 

Table 7 — Requirements for describing a coordinate system axis 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Coordinate system axis 
identifier 
 

axisID  RS_identifier O 1 Identifier of the coordinate system 
axis. 
 

Coordinate system axis 
name 

axisName CharacterString M 1 Name of the coordinate system 
axis. 

Coordinate system axis 
direction 

axisDirection CharacterString M 1 Direction of the coordinate system 
axis (or, in the case of Cartesian or 
projected coordinates, the direction 
of the coordinate system axis at the 
origin) 
Example: north or south, east or 
west, up or down 
Within any set of coordinate 
system axis, only one of each pair 
of terms can be used. 

Coordinate system axis 
unit identifier 

axisUnitID UnitOf Measure M 1 Identifier of the unit for the 
coordinate system axis 

Coordinate system axis 
abbreviation 

axisAbbrev CharacterString M 1 The abbreviation used for this 
coordinate system axes; this 
abbreviation is also used to identify 
the ordinates in coordinate tuple. 
Examples are X and Y. 

 

Table 8 — Some naming constraints for coordinate system axis 

CS CRS Permitted coordinate system axis names 

Cartesian Geocentric Geocentric X, Geocentric Y, Geocentric Z 

Spherical Geocentric Spherical Latitude, Spherical Longitude, Geocentric Radius 

Ellipsoidal Geographic Geodetic Latitude, Geodetic Longitude, Ellipsoidal height (if 3D) 

Gravity-related Vertical Gravity-related height 

Gravity-related Vertical Depth 

Cartesian Projected Easting, Northing 

Cartesian Projected Westing, Southing 

 



OGC 01-063r2 

© OGC 2002 – All rights reserved 27
 

6.6 Datum 

6.6.1 Types of datums 

A datum specifies the relationship of a coordinate system to the earth, thus creating a 
coordinate reference system, and can be used as the basis for two- or three-dimensional 
systems. Five subtypes of datum are specified: geodetic, vertical, engineering, image and 
temporal. 

Each datum subtype can be associated only with specific types of coordinate reference 
systems. A geodetic datum is used with three-dimensional or horizontal (two-
dimensional) coordinate reference systems, and normally requires an ellipsoid definition 
and a prime meridian definition. A vertical datum can only be associated with a vertical 
coordinate reference system. Image datum and engineering datum are both used in a local 
context only: to describe the origin of an image and the origin of an engineering (or local) 
coordinate reference system. 

6.6.2 Datum description 

If a coordinate reference system citation is not supplied, then a datum description in 
accordance with Table 9, Table 10 or Table 11 shall be supplied. 

Table 9 — Requirements for describing a geodetic and engineering datum  
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Datum identifier datumID RS_identifier O 1 Identifier of the datum 
Datum name datumName CharacterString M 1 The name by which this datum is 

identified 
Datum alias alias MC_Alias O N Alternative name or names by 

which this datum is known 
Datum anchor point anchorPoint CharacterString O 1 Description, possibly including 

coordinates, of the point or points 
used to anchor the datum to the 
Earth. Also known as Fundamental 
Point in case of a geodetic datum 

Datum realization 
epoch 

realization
Epoch 

Date O 1 Epoch of realization of the datum 

Datum valid area validArea Ex_Extent O 1 Area for which the datum is valid 

Datum scope scope CharacterString O 1 Application for which the datum is 
valid 

Datum remarks remarks CharacterString O 1 Comments on the datum including 
data source information 

 



OGC 00-063r2 

28 © OGC 2002 – All rights reserved 
 

Table 10 — Requirements for describing a vertical datum  
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Datum identifier datumID RS_identifier O 1 Identifier of the datum 
Datum name datumName CharacterString M 1 The name by which this datum is 

identified 
Vertical datum type vertDatum

Type 
CharacterString M 1 Type of vertical datum.  Permitted 

values are: 
- geoidal (default) 
- depth  
- barometric 

Datum alias alias MC_Alias O N Alternative name or names by 
which this datum is known 

Datum anchor point anchorPoint CharacterString O 1 Description, possibly including 
coordinates, of the point or points 
used to anchor the datum to the 
Earth.  

Datum realization 
epoch 

realization
Epoch 

Date O 1 Epoch of realization of the datum 

Datum valid area validArea Ex_Extent O 1 Area for which the datum is valid 

Datum scope scope CharacterString O 1 Application for which the datum is 
valid 

Datum remarks remarks CharacterString O 1 Comments on the datum including 
source information 



OGC 01-063r2 

© OGC 2002 – All rights reserved 29
 

Geoidal: The zero value of the associated (vertical) coordinate system axis is defined to approximate a 
constant potential surface, usually the geoid. Such a reference surface is usually determined by a national 
or scientific authority and is then a well-known, named datum. 

Depth: The zero point of the vertical axis is defined by a surface that has meaning for the purpose the 
associated vertical measurements are used for. For hydrographic charts, this is often a predicted nominal 
sea surface (i.e. without waves or other wind and current effects) that occurs at low tide. Examples are 
Lowest Astronomical Tide and Lowest Low Water Spring. A different example is a sloping and 
undulating River Datum defined as the nominal river water surface occurring at a quantified river 
discharge. 

Barometric: A vertical datum is of type “barometric” if atmospheric pressure is the basis for the definition 
of the origin. 

Atmospheric pressure may be used as the intermediary to determine height (barometric height 
determination) or it may be used directly as the vertical ordinate, against which other parameters are 
measured. The latter case is applied routinely in meteorology. 

Barometric height determination is routinely used in aircraft. The altimeter (barometer) on board is 
set to the altitude of the airfield at the time of take-off, which corrects simultaneously for 
instantaneous air pressure and altitude of the airfield. The measured height value is commonly named 
“altitude”. 

In some land surveying applications height differences between points are measured with 
barometers. To obtain absolute heights the measured height differences are added to the known 
heights of control points. In that case the vertical datum type is not barometric, but is the same as that 
of the vertical control network used to obtain the heights of the new points and its vertical datum 
type. 

The accuracy of this technique is limited, as it is affected strongly by the spatial and temporal 
variability of atmospheric pressure. This accuracy limitation impacts the precision of the associated 
vertical datum definition. The datum is usually the surface of constant atmospheric pressure 
approximately equating to mean sea level (MSL). The origin or anchor point is usually a point of 
known MSL height. The instruments are calibrated at this point by correcting for the instantaneous 
atmospheric pressure at sea level and the height of the point above MSL. 

In meteorology, atmospheric pressure routinely takes the role as vertical ordinate in a CRS that is 
used as a spatial reference frame for meteorological parameters in the upper atmosphere. The origin 
of the datum is in that case the (hypothetical) zero atmospheric pressure and the positive vertical axis 
points down (to increasing pressure). 

Other surface: In some cases, e.g. oil exploration and production, geological features, i.e. the top or 
bottom of a geologically identifiable and meaningful subsurface layer, are sometimes used as a vertical 
datum. Other variations to the above three vertical datum types may exist and are all bracketed in this 
category.  

  

 

 



OGC 00-063r2 

30 © OGC 2002 – All rights reserved 
 

The requirements for describing a temporal datum shall be in accordance with Table 11. 

Table 11 — Requirements for describing an image datum 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Datum identifier datumID RS_identifier O 1 Identifier of the datum 
Datum name datumName CharacterString M 1 The name by which this datum is 

identified 
Datum alias alias MC_Alias O N Alternative name or names by which 

this datum is known 
Datum anchor point point CharacterString M 1 Position of the origin (0,0) of the image 

coordinates. Permitted values are: 
- Image centre 
- Image corner 

Pixel in cell PixelinCell CharacterString M 1 Specification of the way the image grid 
is associated with the image data 
attributes. Permitted values are: 

- Cell centre 
- Cell corner 

Datum realization 
epoch 

realizationE
poch 

Date O 1 Epoch of realization of the datum 

Datum valid area validArea Ex_Extent O 1 Area for which the datum is valid 

Datum scope scope CharacterString O 1 Application for which the datum is 
valid 

Datum remarks remarks CharacterString O 1 Comments on the datum including 
source information 

 

The image grid is defined as the set of lines of constant integer ordinate values. The term 
“image grid” is often used in other standards to describe the concept of Image CRS. 
However, care must be taken to correctly interpret this term in the context in which it is 
used. The term “grid cell” is often used as a substitute for the term “pixel”. 

The grid lines of the image may be associated in two ways with the data attributes of the 
pixel or grid cell (ISO CD 19123). The data attributes of the image usually represent an 
average or integrated value that is associated with the entire pixel. 

An image grid can be associated with this data in such a way that the grid lines run 
through the centres of the pixels. The cell centres will thus have integer coordinate 
values. In that case the attribute “pixel in cell” will have the value “cell centre”. 

Alternatively the image grid may be defined such that the grid lines associate with the 
cell or pixel corners rather than the cell centres. The cell centres will thus have non-
integer coordinate values, the fractional parts always being 0.5. ISO CD 19123 calls the 
grid points in this latter case “posts” and associated image data: “matrix data”. The 
attribute “pixel in cell” will now have the value “cell corner”. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 31
 

This difference in perspective has no effect on the image interpretation, but is important 
for coordinate transformations involving this defined image. 

The requirements for describing a temporal datum shall be in accordance with Table 12. 

Table 12 — Requirements for describing a temporal datum 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Datum identifier datumID RS_identifier O 1 Identifier of the datum 
Datum name datumName CharacterString M 1 The name by which this datum is 

identified 
Datum alias alias MC_Alias O N Alternative name or names by which 

this datum is known 
Datum anchor point anchorPoint CharacterString O 1 Description, possibly including 

coordinates, of the point or points used 
to anchor the datum to the Earth. 

Time origin Origin DateTime M 1 The year, month, day and time of day 
used as the origin of the temporal CRS 
with which this datum is associated  

Datum realization 
epoch 

realizationE
poch 

Date O 1 Epoch of realization of the datum 

Datum valid area validArea Ex_Extent O 1 Area for which the datum is valid 

Datum scope scope CharacterString O 1 Application for which the datum is 
valid 

Datum remarks remarks CharacterString O 1 Comments on the datum including 
source information 

 

6.7 Prime meridian 

A prime meridian defines the origin from which longitude values are specified. Most 
geodetic datums use Greenwich as their prime meridian. A prime meridian description is 
not needed if the datum type other than geodetic, or if the datum type is geodetic and the 
prime meridian is Greenwich. 

The prime meridian description shall be mandatory if the datum type is geodetic and its 
prime meridian is not Greenwich and if neither coordinate reference system citation nor 
datum citation is supplied. 

The requirements for describing a prime meridian shall be in accordance with Table 13. 



OGC 00-063r2 

32 © OGC 2002 – All rights reserved 
 

Table 13 — Requirements for describing a prime meridian 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 

Occur-
rence 

Description 

Prime meridian 
identifier 

meridianID RS_identifier O 1 Identifier of the prime meridian. 

Prime meridian name meridianNa
me 

CharacterString M 1 The name by which this prime 
meridian is identified 

Prime meridian 
Greenwich longitude 

Greenwich 
Longitude 

MC_Angle C 1 Longitude of the prime meridian 
measured from the Greenwich 
meridian, positive eastward. If the 
datum type is geodetic and the 
prime meridian name is not 
supplied then the prime meridian 
name is taken to be “Greenwich” 
and the prime meridian Greenwich 
longitude is taken to be “0°”. 

Prime meridian 
remarks 

remarks CharacterString O 1 Comments on the prime meridian 
including data source information 

6.8 Ellipsoid 

An ellipsoid specification shall not be provided if the datum type is vertical or engineering 
and neither coordinate reference system citation nor datum citation is supplied.  The 
requirements for describing an ellipsoid shall be in accordance with Table 14. 

Table 14 — Requirements for describing an ellipsoid 
Element name UML identifier Data type Obli

ga-
tion 

Maxi
mum 
Occur
rence 

Description 

Ellipsoid 
identifier 

ellipsoidID RS_identifier O 1 Identifier of the ellipsoid for the 
datum. 

Ellipsoid name ellipsoidName CharacterString M 1 The name by which this ellipsoid is 
identified 

Ellipsoid alias alias MC_Alias O N Alternative name or names of the 
ellipsoid 

Ellipsoid semi-
major axis 

semiMajorAxis MC_Length M 1 Length of the semi-major axis of 
the ellipsoid. Condition described 
below 

Ellipsoid remarks remarks CharacterString O 1 Comments on or information about 
the ellipsoid including data source 
information 



OGC 01-063r2 

© OGC 2002 – All rights reserved 33
 

Element name UML identifier Data type Obli
ga-
tion 

Maxi
mum 
Occur
rence 

Description 

Ellipsoid semi-
minor axis 

semiMinorAxis MC_Length C 1 Length of the semi-major axis of 
the ellipsoid. Condition described 
below 

Ellipsoid inverse 
flattening 

inverseFlattening MC_Scale C 1 Inverse flattening of the ellipsoid.  
Condition described below 

Ellipsoid shape isSphere CharacterString C 1 This attribute has a fixed value of 
“sphere”. Condition described 
below 

Condition:  Only one of the three elements marked by a conditional obligation in Table 13 should be supplied. For an 
ellipsoid, the second defining parameter is either the inverse flattening or the semi-minor axis. The 
element Ellipsoid shape has a fixed value of “sphere’, indicating, when used, that a sphere rather than an 
ellipsoid is used as reference surface. The sphere is completely defined by the semi-major axis, which in 
that case will be equal to the radius of the sphere. 

7. Coordinate operation 

7.1 General 

Coordinates are unambiguous only when the coordinate reference system to which those 
coordinates are related has been fully defined. 

If the relationship between any two coordinate reference systems is known, coordinates 
can be transformed or converted to another coordinate reference system. The abstract 
model therefore specifies a source and target coordinate reference system for such 
operations3. For that reason a coordinate operation is often popularly said to operate 
between coordinate reference systems. Although this may be good enough for 
conversation, it should be realised that coordinate operations do not operate on coordinate 
reference systems, but on coordinates. This is important for the design of implementation 
specifications because it implies that coordinate reference systems cannot be ‘created’ 
from another coordinate reference system by a coordinate operation. Neither can a 
coordinate operation be used to modify the definition of a coordinate reference system, 
e.g. by converting the units of measure of the coordinates. 

Coordinate operations are divided into two subtypes: 

Coordinate conversion – mathematical operation on coordinates that does not include any 
change of Datum. The best-known example of a coordinate conversion is a map 
projection. The parameters describing coordinate conversions are defined rather than 
empirically derived. Note that some conversions have no parameters. 

Coordinate transformation – mathematical operation on coordinates that usually includes 
a change of Datum. The parameters of a coordinate transformation are empirically 

                                                 

3 There is an exception to this rule, viz. “defining coordinate conversions”.  This exception is described in Subcaluse 
7.2 below. 



OGC 00-063r2 

34 © OGC 2002 – All rights reserved 
 

derived from data containing the coordinates of a series of points in both coordinate 
reference systems. This computational process is usually ‘over-determined’, allowing 
derivation of error (or accuracy) estimates for the transformation. Also, the stochastic 
nature of the parameters may result in multiple (different) versions of the same coordinate 
transformation. 

The requirements for describing a coordinate operation shall be in accordance with Table 15. 

Table 15 — Requirements for describing a coordinate operation 
Element name UML 

identifier 
Data type Oblig

ation 
Maxi-
mum 
Occur
rence 

Description 

Coordinate operation 
identifier 

coordinateOpe
rationID 

RS_identifier O 1 Identifier of the coordinate 
operation 

Coordinate operation 
name 

coordinateOpe
rationName 

CharacterString M 1 The name by which this coordinate 
operation is identified. 

Coordinate operation 
alias 

alias MC_Alias O N Alternative name or names of the 
coordinate operation 

Coordinate operation 
valid area 

validArea Ex_Extent O 1 Area for which the coordinate 
operation is valid 

Coordinate operation 
version 

version CharacterString C 1 Version of the coordinate 
transformation (i.e. instantiation 
due to the stochastic nature of the 
parameters).  Condition: 
Mandatory only when describing a 
coordinate transformation. 

Coordinate operation 
scope 

scope CharacterString O 1 Application for which the 
coordinate operation is valid 

Coordinate operation 
remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation including source 
information 

Source dimensions sourceDimens
ions 

Integer M 1 Required dimension for the source 
CRS 

Target dimensions targetDimensi
ons 

Integer M 1 Required dimension for the target 
CRS 

Position error 
estimates 

positionError
Estimates 

DQ_PositionalAc
curacy 

O 1 Estimate of the impact of this 
operation on point accuracy 

 

7.2 Coordinate conversions 

Coordinate conversions are coordinate operations that make use of exact, defined (rather 
than measured or computed), and therefore error-free parameter values.  The relationship 
between the two coordinate reference systems, related through a coordinate conversion is 
therefore fixed, whereby one of the two systems cannot exist without the coordinate 
conversion and the ‘source’ coordinate reference system being defined. Projected 
coordinate reference systems are the best-known example, being based on a source 
geographic coordinate reference system. The associated map projection effectively 
defines the projected coordinate reference system from the geographic coordinate system. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 35
 

This concept is modelled in Figure B.3 as a direct link between coordinate reference 
system and coordinate conversion. 

Please note that this does not contradict the statement in the second paragraph above that 
a coordinate operation cannot be used to create or modify a coordinate reference system 
in a software implementation. The text above describes a static source-result relationship 
between two coordinate reference systems. For such defining coordinate conversions, no 
source and target coordinate reference system are defined. The usage of such a coordinate 
conversion is in the coordinate reference system, which will point to that conversion and 
to its source coordinate reference system. 

7.3 Concatenated coordinate operation 

A concatenated coordinate operation is an ordered series of coordinate operations. The 
sequence of operations is constrained by the requirement that the source coordinate 
reference system of step (n+1) must be the same as the target coordinate reference system 
of step (n).  

The source coordinate reference system of the first step and the target coordinate 
reference system of the last step are the source and target coordinate reference system 
associated with the concatenated operation. 

The above constraint should not be interpreted as implying that only those coordinate 
operations can be used in a concatenated operation that have their source and a target 
coordinate reference system specified through the association pair between 
CC_CoordinateOperation and SC_CRS (see Figure A.3 in Annex A).  This would 
exclude coordinate conversions.  Concatenated coordinate operations may contain 
coordinate transformations and/or coordinate conversions. 

The source and target coordinate reference system of a coordinate conversion are defined 
by the self-reference association of the SC_CoordinateReferenceSystem class.  When 
used in a concatenated operation, the conversion’s source and target coordinate reference 
system are equally subject to the above constraint as the source and target of a 
transformation although they are specified in a different manner. 

The concatenated coordinate operation class is primarily intended to provide a 
mechanism that forces application software to use a preferred path to go from source to 
target coordinate reference system if a direct transformation between the two is not 
available. 

7.4 The derivation of coordinate operations from other coordinate operations 

Coordinate transformation services should be able to automatically derive coordinate 
operations that are not stored explicitly in any permanent data store, in other words 
determine their own concatenated operations. The reason is that is practically impossible 
to store all possible pairs of coordinate reference systems in an explicitly defined 
coordinate operation. The key to a successful software implementation is the ability to 



OGC 00-063r2 

36 © OGC 2002 – All rights reserved 
 

apply meaningful constraints and validations to this process. For example: it may be 
mathematically possible to derive a concatenated coordinate operation that will transform 
North American Datum 1983 coordinates to Australian National Datum; in a practical 
sense that operation would be meaningless. The key validation that would flag such an 
operation as invalid would be a comparison of the two areas of validity. 

Coordinate transformation services should also be able to derive or infer the inverse of 
any coordinate operation (from ‘B’ to ‘A’) from its complementary forward operation 
(‘A’ to ‘B’). Most permanent data stores for coordinate reference parameter data will 
record only one of the two operations that may exist between any two coordinate 
reference systems. The inverse operation is then inferred by the application software logic 
from the stored operation. 

In some cases the algorithm for the inverse operation is the same as the forward algorithm 
and only the signs of the parameter values need to be reversed for the inverse operation to 
be fully defined. An example is the 7-parameter Helmert transformation (both position 
vector and coordinate frame rotation convention). 

Some polynomial coordinate operations require the signs of only most, but not all, 
parameter values to be reversed. Other coordinate operation methods (see 7.5 below) 
imply two algorithms, one for the forward and one for the inverse operation. The 
parameters are generally the same in that case. The latter situation generally applies to 
map projections. 

Finally the same algorithm may be used for the inverse operation, with entirely different 
parameter values. This is the case with some polynomial and affine operations. In those 
cases the inverse operation cannot be inferred from the forward operation but must be 
explicitly defined. 

The logic to derive the inverse transformation should be built into the application 
software, be it server or client, that performs the coordinate operation. 

The requirements for describing a concatenated operation shall be in accordance with 
Table 16 below. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 37
 

Table 16 — Requirements for describing a concatenated coordinate operation 
Element name UML 

identifier 
Data type Oblig

ation 
Maxi-
mum 
Occur
-rence 

Description 

Concatenated coord. 
operation identifier 

coordinateOpe
rationID 

RS_identifier O 1 Identifier of the concatenated 
operation 

Concatenated coord 
operation name 

coordinateOpe
rationName 

CharacterString M 1 The name by which this 
concatenated operation is 
identified. 

Coordinate operation 
alias 

alias MC_Alias O N Alternative name or names of the 
concatenated operation 

Concatenated 
coordinate operation 
valid area 

validArea Ex_Extent O 1 Area for which the concatenated 
operation is valid 

Concatenated 
coordinate operation 
version 

version CharacterString C 1 Version of the concatenated 
operation (i.e. instantiation due to 
the stochastic nature of the 
parameters).   
Condition: Mandatory if one or 
more coordinate transformations 
are included in this concatenated 
operation. 

Concatenated 
coordinate operation 
scope 

scope CharacterString O 1 Application for which the 
concatenated operation is valid 

Concatenated 
coordinate operation 
remarks 

remarks CharacterString O 1 Comments on the concatenated 
operation including source 
information 

Source dimensions sourceDimens
ions 

Integer M 1 Required dimension for the source 
CRS 

Target dimensions targetDimensi
ons 

Integer M 1 Required dimension for the target 
CRS 

Position error 
estimates 

positionError
Estimates 

DQ_PositionalAc
curacy 

O 1 Estimate of the impact of this 
operation on point accuracy 

 

7.5 Pass-through coordinate operation 

Coordinate operations require input coordinate tuples of certain dimensions and produce 
output tuples of certain dimensions. The dimensions of these coordinate tuples and the 
dimensions of the coordinate reference system they are defined in must be the same. 

The ability to define compound coordinate reference systems from two or more other 
coordinate reference systems, not themselves compound, introduces a difficulty. It may 
be required to transform only the horizontal or only the vertical component of a 
compound coordinate reference system, which will put them at odds with coordinate 
operations specified for either horizontal or vertical coordinates only. To the human mind 
this is a trivial problem, but not so for coordinate transformation software that ought to be 
capable of automatic operation, without human intervention: the software logic would be 
confronted with the problem of having to apply a 2-dimensional coordinate operation to 
3-dimensional coordinate tuples. 



OGC 00-063r2 

38 © OGC 2002 – All rights reserved 
 

This problem can be solved by defining a pass-through operation. This specifies what 
subset of a coordinate tuple is subject to a requested transformation. It takes the form of a 
sequence of numbers defining the positions in the coordinate tuple of the coordinates 
affected by the transformation. The order of the coordinates in a coordinate tuple should 
agree with the order of the coordinate system axes as defined for the associated 
coordinate system. 

The requirements for describing a pass-through operation shall be in accordance with 
Table 17 below. 

Table 17 — Requirements for describing a pass-through operation 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Pass-through 
operation identifier 

coordinateOpe
rationID 

RS_identifier O 1 Identifier of the pass-through 
coordinate operation 

Pass-through 
operation name 

coordinateOpe
rationName 

CharacterString M 1 The name by which this pass-
through operation is identified. 

Pass-through 
operation alias 

alias MC_Alias O N Alternative name or names of the 
pass-through coordinate operation 

Pass-through 
operation valid area 

validArea Ex_Extent O 1 Area for which the coordinate 
operation is valid 

Pass-through 
operation version 

version CharacterString C 1 Version of the coordinate 
transformation (i.e. instantiation 
due to the stochastic nature of the 
parameters). 
Condition: Mandatory when 
describing a coordinate 
transformation only. 

Pass-through 
operation scope 

scope CharacterString O 1 Application for which the 
coordinate operation is valid 

Pass-through 
operation remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation, including source 
information 

Source dimensions sourceDimens
ions 

Integer M 1 Required dimension for the source 
CRS. This includes the ordinates 
that are not modified. 

Target dimensions targetDimensi
ons 

Integer M 1 Required dimension for the target 
CRS. This includes the ordinates 
that are not modified.  

Modified coordinates modifiedCoor
dinates 

Sequence<Integer>  M 1 The sequence of coordinates in the 
coordinate tuple affected by the 
transformation. This sequence (i.e. 
order) must match the definition of 
the coordinate system of the source 
CRS.  

Position error 
estimates 

positionError
Estimates 

DQ_PositionalAc
curacy 

O 1 Estimate of the impact of this 
operation on point accuracy 

Note: The Coordinate operation alias, Coordinate operation valid area, and Coordinate operation version 
(inherited) elements are optional or conditional, but will normally not be populated for a pass-through 
transformation. This information applies to the referenced coordinate operation and would be supplied with 
that object. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 39
 

 

7.6 Coordinate operation method and parameters 

The algorithm used to execute the coordinate operation is defined in the coordinate 
operation method. Concatenated operations and pass-through operations do not require a 
coordinate operation to be specified. Each coordinate operation method uses a number of 
parameters (although some coordinate conversions use none), and each coordinate 
operation assigns value to these parameters. 

Most values are numeric, but for a number of operation methods, notably those 
implementing a grid interpolation algorithm, the parameter value could be a file name 
and location (this may be a URI). An example is the coordinate transformation from 
NAD 27 to NAD 83 in the USA; depending on the locations of the points to be 
transformed one of a series of grid files should be used. 

As this class comes close to the heart of any coordinate transformation software, it is 
recommended to make extensive use of identifiers, referencing well-known datasets 
wherever possible. There is as yet no standard way of spelling or even naming the various 
coordinate operation methods. Client software requesting a coordinate operation to be 
executed by a coordinate transformation server implementation may therefore ask for an 
operation method this server doesn’t recognise, although a perfectly valid method may be 
available. The same holds for coordinate operation parameters used by any coordinate 
operation method. 

To facilitate recognition and validation it is recommended to include the operation 
formulae in the relevant object and if possible a worked example. 

The requirements for describing a coordinate operation method shall be in accordance 
with Table 18 below. 

Table 18 — Requirements for describing a coordinate operation method 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Coordinate operation 
method identifier 

methodID RS_identifier O 1 Identifier of the coordinate 
operation method 

Operation method 
name 

methodName CharacterString M 1 The name by which this operation 
method is identified. 

Coordinate operation 
method alias 

alias MC_Alias O N Alternative name or names of the 
coordinate operation method 

Coordinate operation 
method formula 

formula CharacterString M 1  Formula(s) used by the coordinate 
operation method. This may be a 
reference to a publication. 

Coordinate operation 
method remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation method including source 
information 

 



OGC 00-063r2 

40 © OGC 2002 – All rights reserved 
 

The requirements for describing a coordinate operation parameter shall be in accordance 
with Table 19 below. 

Table 19 — Requirements for describing a coordinate operation parameter 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Operation parameter 
identifier 

parameterID RS_identifier O 1 Identifier of the coordinate 
operation parameter 

Operation parameter 
name 

parameterNa
me 

CharacterString M 1 The name by which this parameter 
is identified. 

Operation parameter 
alias 

alias MC_Alias O N Alternative name or names of the 
coordinate operation parameter 

Operation parameter  
remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation parameter including 
source information 

 

The requirements for describing a coordinate operation parameter value shall be in 
accordance with Table 20 below. 

Table 20 — Requirements for describing an operation parameter value 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Operation parameter 
value 

value MC_Measure C 1 Numeric value of the coordinate 
operation parameter with its 
associated unit of measure  

Operation parameter 
file reference 

valueFile CharacterString C 1 Alphanumeric string providing 
reference to a file containing the 
parameter values. May be a URI. 

Condition: The two attributes are mutually exclusive. The provision of one of the two is mandatory. 
 

8. Metadata for spatial referencing 

8.1 RS_Identifier 

The description of an object’s attributes can be done explicitly, in direct description, or 
by identifier, a reference to a recognised source that contains a full description of the 
object. The RS_Identifier class is defined in ISO 19115 as a specialisation of the 
MD_Identifier class. The requirements for describing the RS_Identifier are given in 
Table 20. This definition of the RS_Identifier class is slightly different from the 
definition provided in ISO 19111. See Annex C for details. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 41
 

The CI_Citation can be used optionally within RS_Identifier to provide information, e.g. 
by means of a URI, where the referenced information, as specified by the accompanying 
RS_Identifier element, can be found. 

Implementers are warned that there may be issues associated with the specification of 
elements through an identifier referring to a well-known dataset. The version or edition of 
a dataset may not be sufficient to uniquely define the referenced element. In any well-
known dataset, errors in the data may be corrected in accordance with a strategy specific 
to that dataset. If the referenced element contained an error in the past, that error could 
have been corrected in one of several ways: the erroneous data may be simply be 
overwritten or it have marked as incorrect with the corrected data supplemented in e.g. a 
new record or set of records. The strategy for dealing with erroneous data in well-known 
datasets as implemented by the responsible authority needs to be known to implementers 
in order to be able to find the data that is required by their application; merely the most 
up-to-date information or the erroneous information from the past, because that was used 
to transform spatial data that is still in use. 

The requirements for describing an identifier shall be in accordance with Table 21 below. 

Table 21 — Requirements for describing an identifier 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Code code CharacterString M 1 Code or identifier of the object 
referenced 

Code Space codeSpace CharacterString O 1 Namespace in which the code is 
valid and which identifies the 
dataset referenced. 

Version version CharacterString O 1 Version of the Code Space or 
Code. This optional version 
identifier applies to either the Code 
Space or the Code as defined by 
the Code Space authority. When 
appropriate, the version is 
identified by the effective date, 
coded using ISO 8601 date format. 

Authority authority CI_Citation O 1 Citation; definition by reference to 
a well-known source 

 

The CI_Citation class and the EX_Extent class are defined in ISO 19115. 

8.2 Names and aliases 

Most objects have one or more aliases. These may be alternative names, the name as the 
object is known in other authoritative sources, or abbreviations. 

Aliases and abbreviations are covered by the UML class MC_Alias. The requirements for 
describing Alias are given in Table 22.   



OGC 00-063r2 

42 © OGC 2002 – All rights reserved 
 

Table 22 — Requirements for describing an Alias 

Element name UML 
identifier 

Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Alias  alias CharacterString M 1 The alias of the referenced object. 
Alias Type aliasType MC_AliasType O 1 Object class this alias describes 
Alias namespace aliasNameSpa

ce 
CharacterString O 1 Namespace the alias is defined in; 

e.g. ‘ISO 2-char country code’ or 
‘EPSG abbreviation’ 

Alias remarks remarks CharacterString O 1 Remarks relating to this alias 

 

8.3 Unit of Measure 

The UML class diagram of the Unit of Measure specification in ISO 19103 is shown in 
Figure 4.   This specification has been extended by additional attributes: an RS_Identifier 
attribute (pointer to class RS_Identifier) to permit referencing units of measure from 
well-known datasets and multiple aliases have been included to allow name, alias and 
abbreviation specification.   

 



OGC 01-063r2 

© OGC 2002 – All rights reserved 43
 

Figure 4 — Unit of Measure as modelled in ISO 19103 

Furthermore a more general formula has been specified, permitting a quantity to be 
converted to a value expressed in a standard Unit of Measure. This has been modelled by 
adding a pointer to a target Unit of Measure. The target Units of Measure are constrained 
to the standard unit for the relevant Unit of Measure type. The derived data types “Angle” 
and “Length”, as defined in ISO 19103 have been used where it was feasible to specify a 
value/unit pair. In cases where this was not possible the value has been specified as a real 
number with an explicit reference to a Unit of Measure. 

The requirements for describing a unit of measure shall be in accordance with Table 23 
below. 

Table 23 — Requirements for describing a Unit of Measure 
Element name UML 

identifier 
Data type Oblig

ation 
Maxi-
mum 

Occur-
rence 

Description 

Unit of Measure 
Identifier 

uomID RS_Identifier O 1 Identifier of Unit of Measure 

Unit of Measure Name uomName CharacterString M 1 The name by which this Unit of 
Measure is identified.  

Unit of Measure alias alias MC_Alias O N Alternative name or names of the 
Unit of Measure 

Target Unit of Measure targetUom MC_UnitOfMea
sure 

M 1 The standard unit of measure to 
which a quantity expressed in the 
subject unit of measure can be 
converted. 
For length: International Metre 
For angle: radian 
For scale: unity 

Numerator addition  ‘a’ a Real M 1 A quantity ‘x’ in the subject unit of 
measure can be converted to a 
quantity ‘y’ in the standard unit of 
measure of the same type 
according to the following formula: 
y = (a + b.x)/(c + d.x) 
For the units of measure of length, 
angle and scale the addition 
constants ‘a’ and ‘d’ are zero.   

Numerator factor ‘b’ b Real M 1  
Denominator addition 
‘c’ 

c Real M 1  

Denominator factor ‘d’ d Real M 1  
Unit of Measure 
remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation method including source 
information 

 



OGC 00-063r2 

44 © OGC 2002 – All rights reserved 
 

8.4 Accuracy 

Information about the accuracy or precision of coordinates, or coordinate operations and 
of coordinate operation parameters is quality information and shall be reported where 
possible in conformance with ISO 19115 and ISO 19114. 

As discussed in Subclause 6.1, the parameters that define a coordinate reference system 
are chosen rather than measured to satisfy the degrees-of-freedom problem in the 
changeover from observation to coordinate quantities. Coordinate reference systems are 
therefore by definition error-free (i.e. non-stochastic). A coordinate reference system is 
realised through a network of control points. The coordinates of those control points, 
derived from surface and/or from satellite observations, are stochastic. Their accuracy can 
be expressed in a covariance matrix, which, due to the degrees-of-freedom problem will 
have a rank deficiency, described in geodetic literature. 

Coordinate transformations between coordinate reference systems usually have parameter 
values derived from two sets of point coordinates, one set in system 1, the other set in 
system 2. As these coordinates are stochastic (i.e. have random-error characteristics) the 
derived transformation parameter values will also be stochastic. Their covariance matrix 
can be calculated. 

Coordinates that have not been ‘naturally’ determined in coordinate reference system 2, 
but have been determined in coordinate system 1 and then transformed to system 2, have 
the random error effects of the transformation superimposed on their original error 
characteristics. It may be possible in well-controlled cases to calculate the covariance 
matrices of the point coordinates before and after the transformation, and thus isolate the 
effect of the transformation, but in practice a user will only be interested in the accuracy 
of the final transformed coordinates. 

Nevertheless the option is offered to specify the covariance matrix of point coordinates 
resulting exclusively from the transformation. It is outside the scope of this document to 
describe how that covariance matrix should be used.  The requirements for reporting data 
quality by means of a covariance matrix are described in tables Table 24 and Table 25. 

For some transformations, this accuracy information is compacted in some assessment of 
an average impact on horizontal position and vertical position, allowing specification of 
average absolute accuracy and, when relevant and available, average relative accuracy. 

Hence one or two quality measures may be specified for horizontal and for vertical 
position.  Table 26 describes the requirements for reporting this kind of information. 

The requirements for describing a unit of measure shall be in accordance with Tables 24 
and  25, or, alternatively, Table 26. 



OGC 01-063r2 

© OGC 2002 – All rights reserved 45
 

Table 24 — Requirements for describing a covariance matrix for a coordinate 
transformation 

Element name UML identifier Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Covariance matrix 
description 

matrixDescription CharacterString O 1 A description of the covariance 
matrix that allows meaningful 
interpretation of this data 

Covariance units of 
measure 

unitsOf Measure Sequence<MC_U
nitOfMeasure> 

M 1 Ordered sequence of units of 
measure, corresponding with the 
row/column index numbers of the 
covariance matrix, starting with 
row/column 1 and ending with 
row/column N.  Each unit of 
measure represents the ordinate 
reflected in the relevant 
row/column of the covariance 
matrix 

Each covariance element of the lower or upper diagonal sub-matrix shall be specified in 
accordance with Table 26.  Because the covariance matrix is symmetrical, only the upper 
or lower diagonal part (including the main diagonal) needs to be specified. 

Table 25 — Requirements for describing a covariance matrix element 
Element name UML 

identifier 
Data type Obliga-

tion 
Maxi-
mum 
Occur
-rence 

Description 

Row Identifier rowIndex Integer M 1 The row number of the covariance 
Column Identifier columnIndex Integer M 1 The column number of the 

covariance 
Covariance covariance Real M 1 The covariance value 

 

Alternatively accuracy estimates may be provided describing the impact of the coordinate 
transformation on horizontal and/or vertical position. These may consist of estimates for 
absolute accuracy alone or absolute plus relative accuracy. A description of these 
measures should be provided. 



OGC 00-063r2 

46 © OGC 2002 – All rights reserved 
 

Table 26 — Requirements for describing estimated accuracy parameters for a 
coordinate transformation 

Element name UML 
identifier 

Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Accuracy parameter 
description 

measureDescr
iption 

CharacterString O 1 A description of the accuracy 
parameter(s) provided 

Horizontal accuracy 
estimate 

result MC_Measure C 1 Estimate of the impact of the 
transformation on horizontal 
position accuracy, including its 
unit of measure. Mandatory if 
Vertical accuracy estimate is not 
provided 

Vertical accuracy 
estimate 

result MC_Measure C 1 Estimate of the impact of the 
transformation on vertical position 
accuracy, including its unit of 
measure. Mandatory if Horizontal 
accuracy estimate is not provided 

 



OGC 01-063r2 

© OGC 2002 – All rights reserved 47
 

 Annex A – UML Schemas (normative)  



OGC 00-063r2 

48 © OGC 2002 – All rights reserved 
 

A.1 UML Schema for Coordinate Reference System, Coordinate System and Datum packages  

Figure A.1 — UML Schema for Coordinate Reference System, Coordinate System 
and Datum packages 

CS_CoordinateSy stemTy pe

Cartesian
obliqueCartesian
ellipsoidal
spherical
polar
cy lindrical
multiLinear
grav ity Related
temporal

(from CoordinateSystem)

<<CodeList>>

RS_ReferenceSystem
SRSID [0..1] : RS_Identifier
domainOfValidity [0..1] : EX_Extent

<<Abstract>>

SI_SpatialReferenceSystemUsingGeographicIdentifier

CD_ImageDatum

pixelinCell : SC_PixelinCell
(from Datum)

CD_EngineeringDatum

(from Datum)

CD_VerticalDatum

vertDatumType : CD_VerticalDatumType = geoidal
(from Datum)

SC_CRS

kindCode : SC_KindCode
CRSname : CharacterString
alias [0..*] : MC_Alias
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from CoordinateReferenceSystem)

<<Abstract>>

SC_KindCode

generalCase : Integer = 1
compound : Integer = 2

(from CoordinateReferenceSystem)

<<Enumeration>>

CS_CoordinateSystemAxis

axisID [0..1] : RS_Identifier
axisName : CharacterString
axisAbbrev : CharacterString
axisDirection : CharacterString
axisUnitID : UnitOfMeasure

(from CoordinateSystem)

SC_CompoundCRS

(from CoordinateReferenceSystem)

CD_Datum

datumID [0..1] : RS_Identifier
datumName : CharacterString
alias [0..*] : MC_Alias
anchorPoint [0..1] : CharacterString
realizationEpoch [0..1] : Date
validArea [0..1] : EX_Extent
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from Datum)

<<Abstract>>
CS_CoordinateSystem

CSID [0..1] : RS_Identifier
CSname : CharacterString
type : SC_CoordinateSystemType
dimension : Integer
remarks [0..1] : CharacterString

(from CoordinateSystem)

0..*

1..*

+usedInCoordinateSystem
0..*

+usesAxis 1..* {ordered}

{Axes describing horizontal location must have 
the same unit.

All axes of a Cartesian CS must have the same 
unit when applied to a Geocentric CRS.}

SC_CoordinateReferenceSystem

CRStype : SC_CoordinateReferenceSystemType
(from CoordinateReferenceSystem)

0..*

2..n

0..*+composedOfCRS

2..n {ordered}

0..*

1

0..*

+usesDatum 1

0..*

1

0..*

+usesCoordinateSystem 1

1

0..*

+sourceCRS 1

CRS definition

+derivedCRS
0..*

CD_PrimeMeridian

meridianID [0..1] : RS_Identifier
meridianName : CharacterString = Greenwich
greenwichLongitude : MC_Angle = 0
remarks [0..1] : CharacterString

(from Datum)

CD_GeodeticDatum

(from Datum)

0..*

1

+isUsedByDatum
0..*

+usesPrimeMeridian 1

CD_Ellipsoid

ellipsoidID [0..1] : RS_Identifier
ellipsoidName : ChararcterString
alias [0..*] : Sequence<MC_Alias>
semiMajorAxis : MC_Length
secondDefiningParameter : CD_SecondDefiningParameter
remarks [0..1] : CharacterString

(from Datum)

0..*

1

+isUsedByDatum

0..*

+usesEllipsoid 1

CD_TemporalDatum

origin : DateTime
(from Datum)

kindCode = 1 kindCode = 2

CD_PixelinCell

cellCenter
cellCorner

(from D atum)

<<CodeList>>

CD_VerticalDatumTy pe

geoidal
depth
barometric
other surf ace

(from Datum)

<<CodeList>>

SC_CoordinateRef erenceSy stemTy pe

geocentric
geographic
projected
engineering
image
v ertical
temporal

(from CoordinateReferenceSystem)

<<Enumeration>>

CD_SecondDef iningParameter

Inv erseFlattening : MC_Scale
semiMinorAxis : MC_Length
isSphere : CharacterString

(from Datum)

<<Union>>

Datum package

Coordinate 
System 
package

Coordinate Reference 
System package

CS_CoordinateSy stemTy pe

Cartesian
obliqueCartesian
ellipsoidal
spherical
polar
cy lindrical
multiLinear
grav ity Related
temporal

(from CoordinateSystem)

<<CodeList>>

RS_ReferenceSystem
SRSID [0..1] : RS_Identifier
domainOfValidity [0..1] : EX_Extent

<<Abstract>>

SI_SpatialReferenceSystemUsingGeographicIdentifier

CD_ImageDatum

pixelinCell : SC_PixelinCell
(from Datum)

CD_EngineeringDatum

(from Datum)

CD_VerticalDatum

vertDatumType : CD_VerticalDatumType = geoidal
(from Datum)

SC_CRS

kindCode : SC_KindCode
CRSname : CharacterString
alias [0..*] : MC_Alias
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from CoordinateReferenceSystem)

<<Abstract>>

SC_KindCode

generalCase : Integer = 1
compound : Integer = 2

(from CoordinateReferenceSystem)

<<Enumeration>>

CS_CoordinateSystemAxis

axisID [0..1] : RS_Identifier
axisName : CharacterString
axisAbbrev : CharacterString
axisDirection : CharacterString
axisUnitID : UnitOfMeasure

(from CoordinateSystem)

SC_CompoundCRS

(from CoordinateReferenceSystem)

CD_Datum

datumID [0..1] : RS_Identifier
datumName : CharacterString
alias [0..*] : MC_Alias
anchorPoint [0..1] : CharacterString
realizationEpoch [0..1] : Date
validArea [0..1] : EX_Extent
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from Datum)

<<Abstract>>
CS_CoordinateSystem

CSID [0..1] : RS_Identifier
CSname : CharacterString
type : SC_CoordinateSystemType
dimension : Integer
remarks [0..1] : CharacterString

(from CoordinateSystem)

0..*

1..*

+usedInCoordinateSystem
0..*

+usesAxis 1..* {ordered}

{Axes describing horizontal location must have 
the same unit.

All axes of a Cartesian CS must have the same 
unit when applied to a Geocentric CRS.}

SC_CoordinateReferenceSystem

CRStype : SC_CoordinateReferenceSystemType
(from CoordinateReferenceSystem)

0..*

2..n

0..*+composedOfCRS

2..n {ordered}

0..*

1

0..*

+usesDatum 1

0..*

1

0..*

+usesCoordinateSystem 1

1

0..*

+sourceCRS 1

CRS definition

+derivedCRS
0..*

CD_PrimeMeridian

meridianID [0..1] : RS_Identifier
meridianName : CharacterString = Greenwich
greenwichLongitude : MC_Angle = 0
remarks [0..1] : CharacterString

(from Datum)

CD_GeodeticDatum

(from Datum)

0..*

1

+isUsedByDatum
0..*

+usesPrimeMeridian 1

CD_Ellipsoid

ellipsoidID [0..1] : RS_Identifier
ellipsoidName : ChararcterString
alias [0..*] : Sequence<MC_Alias>
semiMajorAxis : MC_Length
secondDefiningParameter : CD_SecondDefiningParameter
remarks [0..1] : CharacterString

(from Datum)

0..*

1

+isUsedByDatum

0..*

+usesEllipsoid 1

CD_TemporalDatum

origin : DateTime
(from Datum)

kindCode = 1 kindCode = 2

CD_PixelinCell

cellCenter
cellCorner

(from D atum)

<<CodeList>>

CD_VerticalDatumTy pe

geoidal
depth
barometric
other surf ace

(from Datum)

<<CodeList>>

SC_CoordinateRef erenceSy stemTy pe

geocentric
geographic
projected
engineering
image
v ertical
temporal

(from CoordinateReferenceSystem)

<<Enumeration>>

CD_SecondDef iningParameter

Inv erseFlattening : MC_Scale
semiMinorAxis : MC_Length
isSphere : CharacterString

(from Datum)

<<Union>>

CS_CoordinateSy stemTy pe

Cartesian
obliqueCartesian
ellipsoidal
spherical
polar
cy lindrical
multiLinear
grav ity Related
temporal

(from CoordinateSystem)

<<CodeList>>

RS_ReferenceSystem
SRSID [0..1] : RS_Identifier
domainOfValidity [0..1] : EX_Extent

<<Abstract>>

SI_SpatialReferenceSystemUsingGeographicIdentifier

CD_ImageDatum

pixelinCell : SC_PixelinCell
(from Datum)

CD_EngineeringDatum

(from Datum)

CD_VerticalDatum

vertDatumType : CD_VerticalDatumType = geoidal
(from Datum)

SC_CRS

kindCode : SC_KindCode
CRSname : CharacterString
alias [0..*] : MC_Alias
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from CoordinateReferenceSystem)

<<Abstract>>

SC_KindCode

generalCase : Integer = 1
compound : Integer = 2

(from CoordinateReferenceSystem)

<<Enumeration>>

CS_CoordinateSystemAxis

axisID [0..1] : RS_Identifier
axisName : CharacterString
axisAbbrev : CharacterString
axisDirection : CharacterString
axisUnitID : UnitOfMeasure

(from CoordinateSystem)

SC_CompoundCRS

(from CoordinateReferenceSystem)

CD_Datum

datumID [0..1] : RS_Identifier
datumName : CharacterString
alias [0..*] : MC_Alias
anchorPoint [0..1] : CharacterString
realizationEpoch [0..1] : Date
validArea [0..1] : EX_Extent
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from Datum)

<<Abstract>>
CS_CoordinateSystem

CSID [0..1] : RS_Identifier
CSname : CharacterString
type : SC_CoordinateSystemType
dimension : Integer
remarks [0..1] : CharacterString

(from CoordinateSystem)

0..*

1..*

+usedInCoordinateSystem
0..*

+usesAxis 1..* {ordered}

{Axes describing horizontal location must have 
the same unit.

All axes of a Cartesian CS must have the same 
unit when applied to a Geocentric CRS.}

{Axes describing horizontal location must have 
the same unit.

All axes of a Cartesian CS must have the same 
unit when applied to a Geocentric CRS.}

SC_CoordinateReferenceSystem

CRStype : SC_CoordinateReferenceSystemType
(from CoordinateReferenceSystem)

0..*

2..n

0..*+composedOfCRS

2..n {ordered}

0..*

1

0..*

+usesDatum 1

0..*

1

0..*

+usesCoordinateSystem 1

1

0..*

+sourceCRS 1

CRS definition

+derivedCRS
0..*

CD_PrimeMeridian

meridianID [0..1] : RS_Identifier
meridianName : CharacterString = Greenwich
greenwichLongitude : MC_Angle = 0
remarks [0..1] : CharacterString

(from Datum)

CD_GeodeticDatum

(from Datum)

0..*

1

+isUsedByDatum
0..*

+usesPrimeMeridian 1

CD_Ellipsoid

ellipsoidID [0..1] : RS_Identifier
ellipsoidName : ChararcterString
alias [0..*] : Sequence<MC_Alias>
semiMajorAxis : MC_Length
secondDefiningParameter : CD_SecondDefiningParameter
remarks [0..1] : CharacterString

(from Datum)

0..*

1

+isUsedByDatum

0..*

+usesEllipsoid 1

CD_TemporalDatum

origin : DateTime
(from Datum)

kindCode = 1 kindCode = 2

CD_PixelinCell

cellCenter
cellCorner

(from D atum)

<<CodeList>>

CD_VerticalDatumTy pe

geoidal
depth
barometric
other surf ace

(from Datum)

<<CodeList>>

SC_CoordinateRef erenceSy stemTy pe

geocentric
geographic
projected
engineering
image
v ertical
temporal

(from CoordinateReferenceSystem)

<<Enumeration>>

CD_SecondDef iningParameter

Inv erseFlattening : MC_Scale
semiMinorAxis : MC_Length
isSphere : CharacterString

(from Datum)

<<Union>>

Datum package

Coordinate 
System 
package

Coordinate Reference 
System package



OGC 01-063r2 

© OGC 2002 – All rights reserved 49
 

 

A.2 UML Schema for Coordinate Operation package 

 

Figure A.2 — UML Schema for Coordinate Operation package 

CC_CoordinateOperation

coordinateOperationID [0..1] : RS_Identifier
coordinateOperationName : CharacterString
alias [0..*] : MC_Alias
validArea : EX_Extent
version [0..1] : CharacterString
scope [0..1] : CharacterString
remarks [0..1] : CharacterString
sourceDimensions : Integer
targetDimensions : Integer
positionErrorEstimates [0..1] : DQ_PositionalAccuracy

(from CoordinateOperation)

<<Abstract>>

CC_Transf ormation
(from CoordinateOperation)

CC_Conv ersion
(from CoordinateOperation) CC_ParameterValue

v alue : MC_Measure
v alueFile : CharacterString

(from CoordinateOperation)

<<Union>>

CC_ConcatenatedOperation
(from CoordinateOperation)

CC_Operation
(from CoordinateOperation)

<<Abstract>>

0..*

1

+usesParameterValue 0..*

1

{compositio

10..*0..*

0..* 0..*

+sequence
0..*

+usesOperation

0..* {ordered}

CC_PassThroughOperation

modif iedCoordinates : Sequence<Integer>
(from CoordinateOperation)

0..*
0..*

+sequence
0..*

+usesPTOperation
0..*

{ordered}

10..*
+usesOperation

10..*

CC_OperationParameter

parameterID [0..1] : RS_Identif ier
parameterName : CharacterString
alias [0..*] : MC_Alias
remarks [0..1] : CharacterString

(from CoordinateOperation)
1

0..* +v alueOf Parameter

1

0..*

CC_OperationMethod

methodID [0..1] : RS_Identif ier
methodName : CharacterString
alias [0..*] : MC_Alias
f ormula : CharacterString
remarks [0..1] : CharacterString

(from CoordinateOperation)

0..*

0..*

+usesParameter 0..*

0..*

+usesMethod

1



OGC 00-063r2 

50 © OGC 2002 – All rights reserved 
 

A.3 UML Schema showing relationships between Coordinate Reference System package and 
Coordinate Operation package 

 

Figure A.3 — UML Schema showing relationships between Coordinate Reference 
System package and Coordinate Operation package 

CC_CoordinateOperation

coordinateOperationID [0..1] : RS_Identifier
coordinateOperationName : CharacterString
alias [0..*] : MC_Alias
validArea : EX_Extent
version [0..1] : CharacterString
scope [0..1] : CharacterString
remarks [0..1] : CharacterString
sourceDimensions : Integer
targetDimensions : Integer
positionErrorEstimates [0..1] : DQ_PositionalAccuracy

(from CoordinateOperation)

<<Abstract>>

SC_CRS

kindCode : SC_KindCode
CRSname : CharacterString
alias [0..*] : M C_Alias
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from CoordinateReferenceSystem)

<<Abstract>>

0..*
0..1 +is used in 0..*+sourceCRS
0..1

{Mandatory  f or Transf ormations only .
Conv ersion hav e a source and a target CRS, NOT specif ied through these associations, 

but through the the self -ref erence association on SC_CoordinateRef erenceSy stem
For ConcatedOperation as sequence of  N  Operations:

source CRS (c oncat. operation) = source CRS (operation step1) 
target CRS (operation step i) = source CR S (operation step i+1); i = 1  ...(N-1)

target CRS (concat. operation) = target CRS (operation step N)}

source

0..*0..1 +is used in 0..*

+target CRS
0..1 target

{See constraints f or 'source' relationship}

kindCode = 1

CC_Conv ersion
(from CoordinateOper ation)

0..1

+def inedByConv ersion

CRS Definition

CC_Operation
(from CoordinateOper ation)

<<Abstract>> s

SC_CoordinateRef erenceSy stem

CRSty pe : SC_CoordinateRef erenceSy stemTy pe
(from CoordinateReferenceSystem)

1

0..*

+sourceCRS 1

CRS definition

+deriv edCRS
0..*

0..*

+def ines

CC_CoordinateOperation

coordinateOperationID [0..1] : RS_Identifier
coordinateOperationName : CharacterString
alias [0..*] : MC_Alias
validArea : EX_Extent
version [0..1] : CharacterString
scope [0..1] : CharacterString
remarks [0..1] : CharacterString
sourceDimensions : Integer
targetDimensions : Integer
positionErrorEstimates [0..1] : DQ_PositionalAccuracy

(from CoordinateOperation)

<<Abstract>>

SC_CRS

kindCode : SC_KindCode
CRSname : CharacterString
alias [0..*] : M C_Alias
scope [0..1] : CharacterString
remarks [0..1] : CharacterString

(from CoordinateReferenceSystem)

<<Abstract>>

0..*
0..1 +is used in 0..*+sourceCRS
0..1

{Mandatory  f or Transf ormations only .
Conv ersion hav e a source and a target CRS, NOT specif ied through these associations, 

but through the the self -ref erence association on SC_CoordinateRef erenceSy stem
For ConcatedOperation as sequence of  N  Operations:

source CRS (c oncat. operation) = source CRS (operation step1) 
target CRS (operation step i) = source CR S (operation step i+1); i = 1  ...(N-1)

target CRS (concat. operation) = target CRS (operation step N)}

source

0..*0..1 +is used in 0..*

+target CRS
0..1 target

{See constraints f or 'source' relationship}

kindCode = 1

CC_Conv ersion
(from CoordinateOper ation)

CC_Conv ersion
(from CoordinateOper ation)

0..1

+def inedByConv ersion

CRS Definition

CC_Operation
(from CoordinateOper ation)

<<Abstract>>
CC_Operation

(from CoordinateOper ation)

<<Abstract>> s

SC_CoordinateRef erenceSy stem

CRSty pe : SC_CoordinateRef erenceSy stemTy pe
(from CoordinateReferenceSystem)

1

0..*

+sourceCRS 1

CRS definition

+deriv edCRS
0..*

0..*

+def ines



OGC 01-063r2 

© OGC 2002 – All rights reserved 51
 

A.4 UML Schema for Coordinate Quality package 

 

Figure A.4 — UML Schema for Coordinate Quality package 

DQ_PositionalAccuracy

measureDescription [0..1] : CharacterString
(from DataQuality)

<<Abstract>>

DQ_AbsoluteExternalPositionalAccuracy

result [1..2] :  MC_Measure
(from DataQuality)

DQ_Relativ eInternalPositionalAccuracy

result [1..2] : MC_Measure
(from DataQuality)

DQ_Cov arianceMatrix

unitsOf Measure : Sequence<MC_UnitOf Measure>
(from DataQuality)

DQ_Cov arianceElement

rowIndex : Integer
columnIndex : Integer
cov ariance : Real

(from DataQuality)

1..*+includesElement 1..*

{composition}



OGC 00-063r2 

52 © OGC 2002 – All rights reserved 
 

A.5 UML Schema for Metadata Coordinates package 

 

Figure A.5 — UML Schema for Metadata Coordinates package 

MC_Alias

aliasName :  CharacterString
aliasTy pe [0 ..1] : MC_AliasTy pe
aliasNameSpace : CharacterString
aliasRemark s [0..1] : CharacterStr ing

(from MetadataCoordinates)

MC_AliasTy pe

CoordinateRef erenceSy stem
Datum
Ellipsoid
CoordinateOperation
Coordinate Operation Method
Coordinate Operation Parameter

(from MetadataCoordinates)

<<CodeList>>

MC_UnitOf Measure

uomID [0..1] : RS_Identif ier
uomName : CharacterString
alias [0..*] : MC_Alias
targetUom : MC_UnitOf Measure
a : Real = 0
b : Real
c : Real
d : Real = 0
remarks [0..1] : CharacterString

(from MetadataCoordinates)

MC_UomAngle
(from MetadataCoordinates)

MC_UomLength
(from MetadataCoordinates)

MC_UomScale
(from MetadataCoordinates)

MC_Length

uom : MC_UomLength
(from MetadataCoordinates)

MC_Angle

uom : MC_UomAngle
(from MetadataCoordinates)

MC_Scale

uom : MC_UomScale
(from MetadataCoordinates)

MC_Measure

v alue : Real
(from MetadataCoordinates)

RS_Identif ier

code : CharacterString
codeSpace [0..1] : CharacterString
v ersion [0..1] : CharacterString
authority  [0..1] : CI_Citation

(from M etadataCoor dinates)

<<DataTy pe>>

MC_Alias

aliasName :  CharacterString
aliasTy pe [0 ..1] : MC_AliasTy pe
aliasNameSpace : CharacterString
aliasRemark s [0..1] : CharacterStr ing

(from MetadataCoordinates)

MC_AliasTy pe

CoordinateRef erenceSy stem
Datum
Ellipsoid
CoordinateOperation
Coordinate Operation Method
Coordinate Operation Parameter

(from MetadataCoordinates)

<<CodeList>>

MC_UnitOf Measure

uomID [0..1] : RS_Identif ier
uomName : CharacterString
alias [0..*] : MC_Alias
targetUom : MC_UnitOf Measure
a : Real = 0
b : Real
c : Real
d : Real = 0
remarks [0..1] : CharacterString

(from MetadataCoordinates)

MC_UomAngle
(from MetadataCoordinates)

MC_UomLength
(from MetadataCoordinates)

MC_UomScale
(from MetadataCoordinates)

MC_Length

uom : MC_UomLength
(from MetadataCoordinates)

MC_Angle

uom : MC_UomAngle
(from MetadataCoordinates)

MC_Scale

uom : MC_UomScale
(from MetadataCoordinates)

MC_Measure

v alue : Real
(from MetadataCoordinates)

RS_Identif ier

code : CharacterString
codeSpace [0..1] : CharacterString
v ersion [0..1] : CharacterString
authority  [0..1] : CI_Citation

(from M etadataCoor dinates)

<<DataTy pe>>



OGC 01-063r2 

© OGC 2002 – All rights reserved 53
 

Annex B – Differences from ISO 19111 

B.1 UML modeling 

Inheritance of attributes is not dealt with consistently in ISO 19111. In the OGC model, 
all common attributes and referenced objects have been placed in the highest level 
(abstract) superclass. This eliminates separate identifiers for 
SC_CoordinateReferenceSystem, SC_CompoundCRS, CC_Operation and 
CC_ConcatenatedOperation. 

Also the attribute ‘validArea’ in entities SC_CoordinateReferenceSystem, 
SC_CompoundCRS, SC_Datum has been omitted, because they would duplicate the 
attribute: ‘domainOfValidity’, inherited from the abstract class RS_ReferenceSystem. 

An abstract superclass CC_CoordinateOperation has been added to allow easier 
modelling of shared attributes and relationship of CC_Operation and 
CC_ConcatenatedOperation. This Abstract Specification therefore requires a source and a 
target CRS to be defined for CC_ConcatenatedOperation. The ISO 19111 model does not 
allow that, but would require implemented software to work out the source and the target 
CRS from the concatenation of CRS’s implied in the definition of the concatenated 
operation. The reason for the de-normalization in this Abstract Specification is 
implementation ease. 

In some cases ISO 19111 requires attributes where these attributes are already implied in 
the UML relationships; in other words these attributes contain redundant information. 
This affects the following attributes: 

CC_ConcatenatedOperation:  numberOfSteps 

CC_ConcatenatedOperation:  stepID 

Some entities have been modelled slightly differently from ISO 19111, although the 
intention has been honoured and the OGC version and ISO version would result in 
identical implementations. Essential in assessing any modelling differences is the premise 
that no information should be lost. An example is the way aliases have been modelled. 

ISO 19111 contains inconsistency between the two (normative) UML diagrams that 
cannot be resolved without making assumptions. This is further discussed in section B.4 
below. 

Conflict with ISO 19111? 

None. It would not result in any conflict at the implementation level. Only apparent 
differences exist with the ISO 19111 UML model. 



OGC 00-063r2 

54 © OGC 2002 – All rights reserved 
 

B.2 Coordinate Reference System subtypes 

ISO 19111 does not model subtypes of this class. OGC believes it crucial that this is 
done, as this subtyping has been part of geodetic practice for many years. The taxonomy 
is based mainly on the way the effects of earth curvature are dealt with. This has a direct 
impact on the size of the area for which the coordinate reference system is suited. The 
main types are: 

a) geocentric, describing point locations in 3D space; suited to cover the entire earth 

b) geographic, describing point locations on or relative to a reference ellipsoid, 
approximating the geoid over a significant region of the earth. 

c) projected, treating the earth’s geometry as a flat plane, but carefully controlled 
distortion; typically suited for (parts of) countries. 

d) engineering, treating the earth’s surface as flat, disregarding earth curvature; suited 
for small areas 

The sub-typing has been implemented in this document as an attribute with enumerated 
values. It might alternatively be implemented by sub-classing, which would result in a 
more complex but tighter model. Notable additions to the list not mentioned in ISO 
19111 are the subtype ‘Temporal CRS’ and “Image CRS” 

Conflict with ISO 19111? 

Yes, but the preferred interpretation is to see this subtyping as additional detail to the 
minimum requirements described in ISO 19111. 

B.3 Coordinate System subtypes 

ISO 19111 introduces sub typing at this level, showing however a mixed taxonomy. 
“Projected” is the outlier here. “Projected” refers to the way earth curvature is dealt with 
(see 2 above), whereas the remainder of the subtypes in ISO 19111 is classified by the 
geometry of the coordinate axes. This Abstract Specification document retains that 
taxonomy with the removal of “projected” (now a treated as a CRS subtype) and it adds 
some subtypes. 

The ISO 19111 subtype “linear” is by definition a one-dimensional coordinate system 
(e.g. a system used for road chainage). However, OGC recognizes the need for an 
extension to two or three dimensions, whereby a location along a linear feature is 
determined by the length along that feature (from its defined origin) and e.g. the 
perpendicular offset from the linear feature. Because of the implication of one-
dimensionality in ISO 19111 in the definition of a “linear CS”, the type “multi-linear CS” 
has replaced this type in this Abstract Specification 



OGC 01-063r2 

© OGC 2002 – All rights reserved 55
 

Conflict with ISO 19111? 

Yes. The new types may be seen as a permitted extension of the ISO 19111 minimum 
requirements, but the migration of the type “projected” to the CRS types is a deviation, 
as well as the implication of multi-dimensionality in the type “multi-linear” . 

B.4 Coordinate conversions and their role in defining Coordinate Reference Systems 

This document adds a concept that is not modelled, or is unsatisfactorily modelled, in 
ISO 19111, viz. ‘Derived CRS’. The ISO 19111 URL schema of figure B.1 in ISO 19111 
documents a relationship between SC_CoordinateSystem and SC_Ellipsoid that is not 
described in the text. The same diagram shows a relationship between 
SC_CoordinateSystem and CC_Operation, also not documented in the text, whereas 
figure B.2 shows a (double) relationship between SC_CoordinateReferenceSystem and 
CC_Operation. It is assumed that this is an attempt to model projected and other derived 
CRSs. 

Some CRSs cannot exist without the relationship with a source CRS having been defined. 
The best example is a projected CRS; this requires a geographic CRS to exist, as well as a 
coordinate operation that defines the projected CRS. The implication of this relationship 
is, that the coordinate operation must be a coordinate conversion, as defined in ISO 
19111. That is, it must have defined, i.e. not empirically determined, parameters. Because 
of this fixed relationship, the derived CRS “inherits” the source CRS’s datum. This will 
always be the case when a coordinate conversion is used to link two coordinate reference 
systems. For that reason this is a significant difference between a coordinate conversion 
and a coordinate transformation, which would lead to different modelling of those two 
concepts. However, the only instance where this distinction between conversion and 
transformation leads to differences in modelling in ISO 19111 is described above. 

The intention to distinguish between a conversion and a transformation is furthermore 
inferred from the relationship in ISO 19111 between SC_CoordinateSystem and 
CC_CoordinateOperation. Since a coordinate conversion requires the datum to remain 
unchanged, the reasoning in ISO 19111 appears to be that the datum information is then 
not needed and can be bypassed. So, whereas coordinate transformations operate between 
two coordinate reference systems it appears to be assumed that coordinate conversions 
can then operate between coordinate systems. However, this creates the following 
problem: map projections, which are conversions, need the ellipsoid parameters and those 
are part of the Datum definition. This appears to be the reason that an additional 
relationship has been created in ISO 19111 between SC_CoordinateSystem and 
SC_Ellipsoid. 

The consequence of this extra relationship is that instances of SC_CoordinateSystem 
become dependent on instances of SC_Ellipsoid. In non-UML language: it would 
necessitate the definition of a coordinate system of a given type for every ellipsoid, e.g. 
an ellipsoidal coordinate system for every ellipsoid defined. Furthermore, the coordinate 
conversion relates two coordinate systems, a source and a target, which in the ISO model 
would mean that the association of coordinate system is made for both coordinate 



OGC 00-063r2 

56 © OGC 2002 – All rights reserved 
 

systems. The ISO 19111 UML model introduces dependency between 
SC_CoordinateSystem and SC_ Ellipsoid and would at the implementation level 
introduce data duplication with the potential for data conflicts. To eliminate these 
undesirable effects the OGC model is necessarily rather different from the ISO 19111 
model. 

In order to align with the OGC model, the ISO 19111 model requires the following 
changes: 

- a self-reference relationship in SC_CoordinateReferenceSystem, permitting a 
source CRS to be defined for a target CRS, defined by a coordinate conversion; 

- a relationship between SC_CoordinateReferenceSystem and CC_Conversion, 
permitting the defining coordinate conversion to be specified. 

- making the two relationships from CC_CoordinateOperation to SC_CRS optional, 
to permit the source and target CRS to not be specified in the case of a Coordinate 
Conversion. Leaving these relationships mandatory would lead to a potential data 
conflict, as the information about source and target CRS would be duplicated. 

Conflict with ISO 19111? 

Yes 

B.5 Coordinate operations 

Modelling detail has been added in the area of coordinate operations. A new superclass 
CC_CoordinateOperation has been created to capture the shared attributes and 
relationships of the CC_Operation and CC_ConcatenatedOperation classes. In addition 
three more new classes have been created: 

- CC_OperationMethod 

- CC_OperationParameter 

- CC_ParameterValue 

One of the two reasons was normalisation, to avoid repetition of attribute values in 
instantiated objects. 

The more important reason was to create a structure that permits being prescriptive about 
what operation parameters are used by what method. It permits being prescriptive about 
the operation methods themselves. This part of the model comes close to the heart of 
coordinate transformation software. The prevalence of distributed computing necessitates 
standardisation in the data: a coordinate operation may be requested specifying an 
operation method that is not recognised by the server software. If it does recognise the 
method, it may not recognise the operation parameters quoted. Is the parameter called 
‘scale factor at central meridian’, ‘scale factor at natural origin’, ‘false magnification’, 



OGC 01-063r2 

© OGC 2002 – All rights reserved 57
 

etc? The modelling construct proposed is derived from the EPSG data model that has 
proven to be able to resolve this issue. 

Conflict with ISO 19111? 

Yes, but it is quite possible to interpret the extra classes as additional detail implementing 
the more general ISO 19111 model. 

B.6 RS_Identifier 

ISO 19111 specifies the various Identifiers of the main classes as mandatory and of data 
type RS_Identifier. 

The concept of identifier appears to be applied inconsistently in ISO 19111, because in 
the examples provided in Annex E, although not normative, the identifiers are text strings 
(the name of the data entity) rather than referring to an object. 

The RS_Identifier concept enables data to be defined by reference to a source that 
contains the full definition. ISO 19111 calls this “description by citation”. As such the 
identifier can never be mandatory, because it would imply that only data from well-
known datasets could be used. This is clearly not the intention of ISO 19111, as is 
evidenced by the text in Section 6.6 “Citations”. This implies that all identifiers should be 
optional, not mandatory. 

OGC believes this is an inconsistency in ISO 19111 itself. This deviation is therefore not 
considered to be in conflict with ISO 19111. 

A more serious problem was identified because RS_Identifier, defined in ISO 19115, was 
felt to be inadequate for the purpose it would be used for in 99% of the cases. 
RS_Identifier makes use of the CI_Citation class to provided details about the definition 
of the well-known dataset that is referenced. CI_Citation is heavily focussed on paper 
publications, whereas the usage foreseen by OGC would be dominated by well-known 
data made available over the Web. 

For that reason OGC added two attributes to RS_Identifier, namely “codeSpace” and 
“version”. These two attributes cover 99% or more of the usage anticipated, in which 
case no C_Citation class object would need to be instantiated. 

Conflict with ISO 19111? 

No, the optional nature of OGC’s identifier does not constitute a conflict. The two 
additional attributes in RS_Identifier do conflict with the definition in ISO 19115, where 
the issue will have to be resolved. 



OGC 00-063r2 

58 © OGC 2002 – All rights reserved 
 

B.7 Name attribute added 

As stated in the previous point the Identifier attribute is not used consistently in ISO 
19111. It is used alternatively as name of the entity and as RS_Identifier object. It has 
already been argued that that is incorrect. The consequence of this is that a name for the 
entity in question is missing, unless one would want to model that as an alias, which 
appears to be artificial. 

Conflict with ISO 19111? 

No. It appears to have been intention of ISO 19111 to model an attribute with this 
meaning. The modelling appears to be incorrect as the ISO 19111 “XXX Identifier” 
attributes looks like it is a mixture of name and reference to a well-known dataset. 

B.8 Modelling of ellipsoid parameters 

The modelling of the defining parameters of an ellipsoid in ISO 19111 is felt to be 
somewhat inadequate. An ellipsoid is defined by two independent parameters. Either of 
the following two options are in use: 

- semi-major axis and inverse flattening; 

- semi-major axis and semi-minor axis 

ISO/19111 only permits the first; the OGC model permits both. The latter is necessary, 
because some well-known data sets (e.g. EPSG) register the original definition of the 
ellipsoid, which may be according to either method. 

Conflict with ISO 19111? 

Yes. ISO 19111 specifically precludes the definition of an ellipsoid by its two semi-axes. 

B.9 Unit of measure 

ISO 19111 does not specify the way units of measure are to be modelled. The OGC 
model uses a variation on the modelling construct in ISO CD 19103, the main difference 
being that the conversion formula from a unit to its standard unit of the same type uses a 
more complex formula. 

Conflict with ISO 19111? 

No. 

B.10 Accuracy 

ISO 19111 briefly mentions accuracy, but does not specify how to model it. The OGC 
model deals with accuracy only in the sense of accuracy impact of coordinate 
transformations (coordinate conversions have exact, hence error-free parameters). 



OGC 01-063r2 

© OGC 2002 – All rights reserved 59
 

ISO 19115 does model data accuracy, but its approach does not properly allow for 
covariance matrices: its splits accuracy in absolute and relative accuracy. A covariance 
matrix contains both. The implementation in the OGC model therefore varies somewhat 
from ISO 19115. 

Conflict with ISO 19111? 

No. 



OGC 00-063r2 

60 © OGC 2002 – All rights reserved 
 



OGC 01-063r2 

© OGC 2002 – All rights reserved 61
 

Bibliography 

[1] ISO 31 (all parts), Quantities and units. 

[2] IEC 60027 (all parts), Letter symbols to be used in electrical technology. 

[3] ISO 1000, SI units and recommendations for the use of their multiples and of 
certain other units. 

[4] ISO DIS 19112, Geographic information - Spatial referencing by geographic 
identifiers 

[5] ISO DIS 19113, Geographic information – Quality Principles 

[6] ISO CD 19123, Geographic Information – Schema for Coverage Geometry and 
Functions 

[7] OGC Document 99-102r1, The OpenGIS® Abstract Specification – Topic 2: 
Spatial Reference Systems. 


