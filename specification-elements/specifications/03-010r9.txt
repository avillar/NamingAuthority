
code lists/codeListDictionary.xsd
 
	 
		 
			 codeListDictionary.xsd
			 One possible GML Application Schema to XML encode all the allowed string values and their meanings for an XML element that encodes one CodeList stereotyped UML class. This schema encodes the allowed string values and their meanings in a CodeListDictionary that is based on gml:Dictionary. This GML Application Schema specifies use of element names that are specialized for a CodeListDictionary, and prohibits use of some gml:Dictionary elements that are not considered useful in a CodeListDictionary. Primary editor: Arliss Whiteside. Last updated 2003/09/18. 
		
	
	
	 
	
	 
		 
			 Encodes all allowed code values and their meanings for an XML element that encodes one CodeList stereotyped UML class. The gml:name element is used to encode one or more names for this Code List Dictionary. The optional gml:description element can be used to record a description of this Dictionary. The required gml:id attribute allows this Dictionary to be referenced, if this Dictionary is contained within another XML element. 
		
		 
			 
				 
					 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to definition of one allowed code, either including or referencing that code definition. For example, a Code Definition in another Code List Dictionary can be referenced. 
		
		 
			 
				 
					 
						 
					
					 
				
			
		
	
	
	 
		 
			 Encodes one allowed code value with its meaning. The gml:description is used to record the meaning of this allowed code value, and is thus required. The required gml:id attribute allows this Code Definition to be referenced by an anyURI value, if this Code Definition is referenced from another Code List Dictionary, or is directly referenced by a gml:CodeType. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Allowed value for the XML element to which this dictionary applies. The string value is allowed to include embedded spaces, as required for codes in Code Lists. The optional codeSpace attribute can be omitted, or could contain the codeSpace value normally used with this "code" string. 
		
	




code lists/derivedCRSTypeCodeList.xml
 
	
	 Type of a derived coordinate reference system. 
	 derivedCRSType
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft. 
			 engineering
		
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. 
			 image
		
	
	 
		 
			 A coordinate reference system used for recording of heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. 
			 vertical
		
	
	 
		 
			 A coordinate reference system used for the recording of time. 
			 temporal
		
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface. 
			 geographic
		
	




code lists/parameterTypeCodeList.xml
 
	
	 Data type of an operation parameter. Usually refers to a data type defined in measures.xsd or allowed in the ParameterValueType of coordinateOperations.xsd. 
	 parameterType
	 
		 
			 General numeric value of an operation parameter, with its associated unit of measure. 
			 measure
		
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
			 length
		
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as one, percent, permil, or parts-per-million. 
			 scale
		
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks. 
			 time
		
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
			 grid length
		
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format. 
			 angle choice
		
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians. 
			 angle
		
	
	 
		 
			 Value of an angle operation parameter, in either degree-minute-second format or single value format. 
			 dms angle
		
	
	 
		 
			 Value of a length or angle quantity, where an angle can be recorded in either degree-minute-second format or single value format. Often used for horizontal ground coordinates. 
			 length or angle
		
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
			 string
		
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
			 positive integer
		
	
	 
		 
			 Zero or positive integer value of an operation parameter. An integer value does not have an associated unit of measure. 
			 non negative integer
		
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
			 boolean
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated list of double values. 
			 measure list
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list of Length measures. Each value has the same associated unit of measure suitable for a length, such as metres or feet. An element of this type contains a space-separated list of double values. 
			 length list
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list of Scale measures. Each value has the same associated unit of measure suitable for a scale factor, such as one, percent, permil, or parts-per-million. An element of this type contains a space-separated list of double values. 
			 scale list
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list of Angle measures, each recorded as a single number. Each value has the same associated unit of measure suitable for an angle, such as degrees or radians. An element of this type contains a space-separated list of double values. 
			 angle list
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list of Time measures, each recorded as a single number. Each value has the same associated unit of measure suitable for a time value, such as seconds or days. An element of this type contains a space-separated list of double values. 
			 time list
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list of Grid Length measures. Each value has the same associated unit of measure suitable for length along the axes of a grid, such as pixel spacings or grid spacings. An element of this type contains a space-separated list of double values. 
			 grid length list
		
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list of Velocity measures. Each value has the same associated unit of measure suitable for a velocity, such as metres per second or miles per hour. An element of this type contains a space-separated list of double values. 
			 velocity list
		
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated list of integer values. 
			 integer list
		
	
	 
		 
			 Ordered sequence of two or more positive integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated list of integer values. 
			 positive integer list
		
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
			 anyURI
		
	




code lists/pixelInCellCodeList.xml
 
	
	 Specification of the way the image grid is associated with the image data attributes. 
	 pixelInCell
	 
		 
			 The origin of the image coordinate system is the center of a grid cell or image pixel. 
			 cell center
		
	
	 
		 
			 The origin of the image coordinate system is the corner of a grid cell, or half-way between the centres of adjacent image pixel centres. 
			 cell corner
		
	




code lists/verticalDatumTypeCodeList.xml
 
	
	 Type of a vertical datum.
	 verticalDatumType
	 
		 
			 The zero value of the associated vertical coordinate system axis is defined to approximate a constant potential surface, usually the geoid. Such a reference surface is usually determined by a national or scientific authority, and is then a well-known, named datum. 
			 geoidal
		
	
	 
		 
			 The zero point of the vertical axis is defined by a surface that has meaning for the purpose which the associated vertical measurements are used for. For hydrographic charts, this is often a predicted nominal sea surface (i.e. without waves or other wind and current effects) that occurs at low tide. For some examples, see OGC Abstract Specification Topic 2. 
			 depth
		
	
	 
		 
			 Atmospheric pressure is the basis for the definition of the origin of the associated vertical coordinate system axis. For more information, see OGC Abstract Specification Topic 2. 
			 barometric
		
	
	 
		 
			 In some cases, e.g. oil exploration and production, a geological feature, such as the top or bottom of a geologically identifiable and meaningful subsurface layer, is used as a vertical datum. Other variations to the above three vertical datum types may exist and are all included in this type. 
			 other surface
		
	




crsSchemas/base/basicTypes.xsd
 
   
     basicTypes.xsd
     
    Generic simpleContent components for use in GML 
    
  
  
   
     
        Some common reasons for a null value:   
			
        innapplicable - the object does not have a value
        missing - The correct value is not readily available to the sender of this data.  
                           Furthermore, a correct value may not exist.
        template - the value will be available later
        unknown - The correct value is not known to, and not computable by, the sender of this data. 
                           However, a correct value probably exists.
        withheld - the value is not divulged 
        
        Specific communities may agree to assign more strict semantics when these terms are used in a particular context.  
      
    
     
       
       
       
       
       
    
  
  
   
     
       Utility type for null elements.  The value may be selected from one of the enumerated tokens, or may be a URI in which case this should identify a resource which describes the reason for the null. 
    
     
  
  
   
  
   
     
       Union of the XML Schema boolean type and the GML Nulltype.  An element which uses this type may have content which is either a boolean {0,1,true,false} or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of boolean values {0,1,true,false} with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
    
     
  
  
   
     
       Union of the XML Schema string type and the GML Nulltype.  An element which uses this type may have content which is either a string or a value from Nulltype.  Note that a "string" may contain whitespace.  
    
     
  
  
   
     
       Union of the XML Schema Name type and the GML Nulltype.  An element which uses this type may have content which is either a Name or a value from Nulltype.  Note that a "Name" may not contain whitespace.  
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of Name values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema Name type.  An element of this type contains a space-separated list of Name values
    
     
  
  
   
     
       Union of the XML Schema double type and the GML Nulltype.  An element which uses this type may have content which is either a double or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of double values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       Union of the XML Schema integer type and the GML Nulltype.  An element which uses this type may have content which is either an integer or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of integer values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.   
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.  
      A member of the list may be a typed null.  
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      A member of the list may be a typed null. 
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       Tables or arrays of tuples.  
        May be used for text-encoding of values from a table.  
        Actually just a string, but allows the user to indicate which characters are used as separators.  
        The value of the 'cs' attribute is the separator for coordinate values, 
        and the value of the 'ts' attribute gives the tuple separator (a single space by default); 
        the default values may be changed to reflect local usage.
        Defaults to CSV within a tuple, space between tuples.  
        However, any string content will be schema-valid.  
    
     
       
         
         
         
      
    
  
  
   
     
       Utility type used in various places 
      - e.g. to indicate the direction of topological objects;
      "+" for forwards, or "-" for backwards.
    
     
       
       
    
  
  




crsSchemas/base/coordinateOperations.xsd
 
	 
		 
		 
			 coordinateOperations.xsd
			 3.1.0
			 How to encode coordinate operation definitions. 
			 Builds on referenceSystems.xsd to encode the data needed to define coordinate operations, including Transformations, Conversions, and other specific subtypes of operations. Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
			 Copyright (c) 2002-2003 OpenGIS, All Rights Reserved.
			 This schema encodes the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
					 
					 
						 
							 Unordered set of estimates of the impact of this coordinate operation on point position accuracy. Gives position error estimates for target coordinates of this coordinate operation, assuming no errors in source coordinates. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
	
	 
		 
			 Association to a concatenated operation, either referencing or containing the definition of that concatenated operation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
	
	 
		 
			 Association to a pass through operation, either referencing or containing the definition of that pass through operation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 Value of an angle operation parameter, in either degree-minute-second format or single value format. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 A group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level parameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
							 Unordered set of composition associations to the parameter values and groups of values included in this group. 
						
					
					 
				
			
		
	
	
	 
		 
			 A composition association to a parameter value or group of values included in this group. 
		
	
	
	 
		 
			 Association to the operation parameter group for which this element provides parameter values. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter group objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this operation parameter group, including source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter group is identified. 
		
	
	
	 
		 
			 The definition of a group of parameters used by an operation method. This complexType is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter group. The first groupID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
						 
							 Unordered list of associations to the set of operation parameters that are members of this group. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter group. 
		
	
	
	 
		 
			 The maximum number of times that values for this parameter group can be included. If this attribute is omitted, the maximum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter that is a member of a group. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
				 
					 
				
				 
			
		
	
	




crsSchemas/base/coordinateReferenceSystems.xsd
 
	 
		 
		 
			 coordinateReferenceSystems.xsd
			 3.1.0
			 How to encode coordinate reference system definitions. 
			 Builds on referenceSystems.xsd to encode the data needed to define coordinate reference systems, including the specific subtypes of coordinate reference systems. Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
			 Copyright (c) 2002-2003 Open GIS Consortium, All Rights Reserved.
			 This schema encodes the Coordinate Reference System (SC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates, with the exception of the abstract "SC_CRS" class. The "SC_CRS" class is encoded in referenceSystems.xsd, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		
	
	
	 
	 
	 
	
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 Association to a compound coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a geographic coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A 3D coordinate reference system with the origin at the approximate centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view, which obviates the need to model the earth's curvature. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the spherical coordinate system used by this CRS.
		
	
	
	 
	
	 
		 
			 Association to a geocentric coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 Association to a general derived coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a projected coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft.
For further information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the engineering datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an engineering coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the oblique Cartesian coordinate system used by this CRS.
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an image coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for the recording of time. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the temporal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the temporal datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	




crsSchemas/base/coordinateSystems.xsd
 
	 
		 
		 
			 coordinateSystems.xsd
			 3.1.0
			 How to encode coordinate system definitions. 
			 Builds on referenceSystems.xsd to encode the data needed to define coordinate systems, including the specific subtypes of coordinate systems. Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
			 Copyright (c) 2002-2003 OpenGIS, All Rights Reserved.
			 This schema encodes the Coordinate System (CS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system axis is identified. 
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system containing a single time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TemporalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated ordinate is the distance from the specified origin to the point along the axis. Example: usage of the line feature representing a road to describe points on or along that road. A LinearCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a linear coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. An example is a multilinear coordinate system which contains one coordinate axis that may have any 1-D shape which has no intersections with itself. This non-straight axis is supplemented by one or two straight axes to complete a 2 or 3 dimensional coordinate system. The non-straight axis is typically incrementally straight or curved. A UserDefinedCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a user-defined coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be confused with an ellipsoidal coordinate system based on an ellipsoid "degenerated" into a sphere. A SphericalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a spherical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a polar coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An ObliqueCartesianCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an oblique-Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	




crsSchemas/base/dataQuality.xsd
 
	 
		 
		 
			 dataQuality.xsd
			 3.1.0
			 How to encode positional data quality information. 
			 Builds on units.xsd to encode the data needed to describe the positional accuracy of coordinate operations. Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
			 Copyright (c) 2002-2003 OpenGIS, All Rights Reserved.
			 This schema encodes the Data Quality (DQ) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		
	
	
	 
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




crsSchemas/base/datums.xsd
 
	 
		 
		 
			 datums.xsd
			 3.1.0
			 How to encode datum definitions. 
			 Builds on referenceSystems.xsd to encode the data needed to define datums, including the specific subtypes of datums. Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
			 Copyright (c) 2002-2003 Open GIS Consortium, All Rights Reserved.
			 This schema encodes the Datum (CD_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 Association to a datum, either referencing or containing the definition of that datum. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 An engineering datum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin can be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite). 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an engineering datum, either referencing or containing the definition of that datum. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorPoint" and "realizationEpoch" elements. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Defines the origin of a temporal coordinate reference system. This type extends the TemporalDatumRestrictionType to add the "origin" element with the dateTime type. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The date and time origin of this temporal datum. 
		
	
	
	 
	
	 
		 
			 Association to a temporal datum, either referencing or containing the definition of that datum. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is “Greenwich”, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is “Greenwich”. 
		
	
	
	 
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid. 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	




crsSchemas/base/dictionary.xsd
 
   
     
     
			Dictionary schema for GML 3.0 
			Components to support the lists of definitions.  
    
  
  
   
  
  
  
  
   
  
   
     
       A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
    
     
       
         
           
           
           
        
         
      
    
  
  
   
   
  
   
     
       A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
    
     
       
         
           
             
               An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
            
          
           
             
               An identified reference to a remote entry in this dictionary, to be used when this entry should be identified to allow external references to this specific entry. 
            
          
        
      
    
  
  
   
   
  
   
     
       An entry in a dictionary of definitions. An instance of this type contains or refers to a definition object.  

The number of definitions contained in this dictionaryEntry is restricted to one, but a DefinitionCollection or Dictionary that contains multiple definitions can be substituted if needed. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
    
     
       
         
           This element in a dictionary entry contains the actual definition. 
        
      
    
     
       
         A non-identified reference to a remote entry in this dictionary, to be used when this entry need not be identified to allow external references to this specific entry. The remote entry referenced will usually be in a dictionary in the same XML document. This element will usually be used in dictionaries that are inside of another dictionary. 
      
    
  
  
   
  
   
     
       An entry in a dictionary of definitions that contains a GML object which references a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
    
     
       
    
  
  
   
  
   
     
       A proxy entry in a dictionary of definitions. An element of this type contains a reference to a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. 
    
     
       
         
           
             
               A reference to a remote entry in this dictionary, used when this dictionary entry is identified to allow external references to this specific entry. The remote entry referenced can be in a dictionary in the same or different XML document. 
            
          
        
      
    
  
  
   
  




crsSchemas/base/geometryBasic0d1d.xsd
 
   
     geometryBasic0d1d.xsd
     
     			Copyright (c) 2001-2002 OGC, All Rights Reserved. 		    	
    
  
  
   
     
       This includes not only measures.xsd, but also units.xsd, gmlBase.xsd and basicTypes.xsd.
    
  
  
  
  
   
     
       The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
    
  
  
   
     
       All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of _Geometry.
    
     
       
         
           
             This attribute is included for backward compatibility with GML 2 and is deprecated with GML 3. This identifer is superceded by "gml:id" inherited from AbstractGMLType. The attribute "gid" should not be used anymore and may be deleted in future versions of GML without further notice.
          
        
         
           
             In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType (see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the location the URI points to (Note: These "WKCRS"-ids still have to be specified).  If no srsName attribute is given, the CRS must be specified as part of the larger context this geometry element is part of, e.g. a geometric aggregate.
          
        
      
    
  
  
   
     
       A geometric property can either be any geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Note that either the reference or the contained element must be given, but not both or none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
      
    
  
  
   
     
       A container for an array of geometry elements. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
    
     
       
    
  
  
  
   
     
       The "_GeometricPrimitive" element is the abstract head of the substituition group for all (pre- and user-defined) geometric primitives.
    
  
  
   
     
       This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
    
     
       
    
  
  
   
     
       A property that has a geometric primitive as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup. 				
      
    
  
  
  
  
   
  
   
     
       A Point is defined by a single coordinate tuple.
    
     
       
         
           
             
               GML supports two different ways to specify the direct poisiton of a point. 1. The "pos" element is of type DirectPositionType. 2. The "coordinates" element is of type CoordinatesType. The number of direct positions in the coordinates list must be one.
            
             
             
             
               
                 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for backwards compatibility with GML 2.
              
            
          
        
      
    
  
  
   
     
       
         
           
             
          
        
      
       This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for Point.
    
  
  
   
     
       A property that has a point as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup. 				
      
    
  
  
   
  
   
     
       A container for an array of points. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
    
     
       
    
  
  
  
  
   
     
       The "_Curve" element is the abstract head of the substituition group for all (continuous) curve elements.
    
  
  
   
     
       An abstraction of a curve to support the different levels of complexity. The curve can always be viewed as a geometric primitive, i.e. is continuous.
    
     
       
    
  
  
   
     
       
         
           
             
          
        
      
       This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Curve.
    
  
  
   
     
       A property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup. 				
      
    
  
  
   
  
   
     
       A container for an array of curves. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
    
     
       
    
  
  
   
  
   
     
        				A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. It is backwards compatible with the LineString of GML 2, GM_LineString of ISO 19107 is implemented by LineStringSegment. 			
    
     
       
         
           
             
               GML supports two different ways to specify the control points of a line string. 1. A sequence of "pos" (DirectPositionType) or "pointRep" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve, "pointRep" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve (reuse of existing points). 2. The "coordinates" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve only. The number of direct positions in the coordinates list must be at least two.
            
             
               
               
               
                 
                   Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for backwards compatibility with GML 2.
                
              
            
             
          
        
      
    
  
  
  
  
   
  
   
     
       DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the "srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
    
     
       
         
           
             In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType (see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the location the URI points to (Note: These "WKCRS"-ids still have to be specified).  If no srsName attribute is given, the CRS must be specified as part of the larger context this geometry element is part of, e.g. a geometric element like point, curve, etc. It is expected that the attribute will be specified at the direct position level only in rare cases.
          
        
         
           
             The attribute "dimension" is the length of coordinate sequence (the number of entries in the list). This is determined by the coordinate reference system.
          
        
      
    
  
  
   
  
   
     
       A Vector is an ordered set of numbers called coordinates that represent a position in a coordinate reference system (CRS). For some application the components of the position may be adjusted to yield a unit vector.
    
     
       
    
  
  
   
     
       
         
           
             
          
        
      
    
  
  
   
  
  
  
   
  
   
     
       Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions.
    
     
       
         
           
             
               
                 deprecated
                 deprecated with GML version 3.0
              
            
             
             
          
        
      
    
  
  
  
  
  
   
     
       Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "pos" element instead.
    
  
   
     
       Represents a coordinate tuple in one, two, or three dimensions. Deprecated with GML 3.0 and replaced by DirectPositionType.
    
     
       
       
       
    
  
  
   
     
       Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveProperty" instead. This property element either references a line string via the XLink-attributes or contains the line string element.
    
  
  
   
     
       This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use CurvePropertyType instead. A property that has a line string as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
      
    
  
  




crsSchemas/base/geometryBasic2d.xsd
 
   
     geometryBasic2d.xsd
     
			Copyright (c) 2001-2002 OGC, All Rights Reserved.
    
  
   
  
  
  
   
     
       The "_Surface" element is the abstract head of the substituition group for all (continuous) surface elements.
    
  
  
   
     
       
				An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
			
    
     
       
    
  
  
   
     
       
         
           
             
          
        
      
       This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Surface.
    
  
  
   
     
       A property that has a surface as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
				
      
    
  
  
   
  
   
     
       A container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
    
     
       
    
  
  
   
  
   
     
       A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
    
     
       
         
           
           
        
      
    
  
  
  
  
   
     
       The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
    
  
  
   
     
       
				An abstraction of a ring to support surface boundaries of different complexity.
			
    
     
       
    
  
  
   
     
       A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
    
  
   
     
       A boundary of a surface consists of a number of rings. The "interior" rings seperate the surface / surface patch from the area enclosed by the rings.
    
  
   
     
       
				Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "exterior" instead.
			
    
  
   
     
       
				Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "interior" instead.
			
    
  
  
   
     
       
			        Encapsulates a ring to represent the surface boundary property of a surface.
			
    
     
       
    
  
  
   
  
   
     
       A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
    
     
       
         
           
             
               GML supports two different ways to specify the control points of a linear ring.
1. A sequence of "pos" (DirectPositionType) or "pointRep" (PointPropertyType) elements. "pos" elements are control points that are only part of this ring, "pointRep" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this ring (reuse of existing points).
2. The "coordinates" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this ring only. The number of direct positions in the coordinate list must be at least four.
            
             
               
               
            
             
             
               
                 Deprecated with GML version 3.0 and included for backwards compatibility with GML 2. Use "pos" elements instead.
              
            
          
        
      
    
  
  
   
     
       
			        Encapsulates a ring to represent properties in features or geometry collections.
			
    
     
       
    
  
  
  
  
   
     
       Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceProperty" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
    
  
  
   
     
       This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use SurfacePropertyType instead.
A property that has a polygon as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
    
     
       
    
     
       
         This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
      
    
  
  




crsSchemas/base/gmlBase.xsd
 
   
     
       Schematron validation
       
       
       
         
           
            Property element may not carry both a reference to an object and contain an object.
           
            Property element must either carry a reference to an object or contain an object.
        
      
    
     
			GML base schema for GML 3.0 
			Components to support the GML encoding model.  
			
			The abstract Schematron rules can be used by any schema that includes gmlBase.  
    
  
  
   
   
  
  
  
  
  
   
     
       This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.  
    
  
  
  
   
     
       Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
    
  
  
   
     
       All complexContent GML elements are directly or indirectly derived from this abstract supertype 
	to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. 
	Elements in this hierarchy may have an ID and are thus referenceable.  
    
     
       
       
       
         
           Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority. 
        
      
    
     
  
  
  
   
     
       Generic GML element to contain a heterogeneous collection of GML _Objects
    
  
  
   
     
       A non-abstract generic collection type that can be used as a document element for a collection of any GML types - Geometries, Topologies, Features ...

“FeatureCollections” may only contain Features.  “GeometryCollections” may only contain Geometry’s.  “Bags” are less constrained – they must contain objects that are substitutable for gml:_Object.  This may mix several levels, including Features, Definitions, Dictionaries, Geometries etc.  

The content model would ideally be 
   member 0..*
   members 0..1
   member 0..*
for maximum flexibility in building a collection from both homogeneous and distinct components: 
included "member" elements each contain a single Object
an included "members" element contains a set of Objects 

However, this is non-deterministic, thus prohibited by XSD.  


    
     
       
         
           
           
        
      
    
  
  
  
   
     
       Generic GML element to contain a homogeneous array of GML _Objects
    
  
  
   
     
       A non-abstract generic collection type that can be used as a document element for a homogeneous collection of any GML types - Geometries, Topologies, Features ...
    
     
       
         
           
        
      
    
  
  
  
   
     
       Abstract element which acts as the head of a substitution group for packages of MetaData properties.  
    
  
  
   
     
        An abstract base type for complex metadata types.
    
     
  
  
  
   
     
       Concrete element in the _MetaData substitution group, which permits any well-formed XML content.  Intended to act as a container for metadata defined in external schemas, for which it is not possible to add the concrete components to the GML _MetaData substitution group directly. 
    
  
  
   
     
       
         
           
        
      
    
  
  
  
  
  
  
   
     
       This abstract element may act as the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It may be used to assert the model position of "property" elements declared in other GML schemas.  
    
  
  
  
  
  
   
  
   
     
       
         
           
             
          
        
      
       must carry a reference to an object or contain an object but not both
    
  
  
   
  
   
     
         A pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  

Descendents of this type can be restricted in an application schema to 
* allow only specified classes as valid participants in the aggregation
* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    

When used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   

In many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   

If co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a "cached" version of the value(s).    
    
     
       
    
     
  
  
   
  
   
     
         A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.  
 
    
     
     
  
  
  
   
  
   
     
         A base for derived types used to specify complex types containing an array of objects, by unspecified UML association - either composition or aggregation.  An instance of this type contains elements representing Objects.

Ideally this type would be derived by extension of AssociationType.  
However, this leads to a non-deterministic content model, since both the base and the extension have minOccurs="0", and is thus prohibited in XML Schema. 
    
     
       
    
  
  
  
   
     
       Contains or refers to a metadata package that contains metadata properties.  
    
  
  
   
     
        Base type for complex metadata property types.
    
     
       
    
     
     
  
  
  
   
     
       Database handle for the object.  It is of XML type “ID”, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator “#”, and the value of the id attribute.  
    
  
  
   
     
       Reference to an XML Schema fragment that specifies the content model of the property’s value. This is in conformance with the XML Schema Section 4.14 Referencing Schemas from Elsewhere. 
    
  
  
   
     
       Attribute group used to enable property elements to refer to their value remotely. It contains the “simple link” components from xlinks.xsd, with all members “optional”, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance. 
    
     
     
  
  
   
     
       Identifier for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace. 
    
  
  
   
     
       Contains a simple text description of the object, or refers to an external description.  
    
  
  
   
     
       
This type is available wherever there is a need for a "text" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.  
    
     
       
         
      
    
  
  




crsSchemas/base/measures.xsd
 
   
     
     
       measures.xsd
       3.0
       How to encode measures, each with associated unit of measure (uom). 
       Extends the units.xsd and basicTypes.xsd schemas with types for recording measures using specific types of units, especially the measures and units needed for coordinate reference systems and coordinate operations. The specific unit types encoded are length, angle, scale factor, time, area, volume, velocity, and grid length. This schema allows angle values to be recorded as single numbers or in degree-minute-second format. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2002/11/13. 
       Copyright (c) 2001-2002 OpenGIS, All Rights Reserved
       Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on Subclause 4.7 of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations. 
    
  
  
   
  
  
  
   
  
   
     
       Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
    
     
       
    
  
  
   
     
       Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
    
     
       
    
  
  
   
     
       Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks. 
    
     
       
    
  
  
   
     
       Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings. 
    
     
       
    
  
  
   
     
       Value of a spatial area quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an area, such as square metres or square miles. 
    
     
       
    
  
  
   
     
       Value of a spatial volume quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a volume, such as cubic metres or cubic feet. 
    
     
       
    
  
  
   
     
       Value of a velocity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour. 
    
     
       
    
  
  
   
     
       Value of an angle quantity provided in either degree-minute-second format or single value format. 
    
     
       
       
    
  
  
   
  
   
     
       Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians. 
    
     
       
    
  
  
   
  
   
     
       Angle value provided in degree-minute-second or degree-minute format. 
    
     
       
       
         
         
           
           
        
      
    
  
  
   
  
   
     
       Integer number of degrees, plus the angle direction. This element can be used for geographic Latitude and Longitude. For Latitude, the XML attribute direction can take the values "N" or "S", meaning North or South of the equator. For Longitude, direction can take the values "E" or "W", meaning East or West of the prime meridian. This element can also be used for other angles. In that case, the direction can take the values "+" or "-" (of SignType), in the specified rotational direction from a specified reference direction. 
    
     
       
         
           
             
               
                 
                   
                   
                   
                   
                
              
               
                 
              
            
          
        
      
    
  
  
   
     
       Integer number of degrees in a degree-minute-second or degree-minute angular value, without indication of direction. 
    
     
       
    
  
  
   
  
   
     
       Decimal number of arc-minutes in a degree-minute angular value. 
    
     
       
       
    
  
  
   
  
   
     
       Integer number of arc-minutes in a degree-minute-second angular value. 
    
     
       
    
  
  
   
  
   
     
       Number of arc-seconds in a degree-minute-second angular value. 
    
     
       
       
    
  
  




crsSchemas/base/referenceSystems.xsd
 
	 
		 
		 
			 referenceSystems.xsd
			 3.1.0
			 How to encode reference system definitions. 
			 Builds on several other parts of GML 3 to encode the data needed to define reference systems. Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
			 Copyright (c) 2002-2003 Open GIS Consortium, All Rights Reserved.
			 This schema encodes the Reference System (RS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. The SC_CRS class is also encoded here, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. The RS_SpatialReferenceSystemUsingGeographicIdentifier class is not encoded, since it is not applicable to coordinate positions. The CI_Citation class is not directly encoded, since such information can be included as metaDataProperty elements which are optionally allowed. A modified version of the EX_Extent (DataType) class from ISO 19115 is currently encoded here, using GML 3 schema types. (A more extensive version of the EX_Extent package might be XML encoded in the future, probably in a separate extent.xsd schema.) 
		
	
	
	 
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 Comments on or information about this reference system, including source information. 
						
					
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified. 
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset. 
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system. 
		
	
	
	 
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
		 
			 The primary name of a reference system object. The string in the CodeType contains the object identification name, and the codeSpace attribute is not included. 
		
		 
			 
				 
			
		
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases. 
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects. 
				
			
			 
			 
				 
					 Remarks about this code or alias. 
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format. 
		
	
	
	 
		 
			 Information about this object or code. Contains text or refers to external text.  
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid. 
		
	
	
	 
		 
			 Area or region in which this CRS object is valid. 
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains. 
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object. 
				
			
			 
				 
					 Geographic domain of this reference system object. 
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object. 
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object. 
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object. 
				
			
			 
				 
					 Unordered list of time periods whose union describes the spatial domain of this object. 
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object. 
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object. 
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object. 
		
	
	
	 
		 
			 A time period defining the temporal domain of this object. 
		
	
	




crsSchemas/base/temporal.xsd
 
   
     
     
    The temporal schema for GML 3.0 provides constructs for handling time-varying spatial 
    data. This schema reflects a partial yet consistent implementation of the model described 
    in ISO 19108 (topological complexes and feature succession are not included). 
    Copyright (c) 2002 OGC, All Rights Reserved.    
    
  
  
   
  
   
     
       
      This abstract element acts as the head of the substitution group for temporal primitives and complexes.  
      
    
  
  
   
     
       
       A temporal object must be associated with a temporal reference system via URI. 
       The Gregorian calendar with UTC is the default reference system, following ISO 
       8601. Other reference systems in common use include the GPS calendar and the 
       Julian calendar.
      
    
     
       
         
      
    
  
  
   
     
       
      This abstract element acts as the head of the substitution group for temporal primitives.  
      
    
  
  
   
     
       
      The abstract supertype for temporal and topological primitives.
      
    
     
       
    
  
  
   
  
   
     
       
         
           
        
      
    
  
  
   
   
  
   
     
       
       An association with a gml:TimeInstant element at the end.
      
    
     
       
    
     
  
  
   
  
   
     
       
         
           
           
           
        
      
    
  
  
   
     
       
      This abstract element serves as the head of the substitution group for elements used 
      to indicate temporal length or distance (duration, interval). 
     
    
  
  
   
     
       
      Base type for describing temporal length or distance. The value space is further 
      constrained by subtypes that conform to the ISO 8601 or ISO 11404 standards.
      
    
     
  
  
   
     
       
      This element is an instance of the primitive xsd:duration simple type to 
      enable use of the ISO 8601 syntax for temporal length (e.g. P5DT4H30M). 
      It is a valid subtype of TimeDurationType according to section 3.14.6, 
      rule 2.2.4 in XML Schema, Part 1.
      
    
  
  
   
     
       
      Here we have collapsed the hierarchy of subtypes for temporal position in 19108 
      by defining a union of simple types for indicating temporal position relative to a 
      specific reference system. 
      Date and time may be indicated with varying degrees of precision:
      year, year-month, date, or dateTime (all ISO 8601 format). Note 
      that the dateTime type does not allow right-truncation (i.e. omitting 
      seconds). An ordinal era may be referenced via URI, and a decimal value
      can be used to indicate the distance from the scale origin (e.g. UNIX time,  
      GPS calendar).
      
    
     
  
  
   
     
       Direct representation of a temporal position. 
    
  
  
   
     
       
      Indeterminate time values are also allowed, as described in ISO 19108. The indeterminatePosition 
      attribute can be used alone or it can qualify a specific value for temporal position (e.g. before 
      2002-12, after 1019624400). For time values that identify position within a calendar, the 
      calendarEraName attribute provides the name of the calendar era to which the date is 
      referenced (e.g. the Meiji era of the Japanese calendar).
      
    
     
       
         
         
         
      
    
  
  
   
     
       
        This enumerated data type specifies values for indeterminate positions.
      
    
     
       
       
       
       
    
  
  
   
     
       
			This element is a valid subtype of TimeDurationType according to section 3.14.6, 
			rule 2.2.4 in XML Schema, Part 1.
			
    
  
  
   
     
       
      This type extends the built-in xsd:decimal simple type to allow floating-point 
      values for temporal length. According to  the ISO 11404 model you have to use 
      positiveInteger together with appropriate values for radix and factor. The 
      resolution of the time interval is to one radix ^(-factor) of the specified 
      time unit (e.g. unit="second", radix="10", factor="3" specifices a resolution 
      of milliseconds). It is a subtype of TimeDurationType.
      
    
     
       
         
         
         
      
    
  
  
   
     
       
        This enumerated data type indicates standard units for measuring time.
      
    
     
       
       
       
       
       
       
    
  
  
   
   
  
   
     
       
        A timestamp property associates an element with a temporal primitive.
      
    
     
       
    
     
  
  
   
  
   
     
       
        A value in the time domain is measured relative to a temporal reference system. Common 
        types of reference systems include calendars, ordinal temporal reference systems, and 
        temporal coordinate systems (time elapsed since some epoch, e.g. UNIX time).
      
    
     
       
         
           
        
      
    
  
  
   
  
   
     
       
      A temporal coordinate system is based on a continuous interval scale defined in terms of a single time interval.
      
    
     
       
         
           
           
           
        
      
    
  
  
   
  
   
     
       
      In an ordinal reference system the order of events in time can be well 
      established, but the magnitude of the intervals between them can not be 
      accurately determined (e.g. a stratigraphic sequence).
      
    
     
       
         
           
        
      
    
  
  
   
     
       
    
  
  
   
  
   
     
       
      Ordinal temporal reference systems are often hierarchically structured 
      such that an ordinal era at a given level of the hierarchy includes a 
      sequence of shorter, coterminous ordinal eras.
      
    
     
       
         
           
           
           
        
      
    
  
  




crsSchemas/base/units.xsd
 
   
     
     
       units.xsd
       3.0
       How to encode units of measure (or uom) for numerical values. 
       Builds on gmlBase.xsd to encode units of measure (or uom), including definitions of units of measure and dictionaries of such definitions. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2002/11/13. 
       Copyright (c) 2001-2002 OpenGIS, All Rights Reserved.
       Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on most of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations. 
    
  
  
   
  
   
  
   
     
       Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType. 
    
     
     
       
         Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference. 
      
    
  
  
   
  
   
     
       Definition of a unit of measure (or uom). The definition includes a quantityType property, which indicates the phenomenon to which the units apply, and a catalogSymbol, which gives the short symbol used for this unit. This element is used when the relationship of this unit to other units or units systems is unknown.
    
     
       
         
           
           
        
      
    
  
  
   
  
   
     
       Definition of a unit of measure which is a base unit from the system of units.  A base unit cannot be derived by combination of other base units within this system.  Sometimes known as "fundamental unit".  
    
     
       
         
           
        
      
    
  
  
   
  
   
     
       Definition of a unit of measure which is defined through algebraic combination of more primitive units, which are usually base units from a particular system of units. Derived units based directly on base units are usually preferred for quantities other than the base units or fundamental quantities within a system.  If a derived unit is not the preferred unit, the ConventionalUnit element should be used instead.  
    
     
       
         
           
        
      
    
  
  
   
  
   
     
       Definition of a unit of measure which is related to a preferred unit for this quantity type through a conversion formula.  A method for deriving this unit by algebraic combination of more primitive units, may also be provided.  
    
     
       
         
           
             
             
          
           
        
      
    
  
  
   
     
       Informal description of the phenomenon or type of quantity that is measured or observed. For example, "length", "angle", "time", "pressure", or "temperature". When the quantity is the result of an observation or measurement, this term is known as Observable Type or Measurand. 
    
  
  
   
     
       For global understanding of a unit of measure, it is often possible to reference an item in a catalog of units, using a symbol in that catalog. The "codeSpace" attribute in "CodeType" identifies a namespace for the catalog symbol value, and might reference the catalog. The "string" value in "CodeType" contains the value of a symbol that is unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units. For example, the symbol "cm" might indicate that it is the "m" symbol combined with the "c" prefix. 
    
  
  
   
  
   
     
       Definition of the relationship of a derived unit of measure to the primitive units to which that unit is related. Contains a set of one or more UnitTerms which are combined as a product, each of which references a unit of measure defined elsewhere, and has an exponent. 
    
     
       
    
  
  
   
  
   
     
       Definition of one unit term for a derived unit of measure. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent can be positive or negative, but not zero. 
    
     
       
         
      
    
  
  
   
     
       This element is included when this unit has an accurate conversion to the preferred unit for this quantity type. 
    
  
  
   
     
       This element is included when the correct definition of this unit is unknown, but this unit has a rough or inaccurate conversion to the preferred unit for this quantity type. 
    
  
  
   
     
       Relation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute "uom" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: "factor" or "formula". 
    
     
       
         
           
           
        
      
    
  
  
   
     
       Specification of the scale factor by which a value using this unit of measure can be multiplied to obtain the corresponding value using the preferred unit of measure. 
    
  
  
   
  
   
     
       Paremeters of a simple formula by which a value using this unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type "double". These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the preferred unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters. 
    
     
       
       
       
       
    
  
  




crsSchemas/xlink/xlinks.xsd
 
	 
		 xlinks.xsd v3.0b2 2001-07
		 
			GML 3.0 candidate xlinks schema. Copyright (c) 2001 OGC, All Rights Reserved.
		
	
	
	
	 
	
	 
	 
	 
	
	 
		 
			 
        The 'show' attribute is used to communicate the desired presentation 
        of the ending resource on traversal from the starting resource; it's 
        value should be treated as follows: 
        new - load ending resource in a new window, frame, pane, or other 
              presentation context
        replace - load the resource in the same window, frame, pane, or 
                  other presentation context
        embed - load ending resource in place of the presentation of the 
                starting resource
        other - behavior is unconstrained; examine other markup in the 
                link for hints 
        none - behavior is unconstrained 
      
		
		 
			 
				 
				 
				 
				 
				 
			
		
	
	 
		 
			 
        The 'actuate' attribute is used to communicate the desired timing 
        of traversal from the starting resource to the ending resource; 
        it's value should be treated as follows:
        onLoad - traverse to the ending resource immediately on loading 
                 the starting resource 
        onRequest - traverse from the starting resource to the ending 
                    resource only on a post-loading event triggered for 
                    this purpose 
        other - behavior is unconstrained; examine other markup in link 
                for hints 
        none - behavior is unconstrained
      
		
		 
			 
				 
				 
				 
				 
			
		
	
	
	 
	 
	 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
	
	 
		 
	
	 
		 
	




transverse mercator application/transverseMercator.xsd
 
	 
		 
			 transverseMercator.xsd
			 0.2
			 How to encode definition of specific Transverse Mercator conversion. 
			 Example Application Schema to encode the data needed to define a specific Transverse Mercator type of map projection, which is a coordinate conversion. Builds on coordinateOperations.xsd, and follows same GML 3 patterns and ISO 19118 encoding. Written in the "ex" namespace. Primary editor: Arliss Whiteside. Last updated 2003/09/19. 
			 Guidance Note Number 7 "Coordinate Conversions and Transformations including Formulas" (available through http://www.epsg.org/), especially Section 1.4.6 "Transverse Mercator". 
			 Copyright (c) 2002-2003 OpenGIS, All Rights Reserved.
			 This schema encodes a draft Transverse Mercator package that builds on the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That draft package defines restricted subtypes of the CC_Conversion and CC_ParameterValue classes as needed for the Transverse Mercator map projection conversion. 
		
	
	
	 
	
	 
	
	 
		 
			 Specific Transverse Mercator map projection. Uses the AbstractGeneralConversionType with restricted values for included elements, including elements in the coordinateOperationID element with the IdentifierType. If appropriate, the "codeSpace" element should have the string value "EPSG", and the "code" element should then have the appropriate EPSG code value. The other elements in the IdentifierType can be omitted. The "coordinateOperationName" element shall have a string value that names a specific Transverse Mercator map projection. The "_PositionalAccuracy" and "metaDataProperty" elements can be omitted. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a Transverse Mercator Conversion, either referencing or containing the definition of that Conversion. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
		 
			 Value of the Latitude of the natural origin parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the Longitude of the natural origin (or central meridian) parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the scale factor at the natural origin (on the central meridian) parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the false Easting coordinate of the origin parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the false Northing coordinate of the origin parameter for a specific coordinate conversion. 
		
	
	
	
	 
		 
			 Angle measure operation parameter value. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Scale measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Length measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	 
		 
			 Angle value of an operation parameter, recorded as a single number, with a unit of measure suitable for an angle, such as degrees or radians. 
		
	
	
	 
		 
			 Scale factor value of an operation parameter, with a unit of measure suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length value of an operation parameter, with a unit of measure suitable for a length, such as metres or feet. 
		
	
	




transverse mercator application/transverseMercatorSpecific#1.xml
 
	
	
	
	 Transverse Mercator
	 
		 19916
		 6.0
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
	
	 
		 
			 Transverse Mercator
			 
				 9807
				 6.0
			
			 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
			 2
			 2
			 
				 
					 Latitude of natural origin
					 
						 8801
						 6.0
					
				
			
			 
				 
					 Longitude of natural origin
					 
						 8802
						 6.0
					
				
			
			 
				 
					 Scale factor at natural origin
					 
						 8805
						 6.0
					
				
			
			 
				 
					 False Easting
					 
						 8806
						 6.0
					
				
			
			 
				 
					 False Northing
					 
						 8807
						 6.0
					
				
			
		
	
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




transverse mercator application/transverseMercatorSpecific#2.xml
 
	
	
	
	 Transverse Mercator
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
	
	 
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




UIGM1 application/typedValues.xsd
 
	 
		 
			 typedValues.xsd
			 0.1.0
			 How to encode operation parameter values with specific types, including length, angle, and scale measures.. 
			 Example Application Schema to encode operation parameter values with specific types. Builds on measures.xsd, and follows same GML 3 patterns. Written in the "ex" namespace. Primary editor: Arliss Whiteside. Last updated 2003/09/19. 
			 Copyright (c) 2003 OpenGIS, All Rights Reserved.
		
	
	
	 
	
	 
		 
			 Alphanumeric text operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Integer operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Length measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Scale measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Angle measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Angle or Length measure operation parameter value, sometimes used for horizontal coordinate parameters. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Time measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Grid Length measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Velocity measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more integer operation parameter values. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more Length operation parameter values.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more Scale Factor operation parameter values. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more Angle operation parameter values. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more Time operation parameter values. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more Grid Length operation parameter values. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Ordered sequence of two or more Velocity operation parameter values. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	 
		 
			 Length value of an operation parameter, with a unit of measure suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 Scale factor value of an operation parameter, with a unit of measure suitable for a scale factor, such as one, percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Angle value of an operation parameter, recorded as a single number, with a unit of measure suitable for an angle, such as degrees or radians. 
		
	
	
	 
		 
			 Time value of an operation parameter, recorded as a single number, with a unit of measure suitable for a time value, such as seconds or days. 
		
	
	
	 
		 
			 Grid length value of an operation parameter, with a unit of measure suitable for length along the axes of a grid, such as pixel spacings or grid spacings. Used when the grid spacing does not have any associated physical units, or does not have a constant physical spacing. 
		
	
	
	 
		 
			 Velocity value of an operation parameter, with a unit of measure suitable for a velocity, such as metres per second or miles per hour. 
		
	
	
	 
		 
			 Ordered sequence of two or more length values of an operation parameter, with a unit of measure suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 Ordered sequence of two or more scale factor values of an operation parameter, with a unit of measure suitable for a scale factor, such as one, percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Ordered sequence of two or more angle values of an operation parameter, each recorded as a single number, with a unit of measure suitable for an angle, such as degrees or radians. 
		
	
	
	 
		 
			 Ordered sequence of two or more time values of an operation parameter, each recorded as a single number, with a unit of measure suitable for a time value, such as seconds or days. 
		
	
	
	 
		 
			 Ordered sequence of two or more grid length values of an operation parameter, with a unit of measure suitable for length along the axes of a grid, such as pixel spacings or grid spacings. Used when the grid spacing does not have any associated physical units, or does not have a constant physical spacing. 
		
	
	
	 
		 
			 Ordered sequence of two or more velocity values of an operation parameter, with a unit of measure suitable for a velocity, such as metres per second or miles per hour. 
		
	
	




UIGM1 application/UIGM1example.xml
 
	
	 Aaaa Aaaa
	 1
	 
	 
	 
	 
		 AAAAAA
		 
	
	 
		 1
		 
	
	 
		 9.999 9.999 9.999 9.999 9.999 9.999 9.999 9.999
		 
	
	 
		 1 1
		 
	
	 
		 
			 1 1
			 
		
		 
			 
				 99.999
				 
			
			 
				 9.999
				 
			
			 
				 99.999
				 
			
			 
				 9.999
				 
			
			 
				 9.999
				 
			
			 
				 9.999
				 
			
			 
				 9999.99
				 
			
			 
				 9999.99
				 
			
			 
				 999.99
				 
			
			 
				 999.99
				 
			
			 
		
		 
			 
				 1 1 1
				 
			
			 
				 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999
				 
			
			 
				 1 1 1
				 
			
			 
				 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999
				 
			
			 
				 1 1 1
				 
			
			 
				 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999
				 
			
			 
				 1 1 1
				 
			
			 
				 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999 0.999999
				 
			
			 
		
		 
	
	 
		 
			 999
			 
		
		 
			 99.99
			 
		
		 
			 
				 0 1000
				 
			
			 
				 9.99
				 
			
			 
		
		 
			 
				 1000 10000
				 
			
			 
				 9.99
				 
			
			 
		
		 
	




UIGM1 application/UIGM1transformation.xsd
 
	 
		 
			 UIGM1transformation.xsd
			 0.1.0
			 How to encode definition of Universal Image Geometry Model for one image. 
			 Example Application Schema to encode ground-to-image coordinate transformation data for a specific image, using the Universal Image Geometry Model type of coordinate transformation as described in Section 6.5 of OGC Abstract Specification Topic 7 : The Earth Imagery Case (OGC document 99-107). This example does not encode data for the image correction tables, stereoscopic position error estimates, and most information not used by the image geometry model. Builds on coordinateOperations.xsd and typedValues.xsd, and follows same GML 3 patterns and ISO 19118 encoding. Written in the "ex" namespace. Primary editor: Arliss Whiteside. Last updated 2003/09/19. 
			 Copyright (c) 2003 OpenGIS, All Rights Reserved.
			 This schema encodes a draft UIGM package that builds on the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That draft package defines restricted subtypes of the CC_Transformation,  CC_ParameterValue, and CC_ParameterValueGroup classes as needed for the UIGM transformation. 
		
	
	
	 
	 
	
	 
	
	 
		 
			 Specific Universal Image Geometry Model type of coordinate transformation. Extends the AbstractGeneralTransformationType with restricted values for included elements, including elements in the coordinateOperationID element with the IdentifierType. If appropriate, the "codeSpace" element could have the string value "UIGM1", and the "code" element should then identify the specific image. The other elements in the IdentifierType can be omitted. The "coordinateOperationName" element shall have a string value that names a UIGM1 Transformation for a specific image and specific ground coordinate reference system. The "_PositionalAccuracy" and "metaDataProperty" elements can be omitted. 
		
		 
			 
				 
					 
						 
							 Association to the (UIGM1) operation method used by this transformation operation. 
						
					
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a UIGM1 Transformation, either referencing or containing the definition of that Transformation. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
		 
			 Alphanumeric text identifying one specific original image. 
		
	
	
	 
		 
			 Increasing numbers of the Image Support Data Version integer are used to identify versions with increasing quality of the image geometry model data for the same original image. This Version shall be “0” before the original image support data is adjusted. The minimum value is 0, and the maximum value is 9. 
		
	
	
	 
		 
			 The values of the coefficients of the approximate linear sensor model, which is used to find the proper image geometry model section for a ground coordinate position. The parameter value shall contain an ordered list of eight double precision floating point numbers, four for the section number in the image row axis followed by four for the image column axis. These coefficients shall be recorded with Scale units, but various implied units are used by the various coefficients. 
		
	
	
	 
		 
			 The numbers of rows and columns of sections into which the image geometry model is divided for this image. The parameter value shall contain an ordered list of two small integers, the first specifying the number of rows and the second specifying the number of columns. For each integer, the minimum value is 1, and the maximum value is 8. 
		
	
	
	
	 
	
	 
		 
			 Group of parameters for one section of the universal image geometry model. There shall be from 1 up to 64 model sections for one image. If the model for this image is not divided into sections, there shall be only one repetition of this group of parameters. 
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The row and column numbers of this section of the universal image geometry model for this image. The parameter value contains an ordered list of two small integers, the first specifying the row number and the second specifying the column number. For each integer, the minimum value is 1, and the maximum value is 8.
		
	
	
	
	 
	
	 
		 
			 Group of ground position normalization parameters and image position un-normalization parameters, for this section of the universal image geometry model. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 East position offset for normalizing ground coordinates. The units shall be either angle or length units. 
		
	
	
	 
		 
			 North position offset for normalizing ground coordinates. The units shall be the same as for the East Offset, either angle or length units. 
		
	
	
	 
		 
			 Vertical position offset for normalizing ground coordinates. The units shall be length units. 
		
	
	
	 
		 
			 East scale factor for normalizing ground coordinates. The units shall be the same as for the East Offset, either angle or length units. 
		
	
	
	 
		 
			 North scale factor for normalizing ground coordinates. The units shall be the same as for the North Offset, either angle or length units. 
		
	
	
	 
		 
			 Vertical scale factor for normalizing ground coordinates. The units shall be the same as for the Vertical Offset, and shall be length units. 
		
	
	
	 
		 
			 Image row position offset for un-normalizing image coordinates. The units shall be one grid spacing. 
		
	
	
	 
		 
			 Image column position offset for un-normalizing image coordinates. The units shall be one grid spacing. 
		
	
	
	 
		 
			 Image row scale factors for un-normalizing image coordinates. The units shall be one grid spacing. 
		
	
	
	 
		 
			 Image column scale factors for un-normalizing image coordinates. The units shall be one grid spacing. 
		
	
	
	
	 
	
	 
		 
			 Numerator and denominator polynomial parameters for this section of the universal image geometry model. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 Maximum powers of the three ground coordinates in the numerator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
		
	
	
	 
		 
			 Polynomial coefficients in the numerator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
		
	
	
	 
		 
			 Maximum powers of the three ground coordinates in the denominator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
		
	
	
	 
		 
			 Polynomial coefficients in the denominator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
		
	
	
	 
		 
			 Maximum powers of the three ground coordinates in the numerator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
		
	
	
	 
		 
			 Polynomial coefficients in the numerator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
		
	
	
	 
		 
			 Maximum powers of the three ground coordinates in the denominator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
		
	
	
	 
		 
			 Polynomial coefficients in the denominator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
		
	
	
	
	 
	
	 
		 
			 Group of parameters for horizontal error estimates when a position in this one image is used to determine the corresponding ground coordinates, using this universal image geometry model for this image. 
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The value of the ground elevation or height used to estimate the recorded horizontal error estimate when a position in this one image is used to determine the corresponding ground coordinates. This reference height is in the Vertical coordinate system axis of the ground CRS used by the universal image geometry model for this image. 
		
	
	
	 
		 
			 The value of the horizontal absolute error estimate when a position in this one (monoscopic) image is used to determine the corresponding ground coordinates. This error estimate shall be recorded as the Circular Error (CE) with 90% confidence, always in one meter units. The minimum value is 0.0. 
		
	
	
	
	 
	
	 
		 
			 Relative error estimate for one distance bin between two points. These error estimates are for use when multiple positions in one (monoscopic) image are used to determine the corresponding ground coordinates. 
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The minimum and maximum ground distances between two points for this distance bin recorded for horizontal relative error estimates. The parameter value shall contain an ordered list of two Length measures, always in one meter units. The first value specifies the bin minimum distance, and the second value specifies the bin maximum distance. The minimum values are 0.0. 
		
	
	
	 
		 
			 The value of the horizontal relative error estimate between two points for this distance bin recorded for horizontal relative error estimates. These error estimates are for use when multiple positions in one (monoscopic) image are used to determine the corresponding ground coordinates. The relative error estimate shall be recorded as the Circular Error (CE) with 90% confidence, always in one meter units. The minimum value is 0.0. 
		
	
	




03-010r9.pdf


 


File name: 03-010r9.doc 
 


Open GIS Consortium Inc. 
Date: 2003-10-16 


Reference number of this OpenGIS® project document: OGC 03-010r9 


Version: 2.1.0 


Category: OpenGIS® Recommendation Paper 


Editor: Arliss Whiteside 


Recommended XML encoding of  
coordinate reference system definitions 


Copyright notice 


This OGC document is copyright-protected by OGC. While the reproduction of drafts in any 
form for use by participants in the OGC standards development process is permitted 
without prior permission from OGC, neither this document nor any extract from it may be 
reproduced, stored or transmitted in any form for any other purpose without prior written 
permission from OGC. 


Warning 


This document is not an OGC Standard. It is distributed for review and comment. It is 
subject to change without notice and may not be referred to as an OGC Standard. 


Recipients of this document are invited to submit, with their comments, notification of any 
relevant patent rights of which they are aware and to provide supporting documentation. 


Document type:     OpenGIS® Publicly Available Standard 
Document subtype:    Recommendation Paper 
Document stage:    Approved new version 
Document language:  English 







OGC 03-010r9 


ii © OGC 2003 – All rights reserved
 


Contents 


i. Preface.....................................................................................................................v 


ii. Contributors ......................................................................................................... vi 


iii. Changes to the OpenGIS Abstract Specification........................................... vii 


iv. Future work......................................................................................................... vii 


v. Background ......................................................................................................... vii 


Foreword........................................................................................................................... ix 


Introduction........................................................................................................................x 


1 Scope........................................................................................................................1 


2 Conformance ..........................................................................................................2 


3 Normative references.............................................................................................2 


4 Terms and definitions ............................................................................................3 


5 Conventions ............................................................................................................4 
5.1 Symbols (and abbreviated terms)...................................................................4 
5.2 UML Notation ..................................................................................................5 
5.3 Document terms and definitions.....................................................................6 


6 XML encoding overview........................................................................................6 
6.1 Introduction......................................................................................................6 
6.2 Encoding structure...........................................................................................7 
6.3 Application schemas ........................................................................................9 
6.4 Profiles ............................................................................................................10 
6.5 Namespace and version .................................................................................10 


7 XML encoding......................................................................................................11 


8 Supporting information.......................................................................................12 


Annex A (normative)   Conformance ..............................................................................13 
A.1 Conformance requirements ..........................................................................13 
A.2 Abstract test suite...........................................................................................14 
A.3 Rules for application schemas.......................................................................16 
A.3.1 Introduction..............................................................................................16 
A.3.2 General rules ............................................................................................16 
A.3.4 Import needed schemas ...........................................................................17 
A.3.5 GML objects and properties ...................................................................17 
A.3.6 Global and local names............................................................................18 
A.4 UML models for application schemas..........................................................18 







OGC 03-010r9 


© OGC 2003 – All rights reserved iii
 


Annex B (informative)  Expected uses of CRS definition data .....................................19 
B.1 Introduction....................................................................................................19 
B.2 Multiple uses of definition data ....................................................................19 
B.3 Alternative ways to transfer definition data................................................20 
B.4 Use to transfer coordinate reference system definition ..............................20 
B.4.1 Current CRS transfer by low-level CT interface..................................21 
B.4.2 Current CRS transfer by ICT and high-level CT interfaces ...............22 
B.5 Use to transfer coordinate transformation (CT) definition .......................22 
B.5.1 Current CT transfer by low-level CT Interface....................................22 
B.5.2 Current CT transfer by ICT and high-level CT interfaces..................24 
B.6 Use to transfer dataset lineage or history ....................................................24 
Annex C (normative)  XML schemas ..............................................................................25 
C.1 General............................................................................................................25 
C.2 XML schema for reference systems encoding .............................................25 
C.3 XML schema for coordinate reference systems encoding..........................31 
C.4 XML schema for datums encoding ..............................................................42 
C.5 XML schema for coordinate systems encoding...........................................54 
C.6 XML schema for coordinate operations encoding......................................65 
C.7 XML schema for data quality encoding.......................................................86 
Annex D (informative)  Standard contents of code lists ................................................86 
D.1 Introduction....................................................................................................90 
D.2 XML schema for code lists ............................................................................90 
D.3 Standard contents of derivedCRSType .......................................................92 
D.4 Standard contents of pixelInCell ..................................................................93 
D.5 Standard contents of verticalDatumType....................................................94 
Annex E (informative)  XML document examples ........................................................96 
E.1 Introduction....................................................................................................96 
E.2 Example XML for geographic 2D coordinate reference system ...............96 
E.3 Example XML for compound coordinate reference system ....................100 
E.4 Simple example XML for compound coordinate reference system ........106 
E.5 Example XML for Transverse Mercator conversion ...............................106 
E.6 Example XML for operation method.........................................................109 
E.7 Example XML for CRS dictionary ............................................................110 
E.8 Example XML for units dictionary............................................................116 
E.9 Referencing a coordinate reference system ...............................................117 
E.10 Example XML for image CRS....................................................................117 
Annex F (informative)  Application schema examples ................................................119 
F.1 Introduction..................................................................................................119 
F.2 Extended operation method definition.......................................................119 
F.2.1 Introduction............................................................................................119 
F.2.2 UML package .........................................................................................119 
F.2.3 Application schema................................................................................120 
F.2.4 Standard contents of parameterType ..................................................122 
F.2.5 Example XML document ......................................................................126 







OGC 03-010r9 


iv © OGC 2003 – All rights reserved
 


F.3 Transverse Mercator conversion................................................................128 
F.3.1 Introduction............................................................................................128 
F.3.2 UML package .........................................................................................128 
F.3.3 Application schema................................................................................131 
F.3.4 Example XML documents.....................................................................135 
F.4 Universal image geometry model transformation ....................................138 
F.4.1 Introduction............................................................................................138 
F.4.2 UML package .........................................................................................138 
F.4.3 Application schemas ..............................................................................144 
F.4.4 Example XML documents.....................................................................160 
Annex G (informative)  UML to XML schemas conversion process..........................173 
G.1 General..........................................................................................................173 
G.2 Rules for packages .......................................................................................173 
G.3 Rules for classes............................................................................................176 
G.4 Rules for attributes ......................................................................................197 
G.5 Rules for associations...................................................................................216 
G.6 Rules for multiplicities.................................................................................219 
G.7 Other rules....................................................................................................220 
Annex H (informative)  Coordinate operation methods..............................................222 
H.1 Introduction..................................................................................................222 
H.2 EPSG defined transformation methods .....................................................222 
H.3. Other operation methods ............................................................................223 
H.3.1 Introduction............................................................................................223 
H.3.2 Polar / Cartesian (2D) conversion ........................................................223 
H.3.3 Spherical / Cartesian (3D) conversion..................................................223 
H.3.4 Cylindrical / Cartesian conversion.......................................................223 
H.4 Image coordinate transformation methods ...............................................224 
H.4.1 Introduction............................................................................................224 
H.4.2 Ground-to-image transformations .......................................................224 
H.4.3 Single-image-to-ground transformations.............................................224 
H.4.4 Elevation coverage with single-image-to-ground transformation.....224 
H.4.5 Elevation coverage for 2D to 3D coordinate transformation.............225 
H.4.6 Elevation coverage with single ground-to-image transformation .....225 
Annex I (informative)  Schema flexibility .....................................................................226 
I.1 Introduction..................................................................................................226 
I.2 Application Schema flexibility ....................................................................226 
I.3 Other flexibility ............................................................................................227 


Bibliography ...................................................................................................................229 
  







OGC 03-010r9 


© OGC 2003 – All rights reserved v
 


i. Preface 


This OpenGIS® Recommendation Paper specifies basic XML encoding of data defining 
coordinate reference systems and coordinate operations. This encoding is expected to be 
adapted and used by multiple OGC Implementation Specifications, by the separate 
specification of Application Schemas. This document is a Recommendation Paper 
because the specified encoding is more general than an OpenGIS Implementation 
Specification and more specific than the OpenGIS Abstract Specification. 


NOTE 1 This document does not specify all the things needed to ensure interoperability between 
different implementations of software using these CRS Schemas. Some of the additional things that should 
be specified to ensure interoperability are listed in Clause iv: Future work. These things may be specified in 
a separate OGC specification, or perhaps added in a revised version of this document. The CRS WG 
intends to do this work as soon as practical. A draft of such a document in posted as OGC pending 
document 03-056. 


This Recommendation Paper replaces OpenGIS Recommendation Paper 01-014r5, titled 
"Recommended Definition Data for Coordinate Reference Systems and Coordinate 
Transformations". The key changes in this revised Recommendation Paper are: 


a) Use XML schemas to specify the XML encoding, instead of using XML DTDs. 


b) Derive the recommended XML schemas by encoding the UML model in OGC 
Abstract Specification Topic 2 "Spatial referencing by coordinates". 


c) Derive the XML schemas by adapting the XML encoding rules described in 
Subclause A.5 of the N1316 draft of ISO 19118 "Geographic information - 
Encoding". 


NOTE 2 ISO 19118 is supplemented by XML Schema documents posted on David Skogan’s web page 
on ISO 19118 encoding: http://www.ifi.uio.no/~davids/encoding. 


d) Build upon central parts of the GML 3.0 XML schemas, using some GML 3.0 
schema documents and most GML 3 encoding patterns. 


NOTE 3 Many of the GML 3 schema patterns are described in Subclauses 6.3, 7.1, 7.2, 8.1 through 8.3, 
and 8.6 of the GML 3.00 Implementation Specification. 


Many key contents of this document are also provided in the attached set of files, in the 
file 03-010r9a.zip. These files include the six XML Schema documents (.xsd files) 
specifying the recommended XML encoding of coordinate reference system (CRS) and 
coordinate operation definition data. These six files are named referenceSystems.xsd, 
coordinateReferenceSystems.xsd, datums.xsd, coordinateSystems.xsd, 
coordinateOperations.xsd, and dataQuality.xsd. The attached files also include: 


a) Current versions of the nine XML Schema documents from GML 3.0 that are used by 
these CRS schemas, and are needed to validate these CRS Schemas. 


b) The example XML documents and corresponding XML Schema for Annex D 
"Standard contents of code lists". 







OGC 03-010r9 


vi © OGC 2003 – All rights reserved
 


c) The example XML documents for Annex E "XML document examples". 


d) The example Application Schemas and XML documents for Annex F "Example 
application schemas". 


This version of this document is the accepted new version of the previously accepted 
OGC Recommendation Paper 03-019r7.  


ii. Contributors 


The persons who contributed to this document included: 


Name: Arliss Whiteside  


Address: BAE SYSTEMS Mission Solutions 
10920 Technology Place 
San Diego, CA 92127-1874 


Phone: 858-592-1608 


Email: Arliss.Whiteside@baesystems.com 


Name: Dave Case 


Address: MITRE Corporation 
[to be supplied] 


Phone: 703-883-6417 


Email: dwc@mitre.org 


Name: John Bobbitt 


Address: Petrotechnical Open Software Corporation 
10777 Westheimer, Suite 275  
Houston, TX 77042 


Phone: 713-267-5174 


Email: bobbitt@posc.org 







OGC 03-010r9 


© OGC 2003 – All rights reserved vii
 


Name: Milan Trninic 


Address: Galdos Systems, Inc. 
200 – 1155 W Pender Street 
Vancouver, B.C 
Canada V6E2-P4 


Phone: 604-484-2764 


Email: mtrninic@galdosinc.com 


iii. Changes to the OpenGIS Abstract Specification 


The OpenGIS Abstract Specification Topic 2 "Spatial Referencing by Coordinates" 
should be changed to use the revised UML model proposed in OGC 03-009r7. 


iv. Future work 


Improvements of this document are needed to: 


a) Modify XML schemas to reflect any further changes in UML model (see further work 
clause in document 03-009r7) 


b) Specify how to reference items in the EPSG and other well-known data bases of 
CRS-related definition data (tentatively using URNs) 


c) Specify standard XML encodings of some well-known operation methods, coordinate 
operations, CRSs, units, etc., and specify how to reference these standard XML 
documents (perhaps using URLs) 


d) Specify how to reference items in customized repositories or catalogs of CRS 
definition data (perhaps used by specific OGC Implementation Specifications) 


NOTE  The last three items listed above are clearly needed to support interoperability, see Note 1 in 
Clause i.. 


v. Background 


The Coordinate Reference Systems (CRS) Working Group (formerly the Coordinate 
Transformation Working Group) has been developing XML Schemas specifying XML 
encoding of Coordinate Reference System (CRS) and Coordinate Transformation (CT) 
definition data. Those schemas were previously being developed largely without directly 
using any UML model, and largely by converting to XML Schemas the XML DTD 







OGC 03-010r9 


viii © OGC 2003 – All rights reserved
 


specified in OGC Recommendation Paper 01-014r5: Recommended Definition Data for 
Coordinate Reference Systems and Coordinate Transformations. 


The N1316 draft of ISO 19118 requires XML encoding of geospatial data to be 
developed by converting a UML model of the data to be encoded into the corresponding 
XML schemas. This conversion must be done in a largely mechanical fashion, using a set 
of UML to XML Schema conversion rules. Subclause A.5 of the N1316 specifies a draft 
set of UML to XML schema conversion rules, but explicitly allows variations of those 
rules to be used, if those variations are documented. 


Some prospective users of OGC-specified XML encoding strongly desire that all such 
XML encoding specifications be compliant with ISO 19118. The XML schemas 
previously being developed by the CRS WG were not compliant with ISO 19118, 
partially because they did not convert a UML model to XML schemas. In particular, that 
draft encoding did not directly convert the UML model developed for Topic 2 of the 
OGC Abstract Specification. 


The previously approved OGC Recommendation Paper improves the relevant XML work 
done earlier by the Open GIS Consortium (OGC). The OpenGIS-accepted CT 
Implementation Specification already specifies a XML DTD for CRSs and CTs. The 
now-superseded GML 1 Recommendation Paper included an informative annex that 
specified a XML DTD for CRSs, including some CTs. These two XML DTDs are 
significantly different, and both appear to be incomplete. 







OGC 03-010r9 


© OGC 2003 – All rights reserved ix
 


Foreword 


This OpenGIS© Recommendation Paper replaces previous Recommendation Paper 
numbered 03-010r7 and titled "Recommended XML encoding of coordinate reference 
system definitions". 


This document is heavily based on OpenGIS© Abstract Specification Topic 2: Spatial 
Referencing by Coordinates, which is partially based on ISO 19111. This document uses 
XML Schemas as specified by the W3C. This document is also partially based on ISO 
19118, and on version 3.00 of the Geography Markup Language (GML) Implementation 
Specification. 


This document contains nine annexes. Annexes A and C are normative, and all the others 
are informative. 


Attention is drawn to the possibility that some of the elements of this document may be 
the subject of patent rights. The Open GIS Consortium Inc. shall not be held responsible 
for identifying any or all such patent rights. 







OGC 03-010r9 


x © OGC 2003 – All rights reserved
 


Introduction 


This document specifies a standard XML encoding for data defining Coordinate 
Reference Systems (CRSs) and coordinate operations, specified using XML Schemas. 
This CRS and coordinate operation definition data will often be transferred between 
client and server software that implements various standardised interfaces and data 
formats. This specified general definition data encoding is intended for use in multiple 
OGC Implementation Specifications. That is, each of these specifications is expected to 
use a subset and/or superset of this standard definition data, by specifying and using 
Application Schemas that build on these XML Schemas. 


The position or location of a point can be described using coordinates. Such coordinates 
are unambiguous only when the coordinate reference system on which those coordinates 
are based is fully defined. Each position is described by a set of coordinates based on a 
specified coordinate reference system. Coordinates are often used in datasets in which all 
coordinates belong to the same coordinate reference system. This paper specifies XML 
encoding of data defining coordinate reference systems for point coordinates. 


The same point position will usually have different coordinates in different coordinate 
reference systems. There are a large number of different coordinate reference systems in 
current use. Coordinates from different datasets will thus often have different coordinate 
reference systems. In order to use together positions from different coordinate reference 
systems, known point coordinates often must be transformed into the corresponding 
coordinates in a different coordinate reference system. This paper specifies XML 
encoding of data defining such coordinate transformations 







OGC Recommendation Paper OGC 03-010r9


 


© OGC 2002 – All rights reserved 1 
 


Recommended XML encoding of coordinate reference system 
definitions 


1 Scope 


This OpenGIS© standard specifies standard XML encodings of definition data for 
Coordinate Reference Systems (CRSs) and coordinate operations, specified using XML 
Schemas. This encoding is intended for use when transferring such definition data 
between client and server software that uses OpenGIS standard interfaces, as specified in 
other documents. The expected uses of this definition data transfer include those 
described in Annex B (informative). 


Definition data encoding is specified herein for multiple types of CRSs, including: 


a) Geocentric coordinate reference systems 


b) Geographic coordinate reference systems 


c) Projected coordinate reference systems 


d) Engineering coordinate reference systems 


e) Vertical coordinate reference systems 


f) Temporal coordinate reference systems 


g) Image coordinate reference systems 


h) Derived coordinate reference systems 


i) Compound coordinate reference systems, combining two or more other coordinate 
reference systems 


Definition data encoding is also specified herein for multiple types of coordinate 
operations, including: 


a) Parameterized coordinate transformations and conversions 


b) Concatenated coordinate transformations, combining two or more coordinate 
transformations 


c) Pass-through coordinate transformations, using another coordinate transformation 


The current scope of this encoding does not include: 


a) Vertical coordinate reference systems with time units 


b) Specific well-known coordinate conversions and transformations 







OGC 03-010r9 


2 © OGC 2003 – All rights reserved
 


This OpenGIS standard specifies standard XML encoding of CRS and coordinate 
operation definition data applicable to multiple separate OpenGIS interface 
Implementation Specifications. Each such Implementation Specification should specify 
one or more subsets and/or supersets of the definition data specified herein, each to be 
used for one or more purposes. That is, for each type of XML document used, the 
Implementation Specification should specify one or more Application Schemas that are 
similar to the Application Schemas required to use GML. 


Those OpenGIS standard interfaces are implemented by service software that performs 
functions for separate client software. Those Implementation Specifications, or profiles of 
those Implementation Specifications, can use any Distributed Computing Platform 
(DCP). CRS and/or coordinate operation definition data will often be transferred encoded 
in XML documents. However, other encodings can be used, such as Well Known Text 
(WKT). 


2 Conformance 


Conformance with this specification shall be checked using all the relevant tests specified 
in Annex A (normative). The framework, concepts, and methodology for testing, and the 
criteria to be achieved to claim conformance, are specified in ISO 19105: Geographic 
information — Conformance and Testing. 


3 Normative references 


The following normative documents contain provisions which, through reference in this 
text, constitute provisions of this specification. For dated references, subsequent 
amendments to, or revisions of, any of these publications do not apply. However, parties 
to agreements based on this specification are encouraged to investigate the possibility of 
applying the most recent editions of the normative documents indicated below. For 
undated references, the latest edition of the normative document referred to applies. 


European Petroleum Survey Group: EPSG Geodesy Parameters V 6.3, available through 
EPSG: http://www.epsg.org/ 


ISO 8601, Data elements and interchange formats - Information interchange 
Representation of dates and times 


ISO 19105, Geographic information – Conformance and testing 


ISO 19109, Geographic Information – Rules for Application Schemas 


ISO 19115, Geographic information – Metadata 


OGC 03-073r1, The OpenGIS Abstract Specification, Topic 2: Spatial referencing by 
coordinates 







OGC 03-010r9 


© OGC 2003 – All rights reserved 3 
 


OGC 02-023r4, OpenGIS Geography Markup Language (GML) Implementation 
Specification, version 3.00 


OGC 03-009r7, Revised UML model for Abstract Specification Topic 2: Spatial 
referencing by coordinates 


W3C Recommendation 6 October 2000, Extensible Markup Language (XML) 1.0 
(Second Edition), http://www.w3.org/TR/REC-xml 


W3C Recommendation 2 May 2001: XML Schema Part 0: Primer, 
http://www.w3.org/TR/2001/REC-xmlschema-0-20010502/ 


W3C Recommendation 2 May 2001: XML Schema Part 1: Structures, 
http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/ 


W3C Recommendation 2 May 2001: XML Schema Part 2: Datatypes, 
http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/ 


4 Terms and definitions 


For the purposes of this specification, the definitions given in Abstract Specification 
Topic 2 apply. In addition, the following terms and definitions apply. 


4.1  
Application Schema 
conceptual schema for data required by one or more applications [ISO 19101] 


4.2  
GML Application Schema 
an XML Schema written according to the GML 3 rules for Application Schemas, which 
defines a vocabulary of geographic objects for a particular domain of discourse [GML 
3.0] 


4.3  
object 
an XML document element of a type derived from AbstractGMLType [GML 3.0] 


4.4  
profile 
specified logical subset of XML Schema specified elements and types, defined to 
enhance interoperability and to curtail ambiguity [adapted from GML 3.0] 


4.5  
sequence 
finite, ordered collection of related items (objects or values) that may be repeated [ISO 
19107] 







OGC 03-010r9 


4 © OGC 2003 – All rights reserved
 


4.6  
set 
unordered collection of related items (objects or values) with no repetition [ISO 19107] 


4.7  
Uniform Resource Identifier (URI)  
simple and extensible means for identifying a resource; a short string or address; 
classified as a name, a locator, or both [RFC 2396] 


5 Conventions 


5.1 Symbols (and abbreviated terms) 


API Application Program Interface 


CRS Coordinate Reference System 


CT Coordinate Transformation 


DCP Distributed Computing Platform 


DTD Document Type Definition 


EPSG European Petroleum Survey Group 


GIS Geographic Information System 


GML Geography Markup Language 


IETF Internet Engineering Task Force 


ISO International Organization for Standardization 


OGC Open GIS Consortium 


UML Unified Modeling Language 


WKT Well Known Text 


XML eXtensible Markup Language 


1D One Dimensional 


2D Two Dimensional 


3D Three Dimensional 







OGC 03-010r9 


© OGC 2003 – All rights reserved 5 
 


5.2 UML Notation 


The diagrams that appear in this standard are presented using the Unified Modeling 
Language (UML) static structure diagram. The UML notations used in this standard are 
described in the diagram below. 


Association between classes


role-1 role-2


Association Name
Class #1 Class #2


Association Cardinality


Class Only one


Class Zero or more


Class Optional (zero or one )


1..* Class One or more


n Class Specific number


Aggregation between classes


Aggregate
Class


Component
Class #1


Component
Class #2


Component
Class #n


……….


0..*


0..1


Class Inheritance (subtyping of classes)


Superclass


Subclass #1


…………..


Subclass #2 Subclass #n


 


Figure 1 — UML notation 


In these UML class diagrams, the class boxes with three compartments and a light 
background are the primary classes being shown in this diagram, often the classes from 
one UML package. The class boxes without compartments and with a gray background 
are other classes used by these primary classes, usually classes from other packages. 


In this specification, the following four stereotypes of UML classes are used: 


a) <<Abstract>> A polymorphic object class that cannot be instantiated. 


b) <<DataType>> A descriptor of a set of values that lack identity (independent 
existence and the possibility of side effects). A DataType is a class with no operations 
whose primary purpose is to hold the information. 


c) <<CodeList>> A flexible enumeration that uses string values for expressing a list of 
potential values. 


d) <<Union>> Contains a list of attributes where only one of those attributes can be 
present at any time. 


In this specification, the following standard data types are used: 







OGC 03-010r9 


6 © OGC 2003 – All rights reserved
 


a) String – A sequence of characters 


b) Integer – An integer number 


c) Double – A double precision floating point number 


d) Boolean – A value specifying TRUE or FALSE 


5.3 Document terms and definitions 


The following specification terms and definitions are used in this document: 


a) shall – verb form used to indicate a requirement to be strictly followed to conform to 
this specification, from which no deviation is permitted 


b) should – verb form used to indicate desirable ability or use, without mentioning or 
excluding other possibilities 


c) may – verb form used to indicate an action permissible within the limits of this 
specification 


d) can – verb form used for statements of possibility 


e) informative – a part of a document that is provided for explanation, but is not required 


f) normative – a part of a standards document that is required 


g) annex – an auxiliary part of a document, called an “appendix” in United States 
English 


h) clause – a major part of a document, called a “section” or “paragraph” in United 
States English 


i) subclause – a secondary part of a clause or annex, called a “subsection” in United 
States English 


6 XML encoding overview 


6.1 Introduction 


The specified XML Schemas encode definition data for both Coordinate Reference 
Systems (CRSs) and Coordinate Operations (including coordinate Transformations and 
Conversions). This definition data includes identification and specification data, both 
included as needed. The definition data for a CRS includes or references definition data 
for a Coordinate System and a Datum, as appropriate. When applicable, definition data 
for a CRS includes or references definition data for a Coordinate Operation, and vice-
versa. 


The specified XML Schemas were prepared by converting the (revised) UML model for 
OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. Although most 
of the relevant information in that document was copied into these Schemas or into this 
document, Clauses 6 and 7 of Topic 2 contain some additional information applicable to 
these Schemas and their use. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 7 
 


NOTE  The structure of the specified XML encoding closely follows the structure of the UML model, 
from which this XML encoding was converted. 


6.2 Encoding structure 


The specified XML encoding includes multiple alternative top level XML elements that 
can be used where needed. (That is, there is not a single top level element that may be the 
basis for all XML documents.) Most of these top level XML elements include 
identification information, allowing it to be referenced. The alternative top level XML 
elements include at least: 


NOTE 1 A XML element that includes identification information is termed a “GML object” in GML 3. 
In some circles, an XML element with identity is termed a “module”. Each valid XML document must 
include a single top level XML element, often but not necessarily an element with identity. That single top 
level XML element need not be defined in this specification. 


a) All concrete XML elements in the substitution group headed by the abstract 
CoordinateReferenceSystem element. These elements can each be used to transfer the 
definition of one coordinate reference system of that type. These nine concrete XML 
elements are named: 


1) CompoundCRS 


2) GeocentricCRS 


3) GeographicCRS 


4) ProjectedCRS 


5) EngineeringCRS 


6) ImageCRS 


7) VerticalCRS 


8) TemporalCRS 


9) DerivedCRS 


b) All concrete XML elements that are substitutable for the abstract 
CoordinateOperation element, namely: 


1) ConcatenatedOperation. This element should be used to encode the definition of 
a concatenated coordinate conversion, which combines a specified sequence of 
Transformations and/or Conversions. 


2) PassThroughOperation. This element should be used to encode the definition of 
a pass through coordinate conversion, which uses a specified Conversion or 
Transformation to convert a subset of the coordinates of a CompoundCRS. 


3) Transformation. This element may be used to encode the definition of an 
approximate coordinate transformation, from one specified source coordinate 
reference system to another specified target coordinate reference system. 


4) Conversion. This element may be used to encode the definition of an exact 
coordinate conversion, from one coordinate reference system to another 
coordinate reference system. 







OGC 03-010r9 


8 © OGC 2003 – All rights reserved
 


NOTE 2 The Conversion and Transformation elements should not be used for well-known coordinate 
operation methods with many instances, see Subclause 6.3. 


The concrete XML elements that are substitutable for CoordinateReferenceSystem use 
multiple lower level XML elements containing data structures. These lower level 
elements include all five concrete elements that are substitutable for the abstract Datum 
XML element, named: 


a) GeodeticDatum 


b) VerticalDatum 


c) TemporalDatum 


d) EngineeringDatum 


e) ImageDatum 


These lower level XML elements also include all ten concrete elements that are 
substitutable for the abstract CoordinateSystem XML element, named: 


a) EllipsoidalCS 


b) VerticalCS 


c) CartesianCS 


d) ObliqueCartesianCS 


e) LinearCS 


f) PolarCS 


g) SphericalCS 


h) CylindricalCS 


i) TemporalCS 


j) UserDefinedCS 


The concrete XML elements that are substitutable for the CoordinateOperation element 
use multiple lower level elements containing data structures, including the elements 
named: 


a) CovarianceMatrix 


b) CovarianceElement 


c) OperationMethod 


d) OperationParameter 


e) OperationParameterGroup 


f) ParameterValue 


g) ParameterValueGroup 







OGC 03-010r9 


© OGC 2003 – All rights reserved 9 
 


NOTE 3 The ParameterValue and ParameterValueGroup elements should not be used for well-known 
coordinate operation methods with many instances, see Subclause 6.3. 


In addition to the concrete XML elements listed above, the Dictionary element in GML 3 
is another alternative top level XML element. That Dictionary element can contain any 
combination of the concrete XML elements listed above, since all are substitutable for a 
Definition element in a Dictionary. A Dictionary element can also contain one or more 
UnitDefinition elements, as defined in units.xsd of GML 3. Also, any of these concrete 
elements or a Dictionary can be included inside a GenericMetaData element inside a 
metaDataProperty element, which can be included inside of many other XML elements. 


6.3 Application schemas 


As stated above, many of the concrete XML elements defined in these CRS Schemas can 
be used without Application Schemas, whenever no content extensions or restrictions are 
needed. An Application Schema shall be used whenever element contents extension is 
required, and should be used in most other cases to specify needed restrictions. That is, an 
Application Schema should be defined to extend and/or restrict elements as needed for a 
specific application, or a set of applications, to: 


a) Add elements to contents of existing elements, for recording additional data about 
that item needed for that application. 


b) Restrict the multiplicity of current contents elements, to eliminate flexibility not 
needed and perhaps confusing for that application. 


c) Use a different element name, to be more easily understood in that specific 
application, primarily for elements that will be instantiated many times. 


d) Specify standard contents and contents patterns for selected elements and attributes, 
as needed to improve interoperability. 


e) Specify standard XML and other documents to be referenced or otherwise used, as 
needed to improve interoperability. 


Application Schemas can thus be used for XML document contents extensions, 
restrictions, or both. Contents extension is expected to be often used to record additional 
data needed for applications. Contents restriction is expected to be frequently used to 
restrict contents, in order to increase interoperability and reduce ambiguity when greater 
flexibility is not needed for applications. Extensions of existing concrete elements can be 
defined by extending that concrete element. In many cases, restrictions of existing 
concrete elements can be done by extending the abstract element from which that 
concrete element is derived, by adding somewhat different but corresponding extensions.  


An Application Schema can specify a single top level element for use in an XML 
document, with the XML elements and types that it uses. That single top level XML 
element can be an object with identity, but this is not required. Such an Application 
Schema will import and build upon one or more of the six XML Schemas specified in 
this document. 







OGC 03-010r9 


10 © OGC 2003 – All rights reserved
 


Application Schemas could define additional concrete elements using or extending other 
abstract elements, if needed. However, an additional concrete element using or extending 
an abstract element should not be defined if that concrete element is largely similar to an 
existing element, and thus probably should extend or use an existing concrete element. In 
many cases, the existing concrete elements that use an abstract element are believed to be 
largely exhaustive. This is particularly true when the existing concrete elements include 
one element that is quite general, such as the elements EngineeringCRS, DerivedCRS, 
EngineeringDatum, UserDefinedCS, OperationParameter, and 
OperationParameterGroup. 


The Conversion, Transformation, ParameterValue, and ParameterValueGroup elements 
can be used for well-known coordinate operation methods, especially when only one 
instance of that element is needed for that operation method. However, these elements 
should not be used for well-known coordinate operation methods when many instances of 
that element are needed for one operation method. Instead, an Application Schema that 
defines operation-method-specialized element names and contents should be prepared for 
each such operation method. Subclauses F.3 and F.4 provide examples of such 
Application Schemas. For interoperability, a suitable geospatial information community 
should standardize each such Application Schema. 


NOTE  This use of Application Schemas follows the GML 3 patterns. This GML pattern is to generally 
use Application Schemas, especially when use of Application Schemas allows definition of XML Schema 
having: 1) complexTypes with more specific restrictions on the contents of elements, sometime in ways 
that allow XML parsers to more completely check for correct contents of XML documents, and 2) elements 
with more specific and understandable names, to make XML documents easier to understand by humans. 


6.4 Profiles 


Most Application Schemas and other uses of these CRS Schemas will use only a subset 
of the XML elements, types, and other capabilities defined in these CRS Schemas. Such a 
subset is termed a Profile, as specified in Subclause 7.16 of the GML 3 Implementation 
Specification. Briefly, a profile is a specified logical subset of the CRS Schemas plus the 
GML 3 schemas used with these CRS Schemas, selected to improve interoperability and 
reduce ambiguity. Such a profile should be specified by an Application Schema. 


6.5 Namespace and version 


All these XML Schema documents describe components in the 
http://www.opengis.net/gml namespace, for which the prefix "gml" is normally used. 


Each XML Schema document carries a version attribute as defined in the XML Schema 
Recommendation. The format of the version attribute string is x.y.z where x denotes the 
major version number, while y and z denote a minor version numbers for that document. 
The current version is 3.1.0. 


These XML Schemas use most of the GML 3 model and syntax specified in Subclause 
7.2.1 of the GML 3.00 specification. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 11 
 


7 XML encoding 


The standard XML encoding of CRS and coordinate operation definition data is specified 
in six XML Schema documents (using the file extension .xsd). These six XML schema 
files are named: 


a) referenceSystems.xsd 


b) coordinateReferenceSystems.xsd 


c) datums.xsd 


d) coordinateSystems.xsd 


e) coordinateOperations.xsd 


f) dataQuality.xsd 


These XML schema files are listed in Annex C, and copies of these files are also attached 
to this document. These six XML schemas correspond to the six packages in the UML 
model that was converted. Each XML schema includes <documentation> elements that 
define the XML elements and attributes, largely copied from the UML model. 


These XML Schemas encoding CRS and coordinate operation definition data use nine 
XML schemas that are specified by GML 3. These XML schemas also include 
<documentation> elements that define the XML elements and attributes. Of course, these 
CRS Schemas use only some of the elements and types defined in these GML 3 schemas. 
These nine GML 3 schema documents are named: 


a) measures.xsd 


b) units.xsd 


c) geometryBasic2d.xsd 


d) geometryBasic0d1d.xsd 


e) temporal.xsd 
f) dictionary.xsd 


g) gmlBase.xsd 


h) basicTypes.xsd 


i) xlink.xsd 







OGC 03-010r9 


12 © OGC 2003 – All rights reserved
 


8 Supporting information 


This clause introduces information provided in the annexes supporting the encoding 
described in Clauses 6 and 7: 


• Annex A (normative) specifies the requirements for OpenGIS Implementation Specification 
conformance to this specification, and an abstract test suite for checking such conformance. 
Requirements are also specified for compliance of Application Schemas. 


• Annex B (informative) describes the expected OpenGIS uses (or use cases) for transferring 
CRS and coordinate operation definition data. 


• Annex C (normative) lists the six specified XML Schemas. 
• Annex D (informative) specifies the standard contents of the three code lists used by these 


XML Schemas. 
• Annex E (informative) provides example XML documents using the XML Schemas specified 


in this document. 
• Annex F (informative) provides example application schemas based on these XML Schemas, 


with corresponding example XML documents and UML models. 
• Annex G (informative) summarizes the process and rules used to convert the included UML 


model into the included XML Schemas. 
• Annex H (informative) describes some example operation methods. 
• Annex I (informative) summarizes the flexibility supported by the specified XML Schemas. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 13 
 


Annex A 
(normative) 


  
Conformance 


A.1 Conformance requirements 


Each OGC Implementation Specification that uses XML encoding to transfer data 
defining coordinate reference systems and/or coordinate operations shall transfer 
definition data that conforms to this Recommendation Paper. Each relevant data transfer 
situation specified by such a specification shall transfer data that contains the entire 
applicable subset of the definition data specified in this Paper. Each such data transfer 
should include any additional data needed. Each relevant OGC Implementation 
Specification shall clearly specify the contents, structure, and format of the XML 
encoded data transferred in each specified data transfer situation, usually partially 
specified as an Application Schema based on these CRS schemas. 


NOTE 1 In many cases, an Implementation Specification will specify the Application Programming 
Interface (API) to service software. In those cases, each specified data transfer situation is each input and 
output argument of each operation in a UML model of the service interface. Of course, multiple operation 
arguments will often transfer the same possible data, and thus use the same subset of the definition data 
specified here. Also, multiple arguments may use the same subset of the definition data specified here, 
although different arguments use different subsets of that data. 


NOTE 2 Many of the concrete XML elements defined in these CRS Schemas can be used without 
Application Schemas, if no contents extensions or restrictions are needed. However, the Conversion, 
Transformation, ParameterValue, and ParameterValueGroup elements should not be used for well-known 
coordinate operation methods having many element instances. Instead, an Application Schema that defines 
operation-method-specialized element names and contents should be prepared and standardized, see 
Subclause 6.3. 


Whenever coordinate reference system and/or coordinate operation definition data is 
transferred using XML encoding, the data contents and structure specified herein shall be 
used wherever applicable. The data contents and structure aspects specified herein that 
shall be used include: 


a) Name of each specified XML element and attribute 


NOTE 3 When an Application Schema is used, the same name can be used in different namespaces. 


b) Meaning of each specified name 


c) Contents of each specified complexType 


d) Sequence of elements included within each specified complexType 


e) Multiplicity and optionality of each element and attribute in each specified 
complexType 


f) Data type of each specified individual data item 







OGC 03-010r9 


14 © OGC 2003 – All rights reserved
 


When a data transfer situation requires a subset of the definition information specified 
here, a suitable subset profile can be used. When a data transfer situation requires a 
superset of the definition information specified here, a suitable Application Schema shall 
be specified, and its' use shall be required. Each such Application Schema shall conform 
to the Rules for Application Schemas specified in Subclause A.3. The changes permitted 
in an Application Schema include: 


a) Add additional elements to a specified complexType, containing additional 
information 


b) Omit a specified element, when not needed and that element is specified as being 
optional (minOccurs="0") 


c) Remove some of the set of alternative elements in a specified <choice> data structure  


d) Make an optional element required (minOccurs not specified, default ="1") 


e) Reduce specified maximum number-of-repetitions of an element 


f) Change data type of an element to a more restrictive type 


g) Restrict the meaning of a specified name, to match a restriction of an Implementation 
Specification 


h) Specify standard contents and contents patterns for selected elements and attributes, 
for interoperability. 


i) Specify standard XML and other documents to be referenced or otherwise used, for 
interoperability. 


Many possible changes to the definition data specified here are not allowed, such as: 


a) Completely change the definition of a specified name 


b) Expand the set of alternative contents in a specified <choice> data structure 


c) Make optional an element or attribute required in a specified complexType 


d) Increase maximum number-of-repetitions of an element 


e) Change data type of a specified element to a less restrictive type 


f) Change the required order of elements in a specified complexType 


A.2 Abstract test suite 


Conformance of each application of these CRS Schemas shall be tested by inspecting the 
specification of each transferred XML encoded data structure and individual data item. 
The tested specification of XML encoded data shall include all Application Schemas 
used. This testing shall be done for each XML element and attribute that can be included 
in each specified data transfer. For each such XML element and attribute, the following 
questions shall be answered: 


a) What is the (complete) meaning of this XML element or attribute? 







OGC 03-010r9 


© OGC 2003 – All rights reserved 15 
 


b) Is this meaning part of the definition of an XML element or attribute specified herein? 
If not related, this data structure or item IS conformant. 


c) Is this meaning similar to the meaning of any XML element or attribute specified 
herein? If not similar, this data structure or item IS conformant. 


d) Is this meaning the same as, or a restriction of, the most similar meaning specified 
herein? If not the same or restricted, this data structure or item is NOT conformant. 


e) Is the name of this XML element or attribute the same as the name of the 
corresponding item specified herein? If not the same name, this data structure or item 
is NOT conformant. 


f) Is the type of this XML element or attribute the same as the type of the corresponding 
item specified herein, a subtype of that type, or a type with all the relevant contents of 
that type? If the type is not the same or equivalent, this item is NOT conformant. 


If an individual XML element or attribute with a simpleType is being inspected, the 
questions continue: 


g) Is the data type of this item the same as, or a subset of, the data type of the 
corresponding item specified here? If not the same or a subset, this data item is NOT 
conformant. 


h) Does this element have a specified multiplicity range that extends outside the allowed 
multiplicity of the corresponding element specified here? If a larger multiplicity range 
is allowed, this element is NOT conformant. 


If a XML element with a complexType is being inspected, the questions continue: 


g) Do the contents of this complexType include all or a subset of the XML elements and 
attributes included in the corresponding complexType specified here? If doesn’t 
include all or a subset, this complexType is NOT conformant. 


h) Do the contents of this complexType include the corresponding XML elements in the 
same required order? If not the same order, this complexType is NOT conformant. 


i) If this complexType extends a complexType specified here, and the <documentation> 
element in that complexType specified here states constraints on inclusion of 
additional elements, and those constraints are not all satisfied, this complexType is 
NOT conformant. 


j) For each XML element or attribute included in this complexType that has a 
corresponding item in the complexType specified here, is the element or attribute 
multiplicity (including optionality) compatible? 


1) If the multiplicity and optionality are the same, this item IS conformant. 


2) If an element or attribute is now omitted instead of optional, this item IS 
conformant. 


3) If an element or attribute is now required instead of optional, this item IS 
conformant. 







OGC 03-010r9 


16 © OGC 2003 – All rights reserved
 


4) If an element or attribute is now optional instead of required, this item is NOT 
conformant. 


5) If an element is now not repeated instead of being repeated one or more times, 
this item IS conformant. 


6) If an element can now be repeated instead of not being repeated, this item is 
NOT conformant. 


7) If the <documentation> element in the complexType specified here states a 
constraint on the multiplicity of this item and this constraint is not satisfied, this 
item is NOT conformant. 


A.3 Rules for application schemas 


A.3.1 Introduction 


An Application Schema is an XML Schema that imports and builds upon one or more of 
the CRS set of six XML Schemas specified in Annex C. Such a Schema defines one or 
more XML elements useful for transfer of encoded geospatial data. An Application 
Schema can specify a single top level element for use by an XML document, with the 
XML elements and types that it uses. That single top level XML element can be an object 
with identity, but this is not required. Such a Schema with its' imported Schemas defines 
a vocabulary for a particular domain of discourse by defining and describing the terms of 
that vocabulary (see ISO TC/211 19109). 


Conformance of an application of these CRS Schemas shall be tested by inspecting each 
Application Schema used, if any. Notice that the CRS set of XML Schemas specified in 
Annex C can be used without an Application Schema, and such use is allowed but 
discouraged. To use those XML Schemas without an Application Schema, any defined 
XML concrete element can be used as the basis for an XML document. There are about 
30 such concrete elements defined that may be directly useful, and are listed in Subclause 
6.2. In addition, all of those concrete elements can be used inside a GML 3 Dictionary 
element. Furthermore, all of those concrete elements or a Dictionary can be used inside a 
GenericMetaData element inside a metaDataProperty element, which can be included in 
many other elements. 


The remainder of this subclause specifies the requirements (or rules) for an Application 
Schema to be considered conformant with this Recommendation Paper. Notice that it is 
clearly possible to develop Application Schemas that use the CRS Schemas specified 
herein which are valid XML Schemas but do not follow all these rules, and are thus not 
conformant with this Recommendation Paper. 


A.3.2 General rules 


All conformant Application Schemas shall be constructed by building upon one or more 
of the CRS set of six XML Schemas specified in Annex C. Such a Schema shall be a 
valid XML Schema, as specified in the XML Schema specification. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 17 
 


Each application schema must declare a target namespace. This is the namespace in 
which the XML elements or terms of the vocabulary “live”. This shall not be the GML 
namespace (http://www.opengis.net/gml). It is conventional for the namespace identifier 
to be a URL controlled by the application schema author’s organization. A target 
namespace is declared in the application schema using the targetNamespace attribute of 
the schema element from XML Schema. 


A.3.4 Import needed schemas 


An Application Schema must import the necessary XML Schemas specified in this 
document and from GML 3, with the correct namespace assignment. For example, in 
order to define coordinate reference systems, it is necessary to import 
coordinateReferenceSystems.xsd, either directly or indirectly. Direct import is done by 
including the declaration: 


<xsd:import namespace="http://www.opengis.net/gml" 
schemaLocation="../coordinateReferenceSystems.xsd"/> 


 


Notice that the <import> element specifies that the components described in 
coordinateReferenceSystems.xsd are in the GML namespace 
http://www.opengis.net/gml. This namespace identifier must match the target namespace 
specified in the schema being imported, to ensure XML Schema validity. 


The schemaLocation of the imported .xsd file can be a local reference or a URI reference 
to the file. A URI reference can be to some remote repository, such as the repository 
http://schemas.opengis.net/ on the OGC web site. The above example assumes that the 
coordinateReferenceSystems.xsd file is stored locally at a location relative to this 
Application Schemas .xsd file. 


Alternately, necessary XML Schemas can be imported indirectly, by importing another 
Application Schema that imports the needed Schemas. 


In addition, the required import of a GML schema may be provided by the import of an 
equivalent subset schema as described in Subclause 7.14 of the GML 3 Implementation 
Specification, or by the import of an equivalent schema from a GML profile. These are 
all equivalent schemas with respect to satisfying the schema import requirements. 


The above example imports coordinateReferenceSystems.xsd, which (directly and 
indirectly) includes the other five CRS Schemas plus nine other GML 3 Schemas. For 
some Application Schemas, coordinateReferenceSystems.xsd may not be needed, but one 
or more of the other CRS Schemas may be needed. 


A.3.5 GML objects and properties 


The content models of almost all (about 30) concrete elements listed in Subclause 6.2 are 
derived from gml:DefinitionType, partially by restriction. These elements are ultimately 
derived from the AbstractGMLType and are thus GML Objects. These elements shall thus 
follow the GML class/property model, as specified in Subclause 7.2.2 of the GML 3 
Implementation Specification. That is, the children of these elements must not be 







OGC 03-010r9 


18 © OGC 2003 – All rights reserved
 


elements whose content models derive directly or indirectly from AbstractGMLType. 
The children of these elements are properties that describe that component. 


A.3.6 Global and local names 


Note that elements included in complex types that are defined with local names in an 
Application Schema will prevent derivation by restriction in another namespace, unless 
the local names are dropped in the restriction. Such complex types are appropriate for 
elements intended for use “as is” in their own namespace, and should be declared to be 
final=”restriction”. Elements included in complex types by reference to global elements 
support derivation by restriction in another namespace, allowing restriction of cardinality, 
and/or replacement by a member of a substitution group. Such complex types designed 
for derivation by restriction are appropriate “library types” for elements in substitution 
groups that cross namespaces. 


A.4 UML models for application schemas 


Each Application Schema can be produced by converting a UML model (or part of such a 
model), as required to comply with ISO 19118. If such a UML model is encoded, the 
XML encoding rules used should be similar to the encoding rules used for this document, 
as described in Annex G. 


To comply with this specification, each such UML model shall be based on the same 
UML model as these CRS Schemas. For Application Schemas, subclasses can be defined 
for most non-abstract classes in this UML model. A subclass can extend and/or restrict a 
current concrete class to: 


a) Add UML attributes and/or navigable associations, for recording additional data 
about that class needed for that application. 


b) Restrict the multiplicity of current attributes and/or navigable associations, to 
eliminate flexibility not needed and perhaps confusing for that application. 


c) Use a different class name, to be more easily understood in that specific application, 
primarily for classes that will be instantiated many times. 


d) Specify standard or default contents for selected UML attributes, for interoperability. 


Application Schemas could define additional concrete subclasses of abstract classes in 
this UML model, if needed. However, additional concrete subclasses should not be 
defined that are largely similar to existing subclasses, and thus probably should be a 
subclass of an existing concrete subclass. In most cases, the existing concrete subclasses 
of an abstract class are believed to be largely exhaustive. This is particularly true when 
the existing subclasses include one subclass that is quite general, such as the classes 
SC_EngineeringCSR, SC_DerivedCRS, CD_EngineeringDatum, CS_UserDefinedCS, 
and CC_OperationParameter. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 19 
 


Annex B 
(informative) 


 
Expected uses of CRS definition data 


B.1 Introduction 


The expected OpenGIS uses (or use cases) for transferring CRS and coordinate operation 
definition data produce requirements to be satisfied by this XML encoding. Three broad 
uses of such definition data transfer have been identified: 


a) Use to transfer definition of a Coordinate Reference System (CRS), used by other 
geospatial data 


b) Use to transfer definition of a Coordinate Transformation (CT), that can be performed 
by a coordinate transformation service 


c) Use to transfer lineage or history of other geospatial data 


Additional OGC uses of the proposed CRS and coordinate operation definition data 
might be identified in the future. These expected OGC uses assume the OGC is 
standardizing software-to-software interfaces (or Application Programming Interfaces, 
APIs) and associated data transfer formats, but is not (currently) trying to standardize 
human-computer interfaces. 


Each OGC standard interface must allow both server and client software to be written 
that implements that interface. Simplicity of the interfaces is highly desirable, to simplify 
client software. Simplicity of server implementation software is somewhat important, but 
not as important as interface simplicity. 


The following subclauses first discuss the multiple uses of definition data, the alternate 
ways in which definition data can be transferred, and then the three data transfer uses 
listed above. 


B.2 Multiple uses of definition data 


CRS and CT definition data can be used in at least three broad overlapping ways, to: 


a) Describe a specific CRS or CT to a human user. Note that different human users need 
different degrees of definition detail. 


b) Uniquely identify a specific CRS or CT to software. For a CRS, such identification 
can be used by software to check if different geospatial datasets are recorded using 
the same CRS, or to find additional data about a CRS that is stored elsewhere. 


c) Provide data for performing coordinate transformations and conversions, useful to 
transformation software. For a CT, such data might be used to perform that 







OGC 03-010r9 


20 © OGC 2003 – All rights reserved
 


transformation. For a CRS, such data might be used in transforming point positions to 
or from that CRS. 


B.3 Alternative ways to transfer definition data 


CRS and CT definition data can be transferred in three alternative ways: 


a) Transfer only identifier and perhaps name, of each CRS or CT 


b) Transfer complete specification, of each CRS or CT 


c) Transfer partial specification with identifiers (and perhaps names) for remaining 
parts, of each CRS or CT 


Only an identifier needs to be transferred for a complete CRS or CT, or for any part 
thereof, for any part that is well-known to the receiving software. Well-known usually 
means that some recognized authority has produced and published a complete 
specification of that part. Server software could have those well-known definitions coded 
into the software. Alternately, server software could be coded to access those definitions 
when needed from a separate service known to the server. Such a separate service may be 
maintained by the authority or by a third party. 


In general, there will be several CRS and CT specification authorities that one server or 
client might use, separately and together. Of course, some software implementations may 
use no such authority, or only one such authority. One widely-used, publicly-available 
authority is the European Petroleum Survey Group (EPSG), and use of this authority is 
currently specified in several OGC Implementation Specifications. However, other and 
more private authorities exist and must be supported by some OGC standard interfaces, 
including military affiliated authorities (e.g., DIGEST). Somewhat private authorities are 
expected to be used for many engineering and image coordinate reference systems. 


A complete CRS or CT specification must be transferred for a CRS or CT, or for any part 
thereof, for any part that is not well-known to the receiving software. Some server or 
client implementations could support no well-known CRS and/or CT definitions. More 
likely, some applications are expected to use some non-well-known CRS or CT 
definitions. For example, a grid coverage can use a CRS specific to that coverage. Also, 
an image coordinate transformation is likely to be specific to one image, and may not be 
supported by any authority that makes that CT well-known. 


B.4 Use to transfer coordinate reference system definition 


XML can be used to transfer the definition of a Coordinate Reference System (CRS) used 
by other geospatial data, especially data encoded using XML. In most cases, one 
geospatial dataset will use only one CRS. The definition of a CRS for a geospatial dataset 
can be transferred (usually through an OGC interface) for several different purposes, 
including: 







OGC 03-010r9 


© OGC 2003 – All rights reserved 21 
 


a) Coordinate Transformation (CT) interface. The current Coordinate Transformation 
(CT) server interface allows use of XML to transfer definitions of CRSs. That is, a 
client can send the definition of one CRS that the client is requesting access, to server 
software. Similarly, the server software can send to a client the definition of one CRS 
that the client currently has access to. 


b) Geography Markup Language (GML). The encoding of features in XML, now 
specified in the GML Implementation Specification, might use this CRS XML to 
define the CRS of a feature collection or feature. 


c) Web Map Server (WMS) interface. A future version of the WMS interface might use 
XML to define the CRS that the client is requesting “map” data in. (The WMS 
interface does not currently use XML for this purpose.) In the current WMS interface, 
only well-known CRSs are supported, so only the identifier of that well-known CRS 
is transferred in a Get Map request. 


d) Grid Coverage (GC) interface. A future version of the GC (access) interface might 
use XML to define the CRS used by a coverage, when requested by a client. (The 
current GC interface does not use XML for this purpose.) In the current draft GC 
interface, the CRS can be defined for one specific grid coverage, requiring transfer of 
a more complete specification of that CRS. That grid CRS is usually specified as a 
custom affine coordinate conversion or  transformation from another CRS. 


B.4.1 Current CRS transfer by low-level CT interface 


The current low-level Coordinate Transformation (CT) Implementation Specification 
(OGC document 01-009) supports XML transfer of a CRS definition in one operation and 
in one attribute. 


The createFromXML operation of the CS_CoordinateSystemFactory <<Interface>> class 
creates a CS_CoordinateSystem object from a XML character string. One server will 
implement one CS_CoordinateSystemFactory object. The signature of this UML 
operation is: 


    createFromXML (xml:CharacterString) : CS_CoordinateSystem 
 
The “XML” read-only UML attribute of the CS_Info class allows a client to get an XML 
character string representation of an object, which can be either a CS_CoordinateSystem 
or a CS_Unit UML object. Objects of both the CS_CoordinateSystem and CS_Unit UML 
classes can be instantiated by multiple other objects visible to one client. Note that a 
CS_CoordinateSystem object can be created in several ways other than use of the 
createFromXML operation. The signature of this UML attribute is: 


    XML : CharacterString 
 
In the createFromXML operation, and when the UML attribute is used to get XML for a 
CS_CoordinateSystem object, the XML DTD for CS_CoordinateSystem provided in 
Section 15.1.1 (pages 113 through 115) of 00-007r4 is used. Example XML using that 
XML DTD is provided in Section 15.1.2 (pages 116 and 117) of 01-009. (Because that 
XML DTD and example XML are each more than one page, they are not copied here.) 







OGC 03-010r9 


22 © OGC 2003 – All rights reserved
 


NOTE  A future version of the Coordinate Transformation (CT) Implementation Specification could 
use XML in additional places, especially where use of WKT is now supported but use of XML is not now 
supported. 


B.4.2 Current CRS transfer by ICT and high-level CT interfaces 


The current draft high-level Coordinate Transformation (CT) Implementation 
Specification (OGC document 01-013r1) supports XML transfer of a CRS definition by 
two operations. The same two operations are supported by the draft Image Coordinate 
Transformation (ICT) interface (OGC document 00-045r1). These two operations are 
provided to clients by the one Ground Coordinate Transformation Service <<Interface>> 
object. The UML operation signatures of these two operations are: 


    addTransformation (metadata : TransformationMetadata,  
format : TextFormat) : TransformationID 


    transformationMetadata (transformation : TransformationID, 
format : TextFormat) : TransformationMetadata 


 
XML is one possible format used by the Transformation Metadata <<DataType>> class 
that is used by these two operations. The Transformation Metadata class contains three 
UML attributes, with the signatures: 


    sourceCS : CoordinateSystemDefinition 
    targetCS : CoordinateSystemDefinition 
    transformation [0..1]: TransformationDefinition 
 
The CoordinateReferenceSystem XML element, with all its contents, specified in this 
document could to be used for each Coordinate System Definition instance in the 
Transformation Metadata. (However, the Transformation XML element specified in this 
document, with all their contents, alternately could be used for complete Transformation 
Metadata, including both the source and target CoordinateReferenceSystems.) 


B.5 Use to transfer coordinate transformation (CT) definition 


XML can be used to transfer the definition of a Coordinate Transformation (CT) in the 
interfaces to Coordinate Transformation (CT) services. These interfaces include the 
accepted (low level) CT Implementation Specification, OGC document 01-009. These 
interfaces also include a high-level CT interface now proposed in document 01-013, plus 
draft Image Coordinate Transformation interfaces documented in 00-045r1. These CT 
interfaces use XML to transfer CT definitions with and without associated source and 
target CRSs. 


B.5.1 Current CT transfer by low-level CT Interface 


The current low-level Coordinate Transformation (CT) Implementation Specification 
(OGC document 01-009) supports XML transfer of a CT definition in one operation and 
one attribute. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 23 
 


The createFromXML operation of the CT_MathTransformFactory <<Interface>> class 
creates a CT_MathTransform object from a XML character string. One server will 
implement one CT_MathTransformFactory object. The UML signature of this operation 
is: 


    createFromXML (xml:CharacterString) : CT_MathTransform 
 
The “XML” read-only UML attribute of the CT_MathTransform class allows a client to 
get an XML character string representation of this UML object. Objects of the 
CT_MathTransform class can be instantiated by multiple UML objects visible to one 
client. Note that a CT_MathTransform object can be created in several ways other than 
use of the createFromXML operation. The signature of this UML attribute is: 


    XML : CharacterString 
 
For both of these XML uses, the XML DTD for CT_MathTransform provided in Section 
15.1.1 (page 113) of 01-009 is used. Example XML using that XML DTD is not provided 
in 01-009. The XML DTD for CT_MathTransform now in Section 15.1.1 is: 


    <!DOCTYPE CT_MathTransform [ 
    <!ELEMENT CT_MathTransform ( 
        CT_ConcatenatedTransform | 
        CT_InverseTransform | 
        CT_ParameterizedMathTransform | 
        CT_PassThroughTransform) > 
 
    <!ELEMENT CT_ParameterizedMathTransform (CT_Parameter*)> 
    <!ATTLIST CT_ParameterizedMathTransform 
        ClassName           CDATA    #REQUIRED 
        > 
 
    <!ELEMENT CT_PassThroughTransform (CT_MathTransform)> 
    <!ATTLIST CT_PassThroughTransform 
        FirstAffectedOrdinate   CDATA    #REQUIRED 
        > 
 
    <!ELEMENT CT_ConcatenatedTransform (CT_MathTransform*)> 
    <!ELEMENT CT_InverseTransform (CT_MathTransform)> 
 
    <!ELEMENT CT_Parameter EMPTY> 
    <!ATTLIST CT_Parameter 
        Name                CDATA    #REQUIRED 
        Value               CDATA    #REQUIRED 
        > 
    ]> 
 
NOTE  This CT_MathTransform does not include any information on the source and target coordinate 
systems. Also, a future version of the low-level Coordinate Transformation (CT) Implementation 
Specification could use XML in additional places, especially where use of WKT is now supported but use 
of XML is not now supported.) 







OGC 03-010r9 


24 © OGC 2003 – All rights reserved
 


B.5.2 Current CT transfer by ICT and high-level CT interfaces 


The current draft high-level Coordinate Transformation (CT) interface specification 
(OGC document 01-013) supports XML transfer of a CT definition by two operations. 
The same two operations are supported by the draft Image Coordinate Transformation 
(ICT) interface (OGC document 00-045r1). These two operations are provided to clients 
by the one Ground Coordinate Transformation Service <<Interface>> object. The 
signatures of these two UML operations are: 


    addTransformation (metadata : TransformationMetadata,  
format : TextFormat) : TransformationID 


    transformationMetadata (transformation : TransformationID, 
format : TextFormat) : TransformationMetadata 


 
XML is one possible format used by the Transformation Metadata <<DataType>> class 
that is used by these two operations. The Transformation Metadata class contains three 
UML attributes, with the signatures: 


    sourceCS : CoordinateSystemDefinition 
    targetCS : CoordinateSystemDefinition 
    transformation [0..1]: TransformationDefinition 
 
The Transformation XML element specified in this document, with all their contents, 
could be used for a complete Transformation Metadata instance, including both the 
source and target CoordinateReferenceSystems. The Conversion XML element, with all 
its' contents probably can also be used for each Transformation Metadata instance. 


B.6 Use to transfer dataset lineage or history 


XML can be used to transfer the lineage or history of geospatial data, especially data encoded 
using XML. Such lineage information is specified by ISO 19115: Geographic 
information – Metadata to be part of the useful metadata about a dataset, and that 
metadata could be recorded in XML. (The OGC encourages use of ISO 19115 Metadata, 
but there are no uses of XML to transfer dataset lineage or history in current draft or 
accepted OGC Implementation Specifications.) 


The lineage of a dataset, or of a part of a larger dataset, is likely to include the original 
CRS of the positions in that data, plus the sequence of coordinate transformations used to 
change these positions into the CRS in which the data is now recorded. Alternately, one 
concatenated coordinate transformation could be recorded that includes the original CRS 
and the sequence of coordinate transformations used. Similar metadata might be recorded 
for data still in the original CRS, but planned to be converted into a different CRS. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 25 
 


Annex C 
(normative) 


 
XML schemas 


C.1 General 


This clause lists the six XML Schemas for encoding coordinate reference system and 
coordinate transformation definition data, namely: 


a) referenceSystems.xsd 


b) coordinateReferenceSystems.xsd 


c) datums.xsd 


d) coordinateSystems.xsd 


e) coordinateOperations.xsd 


f) dataQuality.xsd 


NOTE  The XML Schemas listed in this annex are directly copied from the XML Schema Document 
files attached to this document. If any differences are discovered, please notify the editor and the OGC. 


These XML Schemas include <documentation> elements for most of the XML Schema 
types defined, and for some of the XML elements defined. Where a XML element or 
attribute does not include a <documentation> element but the type it uses does, the type's 
<documentation> element applies to all the elements which use that type. These 
<documentation> elements specify the meaning of the corresponding XML elements and 
attributes. In addition, some <documentation> elements specify constraints on component 
elements and attributes. Most of the stated constraints are considered needed to fully 
comply with OGC Abstract Specification Topic 2. All the contents of the 
<documentation> elements in these schemas are normative. 


C.2 XML schema for reference systems encoding 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
version="3.1.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-
referenceSystems"/> 
  <documentation> 
   <name>referenceSystems.xsd</name> 
   <version>3.1.0</version> 
   <scope>How to encode reference system definitions. </scope> 







OGC 03-010r9 


26 © OGC 2003 – All rights reserved
 


   <description>Builds on several other parts of GML 3 to encode 
the data needed to define reference systems. Primary editor: Arliss 
Whiteside. Last updated 2003/10/16. </description> 
   <copyright>Copyright (c) 2002-2003 Open GIS Consortium, All 
Rights Reserved.</copyright> 
   <conformance>This schema encodes the Reference System (RS_) 
package of the extended UML Model for OGC Abstract Specification Topic 
2: Spatial Referencing by Coordinates. That UML model is adapted from 
ISO 19111 - Spatial referencing by coordinates, as described in Annex C 
of Topic 2. The SC_CRS class is also encoded here, to eliminate the 
(circular) references from coordinateOperations.xsd to 
coordinateReferenceSystems.xsd. The 
RS_SpatialReferenceSystemUsingGeographicIdentifier class is not 
encoded, since it is not applicable to coordinate positions. The 
CI_Citation class is not directly encoded, since such information can 
be included as metaDataProperty elements which are optionally allowed. 
A modified version of the EX_Extent (DataType) class from ISO 19115 is 
currently encoded here, using GML 3 schema types. (A more extensive 
version of the EX_Extent package might be XML encoded in the future, 
probably in a separate extent.xsd schema.) </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="dictionary.xsd"/> 
 <include schemaLocation="geometryBasic2d.xsd"/> 
 <include schemaLocation="temporal.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="_ReferenceSystem" 
type="gml:AbstractReferenceSystemType" abstract="true" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractReferenceSystemBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for reference system objects, 
simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this reference system, including source information. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:srsName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 27 
 


 </complexType> 
 <!-- =================================================== --> 
 <element name="srsName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
 
  <annotation> 
   <documentation>The name by which this reference system is 
identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="AbstractReferenceSystemType" abstract="true"> 
  <annotation> 
   <documentation>Description of a spatial and/or temporal 
reference system used by a dataset. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractReferenceSystemBaseType"> 
    <sequence> 
     <element ref="gml:srsID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alterative identifications 
of this reference system. The first srsID, if any, is normally the 
primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="srsID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of a reference system. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="referenceSystemRef" type="gml:ReferenceSystemRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="ReferenceSystemRefType"> 
  <annotation> 
   <documentation>Association to a reference system, either 
referencing or containing the definition of that reference system. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:_ReferenceSystem" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 







OGC 03-010r9 


28 © OGC 2003 – All rights reserved
 


  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="_CRS" type="gml:AbstractCRSType" abstract="true" 
substitutionGroup="gml:_ReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractCRSType" abstract="true"> 
  <annotation> 
   <documentation>Abstract coordinate reference system, usually 
defined by a coordinate system and a datum. This abstract complexType 
shall not be used, extended, or restricted, in an Application Schema, 
to define a concrete subtype with a meaning equivalent to a concrete 
subtype specified in this document. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractReferenceSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="crsRef" type="gml:CRSRefType" 
substitutionGroup="gml:referenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="CRSRefType"> 
  <annotation> 
   <documentation>Association to a CRS abstract coordinate 
reference system, either referencing or containing the definition of 
that CRS. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:ReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:_CRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <complexType name="SimpleNameType"> 
  <annotation> 
   <documentation>The primary name of a reference system object. 
The string in the CodeType contains the object identification name, and 
the codeSpace attribute is not included. </documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" 
use="prohibited"/> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="IdentifierType"> 
  <annotation> 
   <documentation>An identification of a CRS object. The first 
use of the IdentifierType for an object, if any, is normally the 







OGC 03-010r9 


© OGC 2003 – All rights reserved 29 
 


primary identification code, and any others are aliases. 
</documentation> 
  </annotation> 
  <sequence> 
   <element ref="gml:name"> 
    <annotation> 
     <documentation>The code or name for this Identifier, 
often from a controlled list or pattern defined by a code space. The 
optional codeSpace attribute is normally included to identify or 
reference a code space within which one or more codes are defined. This 
code space is often defined by some authority organization, where one 
organization may define multiple code spaces. The range and format of 
each Code Space identifier is defined by that code space authority. 
Information about that code space authority can be included as 
metaDataProperty elements which are optionally allowed in all CRS 
objects. </documentation> 
    </annotation> 
   </element> 
   <element ref="gml:version" minOccurs="0"/> 
   <element ref="gml:remarks" minOccurs="0"> 
    <annotation> 
     <documentation>Remarks about this code or alias. 
</documentation> 
    </annotation> 
   </element> 
  </sequence> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="version" type="string"> 
  <annotation> 
   <documentation>Identifier of the version of the associated 
codeSpace or code, as specified by the codeSpace or code authority. 
This version is included only when the "code" or "codeSpace" uses 
versions. When appropriate, the version is identified by the effective 
date, coded using ISO 8601 date format. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="remarks" type="gml:StringOrRefType" 
substitutionGroup="gml:description"> 
  <annotation> 
   <documentation>Information about this object or code. Contains 
text or refers to external text.  </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="scope" type="string"> 
  <annotation> 
   <documentation>Description of domain of usage, or limitations 
of usage, for which this CRS object is valid. </documentation> 
  </annotation> 
 </element> 
 
 <!-- =================================================== --> 
 <element name="validArea" type="gml:ExtentType"> 
  <annotation> 
   <documentation>Area or region in which this CRS object is 
valid. </documentation> 







OGC 03-010r9 


30 © OGC 2003 – All rights reserved
 


  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="ExtentType"> 
  <annotation> 
   <documentation>Information about the spatial, vertical, and/or 
temporal extent of a reference system object. Constraints: At least one 
of the elements "description", "boundingBox", "boundingPolygon", 
"verticalExtent", and temporalExtent" must be included, but more that 
one can be included when appropriate. Furthermore, more than one 
"boundingBox", "boundingPolygon", "verticalExtent", and/or 
temporalExtent" element can be included, with more than one meaning the 
union of the individual domains. </documentation> 
  </annotation> 
  <sequence> 
   <element ref="gml:description" minOccurs="0"> 
    <annotation> 
     <documentation>Description of spatial and/or temporal 
extent of this object. </documentation> 
    </annotation> 
   </element> 
   <choice> 
    <annotation> 
     <documentation>Geographic domain of this reference 
system object. </documentation> 
    </annotation> 
    <element ref="gml:boundingBox" minOccurs="0" 
maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Unordered list of bounding boxes (or 
envelopes) whose union describes the spatial domain of this object. 
</documentation> 
     </annotation> 
    </element> 
    <element ref="gml:boundingPolygon" minOccurs="0" 
maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Unordered list of bounding polygons 
whose union describes the spatial domain of this object. 
</documentation> 
     </annotation> 
    </element> 
   </choice> 
   <element ref="gml:verticalExtent" minOccurs="0" 
maxOccurs="unbounded"> 
    <annotation> 
     <documentation>Unordered list of vertical intervals 
whose union describes the spatial domain of this object. 
</documentation> 
    </annotation> 
   </element> 
   <element ref="gml:temporalExtent" minOccurs="0" 
maxOccurs="unbounded"> 
    <annotation> 
     <documentation>Unordered list of time periods whose 
union describes the spatial domain of this object. </documentation> 
    </annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 31 
 


   </element> 
  </sequence> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="boundingBox" type="gml:EnvelopeType"> 
  <annotation> 
   <documentation>A bounding box (or envelope) defining the 
spatial domain of this object. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="boundingPolygon" type="gml:PolygonType"> 
  <annotation> 
   <documentation>A bounding polygon defining the horizontal 
spatial domain of this object. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="verticalExtent" type="gml:EnvelopeType"> 
  <annotation> 
   <documentation>An interval defining the vertical spatial 
domain of this object. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="temporalExtent" type="gml:TimePeriodType"> 
  <annotation> 
   <documentation>A time period defining the temporal domain of 
this object. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
</schema> 
 


C.3 XML schema for coordinate reference systems encoding 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
version="3.1.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-
coordinateReferenceSystems"/> 
  <documentation> 
   <name>coordinateReferenceSystems.xsd</name> 
   <version>3.1.0</version> 
   <scope>How to encode coordinate reference system definitions. 
</scope> 
   <description>Builds on referenceSystems.xsd to encode the data 
needed to define coordinate reference systems, including the specific 
subtypes of coordinate reference systems. Primary editor: Arliss 
Whiteside. Last updated 2003/10/16. </description> 
   <copyright>Copyright (c) 2002-2003 Open GIS Consortium, All 
Rights Reserved.</copyright> 
   <conformance>This schema encodes the Coordinate Reference 
System (SC_) package of the extended UML Model for OGC Abstract 







OGC 03-010r9 


32 © OGC 2003 – All rights reserved
 


Specification Topic 2: Spatial Referencing by Coordinates, with the 
exception of the abstract "SC_CRS" class. The "SC_CRS" class is encoded 
in referenceSystems.xsd, to eliminate the (circular) references from 
coordinateOperations.xsd to coordinateReferenceSystems.xsd. That UML 
model is adapted from ISO 19111 - Spatial referencing by coordinates, 
as described in Annex C of Topic 2. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="coordinateSystems.xsd"/> 
 <include schemaLocation="datums.xsd"/> 
 <include schemaLocation="coordinateOperations.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="_CoordinateReferenceSystem" 
type="gml:AbstractCoordinateReferenceSystemType" abstract="true" 
substitutionGroup="gml:_CRS"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractCoordinateReferenceSystemType" 
abstract="true"> 
  <annotation> 
   <documentation>A coordinate reference system consists of an 
ordered sequence of coordinate system axes that are related to the 
earth through a datum. A coordinate reference system is defined by one 
datum and by one coordinate system. Most coordinate reference system do 
not move relative to the earth, except for engineering coordinate 
reference systems defined on moving platforms such as cars, ships, 
aircraft, and spacecraft. For further information, see OGC Abstract 
Specification Topic 2. 
 
Coordinate reference systems are commonly divided into sub-types. The 
common classification criterion for sub-typing of coordinate reference 
systems is the way in which they deal with earth curvature. This has a 
direct effect on the portion of the earth's surface that can be covered 
by that type of CRS with an acceptable degree of error. The exception 
to the rule is the subtype "Temporal" which has been added by analogy. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCRSType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="coordinateReferenceSystemRef" 
type="gml:CoordinateReferenceSystemRefType" 
substitutionGroup="gml:crsRef"/> 
 <!-- =================================================== --> 
 <complexType name="CoordinateReferenceSystemRefType"> 
  <annotation> 
   <documentation>Association to a coordinate reference system, 
either referencing or containing the definition of that reference 
system. </documentation> 
  </annotation> 
  <complexContent> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 33 
 


   <restriction base="gml:CRSRefType"> 
    <sequence> 
     <element ref="gml:_CoordinateReferenceSystem" 
minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="CompoundCRS" type="gml:CompoundCRSType" 
substitutionGroup="gml:_CRS"/> 
 <!-- =================================================== --> 
 <complexType name="CompoundCRSType"> 
  <annotation> 
   <documentation>A coordinate reference system describing the 
position of points through two or more independent coordinate reference 
systems. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCRSType"> 
    <sequence> 
     <element ref="gml:includesCRS" minOccurs="2" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Ordered sequence of associations to 
all the component coordinate reference systems included in this 
compound coordinate reference system. </documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesCRS" 
type="gml:CoordinateReferenceSystemRefType"> 
  <annotation> 
   <documentation>An association to a component coordinate 
reference system included in this compound coordinate reference system. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="compoundCRSRef" type="gml:CompoundCRSRefType" 
substitutionGroup="gml:crsRef"/> 
 <!-- =================================================== --> 
 <complexType name="CompoundCRSRefType"> 
  <annotation> 
   <documentation>Association to a compound coordinate reference 
system, either referencing or containing the definition of that 
reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CRSRefType"> 
    <sequence> 
     <element ref="gml:CompoundCRS" minOccurs="0"/> 
    </sequence> 







OGC 03-010r9 


34 © OGC 2003 – All rights reserved
 


    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="GeographicCRS" type="gml:GeographicCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="GeographicCRSType"> 
  <annotation> 
   <documentation>A coordinate reference system based on an 
ellipsoidal approximation of the geoid; this provides an accurate 
representation of the geometry of geographic features for a large 
portion of the earth's surface.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     <element ref="gml:usesEllipsoidalCS"/> 
     <element ref="gml:usesGeodeticDatum"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesEllipsoidalCS" type="gml:EllipsoidalCSRefType"> 
 
  <annotation> 
   <documentation>Association to the ellipsoidal coordinate 
system used by this CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesGeodeticDatum" type="gml:GeodeticDatumRefType"> 
  <annotation> 
   <documentation>Association to the geodetic datum used by this 
CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="geographicCRSRef" type="gml:GeographicCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeographicCRSRefType"> 
  <annotation> 
   <documentation>Association to a geographic coordinate 
reference system, either referencing or containing the definition of 
that reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:GeographicCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 35 
 


 </complexType> 
 <!-- =================================================== --> 
 <element name="VerticalCRS" type="gml:VerticalCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="VerticalCRSType"> 
  <annotation> 
   <documentation>A 1D coordinate reference system used for 
recording heights or depths. Vertical CRSs make use of the direction of 
gravity to define the concept of height or depth, but the relationship 
with gravity may not be straightforward. By implication, ellipsoidal 
heights (h) cannot be captured in a vertical coordinate reference 
system. Ellipsoidal heights cannot exist independently, but only as an 
inseparable part of a 3D coordinate tuple defined in a geographic 3D 
coordinate reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     <element ref="gml:usesVerticalCS"/> 
     <element ref="gml:usesVerticalDatum"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesVerticalCS" type="gml:VerticalCSRefType"> 
  <annotation> 
   <documentation>Association to the vertical coordinate system 
used by this CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesVerticalDatum" type="gml:VerticalDatumRefType"> 
  <annotation> 
   <documentation>Association to the vertical datum used by this 
CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="verticalCRSRef" type="gml:VerticalCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="VerticalCRSRefType"> 
  <annotation> 
   <documentation>Association to a vertical coordinate reference 
system, either referencing or containing the definition of that 
reference system. </documentation> 
  </annotation> 
  <complexContent> 
 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:VerticalCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 







OGC 03-010r9 


36 © OGC 2003 – All rights reserved
 


 </complexType> 
 <!-- =================================================== --> 
 <element name="GeocentricCRS" type="gml:GeocentricCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="GeocentricCRSType"> 
  <annotation> 
   <documentation>A 3D coordinate reference system with the 
origin at the approximate centre of mass of the earth. A geocentric CRS 
deals with the earth's curvature by taking a 3D spatial view, which 
obviates the need to model the earth's curvature. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     <choice> 
      <element ref="gml:usesCartesianCS"/> 
      <element ref="gml:usesSphericalCS"/> 
     </choice> 
     <element ref="gml:usesGeodeticDatum"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesCartesianCS" type="gml:CartesianCSRefType"> 
  <annotation> 
   <documentation>Association to the Cartesian coordinate system 
used by this CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesSphericalCS" type="gml:SphericalCSRefType"> 
  <annotation> 
   <documentation>Association to the spherical coordinate system 
used by this CRS.</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="geocentricCRSRef" type="gml:GeocentricCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeocentricCRSRefType"> 
  <annotation> 
   <documentation>Association to a geocentric coordinate 
reference system, either referencing or containing the definition of 
that reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:GeocentricCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 37 
 


 <!-- =================================================== --> 
 <element name="_GeneralDerivedCRS" 
type="gml:AbstractGeneralDerivedCRSType" abstract="true" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralDerivedCRSType" abstract="true"> 
  <annotation> 
   <documentation>A coordinate reference system that is defined 
by its coordinate conversion from another coordinate reference system 
(not by a datum). This abstract complexType shall not be used, 
extended, or restricted, in an Application Schema, to define a concrete 
subtype with a meaning equivalent to a concrete subtype specified in 
this document. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     <element ref="gml:baseCRS"/> 
     <element ref="gml:definedByConversion"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="baseCRS" type="gml:CoordinateReferenceSystemRefType"> 
  <annotation> 
   <documentation>Association to the coordinate reference system 
used by this derived CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="definedByConversion" 
type="gml:GeneralConversionRefType"> 
  <annotation> 
   <documentation>Association to the coordinate conversion used 
to define this derived CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="generalDerivedCRSRef" 
type="gml:GeneralDerivedCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeneralDerivedCRSRefType"> 
  <annotation> 
   <documentation>Association to a general derived coordinate 
reference system, either referencing or containing the definition of 
that reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:_GeneralDerivedCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 







OGC 03-010r9 


38 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <element name="ProjectedCRS" type="gml:ProjectedCRSType" 
substitutionGroup="gml:_GeneralDerivedCRS"/> 
 <!-- =================================================== --> 
 <complexType name="ProjectedCRSType"> 
  <annotation> 
   <documentation>A 2D coordinate reference system used to 
approximate the shape of the earth on a planar surface, but in such a 
way that the distortion that is inherent to the approximation is 
carefully controlled and known. Distortion correction is commonly 
applied to calculated bearings and distances to produce values that are 
a close match to actual field values. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralDerivedCRSType"> 
    <sequence> 
     <element ref="gml:usesCartesianCS"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="projectedCRSRef" type="gml:ProjectedCRSRefType" 
substitutionGroup="gml:generalDerivedCRSRef"/> 
 <!-- =================================================== --> 
 <complexType name="ProjectedCRSRefType"> 
  <annotation> 
   <documentation>Association to a projected coordinate reference 
system, either referencing or containing the definition of that 
reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralDerivedCRSRefType"> 
    <sequence> 
     <element ref="gml:ProjectedCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="DerivedCRS" type="gml:DerivedCRSType" 
substitutionGroup="gml:_GeneralDerivedCRS"/> 
 <!-- =================================================== --> 
 <complexType name="DerivedCRSType"> 
  <annotation> 
   <documentation>A coordinate reference system that is defined 
by its coordinate conversion from another coordinate reference system 
but is not a projected coordinate reference system. This category 
includes coordinate reference systems derived from a projected 
coordinate reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralDerivedCRSType"> 
    <sequence> 
     <element ref="gml:derivedCRSType"/> 
     <element ref="gml:usesCS"/> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 39 
 


    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="derivedCRSType" type="gml:DerivedCRSTypeType"/> 
 <!-- =================================================== --> 
 <complexType name="DerivedCRSTypeType"> 
  <annotation> 
   <documentation>Type of a derived coordinate reference system. 
</documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" use="required"> 
     <annotation> 
      <documentation>Reference to a source of information 
specifying the values and meanings of all the allowed string values for 
this DerivedCRSTypeType. </documentation> 
     </annotation> 
    </attribute> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesCS" type="gml:CoordinateSystemRefType"> 
  <annotation> 
   <documentation>Association to the coordinate system used by 
this CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="derivedCRSRef" type="gml:DerivedCRSRefType" 
substitutionGroup="gml:generalDerivedCRSRef"/> 
 <!-- =================================================== --> 
 <complexType name="DerivedCRSRefType"> 
  <annotation> 
   <documentation>Association to a non-projected derived 
coordinate reference system, either referencing or containing the 
definition of that reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralDerivedCRSRefType"> 
    <sequence> 
     <element ref="gml:DerivedCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="EngineeringCRS" type="gml:EngineeringCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="EngineeringCRSType"> 
  <annotation> 
   <documentation>A contextually local coordinate reference 
system; which can be divided into two broad categories: 







OGC 03-010r9 


40 © OGC 2003 – All rights reserved
 


- earth-fixed systems applied to engineering activities on or near the 
surface of the earth; 
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or 
spacecraft. 
For further information, see OGC Abstract Specification Topic 2. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     <element ref="gml:usesCS"/> 
     <element ref="gml:usesEngineeringDatum"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesEngineeringDatum" 
type="gml:EngineeringDatumRefType"> 
  <annotation> 
   <documentation>Association to the engineering datum used by 
this CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="engineeringCRSRef" type="gml:EngineeringCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="EngineeringCRSRefType"> 
  <annotation> 
   <documentation>Association to an engineering coordinate 
reference system, either referencing or containing the definition of 
that reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:EngineeringCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="ImageCRS" type="gml:ImageCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="ImageCRSType"> 
  <annotation> 
   <documentation>An engineering coordinate reference system 
applied to locations in images. Image coordinate reference systems are 
treated as a separate sub-type because a separate user community exists 
for images with its own terms of reference. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 41 
 


     <choice> 
      <element ref="gml:usesCartesianCS"/> 
      <element ref="gml:usesObliqueCartesianCS"/> 
     </choice> 
     <element ref="gml:usesImageDatum"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesObliqueCartesianCS" 
type="gml:ObliqueCartesianCSRefType"> 
  <annotation> 
   <documentation>Association to the oblique Cartesian coordinate 
system used by this CRS.</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesImageDatum" type="gml:ImageDatumRefType"> 
  <annotation> 
   <documentation>Association to the image datum used by this 
CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="imageCRSRef" type="gml:ImageCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="ImageCRSRefType"> 
  <annotation> 
   <documentation>Association to an image coordinate reference 
system, either referencing or containing the definition of that 
reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:ImageCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="TemporalCRS" type="gml:TemporalCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="TemporalCRSType"> 
  <annotation> 
   <documentation>A 1D coordinate reference system used for the 
recording of time. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     <element ref="gml:usesTemporalCS"/> 
     <element ref="gml:usesTemporalDatum"/> 
    </sequence> 







OGC 03-010r9 


42 © OGC 2003 – All rights reserved
 


   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesTemporalCS" type="gml:TemporalCSRefType"> 
  <annotation> 
   <documentation>Association to the temporal coordinate system 
used by this CRS. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesTemporalDatum" type="gml:TemporalDatumRefType"> 
  <annotation> 
   <documentation>Association to the temporal datum used by this 
CRS. </documentation> 
  </annotation> 
 
 </element> 
 <!-- =================================================== --> 
 <element name="temporalCRSRef" type="gml:TemporalCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="TemporalCRSRefType"> 
  <annotation> 
   <documentation>Association to a temporal coordinate reference 
system, either referencing or containing the definition of that 
reference system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:TemporalCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
</schema> 
  


C.4 XML schema for datums encoding 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:gml="http://www.opengis.net/gml" elementFormDefault="qualified" 
version="3.1.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-datums"/> 
  <documentation> 
   <name>datums.xsd</name> 
   <version>3.1.0</version> 
   <scope>How to encode datum definitions. </scope> 
   <description>Builds on referenceSystems.xsd to encode the data 
needed to define datums, including the specific subtypes of datums. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 43 
 


Primary editor: Arliss Whiteside. Last updated 2003/10/16. 
</description> 
   <copyright>Copyright (c) 2002-2003 Open GIS Consortium, All 
Rights Reserved.</copyright> 
   <conformance>This schema encodes the Datum (CD_) package of 
the extended UML Model for OGC Abstract Specification Topic 2: Spatial 
Referencing by Coordinates. That UML model is adapted from ISO 19111 - 
Spatial referencing by coordinates, as described in Annex C of Topic 2. 
</conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="referenceSystems.xsd"/> 
 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="_Datum" type="gml:AbstractDatumType" abstract="true" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractDatumBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for datum objects, simplifying 
and restricting the DefinitionType as needed. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on this reference system, 
including source information. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:datumName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="datumName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this datum is identified. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="AbstractDatumType" abstract="true"> 
  <annotation> 
   <documentation>A datum specifies the relationship of a 
coordinate system to the earth, thus creating a coordinate reference 
system. A datum uses a parameter or set of parameters that determine 







OGC 03-010r9 


44 © OGC 2003 – All rights reserved
 


the location of the origin of the coordinate reference system. Each 
datum subtype can be associated with only specific types of coordinate 
systems. This abstract complexType shall not be used, extended, or 
restricted, in an Application Schema, to define a concrete subtype with 
a meaning equivalent to a concrete subtype specified in this document. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractDatumBaseType"> 
    <sequence> 
     <element ref="gml:datumID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this datum. The first datumID, if any, is normally the primary 
identification code, and any others are aliases. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:anchorPoint" minOccurs="0"/> 
     <element ref="gml:realizationEpoch" minOccurs="0"/> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="datumID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of a datum. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="anchorPoint" type="gml:CodeType"> 
  <annotation> 
   <documentation>Description, possibly including coordinates, of 
the point or points used to anchor the datum to the Earth. Also known 
as the "origin", especially for engineering and image datums. The 
codeSpace attribute can be used to reference a source of more detailed 
on this point or surface, or on a set of such descriptions.  
- For a geodetic datum, this point is also known as the fundamental 
point, which is traditionally the point where the relationship between 
geoid and ellipsoid is defined. In some cases, the "fundamental point" 
may consist of a number of points. In those cases, the parameters 
defining the geoid/ellipsoid relationship have been averaged for these 
points, and the averages adopted as the datum definition. 
- For an engineering datum, the anchor point may be a physical point, 
or it may be a point with defined coordinates in another CRS. When 
appropriate, the coordinates of this anchor point can be referenced in 
another document, such as referencing a GML feature that references or 
includes a point position. 
- For an image datum, the anchor point is usually either the centre of 
the image or the corner of the image. 
- For a temporal datum, this attribute is not defined. Instead of the 
anchor point, a temporal datum carries a separate time origin of type 
DateTime. </documentation> 
  </annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 45 
 


 </element> 
 <!-- =================================================== --> 
 <element name="realizationEpoch" type="date"> 
  <annotation> 
   <documentation>The time after which this datum definition is 
valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a 
year (e.g. 1983 for NAD83). In the latter case, the epoch usually 
refers to the year in which a major recalculation of the geodetic 
control network, underlying the datum, was executed or initiated. An 
old datum can remain valid after a new datum is defined. Alternatively, 
a datum may be superseded by a later datum, in which case the 
realization epoch for the new datum defines the upper limit for the 
validity of the superseded datum. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="datumRef" type="gml:DatumRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="DatumRefType"> 
  <annotation> 
   <documentation>Association to a datum, either referencing or 
containing the definition of that datum. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:_Datum" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="EngineeringDatum" type="gml:EngineeringDatumType" 
substitutionGroup="gml:_Datum"/> 
 <!-- =================================================== --> 
 <complexType name="EngineeringDatumType"> 
  <annotation> 
   <documentation>An engineering datum defines the origin of an 
engineering coordinate reference system, and is used in a region around 
that origin. This origin can be fixed with respect to the earth (such 
as a defined point at a construction site), or be a defined point on a 
moving vehicle (such as on a ship or satellite). </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractDatumType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="engineeringDatumRef" 
type="gml:EngineeringDatumRefType" substitutionGroup="gml:datumRef"/> 
 <!-- =================================================== --> 
 <complexType name="EngineeringDatumRefType"> 
  <annotation> 
   <documentation>Association to an engineering datum, either 
referencing or containing the definition of that datum. 
</documentation> 







OGC 03-010r9 


46 © OGC 2003 – All rights reserved
 


  </annotation> 
  <complexContent> 
   <restriction base="gml:DatumRefType"> 
    <sequence> 
     <element ref="gml:EngineeringDatum" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="ImageDatum" type="gml:ImageDatumType" 
substitutionGroup="gml:_Datum"/> 
 <!-- =================================================== --> 
 <complexType name="ImageDatumType"> 
  <annotation> 
   <documentation>An image datum defines the origin of an image 
coordinate reference system, and is used in a local context only. For 
more information, see OGC Abstract Specification Topic 2. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractDatumType"> 
    <sequence> 
     <element ref="gml:pixelInCell"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="pixelInCell" type="gml:PixelInCellType"/> 
 <!-- =================================================== --> 
 <complexType name="PixelInCellType"> 
  <annotation> 
   <documentation>Specification of the way an image grid is 
associated with the image data attributes. </documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" use="required"> 
     <annotation> 
      <documentation>Reference to a source of information 
specifying the values and meanings of all the allowed string values for 
this PixelInCellType. </documentation> 
     </annotation> 
    </attribute> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="imageDatumRef" type="gml:ImageDatumRefType" 
substitutionGroup="gml:datumRef"/> 
 <!-- =================================================== --> 
 <complexType name="ImageDatumRefType"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 47 
 


   <documentation>Association to an image datum, either 
referencing or containing the definition of that datum. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DatumRefType"> 
    <sequence> 
     <element ref="gml:ImageDatum" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="VerticalDatum" type="gml:VerticalDatumType" 
substitutionGroup="gml:_Datum"/> 
 <!-- =================================================== --> 
 <complexType name="VerticalDatumType"> 
  <annotation> 
   <documentation>A textual description and/or a set of 
parameters identifying a particular reference level surface used as a 
zero-height surface, including its position with respect to the Earth 
for any of the height types recognized by this standard. There are 
several types of Vertical Datums, and each may place constraints on the 
Coordinate Axis with which it is combined to create a Vertical CRS. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractDatumType"> 
    <sequence> 
     <element ref="gml:verticalDatumType" minOccurs="0"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 
 <element name="verticalDatumType" type="gml:VerticalDatumTypeType"/> 
 <!-- =================================================== --> 
 <complexType name="VerticalDatumTypeType"> 
  <annotation> 
   <documentation>Type of a vertical datum. </documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" use="required"> 
     <annotation> 
      <documentation>Reference to a source of information 
specifying the values and meanings of all the allowed string values for 
this VerticalDatumTypeType. </documentation> 
     </annotation> 
    </attribute> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="verticalDatumRef" type="gml:VerticalDatumRefType" 
substitutionGroup="gml:datumRef"/> 







OGC 03-010r9 


48 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <complexType name="VerticalDatumRefType"> 
  <annotation> 
   <documentation>Association to a vertical datum, either 
referencing or containing the definition of that datum. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DatumRefType"> 
    <sequence> 
     <element ref="gml:VerticalDatum" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="TemporalDatum" type="gml:TemporalDatumType" 
substitutionGroup="gml:_Datum"/> 
 <!-- =================================================== --> 
 <complexType name="TemporalDatumBaseType" abstract="true"> 
  <annotation> 
   <documentation>Partially defines the origin of a temporal 
coordinate reference system. This type restricts the AbstractDatumType 
to remove the "anchorPoint" and "realizationEpoch" elements. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractDatumType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:datumName"/> 
     <element ref="gml:datumID" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="TemporalDatumType"> 
  <annotation> 
   <documentation>Defines the origin of a temporal coordinate 
reference system. This type extends the TemporalDatumRestrictionType to 
add the "origin" element with the dateTime type. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:TemporalDatumBaseType"> 
    <sequence> 
     <element ref="gml:origin"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 49 
 


 <!-- =================================================== --> 
 <element name="origin" type="dateTime"> 
  <annotation> 
   <documentation>The date and time origin of this temporal 
datum. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="temporalDatumRef" type="gml:TemporalDatumRefType" 
substitutionGroup="gml:datumRef"/> 
 <!-- =================================================== --> 
 <complexType name="TemporalDatumRefType"> 
  <annotation> 
   <documentation>Association to a temporal datum, either 
referencing or containing the definition of that datum. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DatumRefType"> 
    <sequence> 
     <element ref="gml:TemporalDatum" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="GeodeticDatum" type="gml:GeodeticDatumType" 
substitutionGroup="gml:_Datum"/> 
 <!-- =================================================== --> 
 <complexType name="GeodeticDatumType"> 
  <annotation> 
   <documentation>A geodetic datum defines the precise location 
and orientation in 3-dimensional space of a defined ellipsoid (or 
sphere) that approximates the shape of the earth, or of a Cartesian 
coordinate system centered in this ellipsoid (or sphere). 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractDatumType"> 
    <sequence> 
     <element ref="gml:usesPrimeMeridian"/> 
     <element ref="gml:usesEllipsoid"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesPrimeMeridian" type="gml:PrimeMeridianRefType"> 
  <annotation> 
   <documentation>Association to the prime meridian used by this 
geodetic datum. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesEllipsoid" type="gml:EllipsoidRefType"> 
  <annotation> 







OGC 03-010r9 


50 © OGC 2003 – All rights reserved
 


   <documentation>Association to the ellipsoid used by this 
geodetic datum. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="geodeticDatumRef" type="gml:GeodeticDatumRefType" 
substitutionGroup="gml:datumRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeodeticDatumRefType"> 
  <annotation> 
   <documentation>Association to a geodetic datum, either 
referencing or containing the definition of that datum. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DatumRefType"> 
    <sequence> 
     <element ref="gml:GeodeticDatum" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="PrimeMeridian" type="gml:PrimeMeridianType" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="PrimeMeridianBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for prime meridian objects, 
simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this prime meridian, including source information. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:meridianName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="meridianName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this prime meridian is 
identified. The meridianName most common value is â€œGreenwichâ€�, and 







OGC 03-010r9 


© OGC 2003 – All rights reserved 51 
 


that value shall be used when the greenwichLongitude value is zero. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="PrimeMeridianType"> 
  <annotation> 
   <documentation>A prime meridian defines the origin from which 
longitude values are determined.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:PrimeMeridianBaseType"> 
    <sequence> 
     <element ref="gml:meridianID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this prime meridian. The first meridianID, if any, is normally the 
primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:greenwichLongitude"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="meridianID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of a prime meridian. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="greenwichLongitude" type="gml:AngleChoiceType"> 
  <annotation> 
   <documentation>Longitude of the prime meridian measured from 
the Greenwich meridian, positive eastward. The greenwichLongitude most 
common value is zero, and that value shall be used when the 
meridianName value is â€œGreenwichâ€�. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="primeMeridianRef" type="gml:PrimeMeridianRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="PrimeMeridianRefType"> 
  <annotation> 
   <documentation>Association to a prime meridian, either 
referencing or containing the definition of that meridian. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:PrimeMeridian" minOccurs="0"/> 
    </sequence> 







OGC 03-010r9 


52 © OGC 2003 – All rights reserved
 


    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="Ellipsoid" type="gml:EllipsoidType" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="EllipsoidBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for ellipsoid objects, 
simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this ellipsoid, including source information. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:ellipsoidName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="ellipsoidName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this ellipsoid is identified. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="EllipsoidType"> 
  <annotation> 
   <documentation>An ellipsoid is a geometric figure that can be 
used to describe the approximate shape of the earth. In mathematical 
terms, it is a surface formed by the rotation of an ellipse about its 
minor axis.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:EllipsoidBaseType"> 
    <sequence> 
     <element ref="gml:ellipsoidID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this ellipsoid. The first ellipsoidID, if any, is normally the 
primary identification code, and any others are aliases. 
</documentation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 53 
 


      </annotation> 
     </element> 
     <element ref="gml:semiMajorAxis"/> 
     <element ref="gml:secondDefiningParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="ellipsoidID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of an ellipsoid. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="semiMajorAxis" type="gml:LengthType"> 
  <annotation> 
   <documentation>Length of the semi-major axis of the ellipsoid. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="ellipsoidRef" type="gml:EllipsoidRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="EllipsoidRefType"> 
  <annotation> 
   <documentation>Association to an ellipsoid, either referencing 
or containing the definition of that ellipsoid. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:Ellipsoid" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="secondDefiningParameter" 
type="gml:SecondDefiningParameterType"/> 
 <!-- =================================================== --> 
 <complexType name="SecondDefiningParameterType"> 
  <annotation> 
   <documentation>Definition of the second parameter that defines 
the shape of an ellipsoid. An ellipsoid requires two defining 
parameters: semi-major axis and inverse flattening or semi-major axis 
and semi-minor axis. When the reference body is a sphere rather than an 
ellipsoid, only a single defining parameter is required, namely the 
radius of the sphere; in that case, the semi-major axis "degenerates" 
into the radius of the sphere.</documentation> 
  </annotation> 
  <choice> 
   <element ref="gml:inverseFlattening"/> 
   <element ref="gml:semiMinorAxis"/> 
   <element ref="gml:isSphere"/> 







OGC 03-010r9 


54 © OGC 2003 – All rights reserved
 


  </choice> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="inverseFlattening" type="gml:ScaleType"> 
  <annotation> 
   <documentation>Inverse flattening value of the ellipsoid. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="semiMinorAxis" type="gml:LengthType"> 
  <annotation> 
   <documentation>Length of the semi-minor axis of the ellipsoid. 
</documentation> 
 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="isSphere"> 
  <annotation> 
   <documentation>The ellipsoid is degenerate and is actually a 
sphere. The sphere is completely defined by the semi-major axis, which 
is the radius of the sphere. </documentation> 
  </annotation> 
  <simpleType> 
   <restriction base="string"> 
    <enumeration value="sphere"/> 
   </restriction> 
  </simpleType> 
 </element> 
 <!-- =================================================== --> 
</schema> 
 


C.5 XML schema for coordinate systems encoding 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:gml="http://www.opengis.net/gml" elementFormDefault="qualified" 
version="3.1.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-
coordinateSystems"/> 
  <documentation> 
   <name>coordinateSystems.xsd</name> 
   <version>3.1.0</version> 
   <scope>How to encode coordinate system definitions. </scope> 
   <description>Builds on referenceSystems.xsd to encode the data 
needed to define coordinate systems, including the specific subtypes of 
coordinate systems. Primary editor: Arliss Whiteside. Last updated 
2003/10/16. </description> 
   <copyright>Copyright (c) 2002-2003 OpenGIS, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes the Coordinate System (CS_) 
package of the extended UML Model for OGC Abstract Specification Topic 







OGC 03-010r9 


© OGC 2003 – All rights reserved 55 
 


2: Spatial Referencing by Coordinates. That UML model is adapted from 
ISO 19111 - Spatial referencing by coordinates, as described in Annex C 
of Topic 2. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="referenceSystems.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="CoordinateSystemAxis" 
type="gml:CoordinateSystemAxisType" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="CoordinateSystemAxisBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for coordinate system axis 
objects, simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this coordinate system axis, including data source information. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:axisName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="axisName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this coordinate system axis 
is identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="CoordinateSystemAxisType"> 
  <annotation> 
   <documentation>Definition of a coordinate system axis. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:CoordinateSystemAxisBaseType"> 
    <sequence> 







OGC 03-010r9 


56 © OGC 2003 – All rights reserved
 


     <element ref="gml:axisID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this coordinate system axis. The first axisID, if any, is normally 
the primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:axisAbbrev"/> 
     <element ref="gml:axisDirection"/> 
    </sequence> 
    <attribute ref="gml:uom" use="required"/> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="axisID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of a coordinate system axis. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="axisAbbrev" type="gml:CodeType"> 
  <annotation> 
   <documentation>The abbreviation used for this coordinate 
system axis. This abbreviation can be used to identify the ordinates in 
a coordinate tuple. Examples are X and Y. The codeSpace attribute can 
reference a source of more information on a set of standardized 
abbreviations, or on this abbreviation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="axisDirection" type="gml:CodeType"> 
  <annotation> 
   <documentation>Direction of this coordinate system axis (or in 
the case of Cartesian projected coordinates, the direction of this 
coordinate system axis at the origin). Examples: north or south, east 
or west, up or down. Within any set of coordinate system axes, only one 
of each pair of terms can be used. For earth-fixed CRSs, this direction 
is often approximate and intended to provide a human interpretable 
meaning to the axis. When a geodetic datum is used, the precise 
directions of the axes may therefore vary slightly from this 
approximate direction. Note that an EngineeringCRS can include specific 
descriptions of the directions of its coordinate system axes. For 
example, the path of a linear CRS axis can be referenced in another 
document, such as referencing a GML feature that references or includes 
a curve geometry. The codeSpace attribute can reference a source of 
more information on a set of standardized directions, or on this 
direction. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <attribute name="uom" type="anyURI"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 57 
 


   <documentation>Identifier of the unit of measure used for this 
coordinate system axis. The value of this coordinate in a coordinate 
tuple shall be recorded using this unit of measure, whenever those 
coordinates use a coordinate reference system that uses a coordinate 
system that uses this axis.</documentation> 
  </annotation> 
 </attribute> 
 <!-- =================================================== --> 
 <element name="coordinateSystemAxisRef" 
type="gml:CoordinateSystemAxisRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="CoordinateSystemAxisRefType"> 
  <annotation> 
   <documentation>Association to a coordinate system axis, either 
referencing or containing the definition of that axis. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:CoordinateSystemAxis" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="_CoordinateSystem" 
type="gml:AbstractCoordinateSystemType" abstract="true" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractCoordinateSystemBaseType" 
abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for coordinate system objects, 
simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this coordinate system, including data source information. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:csName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 







OGC 03-010r9 


58 © OGC 2003 – All rights reserved
 


 <element name="csName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this coordinate system is 
identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="AbstractCoordinateSystemType" abstract="true"> 
  <annotation> 
   <documentation>A coordinate system (CS) is the set of 
coordinate system axes that spans a given coordinate space. A CS is 
derived from a set of (mathematical) rules for specifying how 
coordinates in a given space are to be assigned to points. The 
coordinate values in a coordinate tuple shall be recorded in the order 
in which the coordinate system axes associations are recorded, whenever 
those coordinates use a coordinate reference system that uses this 
coordinate system. This abstract complexType shall not be used, 
extended, or restricted, in an Application Schema, to define a concrete 
subtype with a meaning equivalent to a concrete subtype specified in 
this document. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemBaseType"> 
    <sequence> 
     <element ref="gml:csID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this coordinate system. The first csID, if any, is normally the 
primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:usesAxis" maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Ordered sequence of associations to 
the coordinate system axes included in this coordinate system. 
</documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="csID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of a coordinate system. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesAxis" type="gml:CoordinateSystemAxisRefType" 
substitutionGroup="gml:dictionaryEntry"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 59 
 


   <documentation>Association to a coordinate system axis. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="coordinateSystemRef" 
type="gml:CoordinateSystemRefType"/> 
 <!-- =================================================== --> 
 <complexType name="CoordinateSystemRefType"> 
  <annotation> 
   <documentation>Association to a coordinate system, either 
referencing or containing the definition of that coordinate system. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:_CoordinateSystem" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="EllipsoidalCS" type="gml:EllipsoidalCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="EllipsoidalCSType"> 
  <annotation> 
   <documentation>A two- or three-dimensional coordinate system 
in which position is specified by geodetic latitude, geodetic 
longitude, and (in the three-dimensional case) ellipsoidal height. An 
EllipsoidalCS shall have two or three usesAxis associations. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="ellipsoidalCSRef" type="gml:EllipsoidalCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="EllipsoidalCSRefType"> 
  <annotation> 
   <documentation>Association to an ellipsoidal coordinate 
system, either referencing or containing the definition of that 
coordinate system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:EllipsoidalCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 







OGC 03-010r9 


60 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <element name="CartesianCS" type="gml:CartesianCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="CartesianCSType"> 
  <annotation> 
   <documentation>A 1-, 2-, or 3-dimensional coordinate system. 
Gives the position of points relative to orthogonal straight axes in 
the 2- and 3-dimensional cases. In the 1-dimensional case, it contains 
a single straight coordinate axis. In the multi-dimensional case, all 
axes shall have the same length unit of measure. A CartesianCS shall 
have one, two, or three usesAxis associations. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="cartesianCSRef" type="gml:CartesianCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="CartesianCSRefType"> 
  <annotation> 
   <documentation>Association to a Cartesian coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:CartesianCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="VerticalCS" type="gml:VerticalCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="VerticalCSType"> 
  <annotation> 
   <documentation>A one-dimensional coordinate system used to 
record the heights (or depths) of points. Such a coordinate system is 
usually dependent on the Earth's gravity field, perhaps loosely as when 
atmospheric pressure is the basis for the vertical coordinate system 
axis. A VerticalCS shall have one usesAxis association. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="verticalCSRef" type="gml:VerticalCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 61 
 


 <complexType name="VerticalCSRefType"> 
  <annotation> 
   <documentation>Association to a vertical coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:VerticalCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="TemporalCS" type="gml:TemporalCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="TemporalCSType"> 
  <annotation> 
   <documentation>A one-dimensional coordinate system containing 
a single time axis, used to describe the temporal position of a point 
in the specified time units from a specified time origin. A TemporalCS 
shall have one usesAxis association. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="temporalCSRef" type="gml:TemporalCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="TemporalCSRefType"> 
  <annotation> 
   <documentation>Association to a temporal coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:TemporalCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="LinearCS" type="gml:LinearCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="LinearCSType"> 
  <annotation> 
   <documentation>A one-dimensional coordinate system that 
consists of the points that lie on the single axis described. The 
associated ordinate is the distance from the specified origin to the 







OGC 03-010r9 


62 © OGC 2003 – All rights reserved
 


point along the axis. Example: usage of the line feature representing a 
road to describe points on or along that road. A LinearCS shall have 
one usesAxis association. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="linearCSRef" type="gml:LinearCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="LinearCSRefType"> 
  <annotation> 
   <documentation>Association to a linear coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:LinearCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="UserDefinedCS" type="gml:UserDefinedCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="UserDefinedCSType"> 
  <annotation> 
   <documentation>A two- or three-dimensional coordinate system 
that consists of any combination of coordinate axes not covered by any 
other coordinate system type. An example is a multilinear coordinate 
system which contains one coordinate axis that may have any 1-D shape 
which has no intersections with itself. This non-straight axis is 
supplemented by one or two straight axes to complete a 2 or 3 
dimensional coordinate system. The non-straight axis is typically 
incrementally straight or curved. A UserDefinedCS shall have two or 
three usesAxis associations. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="userDefinedCSRef" type="gml:UserDefinedCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="UserDefinedCSRefType"> 
  <annotation> 
   <documentation>Association to a user-defined coordinate 
system, either referencing or containing the definition of that 
coordinate system. </documentation> 
  </annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 63 
 


  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:UserDefinedCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="SphericalCS" type="gml:SphericalCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="SphericalCSType"> 
  <annotation> 
   <documentation>A three-dimensional coordinate system with one 
distance measured from the origin and two angular coordinates. Not to 
be confused with an ellipsoidal coordinate system based on an ellipsoid 
"degenerated" into a sphere. A SphericalCS shall have three usesAxis 
associations. </documentation> 
  </annotation> 
  <complexContent> 
 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="sphericalCSRef" type="gml:SphericalCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="SphericalCSRefType"> 
  <annotation> 
   <documentation>Association to a spherical coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:SphericalCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="PolarCS" type="gml:PolarCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="PolarCSType"> 
  <annotation> 
   <documentation>A two-dimensional coordinate system in which 
position is specified by the distance from the origin and the angle 
between the line from the origin to a point and a reference direction. 
A PolarCS shall have two usesAxis associations. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 







OGC 03-010r9 


64 © OGC 2003 – All rights reserved
 


  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="polarCSRef" type="gml:PolarCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="PolarCSRefType"> 
  <annotation> 
   <documentation>Association to a polar coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:PolarCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="CylindricalCS" type="gml:CylindricalCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="CylindricalCSType"> 
  <annotation> 
   <documentation>A three-dimensional coordinate system 
consisting of a polar coordinate system extended by a straight 
coordinate axis perpendicular to the plane spanned by the polar 
coordinate system. A CylindricalCS shall have three usesAxis 
associations. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="cylindricalCSRef" type="gml:CylindricalCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="CylindricalCSRefType"> 
  <annotation> 
   <documentation>Association to a cylindrical coordinate system, 
either referencing or containing the definition of that coordinate 
system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:CylindricalCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 65 
 


 <element name="ObliqueCartesianCS" type="gml:ObliqueCartesianCSType" 
substitutionGroup="gml:_CoordinateSystem"/> 
 <!-- =================================================== --> 
 <complexType name="ObliqueCartesianCSType"> 
  <annotation> 
   <documentation>A two- or three-dimensional coordinate system 
with straight axes that are not necessarily orthogonal. An 
ObliqueCartesianCS shall have two or three usesAxis associations. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateSystemType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="obliqueCartesianCSRef" 
type="gml:ObliqueCartesianCSRefType" 
substitutionGroup="gml:coordinateSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="ObliqueCartesianCSRefType"> 
  <annotation> 
   <documentation>Association to an oblique-Cartesian coordinate 
system, either referencing or containing the definition of that 
coordinate system. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateSystemRefType"> 
    <sequence> 
     <element ref="gml:ObliqueCartesianCS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
</schema> 
 


C.6 XML schema for coordinate operations encoding 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:gml="http://www.opengis.net/gml" elementFormDefault="qualified" 
version="3.1.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-
coordinateOperations"/> 
  <documentation> 
   <name>coordinateOperations.xsd</name> 
   <version>3.1.0</version> 
   <scope>How to encode coordinate operation definitions. 
</scope> 
   <description>Builds on referenceSystems.xsd to encode the data 
needed to define coordinate operations, including Transformations, 
Conversions, and other specific subtypes of operations. Primary editor: 
Arliss Whiteside. Last updated 2003/10/16. </description> 







OGC 03-010r9 


66 © OGC 2003 – All rights reserved
 


   <copyright>Copyright (c) 2002-2003 OpenGIS, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes the Coordinate Operation 
(CC_) package of the extended UML Model for OGC Abstract Specification 
Topic 2: Spatial Referencing by Coordinates. That UML model is adapted 
from ISO 19111 - Spatial referencing by coordinates, as described in 
Annex C of Topic 2. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="coordinateReferenceSystems.xsd"/> 
 <include schemaLocation="dataQuality.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="_CoordinateOperation" 
type="gml:AbstractCoordinateOperationType" abstract="true" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractCoordinateOperationBaseType" 
abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for coordinate operation 
objects, simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this coordinate operation, including source information. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:coordinateOperationName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="coordinateOperationName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this coordinate operation is 
identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="AbstractCoordinateOperationType" abstract="true"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 67 
 


   <documentation>A mathematical operation on coordinates that 
transforms or converts coordinates to another coordinate reference 
system. Many but not all coordinate operations (from CRS A to CRS B) 
also uniquely define the inverse operation (from CRS B to CRS A). In 
some cases, the operation method algorithm for the inverse operation is 
the same as for the forward algorithm, but the signs of some operation 
parameter values must be reversed. In other cases, different algorithms 
are required for the forward and inverse operations, but the same 
operation parameter values are used. If (some) entirely different 
parameter values are needed, a different coordinate operation shall be 
defined.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateOperationBaseType"> 
    <sequence> 
     <element ref="gml:coordinateOperationID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this coordinate operation. The first coordinateOperationID, if any, 
is normally the primary identification code, and any others are 
aliases. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:operationVersion" minOccurs="0"/> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
     <element ref="gml:_positionalAccuracy" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Unordered set of estimates of the 
impact of this coordinate operation on point position accuracy. Gives 
position error estimates for target coordinates of this coordinate 
operation, assuming no errors in source coordinates. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:sourceCRS" minOccurs="0"/> 
     <element ref="gml:targetCRS" minOccurs="0"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="coordinateOperationID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of a coordinate operation. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="operationVersion" type="string"> 
  <annotation> 
   <documentation>Version of the coordinate transformation (i.e., 
instantiation due to the stochastic nature of the parameters). 
Mandatory when describing a transformation, and should not be supplied 
for a conversion. </documentation> 
  </annotation> 
 </element> 







OGC 03-010r9 


68 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <element name="sourceCRS" type="gml:CRSRefType"> 
  <annotation> 
   <documentation>Association to the source CRS (coordinate 
reference system) of this coordinate operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="targetCRS" type="gml:CRSRefType"> 
  <annotation> 
   <documentation>Association to the target CRS (coordinate 
reference system) of this coordinate operation. For constraints on 
multiplicity of "sourceCRS" and "targetCRS", see UML model of 
Coordinate Operation package in OGC Abstract Specification topic 2. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="coordinateOperationRef" 
type="gml:CoordinateOperationRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="CoordinateOperationRefType"> 
  <annotation> 
   <documentation>Association to a coordinate operation, either 
referencing or containing the definition of that coordinate operation. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:_CoordinateOperation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="ConcatenatedOperation" 
type="gml:ConcatenatedOperationType" 
substitutionGroup="gml:_CoordinateOperation"/> 
 <!-- =================================================== --> 
 <complexType name="ConcatenatedOperationType"> 
  <annotation> 
   <documentation>An ordered sequence of two or more single 
coordinate operations. The sequence of operations is constrained by the 
requirement that the source coordinate reference system of step (n+1) 
must be the same as the target coordinate reference system of step (n). 
The source coordinate reference system of the first step and the target 
coordinate reference system of the last step are the source and target 
coordinate reference system associated with the concatenated operation. 
Instead of a forward operation, an inverse operation may be used for 
one or more of the operation steps mentioned above, if the inverse 
operation is uniquely defined by the forward operation.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateOperationType"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 69 
 


    <sequence> 
     <element ref="gml:usesSingleOperation" minOccurs="2" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Ordered sequence of associations to 
the two or more single operations used by this concatenated operation. 
</documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesSingleOperation" 
type="gml:SingleOperationRefType"> 
  <annotation> 
   <documentation>Association to a single operation. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="concatenatedOperationRef" 
type="gml:ConcatenatedOperationRefType" 
substitutionGroup="gml:coordinateOperationRef"/> 
 <!-- =================================================== --> 
 <complexType name="ConcatenatedOperationRefType"> 
  <annotation> 
   <documentation>Association to a concatenated operation, either 
referencing or containing the definition of that concatenated 
operation. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateOperationRefType"> 
    <sequence> 
     <element ref="gml:ConcatenatedOperation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="_SingleOperation" 
type="gml:AbstractSingleOperationType" abstract="true" 
substitutionGroup="gml:_CoordinateOperation"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractSingleOperationType" abstract="true"> 
  <annotation> 
   <documentation>A single (not concatenated) coordinate 
operation. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateOperationType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="singleOperationRef" type="gml:SingleOperationRefType" 
substitutionGroup="gml:coordinateOperationRef"/> 







OGC 03-010r9 


70 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <complexType name="SingleOperationRefType"> 
  <annotation> 
   <documentation>Association to a single operation, either 
referencing or containing the definition of that single operation. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateOperationRefType"> 
 
       <sequence> 
     <element ref="gml:_SingleOperation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="PassThroughOperation" 
type="gml:PassThroughOperationType" 
substitutionGroup="gml:_SingleOperation"/> 
 <!-- =================================================== --> 
 <complexType name="PassThroughOperationType"> 
  <annotation> 
   <documentation>A pass-through operation specifies that a 
subset of a coordinate tuple is subject to a specific coordinate 
operation. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractSingleOperationType"> 
    <sequence> 
     <element ref="gml:modifiedCoordinate" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Ordered sequence of positive 
integers defining the positions in a coordinate tuple of the 
coordinates affected by this pass-through operation. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:usesOperation"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="modifiedCoordinate" type="positiveInteger"> 
  <annotation> 
   <documentation>A positive integer defining a position in a 
coordinate tuple. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesOperation" type="gml:OperationRefType"> 
  <annotation> 
   <documentation>Association to the operation applied to the 
specified ordinates. </documentation> 
  </annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 71 
 


 </element> 
 <!-- =================================================== --> 
 <element name="passThroughOperationRef" 
type="gml:PassThroughOperationRefType" 
substitutionGroup="gml:singleOperationRef"/> 
 <!-- =================================================== --> 
 <complexType name="PassThroughOperationRefType"> 
  <annotation> 
   <documentation>Association to a pass through operation, either 
referencing or containing the definition of that pass through 
operation. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:SingleOperationRefType"> 
    <sequence> 
     <element ref="gml:PassThroughOperation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="_Operation" type="gml:AbstractOperationType" 
abstract="true" substitutionGroup="gml:_SingleOperation"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractOperationType" abstract="true"> 
  <annotation> 
   <documentation>A parameterized mathematical operation on 
coordinates that transforms or converts coordinates to another 
coordinate reference system. This coordinate operation uses an 
operation method, usually with associated parameter values. However, 
operation methods and parameter values are directly associated with 
concrete subtypes, not with this abstract type. 
 
This abstract complexType shall not be directly used, extended, or 
restricted in a compliant Application Schema. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractSingleOperationType"/> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="operationRef" type="gml:OperationRefType" 
substitutionGroup="gml:singleOperationRef"/> 
 <!-- =================================================== --> 
 <complexType name="OperationRefType"> 
  <annotation> 
   <documentation>Association to an abstract operation, either 
referencing or containing the definition of that operation. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:SingleOperationRefType"> 
    <sequence> 
     <element ref="gml:_Operation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 







OGC 03-010r9 


72 © OGC 2003 – All rights reserved
 


  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="_GeneralConversion" 
type="gml:AbstractGeneralConversionType" abstract="true" 
substitutionGroup="gml:_Operation"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralConversionType" abstract="true"> 
  <annotation> 
   <documentation>An abstract operation on coordinates that does 
not include any change of datum. The best-known example of a coordinate 
conversion is a map projection. The parameters describing coordinate 
conversions are defined rather than empirically derived. Note that some 
conversions have no parameters. 
 
This abstract complexType is expected to be extended for well-known 
operation methods with many Conversion instances, in Application 
Schemas that define operation-method-specialized element names and 
contents. This conversion uses an operation method, usually with 
associated parameter values. However, operation methods and parameter 
values are directly associated with concrete subtypes, not with this 
abstract type. All concrete types derived from this type shall extend 
this type to include a "usesMethod" element that references the 
"OperationMethod" element. Similarly, all concrete types derived from 
this type shall extend this type to include zero or more elements each 
named "uses...Value" that each use the type of an element substitutable 
for the "_generalParameterValue" element. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractOperationType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"/> 
     <element ref="gml:coordinateOperationName"/> 
     <element ref="gml:coordinateOperationID" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
     <element ref="gml:_positionalAccuracy" minOccurs="0" 
maxOccurs="unbounded"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="generalConversionRef" 
type="gml:GeneralConversionRefType" 
substitutionGroup="gml:operationRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeneralConversionRefType"> 
  <annotation> 
   <documentation>Association to a general conversion, either 
referencing or containing the definition of that conversion. 
</documentation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 73 
 


  </annotation> 
  <complexContent> 
   <restriction base="gml:OperationRefType"> 
    <sequence> 
     <element ref="gml:_GeneralConversion" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="Conversion" type="gml:ConversionType" 
substitutionGroup="gml:_GeneralConversion"/> 
 <!-- =================================================== --> 
 <complexType name="ConversionType"> 
  <annotation> 
   <documentation>A concrete operation on coordinates that does 
not include any change of Datum. The best-known example of a coordinate 
conversion is a map projection. The parameters describing coordinate 
conversions are defined rather than empirically derived. Note that some 
conversions have no parameters. 
 
This concrete complexType can be used with all operation methods, 
without using an Application Schema that defines operation-method-
specialized element names and contents, especially for methods with 
only one Conversion instance. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralConversionType"> 
    <sequence> 
     <element ref="gml:usesMethod"/> 
     <element ref="gml:usesValue" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Unordered list of composition 
associations to the set of parameter values used by this conversion 
operation. </documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesMethod" type="gml:OperationMethodRefType"> 
  <annotation> 
   <documentation>Association to the operation method used by 
this coordinate operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesValue" type="gml:ParameterValueType"> 
  <annotation> 
   <documentation>Composition association to a parameter value 
used by this coordinate operation. </documentation> 
  </annotation> 
 </element> 







OGC 03-010r9 


74 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <element name="conversionRef" type="gml:ConversionRefType" 
substitutionGroup="gml:generalConversionRef"/> 
 <!-- =================================================== --> 
 <complexType name="ConversionRefType"> 
  <annotation> 
   <documentation>Association to a concrete general-purpose 
conversion, either referencing or containing the definition of that 
conversion. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralConversionRefType"> 
    <sequence> 
     <element ref="gml:Conversion" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="_GeneralTransformation" 
type="gml:AbstractGeneralTransformationType" abstract="true" 
substitutionGroup="gml:_Operation"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralTransformationType" 
abstract="true"> 
  <annotation> 
   <documentation>An abstract operation on coordinates that 
usually includes a change of Datum. The parameters of a coordinate 
transformation are empirically derived from data containing the 
coordinates of a series of points in both coordinate reference systems. 
This computational process is usually "over-determined", allowing 
derivation of error (or accuracy) estimates for the transformation. 
Also, the stochastic nature of the parameters may result in multiple 
(different) versions of the same coordinate transformation. 
 
This abstract complexType is expected to be extended for well-known 
operation methods with many Transformation instances, in Application 
Schemas that define operation-method-specialized value element names 
and contents. This transformation uses an operation method with 
associated parameter values. However, operation methods and parameter 
values are directly associated with concrete subtypes, not with this 
abstract type. All concrete types derived from this type shall extend 
this type to include a "usesMethod" element that references one 
"OperationMethod" element. Similarly, all concrete types derived from 
this type shall extend this type to include one or more elements each 
named "uses...Value" that each use the type of an element substitutable 
for the "_generalParameterValue" element. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractOperationType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"/> 
     <element ref="gml:coordinateOperationName"/> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 75 
 


     <element ref="gml:coordinateOperationID" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:operationVersion"/> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
     <element ref="gml:_positionalAccuracy" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:sourceCRS"/> 
     <element ref="gml:targetCRS"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="generalTransformationRef" 
type="gml:GeneralTransformationRefType" 
substitutionGroup="gml:operationRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeneralTransformationRefType"> 
  <annotation> 
   <documentation>Association to a general transformation, either 
referencing or containing the definition of that transformation. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:OperationRefType"> 
    <sequence> 
     <element ref="gml:_GeneralTransformation" 
minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="Transformation" type="gml:TransformationType" 
substitutionGroup="gml:_GeneralTransformation"/> 
 <!-- =================================================== --> 
 <complexType name="TransformationType"> 
  <annotation> 
   <documentation>A concrete operation on coordinates that 
usually includes a change of datum. The parameters of a coordinate 
transformation are empirically derived from data containing the 
coordinates of a series of points in both coordinate reference systems. 
This computational process is usually "over-determined", allowing 
derivation of error (or accuracy) estimates for the transformation. 
Also, the stochastic nature of the parameters may result in multiple 
(different) versions of the same coordinate transformation. 
 
This concrete complexType can be used for all operation methods, 
without using an Application Schema that defines operation-method-
specialized element names and contents, especially for methods with 
only one Transformation instance. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralTransformationType"> 
    <sequence> 







OGC 03-010r9 


76 © OGC 2003 – All rights reserved
 


     <element ref="gml:usesMethod"/> 
     <element ref="gml:usesValue" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
 
       <documentation>Unordered set of composition 
associations to the set of parameter values used by this transformation 
operation. </documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="transformationRef" type="gml:TransformationRefType" 
substitutionGroup="gml:generalTransformationRef"/> 
 <!-- =================================================== --> 
 <complexType name="TransformationRefType"> 
  <annotation> 
   <documentation>Association to a transformation, either 
referencing or containing the definition of that transformation. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralTransformationRefType"> 
    <sequence> 
     <element ref="gml:Transformation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="_generalParameterValue" 
type="gml:AbstractGeneralParameterValueType" abstract="true"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralParameterValueType" 
abstract="true"> 
  <annotation> 
   <documentation>Abstract parameter value or group of parameter 
values. 
    
This abstract complexType is expected to be extended and restricted for 
well-known operation methods with many instances, in Application 
Schemas that define operation-method-specialized element names and 
contents. Specific parameter value elements are directly contained in 
concrete subtypes, not in this abstract type. All concrete types 
derived from this type shall extend this type to include one "...Value" 
element with an appropriate type, which should be one of the element 
types allowed in the ParameterValueType. In addition, all derived 
concrete types shall extend this type to include a "valueOfParameter" 
element that references one element substitutable for the 
"OperationParameter" element. </documentation> 
  </annotation> 
  <sequence/> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 77 
 


 </complexType> 
 <!-- =================================================== --> 
 <element name="parameterValue" type="gml:ParameterValueType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 
 <complexType name="ParameterValueType"> 
  <annotation> 
   <documentation>A parameter value, ordered sequence of values, 
or reference to a file of parameter values. This concrete complexType 
can be used for operation methods without using an Application Schema 
that defines operation-method-specialized element names and contents, 
especially for methods with only one instance. This complexType can be 
used, extended, or restricted for well-known operation methods, 
especially for methods with many instances. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <choice> 
      <element ref="gml:value"/> 
      <element ref="gml:dmsAngleValue"/> 
      <element ref="gml:stringValue"/> 
      <element ref="gml:integerValue"/> 
      <element ref="gml:booleanValue"/> 
      <element ref="gml:valueList"/> 
      <element ref="gml:integerValueList"/> 
      <element ref="gml:valueFile"/> 
     </choice> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="value" type="gml:MeasureType"> 
  <annotation> 
   <documentation>Numeric value of an operation parameter, with 
its associated unit of measure. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="dmsAngleValue" type="gml:DMSAngleType"> 
  <annotation> 
   <documentation>Value of an angle operation parameter, in 
either degree-minute-second format or single value format. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="stringValue" type="string"> 
  <annotation> 
   <documentation>String value of an operation parameter. A 
string value does not have an associated unit of measure. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="integerValue" type="positiveInteger"> 







OGC 03-010r9 


78 © OGC 2003 – All rights reserved
 


  <annotation> 
   <documentation>Positive integer value of an operation 
parameter, usually used for a count. An integer value does not have an 
associated unit of measure. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="booleanValue" type="boolean"> 
  <annotation> 
   <documentation>Boolean value of an operation parameter. A 
Boolean value does not have an associated unit of measure. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="valueList" type="gml:MeasureListType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more numeric values 
of an operation parameter list, where each value has the same 
associated unit of measure. An element of this type contains a space-
separated sequence of double values. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="integerValueList" type="gml:integerList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more integer values 
of an operation parameter list, usually used for counts. These integer 
values do not have an associated unit of measure. An element of this 
type contains a space-separated sequence of integer values. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="valueFile" type="anyURI"> 
  <annotation> 
   <documentation>Reference to a file or a part of a file 
containing one or more parameter values, each numeric value with its 
associated unit of measure. When referencing a part of a file, that 
file must contain multiple identified parts, such as an XML encoded 
document. Furthermore, the referenced file or part of a file can 
reference another part of the same or different files, as allowed in 
XML documents. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="valueOfParameter" 
type="gml:OperationParameterRefType"> 
  <annotation> 
   <documentation>Association to the operation parameter that 
this is a value of. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 79 
 


 <element name="parameterValueGroup" 
type="gml:ParameterValueGroupType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 
 <complexType name="ParameterValueGroupType"> 
  <annotation> 
   <documentation>A group of related parameter values. The same 
group can be repeated more than once in a Conversion, Transformation, 
or higher level parameterValueGroup, if those instances contain 
different values of one or more parameterValues which suitably 
distinquish among those groups. This concrete complexType can be used 
for operation methods without using an Application Schema that defines 
operation-method-specialized element names and contents, especially for 
methods with only one instance. This complexType can be used, extended, 
or restricted for well-known operation methods, especially for methods 
with many instances. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="gml:includesValue" minOccurs="2" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Unordered set of composition 
associations to the parameter values and groups of values included in 
this group. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:valuesOfGroup"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesValue" 
type="gml:AbstractGeneralParameterValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>A composition association to a parameter value 
or group of values included in this group. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="valuesOfGroup" 
type="gml:OperationParameterGroupRefType"> 
  <annotation> 
   <documentation>Association to the operation parameter group 
for which this element provides parameter values. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="OperationMethod" type="gml:OperationMethodType" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="OperationMethodBaseType" abstract="true"> 
  <annotation> 







OGC 03-010r9 


80 © OGC 2003 – All rights reserved
 


   <documentation>Basic encoding for operation method objects, 
simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this operation method, including source information.</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:methodName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="methodName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this operation method is 
identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="OperationMethodType"> 
  <annotation> 
   <documentation>Definition of an algorithm used to perform a 
coordinate operation. Most operation methods use a number of operation 
parameters, although some coordinate conversions use none. Each 
coordinate operation using the method assigns values to these 
parameters. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:OperationMethodBaseType"> 
    <sequence> 
     <element ref="gml:methodID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this operation method. The first methodID, if any, is normally the 
primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:methodFormula"/> 
     <element ref="gml:sourceDimensions"/> 
     <element ref="gml:targetDimensions"/> 
     <element ref="gml:usesParameter" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 81 
 


       <documentation>Unordered list of associations to 
the set of operation parameters and parameter groups used by this 
operation method. </documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="methodID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of an operation method. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="methodFormula" type="gml:CodeType"> 
  <annotation> 
   <documentation>Formula(s) used by this operation method. The 
value may be a reference to a publication. Note that the operation 
method may not be analytic, in which case this element references or 
contains the procedure, not an analytic formula.</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="sourceDimensions" type="positiveInteger"> 
  <annotation> 
   <documentation>Number of dimensions in the source CRS of this 
operation method. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="targetDimensions" type="positiveInteger"> 
  <annotation> 
   <documentation>Number of dimensions in the target CRS of this 
operation method. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesParameter" 
type="gml:AbstractGeneralOperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter or 
parameter group used by this operation method. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="operationMethodRef" type="gml:OperationMethodRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="OperationMethodRefType"> 
  <annotation> 
   <documentation>Association to a concrete general-purpose 
operation method, either referencing or containing the definition of 
that method. </documentation> 
  </annotation> 
  <complexContent> 







OGC 03-010r9 


82 © OGC 2003 – All rights reserved
 


   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:OperationMethod" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="_GeneralOperationParameter" 
type="gml:AbstractGeneralOperationParameterType" abstract="true" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralOperationParameterType" 
abstract="true"> 
  <annotation> 
   <documentation>Abstract definition of a parameter or group of 
parameters used by an operation method. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:minimumOccurs" minOccurs="0"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="minimumOccurs" type="nonNegativeInteger"> 
  <annotation> 
   <documentation>The minimum number of times that values for 
this parameter group or parameter are required. If this attribute is 
omitted, the minimum number is one. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="abstractGeneralOperationParameterRef" 
type="gml:AbstractGeneralOperationParameterRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralOperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter or group, 
either referencing or containing the definition of that parameter or 
group. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:_GeneralOperationParameter" 
minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 83 
 


 <!-- =================================================== --> 
 <element name="OperationParameter" type="gml:OperationParameterType" 
substitutionGroup="gml:_GeneralOperationParameter"/> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for operation parameter objects, 
simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractGeneralOperationParameterType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this operation parameter, including source information. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:parameterName"/> 
     <element ref="gml:minimumOccurs" minOccurs="0"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="parameterName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this operation parameter is 
identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterType"> 
  <annotation> 
   <documentation>The definition of a parameter used by an 
operation method. Most parameter values are numeric, but other types of 
parameter values are possible. This complexType is expected to be used 
or extended for all operation methods, without defining operation-
method-specialized element names.  </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:OperationParameterBaseType"> 
    <sequence> 
     <element ref="gml:parameterID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this operation parameter. The first parameterID, if any, is normally 
the primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 







OGC 03-010r9 


84 © OGC 2003 – All rights reserved
 


    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="parameterID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of an operation parameter. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="operationParameterRef" 
type="gml:OperationParameterRefType"/> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter, either 
referencing or containing the definition of that parameter. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction 
base="gml:AbstractGeneralOperationParameterRefType"> 
    <sequence> 
     <element ref="gml:OperationParameter" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="OperationParameterGroup" 
type="gml:OperationParameterGroupType" 
substitutionGroup="gml:_GeneralOperationParameter"/> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterGroupBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for operation parameter group 
objects, simplifying and restricting the DefinitionType as needed. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractGeneralOperationParameterType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about 
this operation parameter group, including source information. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:groupName"/> 
     <element ref="gml:minimumOccurs" minOccurs="0"/> 
    </sequence> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 85 
 


    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="groupName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this operation parameter 
group is identified. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterGroupType"> 
  <annotation> 
   <documentation>The definition of a group of parameters used by 
an operation method. This complexType is expected to be used or 
extended for all applicable operation methods, without defining 
operation-method-specialized element names.  </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:OperationParameterGroupBaseType"> 
    <sequence> 
     <element ref="gml:groupID" minOccurs="0" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Set of alternative identifications 
of this operation parameter group. The first groupID, if any, is 
normally the primary identification code, and any others are aliases. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="gml:maximumOccurs" minOccurs="0"/> 
     <element ref="gml:includesParameter" minOccurs="2" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Unordered list of associations to 
the set of operation parameters that are members of this group. 
</documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="groupID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of an operation parameter 
group. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="maximumOccurs" type="positiveInteger"> 
  <annotation> 
   <documentation>The maximum number of times that values for 
this parameter group can be included. If this attribute is omitted, the 
maximum number is one. </documentation> 







OGC 03-010r9 


86 © OGC 2003 – All rights reserved
 


  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesParameter" 
type="gml:AbstractGeneralOperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter that is a 
member of a group. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="operationParameterGroupRef" 
type="gml:OperationParameterRefType"/> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterGroupRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter, either 
referencing or containing the definition of that parameter. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction 
base="gml:AbstractGeneralOperationParameterRefType"> 
    <sequence> 
     <element ref="gml:OperationParameterGroup" 
minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
</schema> 
 


C.7 XML schema for data quality encoding 


<?xml version="1.0" encoding="UTF-8"?> 
<!-- edited with XML Spy v4.4 U (http://www.xmlspy.com) by Arliss J 
Whiteside (BAE Systems) --> 
<schema targetNamespace="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
version="3.1.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-
dataQuality"/> 
  <documentation> 
   <name>dataQuality.xsd</name> 
   <version>3.1.0</version> 
   <scope>How to encode positional data quality information. 
</scope> 
   <description>Builds on units.xsd to encode the data needed to 
describe the positional accuracy of coordinate operations. Primary 
editor: Arliss Whiteside. Last updated 2003/10/16. </description> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 87 
 


   <copyright>Copyright (c) 2002-2003 OpenGIS, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes the Data Quality (DQ) package 
of the extended UML Model for OGC Abstract Specification Topic 2: 
Spatial Referencing by Coordinates. That UML model is adapted from ISO 
19111 - Spatial referencing by coordinates, as described in Annex C of 
Topic 2. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="units.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="_positionalAccuracy" 
type="gml:AbstractPositionalAccuracyType" abstract="true"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractPositionalAccuracyType" abstract="true"> 
  <annotation> 
   <documentation>Position error estimate (or accuracy) data. 
</documentation> 
  </annotation> 
  <sequence> 
   <element ref="gml:measureDescription" minOccurs="0"/> 
  </sequence> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="measureDescription" type="gml:CodeType"> 
  <annotation> 
   <documentation>A description of the position accuracy 
parameter(s) provided. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 
 <element name="absoluteExternalPositionalAccuracy" 
type="gml:AbsoluteExternalPositionalAccuracyType" 
substitutionGroup="gml:_positionalAccuracy"/> 
 <!-- =================================================== --> 
 <complexType name="AbsoluteExternalPositionalAccuracyType"> 
  <annotation> 
   <documentation>Closeness of reported coordinate values to 
values accepted as or being true. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractPositionalAccuracyType"> 
    <sequence> 
     <element ref="gml:result"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="relativeInternalPositionalAccuracy" 
type="gml:RelativeInternalPositionalAccuracyType" 
substitutionGroup="gml:_positionalAccuracy"/> 







OGC 03-010r9 


88 © OGC 2003 – All rights reserved
 


 <!-- =================================================== --> 
 <complexType name="RelativeInternalPositionalAccuracyType"> 
  <annotation> 
   <documentation>Closeness of the relative positions of two or 
more positions to their respective relative positions accepted as or 
being true. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractPositionalAccuracyType"> 
    <sequence> 
     <element ref="gml:result"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="result" type="gml:MeasureType"> 
  <annotation> 
   <documentation>A quantitative result defined by the evaluation 
procedure used, and identified by the measureDescription. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="covarianceMatrix" type="gml:CovarianceMatrixType" 
substitutionGroup="gml:_positionalAccuracy"/> 
 <!-- =================================================== --> 
 <complexType name="CovarianceMatrixType"> 
  <annotation> 
   <documentation>Error estimate covariance matrix. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractPositionalAccuracyType"> 
    <sequence> 
     <element ref="gml:unitOfMeasure" maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Ordered sequence of units of 
measure, corresponding to the row and column index numbers of the 
covariance matrix, starting with row and column 1 and ending with 
row/column N. Each unit of measure is for the ordinate reflected in the 
relevant row and column of the covariance matrix. </documentation> 
      </annotation> 
     </element> 
     <element ref="gml:includesElement" 
maxOccurs="unbounded"> 
      <annotation> 
       <documentation>Unordered set of elements in this 
covariance matrix. Because the covariance matrix is symmetrical, only 
the elements in the upper or lower diagonal part (including the main 
diagonal) of the matrix need to be specified. Any zero valued 
covariance elements can be omitted. </documentation> 
      </annotation> 
     </element> 
    </sequence> 
   </extension> 
  </complexContent> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 89 
 


 </complexType> 
 <!-- =================================================== --> 
 <element name="includesElement" type="gml:CovarianceElementType"/> 
 <!-- =================================================== --> 
 <complexType name="CovarianceElementType"> 
  <annotation> 
   <documentation>An element of a covariance 
matrix.</documentation> 
  </annotation> 
  <sequence> 
   <element ref="gml:rowIndex"/> 
   <element ref="gml:columnIndex"/> 
   <element ref="gml:covariance"/> 
  </sequence> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="rowIndex" type="positiveInteger"> 
  <annotation> 
   <documentation>Row number of this covariance element value. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="columnIndex" type="positiveInteger"> 
  <annotation> 
   <documentation>Column number of this covariance element value. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="covariance" type="double"> 
  <annotation> 
   <documentation>Value of covariance matrix element. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
</schema> 







OGC 03-010r9 


90 © OGC 2003 – All rights reserved
 


Annex D 
(informative) 


 
Standard contents of code lists 


D.1 Introduction 


The XML Schemas specified in this document do not include definitions of the allowed 
values of the XML elements that encode the <<CodeList>> stereotyped classes specified 
in the UML model that was converted. Those XML elements are: 


a) derivedCRSType, in coordinateReferenceSystems.xsd 


b) pixelInCell, in datums.xsd 


c) verticalDatumType, in datums.xsd 


Those XML elements are each required to include a "codeSpace" attribute with type 
"anyURI". The value of that attribute must reference a source of information specifying 
the values and meanings of all the allowed string values for this element. An Application 
Schema is expected to specify such a source of information, and how that source shall be 
referenced, whenever that Application Schema uses an XML element converted from a 
<<CodeList>> stereotyped class. 


This annex specifies the standard set of string values and their meanings for each of the 
three XML elements listed above. This annex first specifies one possible XML Schema 
for encoding a standard set of string values and their meanings in an XML document. 
That possible application schema is then used to record each of the three standard sets of 
string values and their meanings. 


D.2 XML schema for code lists 


An XML document can be used to encode all the allowed string values with their 
meanings for an XML element that encodes one <<CodeList>> stereotyped UML class. 
One possible XML Schema for encoding such a standard set of string values and their 
meanings is: 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/examples" 
xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:ex="http://www.opengis.net/examples" 
elementFormDefault="qualified" xml:lang="en"> 
 <annotation> 
  <documentation> 
   <name>codeListDictionary.xsd</name> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 91 
 


   <description>One possible GML Application Schema to XML encode 
all the allowed string values and their meanings for an XML element 
that encodes one CodeList stereotyped UML class. This schema encodes 
the allowed string values and their meanings in a CodeListDictionary 
that is based on gml:Dictionary. This GML Application Schema specifies 
use of element names that are specialized for a CodeListDictionary, and 
prohibits use of some gml:Dictionary elements that are not considered 
useful in a CodeListDictionary. Primary editor: Arliss Whiteside. Last 
updated 2003/09/18. </description> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <import namespace="http://www.opengis.net/gml" 
schemaLocation="../crsSchemas/base/dictionary.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="CodeListDictionary" 
substitutionGroup="gml:Dictionary"> 
  <annotation> 
   <documentation>Encodes all allowed code values and their 
meanings for an XML element that encodes one CodeList stereotyped UML 
class. The gml:name element is used to encode one or more names for 
this Code List Dictionary. The optional gml:description element can be 
used to record a description of this Dictionary. The required gml:id 
attribute allows this Dictionary to be referenced, if this Dictionary 
is contained within another XML element. </documentation> 
  </annotation> 
  <complexType> 
   <complexContent> 
    <restriction base="gml:DictionaryType"> 
     <sequence> 
      <element ref="gml:description" minOccurs="0"/> 
      <element ref="gml:name" maxOccurs="unbounded"/> 
      <element ref="ex:codeEntry" maxOccurs="unbounded"/> 
     </sequence> 
     <attribute ref="gml:id" use="required"/> 
    </restriction> 
   </complexContent> 
  </complexType> 
 </element> 
 <!-- =================================================== --> 
 <element name="codeEntry" substitutionGroup="gml:dictionaryEntry"> 
  <annotation> 
   <documentation>Association to definition of one allowed code, 
either including or referencing that code definition. For example, a 
Code Definition in another Code List Dictionary can be referenced. 
</documentation> 
  </annotation> 
  <complexType> 
   <complexContent> 
    <restriction base="gml:DictionaryEntryType"> 
     <sequence> 
      <element ref="ex:CodeDefinition" minOccurs="0"/> 
     </sequence> 
     <attributeGroup ref="gml:AssociationAttributeGroup"/> 







OGC 03-010r9 


92 © OGC 2003 – All rights reserved
 


    </restriction> 
   </complexContent> 
  </complexType> 
 </element> 
 <!-- =================================================== --> 
 <element name="CodeDefinition" substitutionGroup="gml:Definition"> 
  <annotation> 
   <documentation>Encodes one allowed code value with its 
meaning. The gml:description is used to record the meaning of this 
allowed code value, and is thus required. The required gml:id attribute 
allows this Code Definition to be referenced by an anyURI value, if 
this Code Definition is referenced from another Code List Dictionary, 
or is directly referenced by a gml:CodeType. </documentation> 
  </annotation> 
  <complexType> 
   <complexContent> 
    <restriction base="gml:DefinitionType"> 
     <sequence> 
      <element ref="gml:description"/> 
      <element ref="ex:code" maxOccurs="unbounded"/> 
     </sequence> 
     <attribute ref="gml:id" use="required"/> 
    </restriction> 
   </complexContent> 
  </complexType> 
 </element> 
 <!-- =================================================== --> 
 <element name="code" type="gml:CodeType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>Allowed value for the XML element to which this 
dictionary applies. The string value is allowed to include embedded 
spaces, as required for codes in Code Lists. The optional codeSpace 
attribute can be omitted, or could contain the codeSpace value normally 
used with this "code" string. </documentation> 
  </annotation> 
 </element> 
</schema> 


 
This XML Schema is written as a GML Application Schema that builds on GML 3, but 
uses a GML profile that includes only a small part of GML 3. 


D.3 Standard contents of derivedCRSType 


A standard set of allowed values and their meanings for the derivedCRSType element is 
specified in the <CodeList>> stereotyped class in the UML model that was converted. 
Those string values and their meanings are specified in the following UML document, 
using the XML Schema specified in Subclause D.2: 


<?xml version="1.0" encoding="UTF-8"?> 
<CodeListDictionary xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 







OGC 03-010r9 


© OGC 2003 – All rights reserved 93 
 


xsi:schemaLocation="http://www.opengis.net/ex codeListDictionary.xsd" 
gml:id="derivedCRSType"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/07/08. --> 
 <gml:description>Type of a derived coordinate reference system. 
</gml:description> 
 <gml:name>derivedCRSType</gml:name> 
 <codeEntry> 
  <CodeDefinition gml:id="engineering"> 
   <gml:description>A contextually local coordinate reference 
system; which can be divided into two broad categories: 
- earth-fixed systems applied to engineering activities on or near the 
surface of the earth; 
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or 
spacecraft. </gml:description> 
   <code>engineering</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="image"> 
   <gml:description>An engineering coordinate reference system 
applied to locations in images. </gml:description> 
   <code>image</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="vertical"> 
   <gml:description>A coordinate reference system used for 
recording of heights or depths. Vertical CRSs make use of the direction 
of gravity to define the concept of height or depth, but the 
relationship with gravity may not be straightforward. 
</gml:description> 
   <code>vertical</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="temporal"> 
   <gml:description>A coordinate reference system used for the 
recording of time. </gml:description> 
   <code>temporal</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="geographic"> 
   <gml:description>A coordinate reference system based on an 
ellipsoidal approximation of the geoid; provides an accurate 
representation of the geometry of geographic features for a large 
portion of the earth's surface. </gml:description> 
   <code>geographic</code> 
  </CodeDefinition> 
 </codeEntry> 
</CodeListDictionary> 


 


D.4 Standard contents of pixelInCell 


A standard set of allowed values and their meanings for the pixelInCell element is 
specified in the <<CodeList>> stereotyped class in the UML model that was converted. 







OGC 03-010r9 


94 © OGC 2003 – All rights reserved
 


Those string values and their meanings are specified in the following UML document, 
using the XML Schema specified in Subclause D.2: 


<?xml version="1.0" encoding="UTF-8"?> 
<CodeListDictionary xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/ex codeListDictionary.xsd" 
gml:id="pixelInCell"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/06/27. --> 
 <gml:description>Specification of the way the image grid is 
associated with the image data attributes. </gml:description> 
 <gml:name>pixelInCell</gml:name> 
 <codeEntry> 
  <CodeDefinition gml:id="cellCenter"> 
   <gml:description>The origin of the image coordinate system is 
the center of a grid cell or image pixel. </gml:description> 
   <code>cell center</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="cellCorner"> 
   <gml:description>The origin of the image coordinate system is 
the corner of a grid cell, or half-way between the centres of adjacent 
image pixel centres. </gml:description> 
   <code>cell corner</code> 
  </CodeDefinition> 
 </codeEntry> 
</CodeListDictionary> 


 


D.5 Standard contents of verticalDatumType 


A standard set of allowed values and their meanings for the verticalDatumType element is 
specified in the <<CodeList>> stereotyped class in the UML model that was converted. 
Those string values and their meanings are specified in the following UML document, 
using the XML Schema specified in Subclause D.2: 


<?xml version="1.0" encoding="UTF-8"?> 
<CodeListDictionary xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/ex codeListDictionary.xsd" 
gml:id="verticalDatumType"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/06/27. --> 
 <gml:description>Type of a vertical datum.</gml:description> 
 <gml:name>verticalDatumType</gml:name> 
 <codeEntry> 
  <CodeDefinition gml:id="geoidal"> 
   <gml:description>The zero value of the associated vertical 
coordinate system axis is defined to approximate a constant potential 
surface, usually the geoid. Such a reference surface is usually 







OGC 03-010r9 


© OGC 2003 – All rights reserved 95 
 


determined by a national or scientific authority, and is then a well-
known, named datum. </gml:description> 
   <code>geoidal</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="depth"> 
   <gml:description>The zero point of the vertical axis is 
defined by a surface that has meaning for the purpose which the 
associated vertical measurements are used for. For hydrographic charts, 
this is often a predicted nominal sea surface (i.e. without waves or 
other wind and current effects) that occurs at low tide. For some 
examples, see OGC Abstract Specification Topic 2. </gml:description> 
   <code>depth</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="barometric"> 
   <gml:description>Atmospheric pressure is the basis for the 
definition of the origin of the associated vertical coordinate system 
axis. For more information, see OGC Abstract Specification Topic 2. 
</gml:description> 
   <code>barometric</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="otherSurface"> 
   <gml:description>In some cases, e.g. oil exploration and 
production, a geological feature, such as the top or bottom of a 
geologically identifiable and meaningful subsurface layer, is used as a 
vertical datum. Other variations to the above three vertical datum 
types may exist and are all included in this type. </gml:description> 
   <code>other surface</code> 
  </CodeDefinition> 
 </codeEntry> 
</CodeListDictionary> 







OGC 03-010r9 


96 © OGC 2003 – All rights reserved
 


Annex E 
(informative) 


 
XML document examples 


E.1 Introduction 


This annex provides example XML documents using the XML schemas specified in this 
document. These examples include both identification and specification data for many 
geospatial entities. These XML examples omit some optional XML elements and 
attributes that might be included, and include some optional elements and attributes that 
might be omitted. This omission or inclusion was partially based on whether reasonable 
values were known for optional elements and attributes. The optional elements that are 
omitted in these examples XML include: 


a) The “remarks” element in all IdentifierType and object elements. 


b) The "scope" element in all elements that could include it. 


Most of these XML examples assume that the XML Schemas specified in Annex C are 
accessible using the location coordinateReferenceSystems.xsd. These XML examples use 
patterns that are not specified in this document for values of the "gml:id", "gml:uom", 
"xlink:href", and "xlink:title" XML attributes. 


EDITOR'S NOTE  Some of the patterns now used for values of these attributes may be invalid or 
inappropriate. I urge reviewers to suggest any needed or desirable improvements. 


NOTE  For interoperability, the patterns or formats used for the values of these attributes must be 
specified somewhere, normally in or with an Application Schema. Use of an anyURI value with a form of 
urn:ogc:… assumes that the OGC has registered with IANA the ”ogc” part as a namespace authority in a 
URN. Until the ”ogc” or other value is so registered by the OGC, the “x-ogc” value should be used, where 
the “x” denotes an experimental namespace. 


E.2 Example XML for geographic 2D coordinate reference system 


This subclause provides an example XML document using the Coordinate Reference 
System subtype GeographicCRS XML element, with its’ contained elements, applied to a 
geographic 2D coordinate system. This example XML is applicable to the current low-
level Coordinate Transformation (CT) Implementation Specification, document 01-009. 


<?xml version="1.0" encoding="UTF-8"?> 
<GeographicCRS xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" gml:id="EPSG4277"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <srsName>OSGB 1936</srsName> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 97 
 


 <srsID> 
  <name codeSpace="EPSG">4277</name> 
  <version>6.0</version> 
 </srsID> 
 <validArea> 
  <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
 </validArea> 
 <usesEllipsoidalCS> 
  <EllipsoidalCS gml:id="EPSG6402"> 
   <csName>ellipsoidal</csName> 
   <csID> 
    <name codeSpace="EPSG">6402</name> 
    <version>6.0</version> 
   </csID> 
   <usesAxis> 
    <CoordinateSystemAxis gml:id="EPSG9901" 
gml:uom="urn:ogc:uom:degree"> 
     <axisName>Geodetic latitude</axisName> 
     <axisID> 
      <name codeSpace="EPSG">9901</name> 
      <version>6.0</version> 
     </axisID> 
     <axisAbbrev>Lat</axisAbbrev> 
     <axisDirection>north</axisDirection> 
    </CoordinateSystemAxis> 
   </usesAxis> 
   <usesAxis> 
    <CoordinateSystemAxis gml:id="EPSG9902" 
gml:uom="urn:ogc:uom:degree"> 
     <axisName>Geodetic longitude</axisName> 
     <axisID> 
      <name codeSpace="EPSG">9902</name> 
      <version>6.0</version> 
     </axisID> 
     <axisAbbrev>Lon</axisAbbrev> 
     <axisDirection>east</axisDirection> 
    </CoordinateSystemAxis> 
   </usesAxis> 
  </EllipsoidalCS> 
 </usesEllipsoidalCS> 
 <usesGeodeticDatum> 
  <GeodeticDatum gml:id="EPSG6277"> 
   <datumName>OSGB 1936</datumName> 
   <datumID> 
    <name codeSpace="EPSG">6277</name> 
    <version>6.0</version> 
   </datumID> 
   <usesPrimeMeridian> 
    <PrimeMeridian gml:id="EPSG8901"> 
     <meridianName>Greenwich</meridianName> 
     <meridianID> 
      <name codeSpace="EPSG">8901</name> 
      <version>6.0</version> 
     </meridianID> 
     <greenwichLongitude> 
      <angle uom="urn:ogc:uom:degree">0</angle> 
     </greenwichLongitude> 







OGC 03-010r9 


98 © OGC 2003 – All rights reserved
 


    </PrimeMeridian> 
   </usesPrimeMeridian> 
   <usesEllipsoid> 
    <Ellipsoid gml:id="EPSG7001"> 
     <ellipsoidName>Airy 1830</ellipsoidName> 
     <ellipsoidID> 
      <name codeSpace="EPSG">7001</name> 
      <version>6.0</version> 
     </ellipsoidID> 
     <semiMajorAxis 
uom="urn:ogc:uom:metre">6377563.396</semiMajorAxis> 
     <secondDefiningParameter> 
      <inverseFlattening 
uom="urn:ogc:uom:unity">299.3249646</inverseFlattening> 
     </secondDefiningParameter> 
    </Ellipsoid> 
   </usesEllipsoid> 
  </GeodeticDatum> 
 </usesGeodeticDatum> 
</GeographicCRS> 
 


The above example XML just references the units urn:degree, urn:metre, and urn:unity (a 
scale factor unit). Definitions of those units can be included in the XML document by 
adding a Dictionary element in a metaDataProperty of this GeographicCRS. Such an 
expanded example XML document is: 


<?xml version="1.0" encoding="UTF-8"?> 
<GeographicCRS xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" gml:id="EPSG4277"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <metaDataProperty> 
  <GenericMetaData> 
   <Dictionary gml:id="UnitsDictionary"> 
    <description>Units used in this XML document.</description> 
    <name>Units Dictionary</name> 
    <dictionaryEntry> 
     <ConventionalUnit gml:id="degree"> 
      <name>degree</name> 
      <name codeSpace="EPSG">9102</name> 
      <quantityType>angle</quantityType> 
      <conversionToPreferredUnit uom="#radian"> 
       <factor>1.74532925199433E-02</factor> 
      </conversionToPreferredUnit> 
     </ConventionalUnit> 
    </dictionaryEntry> 
    <dictionaryEntry> 
     <BaseUnit gml:id="radian"> 
      <name>radian</name> 
      <quantityType>angle</quantityType> 
      <unitsSystem xlink:href="urn:ToBeSupplied"/> 
     </BaseUnit> 
    </dictionaryEntry> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 99 
 


    <dictionaryEntry> 
     <BaseUnit gml:id="metre"> 
      <name>metre</name> 
      <name codeSpace="EPSG">9001</name> 
      <quantityType>length</quantityType> 
      <unitsSystem xlink:href="urn:SI"/> 
     </BaseUnit> 
    </dictionaryEntry> 
    <dictionaryEntry> 
     <BaseUnit gml:id="unity"> 
      <name>unitless</name> 
      <quantityType>scale factor</quantityType> 
      <unitsSystem xlink:href="urn:ToBeSupplied"/> 
     </BaseUnit> 
    </dictionaryEntry> 
   </Dictionary> 
  </GenericMetaData> 
 </metaDataProperty> 
 <srsName>OSGB 1936</srsName> 
 <srsID> 
  <name codeSpace="EPSG">4277</name> 
  <version>6.0</version> 
 </srsID> 
 <validArea> 
  <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
 </validArea> 
 <usesEllipsoidalCS> 
  <EllipsoidalCS gml:id="EPSG6402"> 
   <csName>ellipsoidal</csName> 
   <csID> 
    <name codeSpace="EPSG">6402</name> 
    <version>6.0</version> 
   </csID> 
   <usesAxis> 
    <CoordinateSystemAxis gml:id="EPSG9901" gml:uom="#degree"> 
     <axisName>Geodetic latitude</axisName> 
     <axisID> 
      <name codeSpace="EPSG">9901</name> 
      <version>6.0</version> 
     </axisID> 
     <axisAbbrev>Lat</axisAbbrev> 
     <axisDirection>north</axisDirection> 
    </CoordinateSystemAxis> 
   </usesAxis> 
   <usesAxis> 
    <CoordinateSystemAxis gml:id="EPSG9902" gml:uom="#degree"> 
     <axisName>Geodetic longitude</axisName> 
     <axisID> 
      <name codeSpace="EPSG">9902</name> 
      <version>6.0</version> 
     </axisID> 
     <axisAbbrev>Lon</axisAbbrev> 
     <axisDirection>east</axisDirection> 
    </CoordinateSystemAxis> 
   </usesAxis> 
  </EllipsoidalCS> 
 </usesEllipsoidalCS> 







OGC 03-010r9 


100 © OGC 2003 – All rights reserved
 


 <usesGeodeticDatum> 
  <GeodeticDatum gml:id="EPSG6277"> 
   <datumName>OSGB 1936</datumName> 
   <datumID> 
    <name codeSpace="EPSG">6277</name> 
    <version>6.0</version> 
   </datumID> 
   <usesPrimeMeridian> 
    <PrimeMeridian gml:id="EPSG8901"> 
     <meridianName>Greenwich</meridianName> 
     <meridianID> 
      <name codeSpace="EPSG">8901</name> 
      <version>6.0</version> 
     </meridianID> 
     <greenwichLongitude> 
      <angle uom="#degree">0</angle> 
     </greenwichLongitude> 
    </PrimeMeridian> 
   </usesPrimeMeridian> 
   <usesEllipsoid> 
    <Ellipsoid gml:id="EPSG7001"> 
     <ellipsoidName>Airy 1830</ellipsoidName> 
     <ellipsoidID> 
      <name codeSpace="EPSG">7001</name> 
      <version>6.0</version> 
     </ellipsoidID> 
     <semiMajorAxis uom="#metre">6377563.396</semiMajorAxis> 
     <secondDefiningParameter> 
      <inverseFlattening 
uom="#unity">299.3249646</inverseFlattening> 
     </secondDefiningParameter> 
    </Ellipsoid> 
   </usesEllipsoid> 
  </GeodeticDatum> 
 </usesGeodeticDatum> 
</GeographicCRS> 
 


E.3 Example XML for compound coordinate reference system 


This subclause provides an example XML document using the Coordinate Reference 
System subtype CompoundCRS XML element, with its' contained elements, applied to a 
3D compound coordinate reference system that combines a Projected and a Vertical CRS. 
Note that this Compound CRS Definition contains three other CRS definitions, for a 
Vertical CRS, a Geographic 2D CRS, and a Projected CRS. 


<?xml version="1.0" encoding="UTF-8"?> 
<CompoundCRS xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" gml:id="EPSG7405"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <srsName>OSGB36 /British National Grid + ODN</srsName> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 101 
 


 <srsID> 
  <name codeSpace="EPSG">7405</name> 
  <version>6.0</version> 
 </srsID> 
 <validArea> 
  <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
 </validArea> 
 <includesCRS> 
  <ProjectedCRS gml:id="EPSG27700"> 
   <srsName>OSGB 1936 / British National Grid</srsName> 
   <srsID> 
    <name codeSpace="EPSG">27700</name> 
    <version>6.0</version> 
   </srsID> 
   <validArea> 
    <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
   </validArea> 
   <baseCRS> 
    <GeographicCRS gml:id="EPSG4277"> 
     <srsName>OSGB 1936</srsName> 
     <srsID> 
      <name codeSpace="EPSG">4277</name> 
      <version>6.0</version> 
     </srsID> 
     <validArea> 
      <description>United Kingdom (UK) - Great Britain - 
England Scotland Wales - onshore; Isle of Man. </description> 
     </validArea> 
     <usesEllipsoidalCS> 
      <EllipsoidalCS gml:id="EPSG6402"> 
       <csName>ellipsoidal</csName> 
       <csID> 
        <name codeSpace="EPSG">6402</name> 
        <version>6.0</version> 
       </csID> 
       <usesAxis> 
        <CoordinateSystemAxis gml:id="EPSG9901" 
gml:uom="urn:degree"> 
         <axisName>Geodetic latitude</axisName> 
         <axisID> 
          <name codeSpace="EPSG">9901</name> 
          <version>6.0</version> 
         </axisID> 
         <axisAbbrev>Lat</axisAbbrev> 
         <axisDirection>north</axisDirection> 
        </CoordinateSystemAxis> 
       </usesAxis> 
       <usesAxis> 
        <CoordinateSystemAxis gml:id="EPSG9902" 
gml:uom="urn:degree"> 
         <axisName>Geodetic longitude</axisName> 
         <axisID> 
          <name codeSpace="EPSG">9902</name> 
          <version>6.0</version> 
         </axisID> 
         <axisAbbrev>Lon</axisAbbrev> 







OGC 03-010r9 


102 © OGC 2003 – All rights reserved
 


         <axisDirection>east</axisDirection> 
        </CoordinateSystemAxis> 
       </usesAxis> 
      </EllipsoidalCS> 
     </usesEllipsoidalCS> 
     <usesGeodeticDatum> 
      <GeodeticDatum gml:id="EPSG6277"> 
       <datumName>OSGB 1936</datumName> 
       <datumID> 
        <name codeSpace="EPSG">6277</name> 
        <version>6.0</version> 
       </datumID> 
       <usesPrimeMeridian> 
        <PrimeMeridian gml:id="EPSG8901"> 
         <meridianName>Greenwich</meridianName> 
         <meridianID> 
          <name codeSpace="EPSG">8901</name> 
          <version>6.0</version> 
         </meridianID> 
         <greenwichLongitude> 
          <angle uom="urn:degree">0</angle> 
         </greenwichLongitude> 
        </PrimeMeridian> 
       </usesPrimeMeridian> 
       <usesEllipsoid> 
        <Ellipsoid gml:id="EPSG7001"> 
         <ellipsoidName>Airy 1830</ellipsoidName> 
         <ellipsoidID> 
          <name codeSpace="EPSG">7001</name> 
          <version>6.0</version> 
         </ellipsoidID> 
         <semiMajorAxis 
uom="urn:metre">6377563.396</semiMajorAxis> 
         <secondDefiningParameter> 
          <inverseFlattening 
uom="urn:unity">299.3249646</inverseFlattening> 
         </secondDefiningParameter> 
        </Ellipsoid> 
       </usesEllipsoid> 
      </GeodeticDatum> 
     </usesGeodeticDatum> 
    </GeographicCRS> 
   </baseCRS> 
   <definedByConversion> 
    <Conversion gml:id="EPSG19916"> 
     <coordinateOperationName>Transverse 
Mercator</coordinateOperationName> 
     <coordinateOperationID> 
      <name codeSpace="EPSG">19916</name> 
      <version>6.0</version> 
     </coordinateOperationID> 
     <usesMethod> 
      <OperationMethod gml:id="EPSG9807"> 
       <methodName>Transverse Mercator</methodName> 
       <methodID> 
        <name codeSpace="EPSG">9807</name> 
        <version>6.0</version> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 103 
 


       </methodID> 
       <methodFormula>See Section 1.4.6 "Transverse 
Mercator" of EPSG Guidance Note 7, December 2000. </methodFormula> 
       <sourceDimensions>2</sourceDimensions> 
       <targetDimensions>2</targetDimensions> 
       <usesParameter> 
        <OperationParameter gml:id="EPSG8801"> 
         <parameterName>Latitude of natural 
origin</parameterName> 
         <parameterID> 
          <name codeSpace="EPSG">8801</name> 
          <version>6.0</version> 
         </parameterID> 
        </OperationParameter> 
       </usesParameter> 
       <usesParameter> 
        <OperationParameter gml:id="EPSG8802"> 
         <parameterName>Longitude of natural 
origin</parameterName> 
         <parameterID> 
          <name codeSpace="EPSG">8802</name> 
          <version>6.0</version> 
         </parameterID> 
        </OperationParameter> 
       </usesParameter> 
       <usesParameter> 
        <OperationParameter gml:id="EPSG8805"> 
         <parameterName>Scale factor at natural 
origin</parameterName> 
         <parameterID> 
          <name codeSpace="EPSG">8805</name> 
          <version>6.0</version> 
         </parameterID> 
        </OperationParameter> 
       </usesParameter> 
       <usesParameter> 
        <OperationParameter gml:id="EPSG8806"> 
         <parameterName>False Easting</parameterName> 
         <parameterID> 
          <name codeSpace="EPSG">8806</name> 
          <version>6.0</version> 
         </parameterID> 
        </OperationParameter> 
       </usesParameter> 
       <usesParameter> 
        <OperationParameter gml:id="EPSG8807"> 
         <parameterName>False 
Northing</parameterName> 
         <parameterID> 
          <name codeSpace="EPSG">8807</name> 
          <version>6.0</version> 
         </parameterID> 
        </OperationParameter> 
       </usesParameter> 
      </OperationMethod> 
     </usesMethod> 
     <usesValue> 
      <value uom="urn:degree">49</value> 







OGC 03-010r9 


104 © OGC 2003 – All rights reserved
 


      <valueOfParameter xlink:href="#EPSG8801" 
xlink:title="Latitude of natural origin"/> 
     </usesValue> 
     <usesValue> 
      <value uom="urn:degree">-2</value> 
      <valueOfParameter xlink:href="#EPSG8802" 
xlink:title="Longitude of natural origin"/> 
     </usesValue> 
     <usesValue> 
      <value uom="urn:unity">0.999601272</value> 
      <valueOfParameter xlink:href="#EPSG8805" 
xlink:title="Scale factor at natural origin"/> 
     </usesValue> 
     <usesValue> 
      <value uom="urn:metre">400000</value> 
      <valueOfParameter xlink:href="#EPSG8806" 
xlink:title="False Easting"/> 
     </usesValue> 
     <usesValue> 
      <value uom="urn:metre">-100000</value> 
      <valueOfParameter xlink:href="#EPSG8807" 
xlink:title="False Northing"/> 
     </usesValue> 
    </Conversion> 
   </definedByConversion> 
   <usesCartesianCS> 
    <CartesianCS gml:id="EPSG4400"> 
     <csName>Cartesian</csName> 
     <csID> 
      <name codeSpace="EPSG">4400</name> 
      <version>6.0</version> 
     </csID> 
     <usesAxis> 
      <CoordinateSystemAxis gml:id="EPSG9906" 
gml:uom="urn:metre"> 
       <axisName>Easting</axisName> 
       <axisID> 
        <name codeSpace="EPSG">9906</name> 
        <version>6.0</version> 
       </axisID> 
       <axisAbbrev>E</axisAbbrev> 
       <axisDirection>east</axisDirection> 
      </CoordinateSystemAxis> 
     </usesAxis> 
     <usesAxis> 
      <CoordinateSystemAxis gml:id="EPSG9907" 
gml:uom="urn:metre"> 
       <axisName>Northing</axisName> 
       <axisID> 
        <name codeSpace="EPSG">9907</name> 
        <version>6.0</version> 
       </axisID> 
       <axisAbbrev>N</axisAbbrev> 
       <axisDirection>north</axisDirection> 
      </CoordinateSystemAxis> 
     </usesAxis> 
    </CartesianCS> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 105 
 


   </usesCartesianCS> 
  </ProjectedCRS> 
 </includesCRS> 
 <includesCRS> 
  <VerticalCRS gml:id="EPSG5701"> 
   <srsName>Newlyn</srsName> 
   <srsID> 
    <name codeSpace="EPSG">5701</name> 
    <version>6.0</version> 
   </srsID> 
   <usesVerticalCS> 
    <VerticalCS gml:id="EPSG6499"> 
     <csName>Gravity-related</csName> 
     <csID> 
      <name codeSpace="EPSG">6499</name> 
      <version>6.0</version> 
     </csID> 
     <usesAxis> 
      <CoordinateSystemAxis gml:id="EPSG9904" 
gml:uom="urn:metre"> 
       <axisName>Gravity-related height</axisName> 
       <axisID> 
        <name codeSpace="EPSG">9904</name> 
        <version>6.0</version> 
       </axisID> 
       <axisAbbrev>H</axisAbbrev> 
       <axisDirection>up</axisDirection> 
      </CoordinateSystemAxis> 
     </usesAxis> 
    </VerticalCS> 
   </usesVerticalCS> 
   <usesVerticalDatum> 
    <VerticalDatum gml:id="EPSG5101"> 
     <datumName>Ordnance Datum Newlyn</datumName> 
     <datumID> 
      <name codeSpace="EPSG">5101</name> 
      <version>6.0</version> 
     </datumID> 
     <verticalDatumType 
codeSpace="verticalDatumTypeCodeList.xml">geoidal</verticalDatumType> 
    </VerticalDatum> 
   </usesVerticalDatum> 
  </VerticalCRS> 
 </includesCRS> 
</CompoundCRS> 
 


Again, the above example XML just references the units #degree, #metre, and #unity (a 
scale factor unit). Definitions of those units could be included in this XML document by 
adding a Dictionary element in a metaDataProperty of this CompoundCRS. This could be 
done in the same manner as shown in the second example XML document in Subclause 
E.2. 







OGC 03-010r9 


106 © OGC 2003 – All rights reserved
 


E.4 Simple example XML for compound coordinate reference system 


The example XML document in the previous subclause includes many elements and 
attributes that are optional, and can thus be omitted when not needed. This subclause 
provides a simplified example XML document for the same 3D compound coordinate 
reference system, which omits most of the optional elements and attributes. This 
simplified example XML is intended to be adequate when the Projected CRS and the 
Vertical CRS are both well-known. That is, this simplified example assumes that server 
software can obtain the coordinate reference system specification and other data for these 
two coordinate reference systems using only the given "xlink:href" attribute values. 


<?xml version="1.0" encoding="UTF-8"?> 
<CompoundCRS xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" gml:id="EPSG7405"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <srsName>OSGB36 /British National Grid + ODN</srsName> 
 <srsID> 
  <name codeSpace="EPSG">7405</name> 
  <version>6.0</version> 
 </srsID> 
 <validArea> 
  <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. 
</description> 
 </validArea> 
 <includesCRS xlink:href="urn:ogc:srs:EPSG::27700" xlink:title="OSGB 
1936 / British National Grid"/> 
 <includesCRS xlink:href="urn:ogc:srs:EPSG::5701" 
xlink:title="Newlyn"/> 
</CompoundCRS> 
 


E.5 Example XML for Transverse Mercator conversion 


This subclause provides an example XML document using the Coordinate Operation 
concrete subtype "Conversion" XML element, with its' contained elements, here applied 
to an example Transverse Mercator map projection. 


NOTE  Subclause F.3.4 provides a corresponding example XML document using the example 
Transverse Mercator map projection XML Schema provided in Subclause F.3.3. That encoding of 
Transverse Mercator conversions is recommended, since multiple instances of the Transverse Mercator 
type of conversion are expected. 


<?xml version="1.0" encoding="UTF-8"?> 
<Conversion xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateOperations.xsd" gml:id="EPSG19916"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 107 
 


 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <!-- SourceCRS: EPSG:4277 OSGB 1936 --> 
 <!-- TargetCRS: EPSG:27700 OSGB 1936 / British National Grid --> 
 <coordinateOperationName>Transverse 
Mercator</coordinateOperationName> 
 <coordinateOperationID> 
  <name codeSpace="EPSG">19916</name> 
  <version>6.0</version> 
 </coordinateOperationID> 
 <usesMethod> 
  <OperationMethod gml:id="EPSG9807"> 
   <methodName>Transverse Mercator</methodName> 
   <methodID> 
    <name codeSpace="EPSG">9807</name> 
    <version>6.0</version> 
   </methodID> 
   <methodFormula>See Section 1.4.6 "Transverse Mercator" of EPSG 
Guidance Note 7, December 2000. </methodFormula> 
   <sourceDimensions>2</sourceDimensions> 
   <targetDimensions>2</targetDimensions> 
   <usesParameter> 
    <OperationParameter gml:id="EPSG8801"> 
     <parameterName>Latitude of natural 
origin</parameterName> 
     <parameterID> 
      <name codeSpace="EPSG">8801</name> 
      <version>6.0</version> 
     </parameterID> 
    </OperationParameter> 
   </usesParameter> 
   <usesParameter> 
    <OperationParameter gml:id="EPSG8802"> 
     <parameterName>Longitude of natural 
origin</parameterName> 
     <parameterID> 
      <name codeSpace="EPSG">8802</name> 
      <version>6.0</version> 
     </parameterID> 
    </OperationParameter> 
   </usesParameter> 
   <usesParameter> 
    <OperationParameter gml:id="EPSG8805"> 
     <parameterName>Scale factor at natural 
origin</parameterName> 
     <parameterID> 
      <name codeSpace="EPSG">8805</name> 
      <version>6.0</version> 
     </parameterID> 
    </OperationParameter> 
   </usesParameter> 
   <usesParameter> 
    <OperationParameter gml:id="EPSG8806"> 
     <parameterName>False Easting</parameterName> 
     <parameterID> 
      <name codeSpace="EPSG">8806</name> 
      <version>6.0</version> 
     </parameterID> 
    </OperationParameter> 







OGC 03-010r9 


108 © OGC 2003 – All rights reserved
 


   </usesParameter> 
   <usesParameter> 
    <OperationParameter gml:id="EPSG8807"> 
     <parameterName>False Northing</parameterName> 
     <parameterID> 
      <name codeSpace="EPSG">8807</name> 
      <version>6.0</version> 
     </parameterID> 
    </OperationParameter> 
   </usesParameter> 
  </OperationMethod> 
 </usesMethod> 
 <usesValue> 
  <value uom="urn:ogc:uom:degree">49</value> 
  <valueOfParameter xlink:href="#EPSG8801" xlink:title="Latitude of 
natural origin"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:degree">-2</value> 
  <valueOfParameter xlink:href="#EPSG8802" xlink:title="Longitude 
of natural origin"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:unity">0.999601272</value> 
  <valueOfParameter xlink:href="#EPSG8805" xlink:title="Scale 
factor at natural origin"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:metre">400000</value> 
  <valueOfParameter xlink:href="#EPSG8806" xlink:title="False 
Easting"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:metre">-100000</value> 
  <valueOfParameter xlink:href="#EPSG8807" xlink:title="False 
Northing"/> 
 </usesValue> 
</Conversion> 
 


The above example contains most details within the usesMethod element. If that 
Transverse Mercator OperationMethod is sufficiently well-known or the details are 
available elsewhere, a much shorter example XML document can be used: 


<?xml version="1.0" encoding="UTF-8"?> 
<Conversion xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateOperations.xsd" gml:id="EPSG19916"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <!-- SourceCRS: EPSG:4277 OSGB 1936 --> 
 <!-- TargetCRS: EPSG:27700 OSGB 1936 / British National Grid --> 
 <coordinateOperationName>Transverse 
Mercator</coordinateOperationName> 
 <coordinateOperationID> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 109 
 


  <name codeSpace="EPSG">19916</name> 
  <version>6.0</version> 
 </coordinateOperationID> 
 <usesMethod xlink:href="urn:ogc:method:EPSG::9807" 
xlink:title="Transverse Mercator"/> 
 <usesValue> 
  <value uom="urn:degree">49</value> 
  <valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8801" 
xlink:title="Latitude of natural origin"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:degree">-2</value> 
  <valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8802" 
xlink:title="Longitude of natural origin"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:unity">0.999601272</value> 
  <valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8805" 
xlink:title="Scale factor at natural origin"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:metre">400000</value> 
  <valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8806" 
xlink:title="False Easting"/> 
 </usesValue> 
 <usesValue> 
  <value uom="urn:ogc:uom:metre">-100000</value> 
  <valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8807" 
xlink:title="False Northing"/> 
 </usesValue> 
</Conversion> 
 


This example assumes that information for the Transverse Mercator OperationMethod is 
available elsewhere. Example XML for this is given in the following subclause. 


E.6 Example XML for operation method 


This subclause provides an example XML document using the OperationMethod 
element, with data for the Transverse Mercator conversion method. 


<?xml version="1.0" encoding="UTF-8"?> 
<OperationMethod xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateOperations.xsd" gml:id="EPSG9807"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/08/06. --> 
 <methodName>Transverse Mercator</methodName> 
 <methodID> 
  <name codeSpace="EPSG">9807</name> 
  <version>6.0</version> 
 </methodID> 
 <methodFormula>See Section 1.4.6 "Transverse Mercator" of EPSG 
Guidance Note 7, December 2000. </methodFormula> 
 <sourceDimensions>2</sourceDimensions> 







OGC 03-010r9 


110 © OGC 2003 – All rights reserved
 


 <targetDimensions>2</targetDimensions> 
 <usesParameter> 
  <OperationParameter gml:id="EPSG8801"> 
   <parameterName>Latitude of natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8801</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <OperationParameter gml:id="EPSG8802"> 
   <parameterName>Longitude of natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8802</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <OperationParameter gml:id="EPSG8805"> 
   <parameterName>Scale factor at natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8805</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <OperationParameter gml:id="EPSG8806"> 
   <parameterName>False Easting</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8806</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <OperationParameter gml:id="EPSG8807"> 
   <parameterName>False Northing</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8807</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </usesParameter> 
</OperationMethod> 
 


E.7 Example XML for CRS dictionary 


This subclause provides an example XML document using the Dictionary element from 
the dictionary.xsd schema of GML 3, with its’ contained elements, applied to the 
example CompoundCRS used in Subclause E.3 with all of its' components separated in 
the dictionary. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 111 
 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" 
gml:id="CrsDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <description>Example GML Dictinary of some coordinate reference 
systems and components. </description> 
 <name>CRS Dictionary</name> 
 <dictionaryEntry> 
  <CompoundCRS gml:id="EPSG7405"> 
   <srsName>OSGB36 /British National Grid + ODN</srsName> 
   <srsID> 
    <name codeSpace="EPSG">7405</name> 
    <version>6.0</version> 
   </srsID> 
   <validArea> 
    <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
   </validArea> 
   <includesCRS xlink:href="#EPSG27700" xlink:title="OSGB 1936 / 
British National Grid"/> 
   <includesCRS xlink:href="#EPSG5701" xlink:title="Newlyn"/> 
  </CompoundCRS> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <ProjectedCRS gml:id="EPSG27700"> 
   <srsName>OSGB 1936 / British National Grid</srsName> 
   <srsID> 
    <name codeSpace="EPSG">27700</name> 
    <version>6.0</version> 
   </srsID> 
   <validArea> 
    <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
   </validArea> 
   <baseCRS xlink:href="#EPSG4277" xlink:title="OSGB 1936"/> 
   <definedByConversion xlink:href="#EPSG19916" 
xlink:title="Transverse Mercator"/> 
   <usesCartesianCS xlink:href="#EPSG4400" 
xlink:title="Cartesian"/> 
  </ProjectedCRS> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <GeographicCRS gml:id="EPSG4277"> 
   <srsName>OSGB 1936</srsName> 
   <srsID> 
    <name codeSpace="EPSG">4277</name> 
    <version>6.0</version> 
   </srsID> 
   <validArea> 
    <description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </description> 
   </validArea> 







OGC 03-010r9 


112 © OGC 2003 – All rights reserved
 


   <usesEllipsoidalCS xlink:href="#EPSG6402" 
xlink:title="ellipsoidal"/> 
   <usesGeodeticDatum xlink:href="#EPSG6277" xlink:title="OSGB 
1936"/> 
  </GeographicCRS> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <EllipsoidalCS gml:id="EPSG6402"> 
   <csName>ellipsoidal</csName> 
   <csID> 
    <name codeSpace="EPSG">6402</name> 
    <version>6.0</version> 
   </csID> 
   <usesAxis xlink:href="#EPSG9901" xlink:title="Geodetic 
latitude"/> 
   <usesAxis xlink:href="#EPSG9902" xlink:title="Geodetic 
longitude"/> 
  </EllipsoidalCS> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <CoordinateSystemAxis gml:id="EPSG9901" 
gml:uom="urn:ogc:uom:degree"> 
   <axisName>Geodetic latitude</axisName> 
   <axisID> 
    <name codeSpace="EPSG">9901</name> 
    <version>6.0</version> 
   </axisID> 
   <axisAbbrev>Lat</axisAbbrev> 
   <axisDirection>north</axisDirection> 
  </CoordinateSystemAxis> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <CoordinateSystemAxis gml:id="EPSG9902" 
gml:uom="urn:ogc:uom:degree"> 
   <axisName>Geodetic longitude</axisName> 
   <axisID> 
    <name codeSpace="EPSG">9902</name> 
    <version>6.0</version> 
   </axisID> 
   <axisAbbrev>Lon</axisAbbrev> 
   <axisDirection>east</axisDirection> 
  </CoordinateSystemAxis> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <GeodeticDatum gml:id="EPSG6277"> 
   <datumName>OSGB 1936</datumName> 
   <datumID> 
    <name codeSpace="EPSG">6277</name> 
    <version>6.0</version> 
   </datumID> 
   <usesPrimeMeridian xlink:href="#EPSG8901" 
xlink:title="Greenwich"/> 
   <usesEllipsoid xlink:href="#EPSG7001" xlink:title="Airy 
1830"/> 
  </GeodeticDatum> 
 </dictionaryEntry> 
 <dictionaryEntry> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 113 
 


  <PrimeMeridian gml:id="EPSG8901"> 
   <meridianName>Greenwich</meridianName> 
   <meridianID> 
    <name codeSpace="EPSG">8901</name> 
    <version>6.0</version> 
   </meridianID> 
   <greenwichLongitude> 
    <angle uom="urn:ogc:uom:degree">0</angle> 
   </greenwichLongitude> 
  </PrimeMeridian> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Ellipsoid gml:id="EPSG7001"> 
   <ellipsoidName>Airy 1830</ellipsoidName> 
   <ellipsoidID> 
    <name codeSpace="EPSG">7001</name> 
    <version>6.0</version> 
   </ellipsoidID> 
   <semiMajorAxis 
uom="urn:ogc:uom:metre">6377563.396</semiMajorAxis> 
   <secondDefiningParameter> 
    <inverseFlattening 
uom="urn:ogc:uom:unity">299.3249646</inverseFlattening> 
   </secondDefiningParameter> 
  </Ellipsoid> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Conversion gml:id="EPSG19916"> 
   <coordinateOperationName>Transverse 
Mercator</coordinateOperationName> 
   <coordinateOperationID> 
    <name codeSpace="EPSG">19916</name> 
    <version>6.0</version> 
   </coordinateOperationID> 
   <usesMethod xlink:href="#EPSG9807" xlink:title="Transverse 
Mercator"/> 
   <usesValue> 
    <value uom="urn:ogc:uom:degree">49</value> 
    <valueOfParameter xlink:href="#EPSG8801" 
xlink:title="Latitude of natural origin"/> 
   </usesValue> 
   <usesValue> 
    <value uom="urn:ogc:uom:degree">-2</value> 
    <valueOfParameter xlink:href="#EPSG8802" 
xlink:title="Longitude of natural origin"/> 
   </usesValue> 
   <usesValue> 
    <value uom="urn:ogc:uom:unity">0.999601272</value> 
    <valueOfParameter xlink:href="#EPSG8805" xlink:title="Scale 
factor at natural origin"/> 
   </usesValue> 
   <usesValue> 
    <value uom="urn:ogc:uom:metre">400000</value> 
    <valueOfParameter xlink:href="#EPSG8806" xlink:title="False 
Easting"/> 
   </usesValue> 
   <usesValue> 
    <value uom="urn:ogc:uom:metre">-100000</value> 







OGC 03-010r9 


114 © OGC 2003 – All rights reserved
 


    <valueOfParameter xlink:href="#EPSG8807" xlink:title="False 
Northing"/> 
   </usesValue> 
  </Conversion> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <OperationMethod gml:id="EPSG9807"> 
   <methodName>Transverse Mercator</methodName> 
   <methodID> 
    <name codeSpace="EPSG">9807</name> 
    <version>6.0</version> 
   </methodID> 
   <methodFormula>See Section 1.4.6 "Transverse Mercator" of EPSG 
Guidance Note 7, December 2000. </methodFormula> 
   <sourceDimensions>2</sourceDimensions> 
   <targetDimensions>2</targetDimensions> 
   <usesParameter xlink:href="#EPSG8801" xlink:title="Latitude of 
natural origin"/> 
   <usesParameter xlink:href="#EPSG8802" xlink:title="Longitude 
of natural origin"/> 
   <usesParameter xlink:href="#EPSG8805" xlink:title="Scale 
factor at natural origin"/> 
   <usesParameter xlink:href="#EPSG8806" xlink:title="False 
Easting"/> 
   <usesParameter xlink:href="#EPSG8807" xlink:title="False 
Northing"/> 
  </OperationMethod> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <OperationParameter gml:id="EPSG8801"> 
   <parameterName>Latitude of natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8801</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <OperationParameter gml:id="EPSG8802"> 
   <parameterName>Longitude of natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8802</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <OperationParameter gml:id="EPSG8805"> 
   <parameterName>Scale factor at natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8805</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <OperationParameter gml:id="EPSG8806"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 115 
 


   <parameterName>False Easting</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8806</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <OperationParameter gml:id="EPSG8807"> 
   <parameterName>False Northing</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8807</name> 
    <version>6.0</version> 
   </parameterID> 
  </OperationParameter> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <CartesianCS gml:id="EPSG4400"> 
   <csName>Cartesian</csName> 
   <csID> 
    <name codeSpace="EPSG">4400</name> 
    <version>6.0</version> 
   </csID> 
   <usesAxis xlink:href="#EPSG9906" xlink:title="Easting"/> 
   <usesAxis xlink:href="#EPSG9907" xlink:title="Northing"/> 
  </CartesianCS> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <CoordinateSystemAxis gml:id="EPSG9906" 
gml:uom="urn:ogc:uom:metre"> 
   <axisName>Easting</axisName> 
   <axisID> 
    <name codeSpace="EPSG">9906</name> 
    <version>6.0</version> 
   </axisID> 
   <axisAbbrev>E</axisAbbrev> 
   <axisDirection>east</axisDirection> 
  </CoordinateSystemAxis> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <CoordinateSystemAxis gml:id="EPSG9907" 
gml:uom="urn:ogc:uom:metre"> 
   <axisName>Northing</axisName> 
   <axisID> 
    <name codeSpace="EPSG">9907</name> 
    <version>6.0</version> 
   </axisID> 
   <axisAbbrev>N</axisAbbrev> 
   <axisDirection>north</axisDirection> 
  </CoordinateSystemAxis> 
 </dictionaryEntry> 
</Dictionary> 
 







OGC 03-010r9 


116 © OGC 2003 – All rights reserved
 


E.8 Example XML for units dictionary 


This subclause provides an example XML document using the Dictionary element from 
the dictionary.xsd schema of GML 3, with its’ contained elements, applied to the units of 
measure used in the preceding XML examples. 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" 
gml:id="UnitsDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <description>Example GML Dictinary of unit 
definitions.</description> 
 <name>Units Dictionary</name> 
 <dictionaryEntry> 
  <ConventionalUnit gml:id="degree"> 
   <name>degree</name> 
   <name codeSpace="EPSG">9102</name> 
   <quantityType>angle</quantityType> 
   <conversionToPreferredUnit uom="#radian"> 
    <factor>1.74532925199433E-02</factor> 
   </conversionToPreferredUnit> 
  </ConventionalUnit> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <BaseUnit gml:id="radian"> 
   <name>radian</name> 
   <quantityType>angle</quantityType> 
   <unitsSystem xlink:href="urn:ogc:ToBeSupplied"/> 
  </BaseUnit> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <BaseUnit gml:id="metre"> 
   <name>metre</name> 
   <name codeSpace="EPSG">9001</name> 
   <quantityType>length</quantityType> 
   <unitsSystem xlink:href="urn:ogc:SI"/> 
  </BaseUnit> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <BaseUnit gml:id="unity"> 
   <name>unitless</name> 
   <quantityType>scale factor</quantityType> 
   <unitsSystem xlink:href="urn:ogc:ToBeSupplied"/> 
  </BaseUnit> 
 </dictionaryEntry> 
</Dictionary> 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 117 
 


E.9 Referencing a coordinate reference system 


The coordinate reference system (CRS) used by coordinates is referenced in the geometry 
XML elements defined by GML, and in a number of other places. GML 2 was limited to 
use of only well-known CRSs, so this reference to a CRS was abbreviated by a single 
attribute name and value, such as: 


srsName=”EPSG:4326” 
 
GML 3 still uses the srsName attribute, with type xsd:anyURI. This srsName might still 
be ”EPSG:4326”, or it can be a pointer to a more complete CRS definition stored 
somewhere else. That somewhere else could be any of several places, including: 


a) Outside the XML document where it is referenced, such as: 


1) In a dictionary of multiple CRS definitions available electronically from a 
specified URL. In this case, the srsName attribute could reference the dictionary, 
and the specific item in that dictionary. 


2) In a dictionary of multiple CRS definitions not available electronically. 
However, the srsName attribute could still reference the dictionary, and the 
specific item in that dictionary. 


3) In a catalog or registry service which stores CRS definitions, probably available 
electronically. In this case, the srsName attribute could reference the service, and 
the specific item available from that service. (The value ”EPSG:4326” can be 
considered to be a reference to the EPSG registry of CRS definitions.) 


b) Inside the XML document where it is referenced, such as: 


1) In a dictionary of one or more CRS definitions stored as metadata in some XML 
element in that XML document. (Storing a dictionary of units as metadata is 
discussed in Subclause E.2.) 


2) As one or more CRS definitions included in some XML element specified by an 
Application Schema based on the GML and/or CRS schemas. 


In all cases listed above, the remote CRS definition could be XML encoded as specified 
in this document. For example, a XML encoded dictionary of CRS definitions could be 
similar to the units Dictionary example given in Subclause E.7. When the CRS definition 
is stored outside the XML document where it is referenced (item a) above), the remote 
CRS definition would not need to be encoded in XML. 


E.10 Example XML for image CRS 


This subclause provides an example XML document using the ImageCRS element from 
the coordinateReferenceSystems.xsd schema, with its’ contained elements, applied to an 
image coordinate reference system that might be used for most 2D images. 


<?xml version="1.0" encoding="UTF-8"?> 
<ImageCRS xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 







OGC 03-010r9 


118 © OGC 2003 – All rights reserved
 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
../crsSchemas/base/coordinateReferenceSystems.xsd" gml:id="ImageCRS1"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <srsName>Generic image coordinate reference system</srsName> 
 <usesCartesianCS> 
  <CartesianCS gml:id="ImageCS1"> 
   <csName>2D Cartesian image coordinate system</csName> 
   <usesAxis> 
    <CoordinateSystemAxis gml:id="ImageRow" 
gml:uom="urn:ogc:uom:PixelSpacing"> 
     <axisName>Image Row Axis</axisName> 
     <axisAbbrev>R</axisAbbrev> 
     <axisDirection>display down</axisDirection> 
    </CoordinateSystemAxis> 
   </usesAxis> 
   <usesAxis> 
    <CoordinateSystemAxis gml:id="ImageColumn" 
gml:uom="urn:ogc:uom:PixelSpacing"> 
     <axisName>Image Column Axis</axisName> 
     <axisAbbrev>C</axisAbbrev> 
     <axisDirection>display right</axisDirection> 
    </CoordinateSystemAxis> 
   </usesAxis> 
  </CartesianCS> 
 </usesCartesianCS> 
 <usesImageDatum> 
  <ImageDatum gml:id="ImageDatum1"> 
   <datumName>Image Datum 1</datumName> 
   <anchorPoint>image corner 1, 1</anchorPoint> 
   <pixelInCell codeSpace="pixelInCellCodeList.xml">cell 
center</pixelInCell> 
  </ImageDatum> 
 </usesImageDatum> 
</ImageCRS> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 119 
 


Annex F 
(informative) 


 
Application schema examples 


F.1 Introduction 


This annex provides several example Application Schemas based on these CRS Schemas, 
each with a corresponding example XML document using that Application Schema plus 
the example UML model from which that Application Schemas was converted. For more 
information on Application Schemas, see Subclauses 6.3 and A.4. 


These XML examples use patterns that are not specified in this document for values of 
the "gml:id", "gml:uom", "xlink:href", and "xlink:title" XML attributes. 


EDITOR'S NOTE  Some of the patterns now used for values of these attributes may be invalid or 
inappropriate. I urge reviewers to suggest any needed or desirable improvements. 


NOTE  For interoperability, the patterns or formats used for the values of these attributes must be 
specified somewhere, normally in or with the Application Schema. 


F.2 Extended operation parameter definition 


F.2.1 Introduction 


Many needs are expected for encoding additional information describing coordinate 
reference systems and their components. This subclause provides an example of such 
extended encoding, applied to Operation Parameters. The following subclauses contain: 


a) A draft class diagram of a UML package for an Extended Operation Parameter, which 
builds on the UML model in OGC Abstract Specification Topic 2. 


b) A draft XML Schema for encoding an Extended Operation Parameter, produced by 
converting this UML package. 


c) A XML encoding of the possible contents of the <<CodeList>> stereotyped 
ParameterType class in this UML package. 


d) An example XML document based on this draft XML Schema for encoding an 
Extended Operation Parameter 


F.2.2 UML package 


Figure F.1 is a class diagram of an example UML package for an Extended Operation 
Method. This UML package builds on the UML model in OGC Abstract Specification 
Topic 2. 







OGC 03-010r9 


120 © OGC 2003 – All rights reserved
 


CC_OperationParameter
(from CC_CoordinateOperation)


CC_OperationMethod
(from CC_CoordinateOperation)


CC_GeneralOperationParameter
(from CC_CoordinateOperation)


<<Abstract>>


0..n


0..n


0..n


+usesParameter0..n


ExtendedOperationParameter
+ parameterType : ParameterType


ParameterType
+ measure
+ length
+ scale
+ time
+ grid length
+ angle choice
+ angle
+ dms angle
+ length or angle
+ string
+ positive integer
+ non negative integer
+ boolean
+ measure list
+ length list
+ scale list
+ angle list
+ time list
+ grid length list
+ velocity list
+ integer list
+ positive integer list
+ any URI


<<CodeList>>


 


Figure F.1 — UML package for Extended Operation Method 


F.2.3 Application schema 


This subclause contains an example XML Schema for encoding an Extended Operation 
Parameter, produced by converting the above UML package. This XML Schema builds 
on the coordinateOperations.xsd XML Schema contained in Subclause C.6. This draft 
XML Schema is written following the same GML 3 patterns and ISO 19118 XML 
encoding rules as used in the XML Schemas in Annex C. This draft XML Schema is 
written as an Application Schema in a different namespace. 


This example XML Schema is: 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/examples" 
xmlns:ex="http://www.opengis.net/examples" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
version="0.2.0" xml:lang="en"> 
 <annotation> 
  <documentation> 
   <name>extendedOperationParameter.xsd</name> 
   <version>0.2.0</version> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 121 
 


   <scope>How to encode extended information for operation 
parameters. </scope> 
   <description>Example Application Schema to encode extended 
information for operation parameters. Builds on 
coordinateOperations.xsd, and follows same GML 3 patterns and ISO 19118 
encoding. Written in the "ex" namespace. Primary editor: Arliss 
Whiteside. Last updated 2003/09/19. </description> 
   <copyright>Copyright (c) 2003 OpenGIS, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes a draft Extended Operation 
Parameter package that builds on the Coordinate Operation (CC_) package 
of the extended UML Model for OGC Abstract Specification Topic 2: 
Spatial Referencing by Coordinates. That draft package defines a 
subtype of the CC_OperationParameter class for recording more 
information. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <import namespace="http://www.opengis.net/gml" 
schemaLocation="../crsSchemas/base/coordinateOperations.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <element name="ExtendedOperationParameter" 
type="ex:ExtendedOperationParameterType" 
substitutionGroup="gml:OperationParameter"/> 
 <!-- =================================================== --> 
 <complexType name="ExtendedOperationParameterType"> 
  <annotation> 
   <documentation>Extended definition of an operation parameter. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:OperationParameterType"> 
    <sequence> 
     <element ref="ex:parameterType"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="parameterType" type="ex:ParameterTypeType"/> 
 <!-- =================================================== --> 
 <complexType name="ParameterTypeType"> 
  <annotation> 
   <documentation>Data type of an operation parameter. Usually 
refers to a data type defined in measures.xsd or allowed in the 
ParameterValueType of coordinateOperations.xsd. </documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" use="required"> 
     <annotation> 
      <documentation>Reference to a source of information 
specifying the values and meanings of all the allowed string values for 
this ParameterTypeType. </documentation> 







OGC 03-010r9 


122 © OGC 2003 – All rights reserved
 


     </annotation> 
    </attribute> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="extendedOperationParameterRef" 
type="ex:extendedOperationParameterRefType" 
substitutionGroup="gml:operationParameterRef"/> 
 <!-- =================================================== --> 
 <complexType name="extendedOperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an Extended Operation Parameter, 
either referencing or containing the definition of that Parameter. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:OperationParameterRefType"> 
    <sequence> 
     <element ref="ex:ExtendedOperationParameter" 
minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
</schema> 
 


F.2.4 Standard contents of parameterType 


A standard set of allowed values and their meanings for the parameterType element is 
specified in the <<CodeList>> stereotyped class in the UML model that was converted. 
Those string values and their meanings are specified in the following UML document, 
using the XML Schema defined in Subclause D.2: 


<?xml version="1.0" encoding="UTF-8"?> 
<CodeListDictionary xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/ex codeListDictionary.xsd" 
gml:id="parameterType"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/18. --> 
 <gml:description>Data type of an operation parameter. Usually refers 
to a data type defined in measures.xsd or allowed in the 
ParameterValueType of coordinateOperations.xsd. </gml:description> 
 <gml:name>parameterType</gml:name> 
 <codeEntry> 
  <CodeDefinition gml:id="measure"> 
   <gml:description>General numeric value of an operation 
parameter, with its associated unit of measure. </gml:description> 
   <code>measure</code> 
  </CodeDefinition> 
 </codeEntry> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 123 
 


 <codeEntry> 
  <CodeDefinition gml:id="length"> 
   <gml:description>Value of a length (or distance) quantity, 
with its units. Uses the MeasureType with the restriction that the unit 
of measure referenced by uom must be suitable for a length, such as 
metres or feet. </gml:description> 
   <code>length</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="scale"> 
   <gml:description>Value of a scale factor (or ratio) that has 
no physical unit. Uses the MeasureType with the restriction that the 
unit of measure referenced by uom must be suitable for a scale factor, 
such as one, percent, permil, or parts-per-million. </gml:description> 
   <code>scale</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="time"> 
   <gml:description>Value of a time or temporal quantity, with 
its units. Uses the MeasureType with the restriction that the unit of 
measure referenced by uom must be suitable for a time value, such as 
seconds or weeks. </gml:description> 
   <code>time</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="gridLength"> 
   <gml:description>Value of a length (or distance) quantity in a 
grid, where the grid spacing does not have any associated physical 
units, or does not have a constant physical spacing. This grid length 
will often be used in a digital image grid, where the base units are 
likely to be pixel spacings. Uses the MeasureType with the restriction 
that the unit of measure referenced by uom must be suitable for length 
along the axes of a grid, such as pixel spacings or grid 
spacings.</gml:description> 
   <code>grid length</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="angleChoice"> 
   <gml:description>Value of an angle quantity provided in either 
degree-minute-second format or single value format. </gml:description> 
   <code>angle choice</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="angle"> 
   <gml:description>Value of an angle quantity recorded as a 
single number, with its units. Uses the MeasureType with the 
restriction that the unit of measure referenced by uom must be suitable 
for an angle, such as degrees or radians. </gml:description> 
   <code>angle</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="dmsAngle"> 







OGC 03-010r9 


124 © OGC 2003 – All rights reserved
 


   <gml:description>Value of an angle operation parameter, in 
either degree-minute-second format or single value format. 
</gml:description> 
   <code>dms angle</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="lengthOrAngle"> 
   <gml:description>Value of a length or angle quantity, where an 
angle can be recorded in either degree-minute-second format or single 
value format. Often used for horizontal ground coordinates. 
</gml:description> 
   <code>length or angle</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="string"> 
   <gml:description>String value of an operation parameter. A 
string value does not have an associated unit of measure. 
</gml:description> 
   <code>string</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="positiveInteger"> 
   <gml:description>Positive integer value of an operation 
parameter, usually used for a count. An integer value does not have an 
associated unit of measure. </gml:description> 
   <code>positive integer</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="nonNegativeInteger"> 
   <gml:description>Zero or positive integer value of an 
operation parameter. An integer value does not have an associated unit 
of measure. </gml:description> 
   <code>non negative integer</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="boolean"> 
   <gml:description>Boolean value of an operation parameter. A 
Boolean value does not have an associated unit of measure. 
</gml:description> 
   <code>boolean</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="measureList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list, where each value has the same 
associated unit of measure. An element of this type contains a space-
separated list of double values. </gml:description> 
   <code>measure list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 125 
 


  <CodeDefinition gml:id="lengthList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list of Length measures. Each value 
has the same associated unit of measure suitable for a length, such as 
metres or feet. An element of this type contains a space-separated list 
of double values. </gml:description> 
   <code>length list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="scaleList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list of Scale measures. Each value has 
the same associated unit of measure suitable for a scale factor, such 
as one, percent, permil, or parts-per-million. An element of this type 
contains a space-separated list of double values. </gml:description> 
   <code>scale list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="angleList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list of Angle measures, each recorded 
as a single number. Each value has the same associated unit of measure 
suitable for an angle, such as degrees or radians. An element of this 
type contains a space-separated list of double values. 
</gml:description> 
   <code>angle list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="timeList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list of Time measures, each recorded 
as a single number. Each value has the same associated unit of measure 
suitable for a time value, such as seconds or days. An element of this 
type contains a space-separated list of double values. 
</gml:description> 
   <code>time list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="gridLengthList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list of Grid Length measures. Each 
value has the same associated unit of measure suitable for length along 
the axes of a grid, such as pixel spacings or grid spacings. An element 
of this type contains a space-separated list of double values. 
</gml:description> 
   <code>grid length list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="velocityList"> 
   <gml:description>Ordered sequence of two or more numeric 
values of an operation parameter list of Velocity measures. Each value 
has the same associated unit of measure suitable for a velocity, such 







OGC 03-010r9 


126 © OGC 2003 – All rights reserved
 


as metres per second or miles per hour. An element of this type 
contains a space-separated list of double values. </gml:description> 
   <code>velocity list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="integerList"> 
   <gml:description>Ordered sequence of two or more integer 
values of an operation parameter list, usually used for counts. These 
integer values do not have an associated unit of measure. An element of 
this type contains a space-separated list of integer values. 
</gml:description> 
   <code>integer list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="positiveIntegerList"> 
   <gml:description>Ordered sequence of two or more positive 
integer values of an operation parameter list, usually used for counts. 
These integer values do not have an associated unit of measure. An 
element of this type contains a space-separated list of integer values. 
</gml:description> 
   <code>positive integer list</code> 
  </CodeDefinition> 
 </codeEntry> 
 <codeEntry> 
  <CodeDefinition gml:id="anyURI"> 
   <gml:description>Reference to a file or a part of a file 
containing one or more parameter values, each numeric value with its 
associated unit of measure. When referencing a part of a file, that 
file must contain multiple identified parts, such as an XML encoded 
document. Furthermore, the referenced file or part of a file can 
reference another part of the same or different files, as allowed in 
XML documents. </gml:description> 
   <code>anyURI</code> 
  </CodeDefinition> 
 </codeEntry> 
</CodeListDictionary> 
 


F.2.5 Example XML document 


An example XML document based on this example XML Schema for encoding Extended 
Operation Parameters applied to the Transverse Mercator Operation Method is: 


NOTE  Subclause E.5 provides a corresponding example XML document not using an Application 
Schema. 


<?xml version="1.0" encoding="UTF-8"?> 
<OperationMethod xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:ex="http://www.opengis.net/examples" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.opengis.net/examples 
extendedOperationParameter.xsd" gml:id="EPSG9807"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/19. --> 
 <methodName>Transverse Mercator</methodName> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 127 
 


 <methodID> 
  <name codeSpace="EPSG">9807</name> 
  <version>6.0</version> 
 </methodID> 
 <methodFormula>See Section 1.4.6 "Transverse Mercator" of EPSG 
Guidance Note 7, December 2000. </methodFormula> 
 <sourceDimensions>2</sourceDimensions> 
 <targetDimensions>2</targetDimensions> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="EPSG8801"> 
   <parameterName>Latitude of natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8801</name> 
    <version>6.0</version> 
   </parameterID> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">AngleChoiceType</ex:parameterType
> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="EPSG8802"> 
   <parameterName>Longitude of natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8802</name> 
    <version>6.0</version> 
   </parameterID> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">AngleChoiceType</ex:parameterType
> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="EPSG8805"> 
   <parameterName>Scale factor at natural origin</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8805</name> 
    <version>6.0</version> 
   </parameterID> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">ScaleType</ex:parameterType> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="EPSG8806"> 
   <parameterName>False Easting</parameterName> 
   <parameterID> 
    <name codeSpace="EPSG">8806</name> 
    <version>6.0</version> 
   </parameterID> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="EPSG8807"> 
   <parameterName>False Northing</parameterName> 
   <parameterID> 







OGC 03-010r9 


128 © OGC 2003 – All rights reserved
 


    <name codeSpace="EPSG">8807</name> 
    <version>6.0</version> 
   </parameterID> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
</OperationMethod> 
 


F.3 Transverse Mercator conversion 


F.3.1 Introduction 


Standardized XML encoding is needed for a number of specific commonly-used types of 
coordinate conversions and transformations. This subclause provides an example of one 
such encoding, applied to one commonly-used conversion type, namely the Transverse 
Mercator map projection. The following subclauses contain: 


a) A draft class diagram of a UML package for the Transverse Mercator type of map 
projection, which builds on the UML model in OGC Abstract Specification Topic 2. 


b) A draft XML Schema for encoding a Transverse Mercator projection, produced by 
converting this UML package. 


c) Two example XML documents based on this draft XML Schema for encoding an 
example Transverse Mercator map projection 


F.3.2 UML package 


Figure F.2 is a draft class diagram of a UML package for Transverse Mercator map 
projections. This class diagram is incomplete in that many of the needed association role 
names and multiplicities are not shown due to lack of space. This UML package builds 
on the UML model in OGC Abstract Specification Topic 2. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 129 
 


CC_Conversion
(from CC_CoordinateOperation)


CC_OperationParameter
(from CC_CoordinateOperation)


CC_GeneralOperationParamet
er


(from CC_CoordinateOperation)


<<Abstract>>


LongitudeOfNaturalOriginValue
+ angleValue : Angle


FalseEastingValue
+ lengthValue : Length


FalseNorthingValue
+ lengthValue : Length


LatitudeOfNaturalOriginValue
+ angleValue : Angle


1


0..n


+valueOfParameter


1


0..n


ScaleFatorAtNaturalOriginValue
+ scaleValue : Scale


1


0..n


+valueOfParameter


1


0..n


CC_OperationMethod
(from CC_CoordinateOperation)


0..n


0..n


0..n


+usesParameter 0..n


TransverseMercatorConversion


1


0..*


+usesMethod


1


CC_ParameterValue
(from CC_CoordinateOperation)


<<Union>>
0..*


 


Figure F.2 — UML package for Transverse Mercator projection 











OGC 03-010r9 


© OGC 2003 – All rights reserved 131 
 


F.3.3 Application schema 


This subclause contains an example XML Schema for encoding a Transverse Mercator 
projection, produced by converting the above UML package. This XML Schema builds 
on the coordinateOperations.xsd XML Schema contained in Subclause C.6. This draft 
XML Schema is written following the same GML 3 patterns and ISO 19118 XML 
encoding rules as used in the XML Schemas in Annex C. This draft XML Schema is 
written as an application schema in a different namespace. Of course, it could be 
rewritten as an additional XML Schema in the GML namespace, and would be similar. 


EDITORS NOTE:  In this draft XML Schema, I included documentation element text based on my limited 
understanding of the Transverse Mercator map projection. I urge John Bobbitt, Roel Nicolai, and others to 
suggest improvements in the wording of these documentation elements. 


This draft XML Schema is: 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/examples" 
xmlns:ex="http://www.opengis.net/examples" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
xml:lang="en"> 
 <annotation> 
  <documentation> 
   <name>transverseMercator.xsd</name> 
   <version>0.2</version> 
   <scope>How to encode definition of specific Transverse 
Mercator conversion. </scope> 
   <description>Example Application Schema to encode the data 
needed to define a specific Transverse Mercator type of map projection, 
which is a coordinate conversion. Builds on coordinateOperations.xsd, 
and follows same GML 3 patterns and ISO 19118 encoding. Written in the 
"ex" namespace. Primary editor: Arliss Whiteside. Last updated 
2003/09/19. </description> 
   <reference>Guidance Note Number 7 "Coordinate Conversions and 
Transformations including Formulas" (available through 
http://www.epsg.org/), especially Section 1.4.6 "Transverse Mercator". 
</reference> 
   <copyright>Copyright (c) 2002-2003 OpenGIS, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes a draft Transverse Mercator 
package that builds on the Coordinate Operation (CC_) package of the 
extended UML Model for OGC Abstract Specification Topic 2: Spatial 
Referencing by Coordinates. That draft package defines restricted 
subtypes of the CC_Conversion and CC_ParameterValue classes as needed 
for the Transverse Mercator map projection conversion. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <import namespace="http://www.opengis.net/gml" 
schemaLocation="../crsSchemas/base/coordinateOperations.xsd"/> 
 <!-- ====================================================== 
       elements and types 







OGC 03-010r9 


132 © OGC 2003 – All rights reserved
 


 ====================================================== --> 
 <element name="TransverseMercatorConversion" 
type="ex:TransverseMercatorConversionType" 
substitutionGroup="gml:_GeneralConversion"/> 
 <!-- =================================================== --> 
 <complexType name="TransverseMercatorConversionType"> 
  <annotation> 
   <documentation>Specific Transverse Mercator map projection. 
Uses the AbstractGeneralConversionType with restricted values for 
included elements, including elements in the coordinateOperationID 
element with the IdentifierType. If appropriate, the "codeSpace" 
element should have the string value "EPSG", and the "code" element 
should then have the appropriate EPSG code value. The other elements in 
the IdentifierType can be omitted. The "coordinateOperationName" 
element shall have a string value that names a specific Transverse 
Mercator map projection. The "_PositionalAccuracy" and 
"metaDataProperty" elements can be omitted. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralConversionType"> 
    <sequence> 
     <element ref="gml:usesMethod"/> 
     <element ref="ex:usesLatitudeOfNaturalOriginValue"/> 
     <element ref="ex:usesLongitudeOfNaturalOriginValue"/> 
     <element ref="ex:usesScaleFactorAtNaturalOriginValue"/> 
     <element ref="ex:usesFalseEastingValue"/> 
     <element ref="ex:usesFalseNorthingValue"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="transverseMercatorConversionRef" 
type="ex:TranverseMercatorConversionRefType" 
substitutionGroup="gml:generalConversionRef"/> 
 <!-- =================================================== --> 
 <complexType name="TranverseMercatorConversionRefType"> 
  <annotation> 
   <documentation>Association to a Transverse Mercator 
Conversion, either referencing or containing the definition of that 
Conversion. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralConversionRefType"> 
    <sequence> 
     <element ref="ex:TransverseMercatorConversion" 
minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="usesLatitudeOfNaturalOriginValue" 
type="ex:AngleValueType" 
substitutionGroup="gml:_generalParameterValue"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 133 
 


  <annotation> 
   <documentation>Value of the Latitude of the natural origin 
parameter for a specific coordinate conversion. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesLongitudeOfNaturalOriginValue" 
type="ex:AngleValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Value of the Longitude of the natural origin 
(or central meridian) parameter for a specific coordinate conversion. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesScaleFactorAtNaturalOriginValue" 
type="ex:ScaleValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Value of the scale factor at the natural origin 
(on the central meridian) parameter for a specific coordinate 
conversion. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesFalseEastingValue" type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Value of the false Easting coordinate of the 
origin parameter for a specific coordinate conversion. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesFalseNorthingValue" type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Value of the false Northing coordinate of the 
origin parameter for a specific coordinate conversion. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <complexType name="AngleValueType"> 
  <annotation> 
   <documentation>Angle measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <choice> 
      <element ref="ex:angleValue"/> 
      <element ref="gml:dmsAngleValue"/> 
     </choice> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 







OGC 03-010r9 


134 © OGC 2003 – All rights reserved
 


  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="ScaleValueType"> 
  <annotation> 
   <documentation>Scale measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:scaleValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="LengthValueType"> 
  <annotation> 
   <documentation>Length measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:lengthValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="angleValue" type="gml:AngleType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Angle value of an operation parameter, recorded 
as a single number, with a unit of measure suitable for an angle, such 
as degrees or radians. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="scaleValue" type="gml:ScaleType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Scale factor value of an operation parameter, 
with a unit of measure suitable for a scale factor, such as percent, 
permil, or parts-per-million. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="lengthValue" type="gml:LengthType" 
substitutionGroup="gml:value"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 135 
 


   <documentation>Length value of an operation parameter, with a 
unit of measure suitable for a length, such as metres or feet. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
</schema> 


 
F.3.4 Example XML documents 


An example XML document based on this example XML Schema for encoding an 
example Transverse Mercator map projection is: 


<?xml version="1.0" encoding="UTF-8"?> 
<TransverseMercatorConversion xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.opengis.net/examples 
transverseMercator.xsd" gml:id="EPSG19916"> 
 <!-- Example XML document. Primary editor: Arliss Whiteside. Last 
updated 2003/09/19. --> 
 <!-- SourceCRS: EPSG:4277 OSGB 1936 --> 
 <!-- TargetCRS: EPSG:27700 OSGB 1936 / British National Grid --> 
 <gml:coordinateOperationName>Transverse 
Mercator</gml:coordinateOperationName> 
 <gml:validArea> 
  <gml:description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </gml:description> 
 </gml:validArea> 
 <gml:usesMethod xlink:href="urn:ogc:srs:EPSG::9807"/> 
 <usesLatitudeOfNaturalOriginValue> 
  <angleValue uom="urn:ogc:uom:degree">49</angleValue> 
  <gml:valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8801"/> 
 </usesLatitudeOfNaturalOriginValue> 
 <usesLongitudeOfNaturalOriginValue> 
  <angleValue uom="urn:ogc:uom:degree">-2</angleValue> 
  <gml:valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8802"/> 
 </usesLongitudeOfNaturalOriginValue> 
 <usesScaleFactorAtNaturalOriginValue> 
  <scaleValue uom="urn:ogc:uom:unity">0.999601272</scaleValue> 
  <gml:valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8805"/> 
 </usesScaleFactorAtNaturalOriginValue> 
 <usesFalseEastingValue> 
  <lengthValue uom="urn:ogc:uom:metre">400000</lengthValue> 
  <gml:valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8806"/> 
 </usesFalseEastingValue> 
 <usesFalseNorthingValue> 
  <lengthValue uom="urn:ogc:uom:metre">-100000</lengthValue> 
  <gml:valueOfParameter xlink:href="urn:ogc:parameter:EPSG::8807"/> 
 </usesFalseNorthingValue> 
</TransverseMercatorConversion> 
 


The above XML example assumes that the Application Schema specified in Subclause 
F.3.3 is accessible using the location transverseMercator.xsd. This example also assumes 
that (complete) information for the Transverse Mercator OperationMethod is available 







OGC 03-010r9 


136 © OGC 2003 – All rights reserved
 


elsewhere, referenced by urn:ogc:srs:EPSG::9807. Example XML for that 
OperationMethod information is given in Subclauses E.5 and F.2.4. Alternately, this 
OperationMethod information could be included in-line in the longer example XML 
document: 


<?xml version="1.0" encoding="UTF-8"?> 
<TransverseMercatorConversion xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.opengis.net/examples 
transverseMercator.xsd" gml:id="EPSG19916"> 
 <!-- Example XML document. Primary editor: Arliss Whiteside. Last 
updated 2003/09/19. --> 
 <!-- SourceCRS: EPSG:4277 OSGB 1936 --> 
 <!-- TargetCRS: EPSG:27700 OSGB 1936 / British National Grid --> 
 <gml:coordinateOperationName>Transverse 
Mercator</gml:coordinateOperationName> 
 <gml:coordinateOperationID> 
  <gml:name codeSpace="EPSG">19916</gml:name> 
  <gml:version>6.0</gml:version> 
 </gml:coordinateOperationID> 
 <gml:validArea> 
  <gml:description>United Kingdom (UK) - Great Britain - England 
Scotland Wales - onshore; Isle of Man. </gml:description> 
 </gml:validArea> 
 <gml:usesMethod> 
  <gml:OperationMethod gml:id="EPSG9807"> 
   <gml:methodName>Transverse Mercator</gml:methodName> 
   <gml:methodID> 
    <gml:name codeSpace="EPSG">9807</gml:name> 
    <gml:version>6.0</gml:version> 
   </gml:methodID> 
   <gml:methodFormula>See Section 1.4.6 "Transverse Mercator" of 
EPSG Guidance Note 7, December 2000. </gml:methodFormula> 
   <gml:sourceDimensions>2</gml:sourceDimensions> 
   <gml:targetDimensions>2</gml:targetDimensions> 
   <gml:usesParameter> 
    <gml:OperationParameter gml:id="EPSG8801"> 
     <gml:parameterName>Latitude of natural 
origin</gml:parameterName> 
     <gml:parameterID> 
      <gml:name codeSpace="EPSG">8801</gml:name> 
      <gml:version>6.0</gml:version> 
     </gml:parameterID> 
    </gml:OperationParameter> 
   </gml:usesParameter> 
   <gml:usesParameter> 
    <gml:OperationParameter gml:id="EPSG8802"> 
     <gml:parameterName>Longitude of natural 
origin</gml:parameterName> 
     <gml:parameterID> 
      <gml:name codeSpace="EPSG">8802</gml:name> 
      <gml:version>6.0</gml:version> 
     </gml:parameterID> 
    </gml:OperationParameter> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 137 
 


   </gml:usesParameter> 
   <gml:usesParameter> 
    <gml:OperationParameter gml:id="EPSG8805"> 
     <gml:parameterName>Scale factor at natural 
origin</gml:parameterName> 
     <gml:parameterID> 
      <gml:name codeSpace="EPSG">8805</gml:name> 
      <gml:version>6.0</gml:version> 
     </gml:parameterID> 
    </gml:OperationParameter> 
   </gml:usesParameter> 
   <gml:usesParameter> 
    <gml:OperationParameter gml:id="EPSG8806"> 
     <gml:parameterName>False Easting</gml:parameterName> 
     <gml:parameterID> 
      <gml:name codeSpace="EPSG">8806</gml:name> 
      <gml:version>6.0</gml:version> 
     </gml:parameterID> 
    </gml:OperationParameter> 
   </gml:usesParameter> 
   <gml:usesParameter> 
    <gml:OperationParameter gml:id="EPSG8807"> 
     <gml:parameterName>False Northing</gml:parameterName> 
     <gml:parameterID> 
      <gml:name codeSpace="EPSG">8807</gml:name> 
      <gml:version>6.0</gml:version> 
     </gml:parameterID> 
    </gml:OperationParameter> 
   </gml:usesParameter> 
  </gml:OperationMethod> 
 </gml:usesMethod> 
 <usesLatitudeOfNaturalOriginValue> 
  <angleValue uom="urn:ogc:uom:degree">49</angleValue> 
  <gml:valueOfParameter xlink:href="#EPSG8801"/> 
 </usesLatitudeOfNaturalOriginValue> 
 <usesLongitudeOfNaturalOriginValue> 
  <angleValue uom="urn:ogc:uom:degree">-2</angleValue> 
  <gml:valueOfParameter xlink:href="#EPSG8802"/> 
 </usesLongitudeOfNaturalOriginValue> 
 <usesScaleFactorAtNaturalOriginValue> 
  <scaleValue uom="urn:ogc:uom:unity">0.999601272</scaleValue> 
  <gml:valueOfParameter xlink:href="#EPSG8805"/> 
 </usesScaleFactorAtNaturalOriginValue> 
 <usesFalseEastingValue> 
  <lengthValue uom="urn:ogc:uom:metre">400000</lengthValue> 
  <gml:valueOfParameter xlink:href="#EPSG8806"/> 
 </usesFalseEastingValue> 
 <usesFalseNorthingValue> 
  <lengthValue uom="urn:ogc:uom:metre">-100000</lengthValue> 
  <gml:valueOfParameter xlink:href="#EPSG8807"/> 
 </usesFalseNorthingValue> 
</TransverseMercatorConversion> 
 







OGC 03-010r9 


138 © OGC 2003 – All rights reserved
 


F.4 Universal image geometry model transformation 


F.4.1 Introduction 


Standardized XML encoding is needed for a number of frequently-used types of image 
coordinate transformations. This subclause provides an example of one such encoding, 
applied to an example image coordinate transformation. That example type of image 
coordinate transformation is the one described in Section 6.5 of OGC Abstract 
Specification Topic 7: The Earth Imagery Case, namely the Universal Image Geometry 
Model (UIGM). That UIGM transformation is from a 3D ground coordinate reference 
system to a 2D image coordinate reference system, and has been simplified here for 
brevity. The following subclauses contain: 


a) A draft class diagram of a UML package for this simplified UIGM transformation, 
which builds on the UML model in OGC Abstract Specification Topic 2. 


b) Two draft XML Schemas for encoding this simplified UIGM transformation, 
produced by converting this UML package. 


c) An example XML document based on this draft XML Schema for encoding an 
example UIGM transformation, plus an example XML document based on the 
Application Schema in Subclause F.2.3 for encoding the Operation Method used by 
this UIGM transformation. 


F.4.2 UML package 


Figures F.3 to F.7 contain the five parts of a draft class diagram of a UML package for 
this simplified UIGM transformation. Figure F.3 shows the top level of the class diagram, 
without showing the components of the SectionParametersGroup and 
MonoscopicErrorsGroup. This diagram is incomplete in that some of the needed 
association role names and multiplicities are not shown due to lack of space. Figure F.4 
shows the top level within the SectionParametersGroup, without showing the components 
of the NormalizationParametersGroup and PolynomialGroup. Figure F.5 shows one 
example parameter value in the NormalizationParametersGroup, with a note listing the 
other nine parameter values. Figure F.6 shows two example parameter values in the 
PolynomialGroup, with a note listing the six other parameter values. Figure F.7 shows the 
complete contents of the MonoscopicErrorsGroup.







OGC 03-010r9 


© OGC 2003 – All rights reserved 139 
 


CC_ParameterValueGroup
(from CC_CoordinateOperation)


CC_ParameterValue
(from CC_CoordinateOperation)


<<Union>>
CC_Transformation


(from CC_CoordinateOperation)


CC_GeneralOperationParameter
(from CC_CoordinateOperation)


<<Abstract>>


CC_OperationParameterGroup
(from CC_CoordinateOperation)


0..n


2..*


0..n


+includesParameter


2..*


CC_OperationMethod
(from CC_CoordinateOperation)


0..n


0..n


0..n


+usesParameter 0..n


LinearCoefficientsValue
+ scaleValueList : Sequence<Scale>


CC_OperationParameter
(from CC_CoordinateOperation)


1


0..*


1


0..*


ImageIdValue
+ stringValue : CharacterString


1


0..n


+valueOfParameter


1


0..n


VersionValue
+ integerValue : Integer


1


0..*


1


0..*


NumberSectionsValue
+ integerValueList : Sequence<Integer>


1


0..n


+valueOfParameter


1


0..n


SectionParametersGroup


1


0..*


+valuesOfGroup 1


0..*


UIGM1Transformation


1


0..n


+usesMethod


1


0..n


11


11 11


11


1..64


MonoscopicErrorsGroup


1


0..n


+valuesOfGroup1


0..n


11..64 1


 


Figure F.3 — UML package for UIGM transformation, page 1 







OGC 03-010r9 


140 © OGC 2003 – All rights reserved 
 


CC_ParameterValueGroup
(from CC_CoordinateOperation)


CC_ParameterValue
(from CC_CoordinateOperation)


<<Union>>


CC_OperationParameter
(from CC_CoordinateOperation)CC_OperationParameterGroup


(from CC_CoordinateOperation)


UIGM1Transformation


NormalizationParametersGroup


1


0..*


+valuesOfGroup
1


0..*


PolynomialsGroup


1


0..n


+valuesOfGroup


1


0..n


SectionParametersGroup


1


0..*


+valuesOfGroup


1


0..*


1..641..64


1


1


SectionNumberValue
+ integerValueList : Sequence<Integer>


1


0..n


+valueOfParameter 1


0..n


1


1


1


1


+includesNormalization
ParametersGroup


+includesPolyn
omialsGroup


+includesSection
NumberValue


 


Figure F.4 — UML package for UIGM transformation, page 2 







OGC 03-010r9 


© OGC 2003 – All rights reserved 141 
 


CC_ParameterValueGroup
(from CC_CoordinateOperation) CC_ParameterValue


(from CC_CoordinateOperation)


<<Union>>


CC_OperationParameter
(from CC_CoordinateOperation)


Nine other value 
classes not shown:
NorthOffsetValue
VerticalOffsetValue
EastScaleValue
NorthScaleValue
VerticalScaleValue
RowOffsetValue
ColumnOffsetValue
RowScaleValue
ColumnScaleValue


UIGM1Transformation


SectionParametersGroup


1..641..64


CC_OperationParameterGroup
(from CC_CoordinateOperation)


1


0..*


+valuesOfGroup 1


0..*


NormalizationParametersGroup


1
+includesNormalization


ParametersGroup1


0..*


1


0..*


+valuesOfGroup1


EastOffsetValue
+ angleValue : Angle
+ lengthValue : Length


<<Union>>


1


0..*


+valueOfParameter 1


0..*


11


+includesEast
OffsetValue


 


Figure F.5 — UML package for UIGM transformation, page 3 







OGC 03-010r9 


142 © OGC 2003 – All rights reserved 
 


CC_ParameterValueGroup
(from CC_CoordinateOperation) CC_ParameterValue


(from CC_CoordinateOperation)


<<Union>>


CC_OperationParameter
(from CC_CoordinateOperation)


Six other value classes not shown:
RowDenominatorPowersValue
RowDenominatorCoefficientsValue
ColumnNumeratorPowersValue
ColumnNumeratorCoefficientsValue
ColumnDenominatorPowersValue
ColumnDenominatorCoefficientsV...


UIGM1Transformation


CC_OperationParameterGroup
(from CC_CoordinateOperation)


SectionParametersGroup


1


0..*


+valuesOfGroup 1


0..*


1..641..64
RowNumeratorPowersValue


+ integerValueList : Sequence<Integer>


1


0..n


+valueOfParameter


1


0..n


RowNumeratorCoefficientsValue
+ scaleValueList : Sequence<Scale>


1


0..n


+valueOfParameter 1


0..n


PolynomialsGroup


0..n


1


0..n


+valuesOfGroup1


1


+includesPoly
nomialsGroup


1


1 +includesRowNumerator
PowersValue


1


+includesRowNumerator
CoefficientsValue


11


 


Figure F.6 — UML package for UIGM transformation, page 4 







OGC 03-010r9 


© OGC 2003 – All rights reserved 143 
 


CC_ParameterValueGroup
(from CC_CoordinateOperation) CC_ParameterValue


(from CC_CoordinateOperation)


<<Union>>


CC_OperationParameterGroup
(from CC_CoordinateOperation)


UIGM1Transformation


ReferenceHeightValue
+ lengthValue : Length


AbsoluteErrorValue
+ lengthValue : Length


MonoscopicErrorsGroup


1


0..n


+valuesOfGroup


1


0..n


11


11


11


BinDistancesValue
+ lengthValueList : Sequence<Length>


RelativeErrorGroup


1


0..n


+valuesOfGroup1


0..n


0..9


1


0..9


+includesRelative
ErrorGroup


1


+includesReference
HeightValue


+includesAbsolute
ErrorValue


+includesBinDistances
Value


BinErrorValue
+ lengthValue : Length11


+includesBinErrorValue


CC_OperationParameter
(from CC_CoordinateOperation)


1


0..n


+valueOfParameter


1


0..n


1


0..n


+valueOfParameter
1


0..n


1


0..*


1+valueOfParameter


0..*


1


0..n


+valueOfParameter


1


0..n


 


Figure F.7 — UML package for UIGM transformation, page 5 







OGC 03-010r9 


144 © OGC 2003 – All rights reserved
 


F.4.3 Application schemas 


This subclause contains example XML Schemas for encoding this simplified UIGM 
transformation, produced by converting the above UML package. These XML Schemas 
build on the coordinateOperations.xsd contained in Subclause C.6. These draft XML 
Schemas are written following the same GML 3 patterns and ISO 19118 XML encoding 
rules as used in the XML Schemas in Annex C. These XML Schemas are written as 
Application Schema in a different namespace. 


The first draft Application Schema is: 


<?xml version="1.0" encoding="UTF-8"?> 
<schema targetNamespace="http://www.opengis.net/examples" 
xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:ex="http://www.opengis.net/examples" 
elementFormDefault="qualified" xml:lang="en"> 
 <annotation> 
  <documentation> 
   <name>UIGM1transformation.xsd</name> 
   <version>0.1.0</version> 
   <scope>How to encode definition of Universal Image Geometry 
Model for one image. </scope> 
   <description>Example Application Schema to encode ground-to-
image coordinate transformation data for a specific image, using the 
Universal Image Geometry Model type of coordinate transformation as 
described in Section 6.5 of OGC Abstract Specification Topic 7 : The 
Earth Imagery Case (OGC document 99-107). This example does not encode 
data for the image correction tables, stereoscopic position error 
estimates, and most information not used by the image geometry model. 
Builds on coordinateOperations.xsd and typedValues.xsd, and follows 
same GML 3 patterns and ISO 19118 encoding. Written in the "ex" 
namespace. Primary editor: Arliss Whiteside. Last updated 2003/09/19. 
</description> 
   <copyright>Copyright (c) 2003 OpenGIS, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes a draft UIGM package that 
builds on the Coordinate Operation (CC_) package of the extended UML 
Model for OGC Abstract Specification Topic 2: Spatial Referencing by 
Coordinates. That draft package defines restricted subtypes of the 
CC_Transformation,  CC_ParameterValue, and CC_ParameterValueGroup 
classes as needed for the UIGM transformation. </conformance> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <include schemaLocation="typedValues.xsd"/> 
 <import namespace="http://www.opengis.net/gml" 
schemaLocation="../crsSchemas/base/coordinateOperations.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 145
 


 <element name="UIGM1Transformation" 
type="ex:UIGM1TransformationType" 
substitutionGroup="gml:_GeneralTransformation"/> 
 <!-- =================================================== --> 
 <complexType name="UIGM1TransformationType"> 
  <annotation> 
   <documentation>Specific Universal Image Geometry Model type of 
coordinate transformation. Extends the 
AbstractGeneralTransformationType with restricted values for included 
elements, including elements in the coordinateOperationID element with 
the IdentifierType. If appropriate, the "codeSpace" element could have 
the string value "UIGM1", and the "code" element should then identify 
the specific image. The other elements in the IdentifierType can be 
omitted. The "coordinateOperationName" element shall have a string 
value that names a UIGM1 Transformation for a specific image and 
specific ground coordinate reference system. The "_PositionalAccuracy" 
and "metaDataProperty" elements can be omitted. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralTransformationType"> 
    <sequence> 
     <element ref="gml:usesMethod"> 
      <annotation> 
       <documentation>Association to the (UIGM1) 
operation method used by this transformation operation. 
</documentation> 
      </annotation> 
     </element> 
     <element ref="ex:usesImageIdValue"/> 
     <element ref="ex:usesVersionValue"/> 
     <element ref="ex:usesLinearCoefficientsValue"/> 
     <element ref="ex:usesNumberSectionsValue"/> 
     <element ref="ex:usesSectionParameters"/> 
     <element ref="ex:usesMonoscopicErrors"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="UIGM1TransformationRef" 
type="ex:UIGM1TransformationRefType" 
substitutionGroup="gml:generalTransformationRef"/> 
 <!-- =================================================== --> 
 <complexType name="UIGM1TransformationRefType"> 
  <annotation> 
   <documentation>Association to a UIGM1 Transformation, either 
referencing or containing the definition of that Transformation. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralTransformationRefType"> 
    <sequence> 
     <element ref="ex:UIGM1Transformation" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 







OGC 03-010r9 


146 © OGC 2003 – All rights reserved
 


 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="usesImageIdValue" type="ex:StringValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Alphanumeric text identifying one specific 
original image. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesVersionValue" type="ex:IntegerValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Increasing numbers of the Image Support Data 
Version integer are used to identify versions with increasing quality 
of the image geometry model data for the same original image. This 
Version shall be â€œ0â€� before the original image support data is 
adjusted. The minimum value is 0, and the maximum value is 9. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesLinearCoefficientsValue" 
type="ex:ScaleListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The values of the coefficients of the 
approximate linear sensor model, which is used to find the proper image 
geometry model section for a ground coordinate position. The parameter 
value shall contain an ordered list of eight double precision floating 
point numbers, four for the section number in the image row axis 
followed by four for the image column axis. These coefficients shall be 
recorded with Scale units, but various implied units are used by the 
various coefficients. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesNumberSectionsValue" 
type="ex:IntegerListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The numbers of rows and columns of sections 
into which the image geometry model is divided for this image. The 
parameter value shall contain an ordered list of two small integers, 
the first specifying the number of rows and the second specifying the 
number of columns. For each integer, the minimum value is 1, and the 
maximum value is 8. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="usesSectionParameters" 
type="ex:SectionParametersType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 
 <complexType name="SectionParametersType"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 147
 


  <annotation> 
   <documentation>Group of parameters for one section of the 
universal image geometry model. There shall be from 1 up to 64 model 
sections for one image. If the model for this image is not divided into 
sections, there shall be only one repetition of this group of 
parameters. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:includesSectionNumberValue"/> 
     <element ref="ex:includesNormalizationParameters"/> 
     <element ref="ex:includesPolynomials"/> 
     <element ref="gml:valuesOfGroup"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesSectionNumberValue" 
type="ex:IntegerListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The row and column numbers of this section of 
the universal image geometry model for this image. The parameter value 
contains an ordered list of two small integers, the first specifying 
the row number and the second specifying the column number. For each 
integer, the minimum value is 1, and the maximum value is 
8.</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="includesNormalizationParameters" 
type="ex:NormalizationParametersType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 
 <complexType name="NormalizationParametersType"> 
  <annotation> 
   <documentation>Group of ground position normalization 
parameters and image position un-normalization parameters, for this 
section of the universal image geometry model. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:includesEastOffsetValue"/> 
     <element ref="ex:includesNorthOffsetValue"/> 
     <element ref="ex:includesVerticalOffsetValue"/> 
     <element ref="ex:includesEastScaleValue"/> 
     <element ref="ex:includesNorthScaleValue"/> 
     <element ref="ex:includesVerticalScaleValue"/> 
     <element ref="ex:includesRowOffsetValue"/> 
     <element ref="ex:includesColumnOffsetValue"/> 
     <element ref="ex:includesRowScaleValue"/> 
     <element ref="ex:includesColumnScaleValue"/> 
     <element ref="gml:valuesOfGroup"/> 







OGC 03-010r9 


148 © OGC 2003 – All rights reserved
 


    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesEastOffsetValue" 
type="ex:AngleOrLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>East position offset for normalizing ground 
coordinates. The units shall be either angle or length units. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesNorthOffsetValue" 
type="ex:AngleOrLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>North position offset for normalizing ground 
coordinates. The units shall be the same as for the East Offset, either 
angle or length units. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesVerticalOffsetValue" 
type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Vertical position offset for normalizing ground 
coordinates. The units shall be length units. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesEastScaleValue" 
type="ex:AngleOrLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>East scale factor for normalizing ground 
coordinates. The units shall be the same as for the East Offset, either 
angle or length units. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesNorthScaleValue" 
type="ex:AngleOrLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>North scale factor for normalizing ground 
coordinates. The units shall be the same as for the North Offset, 
either angle or length units. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesVerticalScaleValue" type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 149
 


   <documentation>Vertical scale factor for normalizing ground 
coordinates. The units shall be the same as for the Vertical Offset, 
and shall be length units. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesRowOffsetValue" type="ex:GridLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Image row position offset for un-normalizing 
image coordinates. The units shall be one grid spacing. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesColumnOffsetValue" 
type="ex:GridLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Image column position offset for un-normalizing 
image coordinates. The units shall be one grid spacing. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesRowScaleValue" type="ex:GridLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Image row scale factors for un-normalizing 
image coordinates. The units shall be one grid spacing. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesColumnScaleValue" 
type="ex:GridLengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Image column scale factors for un-normalizing 
image coordinates. The units shall be one grid spacing. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="includesPolynomials" type="ex:PolynomialsType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 
 <complexType name="PolynomialsType"> 
  <annotation> 
   <documentation>Numerator and denominator polynomial parameters 
for this section of the universal image geometry model. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 







OGC 03-010r9 


150 © OGC 2003 – All rights reserved
 


     <element ref="ex:includesRowNumeratorPowersValue"/> 
     <element 
ref="ex:includesRowNumeratorCoefficientsValue"/> 
     <element ref="ex:includesRowDenominatorPowersValue"/> 
     <element 
ref="ex:includesRowDenominatorCoefficientsValue"/> 
     <element ref="ex:includesColumnNumeratorPowersValue"/> 
     <element 
ref="ex:includesColumnNumeratorCoefficientsValue"/> 
     <element ref="ex:includesColumnDenominatorPowersValue"/> 
     <element 
ref="ex:includesColumnDenominatorCoefficientsValue"/> 
     <element ref="gml:valuesOfGroup"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesRowNumeratorPowersValue" 
type="ex:IntegerListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Maximum powers of the three ground coordinates 
in the numerator polynomial for computing the image row coordinate. The 
parameter value shall contain an ordered list of three small integers, 
corresponding to the East, North, and Vertical ground coordinate axes. 
For each integer, the minimum value is 1. For the East and North axis 
integers, the maximum value is 5. For the Vertical axis integer, the 
maximum value is 3. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesRowNumeratorCoefficientsValue" 
type="ex:ScaleListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Polynomial coefficients in the numerator 
polynomial for computing the image row coordinate. The parameter value 
shall contain an ordered list of from 8 to 144 Scale measures. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesRowDenominatorPowersValue" 
type="ex:IntegerListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Maximum powers of the three ground coordinates 
in the denominator polynomial for computing the image row coordinate. 
The parameter value shall contain an ordered list of three small 
integers, corresponding to the East, North, and Vertical ground 
coordinate axes. For each integer, the minimum value is 1. For the East 
and North axis integers, the maximum value is 5. For the Vertical axis 
integer, the maximum value is 3. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 151
 


 <element name="includesRowDenominatorCoefficientsValue" 
type="ex:ScaleListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Polynomial coefficients in the denominator 
polynomial for computing the image row coordinate. The parameter value 
shall contain an ordered list of from 8 to 144 Scale measures. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesColumnNumeratorPowersValue" 
type="ex:IntegerListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Maximum powers of the three ground coordinates 
in the numerator polynomial for computing the image column coordinate. 
The parameter value shall contain an ordered list of three small 
integers, corresponding to the East, North, and Vertical ground 
coordinate axes. For each integer, the minimum value is 1. For the East 
and North axis integers, the maximum value is 5. For the Vertical axis 
integer, the maximum value is 3. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesColumnNumeratorCoefficientsValue" 
type="ex:ScaleListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Polynomial coefficients in the numerator 
polynomial for computing the image column coordinate. The parameter 
value shall contain an ordered list of from 8 to 144 Scale measures. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesColumnDenominatorPowersValue" 
type="ex:IntegerListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Maximum powers of the three ground coordinates 
in the denominator polynomial for computing the image column 
coordinate. The parameter value shall contain an ordered list of three 
small integers, corresponding to the East, North, and Vertical ground 
coordinate axes. For each integer, the minimum value is 1. For the East 
and North axis integers, the maximum value is 5. For the Vertical axis 
integer, the maximum value is 3. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesColumnDenominatorCoefficientsValue" 
type="ex:ScaleListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>Polynomial coefficients in the denominator 
polynomial for computing the image column coordinate. The parameter 







OGC 03-010r9 


152 © OGC 2003 – All rights reserved
 


value shall contain an ordered list of from 8 to 144 Scale measures. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="usesMonoscopicErrors" type="ex:MonoscopicErrorsType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 
 <complexType name="MonoscopicErrorsType"> 
  <annotation> 
   <documentation>Group of parameters for horizontal error 
estimates when a position in this one image is used to determine the 
corresponding ground coordinates, using this universal image geometry 
model for this image. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:includesReferenceHeightValue"/> 
     <element ref="ex:includesAbsoluteErrorValue"/> 
     <element ref="ex:includesRelativeError" minOccurs="0" 
maxOccurs="9"/> 
     <element ref="gml:valuesOfGroup"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesReferenceHeightValue" 
type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The value of the ground elevation or height 
used to estimate the recorded horizontal error estimate when a position 
in this one image is used to determine the corresponding ground 
coordinates. This reference height is in the Vertical coordinate system 
axis of the ground CRS used by the universal image geometry model for 
this image. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesAbsoluteErrorValue" type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The value of the horizontal absolute error 
estimate when a position in this one (monoscopic) image is used to 
determine the corresponding ground coordinates. This error estimate 
shall be recorded as the Circular Error (CE) with 90% confidence, 
always in one meter units. The minimum value is 0.0. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="includesRelativeError" type="ex:RelativeErrorType" 
substitutionGroup="gml:_generalParameterValue"/> 
 <!-- =================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 153
 


 <complexType name="RelativeErrorType"> 
  <annotation> 
   <documentation>Relative error estimate for one distance bin 
between two points. These error estimates are for use when multiple 
positions in one (monoscopic) image are used to determine the 
corresponding ground coordinates. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:includesBinDistancesValue"/> 
     <element ref="ex:includesBinErrorValue"/> 
     <element ref="gml:valuesOfGroup"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="includesBinDistancesValue" 
type="ex:LengthListValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The minimum and maximum ground distances 
between two points for this distance bin recorded for horizontal 
relative error estimates. The parameter value shall contain an ordered 
list of two Length measures, always in one meter units. The first value 
specifies the bin minimum distance, and the second value specifies the 
bin maximum distance. The minimum values are 0.0. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="includesBinErrorValue" type="ex:LengthValueType" 
substitutionGroup="gml:_generalParameterValue"> 
  <annotation> 
   <documentation>The value of the horizontal relative error 
estimate between two points for this distance bin recorded for 
horizontal relative error estimates. These error estimates are for use 
when multiple positions in one (monoscopic) image are used to determine 
the corresponding ground coordinates. The relative error estimate shall 
be recorded as the Circular Error (CE) with 90% confidence, always in 
one meter units. The minimum value is 0.0. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
</schema> 


 
The above example Application Schema is shortened by building on a separate example 
Application Schema. This other Application Schema defines XML Schema 
complexTypes for a number of types of operation parameter values. The complexTypes 
defined include 8 parameter types used in the Application Schema above, plus 8 more 
types expected to be useful in other image geometry model transformations. This second 
draft XML Application Schema is: 


<?xml version="1.0" encoding="UTF-8"?> 







OGC 03-010r9 


154 © OGC 2003 – All rights reserved
 


<schema targetNamespace="http://www.opengis.net/examples" 
xmlns="http://www.w3.org/2001/XMLSchema" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:ex="http://www.opengis.net/examples" 
elementFormDefault="qualified" xml:lang="en"> 
 <annotation> 
  <documentation> 
   <name>typedValues.xsd</name> 
   <version>0.1.0</version> 
   <scope>How to encode operation parameter values with specific 
types, including length, angle, and scale measures.. </scope> 
   <description>Example Application Schema to encode operation 
parameter values with specific types. Builds on measures.xsd, and 
follows same GML 3 patterns. Written in the "ex" namespace. Primary 
editor: Arliss Whiteside. Last updated 2003/09/19. </description> 
   <copyright>Copyright (c) 2003 OpenGIS, All Rights 
Reserved.</copyright> 
  </documentation> 
 </annotation> 
 <!-- ====================================================== 
       includes and imports 
 ====================================================== --> 
 <import namespace="http://www.opengis.net/gml" 
schemaLocation="../crsSchemas/base/coordinateOperations.xsd"/> 
 <!-- ====================================================== 
       elements and types 
 ====================================================== --> 
 <complexType name="StringValueType"> 
  <annotation> 
   <documentation>Alphanumeric text operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="gml:stringValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="IntegerValueType"> 
  <annotation> 
   <documentation>Integer operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="gml:integerValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 155
 


 <!-- =================================================== --> 
 <complexType name="LengthValueType"> 
  <annotation> 
   <documentation>Length measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:lengthValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="ScaleValueType"> 
  <annotation> 
   <documentation>Scale measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:scaleValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="AngleValueType"> 
  <annotation> 
   <documentation>Angle measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:angleValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="AngleOrLengthValueType"> 
  <annotation> 
   <documentation>Angle or Length measure operation parameter 
value, sometimes used for horizontal coordinate parameters. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <choice> 
      <element ref="ex:angleValue"/> 







OGC 03-010r9 


156 © OGC 2003 – All rights reserved
 


      <element ref="ex:lengthValue"/> 
     </choice> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="TimeValueType"> 
  <annotation> 
   <documentation>Time measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:gridLengthValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="GridLengthValueType"> 
  <annotation> 
   <documentation>Grid Length measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:gridLengthValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="VelocityValueType"> 
  <annotation> 
   <documentation>Velocity measure operation parameter value. 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:velocityValue"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="IntegerListValueType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more integer 
operation parameter values. </documentation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 157
 


  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="gml:integerValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="LengthListValueType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more Length 
operation parameter values.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:lengthValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="ScaleListValueType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more Scale Factor 
operation parameter values. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:scaleValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="AngleListValueType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more Angle operation 
parameter values. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:angleValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="TimeListValueType"> 







OGC 03-010r9 


158 © OGC 2003 – All rights reserved
 


  <annotation> 
   <documentation>Ordered sequence of two or more Time operation 
parameter values. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:timeValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="GridLengthListValueType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more Grid Length 
operation parameter values. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:gridLengthValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <complexType name="VelocityListValueType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more Velocity 
operation parameter values. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralParameterValueType"> 
    <sequence> 
     <element ref="ex:velocityValueList"/> 
     <element ref="gml:valueOfParameter"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <!-- =================================================== --> 
 <element name="lengthValue" type="gml:LengthType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Length value of an operation parameter, with a 
unit of measure suitable for a length, such as metres or feet. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="scaleValue" type="gml:ScaleType" 
substitutionGroup="gml:value"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 159
 


   <documentation>Scale factor value of an operation parameter, 
with a unit of measure suitable for a scale factor, such as one, 
percent, permil, or parts-per-million. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="angleValue" type="gml:AngleType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Angle value of an operation parameter, recorded 
as a single number, with a unit of measure suitable for an angle, such 
as degrees or radians. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="timeValue" type="gml:TimeType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Time value of an operation parameter, recorded 
as a single number, with a unit of measure suitable for a time value, 
such as seconds or days. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="gridLengthValue" type="gml:GridLengthType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Grid length value of an operation parameter, 
with a unit of measure suitable for length along the axes of a grid, 
such as pixel spacings or grid spacings. Used when the grid spacing 
does not have any associated physical units, or does not have a 
constant physical spacing. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="velocityValue" type="gml:VelocityType" 
substitutionGroup="gml:value"> 
  <annotation> 
   <documentation>Velocity value of an operation parameter, with 
a unit of measure suitable for a velocity, such as metres per second or 
miles per hour. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="lengthValueList" type="gml:MeasureListType" 
substitutionGroup="gml:valueList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more length values 
of an operation parameter, with a unit of measure suitable for a 
length, such as metres or feet. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="scaleValueList" type="gml:MeasureListType" 
substitutionGroup="gml:valueList"> 
  <annotation> 







OGC 03-010r9 


160 © OGC 2003 – All rights reserved
 


   <documentation>Ordered sequence of two or more scale factor 
values of an operation parameter, with a unit of measure suitable for a 
scale factor, such as one, percent, permil, or parts-per-million. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="angleValueList" type="gml:MeasureListType" 
substitutionGroup="gml:valueList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more angle values of 
an operation parameter, each recorded as a single number, with a unit 
of measure suitable for an angle, such as degrees or radians. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="timeValueList" type="gml:MeasureListType" 
substitutionGroup="gml:valueList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more time values of 
an operation parameter, each recorded as a single number, with a unit 
of measure suitable for a time value, such as seconds or days. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="gridLengthValueList" type="gml:MeasureListType" 
substitutionGroup="gml:valueList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more grid length 
values of an operation parameter, with a unit of measure suitable for 
length along the axes of a grid, such as pixel spacings or grid 
spacings. Used when the grid spacing does not have any associated 
physical units, or does not have a constant physical spacing. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="velocityValueList" type="gml:MeasureListType" 
substitutionGroup="gml:valueList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more velocity values 
of an operation parameter, with a unit of measure suitable for a 
velocity, such as metres per second or miles per hour. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
</schema> 


 
F.4.4 Example XML documents 


An example XML document based on the above two example Application Schemas for 
encoding this simplified UIGM transformation is: 







OGC 03-010r9 


© OGC 2003 – All rights reserved 161
 


<?xml version="1.0" encoding="UTF-8"?> 
<UIGM1Transformation xmlns="http://www.opengis.net/examples" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.opengis.net/examples 
UIGM1transformation.xsd" gml:id="AaaaAaaa"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/19. --> 
 <gml:coordinateOperationName>Aaaa Aaaa</gml:coordinateOperationName> 
 <gml:operationVersion>1</gml:operationVersion> 
 <gml:sourceCRS xlink:href="urn:ogc:srs:EPSG::7405" 
xlink:title="OSGB36 /British National Grid + ODN"/> 
 <gml:targetCRS xlink:href="urn:ogc:srs:UIGM:ImageCRS"/> 
 <gml:usesMethod xlink:href="urn:ogc:method:UIGM:MethodUIGM1"/> 
 <usesImageIdValue> 
  <gml:stringValue>AAAAAA</gml:stringValue> 
  <gml:valueOfParameter 
xlink:href="urn:ogc:parameter:UIGM:ImageID"/> 
 </usesImageIdValue> 
 <usesVersionValue> 
  <gml:integerValue>1</gml:integerValue> 
  <gml:valueOfParameter 
xlink:href="urn:ogc:parameter:UIGM:Version"/> 
 </usesVersionValue> 
 <usesLinearCoefficientsValue> 
  <scaleValueList uom="urn:ogc:uom:unity">9.999 9.999 9.999 9.999 
9.999 9.999 9.999 9.999</scaleValueList> 
  <gml:valueOfParameter 
xlink:href="urn:ogc:parameter:UIGM:LinearCoefficients"/> 
 </usesLinearCoefficientsValue> 
 <usesNumberSectionsValue> 
  <gml:integerValueList>1 1</gml:integerValueList> 
  <gml:valueOfParameter 
xlink:href="urn:ogc:parameter:UIGM:NumberSections"/> 
 </usesNumberSectionsValue> 
 <usesSectionParameters> 
  <includesSectionNumberValue> 
   <gml:integerValueList>1 1</gml:integerValueList> 
   <gml:valueOfParameter 
xlink:href="urn:ogc:parameter:UIGM:SectionNumber"/> 
  </includesSectionNumberValue> 
  <includesNormalizationParameters> 
   <includesEastOffsetValue> 
    <angleValue uom="urn:ogc:uom:degree">99.999</angleValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:EastOffset"/> 
   </includesEastOffsetValue> 
   <includesNorthOffsetValue> 
    <angleValue uom="urn:ogc:uom:degree">9.999</angleValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:NorthOffset"/> 
   </includesNorthOffsetValue> 
   <includesVerticalOffsetValue> 
    <lengthValue uom="urn:ogc:uom:metre">99.999</lengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:VerticalOffset"/> 
   </includesVerticalOffsetValue> 







OGC 03-010r9 


162 © OGC 2003 – All rights reserved
 


   <includesEastScaleValue> 
    <angleValue uom="urn:ogc:uom:degree">9.999</angleValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:EastScale"/> 
   </includesEastScaleValue> 
   <includesNorthScaleValue> 
    <angleValue uom="urn:ogc:uom:degree">9.999</angleValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:NorthScale"/> 
   </includesNorthScaleValue> 
   <includesVerticalScaleValue> 
    <lengthValue uom="urn:ogc:uom:metre">9.999</lengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:VerticalScale"/> 
   </includesVerticalScaleValue> 
   <includesRowOffsetValue> 
    <gridLengthValue 
uom="urn:ogc:uom:PixelSpacing">9999.99</gridLengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:RowOffset"/> 
   </includesRowOffsetValue> 
   <includesColumnOffsetValue> 
    <gridLengthValue 
uom="urn:ogc:uom:PixelSpacing">9999.99</gridLengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ColumnOffset"/> 
   </includesColumnOffsetValue> 
   <includesRowScaleValue> 
    <gridLengthValue 
uom="urn:ogc:uom:PixelSpacing">999.99</gridLengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:RowScale"/> 
   </includesRowScaleValue> 
   <includesColumnScaleValue> 
    <gridLengthValue 
uom="urn:ogc:uom:PixelSpacing">999.99</gridLengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ColumnScale"/> 
   </includesColumnScaleValue> 
   <gml:valuesOfGroup 
xlink:href="urn:ogc:method:UIGM:NormalizationParameters"/> 
  </includesNormalizationParameters> 
  <includesPolynomials> 
   <includesRowNumeratorPowersValue> 
    <gml:integerValueList>1 1 1</gml:integerValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:RowNumeratorPowers"/> 
   </includesRowNumeratorPowersValue> 
   <includesRowNumeratorCoefficientsValue> 
    <scaleValueList uom="urn:ogc:uom:unity">0.999999 0.999999 
0.999999 0.999999 0.999999 0.999999 0.999999 0.999999</scaleValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:RowNumeratorCoefficients"/> 
   </includesRowNumeratorCoefficientsValue> 
   <includesRowDenominatorPowersValue> 
    <gml:integerValueList>1 1 1</gml:integerValueList> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 163
 


    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:RowDenominatorPowers"/> 
   </includesRowDenominatorPowersValue> 
   <includesRowDenominatorCoefficientsValue> 
    <scaleValueList uom="urn:ogc:uom:unity">0.999999 0.999999 
0.999999 0.999999 0.999999 0.999999 0.999999 0.999999</scaleValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:RowDenominatorCoefficients"/> 
   </includesRowDenominatorCoefficientsValue> 
   <includesColumnNumeratorPowersValue> 
    <gml:integerValueList>1 1 1</gml:integerValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ColumnNumeratorPowers"/> 
   </includesColumnNumeratorPowersValue> 
   <includesColumnNumeratorCoefficientsValue> 
    <scaleValueList uom="urn:ogc:uom:unity">0.999999 0.999999 
0.999999 0.999999 0.999999 0.999999 0.999999 0.999999</scaleValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ColumnNumeratorCoefficients"/> 
   </includesColumnNumeratorCoefficientsValue> 
   <includesColumnDenominatorPowersValue> 
    <gml:integerValueList>1 1 1</gml:integerValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ColumnDenominatorPowers"/> 
   </includesColumnDenominatorPowersValue> 
   <includesColumnDenominatorCoefficientsValue> 
    <scaleValueList uom="urn:ogc:uom:unity">0.999999 0.999999 
0.999999 0.999999 0.999999 0.999999 0.999999 0.999999</scaleValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ColumnDenominatorCoefficients"/> 
   </includesColumnDenominatorCoefficientsValue> 
   <gml:valuesOfGroup 
xlink:href="urn:ogc:method:UIGM:Polynomials"/> 
  </includesPolynomials> 
  <gml:valuesOfGroup 
xlink:href="urn:ogc:method:UIGM:SectionParameters"/> 
 </usesSectionParameters> 
 <usesMonoscopicErrors> 
  <includesReferenceHeightValue> 
   <lengthValue uom="urn:ogc:uom:metre">999</lengthValue> 
   <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:ReferenceHeight"/> 
  </includesReferenceHeightValue> 
  <includesAbsoluteErrorValue> 
   <lengthValue uom="urn:ogc:uom:metre">99.99</lengthValue> 
   <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:AbsoluteError"/> 
  </includesAbsoluteErrorValue> 
  <includesRelativeError> 
   <includesBinDistancesValue> 
    <lengthValueList uom="urn:ogc:uom:metre">0 
1000</lengthValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:BinDistances"/> 
   </includesBinDistancesValue> 
   <includesBinErrorValue> 
    <lengthValue uom="urn:ogc:uom:metre">9.99</lengthValue> 







OGC 03-010r9 


164 © OGC 2003 – All rights reserved
 


    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:BinError"/> 
   </includesBinErrorValue> 
   <gml:valuesOfGroup 
xlink:href="urn:ogc:method:UIGM:RelativeError"/> 
  </includesRelativeError> 
  <includesRelativeError> 
   <includesBinDistancesValue> 
    <lengthValueList uom="urn:ogc:uom:metre">1000 
10000</lengthValueList> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:BinDistances"/> 
   </includesBinDistancesValue> 
   <includesBinErrorValue> 
    <lengthValue uom="urn:ogc:uom:metre">9.99</lengthValue> 
    <gml:valueOfParameter 
xlink:href="urn:ogc:method:UIGM:BinError"/> 
   </includesBinErrorValue> 
   <gml:valuesOfGroup 
xlink:href="urn:ogc:method:UIGM:RelativeError"/> 
  </includesRelativeError> 
  <gml:valuesOfGroup 
xlink:href="urn:ogc:method:UIGM:MonoscopicErrors"/> 
 </usesMonoscopicErrors> 
</UIGM1Transformation> 


 
The above XML example uses dummy values such as "Aaaa" in place of real values for 
some text string values. Similarly, this example also uses dummy values such as "99.99" 
in place of real values for some numerical values. This example assumes that the 
Application Schemas specified in Subclause F.4.3 are accessible using the location 
UIGM1transformation.xsd. 


The above XML example also assumes that (complete) information for several items is 
available elsewhere. The definition of the sourceCRS and targetCRS are assumed to be 
available elsewhere, and can be encoded in XML as shown in the example XML in 
Subclauses E.3 and E.10. The definition of the simplified UIGM OperationMethod can 
be XML encoded using the example Application Schema from Subclause F.2.3, and 
could be: 


<?xml version="1.0" encoding="UTF-8"?> 
<OperationMethod xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:ex="http://www.opengis.net/examples" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.opengis.net/examples 
extendedOperationParameter.xsd" gml:id="MethodUIGM1"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2003/09/19. --> 
 <remarks>This operation method implements the universal image 
geometry model that transforms ground coordinates into georeferenced 
image coordinates. This image geometry model uses one ratio of two 
polynomial functions to compute the row image coordinate, and uses a 
similar ratio of two different polynomials to compute the column image 
coordinate. All four polynomials are functions of three ground 







OGC 03-010r9 


© OGC 2003 – All rights reserved 165
 


coordinates: two horizontal coordinates and one vertical coordinate. In 
the polynomial functions, the three ground coordinates and two image 
coordinates are each offset and scaled to have a range from -1.0 to 
+1.0 over an image or image section. For brevity, this simplified 
operation method specification does not include all geometry model 
parameters or all optional XML elements. </remarks> 
 <methodName>Universal Image Geometry Model Transformation 
(simplified)</methodName> 
 <methodFormula>See Section 6.5 of OGC Abstract Specification Topic 7 
: The Earth Imagery Case ( OGC document 99-107). </methodFormula> 
 <sourceDimensions>3</sourceDimensions> 
 <targetDimensions>2</targetDimensions> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="ImageID"> 
   <remarks>Alphanumeric text identifying one specific original 
image. </remarks> 
   <parameterName>Image ID</parameterName> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">string</ex:parameterType> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="Version"> 
   <remarks>Increasing numbers of the Image Support Data Version 
Number are used to identify versions with increasing quality of the 
image geometry model data for the same original image. This Image 
Support Data Version field shall be 0 before the original image support 
data is adjusted. Minimum value is 0, maximum value is 9. </remarks> 
   <parameterName>Image Support Data Version</parameterName> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">nonNegativeInteger</ex:parameterT
ype> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="LinearCoefficients"> 
   <remarks>The values of the coefficients of the approximate 
linear sensor model, which is used to find the proper image geometry 
model section for a ground coordinate position. The parameter value 
shall contain an ordered list of eight double precision floating point 
numbers, four for the section number in the image row axis, followed by 
four for the image column axis. These coefficients shall be recorded 
with Scale units, but various implied units are used by the various 
coefficients. </remarks> 
   <parameterName>Linear Sensor Model 
Coefficients</parameterName> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">ScaleListType</ex:parameterType> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <ex:ExtendedOperationParameter gml:id="NumberSections"> 
   <remarks>The numbers of rows and columns of sections into 
which the image geometry model is divided for this image. The parameter 
value shall contain an ordered list of two small integers, the first 
specifying the number of rows and the second specifying the number of 







OGC 03-010r9 


166 © OGC 2003 – All rights reserved
 


columns. For each integer, the minimum value is 1, and the maximum 
value is 8. </remarks> 
   <parameterName>Number of Sections</parameterName> 
   <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">integerList</ex:parameterType> 
  </ex:ExtendedOperationParameter> 
 </usesParameter> 
 <usesParameter> 
  <OperationParameterGroup gml:id="SectionParameters"> 
   <remarks>Parameters for one section of the universal image 
geometry model. There shall be from 1 up to 64 model sections for one 
image. If the model for this image is not divided into sections, there 
shall be only one repetition of this group of parameters. </remarks> 
   <groupName>Image Section Parameters</groupName> 
   <maximumOccurs>64</maximumOccurs> 
   <includesParameter> 
    <ex:ExtendedOperationParameter gml:id="SectionNumber"> 
     <remarks>The row and column numbers of this section of 
the universal image geometry model for this image. The parameter value 
contains an ordered list of two small integers, the first specifying 
the row number and the second specifying the column number. For each 
integer, the minimum value is 1, and the maximum value is 8. </remarks> 
     <parameterName>Section Number</parameterName> 
     <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">integerList</ex:parameterType> 
    </ex:ExtendedOperationParameter> 
   </includesParameter> 
   <includesParameter> 
    <OperationParameterGroup gml:id="NormalizationParameters"> 
     <remarks>Ground position normalization parameters and 
image position un-normalization parameters, for this section of the 
universal image geometry model. </remarks> 
     <groupName>Ground and Image Position Normalization 
Parameters</groupName> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="EastOffset"> 
       <remarks>East position offset for normalizing 
ground coordinates. The units shall be either length or angle units. 
</remarks> 
       <parameterName>East Ground Position 
Offset</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthOrAngleType</ex:parameterTy
pe> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="NorthOffset"> 
       <remarks>North position offset for normalizing 
ground coordinates. The units shall be the same as for the East Offset, 
and either length or angle units. </remarks> 
       <parameterName>North Ground Position 
Offset</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthOrAngleType</ex:parameterTy
pe> 
      </ex:ExtendedOperationParameter> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 167
 


     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="VerticalOffset"> 
       <remarks>Vertical position offset for normalizing 
ground coordinates. The units shall be length units. </remarks> 
       <parameterName>Vertical Ground Position 
Offset</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="EastScale"> 
       <remarks>East scale factor for normalizing ground 
coordinates. The units shall be the same as for the East Offset, either 
length or angle units. </remarks> 
       <parameterName>East Ground Position 
Scale</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthOrAngleType</ex:parameterTy
pe> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="NorthScale"> 
       <remarks>North scale factor for normalizing ground 
coordinates. The units shall be the same as for the North Offset, 
either length or angle units. </remarks> 
       <parameterName>North Ground Position 
Scale</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthOrAngleType</ex:parameterTy
pe> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="VerticalScale"> 
       <remarks>Vertical scale factor for normalizing 
ground coordinates. The units shall be the same as for the Vertical 
Offset, and shall be length units. </remarks> 
       <parameterName>Vertical Ground Position 
Scale</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="RowOffset"> 
       <remarks>Image row position offset for un-
normalizing image coordinates. The units shall be one grid spacing. 
</remarks> 
       <parameterName>Image Row Position 
Offset</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">GridLengthType</ex:parameterType> 







OGC 03-010r9 


168 © OGC 2003 – All rights reserved
 


      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="ColumnOffset"> 
       <remarks>Image column position offset for un-
normalizing image coordinates. The units shall be one grid spacing. 
</remarks> 
       <parameterName>Image Column Position 
Offset</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">GridLengthType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="RowScale"> 
       <remarks>Image row scale factors for un-
normalizing image coordinates. The units shall be one grid spacing. 
</remarks> 
       <parameterName>Image Row Position 
Scale</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">GridLengthType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="ColumnScale"> 
       <remarks>Image column scale factors for un-
normalizing image coordinates. The units shall be one grid spacing. 
</remarks> 
       <parameterName>Image Column Position 
Scale</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">GridLengthType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
    </OperationParameterGroup> 
   </includesParameter> 
   <includesParameter> 
    <OperationParameterGroup gml:id="Polynomials"> 
     <remarks>Numerator and denominator polynomial parameters 
for this section of the universal image geometry model. </remarks> 
     <groupName>Numerator and Denominator 
Polynomials</groupName> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="RowNumeratorPowers"> 
       <remarks>Maximum powers of the three ground 
coordinates in the numerator polynomial for computing the image row 
coordinate. The parameter value shall contain an ordered list of three 
small integers, corresponding to the East, North, and Vertical ground 
coordinate axes. For each integer, the minimum value is 1. For the East 
and North axis integers, the maximum value is 5. For the Vertical axis 
integer, the maximum value is 3. </remarks> 
       <parameterName>Row Numerator Maximum 
Powers</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">integerList</ex:parameterType> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 169
 


      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="RowNumeratorCoefficients"> 
       <remarks>Polynomial coefficients in the numerator 
polynomial for computing the image row coordinate. The parameter value 
shall contain an ordered list of from 8 to 144 Scale measures. 
</remarks> 
       <parameterName>Row Numerator Polynomial 
Coefficients</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">ScaleListType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="RowDenominatorPowers"> 
       <remarks>Maximum powers of the three ground 
coordinates in the denominator polynomial for computing the image row 
coordinate. The parameter value shall contain an ordered list of three 
small integers, corresponding to the East, North, and Vertical ground 
coordinate axes. For each integer, the minimum value is 1. For the East 
and North axis integers, the maximum value is 5. For the Vertical axis 
integer, the maximum value is 3. </remarks> 
       <parameterName>Row Denominator Maximum 
Powers</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">integerList</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="RowDenominatorCoefficients"> 
       <remarks>Polynomial coefficients in the 
denominator polynomial for computing the image row coordinate. The 
parameter value shall contain an ordered list of from 8 to 144 Scale 
measures. </remarks> 
       <parameterName>Row Denominator Polynomial 
Coefficients</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">ScaleListType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="ColumnNumeratorPowers"> 
       <remarks>Maximum powers of the three ground 
coordinates in the numerator polynomial for computing the image column 
coordinate. The parameter value shall contain an ordered list of three 
small integers, corresponding to the East, North, and Vertical ground 
coordinate axes. For each integer, the minimum value is 1. For the East 
and North axis integers, the maximum value is 5. For the Vertical axis 
integer, the maximum value is 3. </remarks> 
       <parameterName>Column Numerator Maximum 
Powers</parameterName> 







OGC 03-010r9 


170 © OGC 2003 – All rights reserved
 


       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">integerList</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="ColumnNumeratorCoefficients"> 
       <remarks>Polynomial coefficients in the numerator 
polynomial for computing the image column coordinate. The parameter 
value shall contain an ordered list of from 8 to 144 Scale measures. 
</remarks> 
       <parameterName>Column Numerator Polynomial 
Coefficients</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">ScaleListType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="ColumnDenominatorPowers"> 
       <remarks>Maximum powers of the three ground 
coordinates in the denominator polynomial for computing the image 
column coordinate. The parameter value shall contain an ordered list of 
three small integers, corresponding to the East, North, and Vertical 
ground coordinate axes. For each integer, the minimum value is 1. For 
the East and North axis integers, the maximum value is 5. For the 
Vertical axis integer, the maximum value is 3. </remarks> 
       <parameterName>Column Denominator Maximum 
Powers</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">integerList</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter 
gml:id="ColumnDenominatorCoefficients"> 
       <remarks>Polynomial coefficients in the 
denominator polynomial for computing the image column coordinate. The 
parameter value shall contain an ordered list of from 8 to 144 Scale 
measures. </remarks> 
       <parameterName>Column Denominator Polynomial 
Coefficients</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">ScaleListType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
    </OperationParameterGroup> 
   </includesParameter> 
  </OperationParameterGroup> 
 </usesParameter> 
 <usesParameter> 
  <OperationParameterGroup gml:id="MonoscopicErrors"> 
   <remarks>Horizontal error estimates for when a position in 
this one image is used to determine the corresponding ground 
coordinates, using this universal image geometry model for this image. 
</remarks> 
   <groupName>Monoscopic Error Estimates</groupName> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 171
 


   <includesParameter> 
    <ex:ExtendedOperationParameter gml:id="ReferenceHeight"> 
     <remarks>The value of the ground elevation or height 
used to estimate the recorded horizontal error estimate when a position 
in this one image is used to determine the corresponding ground 
coordinates. This reference height is in the Vertical coordinate system 
axis of the ground CRS used by the universal image geometry model for 
this image. </remarks> 
     <parameterName>Monoscopic Error Estimate Reference 
Height</parameterName> 
     <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
    </ex:ExtendedOperationParameter> 
   </includesParameter> 
   <includesParameter> 
    <ex:ExtendedOperationParameter gml:id="AbsoluteError"> 
     <remarks>The value of the horizontal absolute error 
estimate when a position in this one (monoscopic) image is used to 
determine the corresponding ground coordinates. This error estimate 
shall be recorded as the Circular Error (CE) with 90% confidence, 
always in one metre units. The minimum value is 0.0. </remarks> 
     <parameterName>Monoscopic Absolute Error 
Estimate</parameterName> 
     <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
    </ex:ExtendedOperationParameter> 
   </includesParameter> 
   <includesParameter> 
    <OperationParameterGroup gml:id="RelativeError"> 
     <remarks>Relative error estimate for one distance bin 
between two points. These error estimates are for use when multiple 
positions in one (monoscopic) image are used to determine the 
corresponding ground coordinates. </remarks> 
     <groupName>Bin Relative Error Estimates</groupName> 
     <minimumOccurs>0</minimumOccurs> 
     <maximumOccurs>9</maximumOccurs> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="BinDistances"> 
       <remarks>The minimum and maximum ground distances 
between two points for this distance bin recorded for horizontal 
relative error estimates. The parameter value shall contain an ordered 
list of two Length measures, always in one metre units. The first value 
specifies the bin minimum distance, and the second value specifies the 
bin maximum distance. The minimum values are 0.0. </remarks> 
       <parameterName>Monoscopic Relative Error Estimate 
Bin Distances</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthListType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
     <includesParameter> 
      <ex:ExtendedOperationParameter gml:id="BinError"> 
       <remarks>The value of the horizontal relative 
error estimate between two points for this distance bin recorded for 
horizontal relative error estimates. These error estimates are for use 
when multiple positions in one (monoscopic) image are used to determine 
the corresponding ground coordinates. The relative error estimate shall 







OGC 03-010r9 


172 © OGC 2003 – All rights reserved
 


be recorded as the Circular Error (CE) with 90% confidence, always in 
one metre units. The minimum value is 0.0. </remarks> 
       <parameterName>Bin Monoscopic Relative Error 
Estimate</parameterName> 
       <ex:parameterType 
codeSpace="parameterTypeCodeList.xml">LengthType</ex:parameterType> 
      </ex:ExtendedOperationParameter> 
     </includesParameter> 
    </OperationParameterGroup> 
   </includesParameter> 
  </OperationParameterGroup> 
 </usesParameter> 
</OperationMethod> 
  







OGC 03-010r9 


© OGC 2003 – All rights reserved 173
 


Annex G 
(informative) 


 
UML to XML schemas conversion process 


G.1 General 


This document describes an application of ISO 19118 Annex A "XML based encoding 
rule" to a UML model of Coordinate Reference System and Coordinate Operation 
definition data. The UML model converted to XML Schemas is based on OGC Abstract 
Specification Topic 2: Spatial Referencing by Coordinates (OGC 02-102). That UML 
model has been expanded and revised, to improve it and to slightly better support 
conversion to XML Schemas. That revised UML model is intended to replace the UML 
model now in Topic 2, and is currently documented in OGC document 03-009r7. 


This conversion to XML Schemas was done in a manner that makes the results consistent 
with GML 3.0. Therefore, many of the details of many of the encoding rules used were 
adapted to produce XML Schemas consistent with the GML 3 schema patterns, and to 
use some of the XML elements and types defined in the GML 3 schemas. 


NOTE  Many of the GML 3 schema patterns are described in Subclauses 6.4, 7.1, 7.2. 8.1 through 8.3, 
and 8.6 of the GML 3.00 Implementation Specification. 


This annex lists the "rules" used in this UML model to XML Schemas conversion 
process. Those rules are described in the following subclauses, for converting UML: 


a) Packages 
b) Classes 
c) Attributes 
d) Associations 
e) Multiplicities 
f) Other 


EDITOR’S NOTE  The following rules have not been revised to reflect all the changes made in this 
version of this document. 


G.2 Rules for packages 


The rules used to convert UML model packages to XML Schemas were: 







OGC 03-010r9 


174 © OGC 2003 – All rights reserved
 


Rule 1  Convert each UML package into a separate XML Schema Document. Name each 
XML Schema Document like the UML package, with spaces removed, the first 
character changed to lower case, and the word "System" made plural. 


Example UML package name: Coordinate Reference System 
XML Schema name: coordinateReferenceSystems.xsd 


Reason(s) Produce multiple (i.e., 6) XML Schema documents (not one), following GML 
patterns. 


Exceptions None 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 175
 


Rule 2  Begin each XML Schema Document with standard header information. 
Example <?xml version="1.0" encoding="UTF-8"?> 


<schema targetNamespace="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 
version="3.0.0" xml:lang="en"> 
 <annotation> 
  <appinfo source="urn:opengis:specification:gml:schema-
coordinateReferenceSystems:v3.0c3"/> 
  <documentation> 
   <name>coordinateReferenceSystems.xsd</name> 
   <version>3.0.0</version> 
   <scope>How to encode coordinate reference system definitions. </scope> 
   <description>Builds on referenceSystems.xsd to encode the data needed to 
define coordinate reference systems, including the specific subtypes of coordinate 
reference systems. Primary editor: Arliss Whiteside. Last updated 2003/01/08. 
</description> 
   <copyright>Copyright (c) 2002-2003 Open GIS Consortium, All Rights 
Reserved.</copyright> 
   <conformance>This schema encodes the Coordinate Reference System 
(SC_) package of the extended UML Model for OGC Abstract Specification Topic 2: 
Spatial Referencing by Coordinates, with the exception of the abstract "SC_CRS" 
class. The "SC_CRS" class is encoded in referenceSystems.xsd, to eliminate the 
(circular) references from coordinateOperations.xsd to 
coordinateReferenceSystems.xsd. That UML model is adapted from ISO 19111 - 
Spatial referencing by coordinates, as described in Annex C of Topic 2. 
</conformance> 
  </documentation> 
 </annotation> 
 <!-- ===================================================== 
       includes and imports 
 ====================================================== --> 
 [Insert here needed <include> statements] 
 <!-- ===================================================== 
       elements and types 
 ================================================= --> 
 [Insert here XML encoded UML classes, attributes, and associations] 
</schema> 


Reason(s) Produce XML Schema Documents that follow GML patterns. 
Exceptions None 
 







OGC 03-010r9 


176 © OGC 2003 – All rights reserved
 


Rule 3  Include "xsd:include" statements in each XML Schema Document as needed for 
other XML Schema Documents referenced. 


Example [In coordinateReferenceSystems.xsd:] 
 <include schemaLocation="coordinateSystems.xsd"/> 
 <include schemaLocation="datums.xsd"/> 
 <include schemaLocation="coordinateOperations.xsd"/> 


Reason(s) Produce valid XML Schema Documents. 
Exceptions None 
 
Rule 4  Remove suffix containing two-letter UML package abbreviation plus following 


underscore character from class names, as classes and attribute data types are 
converted to XML Schema elements. 


Example UML class name: SC_GeographicCRS 
XML element name: GeographicCRS 


Reason(s) Produce XML: Schema element names following the GML pattern. 
Exceptions None 
 
Rule 5  Encode EX_Extent UML class in referenceSystems.xsd, based on specification of 


that class in ISO 19115 but using relevant GML 3 complexTypes. 
Example Not applicable 
Reason(s) Not create another XML Schema document, for a short XML encoding 
Exceptions None 
 
Rule 6  Move XML encoded version of SC_CRS class to referenceSystems.xsd from 


coordinateReferenceSystems.xsd 
Example Move _CRS element, crsRef element, and related complexTypes. 
Reason(s) Remove prohibited circular reference between coordinateReferenceSystems.xsd and 


coordinateOperations.xsd. (TBR) 
Exceptions None 
 


G.3 Rules for classes 


The rules used to convert UML model classes to XML Schemas were: 


NOTE  Most of these rules copy the documentation of each UML class into a <documentation> 
element of the XML complexType or element converted from this UML class attribute, in order to keep the 
UML class documentation for human understanding of the XML Schemas. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 177
 


Rule 7  Convert each UML class with <<DataType>> stereotype to XML Schema global 
declaration of complexType, with same name augmented with "Type" suffix and with 
<documentation> element copying documentation of UML class. 


Example UML class:  


 


DQ_CovarianceElement
+ rowIndex : Integer
+ columnIndex : Integer
+ covariance : Double


<<DataType>>


 
XML Schema: 
 <complexType name="CovarianceElementType"> 
  <annotation> 
   <documentation>An element of a covariance matrix.</documentation> 
  </annotation> 
  <sequence> 
   [Insert here XML elements encoding UML attributes] 
  </sequence> 
 </complexType> 
 <-- =================================================== --> 


Reason(s) Use XML Schema global complexType, with names following GML patterns. 
Exceptions a) Do not XML encode CI_Citation class, since such information can be included 


as metaDataProperty elements, which are optionally allowed.  
b) XML encode EX_Extent class in referenceSystems.xsd. 


Applies to UML classes: RS_Identifier, DQ_CovarianceElement, EX_Extent, CI_Citation 
 







OGC 03-010r9 


178 © OGC 2003 – All rights reserved
 


Rule 8  Convert each UML class with <<CodeList>> stereotype to XML Schema global 
declarations of: 
a) element with same name except first letter not capitalized, and having the 


following complexType. 
b) complexType with same name augmented with "Type" suffix, with standard 


contents for a <<CodeList>> class except including <documentation> element 
copying documentation of UML class.  


Example UML class: 


 


CD_PixelInCell
+ cell center
+ cell corner


<<CodeList>>


 
XML Schema: 
 <element name="pixelInCell" type="gml:PixelInCellType"/> 
 <!-- =================================================== --> 
 <complexType name="PixelInCellType"> 
  <annotation> 
   <documentation>Specification of the way an image grid is associated 
with the image data attributes. </documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" use="required"> 
     <annotation> 
      <documentation>Reference to a source of information 
specifying the values and meanings of all the allowed string values for this 
PixelInCellType. </documentation> 
     </annotation> 
    </attribute> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- ================================================== --> 


Reason(s) Allow the specific values allowed in a CodeList to be specified elsewhere and 
referenced here. 


Exceptions None 
Applies to UML classes: SC_DerivedCRSType, CD_PixelInCell, CD_VerticalDatumType 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 179
 


Rule 9  Convert each UML class with <<Union>> stereotype to XML Schema global 
declarations of: 
a) element with same name except first letter not capitalized, and having the 


following complexType. 
b) complexType with same name augmented with "Type" suffix, containing a 


<choice> construct and <documentation> element copying documentation of 
UML class. 


Example UML class: 


 


CD_SecondDefiningParameter


+ inverseFlattening : Scale
+ semiMinorAxis : Length
+ isSphere : String = "sphere"


<<Union>>


 
XML Schema: 
 <element name="secondDefiningParameter" 
type="gml:SecondDefiningParameterType"/> 
 <!-- =================================================== --> 
 <complexType name="SecondDefiningParameterType"> 
  <annotation> 
   <documentation>Definition of the second parameter which defines the 
shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis 
and inverse flattening or semi-major axis and semi-minor axis. When the reference 
body is a sphere rather than an ellipsoid, only a single defining parameter is required, 
namely the radius of the sphere; in that case, the semi-major axis "degenerates" into 
the radius of the sphere.</documentation> 
  </annotation> 
  <choice> 
   [Insert here XML elements encoding UML attributes] 
  </choice> 
 </complexType> 
 <!-- =================================================== --> 


Reason(s) Use XML Schema global element and complexType. 
Exceptions For CC_ParameterValue class, add to complexType <documentation> some 


guidance for Application Schemas. 
Applies to UML classes: CD_SecondDefiningParameter, CC_ParameterValue 
 







OGC 03-010r9 


180 © OGC 2003 – All rights reserved
 


Rule 10  Convert each UML class that is not a subclass of another class, has <<Abstract>> 
stereotype, and does not have (direct or inherited) identity, to XML Schema global 
declarations of: 
a) element with same name except first letter not capitalized, having the following 


complexType and with abstract="true". 
b) complexType with same name augmented with "Type" suffix, containing a 


<sequence> construct and <documentation> element copying documentation of 
UML class. 


Example UML class:  


 


DQ_PositionalAccuracy
+ measureDescription [0..1] : String


<<Abstract>>


 
XML Schema: 
 <element name="_positionalAccuracy" 
type="gml:AbstractPositionalAccuracyType" abstract="true"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractPositionalAccuracyType" abstract="true"> 
  <annotation> 
   <documentation>Position error estimate (or accuracy) data. 
</documentation> 
  </annotation> 
  <sequence> 
   [Insert here XML elements encoding UML attributes] 
  </sequence> 
 </complexType> 
 <!-- =================================================== --> 


Reason(s) Use XML Schema global element and complexType, following GML patterns. 
Exceptions a) For CC_GeneralOperationParameter, extend gml:DefinitionType as described in 


following rule. 
b) For CC_GeneralParameterValue, add to complexType <documentation> some 


guidance for Applications Schemas. 
Applies to UML classes: CC_GeneralParameterValue, DQ_PositionalAccuracy 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 181
 


Rule 11  Convert CC_GeneralOperationParameter UML class (that is not a subclass of another 
class, has <<Abstract>> stereotype, and does not have (direct or inherited) identity), 
to XML Schema global declarations of: 
a) element with same name augmented with "_" prefix, having the following 


complexType, with abstract="true", and in substitutionGroup of gml:Definition . 
b) complexType with same name augmented with "Type" suffix, extending 


gml:DefinitionType, and with <documentation> element copying documentation 
of UML class. 


c) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType and in substitutionGroup of 
gml:dictionaryEntry. 


d) complexType with same name augmented with "RefType" suffix and first 
character made lower case, with contents restricting gml: DictionaryEntryType, 
substituting name of element a) above for "gml:Definition". Include 
<documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


CC_General OperationParameter
+ minimumOccurs [0..1] : Integer


<<Abstract>>


 
XML Schema: 
 <element name="_GeneralOperationParameter" 
type="gml:AbstractGeneralOperationParameterType" abstract="true" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralOperationParameterType" 
abstract="true"> 
  <annotation> 
   <documentation>The definition of a parameter or group of parameters used 
by an operation method. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:DefinitionType"> 
    <sequence> 
    [Insert here XML elements encoding UML attributes] 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="abstractGeneralOperationParameterRef" 
type="gml:AbstractGeneralOperationParameterRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralOperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter or group, either 







OGC 03-010r9 


182 © OGC 2003 – All rights reserved
 


referencing or containing the definition of that parameter or group. </documentation>
  </annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    <sequence> 
     <element ref="gml:_GeneralOperationParameter" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 


Reason(s) Use XML Schema global element and complexType, following GML patterns. 
Exceptions None 
Applies to UML classes: CC_GeneralParameterValue, DQ_PositionalAccuracy 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 183
 


Rule 12  Convert each UML class that is not a subclass of another class, has <<Abstract>> 
stereotype, and has direct identity, to XML Schema global declarations of: 
a) element with same name, having the corresponding complexType, with 


abstract="true", and in substitutionGroup of gml:Definition element. 
b) complexType with same name augmented with "BaseType" suffix, with 


abstract="true", restricting gml:DefinitionType to contain one occurrence of the 
"xxxName" element encoding the "xxxName" UML attribute, instead of zero or 
more occurrences of the "gml:Name" element. 


c) complexType with same name augmented with "Type" suffix, extending the 
above complexType, containing a <sequence> construct and <documentation> 
element copying documentation of this UML class.  


d) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType, and in substitutionGroup of 
gml:dictionaryEntry. 


e) complexType with same name augmented with "RefType" suffix and first 
character made lower case, with contents restricting gml: DictionaryEntryType 
and substituting name of element a) above for "gml:Definition". Include 
<documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


RS_ReferenceSystem
+ srsName : String
+ srsID [0..*] : RS_Identifier
+ validArea [0..1] : EX_Extent
+ scope [0..1] : String


<<Abstract>>


 
XML Schema: 
 <element name="_ReferenceSystem" type="gml:AbstractReferenceSystemType" 
abstract="true" substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractReferenceSystemBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for reference system objects, simplifying 
and restricting the DefinitionType as needed. </ documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     < element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     < element ref="gml:srsName"/> 
    </ sequence> 
    < attribute ref="gml:id" use="required"/> 
   </ restriction> 
  </ complexContent> 
 </ complexType> 
 <!-- =================================================== --> 







OGC 03-010r9 


184 © OGC 2003 – All rights reserved
 


 [Insert here XML encoding of "xxxName" UML attribute] 
 <!-- =================================================== --> 
 < complexType name="AbstractReferenceSystemType" abstract="true"> 
  < annotation> 
   < documentation>Description of a spatial and/or temporal reference system 
used by a dataset. </ documentation> 
  </ annotation> 
  < complexContent> 
   < extension base="gml:AbstractReferenceSystemBaseType"> 
    < sequence> 
     [Insert here XML elements encoding UML associations and 
attributes, except xxxName] 
    </ sequence> 
   </ extension> 
  </ complexContent> 
 </ complexType> 
 <!-- =================================================== --> 
 < element name="referenceSystemRef" type="gml:ReferenceSystemRefType" 
substitutionGroup="gml:dictionaryEntry"/> 
 <!-- =================================================== --> 
 < complexType name="ReferenceSystemRefType"> 
  < annotation> 
   < documentation>Association to a reference system, either referencing or 
containing the definition of that reference system. </ documentation> 
  </ annotation> 
  <complexContent> 
   <restriction base="gml:DictionaryEntryType"> 
    < sequence> 
     < element ref="gml:_ReferenceSystem" minOccurs="0"/> 
    </ sequence> 
    < attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </ complexType> 
 <!-- ================================================== --> 


Reason(s) Make encoded class substitutable for a gml:Definition and thus includable in a 
gml:Dictionary. Use XML Schema global elements and complexTypes, following 
GML patterns. 


Exceptions None 
Applies to UML classes: RS_ReferenceSystem, CD_Datum, CS_CoordinateSystem, 


CC_CoordinateOperation, CC_OperationMethod 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 185
 


Rule 13  Convert each UML class that is a subclass of another class, has <<Abstract>> 
stereotype, and inherited identity, to XML Schema global declarations of: 
a) element with same name augmented with "_" prefix, having the following 


complexType, with abstract="true", and in substitutionGroup of element from 
superclass. 


b) complexType with same name augmented with "Type" suffix and "Abstract" 
prefix, with abstract="true", extending complexType of superclass, containing a 
<sequence> construct and <documentation> element copying documentation of 
this UML class.  


c) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType and in substitutionGroup of 
"…Ref" element from superclass. 


d) complexType with same name augmented with "RefType" suffix and first 
character made lower case, with contents restricting "…RefType" complexType 
of superclass, substituting name of element a) above for "gml:_Object". Include 
<documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


SC_GeneralDerivedCRS
<<Abstract>>


 
XML Schema: 
 <element name="_GeneralDerivedCRS" 
type="gml:AbstractGeneralDerivedCRSType" abstract="true" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralDerivedCRSType" abstract="true"> 
  <annotation> 
   <documentation>A coordinate reference system that is defined by its 
coordinate conversion from another coordinate reference system (not by a datum). 
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     [Insert here XML elements encoding UML attributes and 
associations] 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="generalDerivedCRSRef" 
type="gml:GeneralDerivedCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeneralDerivedCRSRefType"> 
  <annotation> 







OGC 03-010r9 


186 © OGC 2003 – All rights reserved
 


   <documentation>Association to a general derived coordinate reference 
system, either referencing or containing the definition of that reference system. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 
    <sequence> 
     <element ref="gml:_GeneralDerivedCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- ================================================== --> 


Reason(s) Use XML Schema global elements and complexTypes, following GML patterns. 
Exceptions For the CC_Operation class, do not include in the primary complexType the elements 


encoding the associations to CC_OperationMethod and CC_ParameterValue. Instead, 
include the elements encoding these associations in both the Conversion and 
Transformation elements. Add to complexType <documentation> some guidance for 
Application Schemas. 


Applies to UML classes: SC_CRS, SC_CoordinateReferenceSystem, SC_GeneralDerivedCRS, 
CC_SingleOperation, CC_Operation 


 







OGC 03-010r9 


© OGC 2003 – All rights reserved 187
 


Rule 14  Convert each UML class that is not a subclass of another class, has no stereotype, and 
has direct identity, to XML Schema global declarations of: 
a) element with same name, having the corresponding complexType and in 


substitutionGroup of gml:Definition element. 
b) complexType with same name augmented with "BaseType" suffix, restricting 


gml:DefinitionType to contain one occurrence of the "xxxName" element 
encoding the "xxxName" UML attribute, instead of zero or more occurrences of 
the "gml:Name" element. 


c) complexType with same name augmented with "Type" suffix, extending the 
above "BaseType" complexType, containing a <sequence> construct and 
<documentation> element copying documentation of this UML class.  


d) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType, and in substitutionGroup of 
gml:dictionaryEntry. 


e) complexType with same name augmented with "RefType" suffix and first 
character made lower case, with contents restricting gml: DictionaryEntryType 
and substituting name of element a) above for "gml:Definition". Include 
<documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


CD_PrimeMeridian
+ meridianName : String
+ meridianID [0..*] : RS_Identifier
+ greenwichLongitude : Angle = 0


 
XML Schema: 
 <element name="PrimeMeridian" type="gml:PrimeMeridianType" 
substitutionGroup="gml:Definition"/> 
 <!-- =================================================== --> 
 <complexType name="PrimeMeridianBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for prime meridian objects, simplifying 
and restricting the DefinitionType as needed. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:DefinitionType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:meridianName"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 [Insert here XML encoding of "xxxName" UML attribute] 
 <!-- =================================================== --> 







OGC 03-010r9 


188 © OGC 2003 – All rights reserved
 


 <complexType name="PrimeMeridianType"> 
  <annotation> 
   <documentation>A prime meridian defines the origin from which 
longitude values are determined.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:PrimeMeridianBaseType"> 
    <sequence> 
     [Insert here XML elements encoding UML associations and 
attributes except xxxName] 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- ================================================== --> 


Reason(s) Make encoded class substitutable for a gml:Definition and includable in a 
gml:Dictionary. Use XML Schema global elements and complexTypes, following 
GML patterns. 


Exceptions None 
Applies to UML classes: CD_Ellipsoid, CD_PrimeMeridian, CS_CoordinateSystemAxis, 


CC_OperationMethod 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 189
 


Rule 15  Convert each UML class that is a subclass of another class, has no stereotype, and no 
(direct or inherited) identity, to XML Schema global declarations of: 
a) element with same name except first letter not capitalized, having the following 


complexType and in substitutionGroup of element from superclass. 
b) complexType with same name augmented with "Type" suffix, extending 


complexType of superclass, and containing a <sequence> construct and 
<documentation> element copying documentation of UML class. 


Example UML class:  


 


DQ_CovarianceMatrix
+ unitOfMeasure [1..*] : UnitOfMeasure


 
XML Schema: 
 <element name="covarianceMatrix" type="gml:CovarianceMatrixType" 
substitutionGroup="gml:_positionalAccuracy"/> 
 <!-- =================================================== --> 
 <complexType name="CovarianceMatrixType"> 
  <annotation> 
   <documentation>Error estimate covariance matrix. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractPositionalAccuracyType"> 
    <sequence> 
     [Insert here XML elements encoding UML attributes] 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 


Reason(s) Use XML Schema global element and complexType, following GML patterns. 
Exceptions For CC_ParameterValueGroup, add to <documentation> guidance for use by specific 


Conversions and Transformations. 
Applies to UML classes: DQ_CovarianceMatrix, DQ_AbsoluteExternalPositionAccuracy, 


DQ_RelativeInternalPositionAccuracy, CC_ParameterValueGroup 
 







OGC 03-010r9 


190 © OGC 2003 – All rights reserved
 


Rule 16  Convert each UML class that is a subclass of another class, has no stereotype, and 
has direct identity, to XML Schema global declarations of: 
a) element with same name, having the corresponding complexType and in 


substitutionGroup of gml:Definition element. 
b) complexType with same name augmented with "BaseType" suffix, restricting 


gml:DefinitionType complexType to contain one occurrence of the "xxxName" 
element encoding the "xxxName" UML attribute, instead of zero or more 
occurrences of the "gml:Name" element. 


c) complexType with same name augmented with "Type" suffix, extending the 
above "BaseType" complexType, containing a <sequence> construct and 
<documentation> element copying documentation of this UML class.  


d) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType. 


e) complexType with same name augmented with "RefType" suffix and first 
character made lower case, with contents restricting "RefType" of superclass, 
substituting name of element a) above for "gml:Definition". Include 
<documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


CC_OperationParameter
+ parameterName : String
+ parameterID [0..*] : RS_Identifier


 
XML Schema: 
 <element name="OperationParameter" type="gml:OperationParameterType" 
substitutionGroup="gml:_GeneralOperationParameter"/> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterBaseType" abstract="true"> 
  <annotation> 
   <documentation>Basic encoding for operation parameter objects, 
simplifying and restricting the DefinitionType as needed. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractGeneralOperationParameterType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:parameterName"/> 
     <element ref="gml:minimumOccurs" minOccurs="0"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 [Insert here XML encoding of "xxxName" UML attribute] 
 <!-- =================================================== --> 
 <complexType name="OperationParameterType"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 191
 


  <annotation> 
   <documentation>The definition of a parameter used by an operation 
method. Most parameter values are numeric, but other types of parameter values are 
possible. This complexType is expected to be used or extended for all operation 
methods, without defining operation-method-specialized element names.  
</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:OperationParameterBaseType"> 
    <sequence> 
    [Insert here XML elements encoding UML associations and 
attributes, except xxxName] 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="operationParameterRef" 
type="gml:OperationParameterRefType"/> 
 <!-- =================================================== --> 
 <complexType name="OperationParameterRefType"> 
  <annotation> 
   <documentation>Association to an operation parameter, either referencing 
or containing the definition of that parameter. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractGeneralOperationParameterRefType"> 
    <sequence> 
     <element ref="gml:OperationParameter" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- ================================================== --> 


Reason(s) Make encoded class substitutable for a gml:Definition and includable in a 
gml:Dictionary. Use XML Schema global elements and complexTypes, following 
GML patterns. 


Exceptions None 
Applies to UML classes: CC_OperationParameter, CC_OperationParameterGroup 
 







OGC 03-010r9 


192 © OGC 2003 – All rights reserved
 


Rule 17  Convert each UML class that is a subclass of another class, has no stereotype, and 
has inherited identity, to XML Schema global declarations of: 
a) element with same name, having following complexType, and in 


substitutionGroup of element from superclass. 
b) complexType with same name augmented with "Type" suffix, extending 


complexType of superclass, containing a <sequence> construct and 
<documentation> element copying documentation of this UML class.  


c) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType and in substitutionGroup of the 
"…Ref" element from superclass. 


d) complexType with same name augmented with "RefType" suffix and first 
character not capitalized, with contents restricting "…RefType" of superclass and 
substituting name of element a) above for "gml:Definition". Include 
<documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


SC_GeographicCRS


 
XML Schema: 
 <element name="GeographicCRS" type="gml:GeographicCRSType" 
substitutionGroup="gml:_CoordinateReferenceSystem"/> 
 <!-- =================================================== --> 
 <complexType name="GeographicCRSType"> 
  <annotation> 
   <documentation>A coordinate reference system based on an ellipsoidal 
approximation of the geoid; this provides an accurate representation of the geometry 
of geographic features for a large portion of the earth's surface.</documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractCoordinateReferenceSystemType"> 
    <sequence> 
     [Insert here XML elements encoding UML attributes and 
associations] 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="geographicCRSRef" type="gml:GeographicCRSRefType" 
substitutionGroup="gml:coordinateReferenceSystemRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeographicCRSRefType"> 
  <annotation> 
   <documentation>Association to a geographic coordinate reference 
system, either referencing or containing the definition of that reference system. 
</documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:CoordinateReferenceSystemRefType"> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 193
 


    <sequence> 
     <element ref="gml:GeographicCRS" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 


Reason(s) Use XML Schema global elements and complexTypes, following GML patterns. 
Exceptions a) Do not XML encode RS_SpatailReferenceSystemUsingGeographicIdentifier 


class, since not relevant to coordinate reference systems. 
b) For CD_TemporalDatum class, first restrict CD_DatumType to eliminate 


prohibited attributes, and then extend it to add additional attribute. 
c) For CC_Conversion and CC_Transformation classes, also encode a "General…" 


element as specified in following rule. 
Applies to UML classes: RS_SpatailReferenceSystemUsingGeographicIdentifier, 


SC_CompoundCRS, SC_VerticalCRS, SC_GeographicCRS, SC_GeocentiricCRS, 
SC_EngineeringCRS, SC_ImageCRS, SC_TemporalCRS, SC_ProjectedCRS, 
SC_DerivedCRS, CD_ImageDatum, CD_EngineeringDatum, CD_GeodeticDatum, 
CD_TemporalDatum, CD_VerticalDatum, CS_EllipsoidalCS, CS_CartesianCS, 
CS_TemporalCS, CS_GravityRelatedCS, CS_UserDefinedCS, CS_LinearCS, 
CS_ObliqueCartesianCS, CS_PolarCS, CS_SphericalCS, CS_CylindricalCS, 
CC_ConcatenatedOperation, CC_PassThoughOperation, CC_OperationParameter 


 







OGC 03-010r9 


194 © OGC 2003 – All rights reserved
 


Rule 18  Convert CC_Conversion and CC_Transformation classes (each a subclass of another 
class, has no stereotype, and has inherited identity), to XML Schema global 
declarations of: 
a) element with same name augmented with "_General" prefix, having following 


complexType, with abstract="true", and in substitutionGroup of element from 
superclass. 


b) complexType with same name augmented with "AbstractGeneral" prefix and 
“Type” suffix, with abstract="true", and restricting AbstractOperationType to 
reflect constraints on multiplicity of sourceCRS and targetCRS stated as noted on 
those associations. For AbstractGeneralConversion element, omit 
operationVersion element to reflect "operationVersion [0..0] : String" UML 
attribute. For AbstractGeneral Transformation element, omit minOccurs="0" on 
operationVersion element to reflect "operationVersion : String" UML attribute. 
Include <documentation> element copying documentation of this UML class 
augmented with guidance on using this element in an Application Schema. 


c) element with same name augmented with "_General" prefix and "Ref" suffix and 
first character made lower case, having the following complexType and in 
substitutionGroup of "…Ref" element from superclass. 


d) complexType with same name augmented with augmented with 
"AbstractGeneral" prefix and "RefType" suffix and first character not capitalized, 
with contents restricting "…RefType" complexType of superclass, and 
substituting name of element a) above for "gml:Definition". Include 
<documentation> element adapted from gml:AssociationType. 


e) element with same name, having following complexType, and in 
substitutionGroup of element from item a) above. 


f) complexType with same name augmented with "Type" suffix, extending 
complexType of item b) above and containing a <sequence> construct. Include 
<documentation> element copying documentation of this UML class augmented 
with guidance on using this element in an Application Schema.  


g) element with same name augmented with "Ref" suffix and first character made 
lower case, having the following complexType and in substitutionGroup of 
"…Ref" element from item c) above. 


h) complexType with same name augmented with "RefType" suffix and first 
character not capitalized, with contents restricting "…RefType" complexType of 
item d) above and substituting name of element e) above for "gml:Definition". 
Include <documentation> element adapted from gml:AssociationType. 


Example UML class:  


 


CC_Conversion
+ operationVersion [0..0] : String


 
XML Schema: 
 <element name="_GeneralConversion" 
type="gml:AbstractGeneralConversionType" abstract="true" 
substitutionGroup="gml:_Operation"/> 
 <!-- =================================================== --> 
 <complexType name="AbstractGeneralConversionType" abstract="true"> 
  <annotation> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 195
 


   <documentation>An abstract operation on coordinates that does not 
include any change of datum. The best-known example of a coordinate conversion is 
a map projection. The parameters describing coordinate conversions are defined 
rather than empirically derived. Note that some conversions have no parameters. 
 
This abstract complexType is expected to be extended for well-known operation 
methods with many Conversion instances, in Application Schemas that define 
operation-method-specialized element names and contents. This conversion uses an 
operation method, usually with associated parameter values. However, operation 
methods and parameters are directly associated with concrete subtypes, not with this 
abstract type. All concrete types derived from this type shall extend this type to 
include a "usesMethod" element that references the "OperationMethod" element. 
Similarly, all concrete types derived from this type shall extend this type to include 
zero or more elements each named "uses...Value" that each use the type of an 
element substitutable for the "_generalParameterValue" element. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:AbstractOperationType"> 
    <sequence> 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"/> 
     <element ref="gml:coordinateOperationName"/> 
     <element ref="gml:coordinateOperationID" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:validArea" minOccurs="0"/> 
     <element ref="gml:scope" minOccurs="0"/> 
     <element ref="gml:_positionalAccuracy" minOccurs="0"/> 
    </sequence> 
    <attribute ref="gml:id" use="required"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="generalConversionRef" type="gml:GeneralConversionRefType" 
substitutionGroup="gml:operationRef"/> 
 <!-- =================================================== --> 
 <complexType name="GeneralConversionRefType"> 
  <annotation> 
   <documentation>Association to a general conversion, either referencing or 
containing the definition of that conversion. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:OperationRefType"> 
    <sequence> 
     <element ref="gml:_GeneralConversion" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="Conversion" type="gml:ConversionType" 
substitutionGroup="gml:_GeneralConversion"/> 
 <!-- =================================================== --> 
 <complexType name="ConversionType"> 







OGC 03-010r9 


196 © OGC 2003 – All rights reserved
 


  <annotation> 
   <documentation>A concrete operation on coordinates that does not 
include any change of Datum. The best-known example of a coordinate conversion is 
a map projection. The parameters describing coordinate conversions are defined 
rather than empirically derived. Note that some conversions have no parameters. 
 
This concrete complexType can be used with all operation methods, without using an 
Application Schema that defines operation-method-specialized element names and 
contents. This abstract complexType can also be used, extended, or restricted for 
well-known operation methods, especially for methods with only one Conversion 
instance. </documentation> 
  </annotation> 
  <complexContent> 
   <extension base="gml:AbstractGeneralConversionType"> 
    <sequence> 
     <element ref="gml:usesMethod"/> 
     <element ref="gml:usesValue" minOccurs="0" 
maxOccurs="unbounded"/> 
    </sequence> 
   </extension> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 
 <element name="usesMethod" type="gml:OperationMethodRefType"> 
  <annotation> 
   <documentation>Association to the operation method used by this 
conversion operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="usesValue" type="gml:ParameterValueType"> 
  <annotation> 
   <documentation>Unordered set of composition associations to the set of 
parameter values used by this conversion operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="conversionRef" type="gml:ConversionRefType" 
substitutionGroup="gml:generalConversionRef"/> 
 <!-- =================================================== --> 
 <complexType name="ConversionRefType"> 
  <annotation> 
   <documentation>Association to a concrete general-purpose conversion, 
either referencing or containing the definition of that conversion. </documentation> 
  </annotation> 
  <complexContent> 
   <restriction base="gml:GeneralConversionRefType"> 
    <sequence> 
     <element ref="gml:Conversion" minOccurs="0"/> 
    </sequence> 
    <attributeGroup ref="gml:AssociationAttributeGroup"/> 
   </restriction> 
  </complexContent> 
 </complexType> 
 <!-- =================================================== --> 







OGC 03-010r9 


© OGC 2003 – All rights reserved 197
 


Reason(s) In addition to concrete element and complexType, provide abstract element and 
complexType to allow Application Schemas to restrict contents without using XML 
Schema restriction. Use XML Schema global elements and complexTypes, following 
GML patterns. 


Exceptions None 
Applies to UML classes: CC_Conversion, CC_Transformation 
 
The following table summarizes the conditions under which the rules listed above are 
applicable. 


Stereotype Is Subclass? Has Identity? Rule Number 
<<DataType>>   7 
<<CodeList>>   8 
<<Union>>   9 
<<Abstract>> No No 10 and 11 
<<Abstract>> No Direct 12 
<<Abstract>> No Inherited (none) 
<<Abstract>> Yes No (none) 
<<Abstract>> Yes Direct (none) 
<<Abstract>> Yes Inherited 13 
(none) No No (none) 
(none) No Direct 14 
(none) No Inherited (none) 
(none) Yes No 15 
(none) Yes Direct 16 
(none) Yes Inherited 17 and 18 
 


G.4 Rules for attributes 


The rules used to convert UML model (class) attributes to XML Schemas were: 


NOTE 1 Most of these rules copy the documentation of each UML attribute into a <documentation> 
element of the XML element converted from this UML attribute, in order to keep the UML attribute 
documentation for human understanding of the XML Schemas. 


NOTE 2 Most of these rules use global XML elements (instead of local elements inside another element) 
for flexibility. Use of global elements allows Application Schemas in another namespace to restrict tan 
element containing only global elements. 







OGC 03-010r9 


198 © OGC 2003 – All rights reserved
 


Rule 19  Convert each UML attribute with type "Boolean" to XML Schema declarations of: 
a) Reference to following element inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type xsd:boolean, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + booleanValue : Boolean 


XML Schema:  Inside <choice> or <sequence> construct: 
 <element ref="gml:booleanValue"/> 
Global element declaration: 
 <element name="booleanValue" type="boolean"> 
  <annotation> 
   <documentation>Boolean value of an operation parameter. A Boolean 
value does not have an associated unit of measure. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use xsd:boolean type. 
Exceptions None 
Applies to UML attributes: booleanValue 
 
Rule 20  Convert each UML attribute with type "Date" to XML Schema declarations of: 


a) Reference to following element inside <sequence> or <choice> construct of 
"…Type" complexType converted from class containing this attribute. 


b) Global element with same name, using type xsd:date, and with <documentation> 
element copying documentation of this UML attribute. 


Example UML attribute:  + realizationEpoch [0..1] : Date 
XML Schema:  Inside <sequence> or <choice> construct: 
 <element ref="gml:realizationEpoch" minOccurs="0"/> 
Global element declaration: 
 <element name="realizationEpoch" type="date"> 
  <annotation> 
   <documentation>The time for which this datum definition is valid. This 
time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for 
NAD83). In the latter case, the epoch usually refers to the year in which a major 
recalculation of the geodetic control network, underlying the datum, was executed or 
initiated. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use xsd:date type. 
Exceptions None 
Applies to UML attributes: realizationEpoch 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 199
 


Rule 21  Convert each UML attribute with type "DateTime" to XML Schema declarations of: 
a) Reference to following element inside <sequence> or <choice> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type xsd:dateTime, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + origin : DateTime 


XML Schema:  Inside <sequence> or <choice> construct: 
 <element ref="gml:origin"/> 
Global element declaration: 
 <element name="origin" type="dateTime"> 
  <annotation> 
   <documentation>The date and time origin of this temporal datum. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use xsd:dateTime type. 
Exceptions None 
Applies to UML attributes: origin 
 
Rule 22  Convert each UML attribute with type "Integer" to XML Schema declarations of: 


a) Reference to following element inside <sequence> or <choice> construct of 
"…Type" complexType converted from class containing this attribute. 


b) Global element with same name, using type xsd:positiveInteger, and with 
<documentation> element copying documentation of this UML attribute. 


Example UML attribute:  + modifiedCoordinate [1..*] : Integer 
XML Schema: Inside <sequence> or <choice> construct: 
 <element ref="gml:modifiedCoordinate" maxOccurs="unbounded"/> 
Global element declaration: 
 <element name="modifiedCoordinate" type="positiveInteger"> 
  <annotation> 
   <documentation>Ordered sequence of positive integers defining the 
positions in a coordinate tuple of the coordinates affected by this pass-through 
operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use xsd:positiveInteger type, since negative and zero integer values are not permitted 
for these UML attributes. 


Exceptions For the minimumOccurs element, use type nonNegativeInteger (not positiveInteger) 
Applies to UML attributes: modifiedCoordinate, integerValue, minimumOccurs, 


maximumOccurs 
 







OGC 03-010r9 


200 © OGC 2003 – All rights reserved
 


Rule 23  Convert each UML attribute with type "Sequence<Measure>" to XML Schema 
declarations of: 
a) Reference to following element inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type gml:MeasureListType, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + valueList : Sequence<Measure> 


XML Schema:  Inside <choice> or <sequence> construct: 
 <element ref="gml:valueList"/> 
Global element declaration: 
 <element name="valueList" type="gml:MeasureListType"> 
  <annotation> 
   <documentation>Ordered sequence of two or more numeric values of 
an operation parameter list, where each value has the same associated unit of 
measure. An element of this type contains a space-separated list of double values. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:MeasureListType type, from basicTypes.xsd. 
Exceptions None 
Applies to UML attributes: valueList 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 201
 


Rule 24  Convert each UML attribute with type "Sequence<Integer>" to XML Schema 
declarations of: 
a) Reference to following element inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) global element with same name, using type gml:integerList, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + integerValueList : Sequence<Integer> 


XML Schema:  Inside <choice> or <sequence> construct: 
 <element ref="gml:integerValueList"/> 
Global element declaration: 
 <element name="integerValueList" type="gml:integerList"> 
  <annotation> 
   <documentation>Ordered sequence of two or more integer values of an 
operation parameter list, usually used for counts. These integer values do not have an 
associated unit of measure. An element of this type contains a space-separated list of 
integer values. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:integerList type, from basicTypes.xsd. 
Exceptions None 
Applies to UML attributes: integerValueList 
 







OGC 03-010r9 


202 © OGC 2003 – All rights reserved
 


Rule 25  Convert each UML attribute with type "Measure" to XML Schema declarations of: 
a) Reference to following two elements inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type gml:MeasureType, and with 


<documentation> element copying documentation of this UML attribute. 
c) Global element with name " dmsAngleValue", using type gml:DMSAngleType, 


and with <documentation> element modifying documentation of this UML 
attribute. 


Example UML attribute:  + value : Measure 
XML Schema:  Inside <choice> or <sequence> construct: 
 <element ref="gml:value"/> 
 <element ref="gml:dmsAngleValue"/> 
Global element declaration: 
 <element name="value" type="gml:MeasureType"> 
  <annotation> 
   <documentation>Numeric value of an operation parameter, with its 
associated unit of measure. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 
 <element name="dmsAngleValue" type="gml:DMSAngleType"> 
  <annotation> 
   <documentation>Value of an angle operation parameter, in either 
degree-minute-second format or single value format. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:MeasureType type (from basicTypes.xsd) and gml:DMSAngleType type 
(from units.xsd). Allow (parameter) values to be encoded in Degrees-Minutes-
Seconds format. 


Exceptions None 
Applies to UML attributes: "value" 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 203
 


Rule 26  Convert each UML attribute with type "Length" to XML Schema declarations of: 
a) Reference to following element inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type gml:LengthType, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + semiMajorAxis : Length 


XML Schema:  Inside <choice> or <sequence> construct: 
 <element ref="gml:semiMajorAxis"/> 
Global element declaration: 
 <element name="semiMajorAxis" type="gml:LengthType"> 
  <annotation> 
   <documentation>Length of the semi-major axis of the ellipsoid. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:LengthType type, from measures.xsd. 
Exceptions None 
Applies to UML attributes: semiMajorAxis, semiMinorAxis 
 
Rule 27  Convert each UML attribute with type "Angle" to XML Schema declarations of: 


a) Reference to following element inside <sequence> or <choice> construct of 
"…Type" complexType converted from class containing this attribute. 


b) Global element with same name, using type gml:AngleChoiceType, and with 
<documentation> element copying documentation of this UML attribute. 


Example UML attribute:  + greenwichLongitude : Angle = 0 
XML Schema:  Inside <sequence> or <choice> construct: 
 <element ref="gml:greenwichLongitude"/> 
Global element declaration: 
 <element name="greenwichLongitude" type="gml:AngleChoiceType"> 
  <annotation> 
   <documentation>Longitude of the prime meridian measured from the 
Greenwich meridian, positive eastward. If the datum type is geodetic and the prime 
meridian name is not supplied, then the prime meridian name is taken to be 
"Greenwich" and the Greenwich longitude value is taken to be zero. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:AngleChoiceType type, from measures.xsd. 
Exceptions None 
Applies to UML attributes: greenwichLongitude 
 







OGC 03-010r9 


204 © OGC 2003 – All rights reserved
 


Rule 28  Convert each UML attribute with type "Scale" to XML Schema declarations of: 
a) Reference to following element inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with name validArea, using type gml:ScaleType, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + inverseFlattening : Scale 


XML Schema: Inside <choice> or <sequence> construct: 
 <element ref="gml:inverseFlattening"/> 
Global element declaration: 
 <element name="inverseFlattening" type="gml:ScaleType"> 
  <annotation> 
   <documentation>Inverse flattening value of the ellipsoid. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:ScaleType type, from measures.xsd. 
Exceptions None 
Applies to UML attributes: inverseFlattening 
 
Rule 29  Convert each UML attribute with type "UnitOfMeasure" to XML Schema 


declarations of: 
a) Reference to following attribute following <sequence> construct of "…Type" 


complexType converted from class containing this attribute. 
b) Global attribute with "uom" name, using type xsd:anyURI, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + axisUnitID : UnitOfMeasure 


XML Schema: following <sequence> construct: 
 <attribute ref="gml:uom" use="required"/> 
Global element declaration: 
 <attribute name="uom" type="anyURI"> 
  <annotation> 
   <documentation>Identifier of the unit of measure used for this 
coordinate system axis. </documentation> 
  </annotation> 
 </attribute> 
 <!-- =================================================== --> 


Reason(s) Use uom attribute pattern, in global attribute for Application Schemas flexibility. 
Exceptions None 
Applies to UML attributes: axisUnitID 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 205
 


Rule 30  Convert each UML attribute with type of a <<CodeList>> stereotyped UML class to 
XML Schema declaration of reference to element converted from <<CodeList>> 
class, inside <sequence> or <choice> construct of "…Type" complexType converted 
from class containing this attribute. 


Example UML attribute:  + pixelinCell : RS_PixelinCell 
XML Schema,:  Inside <sequence> or <choice> construct:  
 <element ref="gml:pixelInCell"/> 


Reason(s) Use relevant declared global elements. 
Exceptions None 
Applies to UML attributes: derivedCRSType, pixelinCell, verticalDatumType 
 
Rule 31  Don't convert any UML attributes in each <<CodeList>> stereotyped UML class to 


any XML Schema declaration. 
Example UML attribute:  + cell center 


XML Schema:  (none) 
Reason(s) Allow separate specification of allowed valued of <<CodeList>> stereotyped UML 


classes. 
Exceptions None 
Applies to UML classes: SC_DerivedCRSType, CD_PixelinCell, CD_VerticalDatumType 
 







OGC 03-010r9 


206 © OGC 2003 – All rights reserved
 


Rule 32  Convert each UML attribute with type "RS_Identifier" to XML Schema declarations 
of: 
a) Reference to following element inside <sequence> or <choice> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type gml:IdentifierType, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + srsID [0..*] : RS_Identifier 


XML Schema: Inside <sequence> construct: 
 <element ref="gml:srsID" minOccurs="0" maxOccurs="unbounded"/> 
Global element declaration: 
 <element name="srsID" type="gml:IdentifierType"> 
  <annotation> 
   <documentation>An identification of this reference system. The first 
srsID, if any, is normally the primary identification code, and any others are aliases. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:IdentifierType type, in referenceSystems.xsd. 
Exceptions None 
Applies to UML attributes: srsID, datumID, meridianID, spheroidID, csID, axisID, 


coordinateOperationID, methodID, parameterID 
 
Rule 33  Convert each UML attribute with type "DQ_PositionalAccuracy" to XML Schema 


reference to global element with same name and <documentation> element copying 
documentation of this UML attribute. 


Example UML attribute:  + positionalAccuracy [0..1] : DQ_PositionalAccuracy 
XML Schema: Inside <choice> or <sequence> construct:  
     <element ref="gml:_positionalAccuracy" minOccurs="0"> 
      <annotation> 
       <documentation>Estimate of the impact of this 
coordinate operation on point position accuracy. Gives position error estimates for 
target coordinates of this coordinate operation, assuming no errors in source 
coordinates. </documentation> 
      </annotation> 
     </element> 


Reason(s) Use "_positionalAccuracy" global element, from dataQuality.xsd. 
Exceptions None 
Applies to UML attributes: positionalAccuracy 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 207
 


Rule 34  Convert each UML attribute with type EX_Extent to XML Schema declarations of: 
a) Reference to following element inside <sequence> or <choice> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with name validArea, using type ExtentType, and with 


<documentation> element generalising documentation of these UML attributes, 
in referenceSystems.xsd only. 


Example UML attribute: + validArea [0..1] : EX_Extent 
XML Schema:  Inside <sequence> or <choice> construct: 
 <element ref="gml:scope" minOccurs="0"/> 
Global element declaration, in referenceSystems.xsd only: 
 <element name="validArea" type="gml:ExtentType"> 
  <annotation> 
   <documentation>Area or region in which this CRS object is valid. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Declare validArea element in only one place, use ExtentType type. 
Exceptions None 
Applies to UML classes: RS_ReferenceSystem, CD_Datum, CC_CoordinateOperation 
 
Rule 35  Do not convert UML attribute with type CI_Citation to XML Schema. 
Example UML attribute: + authority [0..1] : CI_Citation 


XML Schema: (none) 
Reason(s) Whenever useful, citation information can be included in a metaDataProperty 


element in any XML elements that uses gml:Identifier XML element. 
Exceptions None 
Applies to UML attributes: "authority" 
 







OGC 03-010r9 


208 © OGC 2003 – All rights reserved
 


Rule 36  Convert each UML attribute with type "CharacterString" and attribute name not 
ending in "Name" to XML Schema declarations of: 
a) Reference to following element inside <sequence> or <choice> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type xsd:string, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + version [0..1] : CharacterString 


XML Schema:  Inside <sequence> or <choice> construct: 
  <element ref="gml:version" minOccurs="0"/> 
Global element declaration: 
 <element name="version" type="string"> 
  <annotation> 
   <documentation>Identifier of the version of the associated codeSpace or 
code, as specified by the codeSpace or code authority. This version is included only 
when the "code" or "codeSpace" uses versions. When appropriate, the version is 
identified by the effective date, coded using ISO 8601 date format. </documentation>
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use xsd:string type, in global element for flexibility. 
Exceptions UML attributes codeSpace, "scope", valueFile, anchorPoint, axisAbbrev, 


axisDirection, "formula", measureDescription, and "remarks", as specified in 
following six specialized rules. 


Applies to UML attributes: "code", "version", isSphere, coordinateOperationVersion, 
stringValue 


 







OGC 03-010r9 


© OGC 2003 – All rights reserved 209
 


Rule 37  Convert each UML attribute with type "CharacterString" and attribute name of 
"scope" to XML Schema declarations of: 
a) Reference to following element inside <sequence> or <choice> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using xsd:string type, and with 


<documentation> element generalising documentation of these UML attributes, 
in referenceSystems.xsd only. 


Example UML attribute: + scope [0..1] : CharacterString 
XML Schema:  Inside <sequence> or <choice> construct: 
 <element ref="gml:scope" minOccurs="0"/> 
Global element declaration, in referenceSystems.xsd only: 
 <element name="scope" type="string"> 
  <annotation> 
   <documentation>Description of domain of usage, or limitations of usage, 
for which this CRS object is valid. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Declare "scope" global element in only one place, use xsd:string type. 
Exceptions None 
Applies to UML classes: RS_ReferenceSystem, CD_Datum, CC_CoordinateOperation 
 
Rule 38  Convert each UML attribute with type "CharacterString" and attribute name of 


"valueFile" to XML Schema declarations of: 
a) Reference to following element inside <choice> or <sequence> construct of 


"…Type" complexType converted from class containing this attribute. 
b) Global element with same name, using type xsd:anyURI, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + valueFile : CharacterString 


XML Schema:  Inside <choice> or <sequence> construct: 
 <element ref="gml:valueFile"/> 
Global element declaration: 
 <element name="valueFile" type="anyURI"> 
  <annotation> 
   <documentation>Reference to a file containing multiple parameter 
values, each numeric value with its associated unit of measure. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use xsd:anyURI type to reference a file, following XML Schema and GML patterns. 
Exceptions None 
Applies to UML attributes: valueFile 
 







OGC 03-010r9 


210 © OGC 2003 – All rights reserved
 


Rule 39  Convert each UML attribute with type "CharacterString" and attribute name of 
"formula" to XML Schema declarations of: 
a) Reference to following element inside <sequence> construct of "…Type" 


complexType converted from class containing this attribute. 
b) Global element with name "methodFormula", using type gml:CodeType, and 


with <documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + formula : CharacterString 


XML Schema:  Inside <sequence> construct: 
 <element ref="gml:methodFormula"/> 
Global element declaration: 
 <element name="methodFormula" type="gml:CodeType"> 
  <annotation> 
   <documentation>Formula(s) used by this operation method. The value 
may be a reference to a publication. Note that the operation method may not be 
analytic, in which case this element references or contains the procedure, not an 
analytic formula.</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:CodeType type to allow referencing another document, following GML 
pattern. Change name "formula" to methodFormula to avoid conflict with "formula" 
element in units.xsd. 


Exceptions None 
Applies to UML attributes: formula 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 211
 


Rule 40  Convert each UML attribute with type "CharacterString" and attribute name of 
"codeSpace", "anchorPoint", "axisAbbrev", "axisDirection", or 
"measureDescription" to XML Schema declarations of: 
a) Reference to following element inside <sequence> construct of "…Type" 


complexType converted from class containing this attribute. 
b) Global element with same name, using type gml:CodeType, and with 


<documentation> element copying documentation of this UML attribute. 
Example UML attribute:  + axisDirection : CharacterString 


XML Schema:  Inside <sequence> construct: 
 <element ref="gml:axisDirection"/> 
Global element declaration: 
 <element name="axisDirection" type="gml:CodeType"> 
  <annotation> 
   <documentation>Direction of this coordinate system axis (or in the case 
of Cartesian projected coordinates, the direction of this coordinate system axis at the 
origin). Examples: north or south, east or west, up or down. Within any set of 
coordinate system axis, only one of each pair of terms can be used. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:CodeType global type to allow referencing another document, following 
GML pattern. 


Exceptions None 
Applies to UML attributes: codeSpace, anchorPoint, axisAbbrev, axisDirection, 


measureDescription 
 







OGC 03-010r9 


212 © OGC 2003 – All rights reserved
 


Rule 41  Convert UML attributes named "code" and “codeSpace”, both of type 
"CharacterString" and in RS_Identifier class, to XML Schema reference to gml:name 
element inside <sequence> construct of "IdentifierType" complexType converted 
from RS_Identifier class. Include <documentation> element adapted from the 
documentation of these two UML attributes. 


Example UML attributes:  + code : CharacterString 
    + codeSapce [0..1] : CharacterString 
XML Schema:  Inside <sequence> construct: 
   <element ref="gml:name"> 
    <annotation> 
     <documentation>The code or name for this Identifier, often from a 
controlled list or pattern defined by a code space. The optional codeSpace attribute is 
normally included to identify or reference a code space within which one or more 
codes are defined. This code space is often defined by some authority organization, 
where one organization may define multiple code spaces. The range and format of 
each Code Space identifier is defined by that code space authority. Information about 
that code space authority can be included as metaDataProperty elements which are 
optionally allowed in all CRS objects. </documentation> 
    </annotation> 
   </element> 
 <!-- =================================================== --> 


Reason(s) Use gml:name element that has meaning the same as this pair of UML attributes.  
Exceptions None 
Applies to UML attributes: code, codeSapce (only in RS_Identifier) 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 213
 


Rule 42  Convert UML attribute named "remarks", with type "CharacterString", and in 
RS_Identifier class, to XML Schema declarations of: 
a) Reference to following element inside <sequence> construct of "IdentifierType" 


complexType converted from RS_Identifier class. 
b) Global element with same name, using type gml: StringOrRefType, in 


"gml:description" substitutionGroup, and with <documentation> element 
copying documentation of this UML attribute. 


Example UML attribute:  + remarks [0..1] : CharacterString 
XML Schema:  Inside <sequence> construct: 
  <element ref="gml:remarks" minOccurs="0"> 
Global element declaration: 
 <element name="remarks" type="gml:StringOrRefType" 
substitutionGroup="gml:description"> 
  <annotation> 
   <documentation>Information about this object or code. Contains text or 
refers to external text.  </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Define global element for Application Schemas flexibility. Use global type 
gml:StringOrRefType to allow substitution for gml:description, when referenced as 
described in the following rule.  


Exceptions None 
Applies to UML attributes: remarks (only in RS_Identifier) 
 







OGC 03-010r9 


214 © OGC 2003 – All rights reserved
 


Rule 43  Convert each UML attribute named "remarks", with type "CharacterString", and not 
in RS_Identifier class, to XML Schema declarations of reference to "gml:remarks" 
element defined in preceding rule, and copying documentation of this UML attribute. 
Put this reference to "gml:remarks" in the "AbstractXxxxBaseType" complexType 
converted from this class, immediately after the "gml:metaDataProperty" 
element. 


Example UML attribute:  + remarks [0..1] : CharacterString (in RS_ReferenceSystem) 
XML Schema:  Inside <sequence> construct of 
"AbstractReferenceSystemBaseType": 
     <element ref="gml:metaDataProperty" minOccurs="0" 
maxOccurs="unbounded"/> 
     <element ref="gml:remarks" minOccurs="0"> 
      <annotation> 
       <documentation>Comments on or information about this 
reference system, including source information. </documentation> 
      </annotation> 
     </element> 
 


Reason(s) Adapt gml:description global type, optional in all GML objects, to contain these 
general remarks on CRS objects. 


Exceptions None 
Applies to UML attributes: remarks (except in RS_Identifier) 
 







OGC 03-010r9 


© OGC 2003 – All rights reserved 215
 


Rule 44  Convert each UML attribute with type "CharacterString" and attribute name ending 
in "Name" to XML Schema declarations of: 
a) Reference to following element inside <sequence> construct of "…BaseType" 


complexType converted from class containing this attribute. 
b) Global element with same name, using SimpleNameType, in substitutionGroup 


"gml:name", and with <documentation> element copying documentation of this 
UML attribute. 


Example UML attribute:  + srsName : CharacterString 
XML Schema:  Inside <sequence> construct: 
  <element ref="gml:srsName"/> 
Global element declaration: 
 <element name="srsName" type="gml:SimpleNameType" 
substitutionGroup="gml:name"> 
  <annotation> 
   <documentation>The name by which this reference system is identified. 
</documentation> 
  </annotation> 
 </element> 


Reason(s) Allow restricting gml:DefintionType by complexTypes using "…Name" elements. 
Exceptions None 
Applies to UML attributes: srsName, datumName, ellipsoiidName, meridianName, csName, 


axisName, coordinateOperationName, methodName, parameterName 
 
Rule 45  Insert global declaration of SimpleNameType that restricts gml:CodeType to 


prohibit inclusion of codeSpace attribute. 
Example XML Schema: 


 <complexType name="SimpleNameType"> 
  <annotation> 
   <documentation>The primary name of a reference system object. The 
string in the CodeType contains the object identification name, and the 
codeSpace attribute is not included. </documentation> 
  </annotation> 
  <simpleContent> 
   <restriction base="gml:CodeType"> 
    <attribute name="codeSpace" type="anyURI" use="prohibited"/> 
   </restriction> 
  </simpleContent> 
 </complexType> 
 <!-- =================================================== --> 


Reason(s) Declare SimpleNameType global type derived from gml:CodeType, to support 
preceding rule. Provide <documentation> to support human understanding 


Exceptions None 
 







OGC 03-010r9 


216 © OGC 2003 – All rights reserved
 


G.5 Rules for associations 


Most rules used to convert UML model (class) associations to XML Schemas are 
separately applied to each navigable end of each association. The rules used were: 


Rule 46  Do not XML encode the non-navigable ends of UML associations (usually without 
role names) 


Example None 
Reason(s) There is no need to navigate association in this direction. 
Exceptions None 
Applies to UML association role names: None 
 
Rule 47  Do not XML encode the ends of UML "derived" associations. 
Example UML role name:  +usesDatum from SC_CoordinateReferenceSystem class 


XML Schema: (None) 
Reason(s) There is no need to navigate derived associations (instead of the basic associations). 
Exceptions None 
Applies to UML association role names:  
 
The following rules for encoding associations apply to only the navigable end (always 
has a role name) of non-derived UML associations: 


NOTE  Most of these rules copy the documentation of each UML association role into a 
<documentation> element of the XML element converted from this UML role, in order to keep the UML 
association role documentation for human understanding of the XML Schemas. 







OGC 03-010r9 


© OGC 2003 – All rights reserved 217
 


Rule 48  Convert each navigable end of each composition UML association to XML Schema 
declarations of: 
a) Reference to following element inside <sequence> construct of the complexType 


converted from the class at the other end of this association. 
b) Global element with same name, using the complexType encoded for the class at 


this end of the association, and with <documentation> element copying 
documentation of this UML role name. 


Example UML role name:  +usesValue from CC_Operation class 
XML Schema: Inside <sequence> construct: 
  <element ref="gml:usesValue" minOccurs="0" maxOccurs="unbounded"/> 
Global element declaration: 
 <element name="usesValue" type="gml:ParameterValueType"> 
  <annotation> 
   <documentation>Unordered list of composition associations to the set of 
parameter values used by this conversion operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Follow GML pattern for properties. Define global element for flexibility. 
Exceptions None 
Applies to UML association role names: +usesValue from CC_Operation, +includesValue from 


CC_ParameterValueGroup, +includesElement from DQ_CovarianceMatrix 
 







OGC 03-010r9 


218 © OGC 2003 – All rights reserved
 


Rule 49  Convert each navigable end of each aggregation of unspecified type of UML 
association to XML Schema declarations of: 
a) Reference to following element inside <sequence> construct of the complexType 


converted from the class at the other end of this association. 
b) Global element with same name, using the "xxxxRefType" encoded for the class 


at this end of this association, and with <documentation> element copying 
documentation of this UML role name. 


Example UML role name:  +usesEllipsoid from CD_GeodeticDatum class 
XML Schema: Inside <sequence> construct: 
  <element ref="gml:usesEllipsoid"/> 
Global element declaration: 
 <element name="usesEllipsoid" type="gml:EllipsoidRefType"> 
  <annotation> 
   <documentation>Association to the ellipsoid used by this geodetic datum. 
</documentation> 
  </annotation> 
 </element> 
 <!-- =================================================== --> 


Reason(s) Use "xxxxRefType" following GML pattern for general associations. Define global 
element for flexibility. 


Exceptions a) If new global element declaration would be a duplicate, do not duplicate it. 
b) If association has attached {XOR} note, see following rule. 
c) For all +usesDatum role names to concrete classes for specific types of datums, 


change XML element name from "usesDatum' to the class name on this end of 
the association prefixed by "uses". 


d) For all +usesCS role names to concrete classes for specific types of coordinate 
systems, change XML element name from "usesCS' to the class name on this end 
of the association prefixed by "uses". 


e) For +usesOperation from CC_ConcatenatedOperation, change XML element 
name from "usesOperation" to " usesSingleOperation". 


Applies to UML association role names: +includesCRS from SC_CompoundCRS, +baseCRS 
from SC_GeneralDerivedCRS, +usesDatum from SC_GeocentricCRS, +usesDatum 
from SC_GeographicCRS, +usesDatum from SC_VerticalCRS, +usesDatum from 
SC_TemporalCRS, +usesDatum from SC_EngineeringCRS, +usesDatum from 
SC_ImageCRS, +usesCS from SC_EngineeringCRS, +usesCS from 
SC_GeographicCRS, +usesCS from SC_VerticalCRS, +usesCS from 
SC_TemporalCRS, +usesCS from SC_ProjectedCRS, SC_DerivedCRS, +usesCS 
from +usesEllipsoid from CD_GeodeticDatum, +usesPrimeMeridian from 
CD_GeodeticDatum, +usesAxis from CS_CoordinateSystem, +sourceCRS from 
CC_CoordinateOperation, , +targetCRS from CC_CoordinateOperation, 
+usesOperation from CC_ConcatenatedOperation, +usesOperation from 
CC_PassThroughOperation, +definedByConversion from 
SC_GeneralDerivedCRS, +usesMethod from CC_Operation, +usesParameter 
from CC_OperationMethod, +includesParameter from 
CC_OperationParameterGroup, +valueOfParameter from CC_ParameterValue, 
+valuesOfGroup from CC_ParameterValueGroup 







OGC 03-010r9 


© OGC 2003 – All rights reserved 219
 


 
Rule 50  Convert each navigable end of an aggregation UML association with attached 


{XOR} note to XML Schema declarations of a reference to the appropriate element. 
Put this element inside a <choice> construct and without minOccurs="0", inside the 
<sequence> construct of the complexType converted from the class at the other end 
of this association. 


Example UML role name:  +usesSphericalCS from SC_GeocentricCRS class 
 and   +usesCartesianCS from SC_GeocentricCRS class 
XML Schema: Inside <sequence> construct: 
     <choice> 
      <element ref="gml:usesCartesianCS"/> 
      <element ref="gml:usesSphericalCS"/> 
     </choice> 
 


Reason(s) Take advantage of <choice> construct in XML Schema. 
Exceptions If new global element declaration would be a duplicate, do not duplicate it. 
Applies to UML association role names: +usesSphericalCS from SC_GeocentricCRS, 


+usesCartesianCS from SC_GeocentricCRS, +usesCartesianCS from SC_ImageCRS, 
+usesObliqueCartesianCS from SC_ImageCRS 


 


G.6 Rules for multiplicities 


The rules used to convert UML model multiplicities to XML Schemas were: 


Rule 51  Convert each UML multiplicity "0..*", on UML attributes and navigable association 
role names, to XML Schema declaration of minOccurs="0" 
maxOccurs="unbounded". 


Example UML model multiplicity:     0..* 
XML Schema element multiplicity:   minOccurs="0" maxOccurs="unbounded" 


Reason(s) Use relevant XML Schema multiplicity constructs. 
Exceptions None 
 
Rule 52  Convert each UML multiplicity "1..*", on UML attributes and navigable association 


roles, to XML Schema declaration of maxOccurs="unbounded". 
Example UML model multiplicity:     1..* 


XML Schema element multiplicity:   maxOccurs="unbounded" 
Reason(s) Use relevant XML Schema multiplicity construct. 
Exceptions None 
 







OGC 03-010r9 


220 © OGC 2003 – All rights reserved
 


Rule 53  Convert each UML multiplicity "2..*", on navigable association roles, to XML 
Schema declaration of minOccurs="2" maxOccurs="unbounded". 


Example UML model multiplicity:     2..* 
XML Schema element multiplicity:   minOccurs="2" maxOccurs="unbounded" 


Reason(s) Use relevant XML Schema multiplicity constructs. 
Exceptions None 
 
Rule 54  Convert each UML multiplicity "0..1", on UML attributes and navigable association 


roles, to XML Schema declaration of minOccurs="0". 
Example UML model multiplicity:     0..1 


XML Schema element multiplicity:   minOccurs="0"  
Reason(s) Use relevant XML Schema multiplicity construct. 
Exceptions None 
 
Rule 55  Don't convert each UML multiplicity "1", on navigable association roles, to any 


XML Schema declaration. 
Example UML association role multiplicity:   1 


XML Schema element multiplicity:   (none) 
Reason(s) Use relevant XML Schema multiplicity construct. 
Exceptions None 
 
Rule 56  Don't convert each unspecified UML multiplicity, on UML attributes, to any XML 


Schema declaration. 
Example UML association role multiplicity:   (none) 


XML Schema element multiplicity:   (none)  
Reason(s) Use XML Schema multiplicity constructs. 
Exceptions None 
 


G.7 Other rules 


Other rules used to convert the UML model to XML Schemas were: 







OGC 03-010r9 


© OGC 2003 – All rights reserved 221
 


Rule 57  Remove each XML <sequence> construct in a complexType that contains no 
elements (that encode a UML attribute or association). 


Example Before:  
   <extension base="gml:AbstractReferenceSystemType"> 
    <sequence> 
    </sequence> 
   </extension> 
After: 
   <extension base="gml:AbstractReferenceSystemType"/> 


Reason(s) Simplify XML Schemas. 
Exceptions None 
 
Rule 58  In each XML Schema document, order element and corresponding type declarations 


for ease of top-down understanding. 
Example N/A 
Reason(s) Make XML Schema documents easier to understand. 
Exceptions None 
Applies to All six CRS Schema documents. 







OGC 03-010r9 


222 © OGC 2003 – All rights reserved
 


Annex H 
(informative) 


 
Coordinate operation methods 


H.1 Introduction 


This annex contains a non-exhaustive description of some conversion and transformation 
operation methods. It lists a number of methods defined in the EPSG v 6.3 well-known 
data set, plus a few other often used methods and some methods applicable to the 
transformation of image coordinates. 


Each operation method should uniquely specify the algorithm to be used for a coordinate 
transformation. This specification may comprise two algorithms, forward and inverse, as 
is sometimes used for map projection algorithms. Each conversion and transformation, 
and each operation method, should use a well-known data set in referencing such 
algorithms. 


NOTE  Of course, referencing a well-known algorithm does not imply that software which implements 
these algorithms has correctly implemented it, or has implemented all referenced algorithms. Similarly, 
referencing a well-known set of parameter values does not imply that software which implements these 
values uses the correct values. 


H.2 EPSG defined operation methods 


The well-known data set from EPSG (version 6.3) specifies a number of operation 
methods. Please note that the EPSG data set is neither prescriptive, nor exhaustive. This 
document mentions a small subset of the methods in the EPSG data set. Methods not 
listed in this document, but listed in the EPSG data set, can easily be implemented using 
the OperationMethod and OperationParameter elements, making use of the method name 
and parameter names specified in the EPSG data set. 


These operation methods are defined making use of well-defined operation parameters. 
When a coordinate operation is specified referencing an EPSG defined operation method, 
the detailed specification in an XML document should adhere to the EPSG definitions of 
the operation parameters. 


The detailed definition of these operation method algorithms, with their formulas and a 
worked example is included in the EPSG data set, available on the Web, through the 
reflector: http://www.epsg.org/ 


These and other information on coordinate operation methods is available on: 
http://www.remotesensing.org/geotiff/proj_list/ 


See also:  







OGC 03-010r9 


© OGC 2003 – All rights reserved 223
 


http://www.posc.org/Epicentre.2_2/DataModel/ExamplesofUsage/eu_cs.html. 


H.3. Other operation methods  


H.3.1 Introduction 


The following operation methods are not specified in any well-known data set but are 
implied in the specification of Coordinate Systems and Coordinate Reference Systems. 


a) Polar / Cartesian (2D) conversion 


b) Spherical / Cartesian (3D) conversion 


c) Cylindrical / Cartesian conversion 


d) Linear to Cartesian (2D) conversion 


e) Linear to Cartesian (3D) conversion 


f) Geographic3D to Geographic2D/GravityRelatedHeight conversion 


 
H.3.2 Polar / Cartesian (2D) conversion 


This method converts two-dimensional polar coordinates to plane Cartesian coordinates 
and vice versa (the inverse algorithm is implied in this transformation method). 


H.3.3 Spherical / Cartesian (3D) conversion  


This method converts spherical coordinates (sometimes referred to as polar 3D 
coordinates) to 3D Cartesian coordinates and vice versa (the inverse algorithm is again 
implied in this transformation method). Please bear in mind that when the spherical 
coordinate system is used in a local context (i.e., in an EngineeringCRS); the converted 
Cartesian coordinate system can only be used in the same context: there is no datum 
change involved. Transformation to a Geocentric Cartesian system is possible only when 
the spherical coordinate system is also geocentric.  


H.3.4 Cylindrical / Cartesian conversion 


This method converts (3D) cylindrical coordinates to 3D Cartesian coordinates and vice 
versa. The area of use of the cylindrical coordinate system is unlikely to be other than 
local. The Cartesian coordinate system will therefore also be associated with an 
EngineeringCRS. A further (or indeed a one-step) transformation to a Geocentric system 
will be incorrect, although it may seem mathematically correct. 







OGC 03-010r9 


224 © OGC 2003 – All rights reserved
 


H.4 Image coordinate transformation methods  


H.4.1 Introduction 


This subclause discusses the following non-exhaustive list of coordinate transformation 
types applicable to image coordinate reference systems:  


a) Ground-to-image transformations 


b) Single-image-to-ground transformations 


c) Elevation coverage with single-image-to-ground transformations 


d) Elevation coverage for 2D to 3D coordinate transformations 


e) Elevation coverage with single ground-to-image transformations 
 
H.4.2 Ground-to-image transformations 


This set of operation methods defines transformations used for ground-to-image 
coordinate transformations, with one method used for each image geometry model type. 
The input to such a transformation is usually 3D ground coordinates, and the output is 
usually 2D image coordinates. These methods will usually use parameters for directly 
transforming 3D ground coordinates to 2D image coordinates. 


 
H.4.3 Single-image-to-ground transformations 


This set of operation methods defines transformations used for single (or monoscopic) 
image-to-ground transformations, with one operation method used for each image 
geometry model type. These methods could use parameters for directly transforming 2D 
image coordinates to multiple 3D ground coordinates. However, these parameterized 
transformations could use parameters for directly transforming 3D ground coordinates to 
2D image coordinates (like ground-to-image transformations). 


The output from such a transformation is usually 3D ground coordinates, and the input 
can be compound 2D image plus 3D ground coordinates. In that case, the 3D ground 
coordinates are used to provide a fixed elevation value, to be used with the 2D image 
input coordinates. The horizontal position is included with each elevation to facilitate 
ground coordinate transformations. Inclusion of the horizontal position also allows the 
client to provide an approximate horizontal ground position, when known. Server 
software implementing such transformations is allowed to make use of this approximate 
horizontal position, to speed computation. 


 
H.4.4 Elevation coverage with single-image-to-ground transformation 


This operation method defines a transformation using an elevation coverage with a 
single-image-to-ground transformation. One operation method can be used for any 







OGC 03-010r9 


© OGC 2003 – All rights reserved 225
 


elevation coverage that uses the same OGC specified (grid) coverage interface. A 
transformation parameter should reference one elevation coverage from one external 
elevation coverage service. This assumes that interface implementations will first use a 
separate single-image-to-ground transformation to compute two or more points along the 
image ray. The implementation will then intersect this ray with ground shape defined by 
elevation coverage. 


The output from this transformation is usually 3D ground coordinates, and the input can 
be compound 2D image plus 3D ground coordinates (plus the separately specified 
elevation coverage). In that case, the input 3D ground coordinates are used to provide an 
approximate elevation value, to be used with the 2D image input coordinates. The 
horizontal position is included with each elevation to facilitate ground coordinate 
transformations. Inclusion of the horizontal position also allows the client to provide an 
approximate horizontal ground position, when known. Server software implementing 
such transformations is allowed to make use of this approximate horizontal position, to 
speed computation. 


 
H.4.5 Elevation coverage for 2D to 3D coordinate transformation 


This operation method defines a transformation using an elevation coverage for 2D to 3D 
coordinate transformations. One operation method can be used for any elevation coverage 
that uses the same OGC specified (grid) coverage interface. A transformation parameter 
should reference one elevation coverage from one external elevation coverage service. 
The input to this transformation is 2D horizontal coordinates (plus the separately 
specified elevation coverage), and the output is 3D coordinates. This transformation can 
be used in a Concatenated Transformation with a ground-to-image transformation, to go 
from 2D ground coordinates to 2D image coordinates. 


 
H.4.6 Elevation coverage with single ground-to-image transformation 


This operation method defines a transformation using an elevation coverage with a single 
ground-to-image transformation. One operation method can be used for any elevation 
coverage that uses the same OGC specified (grid) coverage interface. A transformation 
parameter should reference one elevation coverage from one external elevation coverage 
service. The input to this transformation is 2D horizontal ground coordinates (plus the 
separately specified elevation coverage), and the output is usually 2D image coordinates. 
An implementation of this parameterized transformation is expected to first use the 
elevation coverage to obtain the third ground coordinate, and then use a separate 
implementation of a ground-to-image transformation. 


 







OGC 03-010r9 


226 © OGC 2003 – All rights reserved
 


Annex I 
(informative) 


 
Schema flexibility 


I.1 Introduction 


This annex summarizes the flexibility supported by the CRS set of XML Schemas 
specified in Annex C. Much of this flexibility applies to the Application Schemas that 
can and should be developed using these CRS Schemas. However, considerable 
flexibility is supported without using an Application Schema, just using a selected XML 
element as the basis for an XML document. 


NOTE 1 Specification flexibility will reduce interoperability whenever different implementations 
support different subsets of the allowed flexibility. To maximise interoperability, each Implementation 
Specification using this specification should specify the subset required to be implemented (especially by a 
server), for each flexibility area allowed by this specification. Some of this subset specification can be done 
in the Application Schema(s) specified by that Implementation Specification. 


NOTE 2 Many of the concrete XML elements defined in these CRS Schemas can be used without 
Application Schemas, when no contents extensions or restrictions are needed. However, the Conversion, 
Transformation, ParameterValue, and ParameterValueGroup elements should not be used for well-known 
coordinate operation methods having many instances. Instead, an Application Schema that defines 
operation-method-specialized element names and contents should be prepared and standardized, see 
Subclause 6.3. 


I.2 Application Schema flexibility  


The CRS Schemas specified in Annex C support considerable flexibility in an 
Application Schema. That flexibility includes: 


a) Defining elements that can be attached as metadata to each (of about 30) concrete 
elements with identity (or GML objects). 


b) Extending most complexTypes by adding elements selected and/or defined to record 
additional data about the elements using that complexType. 


c) Restricting most complexTypes to reduce the allowed multiplicity of an included 
element, or restrict an included element to a selected element defined in the 
substitutionGroup of the currently included element. 


d) Extending some abstract complexTypes by adding elements deliberately not included 
in the abstract type, to facilitate definition of differently named and/or structured 
elements in Application Schemas. Those complexTypes include: 


1) AbstractGeneralConversionType 


2) AbstractGeneralTransformationType 


3) AbstractGeneralParameterValueType 







OGC 03-010r9 


© OGC 2003 – All rights reserved 227
 


NOTE 1 Such use of Application Schemas is discussed in Subclause 6.3, and example Application 
Schemas extending two of these three complexTypes is provided in Subclauses F.3 and F.4. 


e) Using or extending some abstract complexTypes and elements to define additional 
concrete subtypes. Those elements and complexTypes include: 


1) _CoordinateReferenceSystem, with AbstractCoordinateReferenceSystemType 


2) _GeneralDerivedCRS, with AbstractGeneralDerivedCRSType 


3) _CRS, with AbstractCRSType 


4) _Datum, with AbstractDatumType 


5) _CoordinateSystem, with AbstractCooordinateSystemType 


NOTE 2 These abstract complexTypes shall not be used or extended (in an Application Schema) to 
define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. If 
needed, these abstract complexTypes can be extended in an Application Schema to add more contents. Also 
if needed, these abstract complexTypes may be used or extended (in an Application Schema) to define an 
additional concrete subtype with a different meaning. 


EDITORS NOTE  These CRS schemas currently allow such uses and extensions because XML Schemas 
cannot preclude such uses. If appropriate, constraints could be added to the <documentation> elements for 
these complexTypes to prohibit undesirable additional concrete subtypes. 


I.3 Other flexibility 


In addition to flexibility provided by preparing an Application Schema, the CRS Schemas 
specified in Annex C support considerable flexibility without using an Application 
Schema. That flexibility includes: 


a) Units of measure (uom) used for each: 


1) "value" element in ParameterValueType, even for a single parameter 


2) "uom" attribute in CoordinateSystemAxisType 


3) "result" element in AbsoluteExternalPositionalAccuracyType and 
RelativeInternalPositionalAccuracyType 


b) Subtypes of AbstractPositionalAccuracyType used in 
AbstractCoordinateOperationType and all three of its' concrete subtypes. 


c) A Dictionary element can contain any combination of the concrete XML elements 
listed in Subclause 6.2, since all are substitutable for a Definition element in a 
Dictionary. A Dictionary element can also contain one or more UnitDefinition 
elements, as defined in units.xsd of GML 3. Furthermore, any of these concrete 
elements or a Dictionary can be included inside a GenericMetaData element inside a 
metaDataProperty element, which can be inside of many other XML elements. 







OGC 03-010r9 


228 © OGC 2003 – All rights reserved
 


d) Defining new and different sets of standardized values to be used as the contents of 
many elements with the gml:CodeType and xsd:string data types. Those elements 
include: 


1) derivedCRSType, in DerivedCRSType 


2) pixelInCell, in ImageDatumType 


3) verticalDatumType, in VerticalDatumType 


4) axisDirection, in CoordinateSystemAxisType 


5) axisAbbrev, in CoordinateSystemAxisType 


6) "scope", in AbstractReferenceSystemType, AbstractDatumType, 
AbstractCoordinateOperationType, and all of their subtypes 


7) anchorPoint, in each of four subtypes of AbstractDatumType 


8) measureDescription, in each of three subtypes of 
AbstractPositionalAccuracyType 







OGC 03-010r9 


© OGC 2003 – All rights reserved 229
 


Bibliography 


[1] ISO 19111, Geographic information – Spatial referencing by coordinates 


[2] ISO 19118, Geographic information – Encoding 


[3] Version N1316 of ISO CD 19118: Geographic information - Encoding is 
supplemented by XML Schema documents posted on David Skogan’s web page on 
ISO 19118 encoding: http://www.ifi.uio.no/~davids/encoding. 


[4] OGC 99-107, Abstract Specification Topic 7: The Earth Imagery Case 


[5] OGC 00-045r1, Draft RFC on Image Coordinate Transformations 


[6] OGC 01-004, Implementation Specification: Grid Coverage 


[7] OGC 01-009, Implementation Specification: Coordinate Transformation Services 


[8] OGC 01-013r1, High-Level Ground Coordinate Transformation Interface 


[9] OGC 01-068r3, Web Map Service Implementation Specification 


 







example XML/compoundCRS#2.xml
 
	
	 OSGB36 /British National Grid + ODN
	 
		 7405
		 6.0
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
	
	 
		 
			 OSGB 1936 / British National Grid
			 
				 27700
				 6.0
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
				 
					 OSGB 1936
					 
						 4277
						 6.0
					
					 
						 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
					
					 
						 
							 ellipsoidal
							 
								 6402
								 6.0
							
							 
								 
									 Geodetic latitude
									 
										 9901
										 6.0
									
									 Lat
									 north
								
							
							 
								 
									 Geodetic longitude
									 
										 9902
										 6.0
									
									 Lon
									 east
								
							
						
					
					 
						 
							 OSGB 1936
							 
								 6277
								 6.0
							
							 
								 
									 Greenwich
									 
										 8901
										 6.0
									
									 
										 0
									
								
							
							 
								 
									 Airy 1830
									 
										 7001
										 6.0
									
									 6377563.396
									 
										 299.3249646
									
								
							
						
					
				
			
			 
				 
					 Transverse Mercator
					 
						 19916
						 6.0
					
					 
						 
							 Transverse Mercator
							 
								 9807
								 6.0
							
							 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
							 2
							 2
							 
								 
									 Latitude of natural origin
									 
										 8801
										 6.0
									
								
							
							 
								 
									 Longitude of natural origin
									 
										 8802
										 6.0
									
								
							
							 
								 
									 Scale factor at natural origin
									 
										 8805
										 6.0
									
								
							
							 
								 
									 False Easting
									 
										 8806
										 6.0
									
								
							
							 
								 
									 False Northing
									 
										 8807
										 6.0
									
								
							
						
					
					 
						 49
						 
					
					 
						 -2
						 
					
					 
						 0.999601272
						 
					
					 
						 400000
						 
					
					 
						 -100000
						 
					
				
			
			 
				 
					 Cartesian
					 
						 4400
						 6.0
					
					 
						 
							 Easting
							 
								 9906
								 6.0
							
							 E
							 east
						
					
					 
						 
							 Northing
							 
								 9907
								 6.0
							
							 N
							 north
						
					
				
			
		
	
	 
		 
			 Newlyn
			 
				 5701
				 6.0
			
			 
				 
					 Gravity-related
					 
						 6499
						 6.0
					
					 
						 
							 Gravity-related height
							 
								 9904
								 6.0
							
							 H
							 up
						
					
				
			
			 
				 
					 Ordnance Datum Newlyn
					 
						 5101
						 6.0
					
					 geoidal
				
			
		
	




example XML/compoundCRS#3.xml
 
	
	 OSGB36 /British National Grid + ODN
	 
		 7405
		 6.0
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man.

	
	 
	 




example XML/crsDictionaryv1.xml
 
	
	 Example GML Dictinary of some coordinate reference systems and components. 
	 CRS Dictionary
	 
		 
			 OSGB36 /British National Grid + ODN
			 
				 7405
				 6.0
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
			 
		
	
	 
		 
			 OSGB 1936 / British National Grid
			 
				 27700
				 6.0
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
			 
			 
		
	
	 
		 
			 OSGB 1936
			 
				 4277
				 6.0
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
			 
		
	
	 
		 
			 ellipsoidal
			 
				 6402
				 6.0
			
			 
			 
		
	
	 
		 
			 Geodetic latitude
			 
				 9901
				 6.0
			
			 Lat
			 north
		
	
	 
		 
			 Geodetic longitude
			 
				 9902
				 6.0
			
			 Lon
			 east
		
	
	 
		 
			 OSGB 1936
			 
				 6277
				 6.0
			
			 
			 
		
	
	 
		 
			 Greenwich
			 
				 8901
				 6.0
			
			 
				 0
			
		
	
	 
		 
			 Airy 1830
			 
				 7001
				 6.0
			
			 6377563.396
			 
				 299.3249646
			
		
	
	 
		 
			 Transverse Mercator
			 
				 19916
				 6.0
			
			 
			 
				 49
				 
			
			 
				 -2
				 
			
			 
				 0.999601272
				 
			
			 
				 400000
				 
			
			 
				 -100000
				 
			
		
	
	 
		 
			 Transverse Mercator
			 
				 9807
				 6.0
			
			 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
			 2
			 2
			 
			 
			 
			 
			 
		
	
	 
		 
			 Latitude of natural origin
			 
				 8801
				 6.0
			
		
	
	 
		 
			 Longitude of natural origin
			 
				 8802
				 6.0
			
		
	
	 
		 
			 Scale factor at natural origin
			 
				 8805
				 6.0
			
		
	
	 
		 
			 False Easting
			 
				 8806
				 6.0
			
		
	
	 
		 
			 False Northing
			 
				 8807
				 6.0
			
		
	
	 
		 
			 Cartesian
			 
				 4400
				 6.0
			
			 
			 
		
	
	 
		 
			 Easting
			 
				 9906
				 6.0
			
			 E
			 east
		
	
	 
		 
			 Northing
			 
				 9907
				 6.0
			
			 N
			 north
		
	




example XML/geographicCRS#1.xml
 
	
	 OSGB 1936
	 
		 4277
		 6.0
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
	
	 
		 
			 ellipsoidal
			 
				 6402
				 6.0
			
			 
				 
					 Geodetic latitude
					 
						 9901
						 6.0
					
					 Lat
					 north
				
			
			 
				 
					 Geodetic longitude
					 
						 9902
						 6.0
					
					 Lon
					 east
				
			
		
	
	 
		 
			 OSGB 1936
			 
				 6277
				 6.0
			
			 
				 
					 Greenwich
					 
						 8901
						 6.0
					
					 
						 0
					
				
			
			 
				 
					 Airy 1830
					 
						 7001
						 6.0
					
					 6377563.396
					 
						 299.3249646
					
				
			
		
	




example XML/geographicCRS#2.xml
 
	
	 
		 
			 
				 Units used in this XML document.
				 Units Dictionary
				 
					 
						 degree
						 9102
						 angle
						 
							 1.74532925199433E-02
						
					
				
				 
					 
						 radian
						 angle
						 
					
				
				 
					 
						 metre
						 9001
						 length
						 
					
				
				 
					 
						 unitless
						 scale factor
						 
					
				
			
		
	
	 OSGB 1936
	 
		 4277
		 6.0
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
	
	 
		 
			 ellipsoidal
			 
				 6402
				 6.0
			
			 
				 
					 Geodetic latitude
					 
						 9901
						 6.0
					
					 Lat
					 north
				
			
			 
				 
					 Geodetic longitude
					 
						 9902
						 6.0
					
					 Lon
					 east
				
			
		
	
	 
		 
			 OSGB 1936
			 
				 6277
				 6.0
			
			 
				 
					 Greenwich
					 
						 8901
						 6.0
					
					 
						 0
					
				
			
			 
				 
					 Airy 1830
					 
						 7001
						 6.0
					
					 6377563.396
					 
						 299.3249646
					
				
			
		
	




example XML/imageCRS#1.xml
 
	
	 Generic image coordinate reference system
	 
		 
			 2D Cartesian image coordinate system
			 
				 
					 Image Row Axis
					 R
					 display down
				
			
			 
				 
					 Image Column Axis
					 C
					 display right
				
			
		
	
	 
		 
			 Image Datum 1
			 image corner 1, 1
			 cell center
		
	




example XML/transverseMercatorGeneral#1.xml
 
	
	
	
	 Transverse Mercator
	 
		 19916
		 6.0
	
	 
		 
			 Transverse Mercator
			 
				 9807
				 6.0
			
			 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
			 2
			 2
			 
				 
					 Latitude of natural origin
					 
						 8801
						 6.0
					
				
			
			 
				 
					 Longitude of natural origin
					 
						 8802
						 6.0
					
				
			
			 
				 
					 Scale factor at natural origin
					 
						 8805
						 6.0
					
				
			
			 
				 
					 False Easting
					 
						 8806
						 6.0
					
				
			
			 
				 
					 False Northing
					 
						 8807
						 6.0
					
				
			
		
	
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




example XML/transverseMercatorGeneral#2.xml
 
	
	
	
	 Transverse Mercator
	 
		 19916
		 6.0
	
	 
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




example XML/transverseMercatorMethod#1.xml
 
	
	 Transverse Mercator
	 
		 9807
		 6.0
	
	 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
	 2
	 2
	 
		 
			 Latitude of natural origin
			 
				 8801
				 6.0
			
		
	
	 
		 
			 Longitude of natural origin
			 
				 8802
				 6.0
			
		
	
	 
		 
			 Scale factor at natural origin
			 
				 8805
				 6.0
			
		
	
	 
		 
			 False Easting
			 
				 8806
				 6.0
			
		
	
	 
		 
			 False Northing
			 
				 8807
				 6.0
			
		
	




example XML/unitsDictionaryv1.xml
 
	
	 Example GML Dictinary of unit definitions.
	 Units Dictionary
	 
		 
			 degree
			 9102
			 angle
			 
				 1.74532925199433E-02
			
		
	
	 
		 
			 radian
			 angle
			 
		
	
	 
		 
			 metre
			 9001
			 length
			 
		
	
	 
		 
			 unitless
			 scale factor
			 
		
	




extended parameter application/extendedOperationParameter.xsd
 
	 
		 
			 extendedOperationParameter.xsd
			 0.2.0
			 How to encode extended information for operation parameters. 
			 Example Application Schema to encode extended information for operation parameters. Builds on coordinateOperations.xsd, and follows same GML 3 patterns and ISO 19118 encoding. Written in the "ex" namespace. Primary editor: Arliss Whiteside. Last updated 2003/09/19. 
			 Copyright (c) 2003 OpenGIS, All Rights Reserved.
			 This schema encodes a draft Extended Operation Parameter package that builds on the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That draft package defines a subtype of the CC_OperationParameter class for recording more information. 
		
	
	
	 
	
	 
	
	 
		 
			 Extended definition of an operation parameter. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Data type of an operation parameter. Usually refers to a data type defined in measures.xsd or allowed in the ParameterValueType of coordinateOperations.xsd. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this ParameterTypeType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to an Extended Operation Parameter, either referencing or containing the definition of that Parameter. 
		
		 
			 
				 
					 
				
				 
			
		
	
	




extended parameter application/transverseMercatorMethodExtended#2.xml
 
	
	 Transverse Mercator
	 
		 9807
		 6.0
	
	 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
	 2
	 2
	 
		 
			 Latitude of natural origin
			 
				 8801
				 6.0
			
			 AngleChoiceType
		
	
	 
		 
			 Longitude of natural origin
			 
				 8802
				 6.0
			
			 AngleChoiceType
		
	
	 
		 
			 Scale factor at natural origin
			 
				 8805
				 6.0
			
			 ScaleType
		
	
	 
		 
			 False Easting
			 
				 8806
				 6.0
			
			 LengthType
		
	
	 
		 
			 False Northing
			 
				 8807
				 6.0
			
			 LengthType
		
	




extended parameter application/UIGM1method.xml
 
	
	 This operation method implements the universal image geometry model that transforms ground coordinates into georeferenced image coordinates. This image geometry model uses one ratio of two polynomial functions to compute the row image coordinate, and uses a similar ratio of two different polynomials to compute the column image coordinate. All four polynomials are functions of three ground coordinates: two horizontal coordinates and one vertical coordinate. In the polynomial functions, the three ground coordinates and two image coordinates are each offset and scaled to have a range from -1.0 to +1.0 over an image or image section. For brevity, this simplified operation method specification does not include all geometry model parameters or all optional XML elements. 
	 Universal Image Geometry Model Transformation (simplified)
	 See Section 6.5 of OGC Abstract Specification Topic 7 : The Earth Imagery Case ( OGC document 99-107). 
	 3
	 2
	 
		 
			 Alphanumeric text identifying one specific original image. 
			 Image ID
			 string
		
	
	 
		 
			 Increasing numbers of the Image Support Data Version Number are used to identify versions with increasing quality of the image geometry model data for the same original image. This Image Support Data Version field shall be 0 before the original image support data is adjusted. Minimum value is 0, maximum value is 9. 
			 Image Support Data Version
			 nonNegativeInteger
		
	
	 
		 
			 The values of the coefficients of the approximate linear sensor model, which is used to find the proper image geometry model section for a ground coordinate position. The parameter value shall contain an ordered list of eight double precision floating point numbers, four for the section number in the image row axis, followed by four for the image column axis. These coefficients shall be recorded with Scale units, but various implied units are used by the various coefficients. 
			 Linear Sensor Model Coefficients
			 ScaleListType
		
	
	 
		 
			 The numbers of rows and columns of sections into which the image geometry model is divided for this image. The parameter value shall contain an ordered list of two small integers, the first specifying the number of rows and the second specifying the number of columns. For each integer, the minimum value is 1, and the maximum value is 8. 
			 Number of Sections
			 integerList
		
	
	 
		 
			 Parameters for one section of the universal image geometry model. There shall be from 1 up to 64 model sections for one image. If the model for this image is not divided into sections, there shall be only one repetition of this group of parameters. 
			 Image Section Parameters
			 64
			 
				 
					 The row and column numbers of this section of the universal image geometry model for this image. The parameter value contains an ordered list of two small integers, the first specifying the row number and the second specifying the column number. For each integer, the minimum value is 1, and the maximum value is 8. 
					 Section Number
					 integerList
				
			
			 
				 
					 Ground position normalization parameters and image position un-normalization parameters, for this section of the universal image geometry model. 
					 Ground and Image Position Normalization Parameters
					 
						 
							 East position offset for normalizing ground coordinates. The units shall be either length or angle units. 
							 East Ground Position Offset
							 LengthOrAngleType
						
					
					 
						 
							 North position offset for normalizing ground coordinates. The units shall be the same as for the East Offset, and either length or angle units. 
							 North Ground Position Offset
							 LengthOrAngleType
						
					
					 
						 
							 Vertical position offset for normalizing ground coordinates. The units shall be length units. 
							 Vertical Ground Position Offset
							 LengthType
						
					
					 
						 
							 East scale factor for normalizing ground coordinates. The units shall be the same as for the East Offset, either length or angle units. 
							 East Ground Position Scale
							 LengthOrAngleType
						
					
					 
						 
							 North scale factor for normalizing ground coordinates. The units shall be the same as for the North Offset, either length or angle units. 
							 North Ground Position Scale
							 LengthOrAngleType
						
					
					 
						 
							 Vertical scale factor for normalizing ground coordinates. The units shall be the same as for the Vertical Offset, and shall be length units. 
							 Vertical Ground Position Scale
							 LengthType
						
					
					 
						 
							 Image row position offset for un-normalizing image coordinates. The units shall be one grid spacing. 
							 Image Row Position Offset
							 GridLengthType
						
					
					 
						 
							 Image column position offset for un-normalizing image coordinates. The units shall be one grid spacing. 
							 Image Column Position Offset
							 GridLengthType
						
					
					 
						 
							 Image row scale factors for un-normalizing image coordinates. The units shall be one grid spacing. 
							 Image Row Position Scale
							 GridLengthType
						
					
					 
						 
							 Image column scale factors for un-normalizing image coordinates. The units shall be one grid spacing. 
							 Image Column Position Scale
							 GridLengthType
						
					
				
			
			 
				 
					 Numerator and denominator polynomial parameters for this section of the universal image geometry model. 
					 Numerator and Denominator Polynomials
					 
						 
							 Maximum powers of the three ground coordinates in the numerator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
							 Row Numerator Maximum Powers
							 integerList
						
					
					 
						 
							 Polynomial coefficients in the numerator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
							 Row Numerator Polynomial Coefficients
							 ScaleListType
						
					
					 
						 
							 Maximum powers of the three ground coordinates in the denominator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
							 Row Denominator Maximum Powers
							 integerList
						
					
					 
						 
							 Polynomial coefficients in the denominator polynomial for computing the image row coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
							 Row Denominator Polynomial Coefficients
							 ScaleListType
						
					
					 
						 
							 Maximum powers of the three ground coordinates in the numerator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
							 Column Numerator Maximum Powers
							 integerList
						
					
					 
						 
							 Polynomial coefficients in the numerator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
							 Column Numerator Polynomial Coefficients
							 ScaleListType
						
					
					 
						 
							 Maximum powers of the three ground coordinates in the denominator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of three small integers, corresponding to the East, North, and Vertical ground coordinate axes. For each integer, the minimum value is 1. For the East and North axis integers, the maximum value is 5. For the Vertical axis integer, the maximum value is 3. 
							 Column Denominator Maximum Powers
							 integerList
						
					
					 
						 
							 Polynomial coefficients in the denominator polynomial for computing the image column coordinate. The parameter value shall contain an ordered list of from 8 to 144 Scale measures. 
							 Column Denominator Polynomial Coefficients
							 ScaleListType
						
					
				
			
		
	
	 
		 
			 Horizontal error estimates for when a position in this one image is used to determine the corresponding ground coordinates, using this universal image geometry model for this image. 
			 Monoscopic Error Estimates
			 
				 
					 The value of the ground elevation or height used to estimate the recorded horizontal error estimate when a position in this one image is used to determine the corresponding ground coordinates. This reference height is in the Vertical coordinate system axis of the ground CRS used by the universal image geometry model for this image. 
					 Monoscopic Error Estimate Reference Height
					 LengthType
				
			
			 
				 
					 The value of the horizontal absolute error estimate when a position in this one (monoscopic) image is used to determine the corresponding ground coordinates. This error estimate shall be recorded as the Circular Error (CE) with 90% confidence, always in one metre units. The minimum value is 0.0. 
					 Monoscopic Absolute Error Estimate
					 LengthType
				
			
			 
				 
					 Relative error estimate for one distance bin between two points. These error estimates are for use when multiple positions in one (monoscopic) image are used to determine the corresponding ground coordinates. 
					 Bin Relative Error Estimates
					 0
					 9
					 
						 
							 The minimum and maximum ground distances between two points for this distance bin recorded for horizontal relative error estimates. The parameter value shall contain an ordered list of two Length measures, always in one metre units. The first value specifies the bin minimum distance, and the second value specifies the bin maximum distance. The minimum values are 0.0. 
							 Monoscopic Relative Error Estimate Bin Distances
							 LengthListType
						
					
					 
						 
							 The value of the horizontal relative error estimate between two points for this distance bin recorded for horizontal relative error estimates. These error estimates are for use when multiple positions in one (monoscopic) image are used to determine the corresponding ground coordinates. The relative error estimate shall be recorded as the Circular Error (CE) with 90% confidence, always in one metre units. The minimum value is 0.0. 
							 Bin Monoscopic Relative Error Estimate
							 LengthType
						
					
				
			
		
	



