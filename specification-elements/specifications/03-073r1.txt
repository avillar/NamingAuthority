
 

File name: 03-073r1.doc 
 

Open GIS Consortium Inc. 
Date: 2003-10-16 

Reference number of this OpenGIS® project document: OGC 03-073r1 

Version: 2.0.0 

Category: OpenGIS® Abstract Specification 

Editor: Roel Nicolai, Shell International E and P Inc. 

The OpenGIS® Abstract Specification 

Topic 2: Spatial referencing by coordinates 

 

Copyright notice 

This OGC document is copyright-protected by OGC. While the reproduction of 
drafts in any form for use by participants in the OGC standards development 
process is permitted without prior permission from OGC, neither this document nor 
any extract from it may be reproduced, stored or transmitted in any form for any 
other purpose without prior written permission from OGC. 

 
Warning 

This document is not an OGC Standard. It is distributed for review and comment. It 
is subject to change without notice and may not be referred to as an OGC Standard. 

Recipients of this document are invited to submit, with their comments, notification 
of any relevant patent rights of which they are aware and to provide supporting 
documentation. 

Document type:  OpenGIS© Publicly Available Standard 
Document subtype: OpenGIS© Abstract Specification 
Document stage:  Accepted New Version 
Document language: English 



OGC 03-073r1 

ii © OGC 2003 – All rights reserved
 

Contents 

i. Preface............................................................................................................ iv 

ii. Revision history............................................................................................. iv 

iii. Future work.....................................................................................................v 

Foreword........................................................................................................................... vi 

Introduction..................................................................................................................... vii 

1 Scope.................................................................................................................1 

2 Conformance ...................................................................................................1 

3 Normative references......................................................................................1 

4 Terms and definitions .....................................................................................2 

5 Conventions ...................................................................................................11 
5.1 Symbols (and abbreviated terms)................................................................11 
5.2 UML Notation ...............................................................................................12 
5.3 Attribute status..............................................................................................13 

6 The geodetic context of spatial referencing by coordinates ......................14 
6.1  Coordinates....................................................................................................14 
6.2 Some geodetic concepts.................................................................................15 

7 The UML model for spatial referencing by coordinates – overview........17 

8 Reference System package ...........................................................................18 
8.1 General aspects (informative) ......................................................................18 
8.2 UML schema of RS Reference System package (normative)....................18 

9 Coordinate reference system package.........................................................21 
9.1 General (informative) ...................................................................................21 
9.2 Principal sub-types of coordinate reference system (informative)...........22 
9.3 Additional sub-types of coordinate reference system (informative) ........23 
9.3.1 Introduction...................................................................................................23 
9.3.2 Compound coordinate reference system.....................................................23 
9.3.3 Derived coordinate reference system ..........................................................25 
9.4 UML schema of Coordinate Reference System package (normative) .....25 

10 Coordinate System package .........................................................................30 
10.1 Coordinate System (informative) ................................................................30 
10.2 Coordinate system axis (informative) .........................................................32 
10.3 UML schema of CS Coordinate System package (normative) .................33 



OGC 03-073r1 

© OGC 2003 – All rights reserved iii
 

11 Datum package..............................................................................................39 
11.1 Types of datums (informative).....................................................................39 
11.2 Vertical datum (informative) .......................................................................40 
11.3 Image datum (informative) ..........................................................................41 
11.4 Prime meridian (informative) ......................................................................41 
11.5 Ellipsoid (informative)..................................................................................42 
11.6 UML schema of the CD Datum package (normative) ...............................42 

12 Coordinate operation package.....................................................................51 
12.1 General characteristics of coordinate operations (informative)...............51 
12.2 Coordinate conversions (informative).........................................................51 
12.3 Concatenated coordinate operation (informative).....................................52 
12.4 Pass-through coordinate operation (informative)......................................53 
12.5 operation method and parameters (informative).......................................53 
12.6 Parameter groups (informative) ..................................................................54 
12.7 Implementation considerations (informative) ............................................54 
12.8 UML schema of Coordinate Operations package (normative).................55 

13 Data Quality package ...................................................................................63 
13.1 Accuracy of coordinates and impact of transformations 

(informative) ..................................................................................................63 
13.2 UML schema of the DQ Data Quality package (normative).....................64 
Annex C (informative)  Differences from ISO 19111.....................................................68 
C.1 General re: UML Schema ............................................................................68 
C.2 Coordinate Reference System subtypes ......................................................68 
C.3 Coordinate System subtypes ........................................................................69 
C.4 Derived Coordinate Reference Systems......................................................69 
C.5 Coordinate operations ..................................................................................69 

Bibliography .....................................................................................................................71 
 



OGC 03-073r1 

iv © OGC 2003 – All rights reserved
 

i. Preface 

This document specifies modelling requirements for spatial referencing by coordinates. 
Coordinate Reference System definition data is metadata about spatial data whose 
positions are described by coordinates. Without the Coordinate Reference System data, 
interpretation of coordinates is ambiguous. The file 03-073a.zip attached to this 
document contains the described UML model in Rational Rose 4.5 format. 

This document supplements and corrects ISO 19111: Geographic Information – Spatial 
Referencing by Coordinates. It makes use of contents and formatting of the ISO 
document where possible, providing additional modelling detail and textual clarification 
only where it was felt to be required. The differences with ISO 19111 are summarized in 
an annex. 

This document replaces OGC document 02-102 – The OpenGISTM Abstract 
Specification, Topic 2: Spatial Referencing By Coordinates. (That same document was 
earlier numbered as document 01-063r2.) It describes the same subject matter in a tighter 
UML model. Some minor changes have been added to consolidate the experiences 
obtained while converting the model to XML Schema. 

ii. Revision history 

Date Release Author Paragraph modified Description 
7 Sept 2001 01-063 RN New document First draft for internal OGC feedback 
12 Nov 2001 01-063r1 

(v 1.0.1) 
RN Various editorial comments 

and a modification of the 
UML model 

Initial feedback from CT Working 
Group implemented 

8 Jan 2002 01-063r2 
v 1.0.2 
 

RN Various editorial comments 
and modifications of the 
UML model  

Final feedback implemented from the 
CT Working Group 

15 Oct 2003 v 2.0.0 RN/AW 
JH/DC 

Revision of UML model and 
accompanying text 

The degree of detail of the UML 
model has been increased to facilitate 
conversion to XML Schema. The 
previous model was supplemented by 
textual constraints. These constraints 
have now been expressed in the UML 
model. The changes to version 1.0.2 
were separately described in OGC 
document 03-009r6. This version 2.0.0 
is therefore a consolidation of that 
document and version 1.0.2 of this 
document. 

 



OGC 03-073r1 

© OGC 2003 – All rights reserved v
 

iii. Future work 

Improvements of this document appear needed to: 

a) Improve handling of inertial and moving coordinate reference systems. 

b) Improve discussion of time-varying coordinate operations. 

c) Resolve questions if adequately handle coordinate reference systems that use a 
LinearCS. 

d) Check consistency with ISO 19108 of SC_TemporalCRS, CD_TemporalDatum, and 
CS_TemporalCS. 

e) Consider defining <<CodeList>> class for axisDirection and some other 
CharacterString attributes. 

f) Provide many fragments of examples and complete examples, to aid in understanding 
this model, within this document and/or in separate related documents. 



OGC 03-073r1 

vi © OGC 2003 – All rights reserved
 

Foreword 

This document replaces OGC Document 02-102, titled “The OpenGIS® Abstract 
Specification – Topic 2: Spatial Referencing by Coordinates Systems”, which, in turn, 
replaced OGC Document 99-102r1 titled OpenGIS® Abstract Specification – Topic 2: 
Spatial Reference Systems. 

The reasons for replacement of OGC Document 99-102r1 were: 

a) The publication of ISO 19111, which covers largely the same ground as OGC 
Document 99-102r1 and the alignment with that document. 

b) Alignment with published Implementation Specification “OpenGIS® Coordinate 
Transformation Services Implementation Specification” and OpenGIS® 
Recommendation Paper: “Recommended Definition Data for Coordinate Reference 
Systems and Coordinate Transformations”. The abstract model that underlies both of 
these documents has progressed considerably from that described in OGC Document 
99-102r1 and is more in line with ISO 19111. 

The reasons for revision of the resulting OGC Document 02-102 are: 

a) To facilitate the development of an XML Schema implementation of the described 
Abstract Model. the associated UML model was required to be more specific. Where 
in Document 01-063r2 certain relationships were described in a generic manner in the 
UML model, with further constraints described in the text of the document, these 
constraints have now been included in the UML model. 

b) Experience in the development of an XML Schema implementation was captured in 
some minor improvements to the model, described in the current document, 

Although this document is to a very large extent based on ISO 19111, it deviates on a 
number of points and adds a considerable degree of detail, consistent with OGC’s need to 
provide specifications ready for implementation in the geospatial market place. A list of 
these variations is provided in Annex B. Rather than publishing a list of variations with 
ISO 19111 and forcing the reader to continually make cross-references, it was decided to 
provide the reader with a coherent document that reproduces parts of ISO 19111 
verbatim, interlaced with the additions and variations mentioned. It is felt that this 
enhances readability and will facilitate understanding this specialist subject matter. 

Attention is drawn to the possibility that some of the elements of this document may be 
the subject of patent rights. The Open GIS Consortium Inc. shall not be held responsible 
for identifying any or all such patent rights. 

 



OGC 03-073r1 

© OGC 2003 – All rights reserved vii
 

Introduction 

Positions on and near the Earth’s surface can be described by systems of spatial 
referencing. These are of two basic types: 

a) those using coordinates; 

b) those based on geographic identifiers (for example postal addresses, administrative 
areas). 

Spatial referencing by geographic identifiers is defined in ISO 19112, Geographic 
information - Spatial referencing by geographic identifiers. The subject matter of this 
document is confined to spatial referencing by coordinates. 

Coordinates are unambiguous only when the coordinate reference system to which those 
coordinates are related has been fully defined. A coordinate reference system is a 
coordinate system that has a reference to the Earth. 

This document describes the elements that are necessary to fully define various types of 
coordinate systems and coordinate reference systems applicable to geographic 
information and their relationships. The subset of elements required is partially dependent 
upon the type of coordinates. This document also includes optional fields to allow for the 
inclusion of non-essential coordinate reference system information. The elements are 
intended to allow implementations to be designed that permit both machine and human 
interpretation of the data. A set of coordinates on the same coordinate reference system 
requires one coordinate reference system definition. 

In addition to describing a coordinate reference system, this document provides for the 
description of a coordinate transformation or coordinate conversion between coordinates 
given in two different coordinate reference systems. With such information, geographic 
data using different coordinate reference systems can be merged together for integrated 
manipulation. Also, an audit trail of coordinate reference system manipulations can be 
maintained. 





OpenGIS© Specification OGC 03-073r1

 

© OGC 2003 – All rights reserved 1
 

OGC Abstract Specification – Topic 2: Spatial Referencing by 
Coordinates 

1 Scope 

This part of the OGC Abstract Specification defines the conceptual schema for the 
description of spatial referencing by coordinates, optionally extended by temporal 
referencing. It describes the minimum data required to define 1-, 2- and 3-dimensional 
coordinate reference systems with an extension to merged spatial-temporal coordinate 
reference systems. It allows additional descriptive information to be provided. It also 
describes the information required to change coordinate values from one coordinate 
reference system to another. It is applicable to producers and users of geographic 
information. Although it is applicable to digital geographic data, its principles can be 
extended to many other forms of geographic data such as maps, charts, and text 
documents. 

2 Conformance 

This document does not currently specify requirements for conformance to this 
specification, of OGC Implementation Specifications and other OGC documents. Such 
conformance requirements will be added to future versions of this document, as 
considered needed. Requirements for conformance to OGC Implementation 
Specifications or other documents based on the OGC Abstract Specification are specified 
in those documents. 

3 Normative references 

The following normative documents contain provisions that, through reference in this 
text, constitute provisions of this document. For dated references, subsequent 
amendments to, or revisions of, any of these publications do not apply. However, parties 
to agreements based on this document are encouraged to investigate the possibility of 
applying the most recent editions of the normative documents indicated below. For 
undated references, the latest edition of the normative document referred to applies. 

ISO 19103, Geographic Information – Conceptual Schema Language 

ISO 19108, Geographic Information – Temporal Schema 

ISO 19111, Geographic Information – Spatial Referencing by Coordinates 

ISO 19114, Geographic information – Quality Evaluation Procedures 



OGC 03-073r1 

2 © OGC 2003 – All rights reserved
 

ISO 19115, Geographic Information – Metadata 

Normative reference to ISO 19111 is restricted. This document describes proposed 
corrections to ISO 19111; in doing so it cannot completely follow ISO 19111. 

Normative reference to ISO 19115 is restricted as follows. ISO 19115 contains 
descriptions of elements of coordinate reference systems and coordinate operations, 
which are described in these Abstract Specifications as well as in ISO 19111. These 
elements are specified as optional in ISO 19115, and are excluded as normative 
references for these Abstract Specifications. 

4 Terms and definitions 

For the purposes of this document, the following terms and definitions apply. Some 
definitions deviate from ISO/DIS 19111, where more universally valid definitions are 
provided. 

4.1  
Cartesian coordinate system 
coordinate system which gives the position of points relative to N mutually-perpendicular 
straight axes 

NOTE In the context of geospatial coordinates the maximum value of N is three. 

4.2  
compound coordinate reference system 
coordinate system describing the position of points through two or more independent 
coordinate reference systems 

EXAMPLE  One coordinate reference system can be a two-dimensional horizontal coordinate system, and the 
other coordinate reference system can be a vertical gravity-related height system. 

4.3  
concatenated transformation  
sequential application of multiple transformations 

4.4  
coordinate 
one of a sequence of N numbers designating the position of a point in N-dimensional 
space 

NOTE In a coordinate reference system, the coordinate numbers must be qualified by units. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 3
 

4.5  
coordinate conversion 
change of coordinates, based on a one-to-one relationship, from one coordinate reference 
system to another based on the same datum 

EXAMPLE Between geodetic and Cartesian coordinate systems or between geodetic coordinates and projected 
coordinates, or change of units such as from radians to degrees or feet to metres. 

NOTE A conversion uses parameters which have specified values, not empirically determined values. 

4.6  
coordinate reference system 
coordinate system which is related to the real world by a datum 

NOTE For geodetic and vertical datums, it will be related to the Earth. 

4.7  
coordinate system 
set of (mathematical) rules for specifying how coordinates are to be assigned to points 

NOTE 1 One coordinate system may be used in many coordinate reference systems. 

NOTE 2 The geometric properties of a coordinate space determine how distances and angles between 
points are calculated from the coordinates. For example, in an ellipsoidal (2D) space distances are defined 
as curves on the surface of the ellipsoid, whereas in a Euclidean plane as used for projected CRS distance is 
the length of a straight line between two points. The mathematical rules that determine distances and angles 
are calculated from coordinates and vice versa are comprised in the concept of coordinate system. 

4.8  
coordinate transformation 
computational process of converting a position given in one coordinate reference system 
into the corresponding position in another coordinate reference system 

NOTE 1 A coordinate transformation can require and use the parameters of the ellipsoids associated 
with the source and target coordinate reference systems, in addition to the parameters explicitly associated 
with the transformation. 

 
NOTE 2 The term ‘transformation’ is used only when the parameter values associated with the 
transformation have been determined empirically from a measurement / calculation process. This is 
typically the case when a change of datum is involved. 

4.9  
covariance matrix 
matrix of elements (or cells) that contain the expected average values of the product of 
the error in the matrix row coordinate times the simultaneous error in the matrix column 
coordinate 

NOTE 1 A covariance matrix is a form of detailed error estimate data. Covariance matrices are 
sometimes called variance-covariance matrices. 

NOTE 2 All complete covariance matrices are symmetrical, meaning that the same element values 
appear on both sides of the diagonal elements. 



OGC 03-073r1 

4 © OGC 2003 – All rights reserved
 

NOTE 3 Covariance matrices contain information about the absolute and/or relative accuracy of the data 
elements (e.g. coordinates). The absolute accuracy information is contained in the diagonal matrix 
elements. Relative accuracy is a function of multiple diagonal and off-diagonal elements. A complete 
covariance matrix for N specific points in 3D space would contain 3N rows by 3N columns 

EXAMPLE For three coordinates, a covariance matrix is a 3 by 3 matrix, with the matrix rows and columns each 
corresponding to the three coordinates. For just two horizontal coordinates, a covariance matrix is a 2 by 2 matrix, with 
the matrix rows and columns each corresponding to the two horizontal coordinates. Similarly, for two image 
coordinates, a covariance matrix is a 2 by 2 matrix, with the matrix rows and columns each corresponding to the two 
image coordinates. 

4.10  
cylindrical coordinates 
3-dimensional coordinates with two distance and one angular coordinate 

4.11  
datum 
parameter or set of parameters that determine the location of the origin, the orientation 
and the scale of a coordinate reference system 

4.12  
depth 
distance of a point below a chosen reference surface usually measured along the local 
vertical (gravity vector). 

NOTE 1 Depth is sometimes measured along a line that does not follow the vector of gravity locally. An 
example is depth in an oil or gas well. These are generally measured along the wellbore path, which may 
vary significantly from the local vertical. Some sections of a wellbore path may even run horizontally or 
slope upwards. Nevertheless the distance along the wellbore path is referred to as ‘depth’. 

NOTE 2 See elevation, ellipsoidal height, and gravity-related height. 

4.13  
dimension 
number of ordinates needed to describe a position in a coordinate system 

4.14  
elevation 
distance of a point from a chosen reference surface along the direction of the gravity 
vector from the point to that surface. 

NOTE 1 See ellipsoidal height and gravity-related height. It should be noted that ellipsoidal height is 
defined w.r.t. an ellipsoidal model of the shape of the earth. Ellipsoidal height is measured from the point 
along the line perpendicular to the ellipsoid’s surface. 

NOTE 2 Height of a point outside the surface treated as positive; negative height is also named as depth. 

4.15  
ellipsoid 
surface formed by the rotation of an ellipse about an axis 

NOTE 1 In this document the axis of rotation is always the minor axis. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 5
 

NOTE 2 Sometimes the alternative word ‘spheroid’ is used in geodetic or survey practice to express the 
same concept. Although mathematically speaking incorrect the more common term in geodetic or survey 
practice is ‘ellipsoid’. 

NOTE 3 An alternative term used in geodetic practice is ‘reference ellipsoid’ 

4.16  
ellipsoidal coordinate system 
geodetic coordinate system 
coordinate system in which position is specified by geodetic latitude, geodetic longitude 
and (in the three-dimensional case) ellipsoidal height, associated with one or more 
geographic coordinate reference systems. 

4.17  
ellipsoidal height 
geodetic height 
distance of a point from the ellipsoid measured along the perpendicular from the ellipsoid 
to this point, positive if upwards or outside of the ellipsoid 

NOTE Only used as part of a three-dimensional geodetic coordinate system and never on its own. 

4.18  
engineering coordinate reference system 
a coordinate reference system that is defined for and usually used in a contextually local 
sense, which may be an area, significantly less than the complete surface of the earth or a 
moving platform and its vicinity 

EXAMPLE Local engineering and architectural coordinates, grids, and drawings; also: vessel navigation systems 
and CRSs associated with orbiting spacecraft 

NOTE 1 A transformation of engineering coordinates to geodetic coordinates may or may not be 
possible depending on whether such operation parameters have been determined (or defined). 

NOTE 2 An Engineering CRS may be defined to describe geometry that is local to the context of a 
moving platform, such as a car, a ship, an aircraft or a spacecraft. Transformation of such engineering 
coordinates to geodetic coordinates involves time dependent operation parameters and, when repeated at 
(regular) time-intervals, will result in a record of the ‘track’ of the moving platform. Additionally such a 
transformation may be used for real-time navigation of the platform. The term ‘vicinity of the moving 
platform’ may constitute an area varying from the immediate surroundings of the platform to the entire 
earth, the latter being the case in a number of space applications. 

4.19  
flattening 
ratio of the difference between the semi-major (a) and semi-minor axis (b) of an ellipsoid 
to the semi-major axis; f = (a-b)/a 

NOTE Sometimes inverse flattening 1/f = a/(a-b) is given instead of flattening; 1/f is also known as 
reciprocal flattening. 

4.20  
geocentric coordinate reference system 
3-dimensional coordinate reference system with its origin at the (approximate) centre of 
the Earth. 



OGC 03-073r1 

6 © OGC 2003 – All rights reserved
 

4.21  
geodetic coordinates 
coordinates defined in a geocentric, geographic (2D or 3D) or projected coordinate 
reference system. 

4.22  
geodetic datum 
datum describing the relationship of a 3D or 2D coordinate system to the Earth 

NOTE In most cases, the geodetic datum includes an ellipsoid definition. 

4.23  
geographic coordinate reference system 
coordinate reference system using an ellipsoidal coordinate system and based on an 
ellipsoid that approximates the shape of the Earth 

NOTE 1 A geographic coordinate system can be 2D or 3D. In a 3D geographic coordinate system, the 
third dimension is height above the ellipsoid surface 

4.24  
geographic dataset 
dataset with a spatial content 

4.25  
geoid 
level surface which best fits mean sea level either locally or globally 

NOTE “Level surface” means an equipotential surface of the Earth’s gravity field that is everywhere 
perpendicular to the direction of gravity. 

4.26  
gravity-related height 
height dependent on the Earth’s gravity field 

NOTE In particular, orthometric height or normal height, which are both approximations of the 
distance of a point above the geoid. 

4.27  
Gregorian calendar 
calendar in general use first introduced in 1582 to correct an error in the Julian calendar 

NOTE  In the Gregorian calendar, common years have 365 days and leap years 366 days divided into 
12 sequential months . 

4.28  
Greenwich meridian 
prime meridian passing through Greenwich, United Kingdom 

NOTE Most geodetic datums use the Greenwich meridian as the prime meridian. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 7
 

4.29  
ground coordinates 
earth referenced coordinates 
terrestrial coordinates 
coordinates of points expressed in a non-image, earth-fixed coordinate reference system 

NOTE  The term ground coordinates is used herein to distinguish such coordinates from image 
coordinates. Even when an image is collected by a near vertical camera, image coordinates are different 
from ground coordinates. 

4.30  
image 
record of the likeness of any features, objects, and activities 

NOTE  An image can be acquired through the sensing of visual or any other segment of the 
electromagnetic spectrum by sensors, such as thermal infrared, and high resolution radar. 

4.31  
image coordinates 
definition of position within an image, expressed in image row and column coordinates 

4.32  
image geometry model 
mathematical model that specifies the mapping (or projection) from 3D ground position 
coordinates to the corresponding 2D image position coordinates 

NOTE 1 An image geometry model is alternately called an image sensor model, sensor model, imaging 
model, or image mathematical model. The term “sensor” is often used when the image is generated by a 
digital camera and is thus originally digital. The word “camera” is usually used when the image is recorded 
in analogue form, normally on film. Of course, film images can be later scanned or digitised and are then 
“digital”. 
  
NOTE 2 An image geometry model can also be used to determine the correct ground position for an 
image position, if used with additional data. When a single (or monoscopic) image is used, this additional 
data normally defines the shape and position of the visible ground (or object) surface. For example, this 
additional data is often a single elevation or is grid elevation data, sometimes called a Digital Terrain 
Model (DTM). Alternately, two stereoscopic images or multiple overlapping images can be used, that show 
the same ground point viewed from different directions. In this case, the two (or more) image geometry 
mathematical models can also be used, with the point coordinates in each individual image, to determine 
the corresponding 3D ground position. 

4.33  
image version 
new image produced by sub-setting and/or re-sampling the pixels in an original image 

4.34  
interface 
named set of operations that characterise the behaviour of an element 

NOTE  An interface standard specifies the services in terms of the functional characteristics and 
behaviour observed at the interface. The standard is a contract in the sense that it documents a mutual 
obligation between the service user and provider and assures stable definition of that obligation. 



OGC 03-073r1 

8 © OGC 2003 – All rights reserved
 

4.35  
latitude 
geodetic latitude 
ellipsoidal latitude 
angle from the equatorial plane to the perpendicular to the ellipsoid through a given 
point, northwards treated as positive 

4.36  
local datum 
engineering datum 
datum with a local reference, used as a basis for an engineering coordinate reference 
system 

NOTE Engineering datum excludes both geodetic and vertical datums. 

4.37  
longitude  
geodetic longitude 
ellipsoidal longitude 
angle from the prime meridian plane to the meridian plane of the given point, eastward 
treated as positive 

4.38  
map projection 
conversion from a geodetic coordinate system to a planar surface 

4.39  
mean sea level 
average level of the surface of the sea over all stages of tide 

NOTE Mean sea level in a local context normally means mean sea level for the region as measured by 
tide gauge measurements at one or more points over a given period of time. Mean sea level in a global 
context differs from a global geoid by not more than 2 metres. 

4.40  
meridian 
intersection of an ellipsoid by a plane containing the minor axis of the ellipsoid 

NOTE This term is often used for the pole-to-pole arc rather than the complete closed figure. 

4.41  
oblique Cartesian coordinate system 
coordinate system with straight axes that are not necessarily mutually perpendicular 

4.42  
pixel 
two-dimensional picture element that is the smallest non-divisible element of a digital 
image. In image processing, the smallest element of a digital image that can be assigned a 
grey level. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 9
 

NOTE  This term originated as a contraction for “picture element”. 

4.43  
polar coordinates 
2-dimensional coordinates in which position is specified by distance to the origin and the 
direction angle 

NOTE  ISO/DIS 19111 does not specify the number of dimensions and therefore implicitly permits a 
3-dimensional polar coordinate system to exist. The equivalent of the latter is termed "spherical coordinate 
system" in this document. 

4.44  
position 
spatial reference of a point or an object 

4.45  
prime meridian 
zero meridian 
meridian from which the longitudes of other meridians are quantified 

4.46  
projected coordinate reference system 
two-dimensional coordinate system resulting from a map projection. 

NOTE  A projected coordinate reference system is derived from a 2D geographic coordinate reference 
system by applying a parameterised coordinate transformation known as a ‘map projection’. 

NOTE  A projected coordinate reference system commonly uses a Cartesian coordinate system. 

4.47  
reference ellipsoid 
ellipsoid used as the best local or global approximation of the surface of the geoid. 

4.48  
semi-major axis 
semi-diameter of the longest axis of a reference ellipsoid. 

NOTE This equates to the semi-diameter of the reference ellipsoid measured in its equatorial plane 

4.49  
semi-minor axis 
semi-diameter of the shortest axis of a reference ellipsoid 

NOTE The shortest axis coincides with the rotation axis of the reference ellipsoid and therefore 
contains both poles. 

4.50  
spherical coordinate system 
3-dimensional coordinate system with one distance, measured from the origin and two 
angular coordinates, commonly associated with a geocentric coordinate reference system 



OGC 03-073r1 

10 © OGC 2003 – All rights reserved
 

NOTE  Not to be confused with an ellipsoidal coordinate system based on an ellipsoid ‘degenerated’ into a sphere. 

4.51  
temporal coordinate 
distance from the origin of the interval time scale used as the basis for a temporal 
reference system 

4.52  
temporal coordinate reference system 
reference system against which time is measured 

4.53  
transformation 
change of coordinates from one coordinate reference system to another coordinate 
reference system based on a different datum through a one-to-one relationship 

NOTE A transformation uses parameter values which may have to be derived empirically by a set of 
points common to both coordinate reference systems. See coordinate conversion and coordinate 
transformation. 

4.54  
unit 
unit of measure 
defined quantity in which dimensioned parameters are expressed 

NOTE  In this document, the subtypes of units are length units, angular units, time units, scale units 
and pixel spacing units . 

4.55  
UTC 
coordinated Universal Time 
time scale maintained by the Bureau International des Poids et Mesures (International 
Bureau of Weights and Measures) and the International Earth Rotation Service (IERS) 
that forms the basis of a coordinated dissemination of standard frequencies and time 
signals 

4.56  
vertical coordinate system 
1-dimensional coordinate reference system used for elevation, height, or depth 
measurements 

4.57  
vertical datum 
datum describing the relation of gravity-related heights to the Earth 

NOTE In most cases the vertical datum will be related to sea level. Ellipsoidal heights are treated as 
related to a three-dimensional ellipsoidal coordinate system referenced to a geodetic datum. Vertical 
datums include sounding datums (used for hydrographic purposes), in which case the heights may be 
negative heights or depths. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 11
 

5 Conventions 

5.1 Symbols (and abbreviated terms) 

a semi-major axis 

b semi-minor axis 

C conditional 

CC Change Coordinates (package abbreviation in UML model) 

CD Coordinate datum (package abbreviation in UML model) 

CCRS Compound coordinate reference system 

CI Citation 

CRS Coordinate reference system 

CS Coordinate system (also package abbreviation in UML model) 

DQ Data quality (package abbreviation in UML model) 

E Easting 

f flattening 

h ellipsoidal height 

H gravity-related height 

ISO International Organization for Standardization 

M mandatory 

N Northing 

O optional 

OGC Open GIS Consortium 

RS Reference System (package abbreviation in UML model) 

SC Spatial referencing by Coordinates (package abbreviation in UML model) 

SI Le Système International d’Unités 

UML Unified Modeling Language 



OGC 03-073r1 

12 © OGC 2003 – All rights reserved
 

XML eXtensible Markup Language 

1D One Dimensional 

2D Two Dimensional 

3D Three Dimensional 

λ geodetic longitude 

ϕ geodetic latitude 

X, Y, Z Cartesian coordinates in a geocentric coordinate reference system 

i, j, k Cartesian coordinates in an engineering coordinate reference system, 
(integer or real) 

5.2 UML Notation 

Most diagrams that appear in this standard are presented using the Unified Modeling 
Language (UML) static structure diagram. The UML notations used in this standard are 
described in Figure 1 below. 

Association between classes

role-1 role-2

Association Name
Class #1 Class #2

Association Cardinality

Class Only one

Class Zero or more

Class Optional (zero or one )

1..* Class One or more

n Class Specific number

Aggregation between classes

Aggregate
Class

Component
Class #1

Component
Class #2

Component
Class #n

……….

0..*

0..1

Class Inheritance (subtyping of classes)
Superclass

Subclass #1

…………..

Subclass #2 Subclass #n

 
Figure 1 — UML notation 

In this standard, the following stereotypes of UML classes are used: 



OGC 03-073r1 

© OGC 2003 – All rights reserved 13
 

a) <<DataType>> A descriptor of a set of values that lack identity (independent 
existence and the possibility of side effects). A DataType is a class with no operations 
whose primary purpose is to hold the information. 

b) <<CodeList>> A flexible enumeration that uses string values for expressing a list of 
potential values. 

c) <<Union>> Contains a list of attributes where only one of those attributes can be 
present at any time. 

d) <<Abstract>> A polymorphic object class that cannot be instantiated. 

In this standard, the following standard data types are used: 

a) CharacterString – A sequence of characters 

b) Integer – An integer number 

c) Double – A double precision floating point number 

d) Boolean – A value specifying TRUE or FALSE 

e) DateTime – A character string as specified by ISO 19108, which comprises year, 
month, day and time of the day to the appropriate level of precision. 

In addition, a Sequence type of collection is used, which contains an ordered list of 
values with the specified data type. The format used is “Sequence<DataType>”. 

5.3 Attribute status 

In the clauses below, attributes are given a requirement status: 

Requirement Definition Meaning 
M mandatory This attribute shall be supplied. 
C conditional This attribute shall be supplied if the condition (given in the attribute 

description) is true. It may be supplied if the condition is false. 
O optional This attribute may be supplied. 

 
The Occurrence column indicates the maximum number of occurrences of attribute 
values that are permissible, with N indicating no upper limit. The conceptual schema for 
describing coordinate reference systems is modelled with the Unified Modelling 
Language (UML) in annex B. In case of inconsistency between the metadata textual 
description and the UML model, the textual description shall prevail. The basic data 
types are defined in ISO 19103. 



OGC 03-073r1 

14 © OGC 2003 – All rights reserved
 

6 The geodetic context of spatial referencing by coordinates 

6.1  Coordinates 

The position(s) of a feature can be described by (a set of) coordinates. Coordinates are 
unambiguous only when the associated coordinate reference system has been fully 
defined. 

The geometry of spatial features might also be expressed in terms of invariant geometric 
quantities, viz. shapes and relative positions/orientations (strictly speaking only distance 
ratios and angles are invariant quantities). However, this would be unworkable: 
performing calculations on spatial data would become a major effort. The expression of 
the position of a point by coordinates introduces simplicity in terms of overview and 
calculus. However, there is a price to be paid for this convenience. To describe a simple 
shape such as a triangle in a plane six (plane) coordinates are required, whereas only a 
single distance ratio and an angle would suffice. 

The inherent degrees of freedom (four in 2D, seven in 3D) have to be satisfied by 
choosing the origin of the coordinate axes, their unit of measure and the orientations of 
the axes. This choice underlines the fact that coordinates are human-defined quantities 
and not natural phenomena. Although this may seem self-evident, it is often overlooked 
and has consequences for the interpretation of coordinates and their error characteristics. 

The choice of values for the parameters that constitute the degrees of freedom of the 
coordinate space is captured in the concept of a coordinate reference system. Without the 
full specification of the coordinate reference system, coordinates are ambiguous at best 
and meaningless at worst. The fact that such a choice must be made, either arbitrarily or 
by adopting values from survey measurements, leads for example to the large number of 
coordinate reference systems in use around the world. It is also the cause of the little 
understood fact that the latitude and longitude of a point are not unique. 

In the context of this specification, the term “coordinates” indicates the tuple of ordered 
scalar values that defines the position of a single point in a coordinate reference system. 
The order of the elements of the tuple and their unit(s) of measure are parts of the 
coordinate reference system definition. The tuple is composed of one, two or three 
“ordinates”. The ordinates must be mutually independent and their number must be equal 
to the dimension of the coordinate space; for example a tuple of coordinates may not 
contain two heights. 

In this specification, the term “set of coordinates” is used to indicate the coordinates of 
multiple points. However, it must be pointed out that usage in practice of the term 
“coordinates” is subject to ambiguity. Sometimes the term “coordinate” is used to 
indicate the tuple; the plural “coordinates” in that case describes the coordinates of 
multiple points. Others use the term “set of coordinates” to describe the coordinates of a 
single point. In that case the term “coordinate” is sometimes used instead of “ordinate”. 
The reader is advised to carefully infer the intended meaning from the context. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 15
 

The concept of coordinates may be expanded from a strictly spatial context to include 
time. Time is then added as another ordinate to the coordinate tuple. It is even possible to 
add two time-coordinates, provided the two coordinates describe different independent 
quantities. An example of the latter is the time/space position of a subsurface point of 
which the vertical ordinate is expressed as the two-way travel time of a sound signal in 
milliseconds, as is common in seismic imaging. A second time-ordinate indicates the 
time of observation, usually expressed in whole years. 

In summary: each tuple of coordinates describing the position of a point shall be related 
to a coordinate reference system. 

Instead of supplying the definition of the coordinate reference system with every single 
point, coordinates may be supplied in datasets in which all coordinates belong to the 
same coordinate reference system. Each dataset shall then include one coordinate 
reference system description or reference, that applies to all coordinates in that dataset. 

6.2 Some geodetic concepts 

Geodesy is the applied science that aims to determine the size and shape of the earth. In a 
more practical and local sense, this may be understood to mean the determination of the 
relative positions of points on or near the earth’s surface. Survey measurements and 
techniques are the means to achieve this aim. 

The most accurate reference shape approximating the earth is the geoid, the surface that 
is defined as the locus of all points with equal gravity at mean sea level. This shape 
excludes topography and the effects of tides, currents and weather on the oceans and seas. 
Topographic heights are typically expressed relative to the geoid. The gravity vector at 
mean sea level is everywhere perpendicular to this surface. Due to the irregular mass 
distribution in the earth’s interior the geoid has an irregular shape. This makes it 
unfortunately unsuitable to use in calculations on spatial data. Unfortunate because the 
familiar concept of height derives from the geoid and the geoid therefore implicitly plays 
an important role in all engineering and mapmaking activities. The direction of gravity 
also plays an important role in the mentioned survey techniques. 

The geoid is approximated by the nearest regular body, an oblate spheroid, of which the 
oblateness corresponds to the flattening of the physical earth (and thus the geoid) at the 
poles due to the earth's rotation. In survey practice, this spheroid is often referred to as an 
ellipsoid. Although mathematically the term “spheroid” is a more precise description than 
“ellipsoid”, the latter term will be used in this specification in preference to “spheroid”, in 
accordance with ISO 19111. The ellipsoid is a reasonably accurate approximation of the 
geoid, the latter undulating around the ellipsoid’s surface with variations only in the order 
of several tens of metres. 

The advantage of the ellipsoid is that it is much easier to work with mathematically than 
the geoid. It forms the basis of the best-known type of coordinate reference systems: the 
Geographic CRS. The position of a point relative to the ellipsoid is then expressed by 
means of geographic coordinates: geodetic latitude (ϕ) and geodetic longitude (λ). The 



OGC 03-073r1 

16 © OGC 2003 – All rights reserved
 

height (h) above the ellipsoid is of not much practical use because everyday heights are 
related to the geoid (gravity-related heights, indicated by H). Ellipsoidal height is an 
inseparable element of a 3D coordinate tuple, and originates either directly from a 3D 
survey technique (e.g. GPS) or from the transformation of horizontal coordinates 
extended with a gravity-related height. See Subclause 10.2 below for this concept. 

Unfortunately there is not just one ellipsoid. An ellipsoid is a matter of choice, and 
therefore many choices are possible. The size and shape of the ellipsoid are traditionally 
chosen such that the surface of the geoid is matched as closely as possible locally, e.g. in 
a country, although a number global of best-fits are available. Each association of an 
ellipsoid with earth surface geometry results in the implicit choice of parameters to 
satisfy the degrees of freedom problem described in Subclause 6.1 above. In this case, the 
choice results in the definition of the origin, orientation, size, and shape of the ellipsoid. 
Collectively this choice is captured by the concept of “geodetic datum”. 

A Geographic CRS is not suitable for mapmaking on a planar surface, because it 
describes geometry on a curved surface. It is impossible to represent such geometry in a 
Euclidean plane without introducing distortions. The need to control these distortions has 
given rise to the development of the science of map projections. Although some map 
projections can be represented as a geometric process, in general a map projection is a set 
of formulae that converts geodetic latitude and longitude to plane (map) coordinates. 
Height plays no role in this process, which is entirely two-dimensional. 

Heights are traditionally determined separate from horizontal position in separate height 
networks, which is due to the different survey techniques used for the determination of 
horizontal and vertical geometry. Most practical heights are defined in close relationship 
with the gravity vector. Geodetic science distinguishes several different types of gravity-
related heights. The differences between those are considered irrelevant for the purposes 
of this specification. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 17
 

7 The UML model for spatial referencing by coordinates – overview 

The Abstract Specification for spatial referencing by coordinates is defined in this 
document in the form of a UML model with supplementary text. The UML model 
contains six primary UML packages, as shown in Figure 2 below, which also shows the 
dependencies among these packages. Each box represents a package, and contains the 
package name and a listing of all classes in that package. Each dashed arrow shows the 
dependency of one package on another package (at the head of the arrow). 

RS_ReferenceSystem
+ RS_ReferenceSystem

+ RS_SpatialReferenceSystemUsingGeographicIdentifier
+ RS_Identifier

CD_Datum
+ CD_Datum

+ CD_PrimeMeridian
+ CD_Ellipsoid

+ CD_GeodeticDatum
+ CD_VerticalDatum

+ CD_EngineeringDatum
+ CD_ImageDatum

+ CD_TemporalDatum
+ CD_SecondDefiningParameter

+ CD_VerticalDatumType
+ CD_PixelInCell

DQ_DataQuality
+ DQ_PositionalAccuracy

+ DQ_AbsoluteExternalPositionalAccuracy
+ DQ_RelativeInternalPositionalAccuracy

+ DQ_CovarianceMatrix
+ DQ_CovarianceElement

CS_CoordinateSystem
+ CS_CoordinateSystem

+ CS_CoordinateSystemAxis
+ CS_CartesianCS
+ CS_EllipsoidalCS

+ CS_VerticalCS
+ CS_TemporalCS

+ CS_LinearCS
+ CS_UserDefinedCS

+ CS_ObliqueCartesianCS
+ CS_SphericalCS

+ CS_PolarCS
+ CS_CylindricalCS

SC_CoordinateReferenceSystem
+ SC_CRS

+ SC_CompoundCRS
+ SC_CoordinateReferenceSystem

+ SC_GeographicCRS
+ SC_GeocentricCRS

+ SC_VerticalCRS
+ SC_EngineeringCRS

+ SC_ImageCRS
+ SC_TemporalCRS

+ SC_GeneralDerivedCRS
+ SC_ProjectedCRS
+ SC_DerivedCRS

+ SC_DerivedCRSType

CC_CoordinateOperation
+ CC_CoordinateOperation

+ CC_ConcatenatedOperation
+ CC_SingleOperation

+ CC_PassThroughOperation
+ CC_Operation
+ CC_Conversion

+ CC_Transformation
+ CC_GeneralParameterValue
+ CC_ParameterValueGroup

+ CC_ParameterValue
+ CC_OperationMethod

+ CC_GeneralOperationParameter
+ CC_OperationParameterGroup

+ CC_OperationParameter

 
Figure 2 — UML model packages and dependencies 



OGC 03-073r1 

18 © OGC 2003 – All rights reserved
 

The six UML packages are more completely specified in the following clauses. 

8 Reference System package 

8.1 General aspects (informative) 

A reference system contains the metadata required to interpret spatial location 
information unambiguously. Two methods to describe spatial location are distinguished: 

a) Spatial referencing by geographic identifier. Geographic identifiers are location 
descriptors such as addresses and grid indexes. Such systems fall outside the scope of 
this document and the associated model. The requirements for spatial referencing by 
geographic identifier are described in ISO 19112. 

b) Spatial referencing by coordinates. The scope of this document and the associated 
UML model is confined to the description of spatial location by coordinates. 

The RS_Identifier class originates from ISO 19115, and is defined there as a 
specialisation of the MD_Identifier class. It has been modified in this document to 
improve definition of objects by identifier. The description of an object’s attributes can 
be done explicitly, by providing all defining parameters, or by identifier, a reference to a 
recognised source that contains a full description of the object. Furthermore the 
RS_Identifier can be used to specify alternative names or aliases of the object defined. 

The CI_Citation class and the EX_Extent class are defined by ISO 19115. CI_Citation 
can be used optionally within RS_Identifier to provide information, e.g. by means of a 
URI, where the referenced information, as specified by the accompanying RS_Identifier. 

NOTE: Implementers are warned that there may be issues associated with the specification of elements 
by identifier, referring to a publicly available dataset. The version or edition of a dataset may not be 
sufficient to uniquely define the referenced element. In any publicly available dataset, errors in the data 
may be corrected in accordance with rules specific to that dataset and defined by the responsible authority. 
The rules for dealing with erroneous data needs to be known to implementers in order to be able to find the 
data that is required by their application; merely the most up-to-date information or the erroneous 
information from the past, because that was used to transform spatial data that is still in use. 

8.2 UML schema of RS Reference System package (normative) 

Figure 3 below shows the UML class diagram of the RS Reference System package. The 
definition of the object classes of package RS Reference System are provided in Tables 1, 
2 and 3. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 19
 

RS_ReferenceSystem
+ srsName : CharacterString
+ srsID [0..*] : RS_Identifier
+ validArea [0..1] : EX_Extent
+ scope [0..1] : CharacterString
+ remarks [0..1] : CharcterString

<<Abstract>>
RS_Identifier

+ code : CharacterString
+ codeSpace [0..1] : CharacterString
+ version [0..1] : CharacterString
+ authority [0..1] : CI_Citation
+ remarks [0..1] : CharacterString

<<DataType>>

RS_SpatialReferenceSystemUsingGeographicIdentifier
SC_CRS

(from SC_CoordinateReferenceSystem)

<<Abstract>>

CI_Citation
(from CI_Citation)

<<DataType>>

EX_Extent
(from EX_Extent)

<<DataType>>

 
Figure 3 — RS Reference System package 

Table 1 — Defining elements of RS_ReferenceSystem class 
Description: Description of a spatial and temporal reference system used by a dataset 
Stereotype: Abstract  
Derived from (none) 
Association roles: (none) 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Reference system 
name 

srsName CharacterString M 1 The name by which this reference 
system is uniquely identified. 

Coordinate reference 
system identifier 

srsID RS_Identifier O N Set of alternative identifications of 
this reference system. The first srsID, 
if any, is normally the primary 
identification code, and any others are 
aliases. 

Coordinate reference 
system valid area 

validArea EX_Extent O 1 Area for which the (coordinate) 
reference system is valid. 

Coordinate reference 
system scope 

scope CharacterString O 1 Description of domain of usage, or 
limitations of usage, for which this 
CRS object is valid. 

Coordinate reference 
system remarks 

remarks CharacterString O 1 Comments on or information about 
this (coordinate) reference system, 
including data source information. 

 
Table 2 — Defining elements of 

RS_SpatialReferenceSystemUsingGeographicIdentifier class 
Description: Spatial reference system using geographic identifier, a reference to a feature with a known spatial 

location. Spatial reference systems using geographic identifiers are not based on coordinates. 
Stereotype: (none)   
Derived from RS_ReferenceSystem 
Association roles: (none) 
Used by:  (none) 
Public attributes: (none) 



OGC 03-073r1 

20 © OGC 2003 – All rights reserved
 

 
Table 3 — Defining elements of RS_Identifier class 

Description: An identification of a CRS object. The first use of an RS_Identifier for an object, if any, is normally 
the primary identification code, and any others are aliases. 

Stereotype: DataType  
Derived from (none) 
Association roles: (none) 
Used by:  CC_CoordinateOperation 

CC_OperationMethod 
CC_OperationParmeter 
CC_OperationParameterGroup 
CD_Datum 
CD_Ellipsoid  
CD_PrimeMeridian 
CS_CoordinateSystem 
CS_CoordinateSystemAxis 
RS_ReferenceSystem 

Public attributes: 
Attribute name UML identifier Data type Oblig

ation
Maxi-
mum 
Occur
-rence 

Attribute description 

Code code CharacterString M 1 Identifier code or name, optionally 
from a controlled list or pattern 
defined by a code space. 

Code Space codeSpace CharacterString O 1 Identifier of a code space within 
which one or more codes are defined. 
This code space is optional but is 
normally included. This code space is 
often defined by some authority 
organization, where one organization 
may define multiple code spaces. The 
range and format of each Code Space 
identifier is defined by that code 
space authority. 

Version version CharacterString O 1 Identifier of the version of the 
associated codeSpace or code, as 
specified by the codeSpace or code 
authority. This version is included 
only when the "code" or "codeSpace" 
uses versions. When appropriate, the 
edition is identified by the effective 
date, coded using ISO 8601 date 
format. 

Authority authority CI_Citation O 1 Organization or party responsible for 
definition and maintenance of the 
code space or code. 

Remarks remarks CharacterString O 1 Comment on, or information about, 
this object code. 

 



OGC 03-073r1 

© OGC 2003 – All rights reserved 21
 

9 Coordinate reference system package 

9.1 General (informative) 

A coordinate reference system consists of one coordinate system that is related to the 
earth through one datum. 

The coordinate system is composed of a set of coordinate axes with specified units of 
measure. This concept implies the mathematical rules that define how coordinate values 
are calculated from distances, angles and other geometric elements and vice versa. 

A datum specifies the relationship of a coordinate system to the earth, thus ensuring that 
the abstract mathematical concept “coordinate system” can be applied to the practical 
problem of describing positions of features on or near the earth’s surface by means of 
coordinates. The resulting combination of coordinate system and datum is a coordinate 
reference system. Each datum subtype can be associated with only specific types of 
coordinate systems. The datum implicitly (occasionally explicitly) contains the values 
chosen for the set parameters that represent the degrees of freedom of the coordinate 
system, as described in Subclause 6.1 above. A datum therefore implies a choice 
regarding the approximate origin and orientation of the coordinate system 

The high level abstract model for spatial referencing by coordinates is therefore as shown 
in Figure 4 below. 

Coordinate Reference 
System

Datum Coordinate System

Coordinate 
Operation

+source

+target

 
Figure 4 — High-level conceptual model for spatial referencing by coordinates 

For the purposes of this specification, a coordinate reference system shall not change with 
time, with the exception of engineering coordinate reference systems defined on moving 
platforms such as cars, ships, aircraft and spacecraft. The intention is to exclude the 
option to describe the time variability of geodetic coordinate reference systems as a result 
of e.g. tectonic motion. This variability is part of the subject matter of geophysical and 
geodetic science. The model for spatial referencing by coordinates described in this 
specification is in principle not suitable for such zero-order geodetic problems. Such 
time-variability of coordinate reference systems shall be covered in the spatial 
referencing model described in this document by creating different coordinate reference 
systems, each with a different datum, for (consecutive) epochs. The date of realisation of 
the datum shall then be included in its definition. It is further recommended to include the 
date of realisation in the names of those datums and coordinate reference systems. 



OGC 03-073r1 

22 © OGC 2003 – All rights reserved
 

9.2 Principal sub-types of coordinate reference system (informative) 

Geodetic survey practice usually divides coordinate reference systems into a number of 
sub-types. The common classification criterion for sub-typing of coordinate reference 
systems can be described as the way in which they deal with earth curvature. This has a 
direct effect on the portion of the earth’s surface that can be covered by that type of CRS 
with an acceptable degree of error. 

Thus the following principal sub-types of coordinate reference system are distinguished: 

a) Geocentric. Type of coordinate reference system that deals with the earth’s curvature 
by taking the 3D spatial view, which obviates the need to model the earth’s 
curvature. The origin of a geocentric CRS is at the approximate centre of mass of the 
earth. 

b) Geographic. Type of coordinate reference system based on an ellipsoidal 
approximation of the geoid. This provides an accurate representation of the geometry 
of geographic features for a large portion of the earth’s surface. Geographic 
coordinate reference systems can be 2D or 3D. A 2D Geographic CRS is used when 
positions of features are described on the surface of the reference ellipsoid; a 3D 
Geographic CRS is used when positions are described on, above or below the 
reference ellipsoid. 

c) Projected. Type of coordinate reference system that is based on an approximation of 
the shape of the earth’s surface by a plane. The distortion that is inherent to the 
approximation is carefully controlled and known. Distortion correction is commonly 
applied to calculated bearings and distances to produce values that are a close match 
to actual field values. 

d) Engineering. Type of coordinate reference system that is that is used only in a 
contextually local sense. This sub-type is used to model two broad categories of local 
coordinate reference systems: 

• earth-fixed systems, applied to engineering activities on or near the surface of the 
earth; 

• coordinates on moving platforms such as road vehicles, vessels, aircraft or 
spacecraft. 

Earth-fixed Engineering CRSs are commonly based on a simple flat-earth 
approximation of the earth’s surface, and the effect of earth curvature on feature 
geometry is ignored: calculations on coordinates use simple plane arithmetic without 
any corrections for earth curvature. The application of such Engineering CRSs to 
relatively small areas and "contextually local" is in this case equivalent to "spatially 
local". 

Engineering CRSs used on moving platforms are usually intermediate coordinate 
reference systems that are computationally required to calculate geodetic coordinates. 
These coordinate reference systems are subject to all the motions of the platform with 



OGC 03-073r1 

© OGC 2003 – All rights reserved 23
 

which they are associated. In this case "contextually local" means that the associated 
coordinates are meaningful only relative to the moving platform. Earth curvature is 
usually irrelevant and is therefore ignored. In the spatial sense their applicability may 
extend from the immediate vicinity of the platform (e.g. a moving seismic ship) to the 
entire earth (e.g. in space applications). The determining factor is the mathematical 
model deployed in the positioning calculations. Transformation of coordinates from 
these moving Engineering CRSs to earth-referenced coordinate reference systems 
involves time-dependent coordinate operation parameters, which can be modelled by 
the structures provided in this UML model. 

e) Image. An Image CRS is an Engineering CRS applied to images. Image CRSs are 
treated as a separate sub-type because a separate user community exists for images 
with its own vocabulary. The definition of the associated Image Datum contains two 
data attributes not relevant for other datums and coordinate reference systems. 

f) Vertical. Type of coordinate reference system used for the recording of heights or 
depths. Vertical CRSs make use of the direction of gravity to define the concept of 
height or depth, but its relationship with gravity may not be straightforward. By 
implication ellipsoidal heights (h) cannot be captured in a vertical coordinate 
reference system. Ellipsoidal heights cannot exist independently, but only as 
inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate 
reference system. 

g) Temporal. Used for the recording of time in association with any of the listed spatial 
coordinate reference systems only. 

EDITOR’S NOTE  The CRS WG of the OGC has agreed to expand the types of CRS described above to 
also allow defining Earth Cantered Inertial CRSs, which do not rotate with the Earth. However, the changes 
needed to do this have not yet been determined. 

9.3 Additional sub-types of coordinate reference system (informative) 

9.3.1 Introduction 

In addition to the principal sub-types, so called because they represent concepts generally 
known in geodetic practice, two more sub-types have been defined to permit modelling of 
certain relationships and constraints that exist between the principal sub-types. 

These additional sub-types are: 

a) Compound coordinate reference system 

b) Derived coordinate reference system 

9.3.2 Compound coordinate reference system 

The traditional separation of horizontal and vertical position has resulted in coordinate 
reference systems that are horizontal (2D) in nature and vertical (1D). It is established 



OGC 03-073r1 

24 © OGC 2003 – All rights reserved
 

practice to combine the horizontal coordinates of a point with a height or depth from a 
different coordinate reference system. 

The coordinate reference system to which these 3D coordinates are referenced combines 
the separate horizontal and vertical coordinate reference systems of the horizontal and 
vertical coordinates. Such a coordinate system is called a compound coordinate reference 
system (Compound CRS). It consists of an ordered sequence of the two or more single 
coordinate reference systems. 

A Compound CRS is thus a coordinate reference system that combines two or more 
coordinate reference systems, none of which can itself be compound. In general, a 
Compound CRS may contain any number of axes. The Compound CRS contains an 
ordered set of coordinate reference systems and the tuple order of a compound coordinate 
set shall follow that order, while the subsets of the tuple, described by each of the 
composing coordinate reference systems, follow the tuple order valid for their respective 
coordinate reference systems. 

For spatial coordinates, a number of constraints exist for the construction of Compound 
CRSs. For example, the coordinate reference systems that are combined should not 
contain any duplicate or redundant axes. Valid combinations include: 

a) Geographic 2D + Vertical 

b) Geographic 2D + Engineering 1D (near vertical) 

c) Projected + Vertical 

d) Projected + Engineering 1D (near vertical) 

e) Engineering (horizontal 2D or 1D linear) + Vertical 

Any coordinate reference system, or any of the above listed combinations of coordinate 
reference systems, can have a Temporal CRS added. More than one Temporal CRS may 
be added if these axes represent different time quantities. For example, the oil industry 
sometimes uses “4D seismic”, by which is meant seismic data with the vertical axis 
expressed in milliseconds (signal travel time). A second time axis indicates how it 
changes with time (years), e.g. as a reservoir is gradually exhausted of its recoverable oil 
or gas). 

Figure 5 below shows an example of the possible composition of a compound coordinate 
reference system. 



OGC 03-073r1 

© OGC 2003 – All rights reserved 25
 

Compound CRS

Geographic CRS (2D) Vertical CRS

Vertical DatumGeodetic Datum Time Datum

Temporal CRS

Ellipsoidal CS Temporal CSGravity-related CS

 
Figure 5 — Example of a compound coordinate reference system 

9.3.3 Derived coordinate reference system 

Some coordinate reference systems are defined by applying a coordinate conversion to 
another coordinate reference system. Such a coordinate reference system is called a 
Derived CRS and the coordinate reference system it was derived from by applying the 
conversion is called the Source or Base CRS. A coordinate conversion is an arithmetic 
operation with zero or more parameters that have defined values. The Source CRS and 
Derived CRS have the same Datum. The best-known example of a Derived CRS is a 
Projected CRS, which is always derived from a source Geographic CRS by applying the 
coordinate conversion known as a map projection. 

In principle, all sub-types of coordinate reference system may take on the role of either 
Source or Derived CRS with the exception of a Geocentric CRS and a Projected CRS. 
The latter is modelled as an object class under its own name, rather than as a general 
Derived CRS of type “projected”. This has been done to honour common practice, which 
acknowledges Projected CRSs as one of the best known types of coordinate reference 
systems. 

An example of a Derived CRS of derivedCRStype: “geographic” is one of which the unit 
of measure has been modified with respect to an earlier defined Geographic CRS, which 
then takes the role of Source CRS. 

9.4 UML schema of Coordinate Reference System package (normative) 

Figure 6 below shows the UML class diagram of the Coordinate Reference System 
package. The definition of the object classes of package RS_CoordinateReferenceSystem 
are provided in Tables 4 through 16. 

Please notice that SC_ProjectedCRS is modelled separately from SC_DerivedCRS to 
permit modelling of its more specific characteristics. 



OGC 03-073r1 

26 © OGC 2003 – All rights reserved 
 

SC_DerivedCRSType
+ engineering
+ image
+ vertical
+ temporal
+ geographic

<<CodeList>>

SC_GeocentricCRS

SC_GeographicCRS SC_ImageCRS

SC_TemporalCRS

SC_VerticalCRS

RS_ReferenceSystem
(from RS_ReferenceSystem)

<<Abstract>>

(derived)

SC_EngineeringCRS

(derived)

SC_CRS
<<Abstract>>

CC_CoordinateOperation
(from CC_CoordinateOperation)

<<Abstract>>

0..1

0..n+sourceCRS

0..1

0..n

Source

0..1

0..n+target CRS

0..1

0..nTarget

SC_ProjectedCRS SC_DerivedCRS
+ derivedCRSType : SC_DerivedCRSType

SC_CompoundCRS CD_Datum
(from CD_Datum)

<<Abstract>>

CS_CoordinateSystem
(from CS_CoordinateSystem)

<<Abstract>>

0..*

1

0..*

+usesCS

1

SC_CoordinateReferenceSystem
<<Abstract>>2..*0..n

+includesCRS

2..*{ordered}0..n
0..1

0..n +usesDatum

0..1

0..n

1

0..*

+usesCS1

0..*

SC_GeneralDerivedCRS
<<Abstract>>

1

0..*

+base
CRS

1

0..*

CC_Conversion
(from CC_CoordinateOperation)0..* 10..*

+definedBy
Conversion

1

 
Figure 6 — SC Coordinate Reference System package 



OGC 03-073r173 

© OGC 2003 – All rights reserved 27
 

Table 4 — Defining elements of SC_CRS class 
Description: Abstract coordinate reference system, usually defined by a coordinate system and a datum. 
Stereotype: Abstract   
Derived from RS_ReferenceSystem 
Association roles sourceCRS from CC_CoordinateOperation [0..1] 
 targetCRS from CC_CoordinateOperation [0..1] 
Public attributes:  (none) 

 
Table 5 — Defining elements of SC_CoordinateReferenceSystem class 

Description: Abstract coordinate reference system, consisting of a single Coordinate System and a single Datum (as 
opposed to Compound CRS) 

Stereotype: Abstract   
Derived from SC_CRS 
Association roles: (derived) usesDatum to CD_Datum [0..1] 
 (derived) usesCS to CS_CoordinateSystem [1] 
 sourceCRS from SC_GeneralDerivedCRS [1] 

(associations inherited from SC_CRS) 
Public attributes:  (none) 

 
Table 6 — Defining elements of SC_CompoundCRS class 

Description: A coordinate reference system describing the position of points through two or more independent 
coordinate reference systems. Thus it is associated with two or more Coordinate Systems and Datums 
by defining the compound CRS as an ordered set of two or more instances of 
SC_CoordinateReferenceSystem 

Stereotype: (none)   
Derived from SC_CRS 
Association roles: includesCRS to SC_CoordinateReferenceSystem [2..*] {ordered} 
Public attributes:  (none) 

 
Table 7 — Defining elements of SC_GeneralDerivedCRS class 

Description: A coordinate reference system that is defined by its coordinate conversion from another coordinate 
reference system (not by a datum). 

Stereotype:  Abstract 
Derived from  SC_CoordinateReferenceSystem 
Association roles: baseCRS to SC_CoordinateReferenceSystem [1] 

definedByConversion to CC_Conversion [1]  
(associations inherited from SC_CoordinateReferenceSystem) 

Public attributes:  (none) 

 



OGC 03-073r1 

28 © OGC 2003 – All rights reserved
 

Table 8 — Defining elements of SC_DerivedCRS class 
Description: A coordinate reference system that is defined by its coordinate conversion from another coordinate 

reference system but is not a projected coordinate reference system. This category includes coordinate 
reference systems derived from a projected coordinate reference system. 

Stereotype: (none)  
Derived from SC_GeneralDerivedCRS 
Association roles: usesCS to CS_CoordinateSystem [1] 

(associations inherited from SC_ GeneralDerivedCRS) 
Public attributes: 
Attribute name UML identifier Data type Oblig

ation
Maxi-
mum 
Occur
-rence 

Attribute description 

Derived CRS 
type 

derivedCRStype SC_DerivedCR
SType 

M 1 Type of this derived CRS.  

 
Table 9 — Defining elements of SC_DerivedCRSType class 

Description: The type of the derived CRS, according to the classification of principal CRS types. 
Stereotype: CodeList 
Derived from (none) 
Association roles: (none) 
Used by: SC_DerivedCRS 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Geographic CRS geographic CharacterString C 1 A coordinate reference system based on 
an ellipsoidal approximation of the 
geoid; provides an accurate 
representation of the geometry of 
geographic features for a large portion 
of the earth's surface. 

Vertical CRS vertical CharacterString C 1 A coordinate reference system used for 
recording of heights or depths. Vertical 
CRSs make use of the direction of 
gravity to define the concept of height 
or depth, but the relationship with 
gravity may not be straightforward 

Engineering CRS engineering CharacterString C 1 A contextually local coordinate 
reference system; which can be divided 
into two broad categories: 
- earth-fixed systems applied to 
engineering activities on or near the 
surface of the earth; 
- CRSs on moving platforms such as 
road vehicles, vessels, aircraft, or 
spacecraft. 

Image CRS image CharacterString C 1 An engineering coordinate reference 
system applied to locations in images. 

Temporal CRS temporal CharacterString C 1 A coordinate reference system used for 
the recording of time. 

Condition: One and only one of the listed attributes can be supplied and is then mandatory 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 29
 

Table 10 — Defining elements of SC_ProjectedCRS class 
Description: A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but 

in such a way that the distortion that is inherent to the approximation is carefully controlled and 
known. Distortion correction is commonly applied to calculated bearings and distances to produce 
values that are a close match to actual field values. 

Stereotype: (none) 
Derived from SC_GeneralDerivedCRS 
Association roles: usesCS to CS_CartesianCS [1] 

(associations inherited from SC_GeneralDerivedCRS) 
Public Attributes:  (none) 

 
Table 11 — Defining elements of SC_GeocentricCRS class 

Description: A 3D coordinate reference system with the origin at the approximate centre of mass of the earth. A 
geocentric CRS deals with the earth's curvature by taking a 3D spatial view, which obviates the need 
to model the earth's curvature. 

Stereotype: (none) 
Derived from SC_CoordinateReferenceSystem 
Association roles: usesDatum to CD_GeodeticDatum [1] 

usesCartesianCS to CS_CartesianCS [0..1] 
usesSphericalCS to CS_SphericalCS [0..1] 
(associations inherited from SC_CoordinateReferenceSystem) 

Note attached to usesCartesianCS and usesSphericalCS associations: {XOR} 
Public attributes: (none) 

 
Table 12 — Defining elements of SC_GeographicCRS class 

Description: A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an 
accurate representation of the geometry of geographic features for a large portion of the earth's 
surface. 

Stereotype: (none) 
Derived from SC_CoordinateReferenceSystem 
Association roles: usesDatum to CD_GeodeticDatum [1] 

usesCS to CS_EllipsoidalCS [1] 
(associations inherited from SC_CoordinateReferenceSystem) 

Public attributes: (none) 
 

Table 13 — Defining elements of SC_EngineeringCRS class 
Description: A contextually local coordinate reference system; which can be divided into two broad categories: 
 - earth-fixed systems applied to engineering activities on or near the surface of the earth; 
 - CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft. 
Stereotype: (none) 
Derived from SC_CoordinateReferenceSystem 
Association roles: usesDatum to CD_EngineeringDatum [1] 

usesCS to CS_CoordinateSystem [1] 
(associations inherited from SC_CoordinateReferenceSystem) 

Public Attributes:  (none) 

 



OGC 03-073r1 

30 © OGC 2003 – All rights reserved
 

Table 14 — Defining elements of SC_ImageCRS class 
Description: An engineering coordinate reference system applied to locations in images. Image coordinate 

reference systems are treated as a separate sub-type because a separate user community exists for 
images with its own terms of reference. 

Stereotype: (none) 
Derived from SC_CoordinateReferenceSystem 
Association roles: usesDatum to CD_ImageDatum [1] 

usesCartesianCS to CS_CartesianCS [0..1] 
 usesObliqueCartesianCS to CS_ObliqueCartesianCS [0..1] 

(associations inherited from SC_CoordinateReferenceSystem) 
Note attached to usesCartesianCS and usesObliqueCartesianCS associations: {XOR} 
Public attributes: (none) 

 
Table 15 — Defining elements of SC_VerticalCRS class 

Description: A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the 
direction of gravity to define the concept of height or depth, but the relationship with gravity may not 
be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate 
reference system. Ellipsoidal heights cannot exist independently, but only as inseparable part of a 3D 
coordinate tuple defined in a geographic 3D coordinate reference system. 

Stereotype: (none) 
Derived from SC_CoordinateReferenceSystem 
Association roles: usesDatum to CD_VerticalDatum [1] 

usesCS to CS_VerticalCS [1]] 
(associations inherited from SC_CoordinateReferenceSystem) 

Public Attributes: (none) 

 
Table 16 — Defining elements of SC_TemporalCRS class 

Description: A 1D coordinate reference system used for the recording of time. 
Stereotype: (none) 
Derived from SC_CoordinateReferenceSystem 
Association roles: usesDatum CD_TemporalDatum [1] 

usesCS to CS_TemporalCS [1] 
(associations inherited from SC_CoordinateReferenceSystem) 

Public attributes:  (none) 

 

10 Coordinate System package 

The Coordinate System package models two main concepts: coordinate system and 
coordinate system axis. 

10.1 Coordinate System (informative) 

The coordinates of points are recorded in a coordinate system. A coordinate system is the 
set of coordinate system axes that spans the coordinate space. This concept implies the 
set of mathematical rules that determine how coordinates are associated with invariant 
quantities such as angles and distances. In other words, a coordinate system implies how 
coordinates are calculated from geometric elements such as distances and angles and vice 
versa. The calculus required to derive angles and distances from point coordinates and 
vice versa is in a map plane is simple Euclidean 2D arithmetic. To do the same on the 
surface of an ellipsoid (curved 2D space) involves more complex ellipsoidal calculus. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 31
 

These rules cannot be specified in detail, but are implied in the geometric properties of 
the coordinate space. 

NOTE: The word ‘distances’ is used loosely in the above description. Strictly speaking distances are not invariant 
quantities, as they are expressed in the unit of measure defined for the coordinate system; ratios of distances are 
invariant. 

One coordinate system may be used by multiple coordinate reference systems. Its axes 
can be spatial, temporal, or mixed. 

A coordinate system is composed of an ordered set of coordinate system axes, the 
number of axes being equal to the dimension of the space of which it describes the 
geometry. Coordinates in coordinate tuples shall be supplied in the same order as the 
coordinate axes are defined. 

The dimension of the coordinate space, the names, the units of measure, the directions 
and sequence of the axes are all part of the Coordinate System definition. The number of 
coordinates in a tuple and consequently the number of coordinate axes in a coordinate 
system shall be equal to the number of coordinate axes in the coordinate system. 

Example: It is therefore not permitted to supply a coordinate tuple with two heights of different definition in 
the same coordinate tuple. 

Coordinate systems are divided into subtypes by the geometric properties of the coordinate 
space spanned and the geometric properties of the axes themselves (straight or curved; 
perpendicular or not). Certain subtypes of coordinate system can only be used with specific 
subtypes of coordinate reference system as shown in the UML class diagram in Figure 8 
below. A description of coordinate system subtypes is provided in Table 17. 

Table 17 — Subtypes of coordinate system and constraints in its relationship with 
coordinate reference system 

CS subtype Description Used with 
CRS type(s) 

Cartesian 1-, 2-, or 3-dimensional coordinate system. It gives the position of points 
relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 
1-dimensional case, it contains a single straight coordinate axis. In the 
multi-dimensional case, all axes shall have the same unit of measure. 

Geocentric 

Projected 

Engineering 

Image 

oblique Cartesian 2- or 3-dimensional coordinate system with straight axes that are not 
necessarily orthogonal. 

Engineering 

Image 

ellipsoidal 2- or 3-dimensional coordinate system in which position is specified by 
geodetic latitude, geodetic longitude and (in the three-dimensional case) 
ellipsoidal height, associated with one or more geographic coordinate 
reference systems. 

Geographic 

Engineering 

spherical 3-dimensional coordinate system with one distance, measured from the 
origin, and two angular coordinates. Not to be confused with an ellipsoidal 
coordinate system based on an ellipsoid ‘degenerated’ into a sphere 

Geocentric 

Engineering 

cylindrical 3-dimensional coordinate system consisting of a polar coordinate system 
extended by a straight coordinate axis perpendicular to the plane spanned 
by the polar coordinate system. 

Engineering 

polar 2-dimensional coordinate system in which position is specified by distance 
to the origin and the angle between the line from origin to point and a 
reference direction. 

Engineering 



OGC 03-073r1 

32 © OGC 2003 – All rights reserved
 

CS subtype Description Used with 
CRS type(s) 

vertical 1-dimensional coordinate system used to record the heights (or depths) of 
points dependent on the Earth’s gravity field. An exact definition is 
deliberately not provided as the complexities of the subject fall outside the 
scope of this specification. 

Vertical 

Engineering 

linear 1-dimensional coordinate system that consists of the points that lie on the 
single axis described. The associated ordinate is the distance from the 
specified origin to the point along the axis. Example: usage of the line 
feature representing a road to describe points on or along that road. 

Engineering 

temporal 1-dimensional coordinate system containing a single time axis and used to 
describe the temporal position of a point in the specified time units from a 
specified time origin. 

Temporal 

 
10.2 Coordinate system axis (informative) 

A coordinate system is composed of an ordered set of coordinate system axes. Each of its 
axes is completely characterised by a unique combination of axis name, axis 
abbreviation, axis direction and axis unit of measure. 

The concept of coordinate axis requires some clarification. Consider an arbitrary x, y, z 
coordinate system. The x-axis may be defined as the locus of points with y = z = 0. This is 
easily enough understood if the x, y, z coordinate system is a Cartesian system and the 
space it describes is Euclidean. It becomes a bit more difficult to understand in the case 
of a strongly curved space, such as the surface of an ellipsoid, its geometry described by 
an ellipsoidal coordinate system (2D or 3D). Applying the same definition by analogy to 
the curvilinear latitude and longitude coordinates the latitude axis would be the equator 
and the longitude axis would be the prime meridian, which is not a satisfactory definition. 

Bearing in mind that the order of the coordinates in a coordinate tuple must be the same 
as the defined order of the coordinate axes, the ‘i-th’ coordinate axis of a coordinate 
system is defined as the locus of points for which all coordinates with sequence number 
not equal to ‘i’, have a constant value locally (whereby i = 1 ...n, and n is the dimension 
of the coordinate space). 

It will be evident that the addition of the word ‘locally’ in this definition apparently adds 
an element of ambiguity and this is intentional. However, the definition of the coordinate 
parameter associated with any axis must be unique. The coordinate axis itself should not 
be interpreted as a unique mathematical object, the associated coordinate parameter 
should. 

Example: Geodetic latitude is defined as the “Angle from the equatorial plane to the perpendicular to the 
ellipsoid through a given point, northwards usually treated as positive”. However, when used in an ellipsoidal 
coordinate system the geodetic latitude axis will be described as pointing ‘north’. In two different points on the 
ellipsoid the direction ‘north’ will be a spatially different direction, but the concept of latitude is the same. 

Furthermore the specified direction of the coordinate axes is often only approximate; two 
geographic coordinate reference systems will make use of the same ellipsoidal coordinate 
system. These coordinate systems are associated with the earth through two different 
geodetic datums, which may lead to the two systems being slightly rotated w.r.t. each 
other. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 33
 

Usage of coordinate system axis names is constrained by geodetic custom in a number of 
cases, depending mainly on the coordinate reference system type. These constraints are 
shown in Table 18 below. This constraint works in two directions; for example the names 
‘geodetic latitude’ and ‘geodetic longitude’ shall be used to designate the coordinate axis 
names associated with a geographic coordinate reference system. Conversely, these 
names shall not be used in any other context. 

Table 18 — Some naming constraints for coordinate system axis 

CS CRS Permitted coordinate system axis names 

Cartesian Geocentric Geocentric X, Geocentric Y, Geocentric Z 

Spherical Geocentric Spherical Latitude, Spherical Longitude, Geocentric Radius 

Ellipsoidal Geographic Geodetic Latitude, Geodetic Longitude, Ellipsoidal height (if 3D) 

Vertical Vertical Gravity-related height 

Vertical Vertical Depth 

Cartesian Projected Easting, Northing 

Cartesian Projected Westing, Southing 
 

Image and engineering coordinate reference systems may make use of names specific to 
the local context or custom and are therefore not included as constraints in the above list. 

Example:  The combination {Latitude, Lat, north, degree} would lead to one instance of the object class 
'coordinate system axis'; the combination {Latitude, ϕ, north, degree} to another instance, the axis abbreviation being 
different. 

10.3 UML schema of CS Coordinate System package (normative) 

Figures 7 below shows the UML class diagram of the Coordinate System package. The 
associations between Coordinate Reference System subtypes and Coordinate System 
subtypes are shown in the UML class diagram in Figure 8. The definition of the object 
classes of package CS_CoordinateSystem is provided in Tables 19 through 30.



OGC 03-073r1 

34 © OGC 2003 – All rights reserved 
 

CS_PolarCS

CS_SphericalCS

CS_CylindricalCS

CS_UserDefinedCS CS_ObliqueCartesianCS

CS_VerticalCS

CS_LinearCSCS_TemporalCS

RS_Identifier
(from RS_ReferenceSystem)

<<DataType>>

(derived)

CS_CoordinateSystemAxis
+ axisName : CharacterString
+ axisID [0..*] : RS_Identifier
+ axisAbbrev : CharacterString
+ axisDirection : CharacterString
+ axisUnitID : UnitOfMeasure
+ remarks [0..1] : CharacterString

SC_CoordinateReferenceSystem
(from SC_CoordinateReferenceSystem)

<<Abstract>>

CS_CoordinateSystem
+ csName : CharacterString
+ csID [0..*] : RS_Identifier
+ remarks [0..1] : CharacterString

<<Abstract>>

1..n

0..n +usesAxis

1..n{ordered}

0..n

0..*

1

0..*

+usesCS1

CS_EllipsoidalCS

CS_CartesianCS

 

Figure 7 — CS Coordinate System package 



OGC 03-073r173 

© OGC 2003 – All rights reserved 35
 

0..*

CS_VerticalCS
(from CS_CoordinateSystem)

SC_VerticalCRS

1

0..*

+usesCS1

0..*

CS_EllipsoidalCS
(from CS_CoordinateSystem)

SC_GeographicCRS

1

0..*

+usesCS1

0..*

CS_TemporalCS
(from CS_CoordinateSystem)

SC_TemporalCRS

1

0..*

+usesCS1

0..*

SC_CoordinateReferenceSystem
<<Abstract>>

SC_GeneralDerivedCRS
<<Abstract>>

1

0..*

+baseCRS

1

0..*

SC_EngineeringCRS

SC_DerivedCRS
+ derivedCRSType : SC_DerivedCRSType

CS_CoordinateSystem
(from CS_CoordinateSystem)

<<Abstract>>

1

0..*

+usesCS

1

0..*

0..*

1

+usesCS

1
Not shown here: Four other subclasses of 
CS_CoordinateSystem class, used only by 
SC_EngineeringCRS and SC_DerivedCRS

CS_SphericalCS
(from CS_CoordinateSystem)

SC_ProjectedCRS

SC_GeocentricCRS

0..1

0..n

+usesSphericalCS0..1

0..n

CS_ObliqueCartesianCS
(from CS_CoordinateSystem)

CS_CartesianCS
(from CS_CoordinateSystem)

1

0..*

+uses
CS

1

0..*

0..1

0..n

+usesCartesianCS
0..1

0..n

SC_ImageCRS

0..1

0..n

+usesOblique
CartesianCS0..1

0..n

0..1

0..n

+usesCartesianCS
0..1

0..n

    {XOR}     {XOR}

 

Figure 8 — Coordinate Reference System types associations to Coordinate System types 



OGC 03-073r1 

36 © OGC 2003 – All rights reserved
 

Table 19 — Defining elements of CS_CoordinateSystem class 
Description: A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A 

CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to 
be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in 
which the coordinate system axes associations are recorded, whenever those coordinates use a 
coordinate reference system that uses this coordinate system. 

Stereotype: Abstract 
Derived from (none) 
Association roles: usesAxis to CS_CoordinateSystemAxis [1..*] (ordered) 

usesCS from SC_EngineeringCRS [1] 
usesCS from SC_DerivedCRS [1]  
(derived) usesCS from SC_CoordinateReferenceSystem [1] 

Public attributes: 
Attribute name UML identifier Data type Oblig

ation
Maxi-
mum 
Occur
-rence 

Attribute description 

Coordinate system 
name 

csName CharacterString M 1 The name by which this coordinate 
system is identified. 

Coordinate system 
identifier 

csID RS_Identifier O N Set of alternative identifications of 
the coordinate system. The first csID, 
if any, is normally the primary 
identification code, and any others are 
aliases. 

Coordinate system 
remarks 

remarks CharacterString O 1 Comments on or information about 
the coordinate system, including data 
source information. 

 
Table 20 — Defining elements of CS_CartesianCS class 

Description: A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal 
straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight 
coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A 
CartesianCS shall have one, two, or three usesAxis associations. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: usesCS from SC_ProjectedCRS [1] 

usesCartesianCS from SC_GeocentricCRS [0..1] 
usesCartesianCS from SC_ImageCRS [0..1] 
(associations inherited from CS_CoordinateSystem) 

Note attached to usesCartesianCS and usesSphericalCS associations from SC_GeocentricCRS: {XOR} 
Note attached to usesCartesianCS and usesObliqueCartesianCS associations SC_ImageCRS: {XOR} 
Public attributes:  (none) 

 
Table 21 — Defining elements of CS_ObliqueCartesianCS class 

Description: A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. 
An ObliqueCartesianCS shall have two or three usesAxis associations. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: usesObliqueCartesianCS from SC_ImageCRS [0..1] 

(associations inherited from CS_CoordinateSystem) 
Note attached to usesCartesianCS and usesObliqueCartesianCS associations from SC_ImageCRS: {XOR} 
Public attributes:  (none) 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 37
 

Table 22 — Defining elements of CS_EllipsoidalCS class 
Description: A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, 

geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have 
two or three usesAxis associations. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: usesCS from SC_GeographicCRS [1] 

(associations inherited from CS_CoordinateSystem) 
Public attributes:  (none) 

 
Table 23 — Defining elements of CS_SphericalCS class 

Description: A three-dimensional coordinate system with one distance measured from the origin and two angular 
coordinates. Not to be confused with an ellipsoidal coordinate system based on an ellipsoid 
"degenerated" into a sphere. A SphericalCS shall have three usesAxis associations. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: usesSphericalCS from SC_GeocentricCRS [0..1] 

(associations inherited from CS_CoordinateSystem) 
Note attached to usesCartesianCS and usesSphericalCS associations: {XOR} 
Public attributes: (none) 

 
Table 24 — Defining elements of CS_CylindricalCS class 

Description: A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight 
coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS 
shall have three usesAxis associations. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: (associations inherited from CS_CoordinateSystem) 
Public attributes: (none) 

 
Table 25 — Defining elements of CS_PolarCS class 

Description: A two-dimensional coordinate system in which position is specified by the distance from the origin 
and the angle between the line from the origin to a point and a reference direction. A PolarCS shall 
have two usesAxis associations. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: (associations inherited from CS_CoordinateSystem) 
Public attributes:  (none) 

 
Table 26 — Defining elements of CS_LinearCS class 

Description: A one-dimensional coordinate system that consists of the points that lie on the single axis described. 
The associated ordinate is the distance from the specified origin to the point along the axis. Example: 
usage of the line feature representing a road to describe points on or along that road. A LinearCS shall 
have one usesAxis association. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: (associations inherited from CS_CoordinateSystem) 
Public attributes:  (none) 

 



OGC 03-073r1 

38 © OGC 2003 – All rights reserved
 

Table 27 — Defining elements of CS_VerticalCS class 
Description: A one-dimensional coordinate system used to record the heights (or depths) of points. Such a 

coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when 
atmospheric pressure is the basis for the vertical coordinate system axis. An exact definition is 
deliberately not provided as the complexities of the subject fall outside the scope of this specification. 
A VerticalCS shall have one usesAxis association. 

Stereotype: (none) 
Derived from CS_CoordinateSystem 
Association roles: usesCS from SC_VerticalCRS [1] 

(associations inherited from CS_CoordinateSystem) 
Public attributes:  (none) 

 
Table 28 — Defining elements of CS_TemporalCS class 

Description: A one-dimensional coordinate system containing a single time axis, used to describe the temporal 
position of a point in the specified time units from a specified time origin. A TemporalCS shall have 
one usesAxis association. 

Stereotype:  (none)  
Derived from CS_CoordinateSystem 
Association roles: usesCS from SC_TemporalCRS [1] 

(associations inherited from CS_CoordinateSystem) 
Public attributes:  (none)  

 
Table 29 — Defining elements of CS_UserDefinedCS class 

Description: A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not 
covered by any other Coordinate System type. An example is a multilinear coordinate system which 
contains one coordinate axis that may have any 1-D shape which has no intersections with itself. This 
non-straight axis is supplemented by one or two straight axes to complete a 2 or 3 dimensional 
coordinate system. The non-straight axis is typically incrementally straight or curved. A 
UserDefinedCS shall have two or three usesAxis associations. 

Stereotype: (none)  
Derived from CS_CoordinateSystem 
Association roles: (associations inherited from CS_CoordinateSystem) 
Public attributes:  (none)  

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 39
 

Table 30 — Defining elements of CS_CoordinateSystemAxis class 
Description: Definition of a coordinate system axis. 
Stereotype: (none) 
Derived from (none) 
Association roles: usesAxis from CS_CoordinateSystem [1..*] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Coordinate system 
axis name 

axisName  CharacterString M 1 Name of the coordinate system axis. 

Coordinate system 
axis identifier 

axisID RS_Identifier O N Set of alternative identifications of 
the coordinate system axis. 

Coordinate system 
axis abbreviation 

axisAbbrev CharacterString M 1 The abbreviation used for this 
coordinate system axes; this 
abbreviation is also used to identify 
the ordinates in coordinate tuple. 
Examples are X and Y. 

Coordinate system 
axis direction 

axisDirection CharacterString M 1 Direction of this coordinate system 
axis (or in the case of Cartesian 
projected coordinates, the direction of 
this coordinate system axis locally). 
Examples: north or south, east or 
west, up or down. Within any set of 
coordinate system axes, only one of 
each pair of terms can be used. For 
earth-fixed CRSs, this direction is 
often approximate and intended to 
provide a human interpretable 
meaning to the axis. When a geodetic 
datum is used, the precise directions 
of the axes may therefore vary 
slightly from this approximate 
direction. Note that an 
EngineeringCRS often requires 
specific descriptions of the directions 
of its coordinate system axes. 

Coordinate system 
axis unit identifier 

axisUnitID UnitOf Measure M 1 Identifier of the unit of measure used 
for this coordinate system axis. The 
value of this coordinate in a 
coordinate tuple shall be recorded 
using this unit of measure, whenever 
those coordinates use a coordinate 
reference system that uses a 
coordinate system that uses this axis. 

Coordinate system 
remarks 

remarks CharacterString O 1 Comments on or information about 
the coordinate system, including data 
source information. 

 

11 Datum package 

11.1 Types of datums (informative) 

A datum specifies the relationship of a coordinate system to the earth or, in some 
applications to an Engineering CRS, to a moving platform, thus creating a coordinate 
reference system. A datum can be used as the basis for one-, two- or three-dimensional 
systems. 



OGC 03-073r1 

40 © OGC 2003 – All rights reserved
 

Five subtypes of datum are specified: geodetic, vertical, engineering, image and 
temporal. Each datum subtype can be associated only with specific types of coordinate 
reference systems, as shown in Figure 9 below. A geodetic datum is used with three-
dimensional or horizontal (two-dimensional) coordinate reference systems, and requires 
an ellipsoid definition and a prime meridian definition. It is used to describe large 
portions of the earth’s surface up to the entire earth’s surface. A vertical datum can only 
be associated with a vertical coordinate reference system. Image datum and engineering 
datum are both used in a local context only: to describe the origin of an image and the 
origin of an engineering (or local) coordinate reference system. 

11.2 Vertical datum (informative) 

Further sub-typing is required to describe vertical datums adequately. The following 
types of vertical datum are distinguished: 

a) Geoidal. The zero value of the associated (vertical) coordinate system axis is defined 
to approximate a constant potential surface, usually the geoid. Such a reference 
surface is usually determined by a national or scientific authority and is then a well-
known, named datum. This is the default vertical datum type, because it is the most 
common one encountered. 

b) Depth. The zero point of the vertical axis is defined by a surface that has meaning for 
the purpose the associated vertical measurements are used for. For hydrographic 
charts, this is often a predicted nominal sea surface (i.e., without waves or other wind 
and current effects) that occurs at low tide. Examples are Lowest Astronomical Tide 
and Lowest Low Water Spring. A different example is a sloping and undulating River 
Datum defined as the nominal river water surface occurring at a quantified river 
discharge. 

c) Barometric. A vertical datum is of type “barometric” if atmospheric pressure is the 
basis for the definition of the origin. Atmospheric pressure may be used as the 
intermediary to determine height (barometric height determination) or it may be used 
directly as the vertical ordinate, against which other parameters are measured. The 
latter case is applied routinely in meteorology. 

Barometric height determination is routinely used in aircraft. The altimeter 
(barometer) on board is set to the altitude of the airfield at the time of take-off, which 
corrects simultaneously for instantaneous air pressure and altitude of the airfield. The 
measured height value is commonly named “altitude”. 

In some land surveying applications height differences between points are measured 
with barometers. To obtain absolute heights the measured height differences are 
added to the known heights of control points. In that case the vertical datum type is 
not barometric, but is the same as that of the vertical control network used to obtain 
the heights of the new points and its vertical datum type. 

The accuracy of this technique is limited, as it is affected strongly by the spatial and 
temporal variability of atmospheric pressure. This accuracy limitation impacts the 
precision of the associated vertical datum definition. The datum is usually the surface 
of constant atmospheric pressure approximately equating to mean sea level (MSL). 
The origin or anchor point is usually a point of known MSL height. The instruments 



OGC 03-073r173 

© OGC 2003 – All rights reserved 41
 

are calibrated at this point by correcting for the instantaneous atmospheric pressure at 
sea level and the height of the point above MSL. 

In meteorology, atmospheric pressure routinely takes the role as vertical ordinate in a 
CRS that is used as a spatial reference frame for meteorological parameters in the 
upper atmosphere. The origin of the datum is in that case the (hypothetical) zero 
atmospheric pressure and the positive vertical axis points down (to increasing 
pressure). 

d) Other surface. In some cases, e.g. oil exploration and production, geological features, 
i.e., the top or bottom of a geologically identifiable and meaningful subsurface layer, 
are sometimes used as a vertical datum. Other variations to the above three vertical 
datum types may exist and are all bracketed in this category. 

11.3 Image datum (informative) 

The image pixel grid is defined as the set of lines of constant integer ordinate values. The 
term “image grid” is often used in other standards to describe the concept of Image CRS. 
However, care must be taken to correctly interpret this term in the context in which it is 
used. The term “grid cell” is often used as a substitute for the term “pixel”. 

The grid lines of the image may be associated in two ways with the data attributes of the 
pixel or grid cell (ISO CD 19123). The data attributes of the image usually represent an 
average or integrated value that is associated with the entire pixel. 

An image grid can be associated with this data in such a way that the grid lines run 
through the centres of the pixels. The cell centres will thus have integer coordinate 
values. In that case the attribute “pixel in cell” will have the value “cell centre”. 

Alternatively the image grid may be defined such that the grid lines associate with the 
cell or pixel corners rather than the cell centres. The cell centres will thus have non-
integer coordinate values, the fractional parts always being 0.5. ISO CD 19123 calls the 
grid points in this latter case “posts” and associated image data: “matrix data”. The 
attribute “pixel in cell” will now have the value “cell corner”. 

This difference in perspective has no effect on the image interpretation, but is important 
for coordinate transformations involving this defined image. 

11.4 Prime meridian (informative) 

A prime meridian defines the origin from which longitude values are specified. Most 
geodetic datums use Greenwich as their prime meridian. A prime meridian description is 
not needed for any datum type other than geodetic, or if the datum type is geodetic and 
the prime meridian is Greenwich. 

The prime meridian description is mandatory if the datum type is geodetic and its prime 
meridian is not Greenwich. 

The data attributes of prime meridian are described in Table 11 in Subclause 11.5. 



OGC 03-073r1 

42 © OGC 2003 – All rights reserved
 

11.5 Ellipsoid (informative) 

An ellipsoid is defined that approximates the surface of the geoid. Because of the area for 
which the approximation is valid – traditionally regionally, but with the advent of satellite 
positioning often globally – the ellipsoid is typically associated with Geographic and 
Projected CRSs. An ellipsoid specification shall not be provided if the datum type not 
geodetic. 

One ellipsoid must be specified with every geodetic datum, even if the ellipsoid is not 
used computationally. The latter may be the case when a Geocentric CRS is used, e.g., in 
the calculation of satellite orbit and ground positions from satellite observations. 
Although use of a Geocentric CRS apparently obviates the need of an ellipsoid, the 
ellipsoid usually played a role in the determination of the associated geodetic datum. 
Furthermore one or more Geographic CRSs may be based on the same geodetic datum, 
which requires the correct ellipsoid the associated with any given geodetic datum. 

An ellipsoid is defined either by its semi-major axis and inverse flattening, or by its semi-
major axis and semi-minor axis. For some applications, for example small-scale mapping 
in atlases, a spherical approximation of the geoid’s surface is used, requiring only the 
radius of the sphere to be specified 

In the UML model, these options are modelled by a mandatory attribute 
“semiMajorAxis” in the class “SC_Ellipsoid”, plus a “secondDefiningParameter” 
attribute. That attribute uses the CD_SecondDefiningParameter class with the stereotype 
“Union”, meaning that one and only one of its attributes is used by an object. That class 
allows specification of the semiMinorAxis or inverseFlattening as the second defining 
ellipsoid parameter, or can specify that a spherical model is used. For a sphere, the 
attribute "semiMajorAxis" of the "Ellipsoid" class is interpreted as the radius of the 
sphere. 

11.6 UML schema of the CD Datum package (normative) 

Figures 9 shows the UML class diagram for the CD Datum package. The associations 
between Coordinate Reference System subtypes and Datum subtypes are shown in the 
UML class diagram in Figure 10. The definition of the object classes of this package is 
provided in Tables 31 through 41. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 43
 

CD_PixelInCell
+ cell center
+ cell corner

<<CodeList>>

CD_SecondDefiningParameter
+ inverseFlattening : Scale
+ semiMinorAxis : Length
+ isSphere : CharacterString = "sphere"

<<Union>>

CD_VerticalDatumType
+ geoidal
+ depth
+ barometric
+ other surface

<<CodeList>>

RS_Identifier
(from RS_ReferenceSystem)

<<DataType>>

(derived)

CD_Datum
+ datumName : ChracterString
+ datumID [1..*] : RS_Identifier
+ anchorPoint [0..1] : CharacterString
+ realizationEpoch [0..1] : Date
+ validArea [0..1] : EX_Extent
+ scope [0..1] : CharacterString
+ remarks [0..1] : CharacterString

<<Abstract>>

SC_CoordinateReferenceSystem
(from SC_CoordinateReferenceSystem)

<<Abstract>>

0..10..n

+usesDatum

0..10..n

CD_TemporalDatum
+ origin : DateTime
+ anchorPoint [0..0] : CharacterString
+ realizationEpoch [0..0] : Date

CD_Ellipsoid
+ ellipsoidName : CharacterString
+ ellipsoidID [0..*] : RS_Identifier
+ semiMajorAxis : Length
+ secondDefiningParameter : CD_SecondDefiningParameter
+ remarks [0..1] : CharacterString

CD_PrimeMeridian
+ meridianName : CharacterString = "Greenwich"
+ meridianID [0..*] : RS_Identifier
+ greenwichLongitude : Angle = 0
+ remarks [0..1] : CharacterString

CD_GeodeticDatum

1

0..n

+usesEllipsoid 1

0..n

1

0..n

+usesPrimeMeridian1

0..n

CD_VerticalDatum
+ verticalDatumType : CD_VerticalDatumType = geoidal

CD_EngineeringDatum

CD_ImageDatum
+ pixelinCell : CD_PixelinCell

EX_Extent
(from EX_Extent)

<<DataType>>

 

Figure 9 — CD Datum package 



OGC 03-073r1 

44 © OGC 2003 – All rights reserved 
 

SC_ImageCRS

CD_ImageDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum1

SC_VerticalCRS

CD_VerticalDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum 1

SC_TemporalCRS

CD_TemporalDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum1

SC_GeocentricCRS

SC_GeographicCRS

CD_GeodeticDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum
1

0..*

1

0..*

+usesDatum
1

CD_Datum
(from CD_Datum)

<<Abstract>>

SC_ProjectedCRS

SC_CoordinateReferenceSystem
<<Abstract>>

SC_GeneralDerivedCRS
<<Abstract>>

1

0..*

+baseCRS

1

0..*

SC_EngineeringCRS

CD_EngineeringDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum1

SC_DerivedCRS
+ derivedCRSType : SC_DerivedCRSType

 

Figure 10 — Coordinate Reference System types associations to Datum types 



OGC 03-073r173 

© OGC 2003 – All rights reserved 45
 

Table 31 — Defining elements of CD_Datum class  
Description: A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate 

reference system. A datum uses a parameter or set of parameters that determine the location of the 
origin of the coordinate reference system. Each datum subtype can be associated with only specific 
types of coordinate systems. 

Stereotype: Abstract 
Derived from (none) 
Association roles: (derived) usesDatum from SC_CoordinateReferenceSystem [0..1] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Datum name datumName CharacterString M 1 The name by which this datum is 
identified. 

Datum identifier datumID RS_Identifier O N Set of alternative identifications of 
this datum. The first datumID, if any, 
is normally the primary identification 
code, and any others are aliases. 

Datum anchor point anchorPoint CharacterString O 1 Description, possibly including 
coordinates, of the point or points 
used to anchor the datum to the Earth. 
Also known as the "origin", 
especially for Engineering and Image 
Datums. 

- For a geodetic datum, this point is 
also known as the fundamental point, 
which is traditionally the point where 
the relationship between geoid and 
ellipsoid is defined. In some cases, 
the "fundamental point" may consist 
of a number of points. In those cases, 
the parameters defining the 
geoid/ellipsoid relationship have then 
been averaged for these points, and 
the averages adopted as the datum 
definition. 

- For an engineering datum, the 
anchor point may be a physical point, 
or it may be a point with defined 
coordinates in another CRS. 

- For an image datum, the anchor 
point is usually either the centre of 
the image or the corner of the image. 

- For a temporal datum, this attribute 
is not defined. Instead of the anchor 
point, a temporal datum carries a 
separate time origin of type 
DateTime. 



OGC 03-073r1 

46 © OGC 2003 – All rights reserved
 

Datum realization 
epoch 

realizationEpoch Date O 1 The time after which this datum 
definition is valid. This time may be 
precise (e.g. 1997.0 for IRTF97) or 
merely a year (e.g. 1983 for NAD83). 
In the latter case, the epoch usually 
refers to the year in which a major 
recalculation of the geodetic control 
network, underlying the datum, was 
executed or initiated. An old datum 
can remain valid after a new datum is 
defined. Alternatively, a datum may 
be superseded by a later datum, in 
which case the realization epoch for 
the new datum defines the upper limit 
for the validity of the superseded 
datum. 

Datum valid area validArea EX_Extent O 1 Area or region in which this CRS 
object is valid. 

Datum scope scope CharacterString   Description of domain of usage, or 
limitations of usage, for which this 
CRS object is valid. 

Datum remarks remarks CharacterString O 1 Comments on or information about 
this datum, including source 
information. 

 
Table 32 — Defining elements of CD_GeodeticDatum class  

Description: A geodetic datum defines the location and precise orientation in 3-dimensional space of a defined 
ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system 
centered in this ellipsoid (or sphere). 

Stereotype: (none) 
Derived from CD_Datum 
Association roles: usesEllipsoid to CD_Ellipsoid [1] 

usesPrimeMeridian to CD_PrimeMeridian [1] 
usesDatum from SC_GeocentricCRS [1] 

 usesDatum from SC_GeographicCRS [1] 
Public attributes: (none) 

 
Table 33 — Defining elements of CD_EngineeringDatum class  

Description: An engineering datum defines the origin of an engineering coordinate reference system, and is used in 
a region around that origin. This origin can be fixed with respect to the earth (such as a defined point 
at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite). 

Stereotype: (none) 
Derived from CD_Datum 
Association roles: usesDatum from SC_EngineeringCRS [1] 
Public attributes: (none)  

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 47
 

Table 34 — Defining elements of CD_ImageDatum class  
Description: An image datum defines the origin of an image coordinate reference system, and is used in a local 

context only. For an image datum, the anchor point is usually either the centre of the image or the 
corner of the image. 

Stereotype: (none) 
Derived from CD_Datum 
Association roles: usesDatum from SC_ImageCRS [1] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Pixel in Cell pixelinCell  CD_PixelinCell M 1 Specification of the way the image 
grid is associated with the image data 
attributes. 

 
Table 35 — Defining elements of CD_PixelinCell class  

Description: Specification of the way the image grid is associated with the image data attributes. 
Stereotype: CodeList 
Derived from (none) 
Association roles: (none) 
Used by: CD_ImageDatum 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Cell center cell center  CharacterString C 1 The origin of the image coordinate 
system is the centre of a grid cell or 
image pixel. 

Cell corner cell corner CharacterString C 1 The origin of the image coordinate 
system is the corner of a grid cell, or 
half-way between the centres of 
adjacent image pixels. 

 
Table 36 — Defining elements of CD_VerticalDatum class  

Description: A textual description and/or a set of parameters identifying a particular reference level surface used as 
a zero-height surface, including its position with respect to the Earth for any of the height types 
recognized by this standard. There are several types of Vertical Datums, and each may place 
constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 

Stereotype: (none) 
Derived from CD_Datum 
Association roles: usesDatum from SC_VerticalCRS [1] 
Public attributes:  

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Vertical datum type vertDatumType  CD_VerticalDat
umType 

M 1 Type of this vertical datum. Default is 
“geoidal”. 

 



OGC 03-073r1 

48 © OGC 2003 – All rights reserved
 

Table 37 — Defining elements of CD_VerticalDatumType class  
Description: Type of a vertical datum. 
Stereotype: CodeList 
Derived from (none) 
Association roles: (none) 
Used by: CD_VerticalDatum 
Public attributes:  

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Geoidal geoidal CharacterString C 1 The zero value of the associated 
vertical coordinate system axis is 
defined to approximate a constant 
potential surface, usually the geoid. 
Such a reference surface is usually 
determined by a national or scientific 
authority, and is then a well-known, 
named datum. 

Depth depth CharacterString C 1 The zero point of the vertical axis is 
defined by a surface that has meaning 
for the purpose which the associated 
vertical measurements are used for. 
For hydrographic charts, this is often 
a predicted nominal sea surface (i.e., 
without waves or other wind and 
current effects) that occurs at low 
tide. 

Barometric barometric CharacterString C 1 Atmospheric pressure is the basis for 
the definition of the origin of the 
associated vertical coordinate system 
axis. 

Other surface other surface CharacterString C 1 In some cases, e.g. oil exploration and 
production, a geological feature, such 
as the top or bottom of a geologically 
identifiable and meaningful 
subsurface layer, is used as a vertical 
datum. Other variations to the above 
three vertical datum types may exist 
and are all included in this type. 

Condition: One and only one of these attributes must be supplied 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 49
 

Table 38 — Defining elements of CD_TemporalDatum class  
Description: A temporal datum defines the origin of a temporal coordinate reference system. 
Stereotype: (none) 
Derived from CD_Datum 
Association roles: usesDatum from SC_TemporalCRS [1] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Origin origin DateTime M 1 The date and time origin of this 
temporal datum. 

Anchor Point anchorPoint CharacterString M 0 This attribute is not used by a 
Temporal Datum. 

Realization epoch realizationEpoch Date M 0 This attribute is not used by a 
Temporal Datum. 

 
Table 39 — Defining elements of CD_Ellipsoid class  

Description: An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In 
mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis. 

Stereotype: (none) 
Derived from (none) 
Association roles: usesEllipsoid from CD_GeodeticDatum [1] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Ellipsoid name ellipsoidName CharacterString M 1 The name by which this ellipsoid is 
identified. 

Ellipsoid identifier ellipsoidID RS_Identifier O N Set of alternative identifications of 
this ellipsoid. The first ellipsoidID, if 
any, is normally the primary 
identification code, and any others are 
aliases. 

Length of semi-major 
axis 

semiMajorAxis Length M 1 Length of the semi-major axis of the 
ellipsoid. 

Second defining 
parameter 

secondDefiningPa
rameter 

CD_SecondDefi
ningParameter 

M 1 Definition of the second parameter 
which describes the shape of this 
ellipsoid. 

Ellipsoid remarks remarks CharacterString O 1 Comments on or information about 
this ellipsoid, including source 
information. 

 
Table 40 — Defining elements of CD_SecondDefiningParameter class  

Description: Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two 
defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. 
When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is 
required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the 
radius of the sphere. 



OGC 03-073r1 

50 © OGC 2003 – All rights reserved
 

Stereotype: Union 
Derived from (none) 
Association roles: (none) 
Used by: CD_Ellipsoid 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Inverse Flattening inverseFlattening Scale C 1 Inverse flattening value of the 
ellipsoid. 

Length of semi-minor 
axis 

semiMinorAxis Length C 1 Length of the semi-minor axis of the 
ellipsoid. 

“Ellipsoid = Sphere” 
indicator 

isSphere CharacterString C 1 The ellipsoid is degenerate and is 
actually a sphere. The sphere is 
completely defined by the semi-major 
axis, which is the radius of the sphere. 
This attribute has the fixed text value 
"Sphere". 

Condition:  One and only one of these three elements must be supplied.  

 
Table 41 — Defining elements of CD_PrimeMeridian class  

Description: A prime meridian defines the origin from which longitude values are determined. 
Stereotype: (none) 
Derived from (none) 
Association roles: usesPrimeMeridian from CD_GeodeticDatum [1] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Prime meridian name meridianName CharacterString M 1 The name by which this prime 
meridian is identified. The 
meridianName initial value is 
“Greenwich”, and that value shall be 
used when the greenwichLongitude 
value is zero. 

Prime meridian 
identifier 

meridianID RS_Identifier O N Set of alternative identifications of 
this prime meridian. The first 
meridianID, if any, is normally the 
primary identification code, and any 
others are aliases. 

Prime meridian 
Greenwich longitude 

greenwich 
Longitude 

Angle C 1 Longitude of the prime meridian 
measured from the Greenwich 
meridian, positive eastward. The 
greenwichLongitude initial value is 
zero, and that value shall be used 
when the meridianName value is 
“Greenwich”. 

Prime meridian 
remarks 

remarks CharacterString O 1 Comments on the prime meridian 
including data source information. 

Condition:  The provision of a value is optional, but if no prime meridian name is provided, the prime meridian name is 
taken to be "Greenwich" and the Greenwich longitude value is taken to be zero. 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 51
 

12 Coordinate operation package 

12.1 General characteristics of coordinate operations (informative) 

If the relationship between any two coordinate reference systems is known, coordinates 
can be transformed or converted to another coordinate reference system. The UML 
model therefore specifies a source and a target coordinate reference system for such 
coordinate operations. For that reason, a coordinate operation is often popularly said to 
“transform coordinate reference system ‘A’ into coordinate reference system ‘B’”. 
Although this wording may be good enough for conversation, it should be realised that 
coordinate operations do not operate on coordinate reference systems, but on coordinates. 
This is important for the design of implementation specifications because it implies that 
coordinate reference systems cannot be ‘created’ from another coordinate reference 
system by a coordinate operation. Neither can a coordinate operation be used to modify 
the definition of a coordinate reference system, e.g. by converting the units of measure of 
the coordinates. In all these cases, the coordinate reference systems involved must be 
defined before the coordinate operation. 

NOTE: There is an exception to the rule of explicit specification of source and target coordinate 
reference systems. This exception, related to so-called “defining coordinate conversions”, is described in 
Subclause 12.2 below. 

Coordinate operations are divided into two subtypes: 

Coordinate conversion – mathematical operation on coordinates that does not include any 
change of Datum. The best-known example of a coordinate conversion is a map 
projection. The parameters describing coordinate conversions are defined rather than 
empirically derived. Note that some conversions have no parameters. 

Coordinate transformation – mathematical operation on coordinates that usually includes 
a change of Datum. The parameters of a coordinate transformation are empirically 
derived from data containing the coordinates of a series of points in both coordinate 
reference systems. This computational process is usually ‘over-determined’, allowing 
derivation of error (or accuracy) estimates for the transformation. Also, the stochastic 
nature of the parameters may result in multiple (different) versions of the same 
coordinate transformation. Because of this several transformations may exist for a given 
pair of coordinate reference systems, differing in their transformation method, parameter 
values and accuracy characteristics. 

A coordinate operation (transformation or conversion) can be time-varying, and must be 
time-varying if either the source or target CRS is time varying. When the coordinate 
operation is time-varying, the operation method used will also be time-varying, and some 
of the parameters used by that operation method will involve time. For example, some of 
the parameters may have time, velocity, and/or acceleration values and units. 

12.2 Coordinate conversions (informative) 

Coordinate conversions are coordinate operations that make use of exact, defined (rather 
than measured or computed), and therefore error-free parameter values. Corresponding 
pairs of coordinate tuples in each of the two coordinate reference systems connected 
through a coordinate conversion have a fixed arithmetic relationship. Additionally one of 



OGC 03-073r1 

52 © OGC 2003 – All rights reserved
 

the two tuples cannot exist without specification of the coordinate conversion and the 
‘source’ coordinate reference system. Coordinate conversions are therefore intimately 
related to the earlier-defined concept of Derived CRS. 

The best-known example of this source-derived relationship is a projected coordinate 
reference system, which is always based on a source geographic coordinate reference 
system. The associated map projection effectively defines the projected coordinate 
reference system from the geographic coordinate system. This concept is modelled in 
Figure 11 as a direct link between coordinate reference system and coordinate 
conversion. 

Please note that this does not contradict the statement in the second paragraph above that 
a coordinate operation cannot be used to create or modify a coordinate reference system 
in a software implementation. The text above describes a static source-result relationship 
between coordinates in the two coordinate reference systems. For such defining 
coordinate conversions, no source and target coordinate reference system are defined. 
The usage of such a coordinate conversion is in the coordinate reference system, which 
will point to that conversion and to its source coordinate reference system. 

12.3 Concatenated coordinate operation (informative) 

A concatenated coordinate operation is an ordered sequence of coordinate operations. 
The sequence of operations is constrained by the requirement that the source coordinate 
reference system of step (n+1) must be the same as the target coordinate reference system 
of step (n). The source coordinate reference system of the first step and the target 
coordinate reference system of the last step are the source and target coordinate reference 
system associated with the concatenated operation. 

The above constraint should not be interpreted as implying that only those coordinate 
operations can be used in a concatenated operation that have their source and a target 
coordinate reference system specified through the association pair between 
CC_CoordinateOperation and SC_CRS. This would exclude coordinate conversions. 
Concatenated coordinate operations may contain coordinate transformations and/or 
coordinate conversions. 

The source and target coordinate reference system of a coordinate conversion are defined 
in the SC_GeneralDerivedCRS, by specifying the base (i.e., source) CRS and the 
defining conversion. The derived coordinate reference system itself is the target CRS in 
this situation. When used in a concatenated operation, the conversion’s source and target 
coordinate reference system are equally subject to the above constraint as the source and 
target of a transformation although they are specified in a different manner. 

The concatenated coordinate operation class is primarily intended to provide a 
mechanism that forces application software to use a preferred path to go from source to 
target coordinate reference system, if a direct transformation between the two is not 
available. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 53
 

12.4 Pass-through coordinate operation (informative) 

Coordinate operations require input coordinate tuples of certain dimensions and produce 
output tuples of certain dimensions. The dimensions of these coordinate tuples and the 
dimensions of the coordinate reference system they are defined in must be the same. 

The ability to define compound coordinate reference systems combining two or more 
other coordinate reference systems, not themselves compound, introduces a difficulty. 
For example, it may be required to transform only the horizontal or only the vertical 
component of a compound coordinate reference system, which will put them at odds with 
coordinate operations specified for either horizontal or vertical coordinates only. To the 
human mind this is a trivial problem, but not so for coordinate transformation software 
that ought to be capable of automatic operation, without human intervention; the software 
logic would be confronted with the problem of having to apply a 2-dimensional 
coordinate operation to 3-dimensional coordinate tuples. 

This problem has been solved by defining a pass-through operation. This operation 
specifies what subset of a coordinate tuple is subject to a requested transformation. It 
takes the form of referencing another coordinate operation and specifying a sequence of 
numbers defining the positions in the coordinate tuple of the coordinates affected by that 
transformation. 

NOTE. The order of the coordinates in a coordinate tuple shall agree with the order of the coordinate 
system axes as defined for the associated coordinate system. 

12.5 operation method and parameters (informative) 

The algorithm used to execute the coordinate operation is defined in the operation 
method. Concatenated operations and pass-through operations do not require a coordinate 
operation to be specified. Each operation method uses a number of parameters (although 
some coordinate conversions use none), and each coordinate operation assigns value to 
these parameters. 

Most parameter values are numeric, but for some operation methods, notably those 
implementing a grid interpolation algorithm, the parameter value could be a file name 
and location (this may be a URI). An example is the coordinate transformation from 
NAD 27 to NAD 83 in the USA; depending on the locations of the points to be 
transformed, one of a series of grid files should be used. 

As this class comes close to the heart of any coordinate transformation software, it is 
recommended to make extensive use of identifiers, referencing well-known datasets 
wherever possible. There is as yet no standard way of spelling or even naming the various 
coordinate operation methods. Client software requesting a coordinate operation to be 
executed by a coordinate transformation server implementation may therefore ask for an 
operation method this server doesn’t recognise, although a perfectly valid method may be 
available. The same holds for coordinate operation parameters used by any coordinate 
operation method. 

To facilitate recognition and validation it is recommended that the operation formulae be 
included or referenced in the relevant object, and if possible a worked example. 



OGC 03-073r1 

54 © OGC 2003 – All rights reserved
 

12.6 Parameter groups (informative) 

Some operation methods may require a large number of coordinate operation parameters. 
Also, some operation methods require that groups of parameters be repeatable as a group. 
In such cases, it is helpful to group related parameters in parameter groups. Two or more 
parameter groups are then associated with a particular operation method, and each 
parameter group consists of a set of operation parameters, or other, nested parameter 
groups. This way of modelling is not mandatory; all coordinate operation parameters may 
be assigned directly to the coordinate operation method. 

12.7 Implementation considerations (informative) 

This explanation is not complete without giving some thought to implementations. 
Coordinate transformation services should be able to automatically derive coordinate 
operations that are not stored explicitly in any permanent data store, in other words 
determine their own concatenated or inverse operations. The reason is that is practically 
impossible to store all possible pairs of coordinate reference systems in explicitly defined 
coordinate operations. The key to a successful software implementation is the ability to 
apply meaningful constraints and validations to this process. For example: it may be 
mathematically possible to derive a concatenated coordinate operation that will transform 
North American Datum 1983 coordinates to Australian National Datum; but in a practical 
sense that operation would be meaningless. The key validation that would flag such an 
operation as invalid would be a comparison of the two areas of validity and the 
conclusion that there is no overlap between these. 

Coordinate transformation services should also be able to derive or infer the inverse of 
any coordinate operation (from ‘B’ to ‘A’) from its complementary forward operation 
(‘A’ to ‘B’). Most permanent data stores for coordinate reference parameter data will 
record only one of the two operations that may exist between any two coordinate 
reference systems. The inverse operation is then inferred by the application software 
logic from the stored operation. 

In some cases, the algorithm for the inverse operation is the same as the forward 
algorithm, and only the signs of the parameter values need to be reversed for the inverse 
operation to be fully defined. An example is the 7-parameter Helmert transformation 
(both position vector and coordinate frame rotation convention). 

Some polynomial coordinate operations require the signs of only most, but not all, 
parameter values to be reversed. Other coordinate operation methods (see 7.5 below) 
imply two algorithms, one for the forward and one for the inverse operation. The 
parameters are generally the same in that case. The latter situation generally applies to 
map projections. 

Finally the same algorithm may be used for the inverse operation, with entirely different 
parameter values. This is the case with some polynomial and affine operations. In those 
cases the inverse operation cannot be inferred from the forward operation but must be 
explicitly defined. 

The logic to derive the inverse transformation should be built into the application 
software, be it server or client, that performs the coordinate operation. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 55
 

12.8 UML schema of Coordinate Operations package (normative) 

Figures 11 and 12 contain the two parts of the UML class diagram for the CC Coordinate 
Operation package. As indicated by the note in Figure 11, Figure 12 shows additional 
classes and associations from the CC_Operation class shown in Figure 11. 

The definition of the object classes of the CC Coordinate Operations package is provided 
in Tables 42 through 54. 

CC_ConcatenatedOperation
CC_SingleOperation

<<Abstract>>

0..n 2..*0..n

+usesOperation

2..*{ordered}

DQ_PositionalAccuracy
(from DQ_DataQual ity)

<<Abstract>>

SC_CRS
(from SC_CoordinateReferenceSystem)

<<Abstract>>

CC_CoordinateOperation
+ coordinateOperationName : CharacterString
+ coordinateOperationID [0..*] : RS_Identifier
+ operationVersion [0..1] : CharacterString
+ validArea [0..1] : EX_Extent
+ scope [0..1] : CharacterString
+ positionalAccuracy [0..*] : DQ_PositionalAccuracy
+ remarks [0..1] : CharacterString

<<Abstract>>

0..1 0..n

+sourceCRS

0..1 0..nSource

0..1 0..n

+target CRS

0..1 0..nTarget

The "sourceCRS" and "targetCRS" associations are mandatory for Transformations only. Conversions have a 
source CRS and a target CRS that are NOT specified through these associations, but through associations from 
GeneralDerivedCRS to CoordinateReferenceSystem. For a ConcatenatedOperation sequence of N Operations: 
source CRS (concatenated operation) = source CRS (operation step 1) 
target CRS (operation step i) = source CRS (operation step i+1); i = 1 ...(N-1)
target CRS (concatenated operation) = target CRS (operation step N)
Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned 
above, if the inverse operation is uniquely defined by the forward operation.

CC_PassThroughOperation
+ modifiedCoordinate : Sequence<Integer> CC_Operation

<<Abstract>>

0..n 10..n

+usesOperation

1

Additional associations 
to additional classes 
shown on page 2

RS_Identifier
(from RS_ReferenceSystem)

<<DataType>>

EX_Extent
(from EX_Extent)

<<DataType>>

CC_Transformation
+ operationVersion : CharacterString

CC_Conversion
+ operationVersion [0..0] : CharacterStringSC_GeneralDerivedCRS

(from SC_CoordinateReferenceSystem)

<<Abstract>>

10..*

+definedByConversion

10..*

 
Figure 11 — CC Coordinate Operation package part 1 



OGC 03-073r1 

56 © OGC 2003 – All rights reserved
 

CC_ParameterValue
+ value : Measure
+ stringValue : CharacterString
+ integerValue : Integer
+ booleanValue : Boolean
+ valueList : Sequence<Measure>
+ integerValueList : Sequence<Integer>
+ valueFile : CharacterString

<<Union>>

CC_OperationParameter
+ parameterName : CharacterString
+ parameterID [0..*] : RS_Identifier
+ remarks [0..1] : CharacterString0..n 10..n

+valueOfParameter

1

CC_OperationMethod
+ methodName : CharacterString
+ methodID [0..*] : RS_Identifier
+ formula : CharacterString
+ sourceDimensions : Integer
+ targetDimensions : Integer
+ remarks [0..1] : CharacterString

CC_GeneralOperationParameter
+ minimumOccurs [0..1] : Integer

<<Abstract>>

0..n

0..n

0..n

+usesParameter 0..n

CC_Operation
<<Abstract>> 0..n 10..n

+usesMethod

1

CC_OperationParameterGroup
+ groupName : CharacterString
+ groupID [0..*] : RS_Identifier
+ maximumOccurs [0..1] : Integer
+ remarks [0..1] : CharacterString

2..*

0..n

2..*

0..n

CC_GeneralParameterValue
<<Abstract>>

0..n

0..*

0..n

+usesValue0..*

CC_ParameterValueGroup

10..n

+valuesOfGroup

10..n

2..*

1

2..* +includesValue

1

RS_Identifier
(from RS_ReferenceSystem)

<<DataType>>

 
Figure 12 — CC Coordinate Operation package part 2 



OGC 03-073r173 

© OGC 2003 – All rights reserved 57
 

Table 42 — Defining elements of CC_CoordinateOperation class 
Description:  A mathematical operation on coordinates that transforms or converts coordinates to another coordinate 

reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely 
define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm 
for the inverse operation is the same as for the forward algorithm, but the signs of some operation 
parameter values must be reversed. In other cases, different algorithms are required for the forward 
and inverse operations, but the same operation parameter values are used. If (some) entirely different 
parameter values are needed, a different coordinate operation shall be defined. 

Stereotype:  Abstract   
Derived from:  (none) 
Association roles:  sourceCRS to SC_CRS [0..1], association named Source 
 targetCRS to SC_CRS [0..1], association named Target 
Note attached to sourceCRS and targetCRS associations: 
 The "sourceCRS" and "targetCRS" associations are mandatory for Transformations only. Conversions 

have a source CRS and a target CRS that are NOT specified through these associations, but through 
associations from GeneralDerivedCRS to CoordinateReferenceSystem. For a ConcatenatedOperation 
sequence of N Operations: 

 source CRS (concatenated operation) = source CRS (operation step 1) 
 target CRS (operation step i) = source CRS (operation step i+1); i = 1 ...(N-1) 
 target CRS (concatenated operation) = target CRS (operation step N) 

Instead of a forward operation, an inverse operation may be used for one or more of the operation 
steps mentioned above, if the inverse operation is uniquely defined by the forward operation. 

Public attributes: 
Attribute name UML identifier Data type Oblig

ation
Maxi-
mum 
Occur
-rence 

Attribute description 

Coordinate operation 
name 

coordinateOperati
onName 

CharacterString M 1 The name by which this coordinate 
operation is identified. 

Coordinate operation 
identifier 

coordinateOperati
onID 

RS_Identifier O N Set of alternative identifications of 
this coordinate operation. The first 
coordinateOperationID, if any, is 
normally the primary identification 
code, and any others are aliases. 

Coordinate operation 
version 

operationVersion CharacterString C 1 Version of the coordinate 
transformation (i.e., instantiation due 
to the stochastic nature of the 
parameters). Mandatory when 
describing a transformation, and 
should not be supplied for a 
conversion.  

Coordinate operation 
valid area 

validArea Ex_Extent O 1 Area in which this CRS object is 
valid 

Coordinate operation 
scope 

scope CharacterString O 1 Description of domain of usage, or 
limitations of usage, for which this 
CRS object is valid. 

Position error 
estimates 

positional 
Accuracy 

DQ_PositionalA
ccuracy 

O N Estimate(s) of the impact of this 
operation on point accuracy. Gives 
position error estimates for target 
coordinates of this coordinate 
operation, assuming no errors in 
source coordinates. 

Coordinate operation 
remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation including source 
information 

 



OGC 03-073r1 

58 © OGC 2003 – All rights reserved
 

Table 43 — Defining elements of CC_ConcatenatedOperation class 
Description:  An ordered sequence of two or more single coordinate operations. The sequence of operations is 

constrained by the requirement that the source coordinate reference system of step (n+1) must be the 
same as the target coordinate reference system of step (n). The source coordinate reference system of 
the first step and the target coordinate reference system of the last step are the source and target 
coordinate reference system associated with the concatenated operation. Instead of a forward 
operation, an inverse operation may be used for one or more of the operation steps mentioned above, 
if the inverse operation is uniquely defined by the forward operation. 

Stereotype:  (none)   
Derived from:  CC_CoordinateOperation 
Association roles:  usesOperation to CC_SingleOperation [2..*] {ordered} 

(associations inherited from CC_CoordinateOperation) 
Public attributes: (none) 

 
Table 44 — Defining elements of CC_SingleOperation class 

Description:  A single (not concatenated) coordinate operation. 
Stereotype:  Abstract   
Derived from:  CC_CoordinateOperation 
Association roles:  (aggregation) usesOperation from CC_PassThroughOperation [2..*] 

(associations inherited from CC_CoordinateOperation) 
Public attributes: (none) 

 
Table 45 — Defining elements of CC_PassThroughOperation class 

Description:  A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific 
coordinate operation. 

Stereotype:  (none)   
Derived from:  CC_SingleOperation 
Association roles:  (aggregation) usesOperation to CC_SingleOperation [0..1] 

(associations inherited from CC_SingleOperation) 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Modified coordinates modifiedCoordinate Sequence<Integ
er> 

M 1 Ordered sequence of positive integers 
defining the positions in a coordinate 
tuple of the coordinates affected by 
this pass-through operation. 

 
Table 46 — Defining elements of CC_Operation class 

Description:  A single (not concatenated) coordinate operation. 
Stereotype:  Abstract   
Derived from:  CC_SingleOperation 
Association roles:  usesOperation from CC_PassThroughOperation [1] 

usesMethod to CC_OperationMethod [1] 
usesValue to CC_GeneralParameterValue [0..*] 
(associations inherited from CC_SingleOperation) 

Public attributes: (none) 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 59
 

Table 48 — Defining elements of CC_Conversion class 
Description:  Definition of an algorithm used to perform a coordinate operation. Most operation methods use a 

number of operation parameters, although some coordinate conversions use none. Each coordinate 
operation using the method assigns values to these parameters. 

Stereotype:  (none) 
Derived from:  CC_Operation 
Association roles:  definedByConversion from SC_GeneralDerivedCRS [1] 
 (associations inherited from CC_Operation) 
Public attributes: 

Element name UML 
identifier 

Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Operation version operationVers
ion 

CharacterString O 0 This attribute is not used in a 
Conversion. 

 
Table 47 — Defining elements of CC_Transformation class 

Description:  An operation on coordinates that usually includes a change of Datum. The parameters of a coordinate 
transformation are empirically derived from data containing the coordinates of a series of points in 
both coordinate reference systems. This computational process is usually "over-determined", allowing 
derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the 
parameters may result in multiple (different) versions of the same coordinate transformation. 

Stereotype:  (none) 
Derived from:  CC_Opereration 
Association roles:  (associations inherited from CC_Operation) 
Public attributes: 

Element name UML 
identifier 

Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Operation version operationVers
ion 

CharacterString M 1 Version of the coordinate 
transformation (i.e., instantiation 
due to the stochastic nature of the 
parameters). This attribute is 
mandatory in a Transformation. 

 



OGC 03-073r1 

60 © OGC 2003 – All rights reserved
 

Table 48 — Defining elements of CC_OperationMethod class 
Description:  The method (algorithm or procedure) used to perform the coordinate operation 
Stereotype:   (none)  
Derived from:  (none) 
Association roles: (aggregation) usesParameter to CC_GeneralOperationParameter [0..*] 
 usesMethod from CC_Operation [1] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Operation method 
name 

methodName CharacterString M 1 The name by which this operation 
method is identified. 

Coordinate operation 
method identifier 

methodID RS_Identifier O N Set of alternative identifications of 
this coordinate operation method. The 
first methodID, if any, is normally the 
primary identification code, and any 
others are aliases. 

Coordinate operation 
method formula 

formula CharacterString M 1  Formula(s) or procedure used by this 
operation method. This may be a 
reference to a publication. Note that 
the operation method may not be 
analytic, in which case this attribute 
references or contains the procedure, 
not an analytic formula. 

Dimension of source 
CRS 

sourceDimensions Integer M 1 Number of dimensions in the source 
CRS of this operation method. 

Dimension of target 
CRS 

targetDimensions Integer M 1 Number of dimensions in the target 
CRS of this operation method. 

Coordinate operation 
method remarks 

remarks CharacterString O 1 Comments on the coordinate 
operation method including source 
information 

 
Table 49 — Defining elements of CC_GeneralOperationParameter class 

Description:  Abstract definition of a parameter or group of parameters used by an operation method. 
Stereotype:   Abstract 
Derived from:  (none) 
Association roles: (aggregation) usesParameter from CC_OperationMethod [0..*] 
 (aggregation) includesParameter from CC_OperationParameterGroup [2..*] 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Minimum 
occurrences 

minimumOccurs Integer O 1 The minimum number of times that 
values for this parameter group or 
parameter are required. If this 
attribute is omitted, the minimum 
number is one. 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 61
 

Table 50 — Defining elements of CC_OperationParameterGroup class 
Description:  The definition of a group of related parameters used by an operation method. 
Stereotype:   (none) 
Derived from:  CC_GeneralOperationParameter 
Association roles: (aggregation) includesParameter to CC_GeneralOperationParameter [2..*] 

valuesOfGroup from CC_ParameterValueGroup [1] 
(associations inherited from CC_GeneralOperationParameter) 

Public attributes: 
Attribute name UML identifier Data type Oblig

ation
Maxi-
mum 
Occur
-rence 

Attribute description 

Operation parameter 
group name 

groupName CharacterString M 1 The name by which this operation 
parameter group is identified. 

Operation parameter 
group identifier 

groupID RS_Identifier O N Set of alternative identifications of 
this operation parameter group. The 
first groupID, if any, is normally the 
primary identification code, and any 
others are aliases. 

Maximum 
occurrences 

maximumOccurs Integer O 1 The maximum number of times that 
values for this parameter group or 
parameter can be included. If this 
attribute is omitted, the minimum 
number is one. 

Operation parameter 
remarks 

remarks CharacterString O 1 Comments on or information about 
this operation parameter group, 
including source information. 

 
Table 51 — Defining elements of CC_OperationParameter class 

Description:  The definition of a parameter used by an operation method. Most parameter values are numeric, but 
other types of parameter values are possible. 

Stereotype:   (none) 
Derived from:  CC_GeneralOperationParameter 
Association roles: valueOfParameter from CC_ParameterValue [1] 

(associations inherited from CC_GeneralOperationParameter) 
Public attributes: 

Attribute name UML identifier Data type Oblig
ation

Maxi-
mum 
Occur
-rence 

Attribute description 

Operation parameter 
name 

parameterName CharacterString M 1 The name by which this operation 
parameter is identified. 

Operation parameter 
identifier 

parameterID RS_Identifier O 1 Set of alternative identifications of 
this operation parameter. The first 
parameterID, if any, is normally the 
primary identification code, and any 
others are aliases. 

Operation parameter 
remarks 

remarks CharacterString O 1 Comments on the operation parameter 
including source information 

 



OGC 03-073r1 

62 © OGC 2003 – All rights reserved
 

Table 52 — Defining elements of CC_GeneralParameterValue class 
Description:  Abstract parameter value or group of parameter values. 
Stereotype:   Abstract 
Derived from:  (none) 
Association roles: (composition) usesValue from CC_Operation [0..*] 

(composition) includesValue from CC_ParameterValueGroup [2..*] 
Public attributes: (none) 

 
Table 53 — Defining elements of CC_ParameterValueGroup class 

Description:  A group of related parameter values. The same group can be repeated more than once in an Operation 
or higher level ParameterValueGroup, if those instances contain different values of one or more 
ParameterValues which suitably distinquish among those groups. 

Stereotype:   (none) 
Derived from:  CC_GeneralParameterValue 
Association roles: (aggregation) includesValue to CC_GeneralParameterValue [2..*] 

valuesOfGroup to CC_OperationParameterGroup [1] 
(associations inherited from CC_GeneralParameterValue) 

Public attributes: (none) 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 63
 

Table 54 — Defining elements of CC_ParameterValue class 
Description:  A parameter value, ordered sequence of values, or reference to a file of parameter values. 
Stereotype:  Union 
Derived from:  CC_GeneralParameterValue 
Association roles:  valueOfParameter to CC_OperationParameter [1] 
 (associations inherited from CC_GeneralParameterValue) 
Public attributes: 

Attribute name UML 
identifier 

Data type Obligat
ion 

Maxi-
mum 
Occur
-rence 

Attribute description 

Operation parameter 
numeric value 

value Measure C 1 Numeric value of the coordinate 
operation parameter with its 
associated unit of measure. 

Operation parameter 
string value 

stringValue CharacterString C 1 String value of an operation 
parameter. A string value does not 
have an associated unit of measure. 

Operation parameter 
integer value 

integerValue Integer C 1 Positive integer value of an 
operation parameter, usually used 
for a count. An integer value does 
not have an associated unit of 
measure. 

Operation parameter 
Boolean value 

booleanValue Boolean C 1 Boolean value of an operation 
parameter. A Boolean value does 
not have an associated unit of 
measure. 

Operation parameter 
value list 

valueList Sequence<Measure> C 1 Ordered sequence of two or more 
numeric values of an operation 
parameter list, where each value 
has the same associated unit of 
measure. 

Operation parameter 
integer value list 

integerValueL
ist 

Sequence<Integer> C 1 Ordered sequence of two or more 
integer values of an operation 
parameter list, usually used for 
counts. These integer values do not 
have an associated unit of measure. 

Operation parameter 
file reference 

valueFile CharacterString C 1 Reference to a file or a part of a file 
containing one or more parameter 
values. When referencing a part of 
a file, that file must contain 
multiple identified parts, such as an 
XML encoded document. 
Furthermore, the referenced file or 
part of a file can reference another 
part of the same or different files, 
as allowed in XML documents. 

Condition: the provision of one and only one from this list is mandatory. 

 

13 Data Quality package 

13.1 Accuracy of coordinates and impact of transformations (informative) 

Information about the accuracy or precision of coordinates, or coordinate operations and 
of coordinate operation parameters, is quality information and shall be reported where 
possible in conformance with ISO 19115 and ISO 19114. 



OGC 03-073r1 

64 © OGC 2003 – All rights reserved
 

As discussed in Subclause 6.1, the parameters that define a coordinate reference system 
are chosen rather than measured to satisfy the degrees-of-freedom problem in the 
changeover from observation to coordinate quantities. Coordinate reference systems are 
therefore by definition error-free (i.e., non-stochastic). A coordinate reference system is 
realised through a network of control points. The coordinates of those control points, 
derived from surface and/or from satellite observations, are stochastic. Their accuracy 
can be expressed in a covariance matrix, which, due to the degrees-of-freedom problem, 
will have a rank deficiency, described in geodetic literature. 

Coordinate transformations between coordinate reference systems usually have parameter 
values derived from two sets of point coordinates, one set in system 1, the other set in 
system 2. As these coordinates are stochastic (i.e., have random-error characteristics) the 
derived transformation parameter values will also be stochastic. Their covariance matrix 
can be calculated. 

Coordinates that have not been ‘naturally’ determined in coordinate reference system 2, 
but have been determined in coordinate system 1 and then transformed to system 2, have 
the random error effects of the transformation superimposed on their original error 
characteristics. It may be possible in well-controlled cases to calculate the covariance 
matrices of the point coordinates before and after the transformation, and thus isolate the 
effect of the transformation, but in practice a user will only be interested in the accuracy 
of the final transformed coordinates. 

Nevertheless the option is offered to specify the covariance matrix of point coordinates 
resulting exclusively from the transformation. It is outside the scope of this document to 
describe how that covariance matrix should be used. Because a covariance matrix is 
symmetrical, only the upper or lower diagonal part (including the main diagonal) needs to 
be specified. 

For some transformations, this accuracy information is compacted in some assessment of 
an average impact on horizontal position and vertical position, allowing specification of 
average absolute accuracy and, when relevant and available, average relative accuracy. 
Hence separate quality measures may be specified for horizontal and for vertical position 
in those objects. 

13.2 UML schema of the DQ Data Quality package (normative) 

Figure 13 contains the UML class diagram for the DQ Data Quality package. Tables 55 
through 59 list the elements defining the object classes in this package. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 65
 

DQ_AbsoluteExternalPositionalAccuracy
+ result : Measure

DQ_CovarianceElement
+ rowIndex : Integer
+ columnIndex : Integer
+ covariance : Double

<<DataType>>

DQ_CovarianceMatrix
+ unitOfMeasure : Sequence<UnitOfMeasure>

1..n

1

+includesElement1..n

1

DQ_PositionalAccuracy
+ measureDescription [0..1] : CharacterString

<<Abstract>>

DQ_RelativeInternalPositionalAccuracy
+ result : Measure

 
Figure 13 — Data Quality package 

Table 55 — Defining elements of DQ_PositionalAccuracy class 
Description: Position error estimate (or accuracy) data. 
Stereotype: Abstract  
Derived from (none) 
Association roles: (none) 
Used by:  CC_CoordinateOperation 
Public attributes: 

Attribute name UML identifier Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Attribute description 

Accuracy measure 
description 

measureDescription CharacterString O 1 A description of the accuracy 
parameter(s) provided. 

 



OGC 03-073r1 

66 © OGC 2003 – All rights reserved
 

Table 56 — Defining elements of DQ_CovarianceMatrix class 
Description: Error estimate covariance matrix. 
Stereotype: (none)  
Derived from: DQ_PositionalAccuracy 
Association roles: (composition) includesElement from DQ_CovarianceMatrix [1..*] 
Used by:  (inherited from CC_CoordinateOperation) 
Public attributes: 

Attribute name UML identifier Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Attribute description 

Covariance units of 
measure 

unitsOf Measure Sequence<UnitOf
Measure> 

M 1 Ordered sequence of units of 
measure, corresponding with the 
row/column index numbers of the 
covariance matrix, starting with 
row/column 1 and ending with 
row/column N. Each unit of 
measure represents the ordinate 
reflected in the relevant row/column 
of the covariance matrix 

 
Table 57 — Defining elements of DQ_CovarianceElement class 

Description: An element of a covariance matrix. 
Stereotype: DataType  
Derived from: (none) 
Association roles: (composition) includesElement from DQ_CovarianceMatrix [1..*] 
Public attributes: 

Attribute name UML identifier Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Attribute description 

Row Identifier rowIndex Integer M 1 The row number of the covariance 
element 

Column Identifier columnIndex Integer M 1 The column number of the 
covariance element 

Covariance covariance Real M 1 The covariance element value 
 

Table 58 — Defining elements of DQ_AbsoluteExternalPositionalAccuracy class 
Description: Closeness of reported coordinate values to values accepted as or being true. 
Stereotype: (none)  
Derived from: DQ_PositionalAccuracy 
Association roles: (none) 
Used by:  (inherited from CC_CoordinateOperation) 
Public attributes: 

Element name UML identifier Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Absolute accuracy 
estimate 

result Measure M 1 A quantitative result defined by the 
evaluation procedure used, and 
identified by the 
measureDescription. 

 



OGC 03-073r173 

© OGC 2003 – All rights reserved 67
 

Table 59 — Defining elements of DQ_RelativeInternalPositionalAccuracy class 
Description: Closeness of the relative positions of two or more positions to their respective relative positions 

accepted as or being true. 
Stereotype: (none)  
Derived from DQ_PositionalAccuracy 
Association roles: (none) 
Used by:  (inherited from CC_CoordinateOperation) 
Public attributes: 

Attribute name UML identifier Data type Obliga-
tion 

Maxi-
mum 
Occur
-rence 

Description 

Relative accuracy 
estimate 

result Measure M 1 A quantitative result defined by the 
evaluation procedure used, and 
identified by the 
measureDescription. 

 



OGC 03-073r1 

68 © OGC 2003 – All rights reserved
 

Annex C 
(informative) 

 
Differences from ISO 19111 

EDITOR’S NOTE  This annex has not yet been updated from document 02-102. 

C.1 General re: UML Schema 

Inheritance of attributes is not dealt with consistently in ISO 19111 DIS. In the OGC 
model all common attributes and referenced objects have been placed in the highest level 
(abstract) superclass. This eliminates separate identifiers for 
SC_CoordinateReferenceSystem, SC_CompoundCRS, CC_Operation and 
CC_ConcatenatedOperation. 

Conflict with ISO 19111? 

None. It would not result in any conflict at the implementation level. Only apparent 
differences exist with the ISO 19111 DIS UML model. 

C.2 Coordinate Reference System subtypes 

ISO 19111 DIS do not mention subtypes of this class. OGC believes it crucial that this is 
done, as this subtyping has been part of geodetic practice for many years. The taxonomy 
is based on the way the effects of earth curvature are dealt with. This has a direct impact 
on the size of the area for which the coordinate reference system is suited. The main 
types are: 

geocentric, describing point locations in 3D space; suited to cover the entire earth 

geographic, describing point locations on or relative to a reference ellipsoid, 
approximating the geoid over a significant region of the earth. 

projected, treating the earth’s geometry as a flat plane, but carefully controlled distortion; 
typically suited for (parts of) countries. 

engineering, treating the earth’s surface as flat, disregarding earth curvature; suited for 
small areas 

Implemented in this document as an attribute with enumerated values. Might alternatively 
be implemented by subclassing, but this would result in a very complex model. A notable 
addition to the list not mentioned in ISO 19111 is the subtype ‘Temporal CRS’. 

Conflict with ISO 19111? 

Yes, although it could be seen as a permitted addition where ISO 19111 describes 
minimum requirements. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 69
 

C.3 Coordinate System subtypes 

ISO 19111 introduce subtyping at this level, showing however a mixed taxonomy. 
“Projected” is the outlier here. “Projected” refers to the way earth curvature is dealt with 
(see 2 above). The ISO taxonomy is, with this exception, by geometry of the coordinate 
frame. This document honours this subtyping, but adds some types, notably ‘linear CS’ 
and ‘temporal CS’. 

Conflict with ISO 19111? 

Yes, although it could be seen as a permitted addition where ISO 19111 describes 
minimum requirements. 

C.4 Derived Coordinate Reference Systems 

This document adds a concept that is not at all modeled in ISO 19111, viz. ‘Derived 
CRS’. Some CRSs cannot exist without the relationship with a source CRS having been 
defined, as is the case with a projected CRS. This requires the following changes to the 
ISO 19111 model: 

- a self-reference relationship in SC_CoordinateReferenceSystem, permitting a 
source CRS to be defined for a derived CRS. 

- a relationship between SC_CoordinateReferenceSystem and CC_Conversion, 
permitting the defining coordinate conversion to be specified. 

Making the two relationships from CC_CoordinateOperation to SC_CRS optional, to 
permit the source and target CRS to not be specified in the case of a Defining 
Conversion. Leaving these relationships mandatory would lead to a potential data 
conflict, as the information about source and target CRS would be duplicated. 

The ISO 19111 URL schema of figure B.1 in ISO 19111 documents a relationship 
between SC_CoordinateSystem and SC_Ellipsoid that is not described in the text. Since 
the same diagram shows a relationship to CC_Operation, equally not found back in the 
text, it is assumed that this is an (unsatisfactory) attempt to model projected CRSs. It is 
unsatisfactory because the document gives no indication how this is to be done. 
Furthermore, any literal implementation would result in a number of practical problems. 
It is for these reasons that the constructs in this document are proposed as an alternative, 
improved way to achieve inferred objective. 

Conflict with ISO 19111? 

Yes 

C.5 Coordinate operations 

Modelling detail has been added in the area of coordinate operations. A new superclass 
CC_CoordinateOperation has been created to capture the shared attributes and 



OGC 03-073r1 

70 © OGC 2003 – All rights reserved
 

relationships of the CC_Operation and CC_ConcatenatedOperation classes. In addition 
three more new classes have been created: 

- CC_OperationMethod 

- CC_OperationParameter 

- CC_ParameterValue 

One of the two reasons was normalisation, to avoid repetition of attribute values in 
instantiated objects. 

The more important reason was to create a structure that permits being prescriptive about 
what operation parameters are used by what method. It permits being prescriptive about 
the operation methods themselves. This part of the model comes close to the heart of 
coordinate transformation software. The prevalence of distributed computing necessitates 
standardisation in the data: a coordinate operation may be requested specifying an 
operation method that is not recognised by the server software. If it does recognise the 
method, it may not recognise the operation parameters quoted. Is the parameter called 
‘scale factor at central meridian’, ‘scale factor at natural origin’, ‘false magnification’, 
etc? The modelling construct proposed is derived from the EPSG data model, that has 
proven to be able to resolve this issue. 

Conflict with ISO 19111? 

Yes, but it is quite possible to interpret the extra classes as additional detail 
implementing the more general ISO 19111 model. 



OGC 03-073r173 

© OGC 2003 – All rights reserved 71
 

Bibliography 

[1] ISO 31 (all parts), Quantities and units. 

[2] ISO 1000, SI units and recommendations for the use of their multiples and of 
certain other units. 

[3] ISO 19112, Geographic information - Spatial referencing by geographic 
identifiers. 

[4] ISO 19113, Geographic information – Quality Principles. 

[5] ISO CD 19123, Geographic Information – Schema for Coverage Geometry and 
Functions. 

[6] OGC Document 02-102, The OpenGIS® Abstract Specification – Topic 2: Spatial 
Reference Systems. 


