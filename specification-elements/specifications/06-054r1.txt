
06-054r1 Geopositioning Service Folder/06-054r1 Image Geopositoning Service.doc
OGC 06-054r1

OGC 06-054r1



Open Geospatial Consortium Inc.

Date: 2006-07-03

Reference number of this document: OGC 06-054r1

Version: 0.0.0

Category: OpenGIS® Discussion Paper

Editor: Arliss Whiteside

OpenGIS® Image Geopositioning Service (IGS)

Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
To obtain additional rights of use, visit http://www.opengeospatial.org/legal/.


Warning


This document is not an OGC Standard. It is distributed for review and comment. It is subject to change without notice and may not be referred to as an OGC Standard.


Document type:
OpenGIS® Discussion Paper

Document subtype:
Draft RFC

Document stage:
Draft proposed version 0.0

Document language:
English

Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation.


Contents
Page

vi.
Preface


iii.
Submitting organizations
v

iv.
Document contributor contact points
v

v.
Revision history
vi

vi.
Changes to the OGC Abstract Specification
vi

vii.
Future work
vi

Foreword
vii

Introduction
viii

1
Scope
1

2
Compliance
1

3
Normative references
1

4
Terms and definitions
2

5
Conventions
3

5.1
Abbreviated terms
3

5.2
UML notation
4

5.3
Used parts of other documents
4

5.4
Platform-neutral and platform-specific specifications
4

5.5
Data dictionary tables
4

6
Image Geopositioning Service overview
4

6.1
Function
4

6.2
Operations
5

6.3
Operation request encoding
6

7
Triangulate operation (mandatory)
7

7.1
Introduction
7

7.2
Triangulate operation request
7

7.2.1
Triangulate request parameters
7

7.2.2
Triangulate request XML encoding (optional)
13

7.2.3
Triangulate request SOAP encoding (mandatory)
16

7.3
Triangulate operation response
16

7.3.1
Introduction
16

7.3.2
Acknowledgement message contents
16

7.3.3
Acknowledgement message XML encoding
17

7.3.4
Acknowledgement message SOAP encoding
18

7.3.5
OperationResponse message contents
18

7.3.6
OperationResponse message XML encoding (optional)
19

7.3.7
OperationResponse message SOAP encoding (mandatory)
20

7.3.8
Triangulate operation exceptions
20

8
GetCapabilities operation (mandatory)
20

8.1
Introduction
20

8.2
GetCapabilities operation request
21

8.2.1
GetCapabilities request contents
21

8.2.2
GetCapabilities request KVP encoding (mandatory)
21

8.2.3
GetCapabilities request XML encoding (optional)
22

8.2.4
GetCapabilities request SOAP encoding (mandatory)
22

8.3
GetCapabilities operation response
22

8.3.1
Exceptions
22

8.3.2
Normal response contents sections
23

8.3.3
OperationsMetadata section standard contents
23

8.3.4
Contents section contents
24

8.3.5
Capabilities document XML encoding (optional)
26

8.3.6
Capabilities document XML example
28

8.3.7
Capabilities document SOAP encoding (mandatory)
28

Annex A (normative)  Abstract test suite
29

Annex B (normative)  XML Schema Documents
30

Annex C (informative)  UML model
31

C.1
Introduction
31

C.2
UML packages
31

C.3
Image Geopositioning Service package
33

C.4
Triangulate package
34

C.4
IGS Get Capabilities package
35

Annex D (normative)  SOAP transfer
37

Bibliography
38




Figures
Page

6Figure 1 — IGS interface UML diagram


Figure 2 — Triangulate operation request UML diagram
8

Figure 3 — Acknowledgement UML diagram
17

Figure 4 — IGS contents section UML class diagram
25

Figure C.1 — IGS interface UML diagram
31

Figure C.2 — IGS interface package diagram
32

Figure C.3 — Image Geopositioning Service package class diagram
33

Figure C.4 — Triangulate package class diagram
34

Figure C.5 — IGS Get Capabilities package class diagram
36


Tables
Page

6Table 1 — Operation request encoding


Table 2 — Parameters in Triangulate operation request
9

Table 3 — Parts of ControlValues data structure
10

Table 4 — Parts of ControlValue data structure
11

Table 5 — Required contents of Triangulate InputData
12

Table 6 — Contents of Acknowledgement data structure
17

Table 7 — Required contents of Triangulate operation response message
19

Table 8 — Exception codes for Triangulate operation
20

Table 9 — Implementation of parameters in GetCapabilities operation request
21

Table 10 — Section name values and contents
23

Table 11 — Required values of OperationsMetadata section attributes
23

Table 12 — Parameters included in Contents section
26




i. Preface


This is a draft Implementation Specification for an Image Geopositioning Service (IGS) that performs triangulation and is an OGC Web Service (OWS). This service uses a GML Image Geopositioning Metadata Application Schema, which is separately specified so it can also be used by other OGC Web Services.


NOTE 
This service might alternately be named Image Triangulation Service, Image Registration Service, or Image Adjustment Service.


Suggested additions, changes, and comments on this draft are welcome and encouraged. Such suggestions may be submitted by email message or by making suggested changes in an edited copy of this document.


Document terms and definitions


This document uses the specification terms defined in Subclause 5.3 of [OGC 05-008], which is based on the ISO/IEC Directives, Part 2. Rules for the structure and drafting of International Standards. In particular, the word “shall” (not “must”) is the verb form used to indicate a requirement to be strictly followed to conform to this specification.

ii. Submitting organizations


The following organizations submitted this document to the Open Geospatial Consortium Inc.

BAE Systems E&IS

iii. Document contributor contact points


All questions regarding this document should be directed to the editor or the contributors:


		Name

		Organization



		Arliss Whiteside

		BAE Systems E&IS





iv. Revision history


		Date

		Release

		Editor

		Primary clauses modified

		Description



		2006-06-05

		0.0.0

		Arliss Whiteside

		All

		First draft



		2006-07-03

		0.0.0

		Arliss Whiteside

		3, 8.3, D

		Minor improvements of SOAP encoding





v. Changes to the OGC Abstract Specification


The OpenGIS® Abstract Specification does not require any changes to accommodate the technical contents of this document.

vi. Future work

Improvements in this document are desirable for:

a) Examples. An extension is desirable to include example XML documents.


b) Stereoscopic pairs of images. Evaluate pairs of images that are expected to be exploited stereoscopically.

c) Correct extracted positions. Compute coordinate Transformations that should be applied to all the positions previously extracted from the newly adjusted images using the now-superseded georeferencing coordinate Transformations.

Foreword


This document does not replace any previous OGC document, in whole or in part. This service uses a GML Image Geopositioning Metadata Application Schema that is separately specified. This service is a specific Geodata Registration Service as described in Section 3.6 of OGC Abstract Specification Topic 15: Image Exploitation Services [OGC 00-115]. This service is designed to support the Register Images use case described in Section 2.1.2.5 of OGC Abstract Specification Topic 15: Image Exploitation Services [OGC 00-115].


This document includes three annexes; Annexes A, B, and D are normative, and Annex C is informative.


Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. The OGC shall not be held responsible for identifying any or all such patent rights.


Introduction


This document specifies the interface to an Image Geopositioning Service that adjusts the georeferencing coordinate transformations of multiple images. This adjustment is normally done using a photogrammetric triangulation process, although other methods could be used. Such triangulation adjusts the parameter values of the image georeferencing coordinate transformations using a least-squares fitting process to measured image positions with known error statistics.


In addition to using existing approximate image georeferencing coordinate transformations, such triangulation uses the measured image positions of multiple object (or ground) points. Control points and tie points can be used. A control point has a measured position with position error statistics in one or more images, and a known position with error statistics in some object or “ground” Coordinate Reference System (CRS), assumed to be a GeodeticCRS. A tie point has a measured position with error statistics in two or more images, but not a known position in any object CRS.

This Image Geopositioning Service interface specifies two operations that can be requested by clients. The GetCapabilities operation allows a client to get server metadata. The Triangulate operation performs a triangulation, adjusting the parameter values of one or more image georeferencing coordinate transformations that are input with associated error statistics. The Triangulate operation inputs also include measured image positions and known object point positions, all with associated error statistics.

OpenGIS® Image Geopositioning Service (IGS)

1 Scope


This document specifies the interface to an Image Geopositioning Service (IGS) that adjusts the georeferencing coordinate transformations of multiple images. This Image Geopositioning Service (IGS) is an OGC Web Service (OWS). This service uses a GML Image Geopositioning Metadata Application Schema that is separately specified.


2 Compliance

Compliance with this specification shall be checked using all the relevant tests specified in Annex A (normative).

3 Normative references


The following normative documents contain provisions that, through reference in this text, constitute provisions of this document. For dated references, subsequent amendments to, or revisions of, any of these publications do not apply. For undated references, the latest edition of the normative document referred to applies.


ISO 19105:2000, Geographic information — Conformance and Testing

ISO 19123:2004, Geographic information — Schema for coverage geometry and functions

W3C Recommendation 24 June 2003, SOAP version 1.2, Part 1: Messaging Framework

OGC 05-070r3, OWS Common change request: Add DCP discussion

OGC 05-103, Geographic information — Spatial referencing by coordinates (ISO/DIS 19111)

OGC 05-105, Geographic information — Geography Markup Language (GML) (version 3.2, ISO/DIS 19136)

OGC 06-015r2, OWS Common change request: Add Manifest specification

OGC 06-055, GML 3.2 image geopositioning metadata application schema

OGC 06-056, OWS Common change request: Add input and output specifications

OGC 05-008, Web Services Common Specification, extended version 1.0

This OWS Common Specification contains a list of normative references that are also applicable to this Implementation Specification.

In addition to this document, this specification includes several normative XML Schema Document files as specified in Annex B.

4 Terms and definitions


For the purposes of this specification, the definitions specified in Clause 4 of the OWS Common Implementation Specification [OGC 05-008] and in OpenGIS® Abstract Specification Topic 2 [OGC 05-103] shall apply. In addition, the following terms and definitions apply.


covariance matrix



detailed form of position accuracy data, sometimes called a variance-covariance matrix (adapted from USIGS Glossary)

NOTE 1
For three object (or ground) coordinates, a covariance matrix is a 3 by 3 matrix, with the matrix rows and columns each corresponding to the three coordinates. For just two horizontal object coordinates, a covariance matrix is a 2 by 2 matrix, with the matrix rows and columns each corresponding to the two horizontal coordinates. Similarly, for two image coordinates, a covariance matrix is a 2 by 2 matrix, with the matrix rows and columns each corresponding to the two image coordinates.

NOTE 2
The covariance matrix cells contain the expected average values of the product of the error in the matrix row coordinate times the simultaneous error in the matrix column coordinate. For absolute accuracy, the diagonal matrix cells contain the error variances of the corresponding object (or ground) coordinates, or the squares of the standard deviations. The off-diagonal cells contain the covariances between the errors in the corresponding object coordinates; these covariances will be zero when the errors in different coordinates are not statistically correlated. All covariance matrices are symmetrical, meaning that the same cell values appear on both sides of the diagonal cells.

NOTE 3
Covariance matrices can be used to record absolute and/or relative accuracies. A covariance matrix for relative accuracy uses the three (or two) coordinates of one point for matrix rows and the three (or two) coordinates of the second point for matrix columns. A complete covariance matrix for N specific points would contain 3N rows by 3N columns.

georeferencing transformation


coordinate transformation that can be used to convert grid coordinate values to values of coordinates referenced to a coordinate reference system that is related to the earth by a datum (adapted from ISO 19123)

image geopositioning


adjustment of the parameter values of image georeferencing coordinate transformations to produce correct coordinates in a coordinate reference system that is related to the earth

transformation



approximate transformation of position coordinates from one Spatial Reference System (SRS) to another


NOTE 
For example, this term is used when the transformation coefficients are determined by least squares adjustment. This term is strictly used only when the transformation is known only approximately. This term is loosely used when the transformation is known either approximately or exactly.

triangulation


adjustment of the parameter values of two or more image georeferencing coordinate transformations by least-squares fitting to measured image points and usually known object (or ground) control points

photogrammetry



science of mensuration and geometric adjustment of an aerial photograph or satellite image (adapted from USIGS Glossary)

NOTE 1
Photogrammetry requires: a mathematical model of the image formation process, computation of the internal geometry of an image, and subsequent correction of imagery based upon the ground relationship for every part of the image. Correction of imagery based on computational algorithms and measurement of geometrical position in an image.


NOTE 2
Effective photogrammetry makes use of ground control by which aerial photographs are carefully compared and registered to the locations and characteristics of features identified in ground-level surveys.


5 Conventions


5.1 Abbreviated terms


CRS
Coordinate Reference System

GML
Geography Markup Language


HTTP 
Hypertext Transfer Protocol


IGS
Image Geopositioning Service

ISO
International Organization for Standardization


KVP
Keyword Value Pair


OGC
Open Geospatial Consortium


OWS
OGC Web Service, or Open Web Service


SOAP
Simple Object Access Protocol (no longer used)

TBD
To Be Determined


TBR
To Be Reviewed


UML
Unified Modeling Language


URI
Universal Resource Identifier


URL
Uniform Resource Locator


XML
Extensible Markup Language


5.2 UML notation


Most diagrams that appear in this specification are presented using the Unified Modeling Language (UML) static structure diagram, as described in Subclause 5.2 of [OGC 05-008].


5.3 Used parts of other documents


This document uses significant parts of document [OGC 05-008]. To reduce the need to refer to that document, this document copies some of those parts with small modifications. To indicate those parts to readers of this document, the largely copied parts are shown with a light grey background (15%).

5.4 Platform-neutral and platform-specific specifications


As describe in proposed Subclause 5.4 of OWS Common [OGC 05-070r3], this document includes both platform-neutral and platform-specific specifications. This document first specifies each operation request and response, and each other parameter or data structure, in platform-neutral fashion. This is done using a table for each data structure, which lists and defines the parameters and other data structures contained.

EXAMPLES 1
Platform-neutral specifications are contained in Subclauses 7.2.1, 7.3.2, 8.3.2, and 8.3.4.

The specified platform-neutral data can be encoded in many alternative ways, each appropriate to one or more specific platforms. This document now specifies encoding appropriate for use of HTTP GET transfer of operations requests (using KVP encoding), and for use of HTTP POST transfer of operations requests (using XML or KVP or SOAP encoding).

EXAMPLES 2
Platform-specific specifications for XML encoding are contained in Subclauses 7.2.2, 7.3.2, and 8.3.5.


5.5 Data dictionary tables


The UML model data dictionary is specified herein in a series of tables, as described in Subclause 5.5 of OWS Common [OGC 05-070r3].

6 Image Geopositioning Service overview


6.1 Function


The specified Image Geopositioning Service (IGS) adjusts the georeferencing coordinate transformations of multiple images. This adjustment is normally done using a photogrammetric triangulation process, although other methods could be used. Such triangulation adjusts the parameters of the image georeferencing coordinate transformations using a least-squares fitting process to measured image positions. This triangulation starts with an existing approximate image georeferencing coordinate transformation for each image, with parameter error statistics for the parameters that can be adjusted.

In addition to using approximate image georeferencing coordinate transformations, such triangulation uses the measured image positions of multiple object (or ground) points. Control points and tie points can be used. A control point has a measured position with known position error statistics in one or more images, and a known position with error statistics in some object or “ground” Coordinate Reference System (CRS). Such as object CRS is assumed to be a GeodeticCRS. A tie point has a measured position with error statistics in two or more images, but not a known position in any object (CRS).


NOTE 1
Photogrammetric triangulation of images, also called aerial triangulation, block triangulation, or analytical triangulation, is a widely-known and frequently-used process. It is the subject of Section 11.2 (more than 40 pages) in the Fifth Edition (2004) of the Manual of Photogrammetry, published by the American Society for Photogrammetry and Remote Sensing. (Triangulation was the subject of several pages in the Third Edition [1966] of this Manual of Photogrammetry.)

NOTE 2
If a control point has a known position in a ProjectedCRS, that position can be converted to a GeodeticCRS, together with its error statistics.

The error statistics are in the form of covariance matrices, also called variance-covariance matrices, together with the (most-likely) values to which the covariance matrices apply. The matrices contain the variance of each measured and estimated value, and the covariances between these values. These measured and/or estimated values include point position coordinates in images and in object CRSs. They also include various parameters in georeferencing coordinate transformations, including the camera 3D position coordinates and 3D orientation angles.

NOTE 3
Such covariance matrices for single point coordinates are described in Table D.33 of [ISO/TS 19138 draft n1934].


This service uses a GML Image Geopositioning Metadata Application Schema that is separately specified. This service is a specific Geodata Registration Service as described in Section 3.6 of OGC Abstract Specification Topic 15: Image Exploitation Services [OGC 00-115]. This service is designed to support the Register Images use case described in Section 2.1.2.5 of OGC Abstract Specification Topic 15: Image Exploitation Services [OGC 00-115].


6.2 Operations


The IGS interface (currently) specifies two operations that can be requested by a client and performed by an IGS server. Those operations are:


d) Triangulate (required implementation by servers) – This operation performs triangulation computations, adjusting the parameters of the one or more image georeferencing coordinate transformations that are input with associated parameter error statistics. The Triangulate operation inputs also include the measured image positions and known object point positions, all with associated position error statistics.


e) GetCapabilities (required implementation by servers) – This operation allows a client to request and receive back service metadata (or Capabilities) documents that describe the abilities of the specific server implementation. This operation also supports negotiation of the specification version being used for client-server interactions.


These operations have many similarities to other OGC Web Services, including the WMS, WFS, and WCS. Many of these interface aspects that are common with other OWSs are thus specified in the OpenGIS® Web Services Common Implementation Specification [OGC 05-008]. Many of these common aspects are normatively referenced herein, instead of being repeated in this specification.


Figure 2 is a simple UML diagram summarizing the IGS interface. This class diagram shows that the ImageGeopositioningService interface class inherits the getCapabilities operation from the OGCWebService interface class, and adds the “triangulate” operations. (This capitalization of names uses the OGC/ISO profile of UML.) A more complete UML model of the IGS interface is provided in Annex C (informative).


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


Each server instance instantiates only one object of this class, and 


this object always exists while server is available.


ImageGeopositioningService


+ Triangulate(request = Triangulate) : TriangulateResponse




Figure 1 — IGS interface UML diagram


NOTE 
In this UML diagram, the request and response for each operation is shown as a single parameter that is a data structure containing multiple lower-level parameters, which are discussed in subsequent clauses. The UML classes modelling these data structures are included in the complete UML model in Annex C.


6.3 Operation request encoding

The encoding of operation requests shall use SOAP, HTTP GET with KVP encoding, and HTTP POST with XML encoding as specified in Clause 11 of [OGC 05-008]. Table 1 summarizes the three Service operations and their encoding methods defined in this specification.


Table 1 — Operation request encoding

		Operation name

		Request encoding



		GetCapabilities (mandatory)

		KVP and optional SOAP, XML



		Triangulate (mandatory)

		SOAP and optional XML 





Each of these operations is described in more detail in subsequent clauses.


7 Triangulate operation (mandatory)


7.1 Introduction


The mandatory Triangulate operation allows IGS clients to request triangulation computations, and receive back the results. The parameters of one or more image georeferencing coordinate transformations are input with associated parameter error statistics, and similar adjusted data is output. The Triangulate operation inputs also include the measured image positions and known object point positions, all with associated position error statistics. The estimated actual image and object positions resulting from the triangulation are also output, with associated position error statistics.

NOTE 
If the image georeferencing coordinate transformation of only one image is input for adjustment, this is normally called image “resection” instead of “triangulation”.

7.2 Triangulate operation request


7.2.1 Triangulate request parameters


A request to perform the Triangulate operation shall use the data structure shown in the UML diagram in Figure 2. The attributes and associations of the three new classes shall include the parameters and data structures listed and defined in Table 2 through Table 4.

RequestBase {Abstract}


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Get Capabilites)


IGSRequestBase


+ service : CharacterString = "IGS" {frozen}()


(from IGS Service)


InputData


(from OWS Input Output Data)


Triangulate


+ store [0..1] : Boolean


+ responseHandler [0..1] : URL


1


1


+inputData


1


1


ControlValue


+ name : CharacterString


+ value : Any


ControlValues


+ minimumIterations : PositiveInteger


+ maximumIterations : PositiveInteger


+ detectConvergence : Boolean


+ extraIterations [0..1] : PositiveInteger


+ useElevationData : Boolean


+ removeTiePointBlunders : Boolean


+ removeHorizontalBlunders : Boolean


+ removeVerticalBlunders : Boolean


1


1


+controlValues


1


1


0..*


1


+controlValue


0..*


1




Figure 2 — Triangulate operation request UML diagram


NOTE 1
To reduce the need for readers to refer to other documents, the first three parameters listed below are largely copied from Table 21 in Subclause 9.2.1 of [OGC 05-008].

Table 2 — Parameters in Triangulate operation request


		Names

		Definition

		Data type and values

		Multiplicity and use



		service


service

		Service type identifier

		Character String type, not empty


Value is OWS type abbreviation, namely “IGS” 

		One (mandatory)



		request


request

		Operation name

		Character String type, not empty


Value is operation name, namely “Triangulate”

		One (mandatory)



		version


version

		Specification version for operation

		Character String type, not empty


Value is specified by each Specification and Schemas version

		One (mandatory)



		inputData


InputData

		Input data to this triangulation execution a

		InputData type, see Subclause 13.5 in OGC 06-056

		One (mandatory)



		control‌Values


Control‌Values

		Values of quantities to be used to control triangulation computations

		ControlValues data structure, see Table Table 3

		One (mandatory)



		store

store

		Specifies if transformed data to be stored as remote resource 

		Boolean


Values are: true or false

		Zero or one (optional)


Default is false (return directly in response)



		response‌‌Handler


Response‌‌Handler

		Address to respond to when server has completed processing this operation request

		URL

		Zero or one (optional)


Include to process operation request asynchronously b



		a
This input data shall include the approximate georeferencing coordinate transformation parameter values, with parameter error statistics, as specified in Table 5. This input data shall also include object point positions in image coordinates and optionally in object coordinates, with position error statistics, as also specified in Table 5.


b
When this parameter is omitted in the operation request, this operation shall be executed synchronously and immediately by the server, with the operation response returned to the client following operation execution. When this parameter is included, this operation shall be processed asynchronously by the server. In that case, the server shall return an operation acknowledgement to the client immediately following operation acceptance. When operation execution is later completed, the (normal or exception) operation response shall be sent by the server to the response handler address provided by this parameter value.





Table 3 — Parts of ControlValues data structure

		Names

		Definition

		Data type

		Multiplicity and use



		minimumIterations

MinimumIterations

		Minimum number of triangulation computation iterations to be executed, when no errors detected

		PositiveInteger

		One (mandatory)



		maximumIterations


MaximumIterations

		Maximum number of triangulation computation iterations to be executed, when no errors detected

		PositiveInteger

		One (mandatory)



		detectConvergence

DetectConvergence

		Automatically detect convergence of triangulation computation iterations a

		Boolean

		One (mandatory)



		extraIterations

ExtraIterations

		Number of extra iterations to be executed after automatically detect convergence

		PositiveInteger

		Zero or more (optional)


Include when detecting convergence



		useElevationData

UseElevationData

		Use elevation coverage to estimate tie point and horizontal control point vertical coordinates, until convergence automatically detected

		Boolean





		removeTiePoint‌Blunders

RemoveTiePoint‌Blunders

		Automatically detect tie point measurement blunders, and remove these points in following iterations b

		Boolean

		One (mandatory)



		removeHorizontal‌Blunders

RemoveHorizontalBlunders

		Automatically detect control point horizontal position blunders, and remove these points in following iterations

		Boolean

		One (mandatory)



		removeVertical‌Blunders

RemoveVertical‌Blunders

		Automatically detect control point vertical coordinate blunders, and remove these points in following iterations

		Boolean

		One (mandatory)



		controlValue


ControlValue

		Value of one server-specific quantity to be used to control triangulation computations

		ControlValue data structure, see Table 4

		Zero or more (optional)


Include when default value not desired a



		a
 One or more server-specific control values can specify parameters to be used in the convergence detection criterion.

b
One or more server-specific control values can specify parameters to be used in the blunder detection criteria.

c
Each server-specific control quantity shall have a default value that often allows the triangulation computations to be completed.





Table 4 — Parts of ControlValue data structure

		Names

		Definition

		Data type

		Multiplicity



		name


name

		Name or identifier of this server-specific control quantity

		CharacterString type a

		One (mandatory)



		value


(anonymous)

		Value of this server-specific control quantity 

		Any type b

		One (mandatory) 



		a
 The name of each allowed server-specific control quantity shall be clearly specified by each server.

b
The value type, units, and allowed range of each server-specific control quantity shall be clearly specified by each server.





More precisely, the contents included or referenced in that InputData element in the Triangulate operation request shall include the objects (or instances) from the classes listed in Table 5, most of which are specified in the GML Image Geopositioning Metadata Application Schema [OGC 06-055].


Table 5 — Required contents of Triangulate InputData

		Class name a

		Include object for each:



		ImageOrientation

		ImageOrientation object for each image to be adjusted in this triangulation



		ImageParameterValues b

		Original ImageParameterValues object associated from above ImageOrientation objects, AND


Last adjusted ImageParameterValues object associated from above ImageOrientation objects



		Point

		Point objects associated from above ImageParameterValues objects



		Curve

		Curve objects associated from above ImageParameterValues objects



		AdjustableParameters

		AdjustableParameters to be used in this triangulation and associated from new ImageParameterValues objects produced



		EqualParameters

		All EqualParameters to be used in this triangulation and associated from AdjustmentGroup object produced



		TBD

		All sensor-model-specific objects associated from above ImageParameterValues objects



		SensorParameterValues b

		Original SensorParameterValues object associated from above ImageParameterValues objects c, AND


Last adjusted SensorParameterValues object associated from above ImageParameterValues objects



		ObjectImage‌Transformation

		ObjectImageTransformation object associated to above ImageParameterValues objects



		ObjectPoint

		ObjectPoint object associated from above ImageOrientation objects



		ImagePosition

		ImagePosition object associated from above ObjectPoint objects that was measured in one of the images being triangulated



		ObjectPosition

		ObjectPosition object associated from above ObjectPoint objects that is the measured position for a control point, OR

ObjectPosition object associated from above ObjectPoint objects that is the last estimated or validated position (if any) for a tie point or check point



		CovarianceMatrix b

		CovarianceMatrix object associated from ImagePosition, ObjectPosition, original ImageParameterValues, and original SensorParameterValues objects included as listed above 



		ElevationCoverage

		Elevation data to be used estimate tie point and horizontal control point vertical coordinates, until convergence automatically detected (optional)



		a
These class names omit the UML package prefixes. The XML element names are the same (without prefixes).


b
Since this class is abstract, objects shall be of one of the multiple non-abstract subclasses of this class.


c
Shall be included only if one or more of the SensorParameters is being adjusted in this triangulation.





The Triangulate operation shall be implemented by all IGS servers and clients. The “Multiplicity and use” columns in Table 2 through Table 4 specify the optionality of each listed parameter and data structure in the Triangulate operation request. All the “mandatory” parameters and data structures shall be implemented by all IGS clients, using a specified value(s). Similarly, all the “mandatory” parameters and data structures shall be implemented by all IGS servers, checking that each request parameter or data structure is received with any specified value(s).

All the “optional” parameters and data structures, in the Triangulate operation request, should be implemented by all IGS clients using specified values, when that parameter or data structure applies. The “store” and “responseHandler” parameters shall be implemented by all IGS servers. All the other “optional” parameters and data structures shall be implemented by all IGS servers to which that parameter or data structure applies.


7.2.2 Triangulate request XML encoding (optional)


IGS servers can implement HTTP POST transfer of the Triangulate operation request, using XML encoding only. The following schema fragment specifies the contents and structure of a Triangulate operation request encoded in XML:



<element name="Triangulate" type="igs:TriangulateType">




<annotation>





<documentation>XML encoded Triangulate operation request. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </documentation>




</annotation>



</element>



<!-- =========================================================== -->



<complexType name="TriangulateType">




<sequence>





<element ref="ows:InputData">






<annotation>







<documentation>Input data to this triangulation execution. This input data shall include the approximate georeferencing coordinate transformation parameter values, with parameter error statistics, as specified in Table 5 of the IGS specification. This input data shall also include ground point positions in image coordinates and optionally in ground coordinates, with position error statistics, as also specified in Table 5. </documentation>






</annotation>





</element>





<element ref="igs:ControlValues"/>





<element name="ResponseHandler" type="anyURI" minOccurs="0">






<annotation>







<documentation>Address to respond to when server has completed processing this operation request. When this parameter is omitted in the operation request, this operation shall be executed synchronously and immediately by the server, with the operation response returned to the client following operation execution. When this parameter is included, this operation shall be processed asynchronously by the server. In that case, the server shall return an operation acknowledgement to the client immediately following operation acceptance. When operation execution is later completed, the (normal or exception) operation response shall be sent by the server to the response handler address provided by this parameter value. </documentation>






</annotation>





</element>




</sequence>




<attribute name="service" type="string" use="required" fixed="IGS">





<annotation>






<documentation>Service type identifier, where the string value is the OWS type abbreviation, namely "IGS". </documentation>





</annotation>




</attribute>




<attribute name="version" type="string" use="required">





<annotation>






<documentation>Specification version for OWS version and operation. See Version parameter Subclause 7.3.1 of the OWS Common Specification for more information. </documentation>





</annotation>




</attribute>




<attribute name="store" type="boolean" use="optional" default="false">





<annotation>






<documentation>Specifies if the response coverage should be stored, remotely from the client at a network URL, instead of being returned within the operation response. This attribute should be included only if this operation parameter is supported by server, as encoded in the OperationsMetadata section of the Capabilities document. </documentation>





</annotation>




</attribute>



</complexType>



<!-- =========================================================== -->



<element name="ControlValues" type="igs:ControlValuesType">




<annotation>





<documentation>Values of quantities to be used to control triangulation computations. </documentation>




</annotation>



</element>



<!-- =========================================================== -->



<complexType name="ControlValuesType">




<sequence maxOccurs="unbounded">





<element name="MinimumIterations" type="positiveInteger">






<annotation>







<documentation>Minimum number of triangulation computation iterations to be executed, when no errors detected. </documentation>






</annotation>





</element>





<element name="MaximumIterations" type="positiveInteger">






<annotation>







<documentation>Maximum number of triangulation computation iterations to be executed, when no errors detected. </documentation>






</annotation>





</element>





<element name="DetectConvergence" type="boolean">






<annotation>







<documentation>Automatically detect convergence of triangulation computation iterations. One or more server-specific control values can specify parameters to be used in the convergence detection criterion. </documentation>






</annotation>





</element>





<element name="ExtraIterations" type="positiveInteger" minOccurs="0">






<annotation>







<documentation>Number of extra triangulation computation iterations to be executed after automatically detect convergence. </documentation>






</annotation>





</element>





<element name="UseElevationData" type="boolean">






<annotation>







<documentation>Use provided elevation coverage to estimate tie point and horizontal control point vertical coordinates, until triangulation computation convergence automatically detected. </documentation>






</annotation>





</element>





<element name="RemoveTiePointBlunders" type="boolean">






<annotation>







<documentation>Automatically detect tie point measurement blunders, and remove these points in following triangulation computation iterations. One or more server-specific control values can specify parameters to be used in this blunder detection criterion. </documentation>






</annotation>





</element>





<element name="RemoveHorizontalBlunders" type="boolean">






<annotation>







<documentation>Automatically detect control point horizontal position blunders, and remove these points in following triangulation computation iterations. One or more server-specific control values can specify parameters to be used in this blunder detection criterion. </documentation>






</annotation>





</element>





<element name="RemoveVerticalBlunders" type="boolean">






<annotation>







<documentation>Automatically detect control point vertical coordinate blunders, and remove these points in following triangulation computation iterations. One or more server-specific control values can specify parameters to be used in this blunder detection criterion. </documentation>






</annotation>





</element>





<element name="ControlValue" minOccurs="0" maxOccurs="unbounded">






<annotation>







<documentation>Value of one server-specific quantity to be used to control triangulation computations. </documentation>






</annotation>






<complexType>







<simpleContent>








<extension base="string">









<attribute name="name" type="string" use="required"></attribute>








</extension>







</simpleContent>






</complexType>





</element>




</sequence>



</complexType>


The constents of the InputData element shall be encoded in XML as psecified in the image geopositioning metadata application schema [OGC 06-055].


EXAMPLE 
An example Triangulate operation request XML encoded for HTTP POST is:


TBD

7.2.3 Triangulate request SOAP encoding (mandatory)


IGS servers shall implement SOAP version 1.2 transfer of the Triangulate operation request as specified in Annex D, using the XML encoding specified above.

EXAMPLE 
An example Triangulate operation request XML encoded for in a SOAP envelope is:


TBD

7.3 Triangulate operation response


7.3.1 Introduction


The Triangulate operation shall be executed in one of two ways, depending on the presence or absence of the ResponseHandler parameter in the operation request. If the ResponseHandler parameter is not included, then the IGS server shall execute the Triangulate operation immediately and then respond to the waiting client with an OperationResponse message. When an IGS server encounters an error while immediatley performing a Triangulate operation, it shall return an exception report message.

If the ResponseHandler parameter is included in the Triangulate operation request, then the IGS server should verify the request syntax and immediately respond to the client with an Acknowledgment message. When an IGS server encounters an error while immediately checking a Triangulate operation request, it shall immediately return an exception report message. Later, after the server has executed the Triangulate operation, it should generate an OperationResponse message and send it to the URL specified by the ResponseHandler parameter, using the protocol encoded therein. Common protocols are ftp for sending the response to a ftp server and mailto which may be used to send the response to an email address. When an IGS server encounters an error after sending an Acknowledgment message, it shall return an exception report message to the ResponseHandler.

7.3.2 Acknowledgement message contents

When the Triangulate operation is performed asynchronously, the immediate response to a valid operation request shall be an Acknowledgement message that shall use.the data structure shown in the UML diagram in Figure 3. The attributes and associations of the new class shall include the parameters and data structures listed and defined in Table 6.

Triangulate


Acknowlegement


+ timeStamp : DateTime


+operationRequest


1


0..1


1


0..1




Figure 3 — Acknowledgement UML diagram


Table 6 — Contents of Acknowledgement data structure

		Names a

		Definition

		Data type

		Multiplicity and use



		timeStamp

TimeStamp

		Data and time this Acknowledgement message generated

		DateTime type

		One (mandatory)



		operation‌Request

Operation‌Request

		Copy of Triangulate operation request being acknowledged

		Triangulate request data structure, see Table 2

		Zero or one (optional)


Include when expected to be useful to clients



		a
The name capitalization rules being used here are specified in Subclause 11.6.2 of [OGC 05-008].





7.3.3 Acknowledgement message XML encoding


IGS servers can implement XML encoded transfer of the Triangulate operation Acknowledgement response. An Acknowledgement message shall be encoded in XML as specified by the following schema fragment:


<element name="Acknowledgement" type="igs:AcknowledgementType">




<annotation>





<documentation>XML encoded acknowledgement of Triangulate operation request. </documentation>




</annotation>



</element>



<!-- =========================================================== -->



<complexType name="AcknowledgementType">




<sequence>





<element name="TimeStamp" type="dateTime">






<annotation>







<documentation>Data and time this Acknowledgement message generated. </documentation>






</annotation>





</element>





<element name="OperationRequest" type="igs:TriangulateType" minOccurs="0">






<annotation>







<documentation>Copy of Triangulate operation request being acknowledged. This copy should be included when expected to be useful to clients. </documentation>






</annotation>





</element>




</sequence>



</complexType>


7.3.4 Acknowledgement message SOAP encoding


IGS servers shall implement SOAP version 1.2 transfer of the Triangulate operation Acknowledgement response as specified in Annex D, using the XML encoding specified above.

EXAMPLE 
An example Acknowledgement message XML encoded for in a SOAP envelope is:


TBD

7.3.5 OperationResponse message contents

The normal response to a valid Triangulate operation request shall be an OperationResponse data structure [OGC 06-056[. This OperationResponse shall include the adjusted georeferencing coordinate transformation parameter values, with parameter error statistics, as specified in [OGC 06-055]. In addition this OperationResponse shall include the estimated object position coordinates for all object points, computed using the image positions and the final adjusted image parameter values. More precisely, this response shall include the items listed in Table 7.


Table 7 — Required contents of Triangulate operation response message

		Class name a

		Include object for each:



		AdjustedGroup

		AdjustedGroup object for triangulation performed



		EqualParameters

		EqualParameters used in this triangulation and thus associated from AdjustmentGroup object produced



		AdjustmentSummary

		AdjustmentSummary object for triangulation performed and thus associated with AdjustmentGroup object produced (encoded inline)



		ImageOrientation

		ImageOrientation object for each image adjusted in this triangulation



		ImageParameterValues b

		New adjusted ImageParameterValues object associated from above ImageOrientation objects



		Point

		Point objects associated from above ImageParameterValues objects



		Curve

		Curve objects associated from above ImageParameterValues objects



		AdjustableParameters

		AdjustableParameters used in this triangulation and associated from above ImageParameterValues objects



		ImageAccuracySummary

		ImageAccuracySummary associated from above ImageParameterValues objects (encoded inline)



		TBD

		All model-specific objects associated from above ImageParameterValues objects



		SensorParameterValues b

		New adjusted SensorParameterValues object associated from above ImageParameterValues objects c



		ImageSensor

		ImageSensor object associated to above SensorParameterValues objects c



		TBD

		All model-specific objects associated from above SensorParameterValues objects c



		ObjectPoint

		ObjectPoint object associated from above ImageOrientation objects



		ObjectPosition

		New ObjectPosition object associated from above ObjectPoint objects



		CovarianceMatrix b

		CovarianceMatrix object associated from above AdjustedGroup and ObjectPosition objects



		ObjectImage‌Transformation

		ObjectImageTransformation object associated to above ImageParameterValues objects



		a
These class names omit the UML package prefixes. The XML element names are the same (without prefixes).


b
Since this class is abstract, objects shall be of one of the multiple non-abstract subclasses of this class.

c
Shall be included only if one or more of the SensorParameters was adjusted in this triangulation.





7.3.6 OperationResponse message XML encoding (optional)

The normal response to a valid Triangulate operation request can be XML encoded as an OperationResponse message, as specified in Subclause 13.4 of [OGC 06-056]. The contents referenced by that message shall be encoded in XML as specified in Subclauses TBD and TBD of [OGC 06-055].

EXAMPLE 
An example XML encoded IGS OperationResponse XML encoded is:


TBD

7.3.7 OperationResponse message SOAP encoding (mandatory)

IGS servers shall implement SOAP version 1.2 transfer of the Triangulate operation response as specified in Annex D, using the XML encoding specified above.

EXAMPLE 
An example OperationResponse XML encoded for in a SOAP envelope is:


TBD

7.3.8 Triangulate operation exceptions


When an IGS server encounters an error while performing a Triangulate operation, it shall return an exception report message as specified in Subclause 7.4 of [OGC 05-008]. The allowed standard exception codes shall include those listed in Table 8. For each listed exceptionCode, the contents of the “locator” parameter value shall be as specified in the right column of Table 8.

NOTE 
To reduce the need for readers to refer to other documents, the first four values listed below are copied from Table 20 in Subclause 8.3 of [OGC 05-008].


Table 8 — Exception codes for Triangulate operation

		exceptionCode value

		Meaning of code

		“locator” value



		MissingParameterValue

		Operation request does not include a parameter value, and this server did not declare a default value for that parameter

		Name of missing parameter



		InvalidParameterValue

		Operation request contains an invalid parameter value

		Name of parameter with invalid value



		OptionNotSupported


		Request is for an option that is not supported by this server 

		Identifier of option not supported 



		NoApplicableCode

		No other exceptionCode specified by this service and server applies to this exception

		None, omit “locator” parameter



		DidNotConverge

		Iterative computation did not converge

		None, omit “locator” parameter



		ComputationError

		Computation error occurred during computation, such as overflow or underflow

		None, omit “locator” parameter





In addition to the exceptionCode values listed above, each IGS server can define and use server-specific exceptionCode values. Those server-specific exceptionCode values and their meanings shall be encoded using the ows:Parameter element in the OperationsMetadata section of the service metadata (Capabilities) document, see Subclause 8.3.3.

8 GetCapabilities operation (mandatory)

8.1 Introduction


The mandatory GetCapabilities operation allows clients to retrieve service metadata from a server. The response to a GetCapabilities request shall be an XML document containing service metadata about the server, including the coordinate Transformation, GeodeticCRS, and other computational abilities of this server. This clause specifies the XML document that an IGS server must return to describe its capabilities.


8.2 GetCapabilities operation request


8.2.1 GetCapabilities request contents

The GetCapabilities operation request shall be as specified in Subclauses 7.2 and 7.3 of [OGC 05-008]. The value of the “service” parameter shall be “IGS”. The allowed set of service metadata (or Capabilities) XML document section names and meanings shall be as specified in Tables 3 and 7 of [OGC 05-008]. For an IGS, the Contents section will contain metadata about the coordinate transformation and CRS abilities of this server (not about data that can be accessed from this server).

The GetCapabilities operation shall be implemented by all IGS servers and clients. The “Multiplicity and use” column in Table 1 of [OGC 05-008] specifies the optionality of each listed parameter in the GetCapabilities operation request. Table 9 specifies the implementation of those parameters by IGS clients and servers.

Table 9 — Implementation of parameters in GetCapabilities operation request


		Names

		Multiplicity

		Client implementation

		Server implementation



		service


service

		One (mandatory)

		Each parameter shall be implemented by all clients, using specified value

		Each parameter shall be implemented by all servers, checking that each parameter is received with specified value



		request


request

		One (mandatory)

		

		



		Accept‌Versions


Accept‌Versions

		Zero or one (optional)

		Should be implemented by all software clients, using specified values

		Shall be implemented by all servers, checking if parameter is received with specified value(s)



		Sections


Sections

		Zero or one (optional) b

		Parameter may be implemented by each client


If parameter not provided, shall expect default response


If parameter provided, shall allow default or specified response

		Parameter may be implemented by each server


If parameter not implemented or not received, shall provide default response


If parameter implemented and received, shall provide specified response



		update‌Sequence


update‌Sequence

		Zero or one (optional)

		Each parameter should not be implemented by each client

Client shall allow and expect default response

		Each parameter should not be implemented by each server


If parameter not implemented, shall provide default response






		Accept‌Formats


Accept‌Formats

		Zero or one (optional) 

		

		





8.2.2 GetCapabilities request KVP encoding (mandatory)


All IGS servers shall implement HTTP GET transfer of the GetCapabilities operation request, using KVP encoding as specified in Subclause TBD of [OGC 05-008].

EXAMPLE 1
To request a IGS capabilities document, a client could issue the following KVP encoded GetCapabilities operation request with near-minimum contents:


www.baesystems.com/webservice/igs&service=IGS&request=getCapabilities


EXAMPLE 2
The corresponding GetCapabilities operation request XML encoded for HTTP POST is:


TBD

8.2.3 GetCapabilities request XML encoding (optional)


IGS servers can implement HTTP POST transfer of the GetCapabilities operation request, using XML encoding only. The following schema fragment specifies the contents and structure of a GetCapabilities operation request encoded in XML:



<element name="GetCapabilities">




<annotation>





<documentation>Request to an IGS server to perform the GetCapabilities operation. This operation allows a client to retrieve a Capabilities XML document providing metadata for the specific IGS server. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </documentation>




</annotation>




<complexType>





<complexContent>






<extension base="ows:GetCapabilitiesType">







<sequence/>







<attribute name="service" type="ows:ServiceType" use="required" fixed="IGS"/>






</extension>





</complexContent>




</complexType>



</element>


EXAMPLE 
An example Triangulate operation request XML encoded for HTTP POST is:


TBD

8.2.4 GetCapabilities request SOAP encoding (mandatory)


IGS servers shall implement SOAP version 1.2 transfer of the GetCapabilities operation request as specified in Annex D, using the XML encoding specified above.

EXAMPLE 
An example GetCapabilities operation request XML encoded for in a SOAP envelope is:


TBD

8.3 GetCapabilities operation response


8.3.1 Exceptions


When an IGS server encounters an error while performing a GetCapabilities operation, it shall return an exception report message as specified in Clause 8 of [OGC 05-008]. The allowed exception codes shall include those listed in Table 5 of Subclause 7.4.1 of [OGC 05-008], except for the the InvalidUpdateSequence exceptionCode.

8.3.2 Normal response contents sections

The service metadata document shall contain the four optional sections specified in Table 10. Depending on the values in the Sections parameter of the GetCapabilities operation request, any combination of these sections can be requested and shall be returned when requested.


Table 10 — Section name values and contents


		Section name

		Contents



		ServiceIdentification

		Metadata about this specific server. The schema of this section shall be the same as for all OWSs, as specified in Subclause 7.4.3 and owsServiceIdentification.xsd of [OGC 05-008].



		ServiceProvider

		Metadata about the organization operating this server. The schema of this section shall be the same for all OWSs, as specified in Subclause 7.4.4 and owsServiceProvider.xsd of [OGC 05-008].



		OperationsMetadata

		Metadata about the operations specified by this service and implemented by this server, including the URLs for operation requests. The contents and organization of this section shall be the same as for all OWSs, as specified in Subclause 7.4.5 and owsOperationsMetadata.xsd of [OGC 05-008].



		Contents

		Metadata about the data served by this server. For the IGS, this section shall contain data about the coordinate Transformation, GeodeticCRS, and other computational abilities of this server, as specified in Subclauses 8.3.4 and 8.3.5 below.





In addition to these sections, each service metadata document shall include the mandatory “version” parameter specified in Table 6 in Subclause 7.4.1 of [OGC 05-008]. The optional update‌Sequence parameter specified in that table should not be included, as indicated in Table 9.

8.3.3 OperationsMetadata section standard contents


For an IGS, the OperationsMetadata section shall be the same (TBR) as for all OGC Web Services, as specified in Subclause 7.4.5 and owsOperationsMetadata.xsd of [OGC 05-008]. The mandatory values of various (XML) attributes shall be as specified in Table 11. In Table 11, the “Attribute name” column uses dot-separator notation to identify parts of a parent item. The “Attribute value” column references an operation parameter, in this case an operation name, and the meaning of including that value is listed in the right column.

Table 11 — Required values of OperationsMetadata section attributes


		Attribute name

		Attribute value

		Meaning of attribute value



		Operation.name

		Triangulate

		The Triangulate operation is implemented by this server.



		

		GetCapabilities

		The GetCapabilities operation is implemented by this server.





In addition to the optional values listed in Table 11, there are many optional values of the “name” attributes and “value” elements in the OperationsMetadata section, which may be included when considered useful. Most of these attributes and elements are for recording the domains of various parameters and quantities.


EXAMPLE 1
The domain of the exceptionCode parameter could record all the codes implemented for each operation by that specific server. Similarly, each of the GetCapabilities operation optional request parameters might have its domain recorded.


EXAMPLE 2
The domain of the Sections parameter in the GetCapabilities operation request could record all the sections implemented by that specific server.

For the Triangulate operation, an ows:Parameter element shall be included for each server-specific ControlValue quantity implemented by the server, as specified in Subclause 7.2.1, providing the quantity name, meaning, units if any, allowed values, and default value. Also, an ows:Parameter element shall be included for all server-specific triangulation results check values implemented, that can be named in the checkPassed and checkFailed elements specified in Table 11 in Subclause 8.2 of the image geopositioning metadata applications schema [OGC 06-055]. Similarly, an ows:Parameter element shall be included for the “exceptionCode” parameter, which shall list all the exceptionCode values implemented by that server.

All IGS servers shall specify the encodings that may be sent using HTTP POST transfer of operation requests, within the OperationsMetadata section of a service metadata (Capabilities) XML document. Specifically, an ows:Constraint element shall be included, with “PostEncoding” as the value of the “name” attribute and specifying different allowed values for each allowed encoding:


a) The value “SOAP” shall indicate that SOAP encoding is allowed, as specified in Subclause 11.8.


b) The value “XML” shall indicate that XML encoding is allowed (without SOAP message encapsulation).


If the HTTP POST connect point URL is different for different encodings of the operation requests, this ows:Constraint element shall be included in each Post element. If the connect point URL is the same for all encodings of all operation requests, this ows:Constraint element shall be included in the OperationsMetadata element.


8.3.4 Contents section contents


The Contents section for the IGS shall contain data about the coordinate Transformations, GeodeticCRSs, and other computational abilities of this server. The Contents section shall include or reference the data structures shown graphically in the UML diagram in Figure 4 and specified in Table 12.


+geodeticCS


IGSserviceMetadata


CC_OperationMethod


(from ISO 19111)


CC_GeneralOperationParameter


(from ISO 19111)


CS_GeodeticCS


(from ISO 19111)


SC_GeodeticCRS


(from ISO 19111)


IGScontents


<<DataType>>


CD_GeodeticDatum


(from ISO 19111)


1


+method


1..*


0..*


+usesParameter


0..*


0..*


0..*


+parameter


0..*


1


+coordinateSystem


0..*


+geodeticCRS


1..*


0..*


1


0..*


0..*


+contents0..10..1


1


0..*


1..*


0..*


0..*


1..*


0..*


0..*


0..*


0..*


0..*


0..*


0..*


0..*


1


+datum


1


0..*


0..*


+geodeticDatum


0..*


0..*




Figure 4 — IGS contents section UML class diagram


Table 12 — Contents of IGS Contents section


		Names

		Definition

		Data type 

		Multiplicity and use



		method

method

		Association to operation method that this server can use in object-to-image coordinate Transformations

		URI or CC_OperationMethod

		One or more (mandatory)


One for each such operation method implemented by this server



		parameter


parameter

		Association to operation parameter or group used by associated operation methods

		URI or CC_GeneralOperationParameter

		Zero of more (optional)


Include when used but not directly included by associated operation methods



		geodeticCRS

geodeticCRS

		Association to geodetic Coordinate Reference System (CRS) that this server can use for object positions and image parameters (TBR)

		URI or SC_GeodeticCRS

		One or more (mandatory)


One for each such CRS implemented by this server



		datum


datum

		Association to geodetic datum used by associated geodetic CRSs

		URI or CD_GeodeticDatum

		Zero of more (optional)


Include when used but not directly included by associated geodetic CRSs



		coordinate‌System


coordinate‌System

		Association to geodetic coordinate system used by associated geodetic CRSs

		URI or CS_GeodeticCS

		Zero of more (optional)


Include when used but not directly included by associated geodetic CRSs





The “Multiplicity and use” columns in Table 6 through Table 16 in [OGC 05-008], and in Table 12 of this document, specify the optionality of each listed parameter and data structure in the GetCapabilities operation response. All the “mandatory” parameters and data structures shall be implemented by all OWS servers, using a specified value(s).


All the “optional” parameters and data structures, in the GetCapabilities operation response, should be implemented by all OWS servers using specified values, whenever and wherever each is considered useful metadata for that server.


8.3.5 Capabilities document XML encoding (optional)

A XML schema fragment for an IGS service metadata document extends the ows:CapabilitiesBaseType in owsCommon.xsd of [OGC 05-008], and is:



<element name="Capabilities">




<annotation>





<documentation>XML encoded IGS GetCapabilities operation response. The Capabilities document provides clients with service metadata about a specific service instance, including metadata about the coordinate Transformation, GeodeticCRS, and other computational abilities of this server. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. </documentation>




</annotation>




<complexType>





<complexContent>






<extension base="ows:CapabilitiesBaseType">







<sequence>








<element ref="igs:Contents" minOccurs="0"/>







</sequence>






</extension>





</complexContent>




</complexType>



</element>



<!-- =========================================================== -->



<element name="Contents">




<complexType>





<sequence>






<element name="Method" type="gml:OperationMethodPropertyType" maxOccurs="unbounded">







<annotation>








<documentation>Unordered list of associations to the operation methods that this server can use in object-to-image coordinate Transformations. </documentation>







</annotation>






</element>






<element name="parameter" type="gml:OperationParameterPropertyType" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Association to operation parameter or group used by associated operation methods. Include for each operation parameter and group that is not directly included by associated operation methods. </documentation>







</annotation>






</element>






<element name="GeodeticCRS" type="gml:GeodeticCRSPropertyType" maxOccurs="unbounded">







<annotation>








<documentation>Unordered list of associations to the geodetic Coordinate Reference Systems (CRSs) that this server can use for object positions and image parameters (TBR). </documentation>







</annotation>






</element>






<element name="datum" type="gml:GeodeticDatumPropertyType" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Association to geodetic datum used by associated geodetic CRSs. Include for each geodetic datum that is not directly included by associated GeodeticCRS. </documentation>







</annotation>






</element>






<element ref="gml:ellipsoidalCS" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Association to ellipsoidal coordinate system used by associated geodetic CRSs. Include for each ellipsoidal coordinate system that is used but not directly included by associated GeodeticCRS. </documentation>







</annotation>






</element>






<element ref="gml:cartesianCS" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Association to cartesian coordinate system used by associated geodetic CRSs. Include for each cartesian coordinate system that is used but not directly included by associated GeodeticCRS. </documentation>







</annotation>






</element>






<element ref="gml:sphericalCS" minOccurs="0" maxOccurs="unbounded">







<annotation>








<documentation>Association to spherical coordinate system used by associated geodetic CRSs. Include for each spherical coordinate system that is used but not directly included by associated GeodeticCRS. </documentation>







</annotation>






</element>





</sequence>




</complexType>



</element>


8.3.6 Capabilities document XML example


In response to GetCapabilities operation request, an IGS server might generate a XML document that looks like:

TBD

8.3.7 Capabilities document SOAP encoding (mandatory)

IGS servers shall implement SOAP version 1.2 transfer of the GetCapabilities operation response as specified in Annex D, using the XML encoding specified above.

EXAMPLE 
An example Capabilities document XML encoded for in a SOAP envelope is:


TBD

Annex A
(normative)

Abstract test suite

An abstract test suite is not provided in this draft version of this Implementation Specification, but should be included in version 1.0.0.


Annex B
(normative)

XML Schema Documents

In addition to this document, this specification includes several normative XML Schema Documents. These XML Schema Documents are bundled in a zip file with the present document. After OGC acceptance of a Version 1.0.0 of this specification, these XML Schema Documents will also be posted online at the URL http://schemas.opengeospatial.net/igs/1.0.0. In the event of a discrepancy between the bundled and online versions of the XML Schema Documents, the online files shall be considered authoritative.

The IGS abilities now specified in this document use two specified XML Schema Documents included in the zip file with this document. These XML Schema Documents combine the XML schema fragments listed in various subclauses of this document. These XML Schema Documents roughly match two of the three UML packages described in Annex B, and are named:


igsTriangulate.xsd

igsGetCapabilities.xsd


These XML Schema Documents use and build on the OWS Common version 1.0 XML Schema Documents specified in [OGC 05-008], named:


ows19115subset.xsd


owsCommon.xsd

owsDataIdentification.xsd


owsExceptionReport.xsd


owsGetCapabilities.xsd


owsOperationsMetadata.xsd


owsServiceIdentification.xsd


owsServiceProvider.xsd

owsManifest.xsd [in change proposal OGC 06-015r2]

owsInputOutputData.xsd [in change proposal OGC 06-056]

All these XML Schema Documents contain documentation of the meaning of each element and attribute, and this documentation shall be considered normative as specified in Subclause 11.6.3 of [OGC 05-008].


Annex C
(informative)

UML model


C.1
Introduction


This annex provides a UML model of the IGS interface, using the OGC/ISO profile of UML summarized in Subclause 5.3 of [05-008].


Figure C.1 is a simple UML diagram summarizing the IGS interface. This class diagram shows that the ImageGeopositioningService class inherits the getCapabilities operation from the OGCWebService interface class, and adds the Triangulate operation. (The capitalization of names uses the OGC/ISO profile of UML.)


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


Each server instance instantiates only one object of this class, and 


this object always exists while server is available.


ImageGeopositioningService


+ Triangulate(request = Triangulate) : TriangulateResponse




Figure C.1 — IGS interface UML diagram


Each of the two operations uses a request and a response data type, each of which is defined by one or more additional UML classes. The following subclauses provide a more complete UML model of the IGS interface, adding UML classes defining the operation request and response data types.


C.2
UML packages


The IGS interface UML model is organized in three packages, as shown in the package diagram in Figure C.2. This package diagram shows the dependencies among the various packages shown. The IGS-specific packages make direct use of five OWS Common packages, named OWS Get Capabilities, OWS Service Identification, OWS Service Provider, OWS Operations Metadata, and OWS Input Output Data. These IGS-specific packages also make direct use of two classes from the ISO 19111 UML model, named CC_OperationMethod and SC_GeodeticCRS.

IGS Service


+ IGSRequestBase


+ ImageGeopositioningService


IGS Get Capabilities


+ IGSGetCapabilities


+ IGScontents


+ IGSserviceMetadata


IGS Triangulate


+ Acknowlegement


+ ControlValue


+ ControlValues


+ Triangulate


OWS Get Capabilites


(from OWS Common)


+ GetCapabilities {Abstract}


+ OGCWebService {Abstract}


+ RequestBase {Abstract}


+ Section


+ ServiceMetadata {Abstract}


OWS Input Output Data


(from OWS Common)


+ InputData


...


ISO 19111


(from ISO)


+ CC_OperationMethod


+ SC_GeodeticCRS


OWS Service Provider


(from OWS Common)


+ ServiceProvider


OWS Service 


Identification


(from OWS Common)


+ ServiceIdentification


OWS Operations Metadata


(from OWS Common)


+ DCP


+ ExtendedCapabilities {Abstract}


+ HTTP


+ Operation


+ OperationsMetadata


+ RequestMethod




Figure C.2 — IGS interface package diagram


Each of the three IGS-specific packages shown in Figure C.2 is described in the following subclauses. The OWS Get Capabilities, OWS Service Identification, OWS Service Provider, OWS Operations Metadata, and OWS Input Output Data packages are described in Annex B of [OGC 05-008] and Clause 13 of change proposals [OGC 06-015r2 and 06-056].


C.3
Image Geopositioning Service package


The Image Geopositioning Service package is shown in the class diagram in Figure C.3. This diagram does not show the classes used by the two operation requests and responses, which are shown (with part of this package) in the Triangulate and the IGS Get Capabilities packages. This diagram also shows two used classes from the OWS Web Service package, which is common to all OGC Web Services.

OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


Each server instance instantiates only one object of this class, and 


this object always exists while server is available.


ImageGeopositioningService


+ Triangulate(request = Triangulate) : OperationResponse


RequestBase {Abstract}


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Get Capabilites)


IGSRequestBase


+ service : CharacterString = "IGS" {frozen}()




Figure C.3 — Image Geopositioning Service package class diagram


C.4
Triangulate package


The Triangulate package is shown in the class diagram in Figure C.4. This diagram also shows two classes each from the IGS Service, OWS Get Capabilities, and OWS Input Output Data packages. The four classes introduced by this package are further defined by Table 2 through Table 4 and Table 6 in this document.

RequestBase {Abstract}


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Get Capabilites)


IGSRequestBase


+ service : CharacterString = "IGS" {frozen}()


(from IGS Service)


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


ImageGeopositioningService


+ Triangulate(request = Triangulate) : OperationResponse


(from IGS Service)


OperationResponse


(from OWS Input Output Data)


ControlValue


+ name : CharacterString


+ value : Any


InputData


(from OWS Input Output Data)


ControlValues


+ minimumIterations : PositiveInteger


+ maximumIterations : PositiveInteger


+ detectConvergence : Boolean


+ extraIterations [0..1] : PositiveInteger


+ useElevationData : Boolean


+ removeTiePointBlunders : Boolean


+ removeHorizontalBlunders : Boolean


+ removeVerticalBlunders : Boolean


0..*


1


+controlValue


0..*


1


Triangulate


+ store [0..1] : Boolean


+ responseHandler [0..1] : URL


1


1


+inputData


1


1


1


1


+controlValues


1


1


Acknowlegement


+ timeStamp : DateTime


0..1


1


+operationRequest


0..1


1




Figure C.4 — Triangulate package class diagram


C.4
IGS Get Capabilities package


The IGS Get Capabilities package is shown in the class diagram in Figure C.5. This diagram also shows seven classes from OWS Common packages, plus two classes from ISO 19111 [OGC 05-103]. The classes in this package are further defined by Table 10 and Table 12 in this document.


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


GetCapabilities {Abstract}


+ service : CharacterString


+ request : CharacterString = "GetCapabilities" {frozen}


+ acceptVersions [0..1] : Sequence<CharacterString>


+ sections [0..1] : List<Section>


+ acceptFormats [0..1] : Sequence<CharacterString>


+ updateSequence [0..1] : CharacterString


(from OWS Get Capabilites)


Section


+ serviceIdentification


+ serviceProvider


+ operationsMetadata


+ contents


+ all


(from OWS Get Capabilites)


<<CodeList>>


IGSGetCapabilities


+ service : CharacterString = "IGS" {frozen}


+ acceptFormats [0] : Sequence<CharacterString>


+ updateSequence [0] : CharacterString


ServiceIdentification


(from OWS Service Identification)


OperationsMetadata


(from OWS Operations Metadata)


ServiceMetadata {Abstract}


+ version : CharacterString


+ updateSequence [0..1] : CharacterString


(from OWS Get Capabilites)


0..1


1


+serviceIdentification


0..1


1


0..1


1


+operationsMetadata


0..1


1


ServiceProvider


(from OWS Service Provider)


10..11


+serviceProvider


0..1


IGSserviceMetadata


CC_OperationMethod


(from ISO 19111)


CC_GeneralOperationParameter


(from ISO 19111)


0..*


0..*


0..*


+usesParameter0..*


CS_GeodeticCS


(from ISO 19111)


SC_GeodeticCRS


(from ISO 19111)


1


0..*


1


+coordinateSystem


0..*


IGScontents


0..1


1


+contents0..1


1


1..*


0..*


+geodeticCRS


1..*


0..*


1..*


0..*


+method


1..*


0..*


0..*


0..*


+parameter


0..*


0..*


0..*


0..*


+geodeticCS


0..*


0..*


CD_GeodeticDatum


(from ISO 19111)


1


0..*


1


+datum


0..*


0..*


0..*


0..*


+geodeticDatum


0..*




Figure C.5 — IGS Get Capabilities package class diagram


Annex D
(normative)

SOAP transfer


All compliant IGS servers shall implement SOAP 1.2 transfer of all IGS operation requests and responses, using the XML encodings specified in the body of this document. The SOAP Request-Response message exchange pattern shall be used with the HTTP POST binding.


For SOAP transfer, each XML-encoded operation request shall be encapsulated in the body of a SOAP envelope, which shall contain only a body and only this request in that body. Similarly, each XML-encoded operation response shall be encapsulated in the body of a SOAP envelope, which shall contain only a body and only this response in that body. An IGS server shall return operation responses and error messages using only SOAP transfer when the operation request is sent using SOAP.

All compliant IGS servers shall specify the URLs to which SOAP-encoded operation requests shall be sent, within the OperationsMetadata section of a service metadata (Capabilities) XML document, as specified in Subclause 8.3.3.

If an error is detected while processing an operation request encoded in a SOAP envelope, the IGS server shall generate a SOAP response message where the content of the Body element is a Fault element containing an ExceptionReport element. This shall be done using the following XML fragment:



<soap:Envelope xmlns:soap=http://www.w3.org/2003/05/soap-envelope>



<soap:Body>




<soap:Fault>





<soap:Code>





<soap:Value>soap:Server</soap:Value>





</soap:Code>





<soap:Reason>





<soap:Text>A server exception was encountered.<soap:Text>





</soap:Reason>





<soap:Detail>






<ows:ExceptionReport>







...





</ows:ExceptionReport>





</soap:Detail>




</soap:Fault>


</soap:Body>


</soap:Envelope>


The Code element shall have the Value “soap:server” indicating that this is a server exception. The Reason element shall have the Text “Server exception was encountered.” This fixed string is used since the details of the exception shall be specified in the Detail element using an ows:ExceptionReport element as specified in OWS Common [OGC 05-008].

Bibliography


[1] ASPRS 2004, Manual of Photogrammetry, Fifth Edition, American Society for Photogrammetry and Remote Sensing, 2004


[2] ISO/TS 19138 draft n1934, Geographic information — Data quality measures

[3] OGC 00-115, OGC Abstract Specification Topic 15: Image Exploitation Services, available at

[4] OGC 05-095r1, GML 3.1.1 common CRSs profile, available at

[5] OGC 05-096r1, GML 3.1.1 grid CRSs profile, available at

[6] USIGS Glossary

		

		





		iv

		Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.





		Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.

		iii









06-054r1 Geopositioning Service Folder/06-054r1 Image Geopositoning Service.pdf


 


Open Geospatial Consortium Inc. 
Date: 2006-07-03 


Reference number of this document: OGC 06-054r1 


Version: 0.0.0 


Category: OpenGIS® Discussion Paper 


Editor: Arliss Whiteside 


OpenGIS® Image Geopositioning Service (IGS) 
 


 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
To obtain additional rights of use, visit http://www.opengeospatial.org/legal/. 


 


Warning 


This document is not an OGC Standard. It is distributed for review and comment. It 
is subject to change without notice and may not be referred to as an OGC Standard. 


Recipients of this document are invited to submit, with their comments, notification 
of any relevant patent rights of which they are aware and to provide supporting 
documentation. 


Document type: OpenGIS® Discussion Paper 
Document subtype: Draft RFC 
Document stage: Draft proposed version 0.0 
Document language: English 


 
 



http://www.opengeospatial.org/legal/





OGC 06-054r1 


ii Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Contents Page 


i. Preface......................................................................................................................v 


iii. Submitting organizations .........................................................................................v 


iv. Document contributor contact points.......................................................................v 


v. Revision history ..................................................................................................... vi 


vi. Changes to the OGC Abstract Specification.......................................................... vi 


vii. Future work............................................................................................................ vi 


Foreword ........................................................................................................................... vii 


Introduction...................................................................................................................... viii 


1 Scope........................................................................................................................1 


2 Compliance ..............................................................................................................1 


3 Normative references ...............................................................................................1 


4 Terms and definitions ..............................................................................................2 


5 Conventions .............................................................................................................3 
5.1 Abbreviated terms ...............................................................................................3 
5.2 UML notation ......................................................................................................4 
5.3 Used parts of other documents ............................................................................4 
5.4 Platform-neutral and platform-specific specifications ........................................4 
5.5 Data dictionary tables..........................................................................................4 


6 Image Geopositioning Service overview.................................................................4 
6.1 Function...............................................................................................................4 
6.2 Operations ...........................................................................................................5 
6.3 Operation request encoding.................................................................................6 


7 Triangulate operation (mandatory) ..........................................................................7 
7.1 Introduction .........................................................................................................7 
7.2 Triangulate operation request ..............................................................................7 


7.2.1 Triangulate request parameters .......................................................................7 
7.2.2 Triangulate request XML encoding (optional) .............................................13 
7.2.3 Triangulate request SOAP encoding (mandatory)........................................16 


7.3 Triangulate operation response .........................................................................16 
7.3.1 Introduction...................................................................................................16 
7.3.2 Acknowledgement message contents ...........................................................16 
7.3.3 Acknowledgement message XML encoding ................................................17 
7.3.4 Acknowledgement message SOAP encoding...............................................18 
7.3.5 OperationResponse message contents ..........................................................18 
7.3.6 OperationResponse message XML encoding (optional) ..............................19 
7.3.7 OperationResponse message SOAP encoding (mandatory) .........................20 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. iii
 


7.3.8 Triangulate operation exceptions..................................................................20 


8 GetCapabilities operation (mandatory)..................................................................20 
8.1 Introduction .......................................................................................................20 
8.2 GetCapabilities operation request .....................................................................21 


8.2.1 GetCapabilities request contents...................................................................21 
8.2.2 GetCapabilities request KVP encoding (mandatory)....................................21 
8.2.3 GetCapabilities request XML encoding (optional).......................................22 
8.2.4 GetCapabilities request SOAP encoding (mandatory) .................................22 


8.3 GetCapabilities operation response ...................................................................22 
8.3.1 Exceptions.....................................................................................................22 
8.3.2 Normal response contents sections ...............................................................23 
8.3.3 OperationsMetadata section standard contents.............................................23 
8.3.4 Contents section contents..............................................................................24 
8.3.5 Capabilities document XML encoding (optional) ........................................26 
8.3.6 Capabilities document XML example ..........................................................28 
8.3.7 Capabilities document SOAP encoding (mandatory) ...................................28 


Annex A (normative)  Abstract test suite ..........................................................................29 


Annex B (normative)  XML Schema Documents..............................................................30 


Annex C (informative)  UML model .................................................................................31 
C.1 Introduction .......................................................................................................31 
C.2 UML packages ..................................................................................................31 
C.3 Image Geopositioning Service package ............................................................33 
C.4 Triangulate package ..........................................................................................34 
C.4 IGS Get Capabilities package............................................................................35 


Annex D (normative)  SOAP transfer................................................................................37 


Bibliography ......................................................................................................................38 
 







OGC 06-054r1 


iv Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Figures Page 
Figure 1 — IGS interface UML diagram ........................................................................................ 6 
Figure 2 — Triangulate operation request UML diagram............................................................... 8 
Figure 3 — Acknowledgement UML diagram.............................................................................. 17 
Figure 4 — IGS contents section UML class diagram.................................................................. 25 
Figure C.1 — IGS interface UML diagram................................................................................... 31 
Figure C.2 — IGS interface package diagram .............................................................................. 32 
Figure C.3 — Image Geopositioning Service package class diagram........................................... 33 
Figure C.4 — Triangulate package class diagram......................................................................... 34 
Figure C.5 — IGS Get Capabilities package class diagram.......................................................... 36 


Tables Page 
Table 1 — Operation request encoding........................................................................................... 6 
Table 2 — Parameters in Triangulate operation request ................................................................. 9 
Table 3 — Parts of ControlValues data structure.......................................................................... 10 
Table 4 — Parts of ControlValue data structure ........................................................................... 11 
Table 5 — Required contents of Triangulate InputData ............................................................... 12 
Table 6 — Contents of Acknowledgement data structure............................................................. 17 
Table 7 — Required contents of Triangulate operation response message................................... 19 
Table 8 — Exception codes for Triangulate operation.................................................................. 20 
Table 9 — Implementation of parameters in GetCapabilities operation request .......................... 21 
Table 10 — Section name values and contents ............................................................................. 23 
Table 11 — Required values of OperationsMetadata section attributes ....................................... 23 
Table 12 — Parameters included in Contents section ................................................................... 26 
 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. v
 


i. Preface 


This is a draft Implementation Specification for an Image Geopositioning Service (IGS) 
that performs triangulation and is an OGC Web Service (OWS). This service uses a GML 
Image Geopositioning Metadata Application Schema, which is separately specified so it 
can also be used by other OGC Web Services. 


NOTE  This service might alternately be named Image Triangulation Service, Image Registration 
Service, or Image Adjustment Service. 


Suggested additions, changes, and comments on this draft are welcome and encouraged. 
Such suggestions may be submitted by email message or by making suggested changes in 
an edited copy of this document. 


ii. Document terms and definitions 


This document uses the specification terms defined in Subclause 5.3 of [OGC 05-008], 
which is based on the ISO/IEC Directives, Part 2. Rules for the structure and drafting of 
International Standards. In particular, the word “shall” (not “must”) is the verb form used 
to indicate a requirement to be strictly followed to conform to this specification. 


iii. Submitting organizations 


The following organizations submitted this document to the Open Geospatial Consortium 
Inc. 


BAE Systems E&IS 


iv. Document contributor contact points 


All questions regarding this document should be directed to the editor or the contributors: 


Name Organization 
Arliss Whiteside BAE Systems E&IS 







OGC 06-054r1 


vi Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


v. Revision history 


Date Release Editor Primary clauses 
modified 


Description 


2006-06-05 0.0.0 Arliss 
Whiteside 


All First draft 


2006-07-03 0.0.0 Arliss 
Whiteside 


3, 8.3, D Minor improvements of SOAP encoding 


vi. Changes to the OGC Abstract Specification 


The OpenGIS® Abstract Specification does not require any changes to accommodate the 
technical contents of this document. 


vii. Future work 


Improvements in this document are desirable for: 


a) Examples. An extension is desirable to include example XML documents. 


b) Stereoscopic pairs of images. Evaluate pairs of images that are expected to be 
exploited stereoscopically. 


c) Correct extracted positions. Compute coordinate Transformations that should be 
applied to all the positions previously extracted from the newly adjusted images 
using the now-superseded georeferencing coordinate Transformations. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. vii
 


Foreword 


This document does not replace any previous OGC document, in whole or in part. This 
service uses a GML Image Geopositioning Metadata Application Schema that is 
separately specified. This service is a specific Geodata Registration Service as described 
in Section 3.6 of OGC Abstract Specification Topic 15: Image Exploitation Services 
[OGC 00-115]. This service is designed to support the Register Images use case 
described in Section 2.1.2.5 of OGC Abstract Specification Topic 15: Image Exploitation 
Services [OGC 00-115]. 


This document includes three annexes; Annexes A, B, and D are normative, and Annex C 
is informative. 


Attention is drawn to the possibility that some of the elements of this document may be 
the subject of patent rights. The OGC shall not be held responsible for identifying any or 
all such patent rights. 







OGC 06-054r1 


viii Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Introduction 


This document specifies the interface to an Image Geopositioning Service that adjusts the 
georeferencing coordinate transformations of multiple images. This adjustment is 
normally done using a photogrammetric triangulation process, although other methods 
could be used. Such triangulation adjusts the parameter values of the image 
georeferencing coordinate transformations using a least-squares fitting process to 
measured image positions with known error statistics. 


In addition to using existing approximate image georeferencing coordinate 
transformations, such triangulation uses the measured image positions of multiple object 
(or ground) points. Control points and tie points can be used. A control point has a 
measured position with position error statistics in one or more images, and a known 
position with error statistics in some object or “ground” Coordinate Reference System 
(CRS), assumed to be a GeodeticCRS. A tie point has a measured position with error 
statistics in two or more images, but not a known position in any object CRS. 


This Image Geopositioning Service interface specifies two operations that can be 
requested by clients. The GetCapabilities operation allows a client to get server metadata. 
The Triangulate operation performs a triangulation, adjusting the parameter values of one 
or more image georeferencing coordinate transformations that are input with associated 
error statistics. The Triangulate operation inputs also include measured image positions 
and known object point positions, all with associated error statistics. 







OpenGIS® Discussion Paper OGC 06-054r1


 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 1
 


OpenGIS® Image Geopositioning Service (IGS) 


1 Scope 


This document specifies the interface to an Image Geopositioning Service (IGS) that 
adjusts the georeferencing coordinate transformations of multiple images. This Image 
Geopositioning Service (IGS) is an OGC Web Service (OWS). This service uses a GML 
Image Geopositioning Metadata Application Schema that is separately specified. 


2 Compliance 


Compliance with this specification shall be checked using all the relevant tests specified 
in Annex A (normative). 


3 Normative references 


The following normative documents contain provisions that, through reference in this 
text, constitute provisions of this document. For dated references, subsequent 
amendments to, or revisions of, any of these publications do not apply. For undated 
references, the latest edition of the normative document referred to applies. 


ISO 19105:2000, Geographic information — Conformance and Testing 


ISO 19123:2004, Geographic information — Schema for coverage geometry and 
functions 


W3C Recommendation 24 June 2003, SOAP version 1.2, Part 1: Messaging Framework 


OGC 05-070r3, OWS Common change request: Add DCP discussion 


OGC 05-103, Geographic information — Spatial referencing by coordinates (ISO/DIS 
19111) 


OGC 05-105, Geographic information — Geography Markup Language (GML) (version 
3.2, ISO/DIS 19136) 


OGC 06-015r2, OWS Common change request: Add Manifest specification 


OGC 06-055, GML 3.2 image geopositioning metadata application schema 


OGC 06-056, OWS Common change request: Add input and output specifications 


OGC 05-008, Web Services Common Specification, extended version 1.0 







OGC 06-054r1 


2 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


This OWS Common Specification contains a list of normative references that are also 
applicable to this Implementation Specification. 


In addition to this document, this specification includes several normative XML Schema 
Document files as specified in Annex B. 


4 Terms and definitions 


For the purposes of this specification, the definitions specified in Clause 4 of the OWS 
Common Implementation Specification [OGC 05-008] and in OpenGIS® Abstract 
Specification Topic 2 [OGC 05-103] shall apply. In addition, the following terms and 
definitions apply. 


4.1  
covariance matrix  
detailed form of position accuracy data, sometimes called a variance-covariance matrix 
(adapted from USIGS Glossary)


NOTE 1 For three object (or ground) coordinates, a covariance matrix is a 3 by 3 matrix, with the matrix 
rows and columns each corresponding to the three coordinates. For just two horizontal object coordinates, a 
covariance matrix is a 2 by 2 matrix, with the matrix rows and columns each corresponding to the two 
horizontal coordinates. Similarly, for two image coordinates, a covariance matrix is a 2 by 2 matrix, with 
the matrix rows and columns each corresponding to the two image coordinates. 
 
NOTE 2 The covariance matrix cells contain the expected average values of the product of the error in 
the matrix row coordinate times the simultaneous error in the matrix column coordinate. For absolute 
accuracy, the diagonal matrix cells contain the error variances of the corresponding object (or ground) 
coordinates, or the squares of the standard deviations. The off-diagonal cells contain the covariances 
between the errors in the corresponding object coordinates; these covariances will be zero when the errors 
in different coordinates are not statistically correlated. All covariance matrices are symmetrical, meaning 
that the same cell values appear on both sides of the diagonal cells. 
 
NOTE 3 Covariance matrices can be used to record absolute and/or relative accuracies. A covariance 
matrix for relative accuracy uses the three (or two) coordinates of one point for matrix rows and the three 
(or two) coordinates of the second point for matrix columns. A complete covariance matrix for N specific 
points would contain 3N rows by 3N columns. 


4.2  
georeferencing transformation 
coordinate transformation that can be used to convert grid coordinate values to values of 
coordinates referenced to a coordinate reference system that is related to the earth by a 
datum (adapted from ISO 19123) 


4.3  
image geopositioning 
adjustment of the parameter values of image georeferencing coordinate transformations 
to produce correct coordinates in a coordinate reference system that is related to the earth 


4.4  
transformation  
approximate transformation of position coordinates from one Spatial Reference System 
(SRS) to another 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 3
 


NOTE  For example, this term is used when the transformation coefficients are determined by least 
squares adjustment. This term is strictly used only when the transformation is known only approximately. 
This term is loosely used when the transformation is known either approximately or exactly. 


4.5  
triangulation 
adjustment of the parameter values of two or more image georeferencing coordinate 
transformations by least-squares fitting to measured image points and usually known 
object (or ground) control points 


4.6  
photogrammetry  
science of mensuration and geometric adjustment of an aerial photograph or satellite 
image (adapted from USIGS Glossary) 


NOTE 1 Photogrammetry requires: a mathematical model of the image formation process, computation 
of the internal geometry of an image, and subsequent correction of imagery based upon the ground 
relationship for every part of the image. Correction of imagery based on computational algorithms and 
measurement of geometrical position in an image. 


NOTE 2 Effective photogrammetry makes use of ground control by which aerial photographs are 
carefully compared and registered to the locations and characteristics of features identified in ground-level 
surveys. 


5 Conventions 


5.1 Abbreviated terms 


CRS Coordinate Reference System 


GML Geography Markup Language 


HTTP  Hypertext Transfer Protocol 


IGS Image Geopositioning Service 


ISO International Organization for Standardization 


KVP Keyword Value Pair 


OGC Open Geospatial Consortium 


OWS OGC Web Service, or Open Web Service 


SOAP Simple Object Access Protocol (no longer used) 


TBD To Be Determined 


TBR To Be Reviewed 


UML Unified Modeling Language 


URI Universal Resource Identifier 


URL Uniform Resource Locator 


XML Extensible Markup Language 







OGC 06-054r1 


4 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


5.2 UML notation 


Most diagrams that appear in this specification are presented using the Unified Modeling 
Language (UML) static structure diagram, as described in Subclause 5.2 of [OGC 05-
008]. 


5.3 Used parts of other documents 


This document uses significant parts of document [OGC 05-008]. To reduce the need to 
refer to that document, this document copies some of those parts with small 
modifications. To indicate those parts to readers of this document, the largely copied 
parts are shown with a light grey background (15%). 


5.4 Platform-neutral and platform-specific specifications 


As describe in proposed Subclause 5.4 of OWS Common [OGC 05-070r3], this 
document includes both platform-neutral and platform-specific specifications. This 
document first specifies each operation request and response, and each other parameter or 
data structure, in platform-neutral fashion. This is done using a table for each data 
structure, which lists and defines the parameters and other data structures contained. 


EXAMPLES 1 Platform-neutral specifications are contained in Subclauses 7.2.1, 7.3.2, 8.3.2, and 8.3.4. 


The specified platform-neutral data can be encoded in many alternative ways, each 
appropriate to one or more specific platforms. This document now specifies encoding 
appropriate for use of HTTP GET transfer of operations requests (using KVP encoding), 
and for use of HTTP POST transfer of operations requests (using XML or KVP or SOAP 
encoding). 


EXAMPLES 2 Platform-specific specifications for XML encoding are contained in Subclauses 7.2.2, 7.3.2, and 
8.3.5. 


5.5 Data dictionary tables 


The UML model data dictionary is specified herein in a series of tables, as described in 
Subclause 5.5 of OWS Common [OGC 05-070r3]. 


6 Image Geopositioning Service overview 


6.1 Function 


The specified Image Geopositioning Service (IGS) adjusts the georeferencing coordinate 
transformations of multiple images. This adjustment is normally done using a 
photogrammetric triangulation process, although other methods could be used. Such 
triangulation adjusts the parameters of the image georeferencing coordinate 
transformations using a least-squares fitting process to measured image positions. This 
triangulation starts with an existing approximate image georeferencing coordinate 
transformation for each image, with parameter error statistics for the parameters that can 
be adjusted. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 5
 


In addition to using approximate image georeferencing coordinate transformations, such 
triangulation uses the measured image positions of multiple object (or ground) points. 
Control points and tie points can be used. A control point has a measured position with 
known position error statistics in one or more images, and a known position with error 
statistics in some object or “ground” Coordinate Reference System (CRS). Such as object 
CRS is assumed to be a GeodeticCRS. A tie point has a measured position with error 
statistics in two or more images, but not a known position in any object (CRS). 


NOTE 1 Photogrammetric triangulation of images, also called aerial triangulation, block triangulation, 
or analytical triangulation, is a widely-known and frequently-used process. It is the subject of Section 11.2 
(more than 40 pages) in the Fifth Edition (2004) of the Manual of Photogrammetry, published by the 
American Society for Photogrammetry and Remote Sensing. (Triangulation was the subject of several 
pages in the Third Edition [1966] of this Manual of Photogrammetry.) 


NOTE 2 If a control point has a known position in a ProjectedCRS, that position can be converted to a 
GeodeticCRS, together with its error statistics. 


The error statistics are in the form of covariance matrices, also called variance-covariance 
matrices, together with the (most-likely) values to which the covariance matrices apply. 
The matrices contain the variance of each measured and estimated value, and the 
covariances between these values. These measured and/or estimated values include point 
position coordinates in images and in object CRSs. They also include various parameters 
in georeferencing coordinate transformations, including the camera 3D position 
coordinates and 3D orientation angles. 


NOTE 3 Such covariance matrices for single point coordinates are described in Table D.33 of [ISO/TS 
19138 draft n1934]. 


This service uses a GML Image Geopositioning Metadata Application Schema that is 
separately specified. This service is a specific Geodata Registration Service as described 
in Section 3.6 of OGC Abstract Specification Topic 15: Image Exploitation Services 
[OGC 00-115]. This service is designed to support the Register Images use case 
described in Section 2.1.2.5 of OGC Abstract Specification Topic 15: Image Exploitation 
Services [OGC 00-115]. 


6.2 Operations 


The IGS interface (currently) specifies two operations that can be requested by a client 
and performed by an IGS server. Those operations are: 


a) Triangulate (required implementation by servers) – This operation performs 
triangulation computations, adjusting the parameters of the one or more image 
georeferencing coordinate transformations that are input with associated parameter 
error statistics. The Triangulate operation inputs also include the measured image 
positions and known object point positions, all with associated position error 
statistics. 


b) GetCapabilities (required implementation by servers) – This operation allows a client 
to request and receive back service metadata (or Capabilities) documents that 
describe the abilities of the specific server implementation. This operation also 
supports negotiation of the specification version being used for client-server 
interactions. 







OGC 06-054r1 


6 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


These operations have many similarities to other OGC Web Services, including the 
WMS, WFS, and WCS. Many of these interface aspects that are common with other 
OWSs are thus specified in the OpenGIS® Web Services Common Implementation 
Specification [OGC 05-008]. Many of these common aspects are normatively referenced 
herein, instead of being repeated in this specification. 


Figure 2 is a simple UML diagram summarizing the IGS interface. This class diagram 
shows that the ImageGeopositioningService interface class inherits the getCapabilities 
operation from the OGCWebService interface class, and adds the “triangulate” 
operations. (This capitalization of names uses the OGC/ISO profile of UML.) A more 
complete UML model of the IGS interface is provided in Annex C (informative). 


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabi lites)


<<Interface>>


Each server instance instantiates only one object of this class, and 
this object always exists while server is available.


ImageGeopositioningService


+ Triangulate(request = Triangulate) : TriangulateResponse


 


Figure 1 — IGS interface UML diagram 


NOTE  In this UML diagram, the request and response for each operation is shown as a single 
parameter that is a data structure containing multiple lower-level parameters, which are discussed in 
subsequent clauses. The UML classes modelling these data structures are included in the complete UML 
model in Annex C. 


6.3 Operation request encoding 


The encoding of operation requests shall use SOAP, HTTP GET with KVP encoding, and 
HTTP POST with XML encoding as specified in Clause 11 of [OGC 05-008]. Table 1 
summarizes the three Service operations and their encoding methods defined in this 
specification. 


Table 1 — Operation request encoding 


Operation name Request encoding 
GetCapabilities (mandatory) KVP and optional SOAP, XML 
Triangulate (mandatory) SOAP and optional XML  


 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 7
 


Each of these operations is described in more detail in subsequent clauses. 


7 Triangulate operation (mandatory) 


7.1 Introduction 


The mandatory Triangulate operation allows IGS clients to request triangulation 
computations, and receive back the results. The parameters of one or more image 
georeferencing coordinate transformations are input with associated parameter error 
statistics, and similar adjusted data is output. The Triangulate operation inputs also 
include the measured image positions and known object point positions, all with 
associated position error statistics. The estimated actual image and object positions 
resulting from the triangulation are also output, with associated position error statistics. 


NOTE  If the image georeferencing coordinate transformation of only one image is input for 
adjustment, this is normally called image “resection” instead of “triangulation”. 


7.2 Triangulate operation request 


7.2.1 Triangulate request parameters 


A request to perform the Triangulate operation shall use the data structure shown in the 
UML diagram in Figure 2. The attributes and associations of the three new classes shall 
include the parameters and data structures listed and defined in Table 2 through Table 4. 







OGC 06-054r1 


8 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


RequestBase {Abstract}


+ service : CharacterString
+ request : CharacterString
+ version : CharacterString


(from OWS Get Capabi lites)


IGSRequestBase


+ service : CharacterString = "IGS" {frozen}()


(from IGS Service)


InputData
(from OWS Input Output Data)


Triangulate
+ store [0..1] : Boolean
+ responseHandler [0..1] : URL


11


+inputData


11


ControlValue
+ name : CharacterString
+ value : Any


ControlValues
+ minimumIterations : PositiveInteger
+ maximumIterations : PositiveInteger
+ detectConvergence : Boolean
+ extraIterations [0..1] : PositiveInteger
+ useElevationData : Boolean
+ removeTiePointBlunders : Boolean
+ removeHorizontalBlunders : Boolean
+ removeVerticalBlunders : Boolean


1


1


+controlValues1


1


0..*


1


+controlValue0..*


1


 


Figure 2 — Triangulate operation request UML diagram 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 9
 


NOTE 1 To reduce the need for readers to refer to other documents, the first three parameters listed 
below are largely copied from Table 21 in Subclause 9.2.1 of [OGC 05-008]. 


Table 2 — Parameters in Triangulate operation request 


Names Definition Data type and values Multiplicity and use 
service 
service 


Service type identifier Character String type, not empty 
Value is OWS type abbreviation, 


namely “IGS”  


One (mandatory) 


request 
request 


Operation name Character String type, not empty 
Value is operation name, namely 


“Triangulate” 


One (mandatory) 


version 
version 


Specification version for 
operation 


Character String type, not empty 
Value is specified by each 


Specification and Schemas 
version 


One (mandatory) 


inputData 
InputData 


Input data to this 
triangulation execution 


a
InputData type, see Subclause 


13.5 in OGC 06-056 
One (mandatory) 


control
Values 


Control
Values 


Values of quantities to be 
used to control 
triangulation computations 


ControlValues data structure, see 
Table Table 3 


One (mandatory) 


store 
store 


Specifies if transformed data 
to be stored as remote 
resource  


Boolean 
Values are: true or false 


Zero or one (optional) 
Default is false (return 


directly in response) 
response


Handler 
Response


Handler 


Address to respond to when 
server has completed 
processing this operation 
request 


URL Zero or one (optional) 
Include to process 


operation request 
asynchronously 


b


a This input data shall include the approximate georeferencing coordinate transformation parameter values, 
with parameter error statistics, as specified in Table 5. This input data shall also include object point positions in 
image coordinates and optionally in object coordinates, with position error statistics, as also specified in Table 5. 
b When this parameter is omitted in the operation request, this operation shall be executed synchronously and 
immediately by the server, with the operation response returned to the client following operation execution. When 
this parameter is included, this operation shall be processed asynchronously by the server. In that case, the server 
shall return an operation acknowledgement to the client immediately following operation acceptance. When 
operation execution is later completed, the (normal or exception) operation response shall be sent by the server to 
the response handler address provided by this parameter value. 


 







OGC 06-054r1 


10 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Table 3 — Parts of ControlValues data structure 


Names Definition Data type Multiplicity and use 
minimumIterations 
MinimumIterations 


Minimum number of triangulation 
computation iterations to be 
executed, when no errors detected 


PositiveInteger One (mandatory) 


maximumIterations 
MaximumIterations 


Maximum number of triangulation 
computation iterations to be 
executed, when no errors detected 


PositiveInteger One (mandatory) 


detectConvergence 
DetectConvergence 


Automatically detect convergence 
of triangulation computation 
iterations a


Boolean One (mandatory) 


extraIterations 
ExtraIterations 


Number of extra iterations to be 
executed after automatically 
detect convergence 


PositiveInteger Zero or more (optional) 
Include when detecting 


convergence 
useElevationData 
UseElevationData 


Use elevation coverage to estimate 
tie point and horizontal control 
point vertical coordinates, until 
convergence automatically 
detected 


Boolean One (mandatory) 


removeTiePoint
Blunders 


RemoveTiePoint
Blunders 


Automatically detect tie point 
measurement blunders, and 
remove these points in following 
iterations b


Boolean One (mandatory) 


removeHorizontal
Blunders 


RemoveHorizontal
Blunders 


Automatically detect control point 
horizontal position blunders, and 
remove these points in following 
iterations 


Boolean One (mandatory) 


removeVertical
Blunders 


RemoveVertical
Blunders 


Automatically detect control point 
vertical coordinate blunders, and 
remove these points in following 
iterations 


Boolean One (mandatory) 


controlValue 
ControlValue 


Value of one server-specific 
quantity to be used to control 
triangulation computations 


ControlValue 
data structure, 
see Table 4 


Zero or more (optional) 
Include when default 


value not desired a
a  One or more server-specific control values can specify parameters to be used in the convergence detection 
criterion. 
b One or more server-specific control values can specify parameters to be used in the blunder detection criteria. 
c Each server-specific control quantity shall have a default value that often allows the triangulation 
computations to be completed. 


 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 11
 


Table 4 — Parts of ControlValue data structure 


Names Definition Data type Multiplicity 
name 
name 


Name or identifier of this server-
specific control quantity 


CharacterString type a One (mandatory) 


value 
(anonymous) 


Value of this server-specific 
control quantity  


Any type b One (mandatory) 


a  The name of each allowed server-specific control quantity shall be clearly specified by each server. 
b The value type, units, and allowed range of each server-specific control quantity shall be clearly specified by 
each server. 


 
More precisely, the contents included or referenced in that InputData element in the 
Triangulate operation request shall include the objects (or instances) from the classes 
listed in Table 5, most of which are specified in the GML Image Geopositioning 
Metadata Application Schema [OGC 06-055]. 







OGC 06-054r1 


12 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Table 5 — Required contents of Triangulate InputData 


Class name 
a


Include object for each: 
ImageOrientation ImageOrientation object for each image to be adjusted in this triangulation 


ImageParameterValues
 b Original ImageParameterValues object associated from above 


ImageOrientation objects, AND 
Last adjusted ImageParameterValues object associated from above 


ImageOrientation objects 
Point Point objects associated from above ImageParameterValues objects 
Curve Curve objects associated from above ImageParameterValues objects 
AdjustableParameters AdjustableParameters to be used in this triangulation and associated from 


new ImageParameterValues objects produced 
EqualParameters All EqualParameters to be used in this triangulation and associated from 


AdjustmentGroup object produced 
TBD All sensor-model-specific objects associated from above 


ImageParameterValues objects 


SensorParameterValues 
b Original SensorParameterValues object associated from above 


ImageParameterValues objects
 c
, AND 


Last adjusted SensorParameterValues object associated from above 
ImageParameterValues objects 


ObjectImage
Transformation 


ObjectImageTransformation object associated to above 
ImageParameterValues objects 


ObjectPoint ObjectPoint object associated from above ImageOrientation objects 
ImagePosition ImagePosition object associated from above ObjectPoint objects that was 


measured in one of the images being triangulated 
ObjectPosition ObjectPosition object associated from above ObjectPoint objects that is the 


measured position for a control point, OR 
ObjectPosition object associated from above ObjectPoint objects that is the 


last estimated or validated position (if any) for a tie point or check point 


CovarianceMatrix 
b CovarianceMatrix object associated from ImagePosition, ObjectPosition, 


original ImageParameterValues, and original SensorParameterValues 
objects included as listed above  


ElevationCoverage Elevation data to be used estimate tie point and horizontal control point 
vertical coordinates, until convergence automatically detected (optional) 


a These class names omit the UML package prefixes. The XML element names are the same (without 
prefixes). 
b Since this class is abstract, objects shall be of one of the multiple non-abstract subclasses of this class. 
c Shall be included only if one or more of the SensorParameters is being adjusted in this triangulation. 


 
The Triangulate operation shall be implemented by all IGS servers and clients. The 
“Multiplicity and use” columns in Table 2 through Table 4 specify the optionality of each 
listed parameter and data structure in the Triangulate operation request. All the 
“mandatory” parameters and data structures shall be implemented by all IGS clients, 
using a specified value(s). Similarly, all the “mandatory” parameters and data structures 
shall be implemented by all IGS servers, checking that each request parameter or data 
structure is received with any specified value(s). 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 13
 


All the “optional” parameters and data structures, in the Triangulate operation request, 
should be implemented by all IGS clients using specified values, when that parameter or 
data structure applies. The “store” and “responseHandler” parameters shall be 
implemented by all IGS servers. All the other “optional” parameters and data structures 
shall be implemented by all IGS servers to which that parameter or data structure applies. 


7.2.2 Triangulate request XML encoding (optional) 


IGS servers can implement HTTP POST transfer of the Triangulate operation request, 
using XML encoding only. The following schema fragment specifies the contents and 
structure of a Triangulate operation request encoded in XML: 


 <element name="Triangulate" type="igs:TriangulateType"> 
  <annotation> 
   <documentation>XML encoded Triangulate operation request. In 
this XML encoding, no "request" parameter is included, since the 
element name specifies the specific operation. </documentation> 
  </annotation> 
 </element> 
 <!-- =========================================================== --> 
 <complexType name="TriangulateType"> 
  <sequence> 
   <element ref="ows:InputData"> 
    <annotation> 
     <documentation>Input data to this triangulation 
execution. This input data shall include the approximate georeferencing 
coordinate transformation parameter values, with parameter error 
statistics, as specified in Table 5 of the IGS specification. This 
input data shall also include ground point positions in image 
coordinates and optionally in ground coordinates, with position error 
statistics, as also specified in Table 5. </documentation> 
    </annotation> 
   </element> 
   <element ref="igs:ControlValues"/> 
   <element name="ResponseHandler" type="anyURI" minOccurs="0"> 
    <annotation> 
     <documentation>Address to respond to when server has 
completed processing this operation request. When this parameter is 
omitted in the operation request, this operation shall be executed 
synchronously and immediately by the server, with the operation 
response returned to the client following operation execution. When 
this parameter is included, this operation shall be processed 
asynchronously by the server. In that case, the server shall return an 
operation acknowledgement to the client immediately following operation 
acceptance. When operation execution is later completed, the (normal or 
exception) operation response shall be sent by the server to the 
response handler address provided by this parameter value. 
</documentation> 
    </annotation> 
   </element> 
  </sequence> 
  <attribute name="service" type="string" use="required" 
fixed="IGS"> 
   <annotation> 
    <documentation>Service type identifier, where the string 
value is the OWS type abbreviation, namely "IGS". </documentation> 







OGC 06-054r1 


14 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


   </annotation> 
  </attribute> 
  <attribute name="version" type="string" use="required"> 
   <annotation> 
    <documentation>Specification version for OWS version and 
operation. See Version parameter Subclause 7.3.1 of the OWS Common 
Specification for more information. </documentation> 
   </annotation> 
  </attribute> 
  <attribute name="store" type="boolean" use="optional" 
default="false"> 
   <annotation> 
    <documentation>Specifies if the response coverage should 
be stored, remotely from the client at a network URL, instead of being 
returned within the operation response. This attribute should be 
included only if this operation parameter is supported by server, as 
encoded in the OperationsMetadata section of the Capabilities document. 
</documentation> 
   </annotation> 
  </attribute> 
 </complexType> 
 
 <!-- =========================================================== --> 
 <element name="ControlValues" type="igs:ControlValuesType"> 
  <annotation> 
   <documentation>Values of quantities to be used to control 
triangulation computations. </documentation> 
 
  </annotation> 
 </element> 
 <!-- =========================================================== --> 
 <complexType name="ControlValuesType"> 
  <sequence maxOccurs="unbounded"> 
   <element name="MinimumIterations" type="positiveInteger"> 
    <annotation> 
     <documentation>Minimum number of triangulation 
computation iterations to be executed, when no errors detected. 
</documentation> 
    </annotation> 
   </element> 
   <element name="MaximumIterations" type="positiveInteger"> 
    <annotation> 
     <documentation>Maximum number of triangulation 
computation iterations to be executed, when no errors detected. 
</documentation> 
    </annotation> 
   </element> 
   <element name="DetectConvergence" type="boolean"> 
    <annotation> 
     <documentation>Automatically detect convergence of 
triangulation computation iterations. One or more server-specific 
control values can specify parameters to be used in the convergence 
detection criterion. </documentation> 
    </annotation> 
   </element> 
   <element name="ExtraIterations" type="positiveInteger" 
minOccurs="0"> 
    <annotation> 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 15
 


     <documentation>Number of extra triangulation 
computation iterations to be executed after automatically detect 
convergence. </documentation> 
    </annotation> 
   </element> 
   <element name="UseElevationData" type="boolean"> 
    <annotation> 
     <documentation>Use provided elevation coverage to 
estimate tie point and horizontal control point vertical coordinates, 
until triangulation computation convergence automatically detected. 
</documentation> 
    </annotation> 
   </element> 
   <element name="RemoveTiePointBlunders" type="boolean"> 
    <annotation> 
     <documentation>Automatically detect tie point 
measurement blunders, and remove these points in following 
triangulation computation iterations. One or more server-specific 
control values can specify parameters to be used in this blunder 
detection criterion. </documentation> 
    </annotation> 
   </element> 
   <element name="RemoveHorizontalBlunders" type="boolean"> 
    <annotation> 
     <documentation>Automatically detect control point 
horizontal position blunders, and remove these points in following 
triangulation computation iterations. One or more server-specific 
control values can specify parameters to be used in this blunder 
detection criterion. </documentation> 
    </annotation> 
   </element> 
   <element name="RemoveVerticalBlunders" type="boolean"> 
    <annotation> 
     <documentation>Automatically detect control point 
vertical coordinate blunders, and remove these points in following 
triangulation computation iterations. One or more server-specific 
control values can specify parameters to be used in this blunder 
detection criterion. </documentation> 
    </annotation> 
   </element> 
   <element name="ControlValue" minOccurs="0" 
maxOccurs="unbounded"> 
    <annotation> 
     <documentation>Value of one server-specific quantity to 
be used to control triangulation computations. </documentation> 
    </annotation> 
    <complexType> 
     <simpleContent> 
      <extension base="string"> 
       <attribute name="name" type="string" 
use="required"></attribute> 
      </extension> 
     </simpleContent> 
    </complexType> 
   </element> 
  </sequence> 
 </complexType> 
 







OGC 06-054r1 


16 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


The constents of the InputData element shall be encoded in XML as psecified in the 
image geopositioning metadata application schema [OGC 06-055]. 


EXAMPLE  An example Triangulate operation request XML encoded for HTTP POST is: 
TBD 
 


7.2.3 Triangulate request SOAP encoding (mandatory) 


IGS servers shall implement SOAP version 1.2 transfer of the Triangulate operation 
request as specified in Annex D, using the XML encoding specified above. 


EXAMPLE  An example Triangulate operation request XML encoded for in a SOAP envelope is: 
TBD 
 


7.3 Triangulate operation response 


7.3.1 Introduction 


The Triangulate operation shall be executed in one of two ways, depending on the 
presence or absence of the ResponseHandler parameter in the operation request. If the 
ResponseHandler parameter is not included, then the IGS server shall execute the 
Triangulate operation immediately and then respond to the waiting client with an 
OperationResponse message. When an IGS server encounters an error while immediatley 
performing a Triangulate operation, it shall return an exception report message. 


If the ResponseHandler parameter is included in the Triangulate operation request, then 
the IGS server should verify the request syntax and immediately respond to the client 
with an Acknowledgment message. When an IGS server encounters an error while 
immediately checking a Triangulate operation request, it shall immediately return an 
exception report message. Later, after the server has executed the Triangulate operation, 
it should generate an OperationResponse message and send it to the URL specified by the 
ResponseHandler parameter, using the protocol encoded therein. Common protocols are 
ftp for sending the response to a ftp server and mailto which may be used to send the 
response to an email address. When an IGS server encounters an error after sending an 
Acknowledgment message, it shall return an exception report message to the 
ResponseHandler. 


7.3.2 Acknowledgement message contents 


When the Triangulate operation is performed asynchronously, the immediate response to 
a valid operation request shall be an Acknowledgement message that shall use.the data 
structure shown in the UML diagram in Figure 3. The attributes and associations of the 
new class shall include the parameters and data structures listed and defined in Table 6. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 17
 


Triangulate


Acknowlegement
+ timeStamp : DateTime


+operationRequest


1


0..1


1


0..1


 


Figure 3 — Acknowledgement UML diagram 


Table 6 — Contents of Acknowledgement data structure 


Names a Definition Data type Multiplicity and use 
timeStamp 
TimeStamp 


Data and time this 
Acknowledgement message 
generated 


DateTime type One (mandatory) 


operationRequest 
OperationRequest 


Copy of Triangulate operation 
request being acknowledged 


Triangulate request 
data structure, see 
Table 2 


Zero or one (optional) 
Include when expected 


to be useful to clients 
a The name capitalization rules being used here are specified in Subclause 11.6.2 of [OGC 05-008]. 


 
7.3.3 Acknowledgement message XML encoding 


IGS servers can implement XML encoded transfer of the Triangulate operation 
Acknowledgement response. An Acknowledgement message shall be encoded in XML as 
specified by the following schema fragment: 


 <element name="Acknowledgement" type="igs:AcknowledgementType"> 
  <annotation> 
   <documentation>XML encoded acknowledgement of Triangulate 
operation request. </documentation> 
  </annotation> 
 </element> 
 <!-- =========================================================== --> 
 <complexType name="AcknowledgementType"> 
  <sequence> 
   <element name="TimeStamp" type="dateTime"> 
    <annotation> 
     <documentation>Data and time this Acknowledgement 
message generated. </documentation> 
    </annotation> 
   </element> 
   <element name="OperationRequest" type="igs:TriangulateType" 
minOccurs="0"> 
    <annotation> 
     <documentation>Copy of Triangulate operation request 
being acknowledged. This copy should be included when expected to be 
useful to clients. </documentation> 
    </annotation> 







OGC 06-054r1 


18 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


   </element> 
  </sequence> 
 </complexType> 
 


7.3.4 Acknowledgement message SOAP encoding 


IGS servers shall implement SOAP version 1.2 transfer of the Triangulate operation 
Acknowledgement response as specified in Annex D, using the XML encoding specified 
above. 


EXAMPLE  An example Acknowledgement message XML encoded for in a SOAP envelope is: 
TBD 
 


7.3.5 OperationResponse message contents 


The normal response to a valid Triangulate operation request shall be an 
OperationResponse data structure [OGC 06-056[. This OperationResponse shall include 
the adjusted georeferencing coordinate transformation parameter values, with parameter 
error statistics, as specified in [OGC 06-055]. In addition this OperationResponse shall 
include the estimated object position coordinates for all object points, computed using the 
image positions and the final adjusted image parameter values. More precisely, this 
response shall include the items listed in Table 7. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 19
 


Table 7 — Required contents of Triangulate operation response message 


Class name 
a


Include object for each: 
AdjustedGroup AdjustedGroup object for triangulation performed 
EqualParameters EqualParameters used in this triangulation and thus associated from 


AdjustmentGroup object produced 
AdjustmentSummary AdjustmentSummary object for triangulation performed and thus 


associated with AdjustmentGroup object produced (encoded inline) 
ImageOrientation ImageOrientation object for each image adjusted in this triangulation 


ImageParameterValues
 b New adjusted ImageParameterValues object associated from above 


ImageOrientation objects 
Point Point objects associated from above ImageParameterValues objects 
Curve Curve objects associated from above ImageParameterValues objects 
AdjustableParameters AdjustableParameters used in this triangulation and associated from above 


ImageParameterValues objects 
ImageAccuracySummary ImageAccuracySummary associated from above ImageParameterValues 


objects (encoded inline) 
TBD All model-specific objects associated from above ImageParameterValues 


objects 


SensorParameterValues 
b New adjusted SensorParameterValues object associated from above 


ImageParameterValues objects
 c


ImageSensor ImageSensor object associated to above SensorParameterValues objects
 c


TBD All model-specific objects associated from above SensorParameterValues 
objects


 c


ObjectPoint ObjectPoint object associated from above ImageOrientation objects 
ObjectPosition New ObjectPosition object associated from above ObjectPoint objects 


CovarianceMatrix 
b CovarianceMatrix object associated from above AdjustedGroup and 


ObjectPosition objects 
ObjectImage


Transformation 
ObjectImageTransformation object associated to above 


ImageParameterValues objects 
a These class names omit the UML package prefixes. The XML element names are the same (without 
prefixes). 
b Since this class is abstract, objects shall be of one of the multiple non-abstract subclasses of this class. 
c Shall be included only if one or more of the SensorParameters was adjusted in this triangulation. 


 
7.3.6 OperationResponse message XML encoding (optional) 


The normal response to a valid Triangulate operation request can be XML encoded as an 
OperationResponse message, as specified in Subclause 13.4 of [OGC 06-056]. The 
contents referenced by that message shall be encoded in XML as specified in Subclauses 
TBD and TBD of [OGC 06-055]. 


EXAMPLE  An example XML encoded IGS OperationResponse XML encoded is: 
TBD 
 







OGC 06-054r1 


20 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


7.3.7 OperationResponse message SOAP encoding (mandatory) 


IGS servers shall implement SOAP version 1.2 transfer of the Triangulate operation 
response as specified in Annex D, using the XML encoding specified above. 


EXAMPLE  An example OperationResponse XML encoded for in a SOAP envelope is: 
TBD 
 


7.3.8 Triangulate operation exceptions 


When an IGS server encounters an error while performing a Triangulate operation, it 
shall return an exception report message as specified in Subclause 7.4 of [OGC 05-008]. 
The allowed standard exception codes shall include those listed in Table 8. For each 
listed exceptionCode, the contents of the “locator” parameter value shall be as specified 
in the right column of Table 8. 


NOTE  To reduce the need for readers to refer to other documents, the first four values listed below are 
copied from Table 20 in Subclause 8.3 of [OGC 05-008]. 


Table 8 — Exception codes for Triangulate operation 


exceptionCode value Meaning of code “locator” value 
MissingParameterValue Operation request does not include a parameter 


value, and this server did not declare a default 
value for that parameter 


Name of missing 
parameter 


InvalidParameterValue Operation request contains an invalid parameter 
value 


Name of parameter 
with invalid value 


OptionNotSupported
  


Request is for an option that is not supported by 
this server  


Identifier of option 
not supported  


NoApplicableCode No other exceptionCode specified by this service 
and server applies to this exception 


None, omit “locator” 
parameter 


DidNotConverge Iterative computation did not converge None, omit “locator” 
parameter 


ComputationError Computation error occurred during computation, 
such as overflow or underflow 


None, omit “locator” 
parameter 


 
In addition to the exceptionCode values listed above, each IGS server can define and use 
server-specific exceptionCode values. Those server-specific exceptionCode values and 
their meanings shall be encoded using the ows:Parameter element in the 
OperationsMetadata section of the service metadata (Capabilities) document, see 
Subclause 8.3.3. 


8 GetCapabilities operation (mandatory) 


8.1 Introduction 


The mandatory GetCapabilities operation allows clients to retrieve service metadata from 
a server. The response to a GetCapabilities request shall be an XML document containing 
service metadata about the server, including the coordinate Transformation, 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 21
 


GeodeticCRS, and other computational abilities of this server. This clause specifies the 
XML document that an IGS server must return to describe its capabilities. 


8.2 GetCapabilities operation request 


8.2.1 GetCapabilities request contents 


The GetCapabilities operation request shall be as specified in Subclauses 7.2 and 7.3 of 
[OGC 05-008]. The value of the “service” parameter shall be “IGS”. The allowed set of 
service metadata (or Capabilities) XML document section names and meanings shall be 
as specified in Tables 3 and 7 of [OGC 05-008]. For an IGS, the Contents section will 
contain metadata about the coordinate transformation and CRS abilities of this server (not 
about data that can be accessed from this server). 


The GetCapabilities operation shall be implemented by all IGS servers and clients. The 
“Multiplicity and use” column in Table 1 of [OGC 05-008] specifies the optionality of 
each listed parameter in the GetCapabilities operation request. Table 9 specifies the 
implementation of those parameters by IGS clients and servers. 


Table 9 — Implementation of parameters in GetCapabilities operation request 


Names Multiplicity Client implementation Server implementation 
service 
service 


One 
(mandatory) 


request 
request 


One 
(mandatory) 


Each parameter shall be 
implemented by all clients, 
using specified value 


Each parameter shall be 
implemented by all servers, 
checking that each parameter is 
received with specified value 


AcceptVersions 
AcceptVersions 


Zero or one 
(optional) 


Should be implemented by all 
software clients, using 
specified values 


Shall be implemented by all 
servers, checking if parameter 
is received with specified 
value(s) 


Sections 
Sections 


Zero or one 
(optional) b


Parameter may be 
implemented by each client 


If parameter not provided, 
shall expect default response 


If parameter provided, shall 
allow default or specified 
response 


Parameter may be implemented 
by each server 


If parameter not implemented or 
not received, shall provide 
default response 


If parameter implemented and 
received, shall provide 
specified response 


updateSequence 
updateSequence 


Zero or one 
(optional) 


AcceptFormats 
AcceptFormats 


Zero or one 
(optional) 


Each parameter should not be 
implemented by each client 


Client shall allow and expect 
default response 


Each parameter should not be 
implemented by each server 


If parameter not implemented, 
shall provide default response 


 
 
8.2.2 GetCapabilities request KVP encoding (mandatory) 


All IGS servers shall implement HTTP GET transfer of the GetCapabilities operation 
request, using KVP encoding as specified in Subclause TBD of [OGC 05-008]. 







OGC 06-054r1 


22 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


EXAMPLE 1 To request a IGS capabilities document, a client could issue the following KVP encoded 
GetCapabilities operation request with near-minimum contents: 


www.baesystems.com/webservice/igs&service=IGS&request=getCapabilities 
 
EXAMPLE 2 The corresponding GetCapabilities operation request XML encoded for HTTP POST is: 


TBD 
 


8.2.3 GetCapabilities request XML encoding (optional) 


IGS servers can implement HTTP POST transfer of the GetCapabilities operation 
request, using XML encoding only. The following schema fragment specifies the 
contents and structure of a GetCapabilities operation request encoded in XML: 


 <element name="GetCapabilities"> 
  <annotation> 
   <documentation>Request to an IGS server to perform the 
GetCapabilities operation. This operation allows a client to retrieve a 
Capabilities XML document providing metadata for the specific IGS 
server. In this XML encoding, no "request" parameter is included, since 
the element name specifies the specific operation. </documentation> 
  </annotation> 
  <complexType> 
   <complexContent> 
    <extension base="ows:GetCapabilitiesType"> 
     <sequence/> 
     <attribute name="service" type="ows:ServiceType" 
use="required" fixed="IGS"/> 
    </extension> 
   </complexContent> 
 
  </complexType> 
 </element> 
 
EXAMPLE  An example Triangulate operation request XML encoded for HTTP POST is: 
TBD 
 


8.2.4 GetCapabilities request SOAP encoding (mandatory) 


IGS servers shall implement SOAP version 1.2 transfer of the GetCapabilities operation 
request as specified in Annex D, using the XML encoding specified above. 


EXAMPLE  An example GetCapabilities operation request XML encoded for in a SOAP envelope is: 
TBD 
 


8.3 GetCapabilities operation response 


8.3.1 Exceptions 


When an IGS server encounters an error while performing a GetCapabilities operation, it 
shall return an exception report message as specified in Clause 8 of [OGC 05-008]. The 
allowed exception codes shall include those listed in Table 5 of Subclause 7.4.1 of [OGC 
05-008], except for the the InvalidUpdateSequence exceptionCode. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 23
 


8.3.2 Normal response contents sections 


The service metadata document shall contain the four optional sections specified in Table 
10. Depending on the values in the Sections parameter of the GetCapabilities operation 
request, any combination of these sections can be requested and shall be returned when 
requested. 


Table 10 — Section name values and contents 


Section name Contents 
ServiceIdentification Metadata about this specific server. The schema of this section shall be the 


same as for all OWSs, as specified in Subclause 7.4.3 and 
owsServiceIdentification.xsd of [OGC 05-008]. 


ServiceProvider Metadata about the organization operating this server. The schema of this 
section shall be the same for all OWSs, as specified in Subclause 7.4.4 
and owsServiceProvider.xsd of [OGC 05-008]. 


OperationsMetadata Metadata about the operations specified by this service and implemented by 
this server, including the URLs for operation requests. The contents and 
organization of this section shall be the same as for all OWSs, as specified 
in Subclause 7.4.5 and owsOperationsMetadata.xsd of [OGC 05-008]. 


Contents Metadata about the data served by this server. For the IGS, this section shall 
contain data about the coordinate Transformation, GeodeticCRS, and 
other computational abilities of this server, as specified in Subclauses 
8.3.4 and 8.3.5 below. 


 
In addition to these sections, each service metadata document shall include the mandatory 
“version” parameter specified in Table 6 in Subclause 7.4.1 of [OGC 05-008]. The 
optional updateSequence parameter specified in that table should not be included, as 
indicated in Table 9. 


8.3.3 OperationsMetadata section standard contents 


For an IGS, the OperationsMetadata section shall be the same (TBR) as for all OGC Web 
Services, as specified in Subclause 7.4.5 and owsOperationsMetadata.xsd of [OGC 05-
008]. The mandatory values of various (XML) attributes shall be as specified in Table 11. 
In Table 11, the “Attribute name” column uses dot-separator notation to identify parts of 
a parent item. The “Attribute value” column references an operation parameter, in this 
case an operation name, and the meaning of including that value is listed in the right 
column. 


Table 11 — Required values of OperationsMetadata section attributes 


Attribute name Attribute value Meaning of attribute value 
Triangulate The Triangulate operation is implemented by this server. Operation.name 
GetCapabilities The GetCapabilities operation is implemented by this server. 


 
In addition to the optional values listed in Table 11, there are many optional values of the 
“name” attributes and “value” elements in the OperationsMetadata section, which may be 







OGC 06-054r1 


24 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


included when considered useful. Most of these attributes and elements are for recording 
the domains of various parameters and quantities. 


EXAMPLE 1 The domain of the exceptionCode parameter could record all the codes implemented for each 
operation by that specific server. Similarly, each of the GetCapabilities operation optional request parameters might 
have its domain recorded. 


EXAMPLE 2 The domain of the Sections parameter in the GetCapabilities operation request could record all the 
sections implemented by that specific server. 


For the Triangulate operation, an ows:Parameter element shall be included for each 
server-specific ControlValue quantity implemented by the server, as specified in 
Subclause 7.2.1, providing the quantity name, meaning, units if any, allowed values, and 
default value. Also, an ows:Parameter element shall be included for all server-specific 
triangulation results check values implemented, that can be named in the checkPassed 
and checkFailed elements specified in Table 11 in Subclause 8.2 of the image 
geopositioning metadata applications schema [OGC 06-055]. Similarly, an 
ows:Parameter element shall be included for the “exceptionCode” parameter, which shall 
list all the exceptionCode values implemented by that server. 


All IGS servers shall specify the encodings that may be sent using HTTP POST transfer 
of operation requests, within the OperationsMetadata section of a service metadata 
(Capabilities) XML document. Specifically, an ows:Constraint element shall be included, 
with “PostEncoding” as the value of the “name” attribute and specifying different 
allowed values for each allowed encoding: 


a) The value “SOAP” shall indicate that SOAP encoding is allowed, as specified in 
Subclause 11.8. 


b) The value “XML” shall indicate that XML encoding is allowed (without SOAP 
message encapsulation). 


If the HTTP POST connect point URL is different for different encodings of the 
operation requests, this ows:Constraint element shall be included in each Post element. If 
the connect point URL is the same for all encodings of all operation requests, this 
ows:Constraint element shall be included in the OperationsMetadata element. 


8.3.4 Contents section contents 


The Contents section for the IGS shall contain data about the coordinate Transformations, 
GeodeticCRSs, and other computational abilities of this server. The Contents section 
shall include or reference the data structures shown graphically in the UML diagram in 
Figure 4 and specified in Table 12. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 25
 


+geodeticCS


IGSserviceMetadata


CC_OperationMethod
(from ISO 19111)


CC_GeneralOperationParameter
(from ISO 19111)


CS_GeodeticCS
(from ISO 19111)


SC_GeodeticCRS
(from ISO 19111)


IGScontents
<<DataType>>


CD_GeodeticDatum
(from ISO 19111)


1


+method


1..*0..*


+usesParameter0..*


0..*


0..*


+parameter


0..*


1+coordinateSystem
0..*


+geodeticCRS


1..*


0..*1 0..*


0..*


+contents0..10..1


1


0..*


1..*


0..*


0..*1..* 0..*


0..*
0..*


0..*


0..*


0..*


0..*


0..*


1+datum 1 0..*


0..*


+geodeticDatum


0..*


0..*


 


Figure 4 — IGS contents section UML class diagram 







OGC 06-054r1 


26 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Table 12 — Contents of IGS Contents section 


Names Definition Data type  Multiplicity and use 
method 
method 


Association to operation 
method that this server can 
use in object-to-image 
coordinate Transformations 


URI or 
CC_OperationMethod 


One or more (mandatory) 
One for each such 


operation method 
implemented by this 
server 


parameter 
parameter 


Association to operation 
parameter or group used by 
associated operation methods 


URI or 
CC_GeneralOperation
Parameter 


Zero of more (optional) 
Include when used but 


not directly included by 
associated operation 
methods 


geodeticCRS 
geodeticCRS 


Association to geodetic 
Coordinate Reference 
System (CRS) that this 
server can use for object 
positions and image 
parameters (TBR) 


URI or 
SC_GeodeticCRS 


One or more (mandatory) 
One for each such CRS 


implemented by this 
server 


datum 
datum 


Association to geodetic datum 
used by associated geodetic 
CRSs 


URI or 
CD_GeodeticDatum 


Zero of more (optional) 
Include when used but 


not directly included by 
associated geodetic 
CRSs 


coordinate
System 


coordinate
System 


Association to geodetic 
coordinate system used by 
associated geodetic CRSs 


URI or CS_GeodeticCS Zero of more (optional) 
Include when used but 


not directly included by 
associated geodetic 
CRSs 


 
The “Multiplicity and use” columns in Table 6 through Table 16 in [OGC 05-008], and in 
Table 12 of this document, specify the optionality of each listed parameter and data 
structure in the GetCapabilities operation response. All the “mandatory” parameters and 
data structures shall be implemented by all OWS servers, using a specified value(s). 


All the “optional” parameters and data structures, in the GetCapabilities operation 
response, should be implemented by all OWS servers using specified values, whenever 
and wherever each is considered useful metadata for that server. 


8.3.5 Capabilities document XML encoding (optional) 


A XML schema fragment for an IGS service metadata document extends the 
ows:CapabilitiesBaseType in owsCommon.xsd of [OGC 05-008], and is: 


 <element name="Capabilities"> 
  <annotation> 
   <documentation>XML encoded IGS GetCapabilities operation 
response. The Capabilities document provides clients with service 
metadata about a specific service instance, including metadata about 
the coordinate Transformation, GeodeticCRS, and other computational 
abilities of this server. If the server does not implement the 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 27
 


updateSequence parameter, the server shall always return the complete 
Capabilities document, without the updateSequence parameter. When the 
server implements the updateSequence parameter and the GetCapabilities 
operation request included the updateSequence parameter with the 
current value, the server shall return this element with only the 
"version" and "updateSequence" attributes. Otherwise, all optional 
elements shall be included or not depending on the actual value of the 
Contents parameter in the GetCapabilities operation request. 
</documentation> 
  </annotation> 
  <complexType> 
   <complexContent> 
    <extension base="ows:CapabilitiesBaseType"> 
     <sequence> 
      <element ref="igs:Contents" minOccurs="0"/> 
     </sequence> 
    </extension> 
   </complexContent> 
  </complexType> 
 </element> 
 <!-- =========================================================== --> 
 <element name="Contents"> 
  <complexType> 
   <sequence> 
    <element name="Method" 
type="gml:OperationMethodPropertyType" maxOccurs="unbounded"> 
     <annotation> 
 
      <documentation>Unordered list of associations to 
the operation methods that this server can use in object-to-image 
coordinate Transformations. </documentation> 
     </annotation> 
    </element> 
    <element name="parameter" 
type="gml:OperationParameterPropertyType" minOccurs="0" 
maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Association to operation parameter 
or group used by associated operation methods. Include for each 
operation parameter and group that is not directly included by 
associated operation methods. </documentation> 
     </annotation> 
    </element> 
    <element name="GeodeticCRS" 
type="gml:GeodeticCRSPropertyType" maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Unordered list of associations to 
the geodetic Coordinate Reference Systems (CRSs) that this server can 
use for object positions and image parameters (TBR). </documentation> 
     </annotation> 
    </element> 
    <element name="datum" type="gml:GeodeticDatumPropertyType" 
minOccurs="0" maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Association to geodetic datum used 
by associated geodetic CRSs. Include for each geodetic datum that is 
not directly included by associated GeodeticCRS. </documentation> 
     </annotation> 







OGC 06-054r1 


28 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


    </element> 
    <element ref="gml:ellipsoidalCS" minOccurs="0" 
maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Association to ellipsoidal 
coordinate system used by associated geodetic CRSs. Include for each 
ellipsoidal coordinate system that is used but not directly included by 
associated GeodeticCRS. </documentation> 
     </annotation> 
    </element> 
    <element ref="gml:cartesianCS" minOccurs="0" 
maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Association to cartesian coordinate 
system used by associated geodetic CRSs. Include for each cartesian 
coordinate system that is used but not directly included by associated 
GeodeticCRS. </documentation> 
     </annotation> 
    </element> 
    <element ref="gml:sphericalCS" minOccurs="0" 
maxOccurs="unbounded"> 
     <annotation> 
      <documentation>Association to spherical coordinate 
system used by associated geodetic CRSs. Include for each spherical 
coordinate system that is used but not directly included by associated 
GeodeticCRS. </documentation> 
     </annotation> 
    </element> 
   </sequence> 
  </complexType> 
 </element> 
 


8.3.6 Capabilities document XML example 


In response to GetCapabilities operation request, an IGS server might generate a XML 
document that looks like: 


TBD 
 


8.3.7 Capabilities document SOAP encoding (mandatory) 


IGS servers shall implement SOAP version 1.2 transfer of the GetCapabilities operation 
response as specified in Annex D, using the XML encoding specified above. 


EXAMPLE  An example Capabilities document XML encoded for in a SOAP envelope is: 
TBD 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 29
 


Annex A 
(normative) 


 
Abstract test suite 


An abstract test suite is not provided in this draft version of this Implementation 
Specification, but should be included in version 1.0.0. 







OGC 06-054r1 


30 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Annex B 
(normative) 


 
XML Schema Documents 


In addition to this document, this specification includes several normative XML Schema 
Documents. These XML Schema Documents are bundled in a zip file with the present 
document. After OGC acceptance of a Version 1.0.0 of this specification, these XML 
Schema Documents will also be posted online at the URL 
http://schemas.opengeospatial.net/igs/1.0.0. In the event of a discrepancy between the 
bundled and online versions of the XML Schema Documents, the online files shall be 
considered authoritative. 


The IGS abilities now specified in this document use two specified XML Schema 
Documents included in the zip file with this document. These XML Schema Documents 
combine the XML schema fragments listed in various subclauses of this document. These 
XML Schema Documents roughly match two of the three UML packages described in 
Annex B, and are named: 


igsTriangulate.xsd 


igsGetCapabilities.xsd 


These XML Schema Documents use and build on the OWS Common version 1.0 XML 
Schema Documents specified in [OGC 05-008], named: 


ows19115subset.xsd 


owsCommon.xsd 


owsDataIdentification.xsd 


owsExceptionReport.xsd 


owsGetCapabilities.xsd 


owsOperationsMetadata.xsd 


owsServiceIdentification.xsd 


owsServiceProvider.xsd 


owsManifest.xsd [in change proposal OGC 06-015r2] 


owsInputOutputData.xsd [in change proposal OGC 06-056] 


All these XML Schema Documents contain documentation of the meaning of each 
element and attribute, and this documentation shall be considered normative as specified 
in Subclause 11.6.3 of [OGC 05-008]. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 31
 


Annex C 
(informative) 


 
UML model 


C.1 Introduction 


This annex provides a UML model of the IGS interface, using the OGC/ISO profile of 
UML summarized in Subclause 5.3 of [05-008]. 


Figure C.1 is a simple UML diagram summarizing the IGS interface. This class diagram 
shows that the ImageGeopositioningService class inherits the getCapabilities operation 
from the OGCWebService interface class, and adds the Triangulate operation. (The 
capitalization of names uses the OGC/ISO profile of UML.) 


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabi lites)


<<Interface>>


Each server instance instantiates only one object of this class, and 
this object always exists while server is available.


ImageGeopositioningService


+ Triangulate(request = Triangulate) : TriangulateResponse


 


Figure C.1 — IGS interface UML diagram 


Each of the two operations uses a request and a response data type, each of which is 
defined by one or more additional UML classes. The following subclauses provide a 
more complete UML model of the IGS interface, adding UML classes defining the 
operation request and response data types. 


C.2 UML packages 


The IGS interface UML model is organized in three packages, as shown in the package 
diagram in Figure C.2. This package diagram shows the dependencies among the various 
packages shown. The IGS-specific packages make direct use of five OWS Common 
packages, named OWS Get Capabilities, OWS Service Identification, OWS Service 







OGC 06-054r1 


32 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Provider, OWS Operations Metadata, and OWS Input Output Data. These IGS-specific 
packages also make direct use of two classes from the ISO 19111 UML model, named 
CC_OperationMethod and SC_GeodeticCRS. 


IGS Service
+ IGSRequestBase


+ ImageGeopositioningService


IGS Get Capabilities
+ IGSGetCapabilities


+ IGScontents
+ IGSserviceMetadata


IGS Triangulate
+ Acknowlegement


+ ControlValue
+ ControlValues


+ Triangulate


OWS Get Capabilites
(from OWS Common)


+ GetCapabilities {Abstract}
+ OGCWebService {Abstract}


+ RequestBase {Abstract}
+ Section


+ ServiceMetadata {Abstract}


OWS Input Output Data
(from OWS Common)


+ InputData
...


ISO 19111
(from ISO)


+ CC_OperationMethod
+ SC_GeodeticCRS


OWS Service Provider
(from OWS Common)


+ ServiceProvider


OWS Service 
Identification


(from OWS Common)
+ ServiceIdentification


OWS Operations Metadata
(from OWS Common)


+ DCP
+ ExtendedCapabilities {Abstract}


+ HTTP
+ Operation


+ OperationsMetadata
+ RequestMethod


 


Figure C.2 — IGS interface package diagram 


Each of the three IGS-specific packages shown in Figure C.2 is described in the 
following subclauses. The OWS Get Capabilities, OWS Service Identification, OWS 
Service Provider, OWS Operations Metadata, and OWS Input Output Data packages are 
described in Annex B of [OGC 05-008] and Clause 13 of change proposals [OGC 06-
015r2 and 06-056]. 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 33
 


C.3 Image Geopositioning Service package 


The Image Geopositioning Service package is shown in the class diagram in Figure C.3. 
This diagram does not show the classes used by the two operation requests and responses, 
which are shown (with part of this package) in the Triangulate and the IGS Get 
Capabilities packages. This diagram also shows two used classes from the OWS Web 
Service package, which is common to all OGC Web Services. 


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabi lites)


<<Interface>>


Each server instance instantiates only one object of this class, and 
this object always exists while server is available.


ImageGeopositioningService


+ Triangulate(request = Triangulate) : OperationResponse


RequestBase {Abstract}


+ service : CharacterString
+ request : CharacterString
+ version : CharacterString


(from OWS Get Capabi lites)


IGSRequestBase


+ service : CharacterString = "IGS" {frozen}()
 


Figure C.3 — Image Geopositioning Service package class diagram 







OGC 06-054r1 


34 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


C.4 Triangulate package 


The Triangulate package is shown in the class diagram in Figure C.4. This diagram also 
shows two classes each from the IGS Service, OWS Get Capabilities, and OWS Input 
Output Data packages. The four classes introduced by this package are further defined by 
Table 2 through Table 4 and Table 6 in this document. 


RequestBase {Abstract}


+ service : CharacterString
+ request : CharacterString
+ version : CharacterString


(from OWS Get Capabi lites)


IGSRequestBase


+ service : CharacterString = "IGS" {frozen}()


(from IGS Service)


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabi lites)


<<Interface>>


ImageGeopositioningService


+ Triangulate(request = Triangulate) : OperationResponse


(from IGS Service)


OperationResponse
(from OWS Input Output Data)


ControlValue
+ name : CharacterString
+ value : Any


InputData
(from OWS Input Output Data)


ControlValues
+ minimumIterations : PositiveInteger
+ maximumIterations : PositiveInteger
+ detectConvergence : Boolean
+ extraIterations [0..1] : PositiveInteger
+ useElevationData : Boolean
+ removeTiePointBlunders : Boolean
+ removeHorizontalBlunders : Boolean
+ removeVerticalBlunders : Boolean


0..*


1


+controlValue0..*


1


Triangulate
+ store [0..1] : Boolean
+ responseHandler [0..1] : URL


1


1
+inputData


1


1


1


1


+controlValues1


1


Acknowlegement
+ timeStamp : DateTime


0..1 1


+operationRequest


0..1 1


 


Figure C.4 — Triangulate package class diagram 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 35
 


C.4 IGS Get Capabilities package 


The IGS Get Capabilities package is shown in the class diagram in Figure C.5. This 
diagram also shows seven classes from OWS Common packages, plus two classes from 
ISO 19111 [OGC 05-103]. The classes in this package are further defined by Table 10 
and Table 12 in this document. 







OGC 06-054r1 


36 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


OGCWebService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabi lites)


<<Interface>>


GetCapabilities {Abstract}


+ service : CharacterString
+ request : CharacterString = "GetCapabilities" {frozen}
+ acceptVersions [0..1] : Sequence<CharacterString>
+ sections [0..1] : List<Section>
+ acceptFormats [0..1] : Sequence<CharacterString>
+ updateSequence [0..1] : CharacterString


(from OWS Get Capabi lites)


Section


+ serviceIdentification
+ serviceProvider
+ operationsMetadata
+ contents
+ all


(from OWS Get Capabi li tes)


<<CodeList>>
IGSGetCapabilities


+ service : CharacterString = "IGS" {frozen}
+ acceptFormats [0] : Sequence<CharacterString>
+ updateSequence [0] : CharacterString


ServiceIdentification
(from OWS Service Identification)


OperationsMetadata
(from OWS Operations Metadata)


ServiceMetadata {Abstract}


+ version : CharacterString
+ updateSequence [0..1] : CharacterString


(from OWS Get Capabi lites)


0..1


1


+serviceIdentification


0..1


1


0..1


1


+operationsMetadata


0..1


1
ServiceProvider


(from OWS Service Provider)


10..1 1


+serviceProvider


0..1


IGSserviceMetadata


CC_OperationMethod
(from ISO 19111)


CC_GeneralOperationParameter
(from ISO 19111)


0..*


0..*


0..*


+usesParameter 0..*


CS_GeodeticCS
(from ISO 19111)


SC_GeodeticCRS
(from ISO 19111)


1 0..*1+coordinateSystem 0..*


IGScontents


0..1


1


+contents0..1


1


1..*


0..*


+geodeticCRS


1..*


0..*


1..* 0..*


+method


1..* 0..*


0..*
0..*


+parameter


0..*
0..*


0..*


0..*


+geodeticCS


0..*


0..*


CD_GeodeticDatum
(from ISO 19111)


1 0..*1+datum 0..*


0..*


0..*


0..*


+geodeticDatum


0..*


 


Figure C.5 — IGS Get Capabilities package class diagram 







OGC 06-054r1 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 37
 


Annex D 
(normative) 


 
SOAP transfer 


All compliant IGS servers shall implement SOAP 1.2 transfer of all IGS operation 
requests and responses, using the XML encodings specified in the body of this document. 
The SOAP Request-Response message exchange pattern shall be used with the HTTP 
POST binding. 


For SOAP transfer, each XML-encoded operation request shall be encapsulated in the 
body of a SOAP envelope, which shall contain only a body and only this request in that 
body. Similarly, each XML-encoded operation response shall be encapsulated in the body 
of a SOAP envelope, which shall contain only a body and only this response in that body. 
An IGS server shall return operation responses and error messages using only SOAP 
transfer when the operation request is sent using SOAP. 


All compliant IGS servers shall specify the URLs to which SOAP-encoded operation 
requests shall be sent, within the OperationsMetadata section of a service metadata 
(Capabilities) XML document, as specified in Subclause 8.3.3. 


If an error is detected while processing an operation request encoded in a SOAP 
envelope, the IGS server shall generate a SOAP response message where the content of 
the Body element is a Fault element containing an ExceptionReport element. This shall 
be done using the following XML fragment:  


<soap:Envelope xmlns:soap=http://www.w3.org/2003/05/soap-envelope> 
 <soap:Body> 
  <soap:Fault> 
   <soap:Code> 
    <soap:Value>soap:Server</soap:Value> 
   </soap:Code> 
   <soap:Reason> 
    <soap:Text>A server exception was encountered.<soap:Text> 
   </soap:Reason> 
   <soap:Detail> 
    <ows:ExceptionReport> 
     ... 
    </ows:ExceptionReport> 
   </soap:Detail> 
  </soap:Fault> 
 </soap:Body> 
</soap:Envelope> 
 
The Code element shall have the Value “soap:server” indicating that this is a server 
exception. The Reason element shall have the Text “Server exception was encountered.” 
This fixed string is used since the details of the exception shall be specified in the Detail 
element using an ows:ExceptionReport element as specified in OWS Common [OGC 05-
008]. 







OGC 06-054r1 


38 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.
 


Bibliography 


[1] ASPRS 2004, Manual of Photogrammetry, Fifth Edition, American Society for 
Photogrammetry and Remote Sensing, 2004 


[2] ISO/TS 19138 draft n1934, Geographic information — Data quality measures 


[3] OGC 00-115, OGC Abstract Specification Topic 15: Image Exploitation Services, 
available at 


[4] OGC 05-095r1, GML 3.1.1 common CRSs profile, available at 


[5] OGC 05-096r1, GML 3.1.1 grid CRSs profile, available at 


[6] USIGS Glossary 


 





		Scope

		Compliance

		Normative references

		Terms and definitions

		Conventions

		Abbreviated terms

		UML notation

		Used parts of other documents

		Platform-neutral and platform-specific specifications

		Data dictionary tables



		Image Geopositioning Service overview

		Function

		Operations

		Operation request encoding



		Triangulate operation (mandatory)

		Introduction

		Triangulate operation request

		Triangulate request parameters

		Triangulate request XML encoding (optional)

		Triangulate request SOAP encoding (mandatory)



		Triangulate operation response

		Introduction

		Acknowledgement message contents

		Acknowledgement message XML encoding

		Acknowledgement message SOAP encoding

		OperationResponse message contents

		OperationResponse message XML encoding (optional)

		OperationResponse message SOAP encoding (mandatory)

		Triangulate operation exceptions





		GetCapabilities operation (mandatory)

		Introduction

		GetCapabilities operation request

		GetCapabilities request contents

		GetCapabilities request KVP encoding (mandatory)

		GetCapabilities request XML encoding (optional)

		GetCapabilities request SOAP encoding (mandatory)



		GetCapabilities operation response

		Exceptions

		Normal response contents sections

		OperationsMetadata section standard contents

		Contents section contents

		Capabilities document XML encoding (optional)

		Capabilities document XML example

		Capabilities document SOAP encoding (mandatory)









06-054r1 Geopositioning Service Folder/gml/basicTypes.xsd
 
	 
		 basicTypes.xsd
		 See ISO/DIS 19136 8.2.
W3C XML Schema provides a set of built-in “simple” types which define methods for representing values as literals without internal markup.  These are described in W3C XML Schema Part 2:2001.  Because GML is an XML encoding in which instances are described using XML Schema, these simple types shall be used as far as possible and practical for the representation of data types.  W3C XML Schema also provides methods for defining 
-	new simple types by restriction and combination of the built-in types, and 
-	complex types, with simple content, but which also have XML attributes.  
In many places where a suitable built-in simple type is not available, simple content types derived using the XML Schema mechanisms are used for the representation of data types in GML.  
A set of these simple content types that are required by several GML components are defined in the basicTypes schema, as well as some elements based on them. These are primarily based around components needed to record amounts, counts, flags and terms, together with support for exceptions or null values.
	
	 
		 
			 gml:NilReasonType defines a content model that allows recording of an explanation for a void value or other exception.
gml:NilReasonType is a union of the following enumerated values:
-	inapplicable there is no value
-	missing the correct value is not readily available to the sender of this data. Furthermore, a correct value may not exist
-	template the value will be available later
-	unknown the correct value is not known to, and not computable by, the sender of this data. However, a correct value probably exists
-	withheld the value is not divulged
-	other:text other brief explanation, where text is a string of two or more characters with no included spaces
and
-	anyURI which should refer to a resource which describes the reason for the exception
A particular community may choose to assign more detailed semantics to the standard values provided. Alternatively, the URI method enables a specific or more complete explanation for the absence of a value to be provided elsewhere and indicated by-reference in an instance document.
gml:NilReasonType is used as a member of a union in a number of simple content types where it is necessary to permit a value from the NilReasonType union as an alternative to the primary type.
		
		 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
			 
				 
					 
				
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:SignType is a convenience type with values “+” (plus) and “-“ (minus).
		
		 
			 
			 
		
	
	 
		 
			 Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.
		
		 
	
	 
		 
			 Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.
		
		 
	
	 
		 
			 Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.
		
		 
	
	 
		 
			 Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.
		
		 
	
	 
		 
			 Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.
		
		 
	
	 
		 
			 gml:CodeType is a generalized type to be used for a term, keyword or name.
It adds a XML attribute codeSpace to a term, where the value of the codeSpace attribute (if present) shall indicate a dictionary, thesaurus, classification scheme, authority, or pattern for the term.
		
		 
			 
				 
			
		
	
	 
		 
			 gml:CodeWithAuthorityType requires that the codeSpace attribute is provided in an instance.
		
		 
			 
				 
			
		
	
	 
		 
			 gml:MeasureType supports recording an amount encoded as a value of XML Schema double, together with a units of measure indicated by an attribute uom, short for “units Of measure”. The value of the uom attribute identifies a reference system for the amount, usually a ratio or interval scale.
		
		 
			 
				 
			
		
	
	 
		 
			 The simple type gml:UomIdentifer defines the syntax and value space of the unit of measure identifier.
		
		 
	
	 
		 
			 This type specifies a character string of length at least one, and restricted such that it must not contain any of the following characters: “:” (colon), “ “ (space), (newline), (carriage return), (tab). This allows values corresponding to familiar abbreviations, such as “kg”, “m/s”, etc. 
It is recommended that the symbol be an identifier for a unit of measure as specified in the “Unified Code of Units of Measure" (UCUM) (http://aurora.regenstrief.org/UCUM). This provides a set of symbols and a grammar for constructing identifiers for units of measure that are unique, and may be easily entered with a keyboard supporting the limited character set known as 7-bit ASCII. ISO 2955 formerly provided a specification with this scope, but was withdrawn in 2001. UCUM largely follows ISO 2955 with modifications to remove ambiguities and other problems.
		
		 
			 
		
	
	 
		 
			 This type specifies a URI, restricted such that it must start with one of the following sequences: “#”, “./”, “../”, or a string of characters followed by a “:”. These patterns ensure that the most common URI forms are supported, including absolute and relative URIs and URIs that are simple fragment identifiers, but prohibits certain forms of relative URI that could be mistaken for unit of measure symbol . 
NOTE	It is possible to re-write such a relative URI to conform to the restriction (e.g. “./m/s”).
In an instance document, on elements of type gml:MeasureType the mandatory uom attribute shall carry a value corresponding to either 
-	a conventional unit of measure symbol,
-	a link to a definition of a unit of measure that does not have a conventional symbol, or when it is desired to indicate a precise or variant definition.
		
		 
			 
		
	
	 
		 
			 This type is deprecated for tuples with ordinate values that are numbers.
CoordinatesType is a text string, intended to be used to record an array of tuples or coordinates. 
While it is not possible to enforce the internal structure of the string through schema validation, some optional attributes have been provided in previous versions of GML to support a description of the internal structure. These attributes are deprecated. The attributes were intended to be used as follows:
Decimal	symbol used for a decimal point (default=”.” a stop or period)
cs        	symbol used to separate components within a tuple or coordinate string (default=”,” a comma)
ts        	symbol used to separate tuples or coordinate strings (default=” “ a space)
Since it is based on the XML Schema string type, CoordinatesType may be used in the construction of tables of tuples or arrays of tuples, including ones that contain mixed text and numeric values.
		
		 
			 
				 
				 
				 
			
		
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 A type for a list of values of the respective simple type.
		
		 
	
	 
		 
			 gml:CodeListType provides for lists of terms. The values in an instance element shall all be valid according to the rules of the dictionary, classification scheme, or authority identified by the value of its codeSpace attribute.
		
		 
			 
				 
			
		
	
	 
		 
			 gml:CodeOrNilReasonListType provides for lists of terms. The values in an instance element shall all be valid according to the rules of the dictionary, classification scheme, or authority identified by the value of its codeSpace attribute. An instance element may also include embedded values from NilReasonType. It is intended to be used in situations where a term or classification is expected, but the value may be absent for some reason.
		
		 
			 
				 
			
		
	
	 
		 
			 gml:MeasureListType provides for a list of quantities.
		
		 
			 
				 
			
		
	
	 
		 
			 gml:MeasureOrNilReasonListType provides for a list of quantities. An instance element may also include embedded values from NilReasonType. It is intended to be used in situations where a value is expected, but the value may be absent for some reason.
		
		 
			 
				 
			
		
	




06-054r1 Geopositioning Service Folder/gml/coordinateOperations.xsd
 
	 
		 coordinateOperations.xsd
		 See ISO/DIS 19136 13.6.
The spatial or temporal coordinate operations schema components can be divided into five logical parts, which define elements and types for XML encoding of the definitions of:
-	Multiple abstract coordinate operations
-	Multiple concrete types of coordinate operations, including Transformations and Conversions
-	Abstract and concrete parameter values and groups
-	Operation methods
-	Abstract and concrete operation parameters and groups
These schema component encodes the Coordinate Operation package of the UML Model for ISO 19111 Clause 11.
	
	
	 
	 
	 
	
	 
		 
			 gml:AbstractCoordinateOperation is a mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values shall be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
The optional coordinateOperationAccuracy property elements provide estimates of the impact of this coordinate operation on point position accuracy.
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 gml:operationVersion is the version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion.
		
	
	
	 
		 
			 gml:coordinateOperationAccuracy is an association role to a DQ_PositionalAccuracy object as encoded in ISO/TS 19139, either referencing or containing the definition of that positional accuracy. That object contains an estimate of the impact of this coordinate operation on point accuracy. That is, it gives position error estimates for the target coordinates of this coordinate operation, assuming no errors in the source coordinates.
		
		 
			 
				 
			
			 
		
	
	
	 
		 
			 gml:sourceCRS is an association role to the source CRS (coordinate reference system) of this coordinate operation.
		
	
	
	 
		 
			 gml:targetCRS is an association role to the target CRS (coordinate reference system) of this coordinate operation.
		
	
	
	 
		 
			 gml:CoordinateOperationPropertyType is a property type for association roles to a coordinate operation, either referencing or containing the definition of that coordinate operation.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:AbstractSingleOperation is a single (not concatenated) coordinate operation.
		
	
	
	 
		 
			 gml:SingleOperationPropertyType is a property type for association roles to a single operation, either referencing or containing the definition of that single operation.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 deprecated
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gm:AbstractGeneralConversion is an abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters. The operationVersion, sourceCRS, and targetCRS elements are omitted in a coordinate conversion.
This abstract complex type is expected to be extended for well-known operation methods with many Conversion instances, in GML Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 gml:GeneralConversionPropertyType is a property type for association roles to a general conversion, either referencing or containing the definition of that conversion.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:AbstractGeneralTransformation is an abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation. The operationVersion, sourceCRS, and targetCRS proeprty elements are mandatory in a coordinate transformation.
This abstract complex type is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "AbstractGeneralParameterValue" element.
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 gml:GeneralTransformationPropertyType is a property type for association roles to a general transformation, either referencing or containing the definition of that transformation.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
	 
		 
			 gml:ConcatenatedOperation is an ordered sequence of two or more coordinate operations. This sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
The gml:coordOperation property elements are an ordered sequence of associations to the two or more operations used by this concatenated operation. The AggregationAttributeGroup should be used to specify that the coordOperation associations are ordered.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 gml:coordOperation is an association role to a coordinate operation.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:ConcatenatedOperationPropertyType is a property type for association roles to a concatenated operation, either referencing or containing the definition of that concatenated operation.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:PassThroughOperation is a pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation.
The modifiedCoordinate property elements are an ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. The AggregationAttributeGroup should be used to specify that the modifiedCoordinate elements are ordered.
		
	
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 gml:modifiedCoordinate is a positive integer defining a position in a coordinate tuple.
		
	
	
	 
		 
			 gml:usesOperation is deprecated, gml:coordOperation shall be used instead.
		
	
	
	 
		 
			 gml:PassThroughOperationPropertyType is a property type for association roles to a pass through operation, either referencing or containing the definition of that pass through operation.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:Conversion is a concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.
This concrete complex type can be used without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance.
The usesValue property elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 gml:method is an association role to the operation method used by a coordinate operation.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:parameterValue is a composition association to a parameter value or group of parameter values used by a coordinate operation.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:ConversionPropertyType is a property type for association roles to a concrete general-purpose conversion, either referencing or containing the definition of that conversion.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:Transformation is a concrete object element derived from gml:GeneralTransformation (13.6.2.13).
This concrete object can be used for all operation methods, without using a GML Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance.
The parameterValue elements are an unordered list of composition associations to the set of parameter values used by this conversion operation.
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 gml:TransformationPropertyType is a property type for association roles to a transformation, either referencing or containing the definition of that transformation.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:AbstractGeneralParameterValue is an abstract parameter value or group of parameter values.
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "operationParameter" property element that references one element substitutable for the "OperationParameter" object element.
		
	
	
	 
		 
	
	
	 
		 
			 gml:AbstractGeneralParameterValuePropertyType is a  property type for inline association roles to a parameter value or group of parameter values, always containing the values.
		
		 
			 
		
	
	
	
	 
		 
			 gml:ParameterValue is a parameter value, an ordered sequence of values, or a reference to a file of parameter values. This concrete complex type may be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with many instances.
		
	
	
	 
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 gml:value is a numeric value of an operation parameter, with its associated unit of measure.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:stringValue is a character string value of an operation parameter. A string value does not have an associated unit of measure.
		
	
	
	 
		 
			 gml:integerValue is a positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure.
		
	
	
	 
		 
			 gml:booleanValue is a boolean value of an operation parameter. A Boolean value does not have an associated unit of measure.
		
	
	
	 
		 
			 gml:valueList is an ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values.
		
	
	
	 
		 
			 gml:integerValueList is an ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values.
		
	
	
	 
		 
			 gml:valueFile is a reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file shall contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file may reference another part of the same or different files, as allowed in XML documents.
		
	
	
	 
		 
			 gml:operationParameter is an association role to the operation parameter of which this is a value.
		
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:ParameterValueGroup is a group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level ParameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complex type can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents. This complex type may be used, extended, or restricted for well-known operation methods, especially for methods with only one instance.
The parameterValue elements are an unordered set of composition association roles to the parameter values and groups of values included in this group.
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:group is an association role to the operation parameter group for which this element provides parameter values.
		
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:OperationMethod is a method (algorithm or procedure) used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters.
The generalOperationParameter elements are an unordered list of associations to the set of operation parameters and parameter groups used by this operation method.
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 gml:formula specifies a formula or procedure used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:sourceDimensions is the number of dimensions in the source CRS of this operation method.
		
	
	
	 
		 
			 gml:targetDimensions is the number of dimensions in the target CRS of this operation method.
		
	
	
	 
		 
			 gml:generalOperationParameter is an association to an operation parameter or parameter group.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:OperationMethodPropertyType is a property type for association roles to a concrete general-purpose operation method, either referencing or containing the definition of that method.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:GeneralOperationParameter is the abstract definition of a parameter or group of parameters used by an operation method.
		
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 gml:minimumOccurs is the minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number shall be one.
		
	
	
	 
		 
			 gml:AbstractGeneralOperationParameterPropertyType is a property type for association roles to an operation parameter or group, either referencing or containing the definition of that parameter or group.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:OperationParameter is the definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complex type is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 gml:OperationParameterPropertyType is a property type for association roles to an operation parameter, either referencing or containing the definition of that parameter.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	
	
	 
		 
			 gml:OperationParameterGroup is the definition of a group of parameters used by an operation method. This complex type is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.
The generalOperationParameter elements are an unordered list of associations to the set of operation parameters that are members of this group.
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 gml:maximumOccurs is the maximum number of times that values for this parameter group may be included. If this attribute is omitted, the maximum number shall be one.
		
	
	
	 
		 
			 deprecated
		
	
	
	 
		 
			 gml:OperationParameterPropertyType is a property type for association roles to an operation parameter group, either referencing or containing the definition of that parameter group.
		
		 
			 
		
		 
	
	
	 
		 
			 deprecated
		
	
	




06-054r1 Geopositioning Service Folder/gml/coordinateReferenceSystems.xsd
 
	 
		 coordinateReferenceSystems.xsd
		 See ISO/DIS 19136 13.3.
The spatial-temporal coordinate reference systems schema components are divided into two logical parts. One part defines elements and types for XML encoding of abstract coordinate reference systems definitions. The larger part defines specialized constructs for XML encoding of definitions of the multiple concrete types of spatial-temporal coordinate reference systems.
These schema components encode the Coordinate Reference System packages of the UML Models of ISO 19111 Clause 8 and ISO/DIS 19136 D.3.10, with the exception of the abstract "SC_CRS" class.
	
	 
	 
	 
	 
		 
			 gml:AbstractSingleCRS implements a coordinate reference system consisting of one coordinate system and one datum (as opposed to a Compound CRS).
		
	
	 
		 
			 gml:SingleCRSPropertyType is a property type for association roles to a single coordinate reference system, either referencing or containing the definition of that coordinate reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:AbstractGeneralDerivedCRS is a coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:conversion is an association role to the coordinate conversion used to define the derived CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:CompundCRS is a coordinate reference system describing the position of points through two or more independent coordinate reference systems. It is associated with a non-repeating sequence of two or more instances of SingleCRS.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 The gml:componentReferenceSystem elements are an ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. The gml:AggregationAttributeGroup should be used to specify that the gml:componentReferenceSystem properties are ordered.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:CompoundCRSPropertyType is a property type for association roles to a compound coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
	 
		 
			 gml:GeodeticCRS is a coordinate reference system based on a geodetic datum.
		
		 
			 
				 
					 
						 
						 
						 
					
					 
				
			
		
	
	 
		 
			 gml:ellipsoidalCS is an association role to the ellipsoidal coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:cartesianCS is an association role to the Cartesian coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:sphericalCS is an association role to the spherical coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:geodeticDatum is an association role to the geodetic datum used by this CRS.

		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:GeodeticCRSPropertyType is a property type for association roles to a geodetic coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 gml:VerticalCRS is a 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:verticalCS is an association role to the vertical coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:verticalDatum is an association role to the vertical datum used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:VerticalCRSPropertyType is a property type for association roles to a vertical coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:ProjectedCRS is a 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values.
		
	
	 
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	 
		 
			 gml:baseGeodeticCRS is an association role to the geodetic coordinate reference system used by this projected CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:ProjectedCRSPropertyType is a property type for association roles to a projected coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:DerivedCRS is a single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference system known as the base CRS. The base CRS can be a projected coordinate reference system, if this DerivedCRS is used for a georectified grid coverage as described in ISO 19123, Clause 8.
		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:baseCRS is an association role to the coordinate reference system used by this derived CRS.
		
	
	 
		 
			 The gml:derivedCRSType property describes the type of a derived coordinate reference system. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
		
	
	 
		 
			 An association role to the coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:DerivedCRSPropertyType is a property type for association roles to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:EngineeringCRS is a contextually local coordinate reference system which can be divided into two broad categories:
-	earth-fixed systems applied to engineering activities on or near the surface of the earth;
-	CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft, see ISO 19111 8.3.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:engineeringDatum is an association role to the engineering datum used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:EngineeringCRSPropertyType is a property type for association roles to an engineering coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:ImageCRS is an engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because the definition of the associated image datum contains two attributes not relevant to other engineering datums.
		
	
	 
		 
			 
				 
					 
						 
						 
						 
					
					 
				
			
		
	
	 
		 
			 gml:affineCS is an association role to the affine coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:imageDatum is an association role to the image datum used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:ImageCRSPropertyType is a property type for association roles to an image coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:TemporalCRS is a 1D coordinate reference system used for the recording of time.
		
	
	 
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	 
		 
			 gml:timeCS is an association role to the time coordinate system used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:temporalDatum is an association role to the temporal datum used by this CRS.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:TemporalCRSPropertyType is a property type for association roles to a temporal coordinate reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 deprecated
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	 
		 
			 deprecated
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	




06-054r1 Geopositioning Service Folder/gml/coordinateSystems.xsd
 
	 
		 coordinateSystems.xsd
		 See ISO/DIS 19136 13.4.
The coordinate systems schema components can be divded into  three logical parts, which define elements and types for XML encoding of the definitions of:
-	Coordinate system axes
-	Abstract coordinate system
-	Multiple concrete types of spatial-temporal coordinate systems
These schema components encode the Coordinate System packages of the UML Models of ISO 19111 Clause 9 and ISO/DIS 19136 D.3.10.
	
	 
	 
		 
			 gml:CoordinateSystemAxis is a definition of a coordinate system axis.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	 
		 
			 gml:axisAbbrev is the abbreviation used for this coordinate system axis; this abbreviation is also used to identify the coordinates in the coordinate tuple. The codeSpace attribute may reference a source of more information on a set of standardized abbreviations, or on this abbreviation.
		
	
	 
		 
			 gml:axisDirection is the direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin).
Within any set of coordinate system axes, only one of each pair of terms may be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction.
The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
		
	
	 
		 
			 The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
		
	
	 
		 
			 The gml:minimumValue and gml:maximumValue properties allow the specification of minimum and maximum value normally allowed for this axis, in the unit of measure for the axis. For a continuous angular axis such as longitude, the values wrap-around at this value. Also, values beyond this minimum/maximum can be used for specified purposes, such as in a bounding box. A value of minus infinity shall be allowed for the gml:minimumValue element, a value of plus infiniy for the gml:maximumValue element. If these elements are omitted, the value is unspecified.
		
	
	 
		 
			 gml:rangeMeaning describes the meaning of axis value range specified by gml:minimumValue and gml:maximumValue. This element shall be omitted when both gml:minimumValue and gml:maximumValue are omitted. This element should be included when gml:minimumValue and/or gml:maximumValue are included. If this element is omitted when the gml:minimumValue and/or gml:maximumValue are included, the meaning is unspecified. The codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
		
	
	 
		 
			 The uom attribute provides an identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	 
		 
			 gml:CoordinateSystemAxisPropertyType is a property type for association roles to a coordinate system axis, either referencing or containing the definition of that axis.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:AbstractCoordinateSystem is a coordinate system (CS) is the non-repeating sequence of coordinate system axes that spans a given coordinate space. A CS is derived from a set of mathematical rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded. This abstract complex type shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 The gml:axis property is an association role (ordered sequence) to the coordinate system axes included in this coordinate system. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. The gml:AggregationAttributeGroup should be used to specify that the axis objects are ordered.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:CoordinateSystemPropertyType is a property type for association roles to a coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:EllipsoidalCS is a two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three gml:axis property elements; the number of associations shall equal the dimension of the CS.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:EllipsoidalCSPropertyType is a property type for association roles to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:CartesianCS is a 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 2- and 3-dimensional cases gives the position of points relative to orthogonal straight axes. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three gml:axis property elements.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:CartesianCSPropertyType is a property type for association roles to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:VerticalCS is a one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one gml:axis property element.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:VerticalCSPropertyType is a property type for association roles to a vertical coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:TimeCS is a one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TimeCS shall have one gml:axis property element.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:TimeCSPropertyType is a property type for association roles to a time coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
	
	 
		 
			 deprecated
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:LinearCS is a one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated coordinate is the distance – with or without offset – from the specified datum to the point along the axis. A LinearCS shall have one gml:axis property element.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:LinearCSPropertyType is a property type for association roles to a linear coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:UserDefinedCS is a two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. A UserDefinedCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:UserDefinedCSPropertyType is a property type for association roles to a user-defined coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:SphericalCS is a three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. A SphericalCS shall have three gml:axis property elements.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:SphericalCSPropertyType is property type for association roles to a spherical coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:PolarCS ia s two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two gml:axis property elements.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:PolarCSPropertyType is a property type for association roles to a polar coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:CylindricalCS is a three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three gml:axis property elements.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:CylindricalCSPropertyType is a property type for association roles to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:AffineCS is a two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS shall have two or three gml:axis property elements; the number of property elements shall equal the dimension of the CS.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:AffineCSPropertyType is a property type for association roles to an affine coordinate system, either referencing or containing the definition of that coordinate system.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
	
	 
		 
			 deprecated
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	




06-054r1 Geopositioning Service Folder/gml/coverage.xsd
 
	 
		 coverage.xsd
		 See ISO/DIS 19136 20.3.
A coverage incorporates a mapping from a spatiotemporal domain to a range set, the latter providing the set in which the attribute values live.  The range set may be an arbitrary set including discrete lists, integer or floating point ranges, and multi-dimensional vector spaces.
A coverage can be viewed as the graph of the coverage function f:A à B, that is as the set of ordered pairs {(x, f(x)) | where x is in A}. This view is especially applicable to the GML encoding of a coverage.  In the case of a discrete coverage, the domain set A is partitioned into a collection of subsets (typically a disjoint collection) A = UAi and the function f is constant on each Ai. For a spatial domain, the Ai are geometry elements, hence the coverage can be viewed as a collection of (geometry,value) pairs, where the value is an element of the range set.  If the spatial domain A is a topological space then the coverage can be viewed as a collection of (topology,value) pairs, where the topology element in the pair is a topological n-chain (in GML terms this is a gml:TopoPoint, gml:TopoCurve, gml:TopoSurface or gml:TopoSolid). 
A coverage is implemented as a GML feature. We can thus speak of a “temperature distribution feature”, or a “remotely sensed image feature”, or a “soil distribution feature”.
As is the case for any GML object, a coverage object may also be the value of a property of a feature.  

	
	 
	 
	 
	 
	 
		 
			 The base type for coverages is gml:AbstractCoverageType. The basic elements of a coverage can be seen in this content model: the coverage contains gml:domainSet and gml:rangeSet properties. The gml:domainSet property describes the domain of the coverage and the gml:rangeSet property describes the range of the coverage.
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 This element serves as the head of a substitution group which may contain any coverage whose type is derived from gml:AbstractCoverageType.  It may act as a variable in the definition of content models where it is required to permit any coverage to be valid.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either spatial or temporal geometry objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. The coverageFunction element describes the mapping function.
This element serves as the head of a substitution group which may contain any discrete coverage whose type is derived from gml:AbstractDiscreteCoverageType.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain. The base type for continuous coverages is AbstractContinuousCoverageType.
The coverageFunction element describes the mapping function. 
The abstract element gml:AbstractContinuousCoverage serves as the head of a substitution group which may contain any continuous coverage whose type is derived from gml:AbstractContinuousCoverageType.
		
	
	 
		 
			 The gml:domainSet property element describes the spatio-temporal region of interest, within which the coverage is defined. Its content model is given by gml:DomainSetType.
The value of the domain is thus a choice between a gml:AbstractGeometry and a gml:AbstractTimeObject.  In the instance these abstract elements will normally be substituted by a geometry complex or temporal complex, to represent spatial coverages and time-series, respectively.  
The presence of the gml:AssociationAttributeGroup means that domainSet follows the usual GML property model and may use the xlink:href attribute to point to the domain, as an alternative to describing the domain inline. Ownership semantics may be provided using the gml:OwnershipAttributeGroup.

		
	
	 
		 
			 
				 
				 
			
		
		 
		 
	
	 
		 
			 The gml:rangeSet property element contains the values of the coverage (sometimes called the attribute values).  Its content model is given by gml:RangeSetType.
This content model supports a structural description of the range.  The semantic information describing the range set is embedded using a uniform method, as part of the explicit values, or as a template value accompanying the representation using gml:DataBlock and gml:File.
The values from each component (or “band”) in the range may be encoded within a gml:ValueArray element or a concrete member of the gml:AbstractScalarValueList substitution group . Use of these elements satisfies the value-type homogeneity requirement.
		
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
			 gml:DataBlock describes the Range as a block of text encoded values similar to a Common Separated Value (CSV) representation.
The range set parameterization is described by the property gml:rangeParameters.
		
	
	 
		 
			 
			 
				 
				 
			
		
	
	 
	 
		 
			 gml:RangeParameterType is a framework for the description of the range parameters each of which is a gml:AbstractValue.  Specific range parameters are defined through the creation of a GML Application Schema that provides elements that are substitutable for gml:AbstractValue.
		
		 
			 
		
		 
		 
	
	 
		 
			 gml:CoordinatesType consists of a list of coordinate tuples, with each coordinate tuple separated by the ts or tuple separator (whitespace), and each coordinate in the tuple by the cs or coordinate separator (comma).
The gml:tupleList encoding is effectively “band-interleaved”.
		
	
	 
		 
			 gml:doubleOrNilReasonList consists of a list of gml:doubleOrNilReason values, each separated by a whitespace. The gml:doubleOrNilReason values are grouped into tuples where the dimension of each tuple in the list is equal to the number of range parameters.
		
	
	 
		 
			 for efficiency reasons, GML also provides a means of encoding the range set in an arbitrary external encoding, such as a binary file.  This encoding may be “well-known” but this is not required. This mode uses the gml:File element.
The values of the coverage (attribute values in the range set) are transmitted in a external file that is referenced from the XML structure described by gml:FileType.  The external file is referenced by the gml:fileReference property that is an anyURI (the gml:fileName property has been deprecated).  This means that the external file may be located remotely from the referencing GML instance. 
The gml:compression property points to a definition of a compression algorithm through an anyURI.  This may be a retrievable, computable definition or simply a reference to an unambiguous name for the compression method.
The gml:mimeType property points to a definition of the file mime type.
The gml:fileStructure property is defined by the gml:FileValueModelType.  This is simple enumerated type restriction on string.  The only value supported in GML is “Record Interleaved”.  Additional values may be supported in future releases of GML.  Note further that all values shall be enclosed in a single file. Multi-file structures for values are not supported in GML.
The semantics of the range set is described as above using the gml:rangeParameters property.
Note that if any compression algorithm is applied, the structure above applies only to the pre-compression or post-decompression structure of the file.
Note that the fields within a record match the gml:valueComponents of the gml:CompositeValue in document order.
		
	
	 
		 
			 
			 
				 
				 
			
			 
			 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 The gml:coverageFunction property describes the mapping function from the domain to the range of the coverage.
The value of the CoverageFunction is one of gml:CoverageMappingRule and gml:GridFunction.
If the gml:coverageFunction property is omitted for a gridded coverage (including rectified gridded coverages) the gml:startPoint is assumed to be the value of the gml:low property in the gml:Grid geometry, and the gml:sequenceRule is assumed to be linear and the gml:axisOrder property is assumed to be “+1 +2”.
		
	
	 
		 
			 
			 
			 
		
	
	 
		 
			 gml:CoverageMappingRule provides a formal or informal description of the coverage function.
The mapping rule may be defined as an in-line string (gml:ruleDefinition) or via a remote reference through xlink:href (gml:ruleReference).  
If no rule name is specified, the default is ‘Linear’ with respect to members of the domain in document order.
		
	
	 
		 
			 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:GridFunction provides an explicit mapping rule for grid geometries, i.e. the domain shall be a geometry of type grid.  It describes the mapping of grid posts (discrete point grid coverage) or grid cells (discrete surface coverage) to the values in the range set.
The gml:startPoint is the index position of a point in the grid that is mapped to the first point in the range set (this is also the index position of the first grid post).  If the gml:startPoint property is omitted the gml:startPoint is assumed to be equal to the value of gml:low in the gml:Grid geometry. Subsequent points in the mapping are determined by the value of the gml:sequenceRule.
		
	
	 
		 
			 
			 
		
	
	 
		 
			 The gml:SequenceRuleType is derived from the gml:SequenceRuleEnumeration through the addition of an axisOrder attribute.  The gml:SequenceRuleEnumeration is an enumerated type. The rule names are defined in ISO 19123. If no rule name is specified the default is “Linear”.
		
		 
			 
				 
					 
						 deprecated
					
				
				 
			
		
	
	 
		 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
			 The different values in a gml:AxisDirectionList indicate the incrementation order to be used on all axes of the grid. Each axis shall be mentioned once and only once.
		
		 
	
	 
		 
			 The value of a gml:AxisDirection indicates the incrementation order to be used on an axis of the grid.
		
		 
			 
		
	
	 
		 
			 deprecated
		
		 
			 
			 
			 
			 
		
	
	 
		 
			 In a gml:MultiPointCoverage the domain set is a gml:MultiPoint, that is a collection of arbitrarily distributed geometric points.
The content model is derived by restriction from gml:AbstractDiscreteCoverageType. Note that the restriction replaces the generic gml:domainSet by the specific gml:multiPointDomain whose value is a gml:MultiPoint.
In a gml:MultiPointCoverage the mapping from the domain to the range is straightforward.
-	For gml:DataBlock encodings the points of the gml:MultiPoint are mapped in document order to the tuples of the data block.
-	For gml:CompositeValue encodings the points of the gml:MultiPoint are mapped to the members of the composite value in document order.
-	For gml:File encodings the points of the gml:MultiPoint are mapped to the records of the file in sequential order.

		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 In a gml:MultiCurveCoverage the domain is partioned into a collection of curves comprising a gml:MultiCurve.  The coverage function then maps each curve in the collection to a value in the range set.
The content model is derived by restriction from gml:AbstractDiscreteCoverageType. Note that the restriction replaces the generic gml:domainSet by the specific gml:multiCurveDomain whose value is a gml:MultiCurve.
In a gml:MultiCurveCoverage the mapping from the domain to the range is straightforward.
-	For gml:DataBlock encodings the curves of the gml:MultiCurve are mapped in document order to the tuples of the data block.
-	For gml:CompositeValue encodings the curves of the gml:MultiCurve are mapped to the members of the composite value in document order.
-	For gml:File encodings the curves of the gml:MultiCurve are mapped to the records of the file in sequential order.

		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 In a gml:MultiSurfaceCoverage the domain is partioned into a collection of surfaces comprising a gml:MultiSurface.  The coverage function than maps each surface in the collection to a value in the range set.
The content model is derived by restriction from gml:AbstractDiscreteCoverageType. Note that the restriction replaces the generic gml:domainSet by the specific gml:multiSurfaceDomain whose value is a gml:MultiSurface.
In a gml:MultiSurfaceCoverage the mapping from the domain to the range is straightforward.
-	For gml:DataBlock encodings the surfaces of the gml:MultiSurface are mapped in document order to the tuples of the data block.
-	For gml:CompositeValue encodings the surfaces of the gml:MultiSurface are mapped to the members of the composite value in document order.
-	For gml:File encodings the surfaces of the gml:MultiSurface are mapped to the records of the file in sequential order.

		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 In a gml:MultiSolidCoverage the domain is partioned into a collection of solids comprising a gml:MultiSolid.  The coverage function than maps each solid in the collection to a value in the range set.
The content model is derived by restriction from gml:AbstractDiscreteCoverageType. Note that the restriction replaces the generic gml:domainSet by the specific gml:multiSolidDomain whose value is a gml:MultiSolid.
In a gml:MultiSolidCoverage the mapping from the domain to the range is straightforward.
-	For gml:DataBlock encodings the solids of the gml:MultiSolid are mapped in document order to the tuples of the data block.
-	For gml:CompositeValue encodings the solids of the gml:MultiSolid are mapped to the members of the composite value in document order.
-	For gml:File encodings the solids of the gml:MultiSolid are mapped to the records of the file in sequential order.

		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A gml:GriddedCoverage is a discrete point coverage in which the domain set is a geometric grid of points.
Note that this is the same as the gml:MultiPointCoverage except that we have a gml:gridDomain property to describe the domain.
The simple gridded coverage is not geometrically referenced and hence no geometric positions are assignable to the points in the grid. Such geometric positioning is introduced in the gml:RectifiedGridCoverage.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
						 
							 
						
						 
					
				
				 
				 
			
		
	
	 
		 
			 The gml:RectifiedGridCoverage is a discrete point coverage based on a rectified grid. It is similar to the grid coverage except that the points of the grid are geometrically referenced. The rectified grid coverage has a domain that is a gml:RectifiedGrid geometry.
The coverage domain is described by gml:rectifiedGridDomain.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
				 
				 
			
		
	




06-054r1 Geopositioning Service Folder/gml/datums.xsd
 
	 
		 datums.xsd
		 See ISO/DIS 19136 13.5
The datums schema components can be divided into three logical parts, which define elements and types for XML encoding of the definitions of:
-	Abstract datum
-	Geodetic datums, including ellipsoid and prime meridian
-	Multiple other concrete types of spatial or temporal datums
These schema components encode the Datum packages of the UML Models of ISO 19111 Clause 10 and ISO/DIS 19136 D.3.10.
	
	 
	 
	 
		 
			 A gml:AbstractDatum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype may be associated with only specific types of coordinate systems. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:anchorDefinition is a description, possibly including coordinates, of the definition used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute may be used to reference a source of more detailed on this point or surface, or on a set of such descriptions.
-	For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
-	For an engineering datum, the anchor definition may be a physical point, or it may be a point with defined coordinates in another CRS.may
-	For an image datum, the anchor definition is usually either the centre of the image or the corner of the image.
-	For a temporal datum, this attribute is not defined. Instead of the anchor definition, a temporal datum carries a separate time origin of type DateTime.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:realizationEpoch is the time after which this datum definition is valid. See ISO 19111 Table 32 for details.
		
	
	 
		 
			 gml:DatumPropertyType is a property type for association roles to a datum, either referencing or containing the definition of that datum.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:GeodeticDatum is a geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere), or of a Cartesian coordinate system centered in this ellipsoid (or sphere).
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:primeMeridian is an association role to the prime meridian used by this geodetic datum.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:ellipsoid is an association role to the ellipsoid used by this geodetic datum.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:GeodeticDatumPropertyType is a property type for association roles to a geodetic datum, either referencing or containing the definition of that datum.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 A gml:Ellipsoid is a geometric figure that may be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:semiMajorAxis specifies the length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
	
	 
		 
			 gml:secondDefiningParameter is a property containing the definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
The inverseFlattening element contains the inverse flattening value of the ellipsoid. This value is a scale factor (or ratio). It uses gml:LengthType with the restriction that the unit of measure referenced by the uom attribute must be suitable for a scale factor, such as percent, permil, or parts-per-million.
The semiMinorAxis element contains the length of the semi-minor axis of the ellipsoid. When the isSphere element is included, the ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere.
		
		 
			 
				 
			
		
	
	 
		 
			 
				 
				 
				 
					 
						 
							 
						
					
				
			
		
	
	 
		 
			 gml:EllipsoidPropertyType is a property type for association roles to an ellipsoid, either referencing or containing the definition of that ellipsoid.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 A gml:PrimeMeridian defines the origin from which longitude values are determined. The default value for the prime meridian gml:identifier value is "Greenwich".
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:greenwichLongitude is the longitude of the prime meridian measured from the Greenwich meridian, positive eastward. If the value of the prime meridian “name” is "Greenwich" then the value of greenwichLongitude shall be 0 degrees.
		
	
	 
		 
			 gml:PrimeMeridianPropertyType is a property type for association roles to a prime meridian, either referencing or containing the definition of that meridian.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:EngineeringDatum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin may be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite).
		
	
	 
		 
			 
		
	
	 
		 
			 gml:EngineeringDatumPropertyType is a property type for association roles to an engineering datum, either referencing or containing the definition of that datum.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:ImageDatum defines the origin of an image coordinate reference system, and is used in a local context only. For an image datum, the anchor definition is usually either the centre of the image or the corner of the image. For more information, see ISO 19111 B.3.5.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:pixelInCell is a specification of the way an image grid is associated with the image data attributes. The required codeSpace attribute shall reference a source of information specifying the values and meanings of all the allowed string values for this property.
		
	
	 
		 
			 gml:ImageDatumPropertyType is a property type for association roles to an image datum, either referencing or containing the definition of that datum.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:VerticalDatum is a textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this International Standard.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:VerticalDatumPropertyType is property type for association roles to a vertical datum, either referencing or containing the definition of that datum.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 A gml:TemporalDatum defines the origin of a Temporal Reference System. This type omits the "anchorDefinition" and "realizationEpoch" elements and adds the "origin" element with the dateTime type.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 The TemporalDatumBaseType partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorDefinition" and "realizationEpoch" elements.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	 
		 
			 gml:origin is the date and time origin of this temporal datum.
		
	
	 
		 
			 gml:TemporalDatumPropertyType is a property type for association roles to a temporal datum, either referencing or containing the definition of that datum.
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	




06-054r1 Geopositioning Service Folder/gml/dictionary.xsd
 
	 
		 dictionary.xsd
		 See ISO/DIS 19136 Clause 16.
Many applications require definitions of terms which are used within instance documents as the values of certain properties or as reference information to tie properties to standard information values in some way.  Units of measure and descriptions of measurable phenomena are two particular examples. 
It will often be convenient to use definitions provided by external authorities. These may already be packaged for delivery in various ways, both online and offline. In order that they may be referred to from GML documents it is generally necessary that a URI be available for each definition. Where this is the case then it is usually preferable to refer to these directly. 
Alternatively, it may be convenient or necessary to capture definitions in XML, either embedded within an instance document containing features or as a separate document. The definitions may be transcriptions from an external source, or may be new definitions for a local purpose. In order to support this case, some simple components are provided in GML in the form of 
-	a generic gml:Definition, which may serve as the basis for more specialized definitions
-	a generic gml:Dictionary, which allows a set of definitions or references to definitions to be collected 
These components may be used directly, but also serve as the basis for more specialised definition elements in GML, in particular: coordinate operations, coordinate reference systems, datums, temporal reference systems, and units of measure.  
Note that the GML definition and dictionary components implement a simple nested hierarchy of definitions with identifiers. The latter provide handles which may be used in the description of more complex relationships between terms. However, the GML dictionary components are not intended to provide direct support for complex taxonomies, ontologies or thesauri.  Specialised XML tools are available to satisfy the more sophisticated requirements. 
	
	 
	 
		 
			 The basic gml:Definition element specifies a definition, which can be included in or referenced by a dictionary. 
The content model for a generic definition is a derivation from gml:AbstractGMLType.  
The gml:description property element shall hold the definition if this can be captured in a simple text string, or the gml:descriptionReference property element may carry a link to a description elsewhere.
The gml:identifier element shall provide one identifier identifying this definition. The identifier shall be unique within the dictionaries using this definition. 
The gml:name elements shall provide zero or more terms and synonyms for which this is the definition.
The gml:remarks element shall be used to hold additional textual information that is not conceptually part of the definition but is useful in understanding the definition.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
	 
		 
			 Sets of definitions may be collected into dictionaries or collections.
A gml:Dictionary is a non-abstract collection of definitions.
The gml:Dictionary content model adds a list of gml:dictionaryEntry properties that contain or reference gml:Definition objects.  A database handle (gml:id attribute) is required, in order that this collection may be referred to. The standard gml:identifier, gml:description, gml:descriptionReference and gml:name properties are available to reference or contain more information about this dictionary. The gml:description and gml:descriptionReference property elements may be used for a description of this dictionary. The derived gml:name element may be used for the name(s) of this dictionary. for remote definiton references gml:dictionaryEntry shall be used. If a Definition object contained within a Dictionary uses the descriptionReference property to refer to a remote definition, then this enables the inclusion of a remote definition in a local dictionary, giving a handle and identifier in the context of the local dictionary.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 This property element contains or refers to the definitions which are members of a dictionary. 
The content model follows the standard GML property pattern, so a gml:dictionaryEntry may either contain or refer to a single gml:Definition. Since gml:Dictionary is substitutable for gml:Definition, the content of an entry may itself be a lower level dictionary. 
Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific definition in this context.  When used in this way the referenced definition will usually be in a dictionary in the same XML document.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 deprecated
		
	




06-054r1 Geopositioning Service Folder/gml/direction.xsd
 
	 
		 direction.xsd
		 See ISO/DIS 19136 Clause 18.
The direction schema components provide the GML Application Schema developer with a standard property element to describe direction, and associated objects that may be used to express orientation, direction, heading, bearing or other directional aspects of geographic features. 
	
	 
	 
		 
			 The property gml:direction is intended as a pre-defined property expressing a direction to be assigned to features defined in a GML application schema.
		
	
	 
		 
			 
				 
				 
				 
				 
				 
			
		
		 
		 
	
	 
		 
			 Direction vectors are specified by providing components of a vector.
		
		 
			 
			 
				 
					 deprecated
				
				 
				 
			
		
	
	 
		 
			 direction descriptions are specified by a compass point code, a keyword, a textual description or a reference to a description.
A gml:compassPoint is specified by a simple enumeration.  	
In addition, thre elements to contain text-based descriptions of direction are provided.  
If the direction is specified using a term from a list, gml:keyword should be used, and the list indicated using the value of the codeSpace attribute. 
if the direction is decribed in prose, gml:direction or gml:reference should be used, allowing the value to be included inline or by reference.
		
		 
			 
			 
			 
			 
		
	
	 
		 
			 These directions are necessarily approximate, giving direction with a precision of 22.5°. It is thus generally unnecessary to specify the reference frame, though this may be detailed in the definition of a GML application language.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/dynamicFeature.xsd
 
	 
		 dynamicFeature.xsd
		 See ISO/DIS 19136 15.6.
A number of types and relationships are defined to represent the time-varying properties of geographic features. 
In a comprehensive treatment of spatiotemporal modeling, Langran (see Bibliography) distinguished three principal temporal entities: states, events, and evidence; the schema specified in the following Subclauses incorporates elements for each.
	
	 
	 
	 
		 
			 Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data. The remote link attributes of the gml:dataSource element have been deprecated along with its current type.
		
	
	 
		 
			 Evidence is represented by a simple gml:dataSource or gml:dataSourceReference property that indicates the source of the temporal data.
		
	
	 
		 
			 A convenience group. This allows an application schema developer to include dynamic properties in a content model in a standard fashion.
		
		 
			 
			 
			 
			 
		
	
	 
		 
			 States are captured by time-stamped instances of a feature. The content model extends the standard gml:AbstractFeatureType with the gml:dynamicProperties model group.
Each time-stamped instance represents a ‘snapshot’ of a feature. The dynamic feature classes will normally be extended to suit particular applications.  A dynamic feature bears either a time stamp or a history.
		
	
	 
		 
			 
				 
			
		
	
	 
		 
			 A gml:DynamicFeatureCollection is a feature collection that has a gml:validTime property (i.e. is a snapshot of the feature collection) or which has a gml:history property that contains one or more gml:AbstractTimeSlices each of which contain values of the time varying properties of the feature collection.  Note that the gml:DynamicFeatureCollection may be one of the following:
1.	A feature collection which consists of static feature members (members do not change in time) but which has properties of the collection object as a whole that do change in time .  
2.	A feature collection which consists of dynamic feature members (the members are gml:DynamicFeatures) but which also has properties of the collection as a whole that vary in time.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 To describe an event — an action that occurs at an instant or over an interval of time — GML provides the gml:AbtractTimeSlice element. A timeslice encapsulates the time-varying properties of a dynamic feature -- it shall be extended to represent a time stamped projection of a specific feature. The gml:dataSource property describes how the temporal data was acquired.
A gml:AbstractTimeSlice instance is a GML object that encapsulates updates of the dynamic—or volatile—properties that reflect some change event; it thus includes only those feature properties that have actually changed due to some process.
gml:AbstractTimeSlice basically provides a facility for attribute-level time stamping, in contrast to the object-level time stamping of dynamic feature instances. 
The time slice can thus be viewed as event or process-oriented, whereas a snapshot is more state or structure-oriented. A timeslice has richer causality, whereas a snapshot merely portrays the status of the whole. 

		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:MovingObjectStatus is one example of how gml:AbstractTimeSlice may be extended. This element provides a standard method to capture a record of the status of a moving object.
A gml:MovingObjectStatus element allows the user to describe the present location, along with the speed, bearing, acceleration and elevation of an object in a particular time slice.  
Additional information about the current status of the object may be recorded in the gml:status or gml:statusReference property elements.
		
	
	 
		 
			 
				 
					 
						 
						 
						 
						 
						 
					
					 
					 
					 
					 
					 
					 
				
			
		
	
	 
		 
			 The remote link attributes of the gml:status element have been deprecated along with its current type.
		
	
	 
	 
		 
			 A generic sequence of events constitute a gml:history of an object.
The gml:history element contains a set of elements in the substitution group headed by the abstract element gml:AbstractTimeSlice, representing the time-varying properties of interest. The history property of a dynamic feature associates a feature instance with a sequence of time slices (i.e. change events) that encapsulate the evolution of the feature.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	




06-054r1 Geopositioning Service Folder/gml/exampleHydrographySchema.xsd
 

    
       
          0
      
   

    

    

   
   
   
    
       
          
      
   
    
       
          
             
             
             
         
      
    

   
   
   
    
       
          
      
   
    
       
          
             
             
                
                   
                      
                         
                     
                  
               
            
             
         
      
   

   
   
   
    
       
          
      
   
    
       
          
             
             
             
             
             
         
      
   

   
   
   
    
       
          
      
   
    
       
          
             
             
             
             
                
                   
                      
                         
                     
                  
               
            
             
         
      
   

   
   
   
    
       
          
      
   
    
       
          
             
             
         
      
   

   
   
   
    
       
          
      
   
    
       
          
             
         
      
   

   
   
   
    
       
          
      
   
    
       
          
             
             
             
                
                   
                      
                         
                     
                  
               
            
             
         
      
   

    
       
          
      
   
    
       
          
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
             
         
      
   

   
   
   
    
    
       
          
             
                
                
                   
                      hyd:HydroComplex/@gml:id
                      hyd:HydroElement/@gml:id
                  
               
            
         
      
   

   
   
   
    
    
       
          
             
                
                
                
                
                
                
                
                
               
                
                   
                      
                         
                            
                        
                     
                  
               
                
                   
                      hyd:HydroElement/@gml:id
                  
               
            
         
      
   

   
   
   
    
    
       
          
             
                
                
                
                
                
                
                
                
               
                
                   
                      
                         
                            
                        
                     
                  
               
                
                   
                      
                         
                            
                        
                     
                  
               
                
                
                   
                      
                         
                            
                        
                     
                  
               
               
                
            
         
      
   
                           
   
   
   
    
    
       
          
             
                
                   
                      hyd:HydroFeature/@gml:id
                  
               
                
                   
                      hyd:HydroFeature/@gml:id
                  
               
                
                   
                      
                         
                            
                        
                     
                  
               
                
            
        
      
   

   
   
   
    
    
       
          
             
                
                
                   
 hyd:Identifier/@gml:id
                  
               
                
                
                
                   
                      
                         
                            
                        
                     
                  
               
                
                   
                      
                         
                            
                        
                     
                  
               
                
                
                
                
            
         
      
   

   
   
   
    
    
       
          
             
                
                   
                      hyd:Event/@gml:id
                  
               
                
            
         
      
   

   
   
   
    
    
       
          
             
                
                   
                      hyd:Event/@gml:id
                  
               
                
                
                
                
            
         
      
   

   
   
   
    
    
       
          
             
                
                   
                      hyd:HydroFeature/@gml:id
                  
               
                
                   
                      hyd:Event/@gml:id
                  
               
            
         
      
   




06-054r1 Geopositioning Service Folder/gml/exampleRoads_BtsSchema.xsd
 

    
       
          0
      
   

    

    

    
    
       
          
             
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                     
                  
               
                
                   
                      
                         
                         
                     
                  
               
                
            
         
      
   




06-054r1 Geopositioning Service Folder/gml/feature.xsd
 
	 
		 feature.xsd
		 See ISO/DIS 19136 Clause 9.
A GML feature is a (representation of a) identifiable real-world object in a selected domain of discourse. The feature schema provides a framework for the creation of GML features and feature collections.
	
	 
	 
	 
		 
			 The basic feature model is given by the gml:AbstractFeatureType.
The content model for gml:AbstractFeatureType adds two specific properties suitable for geographic features to the content model defined in gml:AbstractGMLType. 
The value of the gml:boundedBy property describes an envelope that encloses the entire feature instance, and is primarily useful for supporting rapid searching for features that occur in a particular location. 
The value of the gml:location property describes the extent, position or relative location of the feature.
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType.  This may be used as a variable in the construction of content models.  
gml:AbstractFeature may be thought of as “anything that is a GML feature” and may be used to define variables or templates in which the value of a GML property is “any feature”. This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
		
	
	 
		 
			 This property describes the minimum bounding box or rectangle that encloses the entire feature.
		
	
	 
		 
			 
				 
				 
			
		
		 
	
	 
		 
			 gml:EnvelopeWithTimePeriod is provided for envelopes that include a temporal extent. It adds two time position properties, gml:beginPosition and gml:endPosition, which describe the extent of a time-envelope.  
Since gml:EnvelopeWithTimePeriod is assigned to the substitution group headed by gml:Envelope, it may be used whenever gml:Envelope is valid.
		
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
				 
				 
				 
			
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 The gml:locationName property element is a convenience property where the text value describes the location of the feature. If the location names are selected from a controlled list, then the list shall be identified in the codeSpace attribute.
		
	
	 
		 
			 The gml:locationReference property element is a convenience property where the text value referenced by the xlink:href attribute describes the location of the feature.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
			
		
	
	 
		 
			 deprecated
		
		 
			 
		
		 
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
	
	 
		 
			 deprecated
		
	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
		 
			 deprecated
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 To create a collection of GML features, a property type shall be derived by extension from gml:AbstractFeatureMemberType.
By default, this abstract property type does not imply any ownership of the features in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of a feature in the collection. A collection shall not own a feature already owned by another object.
		
		 
		 
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/geometryAggregates.xsd
 
	 
		 geometryAggregates.xsd
		 See ISO/DIS 19136 12.3.
Geometric aggregates (i.e. instances of a subtype of gml:AbstractGeometricAggregateType) are arbitrary aggregations of geometry elements. They are not assumed to have any additional internal structure and are used to "collect" pieces of geometry of a specified type. Application schemas may use aggregates for features that use multiple geometric objects in their representations.
	
	 
	 
		 
			 
				 
			
		
	
	 
		 
			 gml:AbstractGeometricAggregate is the abstract head of the substitution group for all geometric aggregates.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:MultiGeometry is a collection of one or more GML geometry objects of arbitrary type. 
The members of the geometric aggregate may be specified either using the "standard" property (gml:geometryMember) or the array property (gml:geometryMembers). It is also valid to use both the "standard" and the array properties in the same collection.
		
	
	 
		 
			 This property element either references a geometry element via the XLink-attributes or contains the geometry element.
		
	
	 
		 
			 This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 A property that has a geometric aggregate as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a geometric aggregate via the XLink-attributes or contains the "multi geometry" element. multiGeometryProperty is the predefined property, which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractGeometricAggregate.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 A gml:MultiPoint consists of one or more gml:Points.
The members of the geometric aggregate may be specified either using the "standard" property (gml:pointMember) or the array property (gml:pointMembers). It is also valid to use both the "standard" and the array properties in the same collection.
		
	
	 
		 
			 This property element either references a Point via the XLink-attributes or contains the Point element.
		
	
	 
		 
			 This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 A property that has a collection of points as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a point aggregate via the XLink-attributes or contains the "multi point" element. multiPointProperty is the predefined property, which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for MultiPoint.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 A gml:MultiCurve is defined by one or more gml:AbstractCurves.
The members of the geometric aggregate may be specified either using the "standard" property (gml:curveMember) or the array property (gml:curveMembers). It is also valid to use both the "standard" and the array properties in the same collection.
		
	
	 
		 
			 This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 A property that has a collection of curves as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a curve aggregate via the XLink-attributes or contains the "multi curve" element. multiCurveProperty is the predefined property, which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for MultiCurve.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 A gml:MultiSurface is defined by one or more gml:AbstractSurfaces.
The members of the geometric aggregate may be specified either using the "standard" property (gml:surfaceMember) or the array property (gml:surfaceMembers). It is also valid to use both the "standard" and the array properties in the same collection.
		
	
	 
		 
			 This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 A property that has a collection of surfaces as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a surface aggregate via the XLink-attributes or contains the "multi surface" element. multiSurfaceProperty is the predefined property, which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for MultiSurface.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 A gml:MultiSolid is defined by one or more gml:AbstractSolids.
The members of the geometric aggregate may be specified either using the "standard" property (gml:solidMember) or the array property (gml:solidMembers). It is also valid to use both the "standard" and the array properties in the same collection.
		
	
	 
		 
			 This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element, which is substitutable for gml:AbstractSolid.
		
	
	 
		 
			 This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 A property that has a collection of solids as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a solid aggregate via the XLink-attributes or contains the "multi solid" element. multiSolidProperty is the predefined property, which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for MultiSolid.
		
	




06-054r1 Geopositioning Service Folder/gml/geometryBasic0d1d.xsd
 
	 
		 geometryBasic0d1d.xsd
		 See ISO/DIS 19136 Clause 10.
Any geometry element that inherits the semantics of AbstractGeometryType may be viewed as a set of direct positions. 
All of the classes derived from AbstractGeometryType inherit an optional association to a coordinate reference system. All direct positions shall directly or indirectly be associated with a coordinate reference system. When geometry elements are aggregated in another geometry element (such as a MultiGeometry or GeometricComplex), which already has a coordinate reference system specified, then these elements are assumed to be in that same coordinate reference system unless otherwise specified.
The geometry model distinguishes geometric primitives, aggregates and complexes. 
Geometric primitives, i.e. instances of a subtype of AbstractGeometricPrimitiveType, will be open, that is, they will not contain their boundary points; curves will not contain their end points, surfaces will not contain their boundary curves, and solids will not contain their bounding surfaces.
	
	 
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute (gml:id), one or more names (elements identifier and name) and a description (elements description and descriptionReference) . It may be associated with a spatial reference system (attribute group gml:SRSReferenceGroup).
The following rules shall be adhered to:
-	Every geometry type shall derive from this abstract type.
-	Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of AbstractGeometry.
		
		 
			 
				 
			
		
	
	 
		 
			 The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.
		
		 
		 
		 
	
	 
		 
			 The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.
		
		 
		 
	
	 
		 
			 The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.
		
	
	 
		 
			 A geometric property may either be any geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same or another document). Note that either the reference or the contained element shall be given, but not both or none.
If a feature has a property that takes a geometry element as its value, this is called a geometry property. A generic type for such a geometry property is GeometryPropertyType.
		
		 
			 
		
		 
		 
	
	 
		 
			 If a feature has a property which takes an array of geometry elements as its value, this is called a geometry array property. A generic type for such a geometry property is GeometryArrayPropertyType. 
The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
		
		 
			 
		
		 
	
	 
		 
			 Direct position instances hold the coordinates for a position within some coordinate reference system (CRS). Since direct positions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the srsName attribute will in general be missing, if this particular direct position is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc.
		
		 
			 
				 
			
		
	
	 
		 
			 
				 
					 
						 The presence of a dimension attribute implies the presence of the srsName attribute.
						 The presence of an axisLabels attribute implies the presence of the srsName attribute.
						 The presence of an uomLabels attribute implies the presence of the srsName attribute.
						 The presence of an uomLabels attribute implies the presence of the axisLabels attribute and vice versa.
					
				
			
		
	
	 
		 
			 posList instances (and other instances with the content model specified by DirectPositionListType) hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS).
if no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of, typically a geometric object like a point, curve, etc. 
The optional attribute count specifies the number of direct positions in the list. If the attribute count is present then the attribute srsDimension shall be present, too.
The number of entries in the list is equal to the product of the dimensionality of the coordinate reference system (i.e. it is a derived value of the coordinate reference system definition) and the number of direct positions.
		
		 
			 
				 
				 
			
		
	
	 
	 
		 
			 GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
pos elements are positions that are “owned” by the geometric primitive encapsulating this geometric position.
pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).
		
		 
			 
			 
		
	
	 
		 
			 GML supports two different ways to specify a list of geometric positions: either by a sequence of geometric positions (by reusing the group definition) or a sequence of direct positions (element posList). 
The posList element allows for a compact way to specify the coordinates of the positions, if all positions are represented in the same coordinate reference system.
		
		 
			 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 For some applications the components of the position may be adjusted to yield a unit vector.
		
		 
			 
		
	
	 
	 
		 
			 
				 
				 
			
			 
				 
					 deprecated
				
			
			 
		
		 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
The use of the properties “coordinates” and “pos” has been deprecated. The explicitly named properties “lowerCorner” and “upperCorner” shall be used instead.
		
	
	 
		 
			 gml:AbstractGeometricPrimitiveType is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
		
		 
			 
		
	
	 
		 
			 The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.
		
	
	 
		 
			 A property that has a geometric primitive as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 
				 
					 
						 
						 
					
				
			
		
	
	 
		 
			 A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.
		
	
	 
		 
			 A property that has a point as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 gml:PointArrayPropertyType is a container for an array of points. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
		
		 
			 
		
		 
	
	 
		 
			 This property element contains a list of point elements. pointArrayProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for a list of points.
		
	
	 
		 
			 gml:AbstractCurveType is an abstraction of a curve to support the different levels of complexity. The curve may always be viewed as a geometric primitive, i.e. is continuous.
		
		 
			 
		
	
	 
		 
			 The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.
		
	
	 
		 
			 A property that has a curve as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractCurve.
		
	
	 
		 
			 A container for an array of curves. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
		
		 
			 
		
		 
	
	 
		 
			 This property element contains a list of curve elements. curveArrayProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for a list of curves.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
				
			
		
	
	 
		 
			 A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.
		
	




06-054r1 Geopositioning Service Folder/gml/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 See ISO/DIS 19136 Clause 10.
	
	 
	 
		 
			 gml:AbstractSurfaceType is an abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	 
		 
			 The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.
		
	
	 
		 
			 A property that has a surface as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSurface.
		
	
	 
		 
			 gml:SurfaceArrayPropertyType is a container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.
		
		 
			 
		
		 
	
	 
		 
			 This property element contains a list of surface elements. surfaceArrayProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for a list of AbstractSurfaces.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. 
The elements exterior and interior describe the surface boundary of the polygon.
		
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	 
		 
			 A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.
		
	
	 
		 
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
The AbstractRing element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	 
		 
			 A property with the content model of gml:AbstractRingPropertyType encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
				
			
		
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.
		
	
	 
		 
			 A property with the content model of gml:LinearRingPropertyType encapsulates a linear ring to represent a component of a surface boundary.
		
		 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/geometryComplexes.xsd
 
	 
		 geometryComplexes.xsd
		 See ISO/DIS 19136 12.2.
Geometric complexes (i.e. instances of gml:GeometricComplexType) are closed collections of geometric primitives, i.e. they will contain their boundaries. 
A geometric complex (gml:GeometricComplex) is defined by ISO 19107:2003, 6.6.1 as “a set of primitive geometric objects (in a common coordinate system) whose interiors are disjoint. Further, if a primitive is in a geometric complex, then there exists a set of primitives in that complex whose point-wise union is the boundary of this first primitive.”
A geometric composite (gml:CompositeCurve, gml:CompositeSurface and gml:CompositeSolid) represents a geometric complex with an underlying core geometry that is isomorphic to a primitive, i.e. it can be viewed as a primitive and as a complex. See ISO 19107:2003, 6.1 and 6.6.3 for more details on the nature of composite geometries.
Geometric complexes and composites are intended to be used in application schemas where the sharing of geometry is important.
	
	 
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
	 
		 
			 A property that has a geometric complex as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
				 
				 
				 
				 
			
		
		 
		 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 A gml:CompositeCurve is represented by a sequence of (orientable) curves such that each curve in the sequence terminates at the start point of the subsequent curve in the list. 
curveMember references or contains inline one curve in the composite curve. 
The curves are contiguous, the collection of curves is ordered. Therefore, if provided, the aggregationType attribute shall have the value “sequence”.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 A gml:CompositeSurface is represented by a set of orientable surfaces. It is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
surfaceMember references or contains inline one surface in the composite surface. 
The surfaces are contiguous.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 gml:CompositeSolid implements ISO 19107 GM_CompositeSolid (see ISO 19107:2003, 6.6.7) as specified in D.2.3.6. 
A gml:CompositeSolid is represented by a set of orientable surfaces. It is a geometry type with all the geometric properties of a (primitive) solid. Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid. 
solidMember references or contains one solid in the composite solid. The solids are contiguous.
		
	




06-054r1 Geopositioning Service Folder/gml/geometryPrimitives.xsd
 
	 
		 geometryPrimitives.xsd
		 See ISO/DIS 19136 Clause 11.
Beside the “simple” geometric primitives specified in the previous Clause, this Clause specifies additional primitives to describe real world situations which require a more expressive geometry model.

	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. 
A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
The orientation of the curve is positive.
The element segments encapsulates the segments of the curve.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 The property baseCurve references or contains the base curve, i.e. it either references the base curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for AbstractCurve. The base curve has positive orientation.
		
	
	 
		 
			 OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another AbstractCurve with a parameterization that reverses the sense of the curve traversal.
		
	
	 
		 
		 
		 
	
	 
		 
			 A curve segment defines a homogeneous segment of a curve.
The attributes numDerivativesAtStart, numDerivativesAtEnd and numDerivativesInterior specify the type of continuity as specified in ISO 19107:2003, 6.4.9.3.
The AbstractCurveSegment element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism.
All curve segments shall have an attribute interpolation with type gml:CurveInterpolationType specifying the curve interpolation mechanism used for this segment. This mechanism uses the control points and control parameters to determine the position of this curve segment.
		
	
	 
		 
			 gml:CurveSegmentArrayPropertyType is a container for an array of curve segments.
		
		 
			 
		
	
	 
		 
			 This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 gml:CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
				
				 
			
		
	
	 
		 
			 A LineStringSegment is a curve segment that is defined by two or more control points including the start and end point, with linear interpolation between them.
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
				
				 
				 
			
		
	
	 
		 
			 An ArcString is a curve segment that uses three-point circular arc interpolation (“circularArc3Points”). The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be 2 * numArc + 1.
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
				
				 
			
		
	
	 
		 
			 An Arc is an arc string with only one arc unit, i.e. three control points including the start and end point. As arc is an arc string consisting of a single arc, the attribute “numArc” is fixed to "1".
		
	
	 
		 
			 
		
	
	 
		 
			 A Circle is an arc whose ends coincide to form a simple closed loop. The three control points shall be distinct non-co-linear points for the circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
					 
				
				 
				 
			
		
	
	 
		 
			 This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge (see ISO 19107:2003, 6.4.17.2). The normal is a vector normal (perpendicular) to the chord of the arc (see ISO 19107:2003, 6.4.17.4).
The interpolation is fixed as "circularArc2PointWithBulge".
The number of arcs in the arc string may be explicitly stated in the attribute numArc. The number of control points in the arc string shall be numArc + 1.
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
					 
				
				 
			
		
	
	 
		 
			 An ArcByBulge is an arc string with only one arc unit, i.e. two control points, one bulge and one normal vector.
As arc is an arc string consisting of a single arc, the attribute “numArc” is fixed to "1".
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
					 
					 
				
				 
				 
			
		
	
	 
		 
			 This variant of the arc requires that the points on the arc shall be computed instead of storing the coordinates directly. The single control point is the center point of the arc plus the radius and the bearing at start and end. This representation can be used only in 2D.
The element radius specifies the radius of the arc.
The element startAngle specifies the bearing of the arc at the start.
The element endAngle specifies the bearing of the arc at the end.
The interpolation is fixed as "circularArcCenterPointWithRadius".
Since this type describes always a single arc, the attribute “numArc” is fixed to "1".
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
				
			
		
	
	 
		 
			 A gml:CircleByCenterPoint is an gml:ArcByCenterPoint with identical start and end angle to form a full circle. Again, this representation can be used only in 2D.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
					 
				
				 
				 
			
		
	
	 
		 
			 The number of control points shall be at least three.
vectorAtStart is the unit tangent vector at the start point of the spline. vectorAtEnd is the unit tangent vector at the end point of the spline. Only the direction of the vectors shall be used to determine the shape of the cubic spline, not their length.
interpolation is fixed as "cubicSpline".
degree shall be the degree of the polynomial used for the interpolation in this spline. Therefore the degree for a cubic spline is fixed to "3".
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
					 
				
				 
				 
				 
			
		
	
	 
		 
			 A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions as specified in ISO 19107:2003, 6.4.30. Therefore, interpolation may be either "polynomialSpline" or "rationalSpline" depending on the interpolation type; default is "polynomialSpline".
degree shall be the degree of the polynomial used for interpolation in this spline.
knot shall be the sequence of distinct knots used to define the spline basis functions (see ISO 19107:2003, 6.4.26.2).
The attribute isPolynomial shall be set to “true” if this is a polynomial spline (see ISO 19107:2003, 6.4.30.5).
The attribute knotType shall provide the type of knot distribution used in defining this spline (see ISO 19107:2003, 6.4.30.4).
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
			 
			 
		
	
	 
		 
			 gml:KnotPropertyType encapsulates a knot to use it in a geometric type.
		
		 
			 
				 
					 A knot is a breakpoint on a piecewise spline curve.
value is the value of the parameter at the knot of the spline (see ISO 19107:2003, 6.4.24.2).
multiplicity is the multiplicity of this knot used in the definition of the spline (with the same weight).
weight is the value of the averaging weight used for this knot of the spline.
				
			
		
	
	 
		 
			 This enumeration type specifies values for the knots’ type (see ISO 19107:2003, 6.4.25).
		
		 
			 
			 
			 
		
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
						
						 
						 
					
					 
					 
				
				 
				 
				 
			
		
	
	 
		 
			 Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots.
degree shall be the degree of the polynomial used for interpolation in this spline.
knot shall be the sequence of distinct knots used to define the spline basis functions.
interpolation is fixed as "polynomialSpline".
isPolynomial is fixed as “true”.
knotType is not relevant for Bezier curve segments.

		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 An offset curve is a curve at a constant distance from the basis curve. offsetBase is the base curve from which this curve is defined as an offset. distance and refDirection have the same meaning as specified in ISO 19107:2003, 6.4.23.
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
			 location, refDirection, inDimension and outDimension have the same meaning as specified in ISO 19107:2003, 6.4.21.
		
	
	 
		 
			 
				 
					 
						 
							 
								 
							
						
					
					 
					 
					 
				
				 
			
		
	
	 
		 
			 A clothoid, or Cornu's spiral, is plane curve whose curvature is a fixed function of its length.
refLocation, startParameter, endParameter and scaleFactor have the same meaning as specified in ISO 19107:2003, 6.4.22.
interpolation is fixed as "clothoid".
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 A sequence of geodesic segments. 
The number of control points shall be at least two.
interpolation is fixed as "geodesic".
The content model follows the general pattern for the encoding of curve segments.
		
	
	 
		 
			 
		
	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A Surface is a 2-dimensional primitive and is composed of one or more surface patches as specified in ISO 19107:2003, 6.3.17.1. The surface patches are connected to one another.
patches encapsulates the patches of the surface.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 The property baseSurface references or contains the base surface. The property baseSurface either references the base surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for gml:AbstractSurface. The base surface has positive orientation.
		
	
	 
		 
			 OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a gml:AbstractSurface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
		
	
	 
	 
		 
			 A surface patch defines a homogenuous portion of a surface. 
The AbstractSurfacePatch element is the abstract head of the substituition group for all surface patch elements describing a continuous portion of a surface.
All surface patches shall have an attribute interpolation (declared in the types derived from gml:AbstractSurfacePatchType) specifying the interpolation mechanism used for the patch using gml:SurfaceInterpolationType.
		
	
	 
		 
			 gml:SurfacePatchArrayPropertyType is a container for a sequence of surface patches.
		
		 
			 
		
	
	 
		 
			 The patches property element contains the sequence of surface patches. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 gml:SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 A gml:PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves shall be coplanar and the polygon uses planar interpolation in its interior. 
interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 gml:Triangle represents a triangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be four.
The ring (element exterior) shall be a gml:LinearRing and shall form a triangle, the first and the last position shall be coincident.
interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 gml:Rectangle represents a rectangle as a surface patch with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring shall be five.
The ring (element exterior) shall be a gml:LinearRing and shall form a rectangle; the first and the last position shall be coincident.
interpolation is fixed to "planar", i.e. an interpolation shall return points on a single plane. The boundary of the patch shall be contained within that plane.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 A ring is used to represent a single connected component of a surface boundary as specified in ISO 19107:2003, 6.3.6.
Every gml:curveMember references or contains one curve, i.e. any element which is substitutable for gml:AbstractCurve. In the context of a ring, the curves describe the boundary of the surface. The sequence of curves shall be contiguous and connected in a cycle.
If provided, the aggregationType attribute shall have the value “sequence”.
		
	
	 
	 
		 
			 A property with the content model of gml:RingPropertyType encapsulates a ring to represent a component of a surface boundary.
		
		 
			 
		
	
	 
		 
			 A gml:PointGrid group contains or references points or positions which are organised into sequences or grids. All rows shall have the same number of positions (columns).
		
		 
			 
				 
					 
						 
							 
								 
							
						
					
				
			
		
	
	 
		 
			 
				 
			
		
	
	 
		 
			 The element provides a substitution group head for the surface patches based on parametric curves. All properties are specified in the derived subtypes. All derived subtypes shall conform to the constraints specified in ISO 19107:2003, 6.4.40.
If provided, the aggregationType attribute shall have the value “set”.
		
	
	 
		 
			 
				 
					 
				
				 
				 
			
		
	
	 
		 
			 if provided, rows gives the number of rows, columns the number of columns in the parameter grid. The parameter grid is represented by an instance of the gml:PointGrid group.
The element provides a substitution group head for the surface patches based on a grid. All derived subtypes shall conform to the constraints specified in ISO 19107:2003, 6.4.41.
		
	
	 
		 
			 
				 
				 
			
		
	
	 
	 
		 
			 
				 
				 
			
		
	
	 
	 
		 
			 
				 
				 
			
		
	
	 
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
	 
		 
			 A polyhedral surface is a surface composed of polygon patches connected along their common boundary curves. This differs from the surface type only in the restriction on the types of surface patches acceptable.
polygonPatches encapsulates the polygon patches of the polyhedral surface.
		
	
	 
		 
			 gml:PolygonPatchArrayPropertyType provides a container for an array of polygon patches.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
	 
		 
			 A triangulated surface is a polyhedral surface that is composed only of triangles. There is no restriction on how the triangulation is derived.
trianglePatches encapsulates the triangles of the triangulated surface.
		
	
	 
		 
			 gml:TrianglePatchArrayPropertyType provides a container for an array of triangle patches.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 
				 
					 
					 
					 
					 
						 
							 
								 
								 
							
						
					
				
			
		
	
	 
		 
			 A tin is a triangulated surface that uses the Delauny algorithm or a similar algorithm complemented with consideration of stoplines (stopLines), breaklines (breakLines), and maximum length of triangle sides (maxLength). controlPoint shall contain a set of the positions (three or more) used as posts for this TIN (corners of the triangles in the TIN). See ISO 19107:2003, 6.4.39 for details.
		
	
	 
		 
			 gml:LineStringSegmentArrayPropertyType provides a container for line strings.
		
		 
			 
		
	
	 
		 
			 gml:AbstractSolidType is an abstraction of a solid to support the different levels of complexity. The solid may always be viewed as a geometric primitive, i.e. is contiguous.
		
		 
			 
		
	
	 
		 
			 The AbstractSolid element is the abstract head of the substituition group for all (continuous) solid elements.
		
	
	 
		 
			 A property that has a solid as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.
		
		 
			 
		
		 
		 
	
	 
		 
			 This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSolid.
		
	
	 
		 
			 gml:SolidArrayPropertyType is a container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
		 
	
	 
		 
			 This property element contains a list of solid elements. solidArrayProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for a list of AbstractSolid.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces as specified in ISO 19107:2003, 6.3.18. exterior specifies the outer boundary, interior the inner boundary of the solid.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 A shell is used to represent a single connected component of a solid boundary as specified in ISO 19107:2003, 6.3.8.
Every gml:surfaceMember references or contains one surface, i.e. any element which is substitutable for gml:AbstractSurface. In the context of a shell, the surfaces describe the boundary of the solid. 
If provided, the aggregationType attribute shall have the value “set”.

		
	
	 
		 
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element, which is substitutable for gml:AbstractSurface.
		
	
	 
		 
			 A property with the content model of gml:ShellPropertyType encapsulates a shell to represent a component of a solid boundary.
		
		 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/gml.xsd
 
	 
		 gml.xsd
	
	
	 
	 
	 
	 
	 
	 
	




06-054r1 Geopositioning Service Folder/gml/gmlBase.xsd
 
	 
		 gmlBase.xsd
		 
			 Schematron validation
			 
			 
			 
				 
					 Property element may not carry both a reference to an object and contain an object.
					 Property element must either carry a reference to an object or contain an object.
				
			
		
		 See ISO/DIS 19136 7.2.
The gmlBase schema components establish the GML model and syntax, in particular
-	a root XML type from which XML types for all GML objects should be derived,
-	a pattern and components for GML properties,
-	patterns for collections and arrays, and components for generic collections and arrays,
-	components for associating metadata with GML objects,
-	components for constructing definitions and dictionaries.
	
	 
	 
	 
		 
			 This element has no type defined, and is therefore implicitly (according to the rules of W3C XML Schema) an XML Schema anyType. It is used as the head of an XML Schema substitution group which unifies complex content and certain simple content elements used for datatypes in GML, including the gml:AbstractGML substitution group.
		
	
	 
		 
			 The abstract element gml:AbstractGML is “any GML object having identity”.   It acts as the head of an XML Schema substitution group, which may include any element which is a GML feature, or other object, with identity.  This is used as a variable in content models in GML core and application schemas.  It is effectively an abstract superclass for all GML objects.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 
			 
			 
			 
			 
		
	
	 
		 
			 XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.
		
		 
		 
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 Applying this pattern shall restrict the multiplicity of objects in a property element using this content model to exactly one. An instance of this type shall contain an element representing an object, or serve as a pointer to a remote object.
Applying the pattern to define an application schema specific property type allows to restrict
-	the inline object to specified object types, 
-	the encoding to „by-reference only“ (see 7.2.3.7),
-	the encoding to „inline only“ (see 7.2.3.8).
		
	
	 
		 
			 
		
		 
		 
	
	 
		 
			 Encoding a GML property inline vs. by-reference shall not imply anything about the “ownership” of the contained or referenced GML Object, i.e. the encoding style shall not imply any “deep-copy” or “deep-delete” semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be “owned”.
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.
		
		 
	
	 
		 
			 This element shows how an element 
	declaration may include a Schematron constraint to limit the property to act 
	in either inline or by-reference mode, but not both.
			 
				 
					 
						 
					
				
			
		
	
	 
		 
			 gml:abstractReference may be used as the head of a subtitution group of more specific elements providing a value by-reference.
		
	
	 
		 
			 gml:ReferenceType is intended to be used in application schemas directly, if a property element shall use a “by-reference only” encoding.
		
		 
		 
		 
	
	 
		 
			 gml:abstractInlineProperty may be used as the head of a subtitution group of more specific elements providing a value inline.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 If the value of an object property is another object and that object contains also a property for the association between the two objects, then this name of the reverse property may be encoded in a gml:reversePropertyName element in an appinfo annotation of the property element to document the constraint between the two properties. The value of the element shall contain the qualified name of the property element.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 The value of this property is a text description of the object. gml:description uses gml:StringOrRefType as its content model, so it may contain a simple text string content, or carry a reference to an external description. The use of gml:description to reference an external description has been deprecated and replaced by the gml:descriptionReference property.
		
	
	 
		 
			 The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.
		
	
	 
		 
			 The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.
		
	
	 
		 
			 Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.
		
	
	 
		 
			 The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.
		
	
	 
		 
			 To create a collection of GML Objects that are not all features, a property type shall be derived by extension from gml:AbstractMemberType.
This abstract property type is intended to be used only in object types where software shall be able to identify that an instance of such an object type is to be interpreted as a collection of objects.
By default, this abstract property type does not imply any ownership of the objects in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of an object in the collection. A collection shall not own an object already owned by another object.

		
		 
		 
	
	 
		 
			 A GML Object Collection is any GML Object with a property element in its content model whose content model is derived by extension from gml:AbstractMemberType.
In addition, the complex type describing the content model of the GML Object Collection may also include a reference to the attribute group gml:AggregationAttributeGroup to provide additional information about the semantics of the object collection.  This information may be used by applications to group GML objects, and optionally to order and index them.
The allowed values for the aggregationType attribute are defined by gml:AggregationType. See 8.4 of ISO/IEC 11404:1996 for the meaning of the values in the enumeration.
		
		 
	
	 
		 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 To associate metadata described by any XML Schema with a GML object, a property element shall be defined whose content model is derived by extension from gml:AbstractMetadataPropertyType. 
The value of such a property shall be metadata. The content model of such a property type, i.e. the metadata application schema shall be specified by the GML Application Schema.
By default, this abstract property type does not imply any ownership of the metadata. The owns attribute of gml:OwnershipAttributeGroup may be used on a metadata property element instance to assert ownership of the metadata. 
If metadata following the conceptual model of ISO 19115 is to be encoded in a GML document, the corresponding Implementation Specification specified in ISO/TS 19139 shall be used to encode the metadata information.

		
		 
		 
	
	 
		 
			 deprecated
		
		 
			 
		
		 
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
		 
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
				
			
		
	
	 
	 
	 




06-054r1 Geopositioning Service Folder/gml/grids.xsd
 
	 
		 grids.xsd
		 See ISO/DIS 19136 20.2.
An implicit description of geometry is one in which the items of the geometry do not explicitly appear in the encoding.  Instead, a compact notation records a set of parameters, and a set of objects may be generated using a rule with these parameters.  This Clause provides grid geometries that are used in the description of gridded coverages and other applications.
In GML two grid structures are defined, namely gml:Grid and gml:RectifiedGrid.
	
	 
	 
		 
			 The gml:Grid implicitly defines an unrectified grid, which is a network composed of two or more sets of curves in which the members of each set intersect the members of the other sets in an algorithmic way.  The region of interest within the grid is given in terms of its gml:limits, being the grid coordinates of  diagonally opposed corners of a rectangular region.  gml:axisLabels is provided with a list of labels of the axes of the grid (gml:axisName has been deprecated). gml:dimension specifies the dimension of the grid.  
The gml:limits element contains a single gml:GridEnvelope. The gml:low and gml:high property elements of the envelope are each integerLists, which are coordinate tuples, the coordinates being measured as offsets from the origin of the grid along each axis, of the diagonally opposing corners of a “rectangular” region of interest.
		
	
	 
	 
		 
			 
				 
					 
					 
						 
						 
					
				
				 
			
		
	
	 
		 
			 
		
	
	 
		 
			 
			 
		
	
	 
		 
			 A rectified grid is a grid for which there is an affine transformation between the grid coordinates and the coordinates of an external coordinate reference system. It is defined by specifying the position (in some geometric space) of the grid “origin” and of the vectors that specify the post locations.
Note that the grid limits (post indexes) and axis name properties are inherited from gml:GridType and that gml:RectifiedGrid adds a gml:origin property (contains or references a gml:Point) and a set of gml:offsetVector properties.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	




06-054r1 Geopositioning Service Folder/gml/measures.xsd
 
	 
		 measures.xsd
		 See ISO/DIS 19136 17.3.
gml:MeasureType is defined in the basicTypes schema.  The measure types defined here correspond with a set of convenience measure types described in ISO/TS 19103.  The XML implementation is based on the XML Schema simple type “double” which supports both decimal and scientific notation, and includes an XML attribute “uom” which refers to the units of measure for the value.  Note that, there is no requirement to store values using any particular format, and applications receiving elements of this type may choose to coerce the data to any other type as convenient. 

	
	 
	 
		 
			 The value of a physical quantity, together with its unit.
		
	
	 
		 
			 This is a prototypical definition for a specific measure type defined as a vacuous extension (i.e. aliases) of gml:MeasureType. In this case, the content model supports the description of a length (or distance) quantity, with its units. The unit of measure referenced by uom shall be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 
		
	
	 
		 
			 The gml:angle property element is used to record the value of an angle quantity as a single number, with its units.
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
			 
				 
				 
					 
					 
				
			
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
				 
					 
						 
							 
							 
							 
							 
							 
							 
						
					
				
			
		
	
	 
		 
			 deprecated
		
		 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
		
	
	 
		 
			 deprecated
		
	
	 
		 
			 deprecated
		
		 
			 
			 
		
	
	 
		 
			 deprecated
		
		 
			 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/observation.xsd
 
	 
		 observation.xsd
		 See ISO/DIS 19136 Clause 19.
A GML observation models the act of observing, often with a camera, a person or some form of instrument.  An observation feature describes the “metadata” associated with an information capture event, together with a value for the result of the observation.  This covers a broad range of cases, from a tourist photo (not the photo but the act of taking the photo), to images acquired by space borne sensors or the measurement of a temperature 5 meters below the surfaces of a lake.
The basic structures introduced in this schema are intended to serve as the foundation for more comprehensive schemas for scientific, technical and engineering measurement schemas.

	
	 
	 
	 
	 
		 
			 The content model is a straightforward extension of gml:AbstractFeatureType; it automatically has the gml:identifier, gml:description, gml:descriptionReference, gml:name, and gml:boundedBy properties. 
The gml:validTime element describes the time of the observation. Note that this may be a time instant or a time period.
The gml:using property contains or references a description of a sensor, instrument or procedure used for the observation.
The gml:target property contains or references the specimen, region or station which is the object of the observation. This property is particularly useful for remote observations, such as photographs, where a generic location property might apply to the location of the camera or the location of the field of view, and thus may be ambiguous.  
The gml:subject element is provided as a convenient synonym for gml:target. This is the term commonly used in phtotography.  
The gml:resultOf property indicates the result of the observation.  The value may be inline, or a reference to a value elsewhere. If the value is inline, it shall be a member of the gml:AbstractObject substitution group.

		
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	 
	 
		 
			 
		
		 
		 
	
	 
	 
	 
		 
			 
			 
		
		 
		 
	
	 
	 
		 
			 
		
		 
		 
	
	 
		 
			 A gml:DirectedObservation is the same as an observation except that it adds an additional gml:direction property. This is the direction in which the observation was acquired. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:DirectedObservationAtDistance adds an additional distance property. This is the distance from the observer to the subject of the observation. Clearly this applies only to certain types of observations such as visual observations by people, or observations obtained from terrestrial cameras.
		
	
	 
		 
			 
				 
					 
				
			
		
	




06-054r1 Geopositioning Service Folder/gml/referenceSystems.xsd
 
	 
		 referenceSystems.xsd
		 See ISO/DIS 19136 13.2.
The reference systems schema components have two logical parts, which define elements and types for XML encoding of the definitions of:
-	Identified Object, inherited by the ten types of GML objects used for coordinate reference systems and coordinate operations
-	High-level part of the definitions of coordinate reference systems
This schema encodes the Identified Object and Reference System packages of the UML Model for ISO 19111.
	
	 
	 
	 
		 
			 gml:IdentifiedObjectType provides identification properties of a CRS-related object. In gml:DefinitionType, the gml:identifier element shall be the primary name by which this object is identified, encoding the "name" attribute in the UML model.
Zero or more of the gml:name elements can be an unordered set of "identifiers", encoding the "identifier" attribute in the UML model. Each of these gml:name elements can reference elsewhere the object's defining information or be an identifier by which this object can be referenced.
Zero or more other gml:name elements can be an unordered set of "alias" alternative names by which this CRS related object is identified, encoding the "alias" attributes in the UML model. An object may have several aliases, typically used in different contexts. The context for an alias is indicated by the value of its (optional) codeSpace attribute.
Any needed version information shall be included in the codeSpace attribute of a gml:identifier and gml:name elements. In this use, the gml:remarks element in the gml:DefinitionType shall contain comments on or information about this object, including data source information.
		
		 
			 
		
	
	 
		 
			 gml:AbstractCRS specifies a coordinate reference system which is usually single but may be compound. This abstract complex type shall not be used, extended, or restricted, in a GML Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 The gml:domainOfValidity property implements an association role to an EX_Extent object as encoded in ISO/TS 19139, either referencing or containing the definition of that extent.
		
		 
			 
				 
			
			 
		
	
	 
		 
			 The gml:scope property provides a description of the usage, or limitations of usage, for which this CRS-related object is valid. If unknown, enter "not known".
		
	
	 
		 
			 gml:CRSPropertyType is a property type for association roles to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	 
		 
			 gml:crsRef is an association role either referencing or containing the definition of a CRS. This property element has been deprecated.
		
	




06-054r1 Geopositioning Service Folder/gml/temporal.xsd
 
	 
		 temporal.xsd
		 See ISO/DIS 19136 15.2.
The GML temporal schemas include components for describing temporal geometry and topology, temporal reference systems, and the temporal characteristics of geographic data. The model underlying the representation constitutes a profile of the conceptual schema described in ISO 19108. The underlying spatiotemporal model strives to accommodate both feature-level and attribute-level time stamping; basic support for tracking moving objects is also included. 
Time is measured on two types of scales: interval and ordinal.  An interval scale offers a basis for measuring duration, an ordinal scale provides information only about relative position in time.
Two other ISO standards are relevant to describing temporal objects:  ISO 8601 describes encodings for time instants and time periods, as text strings with particular structure and punctuation; ISO 11404 provides a detailed description of time intervals as part of a general discussion of language independent datatypes.  
The temporal schemas cover two interrelated topics and provide basic schema components for representing temporal instants and periods, temporal topology, and reference systems; more specialized schema components defines components used for dynamic features. Instances of temporal geometric types are used as values for the temporal properties of geographic features. 
	
	 
	 
		 
			 gml:AbstractTimeObject acts as the head of a substitution group for all temporal primitives and complexes.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:AbstractTimePrimitive acts as the head of a substitution group for geometric and topological temporal primitives.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:TimePrimitivePropertyType provides a standard content model for associations between an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive and another object.
		
		 
			 
		
		 
		 
	
	 
		 
			 gml:validTime is a convenience property element.
		
	
	 
		 
			 gml:RelatedTimeType provides a content model for indicating the relative position of an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive. It extends the generic gml:TimePrimitivePropertyType with an XML attribute relativePosition, whose value is selected from the set of 13 temporal relationships identified by Allen (1983)
		
		 
			 
				 
					 
						 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
						
					
				
			
		
	
	 
		 
			 gml:AbstractTimeComplex is an aggregation of temporal primitives and acts as the head of a substitution group for temporal complexes.
		
	
	 
		 
			 
		
	
	 
		 
			 gml:TimeGeometricPrimitive acts as the head of a substitution group for geometric temporal primitives.
A temporal geometry shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. The GPS calendar is an alternative reference systems in common use.
The two geometric primitives in the temporal dimension are the instant and the period. GML components are defined to support these as follows.
		
	
	 
		 
			 
				 
			
		
	
	 
		 
			 gml:TimeInstant acts as a zero-dimensional geometric primitive that represents an identifiable position in time.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:TimeInstantPropertyType provides for associating a gml:TimeInstant with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 gml:TimePeriod acts as a one-dimensional geometric primitive that represents an identifiable extent in time.
The location in of a gml:TimePeriod is described by the temporal positions of the instants at which it begins and ends. The length of the period is equal to the temporal distance between the two bounding temporal positions. 
Both beginning and end may be described in terms of their direct position using gml:TimePositionType which is an XML Schema simple content type, or by reference to an indentifiable time instant using gml:TimeInstantPropertyType.
Alternatively a limit of a gml:TimePeriod may use the conventional GML property model to make a reference to a time instant described elsewhere, or a limit may be indicated as a direct position.
		
	
	 
		 
			 
				 
					 
						 
						 
					
					 
						 
						 
					
					 
				
			
		
	
	 
		 
			 gml:TimePeriodPropertyType provides for associating a gml:TimePeriod with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 The method for identifying a temporal position is specific to each temporal reference system.  gml:TimePositionType supports the description of temporal position according to the subtypes described in ISO 19108.
Values based on calendars and clocks use lexical formats that are based on ISO 8601, as described in XML Schema Part 2:2001. A decimal value may be used with coordinate systems such as GPS time or UNIX time. A URI may be used to provide a reference to some era in an ordinal reference system . 
In common with many of the components modelled as data types in the ISO 19100 series of International Standards, the corresponding GML component has simple content. However, the content model gml:TimePositionType is defined in several steps.
Three XML attributes appear on gml:TimePositionType:
A time value shall be associated with a temporal reference system through the frame attribute that provides a URI reference that identifies a description of the reference system. Following ISO 19108, the Gregorian calendar with UTC is the default reference system, but others may also be used. Components for describing temporal reference systems are described in 14.4, but it is not required that the reference system be described in this, as the reference may refer to anything that may be indentified with a URI.  
For time values using a calendar containing more than one era, the (optional) calendarEraName attribute provides the name of the calendar era.  
Inexact temporal positions may be expressed using the optional indeterminatePosition attribute.  This takes a value from an enumeration.
		
		 
			 
				 
				 
				 
			
		
	
	 
		 
			 These values are interpreted as follows: 
-	“unknown” indicates that no specific value for temporal position is provided.
-	“now” indicates that the specified value shall be replaced with the current temporal position whenever the value is accessed.
-	“before” indicates that the actual temporal position is unknown, but it is known to be before the specified value.
-	“after” indicates that the actual temporal position is unknown, but it is known to be after the specified value.
A value for indeterminatePosition may 
-	be used either alone, or 
-	qualify a specific value for temporal position.
		
		 
			 
			 
			 
			 
		
	
	 
		 
			 The simple type gml:TimePositionUnion is a union of XML Schema simple types which instantiate the subtypes for temporal position described in ISO 19108.
 An ordinal era may be referenced via URI.  A decimal value may be used to indicate the distance from the scale origin .  time is used for a position that recurs daily (see ISO 19108:2002 5.4.4.2).
 Finally, calendar and clock forms that support the representation of time in systems based on years, months, days, hours, minutes and seconds, in a notation following ISO 8601, are assembled by gml:CalDate
		
		 
	
	 
		 
	
	 
		 
			 This element is used directly as a property of gml:TimeInstant (see 15.2.2.3), and may also be used in application schemas.
		
	
	 
		 
			 The length of a time period.
		
		 
			 
			 
		
	
	 
		 
			 gml:duration conforms to the ISO 8601 syntax for temporal length as implemented by the XML Schema duration type.
		
	
	 
		 
			  gml:timeInterval conforms to ISO 11404 which is based on floating point values for temporal length.
ISO 11404 syntax specifies the use of a positiveInteger together with appropriate values for radix and factor. The resolution of the time interval is to one radix ^(-factor) of the specified time unit.
The value of the unit is either selected from the units for time intervals from ISO 31-1:1992, or is another suitable unit.  The encoding is defined for GML in gml:TimeUnitType. The second component of this union type provides a method for indicating time units other than the six standard units given in the enumeration.
		
	
	 
		 
			 
				 
				 
				 
			
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
			 
				 
					 
				
			
		
	




06-054r1 Geopositioning Service Folder/gml/temporalReferenceSystems.xsd
 
	 
		 temporalReferenceSystems.xsd
		 See ISO/DIS 19136 15.5.
A value in the time domain is measured relative to a temporal reference system. Common types of reference systems include calendars, ordinal temporal reference systems, and temporal coordinate systems (time elapsed since some epoch).  The primary temporal reference system for use with geographic information is the Gregorian Calendar and 24 hour local or Coordinated Universal Time (UTC), but special applications may entail the use of alternative reference systems.  The Julian day numbering system is a temporal coordinate system that has an origin earlier than any known calendar, at noon on 1 January 4713 BC in the Julian proleptic calendar, and is useful in transformations between dates in different calendars.    
In GML seven concrete elements are used to describe temporal reference systems: gml:TimeReferenceSystem, gml:TimeCoordinateSystem, gml:TimeCalendar, gml:TimeCalendarEra, gml:TimeClock, gml:TimeOrdinalReferenceSystem, and gml:TimeOrdinalEra.
	
	 
	 
	 
		 
			 A reference system is characterized in terms of its domain of validity: the spatial and temporal extent over which it is applicable. The basic GML element for temporal reference systems is gml:TimeReferenceSystem.  Its content model extends gml:DefinitionType with one additional property, gml:domainOfValidity.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A temporal coordinate system shall be based on a continuous interval scale defined in terms of a single time interval.
The differences to ISO 19108 TM_CoordinateSystem are:
-	the origin is specified either using the property gml:originPosition whose value is a direct time position, or using the property gml:origin whose model is gml:TimeInstantPropertyType; this permits more flexibility in representation and also supports referring to a value fixed elsewhere;
-	the interval uses gml:TimeIntervalLengthType.

		
	
	 
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	 
		 
			 A calendar is a discrete temporal reference system that provides a basis for defining temporal position to a resolution of one day.
gml:TimeCalendar adds one property to those inherited from gml:TimeReferenceSystem. A gml:referenceFrame provides a link to a gml:TimeCalendarEra that it uses. A  gml:TimeCalendar may reference more than one calendar era. 
The referenceFrame element follows the standard GML property model, allowing the association to be instantiated either using an inline description using the gml:TimeCalendarEra element, or a link to a gml:TimeCalendarEra which is explicit elsewhere.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:TimeCalendarEra inherits basic properties from gml:DefinitionType and has the following additional properties:
-	gml:referenceEvent is the name or description of a mythical or historic event which fixes the position of the base scale of the calendar era.  This is given as text or using a link to description held elsewhere.
-	gml:referenceDate specifies the date of the referenceEvent expressed as a date in the given calendar.  In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true.
-	gml:julianReference specifies the Julian date that corresponds to the reference date.  The Julian day number is an integer value; the Julian date is a decimal value that allows greater resolution.  Transforming calendar dates to and from Julian dates provides a relatively simple basis for transforming dates from one calendar to another.
-	gml:epochOfUse is the period for which the calendar era was used as a basis for dating.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:TimeCalendarPropertyType provides for associating a gml:TimeCalendar with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 gml:TimeCalendarEraPropertyType provides for associating a gml:TimeCalendarEra with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 A clock provides a basis for defining temporal position within a day. A clock shall be used with a calendar in order to provide a complete description of a temporal position within a specific day.
gml:TimeClock adds the following properties to those inherited from gml:TimeReferenceSystemType:
-	gml:referenceEvent is the name or description of an event, such as solar noon or sunrise, which fixes the position of the base scale of the clock.
-	gml:referenceTime specifies the time of day associated with the reference event expressed as a time of day in the given clock. The reference time is usually the origin of the clock scale. 
-	gml:utcReference specifies the 24 hour local or UTC time that corresponds to the reference time.
-	gml:dateBasis contains or references the calendars that use this clock.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:TimeClockPropertyType provides for associating a gml:TimeClock with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 In some applications of geographic information — such as geology and archaeology — relative position in time is known more precisely than absolute time or duration. The order of events in time can be well established, but the magnitude of the intervals between them cannot be accurately determined; in such cases, the use of an ordinal temporal reference system is appropriate. An ordinal temporal reference system is composed of a sequence of named coterminous eras, which may in turn be composed of sequences of member eras at a finer scale, giving the whole a hierarchical structure of eras of verying resolution. 
An ordinal temporal reference system whose component eras are not further subdivided is effectively a temporal topological complex constrained to be a linear graph. An ordinal temporal reference system some or all of whose component eras are subdivided is effectively a temporal topological complex with the constraint that parallel branches may only be constructed in pairs where one is a single temporal ordinal era and the other is a sequence of temporal ordinal eras that are called "members" of the "group". This constraint means that within a single temporal ordinal reference system, the relative position of all temporal ordinal eras is unambiguous.  
The positions of the beginning and end of a given era may calibrate the relative time scale.
gml:TimeOrdinalReferenceSystem adds one or more gml:component properties to the generic temporal reference system model.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Its content model follows the pattern of gml:TimeEdge, inheriting standard properties from gml:DefinitionType, and adding gml:start, gml:end and gml:extent properties, a set of gml:member properties which indicate ordered gml:TimeOrdinalEra elements, and a gml:group property which points to the parent era.
The recursive inclusion of gml:TimeOrdinalEra elements allow the construction of an arbitrary depth hierarchical ordinal reference schema, such that an ordinal era at a given level of the hierarchy includes a sequence of shorter, coterminous ordinal eras.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:TimeOrdinalEraPropertyType provides for associating a gml:TimeOrdinalEra with an object.
		
		 
			 
		
		 
		 
	




06-054r1 Geopositioning Service Folder/gml/temporalTopology.xsd
 
	 
		 temporalTopology.xsd
		 See ISO/DIS 19136 15.3.
Temporal topology is described in terms of time complexes, nodes, and edges, and the connectivity between these. Temporal topology does not directly provide information about temporal position. It is used in the case of describing a lineage or a history (e.g. a family tree expressing evolution of species, an ecological cycle, a lineage of lands or buildings, or a history of separation and merger of administrative boundaries). The following Subclauses specifies the temporal topology as temporal characteristics of features in compliance with ISO 19108.
	
	 
	 
		 
			 gml:TimeTopologyPrimitive acts as the head of a substitution group for topological temporal primitives.
Temporal topology primitives shall imply the ordering information between features or feature properties. The temporal connection of features can be examined if they have temporal topology primitives as values of their properties. Usually, an instantaneous feature associates with a time node, and a static feature associates with a time edge.  A feature with both modes associates with the temporal topology primitive: a supertype of time nodes and time edges.
A topological primitive is always connected to one or more other topological primitives, and is, therefore, always a member of a topological complex. In a GML instance, this will often be indicated by the primitives being described by elements that are descendents of an element describing a complex. However, in order to support the case where a temporal topological primitive is described in another context, the optional complex property is provided, which carries a reference to the parent temporal topological complex.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:TimeTopologyPrimitivePropertyType provides for associating a gml:AbstractTimeTopologyPrimitive with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 A temporal topology complex shall be the connected acyclic directed graph composed of temporal topological primitives, i.e. time nodes and time edges. Because a time edge may not exist without two time nodes on its boundaries, static features have time edges from a temporal topology complex as the values of their temporal properties, regardless of explicit declarations.
A temporal topology complex expresses a linear or a non-linear graph. A temporal linear graph, composed of a sequence of time edges, provides a lineage described only by “substitution” of feature instances or feature element values. A time node as the start or the end of the graph connects with at least one time edge. A time node other than the start and the end shall connect to at least two time edges: one of starting from the node, and another ending at the node.
A temporal topological complex is a set of connected temporal topological primitives. The member primtives are indicated, either by reference or by value, using the primitive property.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 gml:TimeTopologyComplexPropertyType provides for associating a gml:TimeTopologyComplex with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 A time node is a zero-dimensional topological primitive that represents an identifiable node in time (it is equivalent to a point in space). A node may act as the termination or initiation of any number of time edges. A time node may be realised as a geometry, its position, whose value is a time instant.
		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:TimeNodePropertyType provides for associating a gml:TimeNode with an object
		
		 
			 
		
		 
		 
	
	 
		 
			 A time edge is a one-dimensional topological primitive. It is an open interval that starts and ends at a node. The edge may be realised as a geometry whose value is a time period.
		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 gml:TimeEdgePropertyType provides for associating a gml:TimeEdge with an object.
		
		 
			 
		
		 
		 
	
	 
		 
			 deprecated
		
		 
			 
			 
			 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/topology.xsd
 
	 
		 topology.xsd
		 See ISO/DIS 19136 Clause 14.
Topology is the branch of mathematics describing the properties of objects which are invariant under continuous deformation. For example, a circle is topologically equivalent to an ellipse because one can be transformed into the other by stretching. In geographic modelling, the foremost use of topology is in accelerating computational geometry. The constructs of topology allow characterisation of the spatial relationships between objects using simple combinatorial or algebraic algorithms. Topology, realised by the appropriate geometry, also allows a compact and unambiguous mechanism for expressing shared geometry among geographic features.
There are four instantiable classes of primitive topology objects, one for each dimension up to 3D. In addition, topological complexes are supported, too. 
There is strong symmetry in the (topological boundary and coboundary) relationships between topology primitives of adjacent dimensions. Topology primitives are bounded by directed primitives of one lower dimension. The coboundary of each topology primitive is formed from directed topology primitives of one higher dimension.
	
	 
	 
		 
			 This abstract type supplies the root or base type for all topological elements including primitives and complexes. It inherits AbstractGMLType and hence can be identified using the gml:id attribute.
		
		 
			 
		
	
	 
	 
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 gml:AbstractTopoPrimitive acts as the base type for all topological primitives. Topology primitives are the atomic (smallest possible) units of a topology complex. 
Each topology primitive may contain references to other topology primitives of codimension 2 or more (gml:isolated). Conversely, nodes may have faces as containers and nodes and edges may have solids as containers (gml:container).
		
	
	 
		 
			 The gml:isolated property element implements the role of the same name of the ISO 19107 “Isolated In” association (see ISO 19107:2003, 7.3.10.4).
		
	
	 
		 
			 
				 
				 
			
		
		 
		 
	
	 
		 
			 The gml:container property element implements the role of the same name of the ISO 19107 “Isolated In” association (see ISO 19107:2003, 7.3.10.4).
		
	
	 
		 
			 
				 
				 
			
		
		 
		 
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 gml:Node represents the 0-dimensional primitive.
The optional coboundary of a node (gml:directedEdge) is a sequence of directed edges which are incident on this node. Edges emanating from this node appear in the node coboundary with a negative orientation. 
If provided, the aggregationType attribute shall have the value “sequence”.
A node may optionally be realised by a 0-dimensional geometric primitive (gml:pointProperty).
		
	
	 
		 
			 A gml:directedNode property element describes the boundary of topology edges and is used in the support of topological point features via the gml:TopoPoint expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included node is used: start (“-“) or end (“+”) node.
		
	
	 
		 
			 
		
		 
		 
		 
	
	 
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	 
		 
			 gml:Edge represents the 1-dimensional primitive.
The topological boundary of an Edge (gml:directedNode) consists of a negatively directed start Node and a positively directed end Node.   
The optional coboundary of an edge (gml:directedFace) is a circular sequence of directed faces which are incident on this edge in document order. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". 
If provided, the aggregationType attribute shall have the value “sequence”.
An edge may optionally be realised by a 1-dimensional geometric primitive (gml:curveProperty).
		
	
	 
		 
			 A gml:directedEdge property element describes the boundary of topology faces, the coBoundary of topology nodes and is used in the support of topological line features via the gml:TopoCurve expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included edge is used, i.e. forward or reverse.
		
	
	 
		 
			 
		
		 
		 
		 
	
	 
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	 
		 
			 gml:Face represents the 2-dimensional topology primitive.
The topological boundary of a face (gml:directedEdge) consists of a sequence of directed edges. If provided, the aggregationType attribute shall have the value “sequence”.
The optional coboundary of a face (gml:directedTopoSolid) is a pair of directed solids which are bounded by this face. A positively directed solid corresponds to a solid which lies in the direction of the negatively directed normal to the face in any geometric realisation. 
A face may optionally be realised by a 2-dimensional geometric primitive (gml:surfaceProperty).
		
	
	 
		 
			 The gml:directedFace property element describes the boundary of topology solids, in the coBoundary of topology edges and is used in the support of surface features via the gml:TopoSurface expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included face is used i.e. inward or outward with respect to the surface normal in any geometric realisation.
		
	
	 
		 
			 
		
		 
		 
		 
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 gml:TopoSolid represents the 3-dimensional topology primitive. 
The topological boundary of a solid (gml:directedFace) consists of a set of directed faces.
A solid may optionally be realised by a 3-dimensional geometric primitive (gml:solidProperty).
		
	
	 
		 
			 The gml:directedSolid property element describes the coBoundary of topology faces and is used in the support of volume features via the gml:TopoVolume expression, see below. The orientation attribute of type gml:SignType expresses the sense in which the included solid appears in the face coboundary. In the context of a gml:TopoVolume the orientation attribute has no meaning.
		
	
	 
		 
			 
		
		 
		 
		 
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 The intended use of gml:TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this feature to other features via shared node definitions.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 The gml:topoPointProperty property element may be used in features to express their relationship to the referenced topology node.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 gml:TopoCurve represents a homogeneous topological expression, a sequence of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of gml:TopoCurve is to appear within a line feature to express the structural and geometric relationships of this feature to other features via the shared edge definitions.
If provided, the aggregationType attribute shall have the value “sequence”.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 The gml:topoCurveProperty property element may be used in features to express their relationship to the referenced topology edges.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 gml:TopoSurface represents a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of gml:TopoSurface is to appear within a surface feature to express the structural and possibly geometric relationships of this surface feature to other features via the shared face definitions.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 The gml:topoSurfaceProperty property element may be used in features to express their relationship to the referenced topology faces.
		
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	 
		 
			 gml:TopoVolume represents a homogeneous topological expression, a set of directed topologic solids, which if realised are isomorphic to a geometric solid primitive. The intended use of gml:TopoVolume is to appear within a solid feature to express the structural and geometric relationships of this solid feature to other features via the shared solid definitions.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 The gml:topoVolumeProperty element may be used in features to express their relationship to the referenced topology volume.
		
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
				 
			
		
	
	 
		 
			 gml:TopoComplex is a collection of topological primitives.
Each complex holds a reference to its maximal complex (gml:maximalComplex) and optionally to sub- or super-complexes (gml:subComplex, gml:superComplex). 
A topology complex contains its primitive and sub-complex members.

		
	
	 
		 
			 The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
		
	
	 
		 
			 The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
		
	
	 
		 
			 The property elements gml:subComplex, gml:superComplex and gml:maximalComplex provide an encoding for relationships between topology complexes as described for gml:TopoComplex above.
		
	
	 
		 
			 The gml:topoPrimitiveMember property element encodes for the relationship between a topology complex and a single topology primitive.
		
	
	 
		 
			 
		
		 
		 
	
	 
		 
			 The gml:topoPrimitiveMembers property element encodes the relationship between a topology complex and an arbitrary number of topology primitives.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 
		
		 
	
	 
		 
			 The gml:topoComplexProperty property element encodes the relationship between a GML object and a topological complex.
		
	




06-054r1 Geopositioning Service Folder/gml/units.xsd
 
	 
		 units.xsd
		 See ISO/DIS 17.2.
Several GML Schema components concern or require a reference scale or units of measure.  Units are required for quantities that may occur as values of properties of feature types, as the results of observations, in the range parameters of a coverage, and for measures used in Coordinate Reference System definitions. 
The basic unit definition is an extension of the general gml:Definition element defined in 16.2.1.  Three specialized elements for unit definition are further derived from this. 
This model is based on the SI system of units [ISO 1000], which distinguishes between Base Units and Derived Units.  
-	Base Units are the preferred units for a set of orthogonal fundamental quantities which define the particular system of units, which may not be derived by combination of other base units.  
-	Derived Units are the preferred units for other quantities in the system, which may be defined by algebraic combination of the base units.  
In some application areas Conventional units are used, which may be converted to the preferred units using a scaling factor or a formula which defines a re-scaling and offset.  The set of preferred units for all physical quantity types in a particular system of units is composed of the union of its base units and derived units.  
Unit definitions are substitutable for the gml:Definition element declared as part of the dictionary model.  A dictionary that contains only unit definitions and references to unit definitions is a units dictionary.  
	
	 
	 
		 
			 The element gml:unitOfMeasure is a property element to refer to a unit of measure. This is an empty element which carries a reference to a unit of measure definition.
		
	
	 
		 
		 
	
	 
		 
			 A gml:UnitDefinition is a general definition of a unit of measure. This generic element is used only for units for which no relationship with other units or units systems is known.
The content model of gml:UnitDefinition adds three additional properties to gml:Definition, gml:quantityType, gml:quantityTypeReference and gml:catalogSymbol.  
The gml:catalogSymbol property optionally gives the short symbol used for this unit. This element is usually used when the relationship of this unit to other units or units systems is unknown.
		
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 The gml:quantityType property indicates the phenomenon to which the units apply. This element contains an informal description of the phenomenon or type of physical quantity that is measured or observed. When the physical quantity is the result of an observation or measurement, this term is known as observable type or measurand.
The use of gml:quantityType for references to remote values is deprecated.
		
	
	 
		 
			 The gml:quantityTypeReference property indicates the phenomenon to which the units apply. The content is a reference to a remote value.
		
	
	 
		 
			 The catalogSymbol is the preferred lexical symbol used for this unit of measure.
The codeSpace attribute in gml:CodeType identifies a namespace for the catalog symbol value, and might reference the external catalog. The string value in gml:CodeType contains the value of a symbol that should be unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units.
		
	
	 
		 
			 A base unit is a unit of measure that cannot be derived by combination of other base units within a particular system of units.  For example, in the SI system of units, the base units are metre, kilogram, second, Ampere, Kelvin, mole, and candela, for the physical quantity types length, mass, time interval, electric current, thermodynamic temperature, amount of substance and luminous intensity, respectively.
gml:BaseUnit extends generic gml:UnitDefinition with the property gml:unitsSystem, which carries a reference to the units system to which this base unit is asserted to belong.  
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Derived units are defined by combination of other units.  Derived units are used for quantities other than those corresponding to the base units, such as hertz (s-1) for frequency, Newton (kg.m/s2) for force.  Derived units based directly on base units are usually preferred for quantities other than the fundamental quantities within a system. If a derived unit is not the preferred unit, the gml:ConventionalUnit element should be used instead.
The gml:DerivedUnit extends gml:UnitDefinition with the property gml:derivationUnitTerms.
		
	
	 
		 
			 
				 
					 
				
			
		
	
	 
		 
			 A set of gml:derivationUnitTerm elements describes a derived unit of measure.  Each element carries an integer exponent.  The terms are combined by raising each referenced unit to the power of its exponent and forming the product.
This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent may be positive or negative, but not zero.
		
	
	 
		 
			 
				 
			
		
	
	 
		 
			 Conventional units that are neither base units nor defined by direct combination of base units are used in many application domains.  For example electronVolt for energy, feet and nautical miles for length.  In most cases there is a known, usually linear, conversion to a preferred unit which is either a base unit or derived by direct combination of base units.
The gml:ConventionalUnit extends gml:UnitDefinition with a property that describes a conversion to a preferred unit for this physical quantity.  When the conversion is exact, the element gml:conversionToPreferredUnit should be used, or when the conversion is not exact the element gml:roughConversionToPreferredUnit is available. Both of these elements have the same content model.  The gml:derivationUnitTerm property defined above is included to allow a user to optionally record how this unit may be derived from other (“more primitive”) units.
		
	
	 
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	 
		 
			 The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type.  A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
		
	
	 
		 
			 The elements gml:conversionToPreferredUnit and gml:roughConversionToPreferredUnit represent parameters used to convert conventional units to preferred units for this physical quantity type.  A preferred unit is either a Base Unit or a Derived Unit that is selected for all values of one physical quantity type.
		
	
	 
		 
			 The inherited attribute uom references the preferred unit that this conversion applies to. The conversion of a unit to the preferred unit for this physical quantity type is specified by an arithmetic conversion (scaling and/or offset). The content model extends gml:UnitOfMeasureType, which has a mandatory attribute uom which identifies the preferred unit for the physical quantity type that this conversion applies to. The conversion is specified by a choice of 
-	gml:factor, which defines the scale factor, or
-	gml:formula, which defines a formula 
by which a value using the conventional unit of measure can be converted to obtain the corresponding value using the preferred unit of measure.  
The formula defines the parameters of a simple formula by which a value using the conventional unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type double. These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the base unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
			 
			 
			 
			 
		
	




06-054r1 Geopositioning Service Folder/gml/valueObjects.xsd
 
	 
		 valueObjects.xsd
		 See ISO/DIS 19136 17.5.
The elements declared in this Clause build on other GML schema components, in particular gml:AbstractTimeObject, gml:AbstractGeometry, and the following types:  gml:MeasureType, gml:MeasureListType, gml:CodeType, gml:CodeOrNilReasonListType, gml:BooleanOrNilReasonListType, gml:IntegerOrNilReasonList.  
Of particular interest are elements that are the heads of substitution groups, and one named choice group. These are the primary reasons for the value objects schema, since they may act as variables in the definition of content models, such as Observations, when it is desired to permit alternative value types to occur some of which may have complex content such as arrays, geometry and time objects, and where it is useful not to prescribe the actual value type in advance. The members of the groups include quantities, category classifications, boolean, count, temporal and spatial values, and aggregates of these.  
The value objects are defined in a hierarchy. The following relationships are defined:
-	Concrete elements gml:Quantity, gml:Category, gml:Count and gml:Boolean are substitutable for the abstract element gml:AbstractScalarValue.  
-	Concrete elements gml:QuantityList, gml:CategoryList, gml:CountList and gml:BooleanList are substitutable for the abstract element gml:AbstractScalarValueList.  
-	Concrete element gml:ValueArray is substitutable for the concrete element gml:CompositeValue.  
-	Abstract elements gml:AbstractScalarValue and gml:AbstractScalarValueList, and concrete elements gml:CompositeValue, gml:ValueExtent, gml:CategoryExtent, gml:CountExtent and gml:QuantityExtent are substitutable for abstract element gml:AbstractValue.  
-	Abstract elements gml:AbstractValue, gml:AbstractTimeObject and gml:AbstractGeometry are all in a choice group named gml:Value, which is used for compositing in gml:CompositeValue and gml:ValueExtent.  
-	Schemas which need values may use the abstract element gml:AbstractValue in a content model in order to permit any of the gml:AbstractScalarValues, gml:AbstractScalarValueLists, gml:CompositeValue or gml:ValueExtent to occur in an instance, or the named group gml:Value to also permit gml:AbstractTimeObjects, gml:AbstractGeometrys.  
	
	 
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
	 
		 
			 A gml:Category has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
		
		 
			 
				 
					 
				
			
		
	
	 
	 
		 
			 
				 
					 
				
			
		
	
	 
	 
		 
			 An XML attribute uom (“unit of measure”) is required, whose value is a URI which identifies the definition of a ratio scale or units by which the numeric value shall be multiplied, or an interval or position scale on which the value occurs.
		
		 
			 
				 
					 
				
			
		
	
	 
	 
		 
			 gml:AbstractValue is an abstract element which acts as the head of a substitution group which contains gml:AbstractScalarValue, gml:AbstractScalarValueList, gml:CompositeValue and gml:ValueExtent, and (transitively) the elements in their substitution groups.
These elements may be used in an application schema as variables, so that in an XML instance document any member of its substitution group may occur.
		
	
	 
		 
			 gml:AbstractScalarValue is an abstract element which acts as the head of a substitution group which contains gml:Boolean, gml:Category, gml:Count and gml:Quantity, and (transitively) the elements in their substitution groups.
		
	
	 
		 
			 gml:AbstractScalarValueList is an abstract element which acts as the head of a substitution group which contains gml:BooleanList, gml:CategoryList, gml:CountList and gml:QuantityList, and (transitively) the elements in their substitution groups.
		
	
	 
		 
			 This is a convenience choice group which unifies generic values defined in this Clause with spatial and temporal objects and the measures described above, so that any of these may be used within aggregate values.
		
		 
			 
			 
			 
			 
		
	
	 
		 
			 Property that refers to, or contains, a Value. Convenience element for general use.
		
	
	 
		 
			 Property that refers to, or contains, a Value.
		
	
	 
		 
			 
		
		 
		 
	
	 
		 
			 Property that contains Values.
		
	
	 
		 
			 
		
		 
	
	 
		 
			 gml:CompositeValue is an aggregate value built from other values . It contains zero or an arbitrary number of gml:valueComponent elements, and zero or one gml:valueComponents property elements.  It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
		
	
	 
		 
			 
				 
					 
					 
				
				 
			
		
	
	 
		 
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.  
The member values may be scalars, composites, arrays or lists.
ValueArray has the same content model as CompositeValue, but the member values shall be homogeneous.  The element declaration contains a Schematron constraint which expresses this restriction precisely.  Since the members are homogeneous, the gml:referenceSystem (uom, codeSpace) may be specified on the gml:ValueArray itself and inherited by all the members if desired.
			 
				 
					 
						 ValueArray may not carry both a reference to a codeSpace and a uom
					
				
				 
					 
						 All components of   shall be of the same type
						 All components of   shall be of the same type
					
				
			
		
	
	 
		 
			 
				 
			
		
	
	 
		 
		 
	
	 
	 
		 
			 
				 
			
		
	
	 
	 
		 
			 
		
	
	 
	 
		 
			 
				 
			
		
	
	 
		 
			 
		
		 
	
	 
		 
			 
		
		 
	
	 
		 
			 
		
		 
	
	 
		 
			 
		
		 
	




06-054r1 Geopositioning Service Folder/igs/0.0.0/igsGetCapabilities.xsd
 
	 
		 igsGetCapabilities.xsd 2006-06-05
		 This XML Schema Document encodes the GetCapabilities operation request and response used by the Image Geopositioning Service (IGS). This XML Schema Document uses GML 3.2.
		Copyright (c) 2006 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
		 
			 This import statement imports coordinateReferenceSystems.xsd from GML 3.2.0. 
		
	
	
	 
		 
			 Request to an IGS server to perform the GetCapabilities operation. This operation allows a client to retrieve a Capabilities XML document providing metadata for the specific IGS server. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 XML encoded IGS GetCapabilities operation response. The Capabilities document provides clients with service metadata about a specific service instance, including metadata about the coordinate Transformation, GeodeticCRS, and other computational abilities of this server. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. 
		
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 Unordered list of associations to the operation methods that this server can use in object-to-image coordinate Transformations. 
					
				
				 
					 
						 Association to operation parameter or group used by associated operation methods. Include for each operation parameter and group that is not directly included by associated operation methods. 
					
				
				 
					 
						 Unordered list of associations to the geodetic Coordinate Reference Systems (CRSs) that this server can use for object positions and image parameters (TBR). 
					
				
				 
					 
						 Association to geodetic datum used by associated geodetic CRSs. Include for each geodetic datum that is not directly included by associated GeodeticCRS. 
					
				
				 
					 
						 Association to ellipsoidal coordinate system used by associated geodetic CRSs. Include for each ellipsoidal coordinate system that is used but not directly included by associated GeodeticCRS. 
					
				
				 
					 
						 Association to cartesian coordinate system used by associated geodetic CRSs. Include for each cartesian coordinate system that is used but not directly included by associated GeodeticCRS. 
					
				
				 
					 
						 Association to spherical coordinate system used by associated geodetic CRSs. Include for each spherical coordinate system that is used but not directly included by associated GeodeticCRS. 
					
				
			
		
	
	




06-054r1 Geopositioning Service Folder/igs/0.0.0/igsTriangulate.xsd
 
	 
		 igsTriangulate.xsd 2006-06-03
		 This XML Schema document encodes the Triangulate operation of the Image Geopositioning Service (IGS).
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 XML encoded Triangulate operation request. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
	
	
	 
		 
			 
				 
					 Input data to this triangulation execution. This input data shall include approximate georeferencing coordinate transformation parameter values, with parameter error statistics, as specified in Table 5 of the IGS specification. This input data shall also include object point positions in image coordinates and optionally in object coordinates, with position error statistics, as also specified in Table 5. 
				
			
			 
			 
				 
					 Address to respond to when server has completed processing this operation request. When this parameter is omitted in the operation request, this operation shall be executed synchronously and immediately by the server, with the operation response returned to the client following operation execution. When this parameter is included, this operation shall be processed asynchronously by the server. In that case, the server shall return an operation acknowledgement to the client immediately following operation acceptance. When operation execution is later completed, the (normal or exception) operation response shall be sent by the server to the response handler address provided by this parameter value. 
				
			
		
		 
			 
				 Service type identifier, where the string value is the OWS type abbreviation, namely "IGS". 
			
		
		 
			 
				 Specification version for OWS version and operation. See Version parameter Subclause 7.3.1 of the OWS Common Specification for more information. 
			
		
		 
			 
				 Specifies if the response coverage should be stored, remotely from the client at a network URL, instead of being returned within the operation response. This attribute should be included only if this operation parameter is supported by server, as encoded in the OperationsMetadata section of the Capabilities document. 
			
		
	
	
	 
		 
			 Values of quantities to be used to control triangulation computations. 
		
	
	
	 
		 
			 
				 
					 Minimum number of triangulation computation iterations to be executed, when no errors detected. 
				
			
			 
				 
					 Maximum number of triangulation computation iterations to be executed, when no errors detected. 
				
			
			 
				 
					 Automatically detect convergence of triangulation computation iterations. One or more server-specific control values can specify parameters to be used in the convergence detection criterion. 
				
			
			 
				 
					 Number of extra triangulation computation iterations to be executed after automatically detect convergence. 
				
			
			 
				 
					 Use provided elevation coverage to estimate tie point and horizontal control point vertical coordinates, until triangulation computation convergence automatically detected. 
				
			
			 
				 
					 Automatically detect tie point measurement blunders, and remove these points in following triangulation computation iterations. One or more server-specific control values can specify parameters to be used in this blunder detection criterion. 
				
			
			 
				 
					 Automatically detect control point horizontal position blunders, and remove these points in following triangulation computation iterations. One or more server-specific control values can specify parameters to be used in this blunder detection criterion. 
				
			
			 
				 
					 Automatically detect control point vertical coordinate blunders, and remove these points in following triangulation computation iterations. One or more server-specific control values can specify parameters to be used in this blunder detection criterion. 
				
			
			 
				 
					 Value of one server-specific quantity to be used to control triangulation computations. 
				
				 
					 
						 
							 
						
					
				
			
		
	
	
	 
		 
			 XML encoded acknowledgement of Triangulate operation request. 
		
	
	
	 
		 
			 
				 
					 Data and time this Acknowledgement message generated. 
				
			
			 
				 
					 Copy of Triangulate operation request being acknowledged. This copy should be included when expected to be useful to clients. 
				
			
		
	
	




06-054r1 Geopositioning Service Folder/iso19139/gco/basicTypes.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:00:05 ====== 
	
	
	 
	 
	 
	
	
	
	
	 
		 
			 A TypeName is a LocalName that references either a recordType or object type in some form of schema. The stored value "aName" is the returned value for the "aName()" operation. This is the types name.  - For parsing from types (or objects) the parsible name normally uses a "." navigation separator, so that it is of the form  [class].[member].[memberOfMember]. ...)
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 A MemberName is a LocalName that references either an attribute slot in a record or  recordType or an attribute, operation, or association role in an object instance or  type description in some form of schema. The stored value "aName" is the returned value for the "aName()" operation.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Use to represent the possible cardinality of a relation. Represented by a set of simple multiplicity ranges.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 A component of a multiplicity, consisting of an non-negative lower bound, and a potentially infinite upper bound.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	 
		 
	
	
	 
	
	 
		 
			 
			 
		
		 
	
	
	
	
	 
		 
			 
			 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gco/gco.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:00:06 ====== 
	
	
	 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gco/gcoBase.xsd
 
	
	 
		 This schema provides:
		1.  tools to handle specific objects like "code lists" and "record";
		2. Some XML types representing that do not follow the general encoding rules.
	
	
	 
	 
	
	
	
	
	
	 
		 
		 
	
	
	 
	
	
	
	 
		 
		 
	
	
	 
	
	 
		 
		 
		 
	
	
	
	 
		 
		 
	
	
	
	
	
	 
		 
			 
				 
				 
				 
			
		
	
	
	
	 		
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/applicationSchema.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:03 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 Information about the application schema used to build the dataset
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/citation.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:04 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 Identification of, and means of communication with, person(s) and organisations associated with the dataset
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Standardized resource reference
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Location of the responsible individual or organisation
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about online sources from which the dataset, specification, or community profile name and extended metadata elements can be obtained.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information required enabling contact with the  responsible person and/or organisation
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Telephone numbers for contacting the responsible individual or organisation
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/constraints.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:01 ====== 
	
	
	 
	
	
	
	 
		 
			 Restrictions on the access and use of a dataset or metadata
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Restrictions and legal prerequisites for accessing and using the dataset.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Handling restrictions imposed on the dataset because of national security, privacy, or other concerns
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/content.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:03 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 Information identifing the feature catalogue
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about the domain of the raster cell
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about an image's suitability for use
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Set of adjacent wavelengths in the electro-magnetic spectrum with a common characteristic, such as the visible band
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/dataQuality.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:01 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 quantitative_result from Quality Procedures -  - renamed to remove implied use limitiation.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Quantitative_conformance_measure from Quality Procedures.  -  - Renamed to remove implied use limitation -  - OCL - -- result is type specified by valueDomain - result.tupleType = valueDomain
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/distribution.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:03 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 Information about the media on which the data can be distributed
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Technical means and media by which a dataset is obtained from the distributor
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Common ways in which the dataset may be obtained or received, and related instructions and fee information
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about the distributor
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about the distributor of and options for obtaining the dataset
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Description of the form of the data to be distributed
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/extent.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:04 ====== 
	
	
	 
	 
	 
	 
	 
	
	
	
	 
		 
			 Time period covered by the content of the dataset
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Vertical domain of dataset
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Boundary enclosing the dataset expressed as the closed set of (x,y) coordinates of the polygon (last point replicates first point)
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about spatial, vertical, and temporal extent
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Geographic area of the dataset
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Geographic area of the entire dataset referenced to WGS 84
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Extent with respect to date and time
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/freeText.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 03-17-2005 17:21:53 ====== Informative package (concepts are not implementable) - pragmatic approach for encoding
	
	
	 
	 
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/gmd.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:04 ====== 
	
	
	 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/identification.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:05 ====== 
	
	
	 
	 
	 
	 
	
	
	
	 
		 
			 Basic information about data
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Graphic that provides an illustration of the dataset (should include a legend for the graphic)
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 See 19119 for further info
		
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Brief description of ways in which the dataset is currently used.
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Keywords, their type and reference source
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Encapsulates the dataset aggregation information
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	 
		 
			 High-level geospatial data thematic classification to assist in the grouping and search of available geospatial datasets
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/maintenance.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:04 ====== Status of the dataset or progress of a review
	
	
	 
	 
	 
	
	
	
	 
		 
			 Information about the scope and frequency of updating
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Description of the class of information covered by the information
		
		 
			 
			 
			 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/metadataApplication.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:05 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 Identifiable collection of datasets
		
		 
			 
				 
					 
					 
					 
					
					 
					
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Identifiable collection of data
		
		 
			 
				 
					 
					
					 
					
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/metadataEntity.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:00 ====== 
	
	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	
	
	
	 
		 
			 Information about the metadata
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/metadataExtension.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:03 ====== Method used to represent geographic information in the dataset
	
	
	 
	 
	
	
	
	 
		 
			 New metadata element, not found in ISO 19115, which is required to describe geographic data
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information describing metadata extensions.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/portrayalCatalogue.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:03 ====== 
	
	
	 
	 
	
	
	
	 
		 
			 Information identifing the portrayal catalogue used
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/referenceSystem.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:04 ====== 
	
	
	 
	 
	 
	
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Description of the spatial and temporal reference systems used in the dataset
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmd/spatialRepresentation.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:40:02 ====== Frequency with which modifications and deletations are made to the data after it is first produced
	
	
	 
	 
	 
	
	
	
	 
		 
			 Types and numbers of raster spatial objects in the dataset
		
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Information about the vector spatial objects in the dataset
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Digital mechanism used to represent spatial information
		
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
			 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmx/catalogues.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 04-27-2005 17:16:11 ====== Handcrafted
	
	
	 
	 
	 
	 
	 
	
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmx/codelistItem.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 03-15-2005 09:14:50 ====== 
	
	
	 
	 
	 
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Constraints: - 1) metadataProperty.card = 0 - 2) dictionaryEntry.card = 0
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 Constraint: codeEntry.type = ML_CodeListDefinition
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmx/crsItem.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 03-15-2005 09:15:11 ====== 
	
	
	 
	 
	 
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmx/extendedTypes.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 03-14-2005 12:00:20 ====== Handcrafted
	
	
	 
		 
	
	
	
	
	
	
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
	
	
	
	
	
	 
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gmx/gmx.xsd
   This file was generated from ISO TC/211 UML class diagrams == 03-18-2005 11:12:17 ======  



06-054r1 Geopositioning Service Folder/iso19139/gmx/gmxUsage.xsd
   This file was generated from ISO TC/211 UML class diagrams == 04-27-2005 17:15:30 ======                                                                     



06-054r1 Geopositioning Service Folder/iso19139/gmx/uomItem.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 03-15-2005 09:15:02 ====== 
	
	
	 
	 
	 
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
		 
			 XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
		
		 
		 
	
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gsr/gsr.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:24:48 ====== 
	
	
	 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gsr/spatialReferencing.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:24:48 ====== 
	
	
	 
	 
	
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gss/geometry.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:14:37 ====== The geometry packages (Figure 4) contain the various classes for coordinate geometry. All of these classes through the root class GM_Object inherit an optional association to a coordinate reference system. All direct positions exposed through the interfaces defined in this standard shall be in the coordinate reference system of the geometric object accessed. All elements of a geometric complex, composite, or aggregate shall be associated to the same coordinate reference system. When instances of GM_Object are aggregated in another GM_Object (such as a GM_Aggregate, or GM_Complex) which already has a coordinate reference system specified, then these elements are assumed to be in that same coordinate reference system unless otherwise specified.  - The geometry package has several internal packages that separate primitive geometric objects, aggregates and complexes, which have a more elaborate internal structure than simple aggregates. Figure 4 shows the dependencies between the geometry packages as well as a list of classes for each package - Figure 5 shows the basic classes defined in the geometry packages. Any object that inherits the semantics of the GM_Object acts as a set of direct positions. Its behavior will be determined by which direct positions it contains. Objects under GM_Primitive will be open, that is, they will not contain their boundary points; curves will not contain their end points, surfaces will not contain their boundary curves, and solids will not contain their bounding surfaces. Objects under GM_Complex will be closed, that is, they will contain their boundary points. This leads to some apparent ambiguity. A representation of a line as a primitive must reference its end points, but will not contain these points as a set of direct positions. A representation of a line as a complex will also reference its end points, and will contain these points as a set of direct positions. This means that identical digital representations will have slightly different semantics depending on whether they are accessed as primitives or complexes.  - This difference of semantics is most striking in the GM_CompositeCurve. Composite curves are used to represent features whose geometry could also be represented as curve primitives. From a cartographic point of view, these two representations are not different. From a topological point of view, they are different. This distinction appears in the inheritance diagram (Figure 5) as an inheritance relationship between GM_CompositeCurve and GM_OrientableCurve. The primary semantics of a GM_CompositeCurve (see 6.6.5) is as a closed GM_Object, but it may also act as an open GM_Object under GM_Primitive operations (see 6.3.10). Interface protocols depending upon the topological details of this object will have to be distinguished as to whether they have been inherited from GM_Primitive or GM_Complex, where the distinction first occurs. Even though these protocols have been inherited from the same operations defined at GM_Object, they will act differently depending upon the branch of the inheritance tree from which they have inherited semantics. Creators of implementation profiles may take this into account and use a proxy mechanism for realization relationships that cause semantic dissonance. Such a procedure will be necessary in object-oriented programming and databases in systems that disallow multiple inheritance or make limiting assumptions about method binding.
	
	
	 
	 
	
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/gss/gss.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:14:37 ====== This package contains the normative (Geometry and Topology) parts of the model for ISO 19107. This document should be referred to as the official description of the Model. If there are any differences, then ISO 19107 takes precedence.  -  - This packages also contains example (informative) of applications of 19107.
	
	
	 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gts/gts.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:18:09 ====== 
	
	
	 
	
	
	




06-054r1 Geopositioning Service Folder/iso19139/gts/temporalObjects.xsd
 
	
	 
		 This file was generated from ISO TC/211 UML class diagrams == 01-26-2005 12:18:09 ====== 
	
	
	 
	 
	
	
	
	
	
	
	 
		 
			 
		
		 
		 
	
	
	
	 
	
	 
		 
			 
		
		 
	
	




06-054r1 Geopositioning Service Folder/iso19139/version.txt
Preliminary ISO/TS 19139 schema documents - version date: 2005-09-07 (with adapted schemaLocation values)
These files are preliminary versions. It is intended to eventually replace them with the published ISO/TS 19139 schema (or use a reference to a permanently available http-accessible version).




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleCapabilities1.xml
 
	
	 
		 Acme Corp. Map Server
		 
      Map Server maintained by Acme Corporation.
      Contact: webmaster@wmt.acme.com.
      High quality maps showing roadrunner nests and possible ambush locations. 
		 
			 bird
			 roadrunner
			 ambush
		
		 OGC:WMS
		 1.2.0
		 1.1.1
		 NONE
		 NONE
	
	 
		 Acme Corporation
		 
		 
			 Jeff Smith, Server Administrator
			 Computer Scientist
			 
				 
					 +1 301 555-1212
					 +1 301 555-1212
				
				 
					 NASA Goddard Space Flight Center
					 Greenbelt
					 MD
					 20771
					 USA
					 user@host.com
				
			
		
	
	 
		 
			 
				 
					 
				
			
			 
				 
					 text/xml
				
			
		
		 
			 
				 
					 
					 
				
			
			 
				 
					 image/gif
					 image/png
					 image/jpeg
				
			
			 
				 
					 text/xml
					 text/plain
					 text/html
					 application/vnd.ogc.se_inimage
				
			
		
		 
			 
				 
					 
				
			
			 
				 
					 text/xml
					 text/plain
					 text/html
				
			
		
		 
			 
				 text/xml
				 text/plain
				 text/html
			
		
		 
			 
				 5
			
		
		 
			 
				 4000
			
		
		 
			 
				 4000
			
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleDatasetIdentification.xml
 
	
	 Acme Corp. Map Server
	 
      Map Server maintained by Acme Corporation.
      Contact: webmaster@wmt.acme.com.
      High quality maps showing roadrunner nests and possible ambush locations. 
	 
		 bird
		 roadrunner
		 ambush
	
	 WMS_1.3
	 
		 -71.63 41.75
		 -70.78 42.90
	
	 
		 189000 834000
		 285000 962000
	
	 text/xml
	 urn:ogc:crs:EPSG:6.3:26986




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleExceptionReport1.xml
 
	
	 
		 service
	
	 
		 version
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleExceptionReport2.xml
 
	
	 
	 




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleGeneralBox2.xml
 
	
	 189000 834000
	 285000 962000




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleGetCapabilities1.xml
 
	
	 
		 1.0.0
		 0.8.3
	
	 
		 Contents
	
	 
		 text/xml
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleGetCapabilities2.xml
 
	
	 
		 1.0.0
		 0.8.3
	
	 
		 Contents
	
	 
		 text/xml
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleGetCapabilitiesResponse.xsd
 
	 
		 exampleGetCapabilitiesResponse.xsd 2005-02-25
		 
			 This XML Schema encodes the GetCapabilities operation response, also known as the Capabilities XML document. This XML Schema must be expanded by each OWS, to specify specific contents of the Contents element and perhaps of the OperationsMetadata element. 
			 Copyright (c) Open Geospatial Consortium (2005) 
		
	
	
	 
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. 
		
		 
			 
				 
					 
						 
							 This element shall be included whenever this OWS operates on any tightly-coupled data, by any specified operation (even when that data is also available to clients from another service). 
						
					
				
			
		
	
	
	 
		 
			 Metadata about the data served by this server. The XML Schema of this section is specific to each OWS type. 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleOperationGetWSDLxml.xml
 
	 
		 
			 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleOperationsMetadata.xml
 
	
	 
		 
			 
				 
			
		
		 
			 
				 text/xml
			
		
	
	 
		 
			 
				 
				 
					 
						 
							 text/xml
						
					
				
			
		
		 
			 
				 image/gif
				 image/png
				 image/jpeg
			
		
		 
			 
				 text/xml
				 text/plain
				 text/html
				 application/vnd.ogc.se_inimage
			
		
	
	 
		 
			 
				 
			
		
		 
			 
				 text/xml
				 text/plain
				 text/html
			
		
	
	 
		 
			 text/xml
			 text/plain
			 text/html
		
	
	 
		 
			 5
		
	
	 
		 
			 4000
		
	
	 
		 
			 4000
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/exampleWGS84Box2.xml
 
	
	 -71.63 41.75
	 -70.78 42.90




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentDatasetIdentification.xsd
 
	
	 
	
	 




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentDescriptionType.xsd
 
	 
		 fragmentDescriptionType.xsd 20066-03-16
		 This XML Schema fragment encodes the Identification Type. 
	
	
	 
	
	 
		 
			 Human-readable descriptive information for the object it is included within.
      
		
		 
			 
				 
					 Title of this data(set) or resource, normally used for display to a human. 
				
			
			 
				 
					 Brief narrative description of this data(set) or resource, normally used for display to a human. 
				
			
			 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentFormat.xsd
 
	 
		 fragmentFormat.xsd 2006-03-16
		 
			 This XML Schema  is a fragment that encodes a "format" identifier parameter. THIS FRAGMENT SHALL NOT BE IMPORTED OR NORMATIVELY REFERENCED, but should be copied and edited for each format parameter needed by each specific OWS. However, the same MimeType definition can be used for multiple format parameters. Primary editor: Arliss Whiteside. 
		
	
	
	 
		 
			 XML encoded identifier of the TBD format, which can be any standard MIME type, possibly a parameterized MIME type. The default shall be TBD. 
		
	
	
	 
		 
			 XML encoded identifier of a standard MIME type, possibly a parameterized MIME type. 
		
		 
			 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentGetCapabilitiesRequest.xsd
 
	 
		 fragmentGetCapabilitiesRequest.xsd 2006-03-16
		 This XML Schema fragment encodes the GetCapabilities operation request, without the Contents section. Primary editor: Arliss Whiteside. 
	
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 When omitted, server shall return latest supported version. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". 
				
			
		
		 
		 
			 
				 When omitted or not supported by server, server shall return latest complete service metadata document. 
			
		
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	
	 
		 
			 Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. 
		
		 
	
	
	 
		 
			 Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Data transfer format identifier, identified by its MIME type. 
		
		 
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentGetCapabilitiesResponse.xsd
 
	 
		 fragmentGetCapabilitiesResponse.xsd 2006-03-16
		 This XML Schema fragment encodes the GetCapabilities operation response, also known as the Capabilities XML document. This XML Schema must be expanded by each OWS, to specify specific contents of the Contents element and perhaps of the OperationsMetadata element. 
	
	
	 
	 
	 
	
	 
		 
			 XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. 
		
		 
			 
			 
			 
		
		 
		 
	
	
	 
		 
			 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. 
		
		 
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentGetDescriptionRequest.xsd
 
	 
		 fragmentGetDescriptionRequest.xsd 2006-03-16
		 This XML Schema encodes the GetDescription operation request message. 
	
	
	 
	
	 
		 
			 Request to a service to perform the GetDescription operation. This operation allows a client to retrieve the descriptions of one or more identified objects or datasets. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
						 Unordered list of one or more object identifiers. These identifiers are usually listed in the Contents section of the service metadata (Capabilities) document. 
					
				
				 
					 
						 Optional reference to the data format to be used for response to this operation request. This element shall be included when multiple output formats are available for the selected object, and the client desires a format other than the specified default, if any. 
					
				
			
			 
			 
		
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentGetResourceRequest.xsd
 
	 
		 fragmentGetResourceByIdRequest.xsd 2006-03-16
		 This XML Schema encodes the GetResourceByID operation request message. 
	
	
	 
	
	 
		 
			 Request to a service to perform the GetResourceByID operation. This operation allows a client to retrieve one or more identified resources, including datasets and resources that describe datasets or parameters. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
						 Unordered list of zero or more resource identifiers. These identifiers can be listed in the Contents section of the service metadata (Capabilities) document. 
					
				
				 
					 
						 Optional reference to the data format to be used for response to this operation request. This element shall be included when multiple output formats are available for the selected resource(s), and the client desires a format other than the specified default, if any. 
					
				
			
			 
			 
		
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentIdentificationType.xsd
 
	 
		 fragmentIdentificationType.xsd 2006-03-16
		 This XML Schema fragment encodes the Identification Type. 
	
	
	 
	 
	
	 
		 
			 Near-minimum set of data identification and description metadata. This brief set was selected for use to describe available data in the Contents section of a Capabilities document, but can be used elsewhere. In general, optional elements can be included when available and needed or relevant. Elements that are clearly always required by a specific OWS should be made mandatory. Elements that are clearly never relevant for a specific OWS can be prohibited. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier or name of this dataset. 
						
					
					 
						 
							 Unordered list of zero or more bounding boxes. When multiple bounding boxes are included for a dataset in the Contents section of a Capabilities document, this should be interpreted as union of areas of these bounding boxes, unless otherwise specified in the specific OWS specification.
						
					
					 
						 
							 Unordered list of zero or more references to data formats supported for server outputs. 
						
					
					 
						 
							 Unordered list of zero or more avaialble coordinate reference systems. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	
	 
		 
			 Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
	 
		 
			 Coordinate reference system in which data from this data(set) or resource is available or supported. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/Examples/fragmentRequestBase.xsd
 
	 
		 fragmentRequestBase.xsd 2006-03-16
		 This XML Schema fragment encodes the common parameters in all OWS operation requests except GetCapabilities. THIS FRAGMENT SHALL NOT BE IMPORTED OR NORMATIVELY REFERENCED, but shall be copied and edited by each OWS to specify specific values for the "service" and "version" attributes. This complexType should also be extended to include any other parameters that are used in all specific OWS operation requests except GetCapabilities. That complexType should then be extended for each operation used by that OWS. Primary editor: Arliss Whiteside. 
	
	
	 
		 
			 XML encoded operation request base, for all operations except Get Capabilities. In this XML encoding, no "request" parameter is included, since the final element name will specify the specific operation. 
		
		 
			 
				 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
			
		
		 
			 
				 Specification version for OWS version and operation. See Version parameter Subclause 7.3.1 for more information. 
			
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/ows19115subset.xsd
 
	 
		 ows19115subset.xsd 2006-02-14
		 This XML Schema Document encodes the parts of ISO 19115 used by the common "ServiceIdentification" and "ServiceProvider" sections of the GetCapabilities operation response, known as the service metadata XML document. The parts encoded here are the MD_Keywords, CI_ResponsibleParty, and related classes. This XML Schema largely follows the current draft for ISO 19139, with the addition of documentation text extracted and edited from Annex B of ISO 19115. The UML package prefixes were omitted from XML names, and the XML element names were all capitalized, for consistency with other OWS Schemas. Also, the optional smXML:id attributes were omitted, as not being useful in a service metadata document.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Title of this resource, normally used for display to a human. 
		
	
	
	 
		 
			 Brief narrative description of this resource, normally used for display to a human. 
		
	
	
	 
	
	 
		 
			 Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe the subject. When needed, the optional "type" can name the type of the associated list of keywords that shall all have the same type. Also when needed, the codeSpace attribute of that "type" can reference the type name authority and/or thesaurus. 
			 For OWS use, the optional thesaurusName element was omitted as being complex information that could be referenced by the codeSpace attribute of the Type element. 
		
		 
			 
			 
		
	
	
	 
		 
			 Name or code with an (optional) authority. If the codeSpace attribute is present, its value shall reference a dictionary, thesaurus, or authority for the name or code, such as the organisation who assigned the value, or the dictionary from which it is taken. 
			 Type copied from basicTypes.xsd of GML 3 with documentation edited, for possible use outside the ServiceIdentification section of a service metadata document. 
		
		 
			 
				 
			
		
	
	
	 
		 
			 Identification of, and means of communication with, person(s) responsible for the resource(s). 
			 For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The optional individualName element was made mandatory, since either the organizationName or individualName element is mandatory. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section. 
		
	
	
	 
		 
			 Identification of, and means of communication with, person responsible for the server. At least one of IndividualName, OrganisationName, or PositionName shall be included. 
		
		 
			 
			 
			 
			 
			 
		
	
	
	
	 
		 
			 Identification of, and means of communication with, person responsible for the server. 
			 For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section. 
		
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Name of the responsible person: surname, given name, title separated by a delimiter. 
		
	
	
	 
		 
			 Name of the responsible organization. 
		
	
	
	 
		 
			 Role or position of the responsible person. 
		
	
	
	 
		 
			 Function performed by the responsible party. Possible values of this Role shall include the values and the meanings listed in Subclause B.5.5 of ISO 19115:2003. 
		
	
	
	 
		 
			 Address of the responsible party. 
		
	
	
	 
		 
			 Information required to enable contact with the responsible person and/or organization. 
			 For OWS use in the service metadata document, the optional hoursOfService and contactInstructions elements were retained, as possibly being useful in the ServiceProvider section. 
		
		 
			 
				 
					 Telephone numbers at which the organization or individual may be contacted. 
				
			
			 
				 
					 Physical and email address at which the organization or individual may be contacted. 
				
			
			 
				 
					 On-line information that can be used to contact the individual or organization. OWS specifics: The xlink:href attribute in the xlink:simpleLink attribute group shall be used to reference this resource. Whenever practical, the xlink:href attribute with type anyURI should be a URL from which more contact information can be electronically retrieved. The xlink:title attribute with type "string" can be used to name this set of information. The other attributes in the xlink:simpleLink attribute group should not be used. 
				
			
			 
				 
					 Time period (including time zone) when individuals can contact the organization or individual. 
				
			
			 
				 
					 Supplemental instructions on how or when to contact the individual or organization. 
				
			
		
	
	
	 
		 
			 Reference to on-line resource from which data can be obtained. 
			 For OWS use in the service metadata document, the CI_OnlineResource class was XML encoded as the attributeGroup "xlink:simpleLink", as used in GML. 
		
		 
	
	
	 
		 
			 Telephone numbers for contacting the responsible individual or organization. 
		
		 
			 
				 
					 Telephone number by which individuals can speak to the responsible organization or individual. 
				
			
			 
				 
					 Telephone number of a facsimile machine for the responsible
organization or individual. 
				
			
		
	
	
	 
		 
			 Location of the responsible individual or organization. 
		
		 
			 
				 
					 Address line for the location. 
				
			
			 
				 
					 City of the location. 
				
			
			 
				 
					 State or province of the location. 
				
			
			 
				 
					 ZIP or other postal code. 
				
			
			 
				 
					 Country of the physical address. 
				
			
			 
				 
					 Address of the electronic mailbox of the responsible organization or individual. 
				
			
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsAdditionalProperties.xsd
 
	 
		 owsAdditionalProperties.xsd 2006-05-04
		 This XML Schema Document encodes TBD.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
				 
				 
			
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsAll.xsd
 
	 
		 owsAll.xsd 2006-02-14
		 This XML Schema Document includes and imports, directly and indirectly, all the XML Schemas defined by the OWS Common Implemetation Specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	 




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsCommon.xsd
 
	 
		 owsCommon.xsd 2006-02-14
		 This XML Schema Document encodes various parameters and parameter types that can be used in OWS operation requests and responses.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 XML encoded identifier of a standard MIME type, possibly a parameterized MIME type. 
		
		 
			 
		
	
	
	 
		 
			 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 This element either references or contains more metadata about the element that includes this element. To reference metadata stored remotely, at least the xlinks:href attribute in xlink:simpleLink shall be included. Either at least one of the attributes in xlink:simpleLink or a substitute for the AbstractMetaData element shall be included, but not both. An Implementation Specification can restrict the contents of this element to always be a reference or always contain metadata. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.) 
		
		 
			 
		
		 
			 
				 Reference to metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, the xlink:href attribute with type anyURI should include a URL from which this metadata can be electronically retrieved. 
			
		
		 
			 
				 Optional reference to the aspect of the element which includes this "metadata" element that this metadata provides more information about. 
			
		
	
	
	 
		 
			 Abstract element containing more metadata about the element that includes the containing "metadata" element. A specific server implementation, or an Implementation Specification, can define concrete elements in the AbstractMetaData substitution group. 
		
	
	
	
	 
	
	 
		 
			 XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. 
			 This type is adapted from the EnvelopeType of GML 3.1, with modified contents and documentation for encoding a MINIMUM size box SURROUNDING all associated data. 
		
		 
			 
				 
					 Position of the bounding box corner at which the value of each coordinate normally is the algebraic minimum within this bounding box. In some cases, this position is normally displayed at the top, such as the top left for some image coordinates. For more information, see Subclauses 10.2.5 and C.13. 
				
			
			 
				 
					 Position of the bounding box corner at which the value of each coordinate normally is the algebraic maximum within this bounding box. In some cases, this position is normally displayed at the bottom, such as the bottom right for some image coordinates. For more information, see Subclauses 10.2.5 and C.13. 
				
			
		
		 
			 
				 Usually references the definition of a CRS, as specified in [OGC Topic 2]. Such a CRS definition can be XML encoded using the gml:CoordinateReferenceSystemType in [GML 3.1]. For well known references, it is not required that a CRS definition exist at the location the URI points to. If no anyURI value is included, the applicable CRS must be either:
a)	Specified outside the bounding box, but inside a data structure that includes this bounding box, as specified for a specific OWS use of this bounding box type.
b)	Fixed and specified in the Implementation Specification for a specific OWS use of the bounding box type. 
			
		
		 
			 
				 The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here. 
			
		
	
	
	 
		 
			 Position instances hold the coordinates of a position in a coordinate reference system (CRS) referenced by the related "crs" attribute or elsewhere. For an angular coordinate axis that is physically continuous for multiple revolutions, but whose recorded values can be discontinuous, special conditions apply when the bounding box is continuous across the value discontinuity:
a)  If the bounding box is continuous clear around this angular axis, then ordinate values of minus and plus infinity shall be used.
b)  If the bounding box is continuous across the value discontinuity but is not continuous clear around this angular axis, then some non-normal value can be used if specified for a specific OWS use of the BoundingBoxType. For more information, see Subclauses 10.2.5 and C.13. 
			 This type is adapted from DirectPositionType and doubleList of GML 3.1. The adaptations include omission of all the attributes, since the needed information is included in the BoundingBoxType. 
		
		 
	
	
	 
	
	 
		 
			 XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. This box is specialized for use with the 2D WGS 84 coordinate reference system with decimal values of longitude and latitude. 
			 This type is adapted from the general BoundingBoxType, with modified contents and documentation for use with the 2D WGS 84 coordinate reference system. 
		
		 
			 
				 
					 
						 
							 Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13. 
						
					
					 
						 
							 Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13. 
						
					
				
				 
					 
						 This attribute can be included when considered useful. When included, this attribute shall reference the 2D WGS 84 coordinate reference system with longitude before latitude and decimal values of longitude and latitude. 
					
				
				 
					 
						 The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here. 
					
				
			
		
	
	
	 
		 
			 Two-dimensional position instances hold the longitude and latitude coordinates of a position in the 2D WGS 84 coordinate reference system. The longitude value shall be listed first, followed by the latitude value, both in decimal degrees. Latitude values shall range from -90 to +90 degrees, and longitude values shall normally range from -180 to +180 degrees. For the longitude axis, special conditions apply when the bounding box is continuous across the +/- 180 degrees meridian longitude value discontinuity:
a)  If the bounding box is continuous clear around the Earth, then longitude values of minus and plus infinity shall be used.
b)  If the bounding box is continuous across the value discontinuity but is not continuous clear around the Earth, then some non-normal value can be used if specified for a specific OWS use of the WGS84BoundingBoxType. For more information, see Subclauses 10.4.5 and C.13. 
		
		 
			 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsContents.xsd
 
	 
		 owsContents.xsd 2006-02-14
		 This XML Schema  Document encodes the typical Contents section of an OWS service metadata (Capabilities) document. This  Schema can be built upon to define the Contents section for a specific OWS. If the ContentsBaseType in this XML Schema cannot be restricted and extended to define the Contents section for a specific OWS, all other relevant parts defined in owsContents.xsd shall be used by the “ContentsType” in the wxsContents.xsd prepared for the specific OWS.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Contents of typical Contents section of an OWS service metadata (Capabilities) document. This type shall be extended and/or restricted if needed for specific OWS use to include the specific metadata needed. 
		
		 
			 
				 
					 Unordered set of summary descriptions for the datasets available from this OWS server. This set shall be included unless another source is referenced and all this metadata is available from that source. 
				
			
			 
				 
					 Unordered set of references to other sources of metadata describing the coverage offerings available from this server. 
				
			
		
	
	
	 
		 
			 Reference to a source of metadata describing  coverage offerings available from this server. This  parameter can reference a catalogue server from which dataset metadata is available. This ability is expected to be used by servers with thousands or millions of datasets, for which searching a catalogue is more feasible than fetching a long Capabilities XML document. When no DatasetDescriptionSummaries are included, and one or more catalogue servers are referenced, this set of catalogues shall contain current metadata summaries for all the datasets currently available from this OWS server, with the metadata for each such dataset referencing this OWS server. 
		
	
	
	 
	
	 
		 
			 Typical dataset metadata in typical Contents section of an OWS service metadata (Capabilities) document. This type shall be extended and/or restricted if needed for specific OWS use, to include the specific Dataset  description metadata needed. 
		
		 
			 
				 
					 
						 
							 Unordered list of zero or more minimum bounding rectangles surrounding coverage data, using the WGS 84 CRS with decimal degrees and longitude before latitude. If no WGS 84 bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If WGS 84 bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. For each lowest-level coverage in a hierarchy, at least one applicable WGS84BoundingBox shall be either recorded or inherited, to simplify searching for datasets that might overlap a specified region. If multiple WGS 84 bounding boxes are included, this shall be interpreted as the union of the areas of these bounding boxes. 
						
					
					 
						 
							 Unambiguous identifier or name of this coverage, unique for this server. 
						
					
					 
						 
							 Unordered list of zero or more minimum bounding rectangles surrounding coverage data, in AvailableCRSs.  Zero or more BoundingBoxes are  allowed in addition to one or more WGS84BoundingBoxes to allow more precise specification of the Dataset area in AvailableCRSs. These Bounding Boxes shall not use any CRS not listed as an AvailableCRS. However, an AvailableCRS can be listed without a corresponding Bounding Box. If no such bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If such bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. If multiple bounding boxes are included with the same CRS, this shall be interpreted as the union of the areas of these bounding boxes. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this dataset. A list of optional metadata elements for this dataset description could be specified in the Implementation Specification for this service. 
						
					
					 
						 
							 Metadata describing zero or more unordered subsidiary datasets available from this server. 
						
					
				
			
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsDataIdentification.xsd
 
	 
		 owsDataIdentification.xsd 2006-02-14
		 This XML Schema Document encodes the parts of the MD_DataIdentification class of ISO 19115 (OGC Abstract Specification Topic 11) which are expected to be used for most datasets. This Schema also encodes the parts of this class that are expected to be useful for other metadata. Both are expected to be used within the Contents section of OWS service metadata (Capabilities) documents.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Human-readable descriptive information for the object it is included within.
This type shall be extended if needed for specific OWS use to include additional metadata for each type of information. This type shall not be restricted for a specific OWS to change the multiplicity (or optionality) of some elements. 
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Basic metadata identifying and describing a set of data. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier or name of this dataset. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	
	 
		 
			 Extended metadata identifying and describing a set of data. This type shall be extended if needed for each specific OWS to include additional metadata for each type of dataset. If needed, this type should first be restricted for each specific OWS to change the multiplicity (or optionality) of some elements. 
		
		 
			 
				 
					 
						 
							 Unordered list of zero or more bounding boxes whose union describes the extent of this dataset. 
						
					
					 
						 
							 Unordered list of zero or more references to data formats supported for server outputs. 
						
					
					 
						 
							 Unordered list of zero or more available coordinate reference systems. 
						
					
				
			
		
	
	
	 
		 
			 Unique identifier or name of this dataset. 
		
	
	
	 
		 
			 Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
	 
		 
			 Coordinate reference system in which data from this data(set) or resource is available or supported. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
		 
			 Access constraint applied to assure the protection of privacy or intellectual property, or any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. 
		
	
	
	 
		 
			 Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE (case insensitive) shall be used to mean no fees or terms. 
		
	
	
	 
		 
			 Identifier of a language used by the data(set) contents. This language identifier shall be as specified in IETF RFC 1766. When this element is omitted, the language used is not identified. 
		
	
	
	 
		 
			 Identifier of an interpolation method applicable to continuous coverages. The meanings of these identifiers are defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. Two different spellings of "nearest neighbour" are allowed. 
		
		 
			 
				 
				 
				 
				 
				 
				 
				 
				 
				 
				 
			
		
	
	
	 
		 
			 Type of coverage possibly handled by an OWS server. The meanings of these coverage types are defined in ISO 19123: Geographic information - Schema for coverage geometry and functions. 
		
		 
			 
			 
			 
				 
					 Abbreviation of quadrilateral grid. 
				
			
			 
			 
			 
				 
					  Abbreviation of triangulated irregular network. 
				
			
			 
		
	
	
	 
		 
			 The possible values are all names of GML 3 complexTypes, omitting any "Type" suffix. 
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsDomainType.xsd
 
	 
		 owsDomainType.xsd 2006-03-16
		 This XML Schema Document encodes the allowed values (or domain) of a quantity, usually for an input or output parameter to an OWS. Such a parameter is sometimes called a variable, quantity, literal, or typed literal. Such a parameter can use one of many data types, including double, integer, boolean, string, or URI. The allowed values can also be encoded for a quantity that is not explicit or not transferred, but is constrained by a server implementation.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Valid domain (or allowed set of values) of one quantity, with its name or identifier. 
		
		 
			 
				 
					 
						 Name or identifier of this quantity. 
					
				
			
		
	
	
	 
		 
			 Valid domain (or allowed set of values) of one quantity, with needed metadata but without a quantity name or identifier. 
		
		 
			 
				 
				 
				 
				 
			
			 
				 
					 Optional default value this quantity, which should be included when this quantity has a default value. 
				
			
			 
				 
					 Meaning metadata should be referenced or included for each quantity. 
				
			
			 
				 
					 This data type metadata should be referenced or included for each quantity. 
				
			
			 
				 
					 
						 This reference system metadata should be referenced or included for any quantity with a reference system. 
					
				
				 
					 
						 This unit of measure metadata should be referenced or included for any quantity that has units (without a more complete reference system). 
					
				
			
			 
				 
					 Optional unordered list of other metadata about this quantity. A list of required and optional other metadata elements for this quantity should be specified in the Implementation Specification for this service. 
				
			
		
	
	
	
	 
	
	 
		 
			 Ordered list of all the valid values and/or ranges of values for this parameter. For numeric parameters, signed values shall be ordered from negative infinity to positive infinity. If no values or ranges are included here, the allowed values can be specified by referencing the ValuesList metadata element. 
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 A single value, encoded as a string. This type can be used for one value, for a spacing between allowed values, or for the default value of a parameter. 
		
		 
			 
		
	
	
	 
		 
			 The default value for a quantity for which multiple values are allowed. 
		
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 A range of values of a numeric parameter. This range can be continuous or discrete, defined by a fixed spacing between adjacent valid values. If the MinimumValue or MaximumValue is not included, there is no value limit in that direction. Inclusion of the specified minimum and maximum values in the range shall be defined by the rangeClosure. 
		
		 
			 
			 
			 
				 
					 Shall be included when the allowed values are NOT continuous in this range. Shall not be included when the allowed values are continuous in this range. 
				
			
		
		 
			 
				 Shall be included unless the default value applies. 
			
		
	
	
	 
		 
			 Minimum value of this numeric parameter. 
		
	
	
	 
		 
			 Maximum value of this numeric parameter. 
		
	
	
	 
		 
			 The regular distance or spacing between the allowed values in a range. 
		
	
	
	 
		 
			 Specifies which of the minimum and maximum values are included in the range. Note that plus and minus infinity are considered closed bounds. 
		
		 
			 
				 
					 
						 The specified minimum and maximum values are included in this range. 
					
				
				 
					 
						 The specified minimum and maximum values are NOT included in this range. 
					
				
				 
					 
						 The specified minimum value is NOT included in this range, and the specified maximum value IS included in this range. 
					
				
				 
					 
						 The specified minimum value IS included in this range, and the specified maximum value is NOT included in this range. 
					
				
			
		
	
	
	
	 
		 
			 Specifies that any value is allowed for this parameter.
		
		 
	
	
	 
		 
			 Specifies that no values are allowed for this parameter or quantity.
		
		 
	
	
	 
		 
			 Usually references more metadata about a quantity. Alternately, can both reference metadata about a quantity and provide a Name for this concept, using the Name element. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.) 
		
		 
			 
		
		 
			 
				 Reference to metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, this xlink:href attribute with type anyURI should be a URL from which this metadata can be electronically retrieved. Alternately, this xlink:href attribute can reference a URN for well-known metadata. For example, such a URN could be a URN defined in the "ogc" URN namespace. (Informative: This DomainMetadataType was simplied from the metaDataProperty element in GML 3.0.) 
			
		
	
	
	 
		 
			 Human-readable name of a concept, usually described by associated referenced metadata. 
		
	
	
	 
		 
			 Reference to externally specified list of all the valid values and/or ranges of values for this parameter or other quantity.
		
	
	
	 
		 
			 Definition of the meaning or semantics of this set of values. 
		
	
	
	 
		 
			 Definition of the data type of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known data type. For example, such a URN could be a data type identification URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Definition of the reference system used by this set of values, including the unit of measure whenever applicable (as is normal). In this case, the xlink:href attribute can reference a URN for a well-known reference system, such as for a coordinate reference system (CRS). For example, such a URN could be a CRS identification URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Definition of the unit of measure of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known unit of measure (uom). For example, such a URN could be a UOM identification URN defined in the "ogc" URN namespace. 
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsExceptionReport.xsd
 
	 
		 owsExceptionReport.xsd 2006-02-14
		 This XML Schema Document encodes the Exception Report response to all OWS operations.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
		 
			 Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request. 
		
		 
			 
				 
					 
						 Unordered list of one or more Exception elements that each describes an error. These Exception elements shall be interpreted by clients as being independent of one another (not hierarchical). 
					
				
			
			 
				 
					 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
				
				 
					 
						 
					
				
			
			 
				 
					 Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 1766. When this attribute is omitted, the language used is not identified. 
				
			
		
	
	
	 
	
	 
		 
			 An Exception element describes one detected error that a server chooses to convey to the client. 
		
		 
			 
				 
					 Ordered sequence of text strings that describe this specific exception or error. The contents of these strings are left open to definition by each server implementation. A server is strongly encouraged to include at least one ExceptionText value, to provide more information about the detected error than provided by the exceptionCode. When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first. 
				
			
		
		 
			 
				 A code representing the type of this exception, which shall be selected from a set of exceptionCode values specified for the specific service operation and server. 
			
		
		 
			 
				 When included, this locator shall indicate to the client where an exception was encountered in servicing the client's operation request. This locator should be included whenever meaningful information can be provided by the server. The contents of this locator will depend on the specific exceptionCode and OWS service, and shall be specified in the OWS Implementation Specification. 
			
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsGetCapabilities.xsd
 
	 
		 owsGetCapabilities.xsd 2006-02-14
		 This XML Schema Document defines the GetCapabilities operation request and response XML elements and types, which are common to all OWSs. This XML Schema shall be edited by each OWS, for example, to specify a specific value for the "service" attribute.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. 
		
		 
			 
			 
			 
		
		 
		 
			 
				 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. When not supported by server, server shall not return this attribute. 
			
		
	
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. This base type shall be extended by each specific OWS to include the additional required "service" attribute, with the correct value for that OWS. 
		
		 
			 
				 
					 When omitted, server shall return latest supported version. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". 
				
			
		
		 
			 
				 When omitted or not supported by server, server shall return latest complete service metadata document. 
			
		
	
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	
	 
		 
			 Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information.  
		
		 
			 
		
	
	
	 
		 
			 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. 
		
		 
	
	
	 
		 
			 Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. 
		
		 
			 
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsGetResourceByID.xsd
 
	 
		 owsGetResourceByID.xsd 2006-02-14
		 This XML Schema Document encodes the GetResourceByID operation request message. This typical operation is specified as a base for profiling in specific OWS specifications. For information on the allowed changes and limitations in such profiling, see Subclause 9.4.1 of the OWS Common specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 XML encoded GetResourceByID operation response. The complexType used by this element shall be specified by each specific OWS.  
		
	
	
	 
	
	 
		 
			 Request to a service to perform the GetResourceByID operation. This operation allows a client to retrieve one or more identified resources, including datasets and resources that describe datasets or parameters. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 Unordered list of zero or more resource identifiers. These identifiers can be listed in the Contents section of the service metadata (Capabilities) document. For more information on this parameter, see Subclause 9.4.2.1 of the OWS Common specification. 
				
			
			 
				 
					 Optional reference to the data format to be used for response to this operation request. This element shall be included when multiple output formats are available for the selected resource(s), and the client desires a format other than the specified default, if any. 
				
			
		
		 
		 
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsInputOutputData.xsd
 
	 
		 owsInputOutputData.xsd 2006-04-06
		 This XML Schema Document specifies types and elements for input and output of operation data, allowing including multiple data items with each data item either included or referenced. The contents of each type and element specified here can be restricted and/or extended for each use in a specific OWS specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Response from an OWS operation, allowing including multiple output data items with each item either included or referenced. This OperationResponse element, or an element using the ManifestType with a more specific element name, shall be used whenever applicable for responses from OWS operations. 
			 This element is specified for use where the ManifestType contents are needed for an operation response, but the Manifest element name is not fully applicable. This element or the ManifestType shall be used instead of using the ows:ReferenceType proposed in OGC 04-105. 
		
	
	
	 
		 
			 Input data in a XML-encoded OWS operation request, allowing including multiple data items with each data item either included or referenced. This InputData element, or an element using the ManifestType with a more-specific element name (TBR), shall be used whenever applicable within XML-encoded OWS operation requests. 
		
	
	
	 
	
	 
		 
			 Complete reference to a remote resource that needs to be retrieved from an OWS using an XML-encoded operation request. This element shall be used, within an InputData or Manifest element that is used for input data, when that input data needs to be retrieved from another web service using a XML-encoded OWS operation request. This element shall not be used for local payload input data or for requesting the resource from a web server using HTTP Get. 
		
		 
			 
				 
					 
						 
							 The XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. 
						
					
					 
						 
							 Reference to the XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. The referenced message shall be attached to the same message (using the cid scheme), or be accessible using a URL. 
						
					
				
			
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsManifest.xsd
 
	 
		 owsManifest.xsd 2006-02-15
		 This XML Schema Document specifies types and elements for document or resource references and for package manifests that contain multiple references. The contents of each type and element specified here can be restricted and/or extended for each use in a specific OWS specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			  Base for a reference to a remote or local resource. 
			 This type contains only a restricted and annotated set of the attributes from the xlink:simpleLink attributeGroup. 
		
		 
		 
				 
					 Reference to a remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (such as a multipart mime message), the xlink:href must start with the prefix cid:. 
			
		
		 
			 
				 Reference to a resource that describes the role of this reference. When no value is supplied, no particular role value is to be inferred. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
		 
			 
				 Describes the meaning of the referenced resource in a human-readable fashion. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
	
	
	 
	
	 
		 
			 Complete reference to a remote or local resource, allowing including metadata about that resource. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier of the referenced resource. 
						
					
					 
					 
						 
							 The format of the referenced resource. This element is omitted when the mime type is indicated in the http header of the reference. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this resource. A list of optional metadata elements for this ReferenceType could be specified in the Implementation Specification for each use of this type in a specific OWS. 
						
					
				
			
		
	
	
	
	 
	
	 
		 
			 Logical group of one or more references to remote and/or local resources, allowing including metadata about that group. A Group can be used instead of a Manifest that can only contain one group. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 List of one or more groups of references to remote and/or local resources. 
		
		 
			 
				 
					 
				
			
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsOperationsMetadata.xsd
 
	 
		 owsOperationsMetadata.xsd 2006-02-14
		 This XML Schema Document encodes the basic contents of the "OperationsMetadata" section of the GetCapabilities operation response, also known as the Capabilities XML document.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements. 
		
		 
			 
				 
					 
						 Metadata for unordered list of all the (requests for) operations that this server interface implements. The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of parameter valid domains that each apply to one or more operations which this server interface implements. The list of required and optional parameter domain limitations shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this server. The list of required and optional constraints shall be specified in the Implementation Specification for this service. 
					
				
				 
			
		
	
	
	 
		 
			 Individual software vendors and servers can use this element to provide metadata about any additional server abilities. 
		
	
	
	 
		 
			 Metadata for one operation that this server implements. 
		
		 
			 
				 
					 
						 Unordered list of Distributed Computing Platforms (DCPs) supported for this operation. At present, only the HTTP DCP is defined, so this element will appear only once. 
					
				
				 
					 
						 Optional unordered list of parameter domains that each apply to this operation which this server implements. If one of these Parameter elements has the same "name" attribute as a Parameter element in the OperationsMetadata element, this Parameter element shall override the other one for this operation. The list of required and optional parameter domain limitations for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of additional metadata about this operation and its' implementation. A list of required and optional metadata elements for this operation should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the operation request parameters or provide the XML Schemas for the operation request.) 
					
				
			
			 
				 
					 Name or identifier of this operation (request) (for example, GetCapabilities). The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
				
			
		
	
	
	 
		 
			 Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.

		
		 
			 
				 
			
		
	
	
	 
		 
			 Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup. 
		
		 
			 
				 
					 
						 Connect point URL prefix and any constraints for the HTTP "Get" request method for this operation request. 
					
				
				 
					 
						 Connect point URL and any constraints for the HTTP "Post" request method for this operation request. 
					
				
			
		
	
	
	 
		 
			 Connect point URL and any constraints for this HTTP request method for this operation request. In the OnlineResourceType, the xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL. The other attributes in the xlink:simpleLink attribute group should not be used. 
		
		 
			 
				 
					 
						 
							 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this request method for this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata or Operation element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this request method for this operation shall be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsReferenceType.xsd
 
	 
		 referenceType.xsd 2006-02-14
		 This XML Schema Document encodes an additional type that is a candidate for harmonization in the OWS Common Implementation Specification. 
		Copyright (c) 2006 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 Reference to a remote resource or a local payload. This reference can have a human readable description and a link to metadata. 
		
		 
			 
			 
				 
					 The format of the referenced data. This element is omitted when the mime type is indicated in the http header of the reference. 
				
			
			 
			 
				 
					 Reference to the message to be sent as an operation request, when requesting the resource from a web server using HTTP Post. This message shall be attached of the same message (using the cid scheme), or be accessible using a URL. This element shall not be included for a local payload resource or for requesting the resource using HTTP Get. 
				
			
		
		 
			 
				 Reference to remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (multipart mime message), the xlink:href must start with the prefix cid:. The gml:remoteSchema attribute is used to indicate the schema of the remote resource (e.g., XML application schema). In this use, the xlink:href attribute shall be included. 
			
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the “simple link” components from xlinks.xsd, with all members “optional”, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance. 
		
		 
		 
	
	
	 
		 
			 Reference to an XML Schema fragment that specifies the content model of the property’s value. This is in conformance with the XML Schema Section 4.14 Referencing Schemas from Elsewhere. 
		
	
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsServiceIdentification.xsd
 
	 
		 owsServiceIdentification.xsd 2006-02-14
		 This XML Schema Document encodes the common "ServiceIdentification" section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceIdentification class of ISO 19119 (OGC Abstract Specification Topic 12). 
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 General metadata for this specific server. This XML Schema of this section shall be the same for all OWS. 
		
		 
			 
				 
					 
						 
							 
								 A service type name from a registry of services. For example, the values of the codeSpace URI and name and code string may be "OGC" and "catalogue." This type name is normally used for machine-to-machine communication. 
							
						
						 
							 
								 Unordered list of one or more versions of this service type implemented by this server. This information is not adequate for version negotiation, and shall not be used for that purpose. 
							
						
						 
							 
								 If this element is omitted, no meaning is implied. 
							
						
						 
							 
								 Unordered list of access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. If this element is omitted, no meaning is implied. 
							
						
					
				
			
		
	




06-054r1 Geopositioning Service Folder/ows/1.1.0/owsServiceProvider.xsd
 
	 
		 owsServiceProvider.xsd 2006-02-14
		 This XML Schema Document encodes the common "ServiceProvider" section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceProvider class of ISO 19119 (OGC Abstract Specification Topic 12). 
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Metadata about the organization that provides this specific service instance or server. 
		
		 
			 
				 
					 
						 A unique identifier for the service provider organization. 
					
				
				 
					 
						 Reference to the most relevant web site of the service provider. 
					
				
				 
					 
						 Information for contacting the service provider. The OnlineResource element within this ServiceContact element should not be used to reference a web site of the service provider. 
					
				
			
		
	




06-054r1 Geopositioning Service Folder/xlink/1.0.1/xlinks.xsd
 
	 
		 xlinks.xsd v3.0b2 2001-07
		 Primary editor: Arliss Whiteside. Last updated 2005-09-26 
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
		
	
	
	
	 
	
	 
	 
	 
	
	 
		 
			 
        The 'show' attribute is used to communicate the desired presentation 
        of the ending resource on traversal from the starting resource; it's 
        value should be treated as follows: 
        new - load ending resource in a new window, frame, pane, or other 
              presentation context
        replace - load the resource in the same window, frame, pane, or 
                  other presentation context
        embed - load ending resource in place of the presentation of the 
                starting resource
        other - behavior is unconstrained; examine other markup in the 
                link for hints 
        none - behavior is unconstrained 
      
		
		 
			 
				 
				 
				 
				 
				 
			
		
	
	 
		 
			 
        The 'actuate' attribute is used to communicate the desired timing 
        of traversal from the starting resource to the ending resource; 
        it's value should be treated as follows:
        onLoad - traverse to the ending resource immediately on loading 
                 the starting resource 
        onRequest - traverse from the starting resource to the ending 
                    resource only on a post-loading event triggered for 
                    this purpose 
        other - behavior is unconstrained; examine other markup in link 
                for hints 
        none - behavior is unconstrained
      
		
		 
			 
				 
				 
				 
				 
			
		
	
	
	 
		 
		 
		 
		 
		 
		 
		 
	



