
OPENGIS PROJECT DOCUMENT 02-039R1 

TITLE: Web Pricing & Ordering Service (WPOS) XML Configuration & 
Pricing Format (XCPF) 
AUTHOR:  Name: Roland M. Wagner  
  Address: Fraunhofer ISST, Emil-Figge-Str. 91, 
    D-44227 Dortmund 
     
  Phone: +49 231 97677-310 
  FAX:  +49 231 97677-198 
  Email: roland.wagner@isst.fhg.de 
DATE: 18 November 2002 
CATEGORY: Discussion Paper 

1. Notice and Warning 
The Open GIS Consortium (OGC) releases this specification to the public without warranty. It is subject to 
change without notice. This specification is currently under active revision by the OGC Technical 
Committee.   
 
This document is not an OGC Standard. It is distributed for review and comment. It is subject to change 
without notice and may not be referred to as an OGC Standard.  
 
Recipients of this document are invited to submit, with their comments, notification of any relevant patent 
rights of which they are aware and to provide supporting documentation.  

Requests for clarification and/or revision can be made by contacting the OGC at revisions@opengis.org. 
 

2. Background 
After solving the basic problems of an interoperable distributed environment, the business case gets more 
and more relevant. Therefore, the Fraunhofer ISST and the GDI NRW Testbed I & II developed the Web 
Pricing & Ordering Service (WPOS) and the XML Configuration & Pricing Format (XCPF). This 
specification covers all standard geo-eBusiness processes like pricing, ordering and online delivery for 
domain specific products.  

OpenGIS Project Document 02-039r1 18 November 2002 Page 1 



 

 

 2



 

Web Pricing & Ordering Service (WPOS) 
XML Configuration & Pricing Format (XCPF) 

Fraunhofer ISST Bericht No. 63/02 
Geo-eBusiness Specification 

 
 
 
Roland M. Wagner 
November 14th, 2002 
Dortmund 

 



 

 2



 

Index 
 
 

Background................................................................................................................................................. 1 
Proposal ...................................................................................................................................................... 1 
Web Pricing & Ordering Service (WPOS) XML Configuration & Pricing Format (XCPF) .................................. 1 
Fraunhofer ISST Bericht No. 63/02 Geo-eBusiness Specification ................................................................... 1 
Index ........................................................................................................................................................... 1 
1 Introduction ........................................................................................................................................ 7 

1.1 Infrastructure means building bridges ........................................................................................ 7 
1.2 Case Study: GIS meets e-Business - “GeoMarkt.NRW”............................................................... 7 

1.2.1 Business Model.................................................................................................................... 9 
1.2.1.1 Portal Model ....................................................................................................................9 
1.2.1.2 Procurement Model.......................................................................................................10 
1.2.1.3 Integration Model ..........................................................................................................10 
1.2.1.4 Community Model .........................................................................................................10 

1.2.2 Architecture ...................................................................................................................... 10 
1.2.3 Functionally and Requirements .......................................................................................... 11 
1.2.4 Suitable Standards, Workflow and the unsolved “Gap” .................................................... 11 

1.3 Open Questions ....................................................................................................................... 13 
1.3.1.1 How to Design an Machine-Readable Data Format for Geo-Domain Specific Business 
Price Models? ..............................................................................................................................13 
1.3.1.2 Which Interface Functions are needed for Pricing and Ordering?................................13 
1.3.1.3 How to embed the new Components into the existing OGC/ISO Workflow? ...............14 
1.3.1.4 How to Embed Pricing and Ordering Functions into cascaded Architectures? ............14 

1.3.2 Product and Service Description......................................................................................... 15 
1.3.3 Security (AAA) ................................................................................................................... 15 

2 Motivation and Benefits .................................................................................................................... 17 
2.1 Class A: Pricing Information ..................................................................................................... 18 
2.2 Class B: Shop ........................................................................................................................... 19 
2.3 Class C: Portal.......................................................................................................................... 19 
2.4 Class D: Vertical Value Chain ................................................................................................... 19 

3 Geo-eBusiness Service: WPOS/XCPF Specification .............................................................................. 21 
3.1 Abstract Design........................................................................................................................ 21 

3.1.1 Abstract Architecture Principles ......................................................................................... 21 
3.1.1.1 Separation between Data and Logic.............................................................................21 
3.1.1.2 Service Cascading and general Chaining.....................................................................21 

3.1.2 Abstract Data Model and Encoding ................................................................................... 22 
3.1.2.1 Transformation Business Pricing Models into mathematical Formulae........................22 
3.1.2.2 “Filling the receipt”-Concept and XCPF Methods .........................................................22 
3.1.2.3 Organization of Products in Groups and Catalogues ...................................................23 
3.1.2.4 “Product” Elements and the Basic XCPF Process........................................................23 
3.1.2.5 “ProductGroup” Elements and the Hierarchical XCPF Process ...................................23 
3.1.2.6 Inheritance Methods and the Inheritance XCPF Process.............................................24 
3.1.2.7 Order of XCPF Processes.............................................................................................24 
3.1.2.8 External Data Exchange ...............................................................................................25 
3.1.2.9 Nomadism of XCPF instances ......................................................................................25 

3.1.3 Abstract Functionality Principles......................................................................................... 26 
3.1.3.1 Functionality ..................................................................................................................26 

 1



 

3.1.3.2 Business Protocols vs. technical Protocols ..................................................................26 
3.1.3.3 Protocol Layering Method.............................................................................................27 

3.2 Applied Design .........................................................................................................................30 
3.2.1 Applied Data Encoding: XML Configuration & Pricing Format (XCPF) .................................30 

3.2.1.1 XCPF Object “Product” .................................................................................................30 
3.2.1.2 XCPF Object “contractInformation” ..............................................................................31 
3.2.1.3 XCPF Object “Calculation”............................................................................................32 
3.2.1.4 XCPF Object “parameter” .............................................................................................33 
3.2.1.5 XCPF Object “operation” ..............................................................................................34 
3.2.1.6 XCPF Object “productGroup” .......................................................................................35 
3.2.1.7 XCPF Object “Inheritance”............................................................................................36 
3.2.1.8 Main structure axes ......................................................................................................37 

3.2.2 Applied Functionality: Web Pricing & Ordering Service (WPOS)...........................................38 
3.2.2.1 Method: GetCapabilities ...............................................................................................38 

3.2.2.1.1 HTTP Get Request ...................................................................................................38 
3.2.2.1.1.1 Request Example ..............................................................................................38 

3.2.2.1.2 Response..................................................................................................................39 
3.2.2.1.2.1 Response Example Fragment ............................................................................40 

3.2.2.2 Method: GetPriceModel ................................................................................................41 
3.2.2.2.1 HTTP GET Request..................................................................................................41 

3.2.2.2.1.1 Example............................................................................................................41 
3.2.2.2.2 Response..................................................................................................................41 

3.2.2.2.2.1 Example Fragment ............................................................................................43 
3.2.2.3 Method: GetPrice..........................................................................................................44 

3.2.2.3.1 HTTP GET Request..................................................................................................44 
3.2.2.3.1.1 Example HTTP GET Request for unknown Services ............................................44 
3.2.2.3.1.2 Example HTTP GET Request for known Services without additional Parameters.45 
3.2.2.3.1.3 Example HTTP GET Request for known Services with additional Parameters......45 

3.2.2.3.2 Response..................................................................................................................46 
3.2.2.3.2.1 Example Response ............................................................................................47 

3.2.2.4 Method: OrderProduct ..................................................................................................48 
3.2.2.4.1 HTTP GET Request..................................................................................................48 

3.2.2.4.1.1 Example............................................................................................................49 
3.2.2.4.2 Response..................................................................................................................49 

3.2.2.5 Method: GetProduct......................................................................................................50 
3.2.2.5.1 HTTP GET Request..................................................................................................50 

3.2.2.5.1.1 Request example ..............................................................................................50 
3.2.2.5.2 Response..................................................................................................................50 

3.2.2.6 Method: GetOrderList ...................................................................................................51 
3.2.2.6.1 Request.....................................................................................................................51 

3.2.2.6.1.1 Example............................................................................................................51 
3.3 General XCPF 1.0.0-v6 elements...............................................................................................53 

3.3.1 element abstract ................................................................................................................53 
3.3.2 element address.................................................................................................................53 
3.3.3 element contractInformation..............................................................................................54 
3.3.4 element calculation ............................................................................................................54 
3.3.5 element inheritance ...........................................................................................................54 
3.3.6 element offerDuration........................................................................................................55 
3.3.7 element parameter.............................................................................................................55 
3.3.8 element parameterName....................................................................................................56 
3.3.9 element productStatus .......................................................................................................56 

 2



 

3.3.10 element productStatusList ................................................................................................. 56 
3.3.11 element title ...................................................................................................................... 57 
3.3.12 element transactionNumber .............................................................................................. 57 
3.3.13 complexType inheritanceType............................................................................................ 57 
3.3.14 complexType mathType ..................................................................................................... 57 
3.3.15 complexType productType................................................................................................. 58 
3.3.16 simpleType xlink:actuateEnum........................................................................................... 58 
3.3.17 simpleType xlink:showEnum .............................................................................................. 58 
3.3.18 simpleType xlink:typeEnum................................................................................................ 58 

3.4 MathML elements .................................................................................................................... 59 
3.4.1 element math.................................................................................................................... 59 
3.4.2 complexType applyType..................................................................................................... 60 
3.4.3 element applyType/bvar..................................................................................................... 61 
3.4.4 element apply.................................................................................................................... 61 
3.4.5 element ci.......................................................................................................................... 62 
3.4.6 element cn ........................................................................................................................ 62 
3.4.7 element cos....................................................................................................................... 62 
3.4.8 element divide................................................................................................................... 62 
3.4.9 element eq ........................................................................................................................ 62 
3.4.10 element gt......................................................................................................................... 63 
3.4.11 element lt .......................................................................................................................... 63 
3.4.12 element max ..................................................................................................................... 63 
3.4.13 element min ...................................................................................................................... 63 
3.4.14 element minus................................................................................................................... 63 
3.4.15 element plus...................................................................................................................... 64 
3.4.16 element power .................................................................................................................. 64 
3.4.17 element sin........................................................................................................................ 64 
3.4.18 element sum ..................................................................................................................... 64 
3.4.19 element tan....................................................................................................................... 64 
3.4.20 element times.................................................................................................................... 65 
3.4.21 element piecewise ............................................................................................................. 65 
3.4.22 element piecewise/piece .................................................................................................... 66 
3.4.23 element piecewise/otherwise ............................................................................................. 67 
3.4.24 element piecewise/otherwise/apply.................................................................................... 68 

3.5 element xcpfEnvelope .............................................................................................................. 69 
3.5.1 element xcpfEnvelope/xcpfCatalog .................................................................................... 69 
3.5.2 element xcpfEnvelope/xcpfCatalog/generatorInfo.............................................................. 69 
3.5.3 element xcpfEnvelope/xcpfCatalog/xcpfVer ....................................................................... 70 

3.6 complexType addressType........................................................................................................ 70 
3.6.1 element addressType/name ............................................................................................... 70 
3.6.2 element addressType/name2 ............................................................................................. 71 
3.6.3 element addressType/contact............................................................................................. 71 
3.6.4 element addressType/street ............................................................................................... 71 
3.6.5 element addressType/zip.................................................................................................... 71 
3.6.6 element addressType/city................................................................................................... 71 
3.6.7 element addressType/country ............................................................................................ 71 
3.6.8 element addressType/phone .............................................................................................. 72 
3.6.9 element addressType/fax ................................................................................................... 72 

 3



 

3.6.10 element addressType/email ................................................................................................72 
3.6.11 element addressType/url.....................................................................................................72 

3.7 complexType calculationType....................................................................................................72 
3.7.1 element calculationType/declarationList..............................................................................73 
3.7.2 element calculationType/declarationList/predefinedParameters...........................................73 
3.7.3 element calculationType/declarationList/configurationParameters.......................................73 
3.7.4 element calculationType/declarationList/referencedParameters ...........................................73 
3.7.5 element calculationType/declarationList/precalculatedParameters .......................................74 
3.7.6 element calculationType/declarationList/resultParameters ...................................................74 
3.7.7 element calculationType/formulae......................................................................................74 
3.7.8 element calculationType/formulae/function/outParameterList .............................................75 
3.7.9 element calculationType/formulae/function/inParameterList ...............................................75 
3.7.10 element calculationType/formulae/function/operation ........................................................75 
3.7.11 element calculationType/formulae/function/operation/DCPType .........................................75 
3.7.12 element calculationType/formulae/function/operation/DCPType/HTTP ................................75 
3.7.13 element calculationType/formulae/function/operation/DCPType/HTTP/Get..........................76 
3.7.14 element calculationType/formulae/function/operation/DCPType/HTTP/Get/OnlineResource.76 

3.8 complexType contractInformationType .....................................................................................76 
3.8.1 element contractInformationType/supplier .........................................................................76 
3.8.2 element contractInformationType/supplier/supplierId..........................................................76 
3.8.3 element contractInformationType/supplier/supplierName ...................................................77 
3.8.4 element contractInformationType/customer .......................................................................77 
3.8.5 element contractInformationType/customer/customerId .....................................................77 
3.8.6 element contractInformationType/customer/customerName...............................................77 
3.8.7 element contractInformationType/licensing ........................................................................78 
3.8.8 element contractInformationType/licensing/rightsOfUse .....................................................78 
3.8.9 element contractInformationType/licensing/copyright.........................................................78 
3.8.10 element contractInformationType/licensing/devolution.......................................................78 
3.8.11 element contractInformationType/licensing/duties ..............................................................78 
3.8.12 element contractInformationType/licensing/warranty..........................................................79 
3.8.13 element contractInformationType/licensing/generalProvisions.............................................79 
3.8.14 element contractInformationType/licensing/jurisdiction ......................................................79 

3.9 complexType parameterType ....................................................................................................79 
3.9.1 element parameterType/variableDescr ................................................................................80 
3.9.2 element parameterType/variableGroup...............................................................................80 
3.9.3 element parameterType/variableOrigin ...............................................................................80 
3.9.4 element parameterType/variableOrigin/originId ..................................................................80 
3.9.5 element parameterType/variableValue................................................................................81 
3.9.6 element parameterType/variableUnit ..................................................................................81 

3.10 complexType productGroupType ..............................................................................................81 
3.10.1 element productGroup.......................................................................................................82 
3.10.2 element productGroupType/product ..................................................................................83 

3.11 complexType productStatusListType..........................................................................................83 
3.11.1 element productStatusListType/statusHistory ......................................................................83 
3.11.2 complexType productStatusType ........................................................................................83 
3.11.3 element productStatusType/statusInfo................................................................................84 

4 Examples Series..................................................................................................................................85 
4.1 WPOS with Unknown Service Request ......................................................................................85 

 4



 

4.1.1 HTTP GET Request GetCapabilities..................................................................................... 85 
4.1.2 GetCapabilities Response................................................................................................... 85 
4.1.3 HTTP GET GetPriceModel Request ..................................................................................... 87 
4.1.4 GetPriceModel Response XCPF .......................................................................................... 87 
4.1.5 HTTP GET GetPrice Request ............................................................................................. 100 
4.1.6 GetPrice Response XCPF .................................................................................................. 101 
4.1.7 HTTP GET OrderProduct Request ..................................................................................... 114 
4.1.8 OrderProduct Response XCPF .......................................................................................... 115 

4.2 WPOS with OGC WMS Service Request ................................................................................. 125 
4.2.1 HTTP GET GetPrice Request ............................................................................................. 125 
4.2.2 XCPF Response Object..................................................................................................... 125 

5 XCPF Schema .................................................................................................................................. 139 
6 Reference ........................................................................................................................................ 152 

 

 5





 

1 Introduction 
 

1.1 Infrastructure means building bridges 
 
Different specialized tasks need different environments. But data exchange is essential 
to create higher value products. Infrastructures and therefore interoperability helps to 
bridge the gap between these environments (see figure 1). The lowest “bridge” in a 
data exchange is the common understanding of a data encoding. The data may be 
exchanged via FTP or email. Services are the next step, because they deliver data on-
demand and with the wanted configuration. 

Figure 1 Bridging the environment gap 

Data services are a good example for distributed applications. A well-known service is 
the OGC web mapping service. But how to protect the service in an interoperable 
mode in the case of protected data? Therefore a security service standard is required to 
provide authentication, authorization and access control (AAA). The next “bridge”, the 
Geo-eBusiness bridge with the WPOS service, can close the environment gap. Pricing 
and ordering are the standard mechanism in the common business.  
If the business level can be achieved, the infrastructure gap is closed.  

1.2 Case Study: GIS meets e-Business - “GeoMarkt.NRW” 
 
The research project of the Internet portal “GeoMarkt.NRW” was set up to investigate 
new technological concepts to provide professional users of geo-data products a 
quicker access to distributed sources.  
The concrete use case and a known unsolved problem were the distributed 
responsibilities for cadastral geo-information products in the German state NRW. In 
fact, the data was located and governed in more than 50 municipalities. A good reason 
for an organization in that way is the importance of sustainable data maintenance for 
its value. Geo-data is an image of the world, which is always in change. This 

 



 

organization model was very effective for local purchasers (see in figure 2 purchaser A). 
On the other hand, regional- or national-wide players (see in figure 2 Purchaser B and 
C ) need permanent detailed geo-data as a basic prerequisite for their purposes, e.g. 
for new roads or pipe-lines. Multiple, very time consumable requests are necessary to 
obtain the basis data. 
Different interests of the concerned data providers made it over a long time unfeasible 
to provide for a data distribution model acceptable to both purchaser groups . 
 
 
 
 
 
 
 
 
  requ
 
 
 
 
 
 
 
 
 Municipality A Municipality B Municipality C 

A: local 
purchaser  

B: occasional local  
    and regional purchaser

C: regional, national, 
international purchaser  

Multiple 
ests 

 

Figure 2 Purchaser groups A, B and C and their relationship to municipal data providers 

But end of the nineties, it seemed that the use of new technologies could help to solve 
this discrepancy. With the new possibilities of the World Wide Web, the Internet can 
connect all local data provide to a single entry point for purchasers, called “portal”. The 
portal offers the products with descriptions of the connected local municipalities, 
without a data replication mechanism.  After an order is being received by the portal, 
the order may be divided into parts and transmitted electronically via the network to 
the concerned data suppliers. The local services produce the requested data and send it 
back to the portal. 
With this electronic mechanism, the player C may not even more need to ask multiple 
local data supplier for multi regional data sets. Even local purchaser may not any more 
request their standard data electronically rather than asking directly.   
 
 
 
 
 
 
 
 

 

 8



 

 
 
 
 
 
 
 
 
 

 
 
 
 
 
 
 

NEW: GeoMarkt.NRW 

Municipality A Municipality B Municipality C 

A: local 
purchaser  

B: occasional local  
    and regional purchaser

C: regional, national, 
international purchaser  

Contracts and Web 
Technologies 

Single 
request

Figure 3 GeoMarkt.NRW: Efficient purchase with single request for (B) and (C) without disturbing relationships (A)  

The main important technology concept to reach an optimal solution for both 
purchaser groups are interoperability concepts within distributed environments. The 
project “GeoMarkt.NRW” was an implementation proof of concept of OGC and ISO 
standards in a multi-tier architecture.  

1.2.1 Business Model 
 
Part of the local SDI initiative GDI NRW is the project “GeoMarkt.NRW” as a business-
to-business platform for multiple suppliers and purchasers to trade geographic data 
and geo-services. As most inter-business e-commerce systems, the platform requires its 
users to register, i.e. most functions are offered to a closed, and thus highly qualified, 
user group. The platform supports different business models (Holtkamp, 2000):  

1.2.1.1 Portal Model 
Suppliers offer their products in a catalogue using ISO 19115 for the product 
description. The purchasers may order data via GeoMarkt.NRW. In this case, the 
platform will also act as a financial clearing centre. Since neither credit card payment 
nor electronic payment is favoured very much by German and European companies, 
the payment relies on purchaser accounts, which are settled periodically. The orders are 
transmitted to the suppliers, which deliver the data directly to the purchaser, either 
electronically via Internet or conventionally as a CD-ROM, or a paper map. Thus, the 
suppliers remain master of their data, which are not stored by GeoMarkt.NRW. Most of 
this transaction – information, ordering and delivery – will be based on the forthcoming 
corresponding OGC services in future (Holtkamp, 2000).  

 9



 

1.2.1.2 Procurement Model 
As an extension of the portal model, the procurement model is based on a well-defined 
business workflow to deliver geo-data from the supplier directly to the desktop of the 
person in charge on purchaser side.  A bank employee may, for example, receive the 
cadastral information he/she needs to approve a loan for a house purchase directly 
from a cadastral geo-data server (Holtkamp, 2000). 

1.2.1.3 Integration Model  
It is well known that there is a potentially huge value chain between basic geo-data 
and final geo-based products or services (Krek, 2000). GeoMarkt.NRW supports this 
value chain by a project realm: In this area purchasers can ask for services, and data 
supplier and/or service providers may initiate and negotiate ad-hoc consortia in order to 
meet the requests. 

1.2.1.4 Community Model 
Finally, GeoMarkt.NRW provides an information and interaction platform for the 
community, offering information bulletins, discussion forums and newsletters. 

1.2.2 Architecture 
 
The typical architecture for a portal like “GeoMarkt.NRW” has three or more server 
tiers, which consist of a user tier, a general transaction management tier and 
specialized services tier.  
A purchaser uses a common Internet browser as a client to communicate with the 
system. The portal, as a server, provides the entry for every transaction for the user. It 
offers a unique look & feel and manages general tasks, e.g. accounts. The third tier 
may consist of many, distributed and different web services. The portal acts in this case 
as a client. These services may use other service in the 4th tier. This principle is limited by 
the common requirement to answer a WWW-Browser request from the first tier within 
30 seconds wherein all other tiers should be requested. 

 
 
 
 
 
 
 
 
 
 
 
 Service Service Service

ServiceService

Tier 

4

3

2

1

Portal 

WWW-Browser

Figure 4 An abstract multi-tier architecture with on-the-fly processing through the internet 

 10



 

1.2.3 Functionally and Requirements 
 
The conceptual advantages of the portal approach are evident and shown in the use 
case of the 50 local data-provider in Northrhine-Westfalia (NRW). But for a realization, 
“suitable” and accepted standards are required to achieve interoperability and to meet 
the necessary functionality. “Suitable” solutions have to support: 

 
• Query mechanisms to find desired data 
• Textual and graphical geo-data description 
• Ordinary business transactions in this specific domain 

o Pricing models and licensing,  
o Price calculation 
o Security mechanism  
o Ordering and delivery 

and 
• Distributed environments principles 
• Web services methods 
• XML as a format for data encoding 

1.2.4 Suitable Standards, Workflow and the unsolved “Gap” 
 
Because of the event need for a geo-information retrieval mechanism, OGC, ISO and 
other standardization bodies, e.g. ingeoforum (InGeoForum 2000), already developed 
meta-data formats (e.g. ISO 19115) and a query languages (e.g. CQL) for the geo-
domain. The documents and specifications cover the complete necessary functionality 
to describe a geo-data set, to find it and to offer further information about it and 
where to get the data. The OGC Web Mapping Service (WMS) implementation (OGC 
1999-2002) specification can be used in a very efficient way to provide geographical 
navigation functions and in the case of bitmap geo-data sometimes direct data access. 
Some other specifications like the OGC Web Feature Service (WFS), Geographical 
Markup-Language (GML) or WMS with Style Layer Description (WMS SLD) 
specifications are offering enhanced data manipulation which meet described 
requirements. These standardized specifications activities are being continued. 
All these developments take free data sources into account, which may be accessed 
online via HTTP. In the case of restricted or commercial products, the contact 
information is being offered, but no computer supported pricing & ordering processing. 
But the approach to find first a solution for free data or internal data sources was an 
important step in the development and it offered itself many advantages. 
 
Form a purchaser point of view, the functionalities described in 1.2.3 can be arranged 
in a general workflow with five principle steps. Table 1 shows the workflow and gives 
an overview of the availability of suitable solutions. 
 
 
 
 

 

 11



 

Step Workflow Suitable solution 
I Search for geo-data and their sources

 

ISO 19115 Metadata 
ISO 19119 Metadata 
OGC Catalog Service 
OGC WRS 

II Textual and graphical information 

 

ISO 19115 Metadata 
OGC WMS 

III Pricing and ordering 
 

Attention: 
INTEROPERABILITY 
TRAP  

IV Security mechanisms for 
Authentication, Authorization, Access 
Control (AAA) 

 
Attention: 
INTEROPERABILITY 
TRAP 

V Geo-data production and 
manipulation, e.g. integration or 
transformation  

OGC WFS, OGC WMS 
SLD, OGC WTS 

Table 1 General trading workflow in steps and availability of solutions in distributed web environment 

The domain standardization bodies do not provide a suitable solution for the workflow 
steps III, pricing & ordering, and IV, security. Table 1 visualizes the “gap” in a business 
case. 
Figure 5 analyzes the circumstance from an architectural point of view. The 
functionality of workflow steps I and II can be covered by the “Metadata” component. 
The workflow step V can be covered by the “Geo-data” component. This figure 
visualizes the needed e-commerce component (Eco) as a technical solution for the 
workflow steps III and IV, which should be designed along the principles of the other 
two components. 
 

Figure 5 Three-tier-architecture with Metadata Catalogue, E-Commerce Data and OGC Data services and two data 
provider 

 12



 

1.3 Open Questions 
 
Although specifications are available for meta-data and geo-data formats and meta-
data catalog and geo-data services, OGC provides a technique, which may be also 
employed for a specification for pricing and ordering aspects. Along the OGC and 
general web service technique, the solution should consist of a data format for 
geographical price-models and methods to calculate a price and to start an order 
process. 

1.3.1.1 How to Design an Machine-Readable Data Format for Geo-Domain 
Specific Business Price Models? 
 
The calculation of a price may sound simple in the case of tailored mass products like 
books or wine bottles. Modern geo-services provide a wide range of possible product 
configurations. Because geo-data is extreme costly in Europe and elsewhere, the wide 
range of possible product configurations are strongly interdependent closely related to 
therefore resulting complex price models.  
The solution of the open question of the data format should be able to cover the wide 
range of today-used pricing models. Some examples are described in detail as use-cases 
in chapter 4.1. 

1.3.1.2 Which Interface Functions are needed for Pricing and Ordering? 
 
Other open questions are procedures, which operate on the price model data formats 
and other data sources like purchaser databases. Typical procedures are product and 
licensing information, price information, and order forms for purchaser address and 
billing data, receipts and bill of delivery. But are these typical procedures sufficient for 
the wide range of pricing models? 

 13



 

1.3.1.3 How to embed the new Components into the existing OGC/ISO 
Workflow? 
A possible solution should enhance the general workflow, but therefore it needs to tie 
up to already released standards. The first approach of OGC/ISO workflow covered the 
runtime main procedures “search” and “access” of free geo-data as described above. 
The metadata standard ISO 19115 already identified the business case “ordering” and 
provides a simple, not machine-readable unit for this purpose shown in table 2. But the 
class was not designed to cover a computer supported ordering, because of the 
uncertain free character strings.  
 
 

 

Table 2 ISO 19115 extracted Unit MD_StandardOrderProcess  

1.3.1.4 How to Embed Pricing and Ordering Functions into cascaded 
Architectures? 
 

WM-Server 

WM-Client

WM-Client 

WM-Server WM-Server 

Transparency 

Price? 

Price? 

Price? 

 

Figure 6 Example of an cascaded OGC Web Mapping Service Architecture 

The integration of geo-data is the most important topic for OGC interoperability 
activities. Modern architectures providing the mechanism of hierarchical “cascaded” 

 14



 

chaining of similar services. Figure 6 gives an example of the famous Web Mapping 
Service. 
How to find a solution, which will be implementations-independent by principle to 
conserve the advantages of using protocol-conform products? 
 
 

1.3.2 Product and Service Description 
 
The common workflow of e-Commerce Systems contains product description as the 
first step. In the GIT world the product description is called “metadata” data, which 
describes the geo-referenced data. This kind of data is important in the case of 
searching geo-data by using catalogues. There are several approaches do define a 
semantic and to provide a digital data representation. The most important today is the 
new ISO 19115 standard, which is widely accepted. This metadata standard describes 
all necessary topics about a geo-data set or in the case of geo-eBusiness about the 
product geo-data. Therefore, there is no need to start describing the product, rather to 
use this standard.  
Similar to description of content with the ISO 19115, the ISO 19119 describes the web 
service and its properties. With these standards, the product “geo-data” can be 
searched and found in catalogues. 

1.3.3 Security (AAA) 
 
A geo-eBusiness Service calculates prices, receives orders and delivers. Typically for 
commerce a certain level of security is necessary for these transactions. But that does 
not means that a geo-eBusiness service development need to provide proprietary 
security mechanism rather than using known and accepted standards (See step IV in 
table 1).   
Authentication, Authorization and Access-Control (AAA)-Services are needed for many 
tasked where data is not free or should only be accessible to a certain group. There are 
some approaches to define this AAA Services in detail.  
The AAA should also provide a simple purchaser database, where address and login 
data is being stored. 
 

 15





 

2 Motivation and Benefits 
 
Today’s pricing mechanisms for geo-referenced data are much more complex than for 
other common goods, e.g. books.  

• Geo-data services have the ability do generate a product with a wide range of 
configurations.  

• Geo-data is costly to acquire and need permanent updating. Therefore, geo-
data is very expensive.  

These characteristics conduct to complex pricing models. 
 
 
 

 

Figure 7 Presentation extract of a complex pricing approach 

 
Figure 7 shows as a use case the “zone pricing” approach. The price depends on the 
covered areas in different pricing zones I-IV. But the price depends as well on more 
factors. 
There are several different pricing approaches on the market and there is a permanent 
change, because of general adjustments like inflation, but as well with new pricing 
formulas, e.g. special offers. 
 
 
 
 
 
 

 17



 

 
 
But if an encoding for the complex pricing models could be developed, a standardized 
interface released and a suitable embedding is provided, some major benefits can be 
used. Figure 8 shows the wide range of possible use of a Web Pricing & Ordering 
Service.  
 
 

 
 

Figure 8 Classification of Geo-eBusiness 

 

2.1 Class A: Pricing Information 
The use as class A provides a quick internal or external pricing information system 
24h/7d even for complex models. This applications does not need any integration with 
other services and supports on-line ordering with off-line delivery. 
 

 18



 

2.2 Class B: Shop 
The shop contains a Catalog Service to query the ISO 19115 meta data entries, a WPOS 
and some geo-data services. This class has the same characteristics but includes online 
delivery 

2.3 Class C: Portal 
An interoperable e-Business protocol like WPOS is necessary to set up a distributed 
portal efficiently. The portal can integrate transparent or not transparent multiple data 
provider and supporting search, pricing, ordering and delivery. Enhanced portals may 
provide geo-data integration services, which may include transformation and 
conversion services. 

2.4 Class D: Vertical Value Chain 
This class supports an electronic vertical value chain with cascaded WPOS services. The 
electronic procurement of geo-data as raw material offers data delivery “on-demand“ 
and possibly “on-the-fly”. This class needs essentially an interoperable eBusiness 
standard.

 19





 

3 Geo-eBusiness Service: WPOS/XCPF Specification 
 

In a research and development process, solutions are being created on different 
abstraction levels. Fundamental principles have a deep impact in a solution and may be 
difficult to change afterwards. The applied design can be derived from abstract 
principles. Therefore abstract and applied designs are presented separately in this 
document. 

3.1 Abstract Design 
This paragraph covers the fundamental abstract principles for the design of the pricing 
data model, for the functionality and for the embedding into the already existing 
environment. 

3.1.1 Abstract Architecture Principles 

3.1.1.1 Separation between Data and Logic 
Separation of data and logic in principle is the fundamental idea in this design. This 
approach is more difficult to design and to implement, but offers far-reaching 
advantages. The same software can handle complety different price models. Different 
data providers may use the same software instance or an own instance for their needs. 
The adjustment of prices can be easily realized without any operation in software code, 
which requires advanced knowledge and permissions. The advantages are evident, but 
the design much more challenging. 

  

3.1.1.2 Service Cascading and general Chaining  
An often-used mechanism to integrate data streams is the cascading of services. The 
abstract protocol principle of WPOS uses a protocol layer technology, which supports 
cascading. Therefore the often used cascading is possible with the same geo-data 
protocol. 

 21



 

3.1.2 Abstract Data Model and Encoding 

3.1.2.1 Transformation Business Pricing Models into mathematical Formulae 
 
Pricing models are designed to provide a customer with a transparent way to determine 
a price. Today, most pricing models are being published digitally, but with an uncertain 
semantic. Conditions are being often described by using words. The semantics of this 
kind of information representation has to be interpreted by humans and it depends on 
a subjective point of view. 
There are several real-world examples, showing misinterpretation of a public pricing 
formula even among colleagues. Because of the wide range of pricing models with 
complete different approaches, only a generic presentation can be used. 
The smallest common denominator to cover these requirements in a case of a pricing 
formula is the mathematical formula. Therefore these steps are necessary: 

• Principle: First core pricing elements, then secondary elements like “update” 
elements 

• Declaration of variables and their units 
• Successive transformation of human readable business pricing model into a 

mathematical formula 
As experience shows, that almost all business pricing models can be transformed into 
mathematical formulae. The result can be a set of hand written formulae. 
This first step cannot be supported by computer procedures. 

3.1.2.2 “Filling the receipt”-Concept and XCPF Methods 
Data models may have several views depending on use. Views have the advantage to  
select relevant data. The disadvantages of several views are several tool-sets. The XCPF 
design is a trade-off of both.  
The general idea of the XCPF design is to use a template of a complete receipt as a 
price model, which can be filled partly by each WPOS step. The XCPF object-oriented 
methods are very close to the WPOS methods. A prefix “xcpf” marks the object-
orientated difference. 

• The xcpfgetPriceModel method creates an instance of the XCPF catalog and 
selects the requested products pricing models up to the XCPF root knot 
“xcpfEnvelope”. 

• The xcpfgetPrice method sets the user given parameter values, calculates the 
formulae and stores the interim results in each hierarchical level up to the XCPF 
root knot.  

• The xcpforderProduct method stores the customer relevant data, e.g. 
address, status and transaction number into the selected XCPF instance. 

• The xcpfgetOrderList method returns a valid XCPF structure, but with a list of 
defined former customer orders. 

After a valid and complete workflow the instance can be stored with all contract and 
interim results for documentation at the customer client site as a result of the WPOS 
response “OrderProduct” and at the supplier site. 

 22



 

There are more XCPF methods for calculation, mapping and administration, which are 
implementation dependent and will be discussed in the applied approach paragraph. 

3.1.2.3 Organization of Products in Groups and Catalogues 
Some suppliers provide a large number of possible products. Therefore it is suitable to 
organize products in hierarchical product families or product-groups. There is an open 
number of point of views to arrange products in groups and finally in catalogues. The 
“productGroup” Objects can be recursive. 

3.1.2.4 “Product” Elements and the Basic XCPF Process 
The main price-able unit in an order process is a single “product” object. It can offer a 
complete price calculation result.  This mechanism is called the “Basic XCPF Process”.  
The object and its process is independent and can only be triggered from outside by 
configuration parameter settings and XCPF-WSC. The output result is most often a 
price, which corresponds to a meta data entries and therefore to a business product. 
Different measurement units may cause incorrect calculation and with it incorrect 
business offers. Therefore each parameter must have an unit entry. Especially in the 
cascading use with different WPOS instances from independent suppliers, different 
currencies may occur. 

3.1.2.5 “ProductGroup” Elements and the Hierarchical XCPF Process 
The “product” object ability of calculation is sufficient to provide a price for a single 
product. Price may differ depending on special constellations between instances of 
“product” objects. More common reasons are minimum fees, which may apply only for 
special product groups.  
 
XCPF offers a mechanism, the “Hierarchical XCPF Process”, which enables enhanced 
pricing on “productGroup” object level depending on multiple results from “product “ 
object level. The results may be prices, but may as well surfaces areas or other 
measurement units. The solution is a workflow, which first calculates sequential the 
leaf elements “product” sequentially. The results are being stored in parameter sub 
objects of each product object. After a calculation at “product” object level, the results 
may be referenced by a “productGroup” calculation formula. There are two reference 
methods: 

• Single-referenced parameter, which reference by product ID to a determined 
value of a determined parameter name 

• Multiple-referenced parameter, which reference to a list of all parameter on 
“product” object level with the same name 

A default example is the summation of prices in each “productGroup” level for an 
interim price of all selected product items. Group calculations may summarize interim 
prices form lower groups. The final result of all calculations is being stored in the root 
calculation object on xcpfEnvelope level.  

 23



 

3.1.2.6 Inheritance Methods and the Inheritance XCPF Process 
In the case of a large supplier, many thousands of products have a price model. In fact, 
in most pricing models are often series or recurrent entries like contract information. To 
avoid data redundancy and offer more efficient administration capabilities the XCPF 
inheritance mechanism was developed.  
Most often used objects may be inherited once on a certain hierarchical product group 
level. These objects will be inherited at runtime to all lower “productGroup” levels and 
finally to the “product” level. 
There are two possibly methods to change an inheritance: 
 

1. Overwriting be new inheritance within the inheritance tag 
2. Overwriting by a regular object at a regular position 

 
A new object in the inheritance (1) environment will be inherited to child objects. The 
second (2) overwriting will only override an inheritance at the given position. 
The Inheritance XCPF Process runs prior the other XCPF processes to set-up at a valid 
XCPF environment first. The inheritance will be invoked at the xcpfCatalog level and 
completed through all lower levels.  

3.1.2.7 Order of XCPF Processes 
 
Calculation processes at “product” object level, calculation on “productGroup” level 
and optimization by inheritance need a certain order, which depends on the request: 
 

1. Inheritance XCPF Process 
2. Basic Calculation XCPF Process 
3. Hierarchical Calculation XCPF Process 

 
From a more general point of view, the manipulation starts at the XML Document root 
with the highest inheritance level down to the leafs. And then back via setting of 
configuration parameter-values and to the root with the calculation hierarchy. Table 3 
gives an overview together with WPOS methods. 
  

 XCPF Methods 
WPOS Methods Inheritance Process Basic Process Hierarchical Process

GetCapabilities - - - 
GetPriceModel 1 - - 

GetPrice 1 2 3 
OrderProduct 1 2 3 

GetProduct - - - 
GetOrderList - - - 

Table 3 The matrix shows the XCPF process methods in relationship to WPOS methods. 

 24



 

3.1.2.8 External Data Exchange 
There are some reasons that price formulae may depend on external data. For example, 
a price can only be calculated, if some parameters 

• are depending on mass storage filtering, e.g. pricing by number of objects. 
• need sumptuous sub procedures, e.g. calculation of surface, which may 

depend on different co-ordinate systems 
• Actual values, e.g. stokes or interests   
• other… 

Solutions for these external requests are embedded Web Service calls, with a set of 
output parameters and a set of input parameters. They will be called in the XCPF 
encoding “XCPF Web Service Calls (XCPF-WSC)”. Due to time-outs, it is required, that 
an external process should be done “on-the-fly”. The uses of web service for external 
data exchange are required, because of the wanted nomadism of XCPF instances. 

3.1.2.9 Nomadism of XCPF instances 
Pricing Models should be in general transparent to anonymous customers. This is a 
main reason for the WPOS function “GetPriceModel”. A selected instance of a XCPF 
price model may be used as well on different WPOS instances. A reason might be 
optimization for lower costs. Nomadism is possible, because of the principle of 
separation between data and logic, encoding with platform independent XML and the 
use of XCPF Web Service Calls (XCPF-WSC). 

 25



 

3.1.3 Abstract Functionality Principles 
 

3.1.3.1 Functionality 
The content of this document was developed to close the “gap” in a business use case 
between the search and retrieval functions of a meta-information system (MIS) and the 
geo-data generation functionalities. This “gap” was described in detail in chapter 2. 
Therefore a typical business workflow needs functions for offer all configuration 
capabilities, pricing and contract information for each product. There return value is the 
product specific price model. 
With these information elements, a purchaser is able to configure a product and to 
calculate a price with its own calculator.  
A more enhanced functionality is to offer a method to calculate a price by a service. In 
a case of a geo-data protocol, there might be the question: “How much would the 
result of this specific geo-data request cost?” The return value is a price. 
The business act of an order is technical very similar to a price calculation, but adds 
purchaser accounting information and is from a business point of view a signing of a 
contract with all possible consequences. 
The characteristic of most modern digital geo-products is, that they can be represented 
completely as digital data. This circumstance of a special e-commerce product opens 
the perspective to delivery the desired product online via the Internet. 
An optional functionality might be a method to track all orders with all attributes, e.g. 
price and a status, e.g. ready for delivery or error.  
There are some more additional sub workflow needed like for security reasons. But the 
principle functionality can be defined in following methods: 
 
Functionality Short description 
Get Capabilities Delivers a complete list of all available products 
Get Price Model Delivers all configuration and price information 
Get Price Price calculation as a business offer 
Order Product Ordering  
Get Products Delivery 
Get Order List Accounting 

Table 4 Necessary functionality for a business workflow 

 
These methods offer all needed functionally for a complete business workflow. The 
functionality need to be defined and mapped to WPOS methods, which are protocol 
dependent. 
 

3.1.3.2 Business Protocols vs. technical Protocols 
 
Each protocol enables applications to exchange information within the protocol 
specification, which works pretty fine in the designed scope. Using this ability, 

 26



 

cascading systems can merge information from distributed sources in a very elegant 
way. A well-known example is the cascading OGC Web Map Service using free data 
sources (See figure 9).  
 
 

WM-Server 

WM-Client

WM-Client 

WM-Server WM-Server

 
 
 
 
 
 
 
 
 
 
 
 
 

Figure 9 Cascading Architecture with free sources 

 
But it is not possible to enable these technical protocols covering busin
transferring value data across company borders. A Web Map client ca
a Web Map server. Using some additional “vendor specific” paramete
business aspects, which are specified, makes a solution dependent on
instances. It may work with a cascading Web Map Server product of c
not with another. 
 

3.1.3.3 Protocol Layering Method 
 
In the following paragraph, a technical service is a service, which has t
handle sector specific formats and may merge information. A business
service, which covers transaction aspects like price, ordering and delive
Web Map Server (WMS) is a good example for a technical service. The
Ordering Service (WPOS) is an example for a business service. 
 
A solution to disentangle technical and business data streams is by int
method of protocol tier models (See Figure 10). A tier covers its specif
encodes and packs the lower protocol into its tier data stream from th
server. 
 
 
 
 
 
 

 

ess aspects while 
n only understand 
rs to transmit 
 implementation 
ompany “A” but 

he ability to 
 service is a 
ry. The OGC 

 Web Pricing & 

roducing the 
ic aspects, 
e client to the 

27



 

 
 
 
 
 

 
 
 

 
 

 

Figure 10 Protocol Tiers 

A solution to solve the situation of already define
manner is by emulating a technical service. The c
service are defined by a URL, which has to be con
parameter to get involved into the technical data
technical target URL of its server is being reconfig
The business client accepts the request and the p
can be analysed, encoded and packed into the b
can contain all necessary transaction parameters.
client requests the business server. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

Co

 
 
WPO-Client

 
 
WPO-Client

WPO-Server 

WM-Server

WM-Client

WM-Client

WPO-Server 

WM-Server 

WPO-Server 

WM-Server 

Business Protocol 

Technical Protocol 

HTTP Protocol 

Co

Co

Company C 

 

Figure 11 Cascading example Architecture with a Web Mapping (WM-)
& Ordering (WPO-) Service as a business Service 

28
d technical specifications in a general 
onnection between a web client and a 
figured. This is the only general 

 stream. In the business case the 
ured to an emulating business client. 
arameter list. The technical request 
usiness protocol. The business request 
 In the following step the business 

mpany D 

mpany B 

mpany A 

 Service as technical Servic
e and the Web Pricing 

 



 

 
 
The business server unpacks the technical request, decodes the technical request and 
sends it to the target technical server. The technical server has the abilities to create the 
requested data for the technical client. This data stream will be routed back via the 
business protocol and presented to the technical client as requested. All transactions 
may be tracked and analysed for further accounting within the business tier. Figure 11 
shows this mechanism also working in a cascading way. This  general approach can be 
used to cover business aspects without interfering the data stream between specialised 
technical services. 

.  

 29



 

3.2 Applied Design 

3.2.1 Applied Data Encoding: XML Configuration & Pricing Format (XCPF) 
 
The name “XML Configuration & Pricing Format” for the applied data model was 
chosen to show, that a data-set 

• is based on a XML structure 
• contains all capabilities for a (geo)-products, which should be configured by 

customer 
• covers the pricing aspect, which is often very close to the configuration. 

3.2.1.1 XCPF Object “Product” 
 
This Object is an important structure and is the smallest unit, which contains a 
complete calculation environment. This “product” object corresponds with its ID 
directly to a data product and to its metadata. A “product” object has, in the sense of 
the XCPF main axis, no child-elements. 

Figure 12 XCPF “product” Element 

A WPOS instance can use a XCPF pricing model instance to store order process 
information into the status list. Each “productGroup” may have a title, but each 
product must have a title to allow a user a better understanding. An abstracts may be 
used to give some more background information about the product. But the complete 
product description may be made in an ISO19115 description and referenced by a 
“productId”.  

 30



 

The field “transactionNumber“ (TAN) contains an ID, which is needed the stateless 
WPOS transactions. There are three ways to implement the workflow for this field: 

1. TAN in the “product” object corresponds to a single ordered product 
2. TAN in “productGroup” object corresponds to all entries in a order session 
3. TANs in both fields  

In the first case, each product data file can be downloaded separately with an own 
TAN. The second case offers to download a compressed data file, e.g. with zip. Some 
clients can use the second variant as an accounting mechanism for an ordered 
shopping cart. The third case offers both possibilities for a user. 
The tag “offerDuration” contains a valid timeframe for that offer.  Orders can be 
processed under curtain circumstances, which must be declared in a contract object, 
which is described in 5.2.2.2. The calculation object has the abilities to calculate a 
result. 

3.2.1.2 XCPF Object “contractInformation” 
 
Trade needs agreed rules, which are defined here as contract information. The contact 
information of the supplier is transparent. The customer’s contact information needs to 
be added for a valid WPOS “OrderProduct” request. The customer object contains the 
same entries as for the supplier, but may use more address objects for delivery and 
accounting. 
 

 31



 

Figure 13 XCPF object “contactInformation” 

3.2.1.3 XCPF Object “Calculation” 
 
A “calculation” object contains all engine-readable information to determine a price 
with a user input for the configuration. This object is used in a “product” and in a 
“productGroup” environment. Because of rebates, taxes or other pricing mechanisms, 
pricing models can be adjusted with a formula on each hierarchical step of the pricing 
catalogue. 
 

Figure 14 XCPF object “calculation” 

All parameters need to be declared prior calculation. The front-office input and output 
workflows can be determined by using categories. Some parameters are necessary for 
the processing, but are constant, e.g. tax. These parameters can be declared as 
"predefined". Other parameter values need to be set first by user. These parameters 
are called “configurationParameters”. All these parameters will be visualized in a WPOS 
client. Some of these may be used for pricing, e.g. Contract time, other may be used 
for data generation, e.g. style=red and some for both, e.g. data format= dxf. 
Referenced parameters can only be used in “productGroup” environments, because 
they are needed for hierarchical calculations, where parameter values of previous 
calculated values can be accessed. An often used example is the sum, where in 
previous prices are summarized. 
The “precalculated” parameters are being used to store the results of sub functions. 
These functions may be mathematical operations or XCPF Web Service Calls (XCPF-
WSC) and have only values at runtime.  The XCPF-WSC are useful for access to mass 
storage, for complex calculations or for actual data. They are results of functions.  
An often-used example is the calculation of a surface of a polygon. The mandatory 
“resultParameter” contains the parameter for the final result of all calculations. The 

 32



 

parameter object is described at 3.9.  All parameters may be used in “functions”. A 
function has output and input parameter and delivers a result value. The possible 
operation types are described in the next paragraph.  
 

3.2.1.4 XCPF Object “parameter” 
The parameter object is the basic element for each calculation. Each parameter has a 
logical name and for language reasons, several different descriptions. These 
descriptions may use white spaces and can contain sentences. Typically some 
parameters may be used as groups for some reasons. Equal strings in the 
“variableGroup” field will express the group relationship. The same parameter may 
belong to more groups, e.g. for "pricing" and for generation "geoserver". An example 
is the use of a set of parameters for data generation. All parameters should contain in 
the “variableGroup” the same string, e.g. "geoserver". All the parameters with the 
same string may be filtered and transferred to geo data generation server. 
 

Figure 15 XCPF “object parameter” 

NOTE: “Variable Origin” will only be used in "referencedParameters" objects. The 
required attribute "orginName" contains the original name of a low hierarchical 
parameter. Referenced parameter can be used in to ways as 

• Multiple references with lists of parameter values  
• Single references 

An often used multiple examples are the price calculation, which refer to the list of all 
previous results. Multiple references need a "*" as a wildcard to access all parameter 
values with the same name, not depending on product entries. 

 33



 

3.2.1.5 XCPF Object “operation” 
There are two possible operations to achieve results with a list of output and input 
parameters: mathematical formulae and external XCPF Web Service Call (XCPF WSC). 
 

Figure 16 XCPF object operation 

 
 

 34



 

The mathematical formulae is encoded by using a subset of the Mathematical Mark-up 
Language (MathML) definition, recommended by the WWW-Consortium (W3C). This 
standard is suitable to encode mathematical formula in XML. It offers more than 50 
mathematical operations. XCPF uses only basic operations, like plus, minus, min and 
other (See figure 16).  The program 1 and 2 gives an example of the formula encoding 
with MathML. 

Program 1 price = pricePerSquareKilometer * surface 

<math> 
  <apply> 
    <eq/> 
      <ci>price</ci> 
        <apply> 
         <times/> 
          <ci>pricePerSquareKilometer</ci> 
          <ci>surface</ci> 
        </apply> 
  </apply> 
</math> 

Program 2 Encoding of formulae with MathML 

The other possible operation is a XCPF Web Service Call. The element 
“OnlineResource” contains an absolute URL to a web service for external processing. 

3.2.1.6 XCPF Object “productGroup” 
With the use of these elements, “product” objects can be arranged. It contains most 
sub elements like the “product”. But it can contain an “inheritance” object and one or 
more “product” objects. “ProductGroup” can be containing one or more other 
“productGroup” objects. 

 35



 

 

Figure 17 XCPF Object “productGroup” 

3.2.1.7 XCPF Object “Inheritance” 
The inheritance method provides a very powerful and useful optimisation mechanism 
for large data entries. It may contain most repeated XCPF elements for inheritance, e.g. 
contract information and calculation blocks. Inheritance can be overwritten in following 
“productGroups” or “products”. 
 

Figure 18 XCPF object “inheritance” 

 36



 

3.2.1.8 Main structure axes 
 
The main axes in XCPF are “xcpfEnvelope”, “xcpfCatalog”, multiple “productGroup” 
objects and finally products. 
 
 

Figure 19 XCPF main axis 

 

 37



 

3.2.2 Applied Functionality: Web Pricing & Ordering Service (WPOS) 
 

The WPOS has six methods to process a complete pricing, ordering and delivery workflow 
for digital geo-data products. These products are defined as service requests, which may be 
created in specialized clients, and additional configuration parameters. Some requests are 
designed to be repeated several times like the GetPrice request. The results may be stored 
in the WPOS client in a session. The famous “shopping cart” is a good example.  
The workflow of a Geo-eBusiness application corresponds to the here listed request 
sequence.  
Because of the same data model, the “∆” (Delta) method principle, where each method 
adds a new differential part to the XCPF object and the complete XCPF object will be 
delivered in the response, the differential part can be encoded for HTTP GET request as 
key-value pairs or for HTTP POST request as XML objects.  

3.2.2.1 Method: GetCapabilities 
 
The OGC Basic Model request GetCapabilities delivers the WPOS client, beyond the 
standard information, a list of all available products, including a short description and 
an unique identifier, the product ID.  

3.2.2.1.1 HTTP Get Request 
The requests is designed along the OGC Basic Service Model. 
 
URL Component Required/ 

optional/ 
experimental 

Description 

http://server_address/path/script R URL prefix of service online resource. 
? R Separator between prefix and query. 
SERVICE=WPOS R Service Type 
REQUEST=GetCapabilities R Request Capabilities 
VERSION=version O Request version 
VSP =value O Vendor-specific parameters 
& R Separator between name=value pairs. 

Table 5 Standard GetCapabilities Request 

3.2.2.1.1.1 Request Example 
This requests demands the capabilities of the service WPOS: 
 

http://127.0.0.1/wpos/servlet/wpos.Controller?SERVICE=WPOS&REQUEST=getCapa
bilities 
 

Program 3 HTTP GET request for service capabilities 

 38



 

3.2.2.1.2 Response 
The response consists of the standard BSM “Service” element items and the WPOS 
specific “capability” elements. The “request” element shows the supported requests. 
The request “GetProduct” and “GetOrderList” are optional. Figure 20 shows the XML 
schema. 
 
 
 

Figure 20 Getcapabilities Response 

The element “xcpfEnvelope” contains the product list. Because of the hierarchical 
systematics of the XML complex Configuration & Pricing Format (XCPF) the product 
items can be grouped by catalogues and multiple product groups. Catalogues are 
required in the cascading case with independent data provider.  

Figure 21 Sub-Element “xcpfEnvelope” of the Getcapabilities response schema. 

The “product” element contains the unique identifier for all other methods, a title and 
an abstract element to describe the product is a short way. ISO 19115 may be used for 
the complete description and referenced by the mentioned product ID.  Figure 21 
shows the list of products and the grouping mechanism. This presentation does not 
show the product ID, because it is an attribute. 
 

 39



 

3.2.2.1.2.1 Response Example Fragment 
The XML fragment at program 3 gives an impression of the arrangement of product 
items. “productGroup” and “product” elements have an identifier and a name to 
show as an abbreviation. A title and an abstract can contain longer descriptions. 
 

  <xcpfEnvelope> 
   <xcpfCatalog> 
    <productGroup id="1000" name="Demo Productlist 1000"> 
     <product id="1005" name="Demo Product A1"> 
       <title> Demo Title of Product A1 </title> 
     </product> 
     <product id="1007" name="Demo Product B1"/> 
     <product id="1009" name="Demo Product C1"/> 
    </productGroup> 
    <productGroup id="2000" name="Demo Productlist 2000"> 
     <product id="2001" name="Demo Product A2"/> 
     <product id="2002" name="Demo Product B2"/> 
    </productGroup> 
   </xcpfCatalog> 
 </xcpfEnvelope> 

Program 4 The list of products in a XML extract of the GetCapabilities response. 

 40



 

3.2.2.2 Method: GetPriceModel 
The first method GetCapabilities gives a list of all product entries, which may be quite 
long. Products are often described in detail with the ISO 19115 standard and hosted in 
a meta-data catalog, which offers enhanced query capabilities. If the IDs in the meta-
data catalogue correspond to the IDs in the pricing & ordering catalog, a user can be 
linked directly from the search result-list of the meta-data catalogue to WPOS 
GetPriceModel request for pricing information.  

3.2.2.2.1 HTTP GET Request 
The request requires the knowledge of the identifier of a product (“productID”). It is 
possible to request multiple product pricing information with a comma separated list. 
 
URL Component Required/ 

optional/ 
experimental 

Description 

 
http://server_address/path/script 

 
R 

 
URL prefix of service online resource. 

? R Separator between prefix and query. 
REQUEST=GetPriceModel R Request Price Model 
VERSION=version R Request Version 
PRODUCTID=productid_list R Request Product Ids, separated by commas 
VSP =value O Vendor-specific parameters 
& R Separator between name=value pairs. 

Table 6 GetPriceModel Request  

3.2.2.2.1.1 Example 
 

http://127.0.0.1/wpos/servlet/wpos.Controller?REQUEST=GetPriceModel&PRODUC
TID=1513 

Program 5 Sample GetPriceModel HTTP Get request 

3.2.2.2.2 Response 
The response is an empty instance of a XCPF Object. It contains the desired “product” 
elements with contract information like provider address and licensing (See figure 22).  
 
 
 
 
 
 
 
 
 

 41



 

 

Figure 22 The important “product” element of a XCPF object in the GetPriceModel response 

Therefore, the XCPF object provides all necessary information and even the price 
formula for pricing & ordering. It could be used for multiple purposes. In the case of a 
regular WPOS workflow it contains the important list of configuration parameters. 
These parameter need to be set by the user (or an equivalent engine) to configure the 
product for pricing & ordering. Figure 23 shows the sub-elements of parameter. 
Multiple “variableValue” elements can be presented as HTML lists. Missing or single 
“variableValue” elements can be presented as HTML text input fields. Boolean types of 
parameter as HTML checkboxes. All elements are covered in detail in the XCPF 
description. 
 

 42



 

Figure 23 The configuration “parameter” element, which needs to be set by purchaser to configure the product 

3.2.2.2.2.1 Example Fragment 
The given example shows a simple parameter element with the mandatory name, the 
simple data type and the engine read-able and text-style unit. The empty 
“variableValue” element shows, that it has to be set by the user.  

 
 

<parameter name="ymin" type="real"> 
 <variableDescr lang="en">Southern Bounding</variableDescr> 
  <variableValue/> 
  <variableUnit textstyle="°"> 
   <math> 
    <apply> 
     <cn>1</cn> 
    </apply> 
   </math> 
  </variableUnit> 
</parameter> 

Program 6 Sub-element „Parameter“ with name and description  

 43



 

3.2.2.3 Method: GetPrice 
 
After setting the configuration parameters with user defined values, the GetPrice 
method is able to calculate a price.  

3.2.2.3.1 HTTP GET Request 
WPOS is designed to support the pricing & ordering of known geo-data services, e.g. 
OGC WMS and of unknown data services or in a simple case of data files. Price model 
may contain parameter, which are required  

• only for pricing, e.g. licensing time, or  
• only for geo-data server configuration, e.g. picture pixels,  
• or for both, e.g. dpi, if the price depends on the quality 

Therefore the configuration parameters can be encoded as “configparams”, as a 
“SERVICEREQUEST”, which contains the original geo-data server requests, or both. The 
parameter values need to be “escaped”. 
For multiple pricing request, the HTTP parameter “PRODUCTID”, “CONFIGPARAMS”, 
“SERVICEREQUEST” and “SERVICEPROTOCOL” can include comma separated lists. 
Three examples will help to understand these possibilities. The underlined sections are 
“escaped” strings. 
All WPOS configuration parameters will be mapped to the XCPF configuration 
parameters.  
 
URL Component Required/ 

optional/ 
experimental 

Description 

http://server_address/path/script R URL prefix of service online resource. 
? R Separator between prefix and query. 
VERSION=version R Request version 
REQUEST=GetPrice R Request Price 
PRODUCTID=productid_list R Product IDs, “escaped” Service prefix URLs are 

unique and can be therefore used as a Product ID 
CONFIGPARAMS= 
escaped(keyA&valueA, 
keyAA&valueAA), 

R Each Product ID may have some configuration 
parameters. These are “key-value pair” encoded, 
separated by commas and as string “escaped”;  

SERVICEREQUEST= 
escaped(servicerequestA), 

R Original “escaped” data service request; Multiple 
service requests are comma separated 

SERVICEPROTOCOL= 
escaped(ORGANISATION=abc& 
NAME=def&VERSION=x.x.x), 

R Description of protocol- releasing organization, -
name and –version as escaped key-value pairs;  

GENERALLICENCENO O Permit Customer Specific Pricing 
VSP=value O Vendor-specific parameters 
& R Separator between name=value pairs. 

Table 7 GetPrice Request 

3.2.2.3.1.1 Example HTTP GET Request for unknown Services 
In this simple case, the product 1513 requires the configuration parameters xmin=5.67, 
ymin=50.3,xmax=5.913, ymax=52 and the Licensetime=1 for the price formula. The 

 44



 

second product 1012 requires the other parameters and their values. 
The key value pairs are being separated with an “&” and escaped. Because of multiple 
sets of configuration parameters, the two strings are being separated by a comma. 
 

http://127.0.0.1/wpos/servlet/wpos.Controller? 
REQUEST=GetPrice&PRODUCTID=1513,1012&CONFIGPARAMS=xmin%3D5.67%26ymin%3D50.
3%26xmax%3D5.913%26ymax%3D52%26Licensetime%3D1,Pages%3D4%26Area%3D1000%26P
oints%3D3&SERVICEREQUEST=,&SERVICEPROTOCOL=, 
 

Program 7 Sample HTTP Get Request for GetPrice for multiple products of an unknown Service 

3.2.2.3.1.2 Example HTTP GET Request for known Services without additional 
Parameters 
This example shows a known Web Mapping Service request wrapped for a pricing 
request. The price can be terminated only with the geo-data request. Therefore is a 
mapping between geo service request and XCPF configparams necessary. The service 
protocol parameter is designed to support this mapping. 
 

http://127.0.0.1/wpos/servlet/wpos.Controller? 
REQUEST=GetPrice&PRODUCTID=http%3A%2F%2Fwww.mywms.org/script&CONFIGPARAMS=
&SERVICEREQUEST=VERSION%3D1.1.0%26REQUEST%3DGetMap%26LAYERS%3DStrassen%26S
TYLES%3DStandard%26SRS%3DEPSG:31466%26FORMAT%3Dimage/png%26BGCOLOR%3D0xFFF
FFF%26TRANSPARENT%3DFALSE%26WIDTH%3D514%26HEIGHT%3D426%26BBOX%3D2465148.76
44131454,5576452,2764016.1155868545,5824151.4%26EXCEPTIONS%3Dapplication/v
nd.ogc.se_xml&SERVICEPROTOCOL=ORGANISATION%3DOGC%26NAME%3DWMS%26VERSION%3D
1.1.0 
 

Program 8 Sample HTTP Get Request for GetPrice with a service request and without additional parameters 

3.2.2.3.1.3 Example HTTP GET Request for known Services with additional 
Parameters 
Pricing often depends on more than just the technical geo service request. In this case 
the configuration parameters are given with the configparams and the geo-data 
request.  
 

http://127.0.0.1/wpos/servlet/wpos.Controller? 
REQUEST=GetPrice&PRODUCTID=http%3A%2F%2Fwww.mywms.org/script&CONFIGPARAMS=
Licensetime%3D1&SERVICEREQUEST=VERSION%3D1.1.0%26REQUEST%3DGetMap%26LAYERS
%3DStrassen%26STYLES%3DStandard%26SRS%3DEPSG:31466%26FORMAT%3Dimage/png%26
BGCOLOR%3D0xFFFFFF%26TRANSPARENT%3DFALSE%26WIDTH%3D514%26HEIGHT%3D426%26BB
OX%3D2465148.7644131454,5576452,2764016.1155868545,5824151.4%26EXCEPTIONS%
3Dapplication/vnd.ogc.se_xml&SERVICEPROTOCOL=ORGANISATION%3DOGC%26NAME%3DW
MS%26VERSION%3D1.1.0 
 

Program 9 Sample HTTP Get Request for GetPrice with a service request and without additional parameters 

 45



 

3.2.2.3.2 Response 
The response is a XCPF object with the given configuration parameters and the price 
results. The XCPF object contains the basic “product” element price, all group prices 
with summation or other calculations, e.g. minimum prices or tax and the final result 
price over all selected products. 

 46



 

3.2.2.3.2.1 Example Response 
The GetPrice Request transmits all necessary configuration parameters for the 
mathematical formulae. Figure 24 shows and XCPF example. The WPOS 
implementations calculates first the basic price on product level (step 1 & 2) for all 
selected products. The following steps calculate the intermediate prices (step 3 & 4) on 
product group level and finally on catalogue level (step 5). 
 

1.) Basic Price

2.) Basic Price

3.) Group Price 

4.) Group Price

5.) Final Price

Figure 24 XCPF object filled with the calculated basic, intermediate and final prices. 

 
 

 47



 

3.2.2.4 Method: OrderProduct 
We GetPrice method may be used for some iterations. The next step in the WPOS 
workflow is ordering, which is a juristic act. The purchaser needs to publish his identity.  

3.2.2.4.1 HTTP GET Request 
To ensure the purchaser configuration and the resulting price, the OrderProduct 
method consists of the same parameter as GetPrice and additional purchaser contact 
information.  
 
URL Component Required/ 

optional/ 
experimental 

Description 

http://server_address/path/script R URL prefix of service online resource. 
? R Separator between prefix and query. 
VERSION=version R Request version 
REQUEST=OrderProduct R Orders a product 
PRODUCTID=productid_list R Product IDs, “escaped” Service prefix URLs are 

unique and can be therefore used as a Product ID 
CONFIGPARAMS= 
escaped(keyA&valueA, 
keyAA&valueAA), 

R Each Product ID may have some configuration 
parameters. These are “key-value pair” encoded, 
separated by commas and as string “escaped”;  

SERVICEREQUEST= 
escaped(servicerequestA), 

R Original “escaped” data service request; Multiple 
service requests are comma separated 

SERVICEPROTOCOL= 
escaped(ORGANISATION=abc& 
NAME=def&VERSION=x.x.x), 

R Description of protocol- releasing organization, -
name and –version as escaped key-value pairs;  

GENERALLICENCENO O Permit Customer Specific Pricing 
GENERALLICENCENO E Permit Customer Specific Pricing 
CUSTOMERID O Customerid 
DEFNAME1 R 
DEFNAME2 O 
DEFSTREET R 
DEFZIP R 
DEFCITY R 
DEFCOUNTRY  O 
DEFPHONE  O 
DEFFAX  O 
DEFEMAIL  R 
DEFURL  O 

Default contact information for accounting and 
billing. 

DELNAME1 O 
DELNAME2 O 
DELSTREET  O 
DELZIP O 
DELCITY  O 
DELCOUNTRY  O 
DELPHONE  O 
DELFAX  O 
DELEMAIL O 
DELURL  O 

Delivery contact information, if different from 
default contact information 

BILNAME1  O 
BILNAME2  O 
BILSTREET  O 
BILZIP  O 
BILCITY  O 
BILCOUNTRY  O 
BILPHONE  O 

Billing contact information, if different from default 
contact information 

 48



 

BILFAX  O 
BILEMAIL  O 
BILURL O 

 

Table 8 HTTP GET OrderProduct request 

3.2.2.4.1.1 Example 
This example was derived from the third GetPrice example. The contact information are 
attached. 
 

http://127.0.0.1/wpos/servlet/wpos.Controller? 
REQUEST=OrderProduct&PRODUCTID=http%3A%2F%2Fwww.mywms.org/script&CONFIGPAR
AMS=Licensetime%3D1&serviceRequest=VERSION%3D1.1.0%26REQUEST%3DGetMap%26LA
YERS%3DStrassen%26STYLES%3DStandard%26SRS%3DEPSG:31466%26FORMAT%3Dimage/pn
g%26BGCOLOR%3D0xFFFFFF%26TRANSPARENT%3DFALSE%26WIDTH%3D514%26HEIGHT%3D426%
26BBOX%3D2465148.7644131454,5576452,2764016.1155868545,5824151.4%26EXCEPTI
ONS%3Dapplication/vnd.ogc.se_xml&SERVICEPROTOCOL=ORGANISATION%3DOGC%26NAME
%3DWMS%26VERSION%3D1.1.0&DEFNAME1=Wagner&DEFSTREET=Emil-Figge-
Str.91&DEFZIP=44227&DEFCITY=Dortmund&DEFMAIL=w@gner.org 

Program 10 OrderProduct HTTP GET example 

3.2.2.4.2 Response 
The response is the XCPF object as from GetPrice, but with added  

• transaction number ID (TAN) 
• purchaser contact information 
• customer ID 
• status information 

The transaction number is necessary to retrieve the desired often binary geo-data in the 
next WPOS workflow step. The used location to store the transaction depends on the 
kind of delivery. If multiple product data will be integrated or compressed to a single 
delivery file, only a single transaction number is necessary for the package. This can be 
stored on catalogue level. If each sub product should be downloadable, each product 
item needs a transaction number. 
The customerID is being generated by the system or taken from former orders. With 
that abbreviation, the WPOS method GetOrderList can be invoked.  

 

 49



 

3.2.2.5 Method: GetProduct 
Some product are in a binary shape. Therefore an additional delivery method is 
necessary and reasonable. The OrderProduct responses returns in the XCPF object one 
or more transaction-numbers (TANs). With that TAN, the download of the online 
product can be invoked.  

3.2.2.5.1 HTTP GET Request 
 
 
URL Component Required/ 

optional/ 
experimental 

Description 

http://server_address/path/script R URL prefix of service online resource. 
? R Separator between prefix and query. 
VERSION=version R Request version 
REQUEST=GetProduct R Request Product 
TAN=tan R Request Transaction number  
VSP =value O Vendor-specific parameters 
& R Separator between name=value pairs. 

Table 9 HTTP Get Request 

3.2.2.5.1.1 Request example 
 

http://127.0.0.1/wpos/servlet/wpos.Controller?/wpos/servlet/ 
wpos.Controller?REQUEST=GetProduct&TAN=1616121821270866532 
  

Program 11 HTTP GET GetProduct Example 

3.2.2.5.2 Response 
The response contains the desired product file. In the case of a compressed file, the 
mime type has to be set. 

 50



 

3.2.2.6 Method: GetOrderList 
 
This optional requests delivery a valid XCPF object with all actual processed order items. 
It can be used to gather status information, e.g. if a product is generated and ready for 
download. 

3.2.2.6.1 Request 
 
URL Component Required/ 

optional/ 
experimental 

Description 

http://server_address/path/script R URL prefix of service online resource. 
? R Separator between prefix and query. 
REQUEST=GetOrderList R Request Product 
CUSTOMERID= R The customer ID, which was given in OrderProduct 

 

3.2.2.6.1.1 Example 
 
http://127.0.0.1/wpos/servlet/wpos.Controller?REQUEST=GetOrderList&CUSTOME
RID=1417547921113908382 

 

Program 12 HTTP GET request example of GetOrderList 

 

 
 
 
 

 51





 

3.3 General XCPF 1.0.0-v6 elements 

3.3.1 element abstract 
Diagram  

Type xs:string 
used by complexTypes  inheritanceType productGroupType productType  
Annotation documentation  Abstracts may be used to give some more background information about the productGroup or the 

product. Complete product description may be made in an ISO19115 description and referenced by a 
productId.  

 

3.3.2 element address 
Diagram  

Type addressType 
Children name name2 contact street zip city country phone fax email url 
used by elements  contractInformationType/customer contractInformationType/supplier  
Attributes Name   Type   Use   Default   Fixed   

role   xs:NMTOKEN   required         
type   xs:NMTOKEN             

Annotation documentation  Contact information, 
In the case of a customer use, there might be more entries.  

 53



 

 
 

3.3.3 element contractInformation 
diagram  

type contractInformationType 
children supplier customer licensing 
used by complexTypes  inheritanceType productType  
annotation documentation  Orders can be processed under curtain circumstances, which 

must be declared in a contract.   
 
 
 

3.3.4 element calculation 
diagram  

type calculationType 
children declarationList formulae 
used by elements  xcpfEnvelope/xcpfCatalog xcpfEnvelope 

complexTypes  inheritanceType productGroupType productType  
annotation documentation  Because of rebates, taxes or other pricing mechanisms, pricing models may be adjusted with a formula 

on each hierarchical step of the pricing catalog; At least, a simple sum formula must be calculated  
 

3.3.5 element inheritance 
diagram  

 54



 

type inheritanceType 
children title abstract contractInformation calculation 
used by element  xcpfEnvelope/xcpfCatalog 

complexType  productGroupType  
annotation documentation  The inheritance method provides a very powerful and useful optimisation for large data entries. It may 

contain most repeated XCPF elements for inheritance, e.g. contract information and calculation blocks. 
Inheritance can be overwritten in following productGroups or products  

3.3.6 element offerDuration 
diagram  

type xs:string 
used by complexTypes  productGroupType productType  
annotation documentation  Valid timeframe for that offer.  

 
 

3.3.7 element parameter 
diagram  

type parameterType 
children variableDescr variableGroup variableOrigin variableValue variableUnit 
used by elements  calculationType/declarationList/configurationParameters 

calculationType/declarationList/precalculatedParameters 
calculationType/declarationList/predefinedParameters 
calculationType/declarationList/referencedParameters 
calculationType/declarationList/resultParameters  

attributes Name   Type   Use   Default   Fixed   
name   xs:string   required         
type   xs:NMTOKEN   required          

annotation documentation  The parameter object is the basic element for the calculation  

 55



 

 
 

3.3.8 element parameterName 
diagram  

type xs:string 
used by elements  calculationType/formulae/function/inParameterList 

calculationType/formulae/function/outParameterList  
annotation documentation  All used parameter need to be declared in the declaration List block. Therefore they do not be 

completley redeclared by calling a function, but only be named.  
 

3.3.9 element productStatus 
diagram  

type productStatusType 
children statusInfo 
used by element  productStatusListType/statusHistory 

complexType  productStatusListType  
attributes Name   Type   Use   Default   Fixed   

date   xs:string   required         
time   xs:string   required         
statusCode   xs:NMTOKEN   required          

annotation documentation  Current status with time, date and statuscode attributes. The status changes when a WPOS operation is 
processed  

 
 

3.3.10 element productStatusList 
diagram  

type productStatusListType 
children productStatus statusHistory 
used by element  xcpfEnvelope/xcpfCatalog 

complexTypes  productGroupType productType  
annotation documentation  The Web Pricing &amp; Ordering Service uses an instance of the XCPF pricing model to store order 

process information into this status list.   

 56



 

 
 
 
 

3.3.11 element title 
diagram  

type xs:string 
used by complexTypes  inheritanceType productGroupType productType  
annotation documentation  Each productGroup may have a title, but each product must have a title.  

 
 

3.3.12 element transactionNumber 
diagram  

type xs:string 
used by element  xcpfEnvelope/xcpfCatalog 

complexTypes  productGroupType productType  
annotation documentation  This number acts as an ID within processing steps. A transactionNumber may target to a productGroup, 

if a processing groups all "product" data files into one, e.g. zip compression, or in a "product", if each 
packet will be delivered separately. 
 
The WPOS "orderProduct" sets a transactionNumber in a XCPF instance and sends it to the client, who 
will request a data product file with the WPOS request "getProduct" and this transaction number.  

3.3.13 complexType inheritanceType 
diagram  

children title abstract contractInformation calculation 
used by element  inheritance  
 
 

3.3.14 complexType mathType 
diagram  

children apply 
used by element  math  
 

 57



 

 
 
 

3.3.15 complexType productType 
diagram  

children productStatusList title abstract transactionNumber offerDuration contractInformation calculation 
used by element  productGroupType/product  
attributes Name   Type   Use   Default   Fixed   

id   xs:string   required         
name   xs:string             

 
 

3.3.16 simpleType xlink:actuateEnum 
namespace http://www.w3.org/1999/xlink 
type restriction of xs:string 
facets enumeration  onLoad 

enumeration  onRequest 
enumeration  other 
enumeration  none  

 
 

3.3.17 simpleType xlink:showEnum 
namespace http://www.w3.org/1999/xlink 
type restriction of xs:string 
facets enumeration  new 

enumeration  replace 
enumeration  embed 
enumeration  other 
enumeration  none  

 
 

3.3.18 simpleType xlink:typeEnum 
namespace http://www.w3.org/1999/xlink 

 58



 

type restriction of xs:string 
facets enumeration  umeration  simple simple 

enumeration  enumeration  extended extended 
enumeration  enumeration  locator locator 
enumeration  enumeration  arc arc 
enumeration  enumeration  resource resource 
enumeration  enumeration  title title   

 

 

3.4 MathML elements 

3.4.1 element math 
diagram  

type mathType 
children apply 
used by elements  calculationType/formulae/function/operation parameterType/variableUnit  
annotation documentation  MathML block, within this block a subset of MathML is being used. More at http://www.w3c.org/math  

 59



 

 

3.4.2 complexType applyType 
diagram  

children apply ci cn piecewise max min eq lt gt plus minus sin cos tan power times divide sum bvar 
used by elements  apply piecewise/otherwise/apply  
 
 

 60



 

3.4.3 element applyType/bvar 
diagram  

type xs:string 
annotation documentation  MathML: bounding variable, used by "sum" operation  

3.4.4 element apply 
Diagram  

type applyType 

 61



 

children apply ci cn piecewise max min eq lt gt plus minus sin cos tan power times divide sum bvar 
used by element  piecewise/piece 

complexTypes  applyType mathType  
annotation documentation  MathML: Acts like a mathematical bracket  

3.4.5 element ci 
diagram  

type xs:string 
used by elements  piecewise/otherwise piecewise/otherwise piecewise/piece piecewise/piece 

complexType  applyType  
annotation documentation  MathML: Textfield for identifier, e.g. "price"  

 
 

3.4.6 element cn 
diagram  

type xs:string 
used by Elements  piecewise/otherwise piecewise/otherwise piecewise/piece piecewise/piece 

complexType  applyType  
annotation documentation  MathML: Textfield for a number, e.g. 2.2345  

 
 
 

3.4.7 element cos 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Cosinus operator  

 
 

3.4.8 element divide 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Division operator  

 
 

3.4.9 element eq 
diagram  

used by complexType  applyType  

 62



 

annotation documentation  MathML: Equal operator  
 
 

3.4.10 element gt 
diagram  

used by element  piecewise/piece 
complexType  applyType  

annotation documentation  MathML: "bigger than" operator  
 
 
 

3.4.11 element lt 
diagram  

used by element  piecewise/piece 
complexType  applyType  

annotation documentation  MathML: "Smaller then" operator  
 
 
 

3.4.12 element max 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Maximum operator  

 
 

3.4.13 element min 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Minimun operator  

 
 

3.4.14 element minus 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Minus operator  

 63



 

 

3.4.15 element plus 
diagram  

used by element  piecewise/piece 
complexType  applyType  

annotation documentation  MathML: Plus operator  
 
 

3.4.16 element power 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Power operator  

 

3.4.17 element sin 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Sinus operator  

 
 

3.4.18 element sum 
diagram  

type xs:string 
used by complexType  applyType  
annotation documentation  MathML: Sumeration operator  

 
 

3.4.19 element tan 
diagram  

used by complexType  applyType  
annotation documentation  MathML: Tangence operator  

 64



 

 
 

3.4.20 element times 
diagram  

used by elements  piecewise/otherwise piecewise/piece 
complexType  applyType  

annotation documentation  MathML: Times operator  
 
 

3.4.21 element piecewise 
Diagram  

children piece otherwise 
used by complexType  applyType  
annotation documentation  MathML: mathematical "if..then" operator, example: 

<piecewise> 
 <piece> 
  <apply> 
   <times/> 
   <cn>15.34</cn> 
   <ci>Punktanzahl</ci> 
  </apply> 
  <apply> 
   <lt/> 
   <ci>Punktanzahl</ci> 
   <cn>2</cn> 
  </apply> 
 </piece> 
 <otherwise> 
  <apply> 
   <plus/> 
   <apply> 
    <times/> 
    <cn>15.34</cn> 
    <ci>Punktanzahl</ci> 
   </apply> 
   <apply> 
    <times/> 
    <cn>10.23</cn> 
    <apply> 
     <minus/> 
     <ci>Punktanzahl</ci> 
     <cn>1</cn> 
    </apply> 
   </apply> 
  </apply> 
 </otherwise> 
</piecewise>  

 65



 

 
 

3.4.22 element piecewise/piece 
Diagram  

Children plus times cn ci apply gt lt 

 66



 

 
 

3.4.23 element piecewise/otherwise 
Diagram  

Children cn ci apply times 

 67



 

 
 

3.4.24 element piecewise/otherwise/apply 
diagram  

type applyType 
children apply ci cn piecewise max min eq lt gt plus minus sin cos tan power times divide sum bvar 

 

 68



 

 
 

3.5 element xcpfEnvelope 
diagram  

children calculation xcpfCatalog 
attributes Name   Type   Use   Default   Fixed   

id   xs:string   required         
name   xs:string             

annotation documentation  Envelope for multiple catalogs, e.g. cascading  
 
 

3.5.1 element xcpfEnvelope/xcpfCatalog 
diagram  

children productStatusList generatorInfo xcpfVer transactionNumber inheritance calculation productGroup 
attributes Name   Type   Use   Default   Fixed   

id   xs:string   required         
name   xs:string             

annotation documentation  Each supplier may have an own pricing catalog, wherein most standard entries may be inherited, e.g. 
contact address or licensing information  

 
 

3.5.2 element xcpfEnvelope/xcpfCatalog/generatorInfo 
diagram  

type xs:string 
annotation documentation  The editor or other information may be written down in this textfield  

 69



 

 
 

3.5.3 element xcpfEnvelope/xcpfCatalog/xcpfVer 
diagram  

type xs:string 
annotation documentation  Contains the used version of the XML complex Configuration &amp; Pricing Format  

 

3.6 complexType addressType 
diagram  

children name name2 contact street zip city country phone fax email url 
used by element  address  
attributes Name   Type   Use   Default   Fixed   

role   xs:NMTOKEN   required         
type   xs:NMTOKEN             

 
 

3.6.1 element addressType/name 

 70

diagram  

type xs:string 
annotation documentation  Name of person or institution.  



 

 
 

3.6.2 element addressType/name2 
diagram  

type xs:string 
annotation documentation  Space for additional names.  

 
 

3.6.3 element addressType/contact 
diagram  

type xs:string 
annotation documentation  This field may be use for personal names in institutions.  

 
 

3.6.4 element addressType/street 
diagram  

type xs:string 
 
 

3.6.5 element addressType/zip 
diagram  

type xs:string 

 
 

3.6.6 element addressType/city 
diagram  

type xs:string 
 
 

3.6.7 element addressType/country 
diagram  

type xs:string 
 
 

 71



 

3.6.8 element addressType/phone 
diagram  

type xs:string 
 
 

3.6.9 element addressType/fax 
diagram  

type xs:string 
 
 

3.6.10 element addressType/email 
diagram  

type xs:string 
 
 

3.6.11 element addressType/url 
diagram  

type xs:string 
 
 
 

3.7 complexType calculationType 
diagram  

children declarationList formulae 
used by element  calculation  
 
 

 72



 

3.7.1 element calculationType/declarationList 
diagram  

children predefinedParameters configurationParameters referencedParametersedParameters precalculatedParameters 
resultParameters 

annotation documentation  Parameter need to be declared prior processing.  The input and output workflows can be determined by 
using categories.  

 
 

3.7.2 element calculationType/declarationList/predefinedParameters 
diagram  

children parameter 
annotation documentation  Some parameters are necessary for the processing, but are constant, e.g. tax. These parameter can be 

declared as "predefined".  
 
 

3.7.3 element calculationType/declarationList/configurationParameters 
diagram  

children parameter 
annotation documentation  Other parameter values need to be set by user. All these parameters will be visualized. Some of these 

may be used for pricing, e.g. Contract time, other may be used for data generation, e.g. style=red and 
some for both, e.g. data format= dxf.  

 
 

3.7.4 element calculationType/declarationList/referencedParameters 

 73

diagram  

children parameter 
annotation documentation  NOTE: Only used in productGroup!  

 
This parameter group is needed for hierarchical calculations, where parameter values of previous 
calculated values can be accessed.  
 
An often used example is the sum, where in previous prices are summarized.  



 

 
 

3.7.5 element calculationType/declarationList/precalculatedParameters 
diagram  

children parameter 
annotation documentation  This kind of parameter are being used as sub functions. These functions may be mathematical 

operations or XCPF Web Service Calls (XCPF-WSC) and have only values at runtime.  
The XCPF-WSC are useful for access to mass storage, for complex calculations or for actual data. 
They are results of functions.  
 
An often used example is the calculation of a surface of a polygon.  

 
 

3.7.6 element calculationType/declarationList/resultParameters 
diagram  

children parameter 
annotation documentation  This textfield contains the parameter for the final result of all calculations. 

 
An example is: price  

 
 

3.7.7 element calculationType/formulae 
diagram  

children function 
annotation documentation  All declared parameters may be processed by formulae in this block  
 
 
element calculationType/formulae/function 
diagram  

children outParameterList inParameterList operation 
attributes Name   Type   Use   Default   Fixed   

name   xs:string             
annotation documentation  The calculations may use several sub function or XPCF web Service Calls (XCPF-WSC) and a main 

function, which result need to be mapped to a parameter declared in the "resultParameters" block  
 
 

 74



 

3.7.8 element calculationType/formulae/function/outParameterList 
diagram  

children parameterName 
annotation documentation  This list contains all parameters, which will be used in the formula or in the Web Service Call  
 
 

3.7.9 element calculationType/formulae/function/inParameterList 
diagram  

children parameterName 
annotation documentation  This list contains the returned parameters, which are the results  
 
 

3.7.10 element calculationType/formulae/function/operation 
diagram  

children math DCPType 
annotation documentation  The operation Block contains a: 

-mathematical forumula or a 
-XCPF Web Service Call Url  

 
 

3.7.11 element calculationType/formulae/function/operation/DCPType 
diagram  

children HTTP 
annotation documentation  XCPF Web Service Call for external processing  
 
 

3.7.12 element calculationType/formulae/function/operation/DCPType/HTTP 
diagram  

children Get 
 
 
 
 
 

 75



 

3.7.13 element calculationType/formulae/function/operation/DCPType/HTTP/Get 
diagram  

children OnlineResource 
annotation documentation  HTTP Get Method  
 
 

3.7.14 element 
calculationType/formulae/function/operation/DCPType/HTTP/Get/OnlineResourc
e 

diagram  

attributes Name   Type   Use   Default   Fixed   
xlink:type   xlink:typeEnum         simple   
xlink:href   anyURI   required          

annotation documentation  URL, e.g. http://www.geo-ebusiness.de  
 
 

3.8 complexType contractInformationType 
diagram  

children supplier customer licensing 
used by element  contractInformation  
 
 

3.8.1 element contractInformationType/supplier 
diagram  

children supplierId supplierName address 
annotation documentation  The party who is offering data products must be public.  
 
 

3.8.2 element contractInformationType/supplier/supplierId 
diagram  

type xs:string 

 76



 

annotation documentation  This ID may help to process orders and can help in a distributed environment an in the case of different 
spelling of names and addresses.  

 
 

3.8.3 element contractInformationType/supplier/supplierName 
diagram  

type xs:string 
annotation documentation  Short name of the data supplier.  
 
 

3.8.4 element contractInformationType/customer 
diagram  

children customerId customerName address 
annotation documentation  In opposite to the supplier, the customer may be anonymous until he orders with the WPOS method 

"orderproduct".  
 
 

3.8.5 element contractInformationType/customer/customerId 
diagram  

type xs:string 
annotation documentation  Even customer must have an account ID. This is necessary to link the stack of orders to a customer.  
 
 

3.8.6 element contractInformationType/customer/customerName 
diagram  

type xs:string 
annotation documentation  Short name of customer.  
 
 

 77



 

3.8.7 element contractInformationType/licensing 
diagram  

children rightsOfUse copyright devolution duties warrantynty generalProvisions jurisdiction 
attributes Name   Type   Use   Default   Fixed   

licensingCat   xs:string   required          
annotation documentation  Each licensing entry must have an ID. In future, this ID may stand for a special group of licensing, which 

may be processed automatically.  
 
 

3.8.8 element contractInformationType/licensing/rightsOfUse 
diagram  

type xs:string 
annotation documentation  Licensing term  
 
 

3.8.9 element contractInformationType/licensing/copyright 
diagram  

type xs:string 
 
 

3.8.10 element contractInformationType/licensing/devolution 
diagram  

type xs:string 
 
 

3.8.11 element contractInformationType/licensing/duties 
diagram  

 78



 

type xs:string 
 
 

3.8.12 element contractInformationType/licensing/warranty 
diagram  

type xs:string 
 
 

3.8.13 element contractInformationType/licensing/generalProvisions 
diagram  

type xs:string 
 
 

3.8.14 element contractInformationType/licensing/jurisdiction 
diagram  

type xs:string 
 
 
 

3.9 complexType parameterType 
diagram  

children variableDescr variableGroup variableOrigin variableValue variableUnit 
used by element  parameter  
attributes Name   Type   Use   Default   Fixed   

name   xs:string   required         
type   xs:NMTOKEN   required          

 
 

 79



 

3.9.1 element parameterType/variableDescr 
diagram  

type extension of xs:string 
attributes Name   Type   Use   Default   Fixed   

lang   xs:string   required          
annotation documentation  Each parameter has a logical name. But at least for language reasons several different descriptions are 

useful. These descriptions may use white spaces and can contain sentences.  
 
 

3.9.2 element parameterType/variableGroup 
diagram  

type xs:string 
annotation documentation  Typical some parameters may be used for some reasons as groups. The group relationship will be 

expressed by equal strings in the variableGroup field. 
Parameter may belong to more groups, e.g. for "pricing" and for generation "geoserver". 
 
An example is the use of a set of parameters for data generation. These parameters should contain a 
string, e.g. "geoserver". All the parameters with that string may be filtered and transferred to geo data 
generation server.  

 
 

3.9.3 element parameterType/variableOrigin 
diagram  

children originId 
attributes Name   Type   Use   Default   Fixed   

originName   xs:string   required          
annotation documentation  NOTE: Variable Origin will only be used in "referencedParameters" blocks. The required attribute 

"orginName" contains the original name of a low hierarchical parameter. 
 
Referenced parameter can be used in to ways: 
-Multiple Reference with lists of parameter values 
-Single Reference 
 
An often used multiple example is the price calculation, which refer to the list of all previous results.  

3.9.4 element parameterType/variableOrigin/originId 
diagram  

type xs:string 
annotation documentation  Multiple references need a "*" as a wildcard for all parameter values with the in variable Origin used 

names, not depending on product entries  
 
 

 80



 

3.9.5 element parameterType/variableValue 
diagram  

type extension of xs:string 
attributes Name   Type   Use   Default   Fixed   

condition   xs:string            
selected   xs:string             

annotation documentation  The need for a value is depending on the parametergroup of the declarationList: 
-predefinedParameters must a value, because they are constant 
-configurationParameters may have a value as a default 
-referencedParameters do not have a value 
-calcuationParameters do not have a value 
-resultParameters do not have a value  

 
 

3.9.6 element parameterType/variableUnit 
diagram  

children math 
attributes Name   Type   Use   Default   Fixed   

textstyle   xs:string   required          
annotation documentation  Units are important for a correct calcuation. Therefore they have to be set in an engine processable way 

with MathML. But it might be neutral with a "1". They attribute textstyle should be used for string 
expressions, which may easly displayed. An example is: km^2  

 
 

3.10 complexType productGroupType 
diagram  

children productStatusList title abstract transactionNumber offerDuration inheritance calculation product productGroup 
used by element  productGroup  

 81



 

attributes Name   Type   Use   Default   Fixed   
id   xs:string   required         
name   xs:string             

 

3.10.1 element productGroup 
Diagram  

type productGroupType 
children productStatusList title abstract transactionNumber offerDuration inheritance calculation product productGroup 
used by element  xcpfEnvelope/xcpfCatalog 

complexType  productGroupType  
attributes Name   Type   Use   Default   Fixed   

id   xs:string   required         
name   xs:string             

annotation documentation documentation  With the use of productGroup elements, pricing catalog can be arranged. With the use 
of productGroup elements, pricing catalog can be arranged.   

 
 

 

 82



 

3.10.2 element productGroupType/product 
diagram  

type productType 
children productStatusList title abstract transactionNumber offerDuration contractInformation calculation 
attributes Name   Type   Use   Default   Fixed   

id   xs:string   required         
name   xs:string             

annotation documentation  Important structure of the smallest unit, which has a complete calculation environment. 
The product block corresponds directly to data product and to its metadata  

 
 

3.11 complexType productStatusListType 
diagram  

children productStatus statusHistory 
used by element  productStatusList  
 
 

3.11.1 element productStatusListType/statusHistory 
diagram  

children productStatus 
 
 

3.11.2 complexType productStatusType 
diagram  

 

 83



 

children statusInfo 
used by element  productStatus  
attributes Name   Type   Use   Default   Fixed   

date   xs:string   required         
time   xs:string   required         
statusCode   xs:NMTOKEN   required          

 
 

3.11.3 element productStatusType/statusInfo 
diagram  

type xs:string 
annotation documentation  Textual information about a status.  
 
 

 84



 

4 Examples Series 
 

4.1 WPOS with Unknown Service Request 

4.1.1 HTTP GET Request GetCapabilities 
 
Service=WPOS&Request=getCapabilities 

4.1.2 GetCapabilities Response  
 

<?xml version="1.0" encoding="UTF-8"?> 
<WPOS_Capabilities version="0.2.0" updateSequence="0"> 
 <Service> 
  <Name>WPOS</Name> 
  <Title>Web Pricing and Ordering Service</Title> 
  <Abstract>Service for the configuration, pricing and ordering of geo products</Abstract> 
  <KeywordList> 
   <Keyword>price</Keyword> 
   <Keyword>pricing</Keyword> 
   <Keyword>order</Keyword> 
  </KeywordList> 
  <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" xlink:href="http://www.geo-
ebusiness.de"/> 
  <ContactInformation> 
   <ContactPersonPrimary> 
    <ContactPerson>Roland Wagner</ContactPerson> 
    <ContactOrganization>Fraunhofer ISST</ContactOrganization> 
   </ContactPersonPrimary> 
   <ContactPosition>Scientific Assistant</ContactPosition> 
   <ContactAddress> 
    <AddressType>postal</AddressType> 
    <Address>Fraunhofer ISST Emil-Figge-Str. 91</Address> 
    <City>Dortmund</City> 
    <StateOrProvince>NRW</StateOrProvince> 
    <PostCode>44227</PostCode> 
    <Country>Germany</Country> 
   </ContactAddress> 
   <ContactVoiceTelephone>+49 231 97 677 310</ContactVoiceTelephone> 
   <ContactFacsimileTelephone>+49 231 97677 198 </ContactFacsimileTelephone> 
   <ContactElectronicMailAddress>Roland.Wagner@isst.fhg.de</ContactElectronicMailAddress> 
  </ContactInformation> 
  <Fees>none</Fees> 
  <AccessConstraints>Yes</AccessConstraints> 
 </Service> 
 <Capability> 
  <Request> 
   <GetCapabilities> 
    <Format>only text</Format> 
    <DCPType> 
     <HTTP> 
      <Get> 
       <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://127.0.0.1:8761/wpos/servlet/wpos.Controller?"/> 

 85



 

      </Get> 
     </HTTP> 
    </DCPType> 
   </GetCapabilities> 
   <GetPricingModel> 
    <Format>only text</Format> 
    <DCPType> 
     <HTTP> 
      <Get> 
       <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://127.0.0.1:8761/wpos/servlet/wpos.Controller?"/> 
      </Get> 
     </HTTP> 
    </DCPType> 
   </GetPricingModel> 
   <GetPrice> 
    <Format>only text</Format> 
    <DCPType> 
     <HTTP> 
      <Get> 
       <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://127.0.0.1:8761/wpos/servlet/wpos.Controller?"/> 
      </Get> 
     </HTTP> 
    </DCPType> 
   </GetPrice> 
   <OrderProduct> 
    <Format>only text</Format> 
    <DCPType> 
     <HTTP> 
      <Get> 
       <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://127.0.0.1:8761/wpos/servlet/wpos.Controller?"/> 
      </Get> 
     </HTTP> 
    </DCPType> 
   </OrderProduct> 
   <GetProduct> 
    <DCPType> 
     <HTTP> 
      <Get> 
       <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://127.0.0.1:8761/wpos/servlet/wpos.Controller?"/> 
      </Get> 
     </HTTP> 
    </DCPType> 
   </GetProduct> 
   <GetOrderList> 
    <DCPType> 
     <HTTP> 
      <Get> 
       <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://127.0.0.1:8761/wpos/servlet/wpos.Controller?"/> 
      </Get> 
     </HTTP> 
    </DCPType> 
   </GetOrderList> 
  </Request> 
  <Exception> 
   <Format>application/vnd.ogc.se_xml</Format> 
  </Exception> 
  <productGroup id="LVermA Brandenburg" name="Leistungs- und Entgeltverzeichnis von  LGB 
(Landesvermessung und Geobasisinformation Brandenburg)"> 

 86



 

   <productGroup id="1" name=""> 
    <product id="1513" name="Demodata A"/> 
    <product id="1012" name="Demodata B"/> 
   </productGroup> 
   <productGroup id="2" name=""> 
    <product id="505" name="Demodata C"/> 
   </productGroup> 
  </productGroup> 
  <VendorSpecificCapabilities/> 
 </Capability> 
</WPOS_Capabilities> 
 

 

4.1.3 HTTP GET GetPriceModel Request 
 
REQUEST=GetPriceModel&PRODUCTID=1513,1012 

4.1.4 GetPriceModel Response XCPF 
<?xml version="1.0" encoding="UTF-8"?> 
<!-- edited with XML Spy v4.1 U (http://www.xmlspy.com) by Hr. Wagner (Fraunhofer Institut Software u. Systemtechnik) --
> 
<xcpfEnvelope id="de.lverma-bbEnvelope"> 
 <calculation> 
  <declarationList> 
   <referencedParameters> 
    <parameter name="singlePrice" type="real"> 
     <variableDescr lang="de">Preis</variableDescr> 
     <variableOrigin originName="price"> 
      <originId>*</originId> 
     </variableOrigin> 
     <variableValue>2</variableValue> 
     <variableUnit textstyle="Euro"> 
      <math> 
       <apply> 
        <ci>Euro</ci> 
       </apply> 
      </math> 
     </variableUnit> 
    </parameter> 
   </referencedParameters> 
   <resultParameters> 
    <parameter name="price" type="real"> 
     <variableDescr lang="de"> Preis </variableDescr> 
     <variableValue/> 
     <variableUnit textstyle="Euro"> 
      <math> 
       <apply> 
        <ci>Euro</ci> 
       </apply> 
      </math> 
     </variableUnit> 
    </parameter> 
   </resultParameters> 
  </declarationList> 
  <formulae> 
   <function name="Gesamtsumme"> 
    <outParameterList> 
     <parameterName>singlePrice</parameterName> 

 87



 

    </outParameterList> 
    <inParameterList> 
     <parameterName>price</parameterName> 
    </inParameterList> 
    <operation> 
     <math> 
      <apply> 
       <eq/> 
       <ci>price</ci> 
       <apply> 
        <sum/> 
        <bvar>singlePrice</bvar> 
        <ci>singlePrice</ci> 
        <!--ci>singlePrice</ci--> 
       </apply> 
      </apply> 
     </math> 
    </operation> 
   </function> 
  </formulae> 
 </calculation> 
 <xcpfCatalog id="de.lverma-bbCatalog"> 
  <calculation> 
   <declarationList> 
    <referencedParameters> 
     <parameter name="singlePrice" type="real"> 
      <variableDescr lang="de">Preis</variableDescr> 
      <variableOrigin originName="price"> 
       <originId>*</originId> 
      </variableOrigin> 
      <variableValue>2</variableValue> 
      <variableUnit textstyle="Euro"> 
       <math> 
        <apply> 
         <ci>Euro</ci> 
        </apply> 
       </math> 
      </variableUnit> 
     </parameter> 
    </referencedParameters> 
    <resultParameters> 
     <parameter name="price" type="real"> 
      <variableDescr lang="de"> Preis </variableDescr> 
      <variableValue/> 
      <variableUnit textstyle="Euro"> 
       <math> 
        <apply> 
         <ci>Euro</ci> 
        </apply> 
       </math> 
      </variableUnit> 
     </parameter> 
    </resultParameters> 
   </declarationList> 
   <formulae> 
    <function name="Gesamtsumme"> 
     <outParameterList> 
      <parameterName>singlePrice</parameterName> 
     </outParameterList> 
     <inParameterList> 
      <parameterName>price</parameterName> 
     </inParameterList> 
     <operation> 

 88



 

      <math> 
       <apply> 
        <eq/> 
        <ci>price</ci> 
        <apply> 
         <sum/> 
         <bvar>singlePrice</bvar> 
         <ci>singlePrice</ci> 
         <!--ci>singlePrice</ci--> 
        </apply> 
       </apply> 
      </math> 
     </operation> 
    </function> 
   </formulae> 
  </calculation> 
  <productGroup id="LVermA Brandenburg" name=""> 
   <generatorInfo>Roland Wagner</generatorInfo> 
   <xcpfVer>0.3.0</xcpfVer> 
   <title>Leistungs- und Entgeltverzeichnis von  LGB (Landesvermessung und Geobasisinformation 
Brandenburg)</title> 
   <abstract/> 
   <inheritance> 
    <contractInformation> 
     <supplier> 
      <supplierId>de.lverma-bb</supplierId> 
      <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
      <address role="supplier"> 
       <name>Landesvermessungsamt Brandenburg</name> 
       <name2/> 
       <contact>Kundendienst</contact> 
       <street>Am Vermessungsamt 1</street> 
       <zip>44227</zip> 
       <city>Potsdam</city> 
       <country>Germany</country> 
       <phone>+49 231 97 00 7 00</phone> 
       <fax>+49 231 97 00 798</fax> 
       <email>info@lverm-bb.de</email> 
       <url>http://www.lverm-bb.de</url> 
      </address> 
     </supplier> 
     <licensing licensingCat="de.lverma-bb"> 
      <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
      <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
      <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 

 89



 

      <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
      <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
      <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
      <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
     </licensing> 
    </contractInformation> 
   </inheritance> 
   <calculation> 
    <declarationList> 
     <referencedParameters> 
      <parameter name="singlePrice" type="real"> 
       <variableDescr lang="de">Preis</variableDescr> 
       <variableOrigin originName="price"> 
        <originId>*</originId> 
       </variableOrigin> 
       <variableValue>2</variableValue> 
       <variableUnit textstyle="Euro"> 
        <math> 
         <apply> 
          <ci>Euro</ci> 
         </apply> 
        </math> 
       </variableUnit> 
      </parameter> 
     </referencedParameters> 
     <resultParameters> 
      <parameter name="price" type="real"> 
       <variableDescr lang="de"> Preis </variableDescr> 
       <variableValue/> 
       <variableUnit textstyle="Euro"> 
        <math> 
         <apply> 
          <ci>Euro</ci> 
         </apply> 
        </math> 
       </variableUnit> 
      </parameter> 

 90



 

     </resultParameters> 
    </declarationList> 
    <formulae> 
     <function name="Gesamtsumme"> 
      <outParameterList> 
       <parameterName>singlePrice</parameterName> 
      </outParameterList> 
      <inParameterList> 
       <parameterName>price</parameterName> 
      </inParameterList> 
      <operation> 
       <math> 
        <apply> 
         <eq/> 
         <ci>price</ci> 
         <apply> 
          <sum/> 
          <bvar>singlePrice</bvar> 
          <ci>singlePrice</ci> 
          <!--ci>singlePrice</ci--> 
         </apply> 
        </apply> 
       </math> 
      </operation> 
     </function> 
    </formulae> 
   </calculation> 
   <productGroup id="1" name="Geodaetische Basisdaten"> 
    <contractInformation> 
     <supplier> 
      <supplierId>de.lverma-bb</supplierId> 
      <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
      <address role="supplier"> 
       <name>Landesvermessungsamt Brandenburg</name> 
       <name2/> 
       <contact>Kundendienst</contact> 
       <street>Am Vermessungsamt 1</street> 
       <zip>44227</zip> 
       <city>Potsdam</city> 
       <country>Germany</country> 
       <phone>+49 231 97 00 7 00</phone> 
       <fax>+49 231 97 00 798</fax> 
       <email>info@lverm-bb.de</email> 
       <url>http://www.lverm-bb.de</url> 
      </address> 
     </supplier> 
     <licensing licensingCat="de.lverma-bb"> 
      <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
      <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
      <devolution> 

 91



 

   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
      <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
      <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
      <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
      <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
     </licensing> 
    </contractInformation> 
    <calculation> 
     <declarationList> 
      <referencedParameters> 
       <parameter name="singlePrice" type="real"> 
        <variableDescr lang="de">Preis</variableDescr> 
        <variableOrigin originName="price"> 
         <originId>*</originId> 
        </variableOrigin> 
        <variableValue>2</variableValue> 
        <variableUnit textstyle="Euro"> 
         <math> 
          <apply> 
           <ci>Euro</ci> 
          </apply> 
         </math> 
        </variableUnit> 
       </parameter> 
      </referencedParameters> 
      <resultParameters> 
       <parameter name="price" type="real"> 
        <variableDescr lang="de"> Preis </variableDescr> 
        <variableValue/> 
        <variableUnit textstyle="Euro"> 
         <math> 
          <apply> 
           <ci>Euro</ci> 

 92



 

          </apply> 
         </math> 
        </variableUnit> 
       </parameter> 
      </resultParameters> 
     </declarationList> 
     <formulae> 
      <function name="Gesamtsumme"> 
       <outParameterList> 
        <parameterName>singlePrice</parameterName> 
       </outParameterList> 
       <inParameterList> 
        <parameterName>price</parameterName> 
       </inParameterList> 
       <operation> 
        <math> 
         <apply> 
          <eq/> 
          <ci>price</ci> 
          <apply> 
           <sum/> 
           <bvar>singlePrice</bvar> 
           <ci>singlePrice</ci> 
           <!--ci>singlePrice</ci--> 
          </apply> 
         </apply> 
        </math> 
       </operation> 
      </function> 
     </formulae> 
    </calculation> 
    <product id="1513"> 
     <title>Demodata A</title> 
     <abstract>Demodata</abstract> 
     <contractInformation> 
      <supplier> 
       <supplierId>de.lverma-bb</supplierId> 
       <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
       <address role="supplier"> 
        <name>Landesvermessungsamt Brandenburg</name> 
        <name2/> 
        <contact>Kundendienst</contact> 
        <street>Am Vermessungsamt 1</street> 
        <zip>44227</zip> 
        <city>Potsdam</city> 
        <country>Germany</country> 
        <phone>+49 231 97 00 7 00</phone> 
        <fax>+49 231 97 00 798</fax> 
        <email>info@lverm-bb.de</email> 
        <url>http://www.lverm-bb.de</url> 
       </address> 
      </supplier> 
      <licensing licensingCat="de.lverma-bb"> 
       <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
       <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 

 93



 

   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
       <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
       <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
       <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
       <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
       <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
      </licensing> 
     </contractInformation> 
     <calculation> 
      <declarationList> 
       <predefinedParameters> 
        <parameter name="pricePerPunkt" type="real"> 
         <variableDescr lang="de"> Preis pro Punkt</variableDescr> 
         <variableDescr lang="en"> Price per Point</variableDescr> 
         <variableValue>15.34</variableValue> 
         <variableUnit textstyle="Euro/Punkt"> 
          <math> 
           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </predefinedParameters> 
       <configurationParameters> 
        <parameter name="ArtikelID" type="string"> 

 94



 

         <variableDescr lang="de">ArtikelID</variableDescr> 
         <variableDescr lang="en">ArticelID</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="ArtikelName" type="string"> 
         <variableDescr lang="de">ArtikelName</variableDescr> 
         <variableDescr lang="en">Articelname</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Punktanzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de"> Anzahl der Punkte </variableDescr> 
         <variableDescr lang="en">Number of Points</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Polygon" type="string"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Polygon</variableDescr> 
         <variableDescr lang="en">Polygon</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Area" type="real"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Fl�e</variableDescr> 
         <variableDescr lang="en">Surface</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle="m²"> 
          <math> 
           <apply> 
            <power/> 
            <ci>m</ci> 
            <cn>2</cn> 
           </apply> 
          </math> 
         </variableUnit> 

 95



 

        </parameter> 
       </configurationParameters> 
       <resultParameters> 
        <parameter name="price" type="real"> 
         <variableDescr lang="de"> Preis </variableDescr> 
         <variableDescr lang="en">Price</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle="Euro"> 
          <math> 
           <apply> 
            <ci>Euro</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </resultParameters> 
      </declarationList> 
      <formulae> 
       <function name="Hauptformel19"> 
        <outParameterList> 
         <parameterName>Punktanzahl</parameterName> 
         <parameterName>pricePerPunkt</parameterName> 
        </outParameterList> 
        <inParameterList> 
         <parameterName>price</parameterName> 
        </inParameterList> 
        <operation> 
         <math> 
          <apply> 
           <eq/> 
           <ci> price </ci> 
           <piecewise> 
            <piece> 
             <apply> 
              <times/> 
              <cn>15.34</cn> 
              <ci>Punktanzahl</ci> 
             </apply> 
             <apply> 
              <lt/> 
              <ci>Punktanzahl</ci> 
              <cn>2</cn> 
             </apply> 
            </piece> 
            <otherwise> 
             <apply> 
              <plus/> 
              <apply> 
               <times/> 
               <cn>15.34</cn> 
               <ci>Punktanzahl</ci> 
              </apply> 
              <apply> 
               <times/> 
               <cn>10.23</cn> 
               <apply> 
                <minus/> 
                <ci>Punktanzahl</ci> 
                <cn>1</cn> 
               </apply> 
              </apply> 
             </apply> 
            </otherwise> 

 96



 

           </piecewise> 
          </apply> 
         </math> 
        </operation> 
       </function> 
      </formulae> 
     </calculation> 
    </product> 
    <product id="1012"> 
     <title>Demodata B</title> 
     <abstract>Demodata</abstract> 
     <contractInformation> 
      <supplier> 
       <supplierId>de.lverma-bb</supplierId> 
       <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
       <address role="supplier"> 
        <name>Landesvermessungsamt Brandenburg</name> 
        <name2/> 
        <contact>Kundendienst</contact> 
        <street>Am Vermessungsamt 1</street> 
        <zip>44227</zip> 
        <city>Potsdam</city> 
        <country>Germany</country> 
        <phone>+49 231 97 00 7 00</phone> 
        <fax>+49 231 97 00 798</fax> 
        <email>info@lverm-bb.de</email> 
        <url>http://www.lverm-bb.de</url> 
       </address> 
      </supplier> 
      <licensing licensingCat="de.lverma-bb"> 
       <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
       <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
       <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
       <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
       <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 

 97



 

   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
       <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
       <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
      </licensing> 
     </contractInformation> 
     <calculation> 
      <declarationList> 
       <predefinedParameters> 
        <parameter name="kindofproduct" type="string"> 
         <variableDescr lang="de">Art des Produkts</variableDescr> 
         <variableDescr lang="en">Kind of Product</variableDescr> 
         <variableValue>analog</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="pricePerBlatt" type="real"> 
         <variableDescr lang="de"> Preis pro Blatt</variableDescr> 
         <variableDescr lang="en"> Price per Page</variableDescr> 
         <variableValue>20.45</variableValue> 
         <variableUnit textstyle="Euro/Punkt"> 
          <math> 
           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </predefinedParameters> 
       <configurationParameters> 
        <parameter name="ArtikelID" type="string"> 
         <variableDescr lang="de">ArtikelID</variableDescr> 
         <variableDescr lang="en">ArticelID</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 

 98



 

         </variableUnit> 
        </parameter> 
        <parameter name="ArtikelName" type="string"> 
         <variableDescr lang="de">ArtikelName</variableDescr> 
         <variableDescr lang="en">Articelname</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Polygon" type="string"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Polygon</variableDescr> 
         <variableDescr lang="en">Polygon</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Area" type="real"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Fl�e</variableDescr> 
         <variableDescr lang="en">Surface</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle="m²"> 
          <math> 
           <apply> 
            <power/> 
            <ci>m</ci> 
            <cn>2</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Punktanzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Anzahl der Punkte </variableDescr> 
         <variableDescr lang="en">Number of Points </variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Blaetteranzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Anzahl der Blaetter </variableDescr> 
         <variableDescr lang="en">Number of Pages</variableDescr> 
         <variableValue/> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 

 99



 

            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </configurationParameters> 
       <resultParameters> 
        <parameter name="price" type="real"> 
         <variableDescr lang="de">Preis </variableDescr> 
         <variableDescr lang="en">Price </variableDescr> 
         <variableValue/> 
         <variableUnit textstyle="Euro"> 
          <math> 
           <apply> 
            <ci>Euro</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </resultParameters> 
      </declarationList> 
      <formulae> 
       <function name="Hauptformel20"> 
        <outParameterList> 
         <parameterName>Blaetteranzahl</parameterName> 
         <parameterName>pricePerBlatt</parameterName> 
         <parameterName>Punktanzahl</parameterName> 
        </outParameterList> 
        <inParameterList> 
         <parameterName>price</parameterName> 
        </inParameterList> 
        <operation> 
         <math> 
          <apply> 
           <eq/> 
           <ci> price </ci> 
           <apply> 
            <times/> 
            <ci>pricePerBlatt</ci> 
            <ci>Blaetteranzahl</ci> 
            <ci>Punktanzahl</ci> 
           </apply> 
          </apply> 
         </math> 
        </operation> 
       </function> 
      </formulae> 
     </calculation> 
    </product> 
   </productGroup> 
  </productGroup> 
 </xcpfCatalog> 
</xcpfEnvelope> 
 

 

4.1.5 HTTP GET GetPrice Request 
 
REQUEST=GetPrice&PRODUCTID=1513,1012&SERVICEREQUEST=,&CONFIGPARA
MS=ArtikelID%3D1513%26Polygon%3D330850%3A5763900%2C3330950%3A576

 100 



 

3900%2C3330950%3A5764000%2C3330850%3A5764000%2C3330850%3A5763
90%26Area%3D1000%26ArtikelName%3Dtest%26Punktanzahl%3D25,ArtikelID%3
D1012%26Blaetteranzahl%3D3%26Polygon%3D3330850%3A5763900%2C333095
0%3A5763900%2C3330950%3A5764000%2C3330850%3A5764000%2C3330850
%3A576390%26Area%3D1000%26ArtikelName%3D test%26Punktanzahl%3D25 
SERVICEPROTOCOL=, 

4.1.6 GetPrice Response XCPF 
<?xml version="1.0" encoding="UTF-8"?> 
<!-- edited with XML Spy v4.1 U (http://www.xmlspy.com) by Hr. Wagner (Fraunhofer Institut Software u. Systemtechnik) --
> 
<xcpfEnvelope id="de.lverma-bbEnvelope"> 
 <calculation> 
  <declarationList> 
   <referencedParameters> 
    <parameter name="singlePrice" type="real"> 
     <variableDescr lang="de">Preis</variableDescr> 
     <variableOrigin originName="price"> 
      <originId>*</originId> 
     </variableOrigin> 
     <variableValue>2</variableValue> 
     <variableUnit textstyle="Euro"> 
      <math> 
       <apply> 
        <ci>Euro</ci> 
       </apply> 
      </math> 
     </variableUnit> 
    </parameter> 
   </referencedParameters> 
   <resultParameters> 
    <parameter name="price" type="real"> 
     <variableDescr lang="de"> Preis </variableDescr> 
     <variableValue>2162.77</variableValue> 
     <variableUnit textstyle="Euro"> 
      <math> 
       <apply> 
        <ci>Euro</ci> 
       </apply> 
      </math> 
     </variableUnit> 
    </parameter> 
   </resultParameters> 
  </declarationList> 
  <formulae> 
   <function name="Gesamtsumme"> 
    <outParameterList> 
     <parameterName>singlePrice</parameterName> 
    </outParameterList> 
    <inParameterList> 
     <parameterName>price</parameterName> 
    </inParameterList> 
    <operation> 
     <math> 
      <apply> 
       <eq/> 
       <ci>price</ci> 
       <apply> 
        <sum/> 
        <bvar>singlePrice</bvar> 

 101



 

        <ci>singlePrice</ci> 
        <!--ci>singlePrice</ci--> 
       </apply> 
      </apply> 
     </math> 
    </operation> 
   </function> 
  </formulae> 
 </calculation> 
 <xcpfCatalog id="de.lverma-bbCatalog"> 
  <calculation> 
   <declarationList> 
    <referencedParameters> 
     <parameter name="singlePrice" type="real"> 
      <variableDescr lang="de">Preis</variableDescr> 
      <variableOrigin originName="price"> 
       <originId>*</originId> 
      </variableOrigin> 
      <variableValue>2</variableValue> 
      <variableUnit textstyle="Euro"> 
       <math> 
        <apply> 
         <ci>Euro</ci> 
        </apply> 
       </math> 
      </variableUnit> 
     </parameter> 
    </referencedParameters> 
    <resultParameters> 
     <parameter name="price" type="real"> 
      <variableDescr lang="de"> Preis </variableDescr> 
      <variableValue>2162.77</variableValue> 
      <variableUnit textstyle="Euro"> 
       <math> 
        <apply> 
         <ci>Euro</ci> 
        </apply> 
       </math> 
      </variableUnit> 
     </parameter> 
    </resultParameters> 
   </declarationList> 
   <formulae> 
    <function name="Gesamtsumme"> 
     <outParameterList> 
      <parameterName>singlePrice</parameterName> 
     </outParameterList> 
     <inParameterList> 
      <parameterName>price</parameterName> 
     </inParameterList> 
     <operation> 
      <math> 
       <apply> 
        <eq/> 
        <ci>price</ci> 
        <apply> 
         <sum/> 
         <bvar>singlePrice</bvar> 
         <ci>singlePrice</ci> 
         <!--ci>singlePrice</ci--> 
        </apply> 
       </apply> 
      </math> 

 102 



 

     </operation> 
    </function> 
   </formulae> 
  </calculation> 
  <productGroup id="LVermA Brandenburg" name=""> 
   <generatorInfo>Roland Wagner</generatorInfo> 
   <xcpfVer>0.3.0</xcpfVer> 
   <title>Leistungs- und Entgeltverzeichnis von  LGB (Landesvermessung und Geobasisinformation 
Brandenburg)</title> 
   <abstract/> 
   <inheritance> 
    <contractInformation> 
     <supplier> 
      <supplierId>de.lverma-bb</supplierId> 
      <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
      <address role="supplier"> 
       <name>Landesvermessungsamt Brandenburg</name> 
       <name2/> 
       <contact>Kundendienst</contact> 
       <street>Am Vermessungsamt 1</street> 
       <zip>44227</zip> 
       <city>Potsdam</city> 
       <country>Germany</country> 
       <phone>+49 231 97 00 7 00</phone> 
       <fax>+49 231 97 00 798</fax> 
       <email>info@lverm-bb.de</email> 
       <url>http://www.lverm-bb.de</url> 
      </address> 
     </supplier> 
     <licensing licensingCat="de.lverma-bb"> 
      <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
      <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
      <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
      <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
      <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 

 103



 

   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
      <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
      <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
     </licensing> 
    </contractInformation> 
   </inheritance> 
   <calculation> 
    <declarationList> 
     <referencedParameters> 
      <parameter name="singlePrice" type="real"> 
       <variableDescr lang="de">Preis</variableDescr> 
       <variableOrigin originName="price"> 
        <originId>*</originId> 
       </variableOrigin> 
       <variableValue>2</variableValue> 
       <variableUnit textstyle="Euro"> 
        <math> 
         <apply> 
          <ci>Euro</ci> 
         </apply> 
        </math> 
       </variableUnit> 
      </parameter> 
     </referencedParameters> 
     <resultParameters> 
      <parameter name="price" type="real"> 
       <variableDescr lang="de"> Preis </variableDescr> 
       <variableValue>2162.77</variableValue> 
       <variableUnit textstyle="Euro"> 
        <math> 
         <apply> 
          <ci>Euro</ci> 
         </apply> 
        </math> 
       </variableUnit> 
      </parameter> 
     </resultParameters> 
    </declarationList> 
    <formulae> 
     <function name="Gesamtsumme"> 
      <outParameterList> 
       <parameterName>singlePrice</parameterName> 
      </outParameterList> 
      <inParameterList> 
       <parameterName>price</parameterName> 
      </inParameterList> 
      <operation> 
       <math> 

 104 



 

        <apply> 
         <eq/> 
         <ci>price</ci> 
         <apply> 
          <sum/> 
          <bvar>singlePrice</bvar> 
          <ci>singlePrice</ci> 
          <!--ci>singlePrice</ci--> 
         </apply> 
        </apply> 
       </math> 
      </operation> 
     </function> 
    </formulae> 
   </calculation> 
   <productGroup id="1" name="Geodaetische Basisdaten"> 
    <contractInformation> 
     <supplier> 
      <supplierId>de.lverma-bb</supplierId> 
      <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
      <address role="supplier"> 
       <name>Landesvermessungsamt Brandenburg</name> 
       <name2/> 
       <contact>Kundendienst</contact> 
       <street>Am Vermessungsamt 1</street> 
       <zip>44227</zip> 
       <city>Potsdam</city> 
       <country>Germany</country> 
       <phone>+49 231 97 00 7 00</phone> 
       <fax>+49 231 97 00 798</fax> 
       <email>info@lverm-bb.de</email> 
       <url>http://www.lverm-bb.de</url> 
      </address> 
     </supplier> 
     <licensing licensingCat="de.lverma-bb"> 
      <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
      <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
      <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
      <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 

 105



 

   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
      <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
      <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
      <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
     </licensing> 
    </contractInformation> 
    <calculation> 
     <declarationList> 
      <referencedParameters> 
       <parameter name="singlePrice" type="real"> 
        <variableDescr lang="de">Preis</variableDescr> 
        <variableOrigin originName="price"> 
         <originId>*</originId> 
        </variableOrigin> 
        <variableValue>2</variableValue> 
        <variableUnit textstyle="Euro"> 
         <math> 
          <apply> 
           <ci>Euro</ci> 
          </apply> 
         </math> 
        </variableUnit> 
       </parameter> 
      </referencedParameters> 
      <resultParameters> 
       <parameter name="price" type="real"> 
        <variableDescr lang="de"> Preis </variableDescr> 
        <variableValue>2162.77</variableValue> 
        <variableUnit textstyle="Euro"> 
         <math> 
          <apply> 
           <ci>Euro</ci> 
          </apply> 
         </math> 
        </variableUnit> 
       </parameter> 
      </resultParameters> 
     </declarationList> 
     <formulae> 
      <function name="Gesamtsumme"> 
       <outParameterList> 
        <parameterName>singlePrice</parameterName> 
       </outParameterList> 
       <inParameterList> 

 106 



 

        <parameterName>price</parameterName> 
       </inParameterList> 
       <operation> 
        <math> 
         <apply> 
          <eq/> 
          <ci>price</ci> 
          <apply> 
           <sum/> 
           <bvar>singlePrice</bvar> 
           <ci>singlePrice</ci> 
           <!--ci>singlePrice</ci--> 
          </apply> 
         </apply> 
        </math> 
       </operation> 
      </function> 
     </formulae> 
    </calculation> 
    <product id="1513"> 
     <title>Demodata A</title> 
     <abstract>Demodata</abstract> 
     <contractInformation> 
      <supplier> 
       <supplierId>de.lverma-bb</supplierId> 
       <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
       <address role="supplier"> 
        <name>Landesvermessungsamt Brandenburg</name> 
        <name2/> 
        <contact>Kundendienst</contact> 
        <street>Am Vermessungsamt 1</street> 
        <zip>44227</zip> 
        <city>Potsdam</city> 
        <country>Germany</country> 
        <phone>+49 231 97 00 7 00</phone> 
        <fax>+49 231 97 00 798</fax> 
        <email>info@lverm-bb.de</email> 
        <url>http://www.lverm-bb.de</url> 
       </address> 
      </supplier> 
      <licensing licensingCat="de.lverma-bb"> 
       <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
       <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
       <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
       <duties> 

 107



 

   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
       <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
       <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
       <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
      </licensing> 
     </contractInformation> 
     <calculation> 
      <declarationList> 
       <predefinedParameters> 
        <parameter name="pricePerPunkt" type="real"> 
         <variableDescr lang="de"> Preis pro Punkt</variableDescr> 
         <variableDescr lang="en"> Price per Point</variableDescr> 
         <variableValue>15.34</variableValue> 
         <variableUnit textstyle="Euro/Punkt"> 
          <math> 
           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </predefinedParameters> 
       <configurationParameters> 
        <parameter name="ArtikelID" type="string"> 
         <variableDescr lang="de">ArtikelID</variableDescr> 
         <variableDescr lang="en">ArticelID</variableDescr> 
         <variableValue>1513</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="ArtikelName" type="string"> 

 108 



 

         <variableDescr lang="de">ArtikelName</variableDescr> 
         <variableDescr lang="en">Articelname</variableDescr> 
         <variableValue>test</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Punktanzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de"> Anzahl der Punkte </variableDescr> 
         <variableDescr lang="en">Number of Points</variableDescr> 
         <variableValue>25</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Polygon" type="string"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Polygon</variableDescr> 
         <variableDescr lang="en">Polygon</variableDescr> 
        
 <variableValue>3330850:5763900,3330950:5763900,3330950:5764000,3330850:5764000,3330850:576390</variabl
eValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Area" type="real"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Fl�e</variableDescr> 
         <variableDescr lang="en">Surface</variableDescr> 
         <variableValue>1000</variableValue> 
         <variableUnit textstyle="m²"> 
          <math> 
           <apply> 
            <power/> 
            <ci>m</ci> 
            <cn>2</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </configurationParameters> 
       <resultParameters> 
        <parameter name="price" type="real"> 
         <variableDescr lang="de"> Preis </variableDescr> 
         <variableDescr lang="en">Price</variableDescr> 
         <variableValue>629.02</variableValue> 
         <variableUnit textstyle="Euro"> 
          <math> 
           <apply> 

 109



 

            <ci>Euro</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </resultParameters> 
      </declarationList> 
      <formulae> 
       <function name="Hauptformel19"> 
        <outParameterList> 
         <parameterName>Punktanzahl</parameterName> 
         <parameterName>pricePerPunkt</parameterName> 
        </outParameterList> 
        <inParameterList> 
         <parameterName>price</parameterName> 
        </inParameterList> 
        <operation> 
         <math> 
          <apply> 
           <eq/> 
           <ci> price </ci> 
           <piecewise> 
            <piece> 
             <apply> 
              <times/> 
              <cn>15.34</cn> 
              <ci>Punktanzahl</ci> 
             </apply> 
             <apply> 
              <lt/> 
              <ci>Punktanzahl</ci> 
              <cn>2</cn> 
             </apply> 
            </piece> 
            <otherwise> 
             <apply> 
              <plus/> 
              <apply> 
               <times/> 
               <cn>15.34</cn> 
               <ci>Punktanzahl</ci> 
              </apply> 
              <apply> 
               <times/> 
               <cn>10.23</cn> 
               <apply> 
                <minus/> 
                <ci>Punktanzahl</ci> 
                <cn>1</cn> 
               </apply> 
              </apply> 
             </apply> 
            </otherwise> 
           </piecewise> 
          </apply> 
         </math> 
        </operation> 
       </function> 
      </formulae> 
     </calculation> 
    </product> 
    <product id="1012"> 
     <title>Demodata B</title> 

 110 



 

     <abstract>Demodata</abstract> 
     <contractInformation> 
      <supplier> 
       <supplierId>de.lverma-bb</supplierId> 
       <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
       <address role="supplier"> 
        <name>Landesvermessungsamt Brandenburg</name> 
        <name2/> 
        <contact>Kundendienst</contact> 
        <street>Am Vermessungsamt 1</street> 
        <zip>44227</zip> 
        <city>Potsdam</city> 
        <country>Germany</country> 
        <phone>+49 231 97 00 7 00</phone> 
        <fax>+49 231 97 00 798</fax> 
        <email>info@lverm-bb.de</email> 
        <url>http://www.lverm-bb.de</url> 
       </address> 
      </supplier> 
      <licensing licensingCat="de.lverma-bb"> 
       <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 
       <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 
       <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
       <duties> 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ‹ ‹ Jahr › › ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
       <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
       <generalProvisions> 
   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 
   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 

 111



 

   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
       <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
      </licensing> 
     </contractInformation> 
     <calculation> 
      <declarationList> 
       <predefinedParameters> 
        <parameter name="kindofproduct" type="string"> 
         <variableDescr lang="de">Art des Produkts</variableDescr> 
         <variableDescr lang="en">Kind of Product</variableDescr> 
         <variableValue>analog</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="pricePerBlatt" type="real"> 
         <variableDescr lang="de"> Preis pro Blatt</variableDescr> 
         <variableDescr lang="en"> Price per Page</variableDescr> 
         <variableValue>20.45</variableValue> 
         <variableUnit textstyle="Euro/Punkt"> 
          <math> 
           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </predefinedParameters> 
       <configurationParameters> 
        <parameter name="ArtikelID" type="string"> 
         <variableDescr lang="de">ArtikelID</variableDescr> 
         <variableDescr lang="en">ArticelID</variableDescr> 
         <variableValue>1012</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="ArtikelName" type="string"> 
         <variableDescr lang="de">ArtikelName</variableDescr> 
         <variableDescr lang="en">Articelname</variableDescr> 
         <variableValue>test</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 

 112 



 

           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Polygon" type="string"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Polygon</variableDescr> 
         <variableDescr lang="en">Polygon</variableDescr> 
        
 <variableValue>3330850:5763900,3330950:5763900,3330950:5764000,3330850:5764000,3330850:576390</variabl
eValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Area" type="real"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Fl�e</variableDescr> 
         <variableDescr lang="en">Surface</variableDescr> 
         <variableValue>1000</variableValue> 
         <variableUnit textstyle="m²"> 
          <math> 
           <apply> 
            <power/> 
            <ci>m</ci> 
            <cn>2</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Punktanzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Anzahl der Punkte </variableDescr> 
         <variableDescr lang="en">Number of Points </variableDescr> 
         <variableValue>25</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Blaetteranzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Anzahl der Blaetter </variableDescr> 
         <variableDescr lang="en">Number of Pages</variableDescr> 
         <variableValue>3</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </configurationParameters> 
       <resultParameters> 
        <parameter name="price" type="real"> 

 113



 

         <variableDescr lang="de">Preis </variableDescr> 
         <variableDescr lang="en">Price </variableDescr> 
         <variableValue>1533.75</variableValue> 
         <variableUnit textstyle="Euro"> 
          <math> 
           <apply> 
            <ci>Euro</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </resultParameters> 
      </declarationList> 
      <formulae> 
       <function name="Hauptformel20"> 
        <outParameterList> 
         <parameterName>Blaetteranzahl</parameterName> 
         <parameterName>pricePerBlatt</parameterName> 
         <parameterName>Punktanzahl</parameterName> 
        </outParameterList> 
        <inParameterList> 
         <parameterName>price</parameterName> 
        </inParameterList> 
        <operation> 
         <math> 
          <apply> 
           <eq/> 
           <ci> price </ci> 
           <apply> 
            <times/> 
            <ci>pricePerBlatt</ci> 
            <ci>Blaetteranzahl</ci> 
            <ci>Punktanzahl</ci> 
           </apply> 
          </apply> 
         </math> 
        </operation> 
       </function> 
      </formulae> 
     </calculation> 
    </product> 
   </productGroup> 
  </productGroup> 
 </xcpfCatalog> 
</xcpfEnvelope> 
 

 

4.1.7 HTTP GET OrderProduct Request 
 

REQUEST=OrderProduct&PRODUCTID=1513,1012&SERVICEREQUEST=,&CONFIGPARAMS=Art
ikelID%3D1513%26Polygon%3D330850%3A5763900%2C3330950%3A5763900%2C3330950%3
A5764000%2C3330850%3A5764000%2C3330850%3A576390%26Area%3D1000%26ArtikelNam
e%3Dtest%26Punktanzahl%3D25,ArtikelID%3D1012%26Blaetteranzahl%3D3%26Polygo
n%3D3330850%3A5763900%2C3330950%3A5763900%2C3330950%3A5764000%2C3330850%3A
5764000%2C3330850%3A576390%26Area%3D1000%26ArtikelName%3D 
test%26Punktanzahl%3D25 SERVICEPROTOCOL=,&DEFNAME1=Wagner&DEFSTREET=Emil-
Figge-Str.91&DEFZIP=44227&DEFCITY=Dortmund&DEFMAIL=w@gner.org 

 

 114 



 

4.1.8 OrderProduct Response XCPF 
 

<?xml version="1.0" encoding="UTF-8"?> 
<xcpfEnvelope id="de.lverma-bbEnvelope"> 
 <calculation> 
  <declarationList> 
   <referencedParameters> 
    <parameter name="singlePrice" type="real"> 
     <variableDescr lang="de">Preis</variableDescr> 
     <variableOrigin originName="price"> 
      <originId>*</originId> 
     </variableOrigin> 
     <variableValue>2</variableValue> 
     <variableUnit textstyle="Euro"> 
      <math> 
       <apply> 
        <ci>Euro</ci> 
       </apply> 
      </math> 
     </variableUnit> 
    </parameter> 
   </referencedParameters> 
   <resultParameters> 
    <parameter name="price" type="real"> 
     <variableDescr lang="de"> Preis </variableDescr> 
     <variableValue/> 
     <variableUnit textstyle="Euro"> 
      <math> 
       <apply> 
        <ci>Euro</ci> 
       </apply> 
      </math> 
     </variableUnit> 
    </parameter> 
   </resultParameters> 
  </declarationList> 
  <formulae> 
   <function name="Gesamtsumme"> 
    <outParameterList> 
     <parameterName>singlePrice</parameterName> 
    </outParameterList> 
    <inParameterList> 
     <parameterName>price</parameterName> 
    </inParameterList> 
    <operation> 
     <math> 
      <apply> 
       <eq/> 
       <ci>price</ci> 
       <apply> 
        <sum/> 
        <bvar>singlePrice</bvar> 
        <ci>singlePrice</ci> 
        <!--ci>singlePrice</ci--> 
       </apply> 
      </apply> 
     </math> 
    </operation> 
   </function> 
  </formulae> 
 </calculation> 
 <xcpfCatalog id="1351494981980061781"> 
  <transactionNumber>1351494981980061781</transactionNumber> 

 115



 

  <inheritance> 
   <contractInformation> 
    <customer> 
     <customerId>1739384622094560325</customerId> 
     <customerName/> 
     <address role="customer" type="default"> 
      <name>Roland M. Wagner</name> 
      <name2/> 
      <contact/> 
      <street>Emil-Figge-Strasse 91</street> 
      <zip>44227</zip> 
      <city>Dortmund</city> 
      <country/> 
      <phone/> 
      <fax/> 
      <email>wagner@do.isst.fhg.de</email> 
      <url/> 
     </address> 
    </customer> 
   </contractInformation> 
  </inheritance> 
  < > calculation

variableDescr variableDescr

variableValue variableValue

parameter

formulae

outParameterList
inParameterList

parameterName parameterName
inParameterList
operation

   <declarationList> 
    <referencedParameters> 
     <parameter name="singlePrice" type="real"> 
      < ="de">Preis</ >  lang
      <variableOrigin originName="price"> 
       <originId>*</originId> 
      </variableOrigin> 
      < >2</ > 
      <variableUnit textstyle="Euro"> 
       <math> 
        <apply> 
         <ci>Euro</ci> 
        </apply> 
       </math> 
      </variableUnit> 
     </ > 
    </referencedParameters> 
    <resultParameters> 
     <parameter name="price" type="real"> 
      <variableDescr lang="de"> Preis </variableDescr> 
      <variableValue/> 
      <variableUnit textstyle="Euro"> 
       <math> 
        <apply> 
         <ci>Euro</ci> 
        </apply> 
       </math> 
      </variableUnit> 
     </parameter> 
    </resultParameters> 
   </declarationList> 
   < > 
    <function name="Gesamtsumme"> 
     <outParameterList> 
      <parameterName>singlePrice</parameterName> 
     </ > 
     < > 
      < >price</ > 
     </ > 
     < > 
      <math> 

 116 



 

       <apply> 
        <eq/> 

        <apply> 
         <sum/> 

         <ci>singlePrice</ci> 
         <!--ci>singlePrice</ci--> 
        </apply> 
       </apply> 
      </math> 

        < >price</ > ci ci

         <bvar>singlePrice</bvar> 

     </operation> 
    </function> 
   </formulae> 
  </calculation> 
  <productGroup id="LVermA Brandenburg" name=""> 
   <generatorInfo>Roland Wagner</generatorInfo> 

   <title>Leistungs- und Entgeltverzeichnis von  LGB (Landesvermessung und Geobasisinformation 
Brandenburg)</title> 
   <abstract/> 

    <declarationList> 
     <referencedParameters> 
      <parameter name="singlePrice" type="real"> 
       <variableDescr lang="de">Preis</variableDescr> 
       <variableOrigin originName="price"> 

   <xcpfVer>0.3.0</xcpfVer> 

   <calculation> 

        <originId>*</originId> 
       </variableOrigin> 
       <variableValue>2</variableValue> 
       <variableUnit textstyle="Euro"> 
        <math> 
         <apply> 

         </apply> 
        </math> 
       </variableUnit> 
      </parameter> 
     </referencedParameters> 
     <resultParameters> 
      <parameter name="price" type="real"> 
       <variableDescr lang="de"> Preis </variableDescr> 
       <variableValue/> 
       <variableUnit textstyle="Euro"> 
        <math> 
         <apply> 
          <ci>Euro</ci> 
         </apply> 
        </math> 
       </variableUnit> 

     </resultParameters> 
    </declarationList> 
    <formulae> 
     <function name="Gesamtsumme"> 
      <outParameterList> 
       <parameterName>singlePrice</parameterName> 
      </outParameterList> 
      <inParameterList> 
       <parameterName>price</parameterName> 
      </inParameterList> 
      <operation> 
       <math> 

          <ci>Euro</ci> 

      </parameter> 

 117



 

        <apply> 

         <apply> 
          <sum/> 
          <bvar>singlePrice</bvar> 
          <ci>singlePrice</ci> 
          <!--ci>singlePrice</ci--> 

         < /> eq

apply

supplier

name name

zip zip

fax fax

licensing

duties

         <ci>price</ci> 

         </apply> 
        </ > 
       </math> 
      </operation> 
     </function> 
    </formulae> 

   <productGroup id="1" name="Geodaetische Basisdaten"> 
    <contractInformation> 

      <supplierId>de.lverma-bb</supplierId> 
      <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
      <address role="supplier"> 

       <name2/> 

   </calculation> 

     < > 

       < >Landesvermessungsamt Brandenburg</ > 

       <contact>Kundendienst</contact> 
       <street>Am Vermessungsamt 1</street> 
       < >44227</ > 
       <city>Potsdam</city> 
       <country>Germany</country> 
       <phone>+49 231 97 00 7 00</phone> 

       <email>info@lverm-bb.de</email> 
       <url>http://www.lverm-bb.de</url> 

       < >+49 231 97 00 798</ > 

      </address> 
     </supplier> 
     < ="de.lverma-bb">  licensingCat
      <rightsOfUse> 
   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 

   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 

   zu kopieren und ausschliesslich im Internet zu nutzen. 

    </rightsOfUse> 
      <copyright> 
   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 
   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 
    </copyright> 

   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 

      <devolution> 

    </devolution> 
      < > 
   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ? ? Jahr ? ? ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 

 118 



 

   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
      <warranty> 
   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 
   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
      <generalProvisions> 

   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 

   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 

   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
      <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 

    </contractInformation> 
    <calculation> 

     </licensing> 

     < > declarationList

variableValue

parameter

outParameterList

      <referencedParameters> 
       <parameter name="singlePrice" type="real"> 
        <variableDescr lang="de">Preis</variableDescr> 
        <variableOrigin originName="price"> 
         <originId>*</originId> 
        </variableOrigin> 

        <variableUnit textstyle="Euro"> 
         <math> 
          <apply> 
           <ci>Euro</ci> 
          </apply> 
         </math> 
        </variableUnit> 
       </parameter> 
      </referencedParameters> 
      <resultParameters> 
       <parameter name="price" type="real"> 
        <variableDescr lang="de"> Preis </variableDescr> 

        <variableUnit textstyle="Euro"> 
         <math> 
          <apply> 
           <ci>Euro</ci> 
          </apply> 
         </math> 
        </variableUnit> 

      </resultParameters> 
     </declarationList> 
     <formulae> 
      <function name="Gesamtsumme"> 
       <outParameterList> 
        <parameterName>singlePrice</parameterName> 

       <inParameterList> 

        <variableValue>2</variableValue> 

        < /> 

       </ > 

       </ > 

 119



 

        <parameterName>price</parameterName> 
       </inParameterList> 
       <operation> 
        <math> 
         <apply> 
          <eq/> 
          <ci>price</ci> 
          <apply> 
           <sum/> 
           <bvar>singlePrice</bvar> 
           < >singlePrice</ > ci ci

math

calculation

fax fax

copyright

           <!--ci>singlePrice</ci--> 
          </apply> 
         </apply> 
        </ > 
       </operation> 
      </function> 
     </formulae> 

    <product id="1012"> 
     <title>Demodata B</title> 

     <contractInformation> 
      <supplier> 
       <supplierId>de.lverma-bb</supplierId> 
       <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
       <address role="supplier"> 
        <name>Landesvermessungsamt Brandenburg</name> 
        <name2/> 
        <contact>Kundendienst</contact> 
        <street>Am Vermessungsamt 1</street> 
        <zip>44227</zip> 
        <city>Potsdam</city> 
        <country>Germany</country> 
        <phone>+49 231 97 00 7 00</phone> 

        <url>http://www.lverm-bb.de</url> 
       </address> 
      </supplier> 
      <licensing licensingCat="de.lverma-bb"> 
       <rightsOfUse> 

    </ > 

     <abstract>Demodata</abstract> 

        < >+49 231 97 00 798</ > 
        <email>info@lverm-bb.de</email> 

   Die Institution ISST gew�t der Partnerfirma eine unbefristete, nicht ausschliessliche, eingeschr�te Nutzung. 
   Hierzu r�t das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu speichern, zu bearbeiten, 
   zu kopieren und ausschliesslich im Internet zu nutzen. 
   Die Demodaten sind ausschliesslich zu eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung f�tte ist 
ausgeschlossen. 
   Die Nutzungsrechte beziehen sich ausschliesslich auf die Nutzing der o.g. Daten. 
    </rightsOfUse> 

   Das ISST versichert, dass an den von ISST zur Verf�gestellten Daten keine Rechte Dritter im Sinner eines 
   Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit von 
Anspr�Dritter frei. 

    </copyright> 
       <devolution> 
   Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu �agen, sofern 
dies nicht ausdr�h genhemigt ist. 
   F� Fall der Zuwiderhandlung gegen das vorstehende Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 
50.000,- zu zahlen. 
    </devolution> 
       <duties> 

       < > 

   Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu einer anderen Auffassung 
kommen, haftet das ISST nicht. 

 120 



 

   Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft einzurichten und 
aufrecht zu halten. 
   Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden Voraussetzungen : 
    - Quellenangabe : © ? ? Jahr ? ? ISST, Berlin/Dortmund 
    - Link auf die Homepage vom ISST : www.isst.fhg.de 
    - Schutz der Daten gegen Auslesen / Downloaden 
   Eine Weitergabe an Kunden zwecks Internetnutzung bedarf der vorherigen individuellen Vereinbarung mit dem ISST. 
    </duties> 
       <warranty> 

   u.a. auch aus �ntlichen Verzeichnissen und Registern zusammengestllt werden, kann das ISST trotz st�iger 
Vergleichskontrollen die 
   Richtigkeit und Vollst�igkeit nicht gew�leisten. 
    </warranty> 
       <generalProvisions> 

   Bestimmungen nicht ber�Die Parteien sind in diesem Falle verpflichtet, die unwirksame Bestimmung durch eine 
solche zu ersetzten, 
   die den beiderseitigen Interessen und dem wirtschaftlichen Zweck weitestgehend gerecht wird. 
   M�he Nebenabreden haben die Parteien nicht getroffen. S�liche �erungen und Erg�ungen dieser Vereinbarung 
bef�der Schriftform. 
   Auf alle Rechtsbeziehungen zu uns findet ausschliesslich deutsches Recht Anwendung. 
    </generalProvisions> 
       <jurisdiction> 
   Ist der Kunde Vollkaufmann, so wird f�e Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als Gerichtsstand 
vereinbart. 
    </jurisdiction> 
      </licensing> 
     </contractInformation> 
     <calculation> 
      <declarationList> 
       <predefinedParameters> 

         <variableDescr lang="en">Kind of Product</variableDescr> 
         <variableValue>analog</variableValue> 
         <variableUnit textstyle=""> 

           <apply> 
            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 

         </variableUnit> 

   Das ISST garantiert nicht, dass die Datenprodukte den Bed�sen oder Erwartungen des Endnutzers entsprechen 
werden. Da die Datenprodukte 

   Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, so wird dadurch die 
G�eit der �n 

        < ="kindofproduct" ="string"> parameter
variableDescr variableDescr

math

math

apply

math
variableUnit

 name  type
 lang         < ="de">Art des Produkts</ > 

          < > 

          </ > 

        </parameter> 
        <parameter name="pricePerBlatt" type="real"> 
         <variableDescr lang="de"> Preis pro Blatt</variableDescr> 
         <variableDescr lang="en"> Price per Page</variableDescr> 

         <variableUnit textstyle="Euro/Punkt"> 
          <math> 

            <divide/> 
            <ci>Euro</ci> 
            <ci>Punkt</ci> 
           </apply> 

         <variableValue>20.45</variableValue> 

           < > 

          </ > 
         </ > 
        </parameter> 
       </predefinedParameters> 

 121



 

       <configurationParameters> 
        <parameter name="ArtikelID" type="string"> 
         <variableDescr lang="de">ArtikelID</variableDescr> 

         <variableValue>1012</variableValue> 
         <variableUnit textstyle=""> 

           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="ArtikelName" type="string"> 
         <variableDescr lang="de">ArtikelName</variableDescr> 
         <variableDescr lang="en">Articelname</variableDescr> 
         <variableValue>test</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Polygon" type="string"> 
         <variableGroup>server</variableGroup> 

         <variableDescr lang="en">Polygon</variableDescr> 
        
 <variableValue>3330850:5763900,3330950:5763900,3330950:5764000,3330850:5764000,3330850:576390</variabl
eValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 

         <variableDescr lang="en">ArticelID</variableDescr> 

          < > math

variableGroup variableGroup

         <variableDescr lang="de">Polygon</variableDescr> 

        <parameter name="Area" type="real"> 
         < >server</ > 
         <variableDescr lang="de">Fl�e</variableDescr> 
         <variableDescr lang="en">Surface</variableDescr> 
         <variableValue>1000</variableValue> 
         <variableUnit textstyle="m²"> 

           <apply> 
            <power/> 
            <ci>m</ci> 
            <cn>2</cn> 

          </math> 
         </variableUnit> 
        </parameter> 
        <parameter name="Punktanzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Anzahl der Punkte </variableDescr> 
         <variableDescr lang="en">Number of Points </variableDescr> 
         <variableValue>25</variableValue> 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 

          <math> 

           </apply> 

 122 



 

            <cn>1</cn> 
           </apply> 

        </parameter> 
        <parameter name="Blaetteranzahl" type="integer"> 
         <variableGroup>server</variableGroup> 
         <variableDescr lang="de">Anzahl der Blaetter </variableDescr> 
         <variableDescr lang="en">Number of Pages</variableDescr> 

          </ > math

variableValue variableValue

parameterName parameterName

operation

ci ci

         </variableUnit> 

         < >3</ > 
         <variableUnit textstyle=""> 
          <math> 
           <apply> 
            <cn>1</cn> 
           </apply> 

         </variableUnit> 
        </parameter> 
       </configurationParameters> 
       <resultParameters> 
        <parameter name="price" type="real"> 
         <variableDescr lang="de">Preis </variableDescr> 
         <variableDescr lang="en">Price </variableDescr> 
         <variableValue/> 
         <variableUnit textstyle="Euro"> 
          <math> 
           <apply> 
            <ci>Euro</ci> 
           </apply> 
          </math> 
         </variableUnit> 
        </parameter> 
       </resultParameters> 
      </declarationList> 
      <formulae> 
       <function name="Hauptformel20"> 

         <parameterName>Blaetteranzahl</parameterName> 
         <parameterName>pricePerBlatt</parameterName> 
         <parameterName>Punktanzahl</parameterName> 
        </outParameterList> 
        <inParameterList> 

        </inParameterList> 

         <math> 
          <apply> 
           <eq/> 
           <ci> price </ci> 
           <apply> 
            <times/> 

            <ci>Blaetteranzahl</ci> 
            <ci>Punktanzahl</ci> 
           </apply> 
          </apply> 
         </math> 
        </operation> 
       </function> 
      </formulae> 
     </calculation> 
    </product> 
   </productGroup> 

          </math> 

        <outParameterList> 

         < >price</ > 

        < > 

            < >pricePerBlatt</ > 

 123



 

  </productGroup> 
 </xcpfCatalog> 
</xcpfEnvelope> 
 

 
 

 124 



 

4.2 WPOS with OGC WMS Service Request 

 
4.2.1 HTTP GET GetPrice Request 

http://azreal:8761/wpos/servlet/wpos.Controller?Request=getPrice&productId
=1005,http%3A%2F%2Fxtra.interactive-instruments.de%2Fcgi-
bin%2FXtraWMS&serviceRequest=,VERSION%3D1.1.0%26REQUEST%3DGetMap%26LAYERS%
3DStrassen%26STYLES%3DStandard%26SRS%3DEPSG%3A31466%26FORMAT%3Dimage%2Fpng
%26BGCOLOR%3D0xFFFFFF%26TRANSPARENT%3DFALSE%26WIDTH%3D514%26HEIGHT%3D426%2
6BBOX%3D2465148.7644131454%2C5576452%2C2764016.1155868545%2C5824151.4%26EX
CEPTIONS%3Dapplication%2Fvnd.ogc.se_xml&serviceProtocol=,Organisation%3DOG
C%26Name%3DWMS%26Version%3D1.0&Config=Area%3D1000%26xmax%3D3%26ymax%3D4%26
Polygon%3D3330850%3A5763900%2C3330950%3A5763900%2C3330950%3A5764000%2C3330
850%3A5764000%2C3330850%3A576390%26xmin%3D1%26ymin%3D2%26height%3D5%26widt
h%3D6, 

 

4.2.2 XCPF Response Object 
 

<?xml version="1.0" encoding="ISO-8859-1"?> 
 
<xcpfEnvelope id="tms"> 
  <calculation> 
    <declarationList> 
      <referencedParameters> 
        <parameter name="singlePrice" type="real"> 
          <variableDescr lang="de">Preis</variableDescr> 
          <variableOrigin originName="price"> 
            <originId>*</originId> 
          </variableOrigin> 
          <variableValue>2</variableValue> 
          <variableUnit textstyle="Euro"> 
            <math> 
              <apply> 
                <ci>Euro</ci> 
              </apply> 

          </variableUnit> 
        </parameter> 
      </referencedParameters> 
      <resultParameters> 
        <parameter name="price" type="real"> 
          <variableDescr lang="de">Preis</variableDescr> 
          <variableValue>986300.00</variableValue> 
          <variableUnit textstyle="Euro"> 
            <math> 
              <apply> 
                <ci>Euro</ci> 
              </apply> 

          </variableUnit> 
        </parameter> 
      </resultParameters> 
    </declarationList> 
    <formulae> 
      <function name="Gesamtsumme"> 

            </math> 

            </math> 

 125



 

        <outParameterList> 
          <parameterName>singlePrice</parameterName> 
        </outParameterList> 
        <inParameterList> 
          <parameterName>price</parameterName> 
        </inParameterList> 

          <math> 
            <apply> 
              <eq/> 
              <ci>price</ci> 
              <apply> 
                <sum/> 

                <!--ci>singlePrice</ci--> 
 
              </apply> 
            </apply> 

        < > operation

bvar bvar

math

referencedParameters

variableOrigin

inParameterList

                < >singlePrice</ > 
                <ci>singlePrice</ci> 

          </ > 
        </operation> 
      </function> 
    </formulae> 
  </calculation> 
  <xcpfCatalog id="tms"> 
    <calculation> 
      <declarationList> 

          <parameter name="singlePrice" type="real"> 
            <variableDescr lang="de">Preis</variableDescr> 
            <variableOrigin originName="price"> 
              <originId>*</originId> 

            <variableValue>2</variableValue> 
            <variableUnit textstyle="Euro"> 
              <math> 
                <apply> 
                  <ci>Euro</ci> 
                </apply> 
              </math> 
            </variableUnit> 
          </parameter> 
        </referencedParameters> 
        <resultParameters> 
          <parameter name="price" type="real"> 
            <variableDescr lang="de">Preis</variableDescr> 
            <variableValue>986300.00</variableValue> 
            <variableUnit textstyle="Euro"> 
              <math> 

                  <ci>Euro</ci> 
                </apply> 
              </math> 
            </variableUnit> 
          </parameter> 
        </resultParameters> 
      </declarationList> 
      <formulae> 
        <function name="Gesamtsumme"> 
          <outParameterList> 
            <parameterName>singlePrice</parameterName> 
          </outParameterList> 

        < > 

            </ > 

                <apply> 

          < > 

 126 



 

            <parameterName>price</parameterName> 
          </inParameterList> 
          <operation> 
            <math> 
              <apply> 

                  <sum/> 
                  <bvar>singlePrice</bvar> 
                  <ci>singlePrice</ci> 
                  <!--ci>singlePrice</ci--> 
 
                </apply> 

                < /> eq
ci ci
apply

apply

street street

                < >price</ > 
                < > 

              </ > 
            </math> 
          </operation> 
        </function> 
      </formulae> 
    </calculation> 

      <generatorInfo>Roland M Wagner</generatorInfo> 
      <xcpfVer>0.4.3</xcpfVer> 
      <title>Leistungs- und Entgeltverzeichnis von LGB (Landesvermessung und Geobasisinformation Brandenburg)</title> 
      <abstract/> 
      <inheritance> 
        <contractInformation> 

            <supplierId>de.lverma-bb</supplierId> 
            <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
            <address role="supplier"> 
              <name>Landesvermessungsamt Brandenburg</name> 
              <name2/> 
              <contact>Kundendienst</contact> 

    <productGroup id="gdms" name=""> 

          <supplier> 

              < >Am Vermessungsamt 1</ > 
              <zip>44227</zip> 
              <city>Potsdam</city> 
              <country>Germany</country> 
              <phone>+49 231 97 00 7 00</phone> 
              <fax>+49 231 97 00 798</fax> 
              <email>info@lverm-bb.de</email> 

            </address> 
          </supplier> 
          <licensing licensingCat="de.lverma-bb"> 
            <rightsOfUse>Die Institution ISST gewährt der Partnerfirma eine unbefristete, nicht ausschliessliche, 
eingeschränkte Nutzung. Hierzu räumt das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu 
speichern, zu bearbeiten, zu kopieren und ausschliesslich im Internet zu nutzen. Die Demodaten sind ausschliesslich zu 
eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung für Dritte ist ausgeschlossen. Die Nutzungsrechte beziehen 
sich ausschliesslich auf die Nutzing der o.g. Daten.</rightsOfUse> 

              <url>http://www.lverm-bb.de</url> 

            <copyright>Das ISST versichert, dass an den von ISST zur Verfügung gestellten Daten keine Rechte Dritter im 
Sinner eines Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit 
von Ansprüchen Dritter frei. Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu 
einer anderen Auffassung kommen, haftet das ISST nicht.</copyright> 
            <devolution>Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu 
übertragen, sofern dies nicht ausdrücklich genhemigt ist. Für den Fall der Zuwiderhandlung gegen das vorstehende 
Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 50.000,- zu zahlen.</devolution> 
            <duties>Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft 
einzurichten und aufrecht zu halten. Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden 
Voraussetzungen : - Quellenangabe : © ? ? Jahr ? ? ISST, Berlin/Dortmund - Link auf die Homepage vom ISST : 
www.isst.fhg.de - Schutz der Daten gegen Auslesen / Downloaden Eine Weitergabe an Kunden zwecks Internetnutzung 
bedarf der vorherigen individuellen Vereinbarung mit dem ISST.</duties> 

 127



 

            <warranty>Das ISST garantiert nicht, dass die Datenprodukte den Bedürfnissen oder Erwartungen des Endnutzers 
entsprechen werden. Da die Datenprodukte u.a. auch aus öffentlichen Verzeichnissen und Registern zusammengestllt 
werden, kann das ISST trotz ständiger Vergleichskontrollen die Richtigkeit und Vollständigkeit nicht 
gewährleisten.</warranty> 
            <generalProvisions>Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, 
so wird dadurch die Gültigkeit der übrigen Bestimmungen nicht berührt. Die Parteien sind in diesem Falle verpflichtet, die 
unwirksame Bestimmung durch eine solche zu ersetzten, die den beiderseitigen Interessen und dem wirtschaftlichen 
Zweck weitestgehend gerecht wird. Mündliche Nebenabreden haben die Parteien nicht getroffen. Sämtliche änderungen 
und Ergänzungen dieser Vereinbarung befürfen der Schriftform. Auf alle Rechtsbeziehungen zu uns findet ausschliesslich 
deutsches Recht Anwendung.</generalProvisions> 

          </licensing> 

      </inheritance> 
      <calculation> 
        <declarationList> 
          <referencedParameters> 

              <variableDescr lang="de">Preis</variableDescr> 
              <variableOrigin originName="price"> 
                <originId>*</originId> 
              </variableOrigin> 
              <variableValue>2</variableValue> 
              <variableUnit textstyle="Euro"> 
                <math> 

                    <ci>Euro</ci> 
                  </apply> 
                </math> 
              </variableUnit> 
            </parameter> 
          </referencedParameters> 
          <resultParameters> 
            <parameter name="price" type="real"> 
              <variableDescr lang="de">Preis</variableDescr> 
              <variableValue>986300.00</variableValue> 
              <variableUnit textstyle="Euro"> 
                <math> 
                  <apply> 
                    <ci>Euro</ci> 
                  </apply> 
                </math> 
              </variableUnit> 
            </parameter> 

        </declarationList> 
        <formulae> 
          <function name="Gesamtsumme"> 
            <outParameterList> 
              <parameterName>singlePrice</parameterName> 

            <inParameterList> 

            < >Ist der Kunde Vollkaufmann, so wird für alle Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als jurisdiction
jurisdiction

resultParameters

outParameterList

operation

Gerichtsstand vereinbart.</ > 

        </contractInformation> 

            <parameter name="singlePrice" type="real"> 

                  <apply> 

          </ > 

            </ > 

              <parameterName>price</parameterName> 
            </inParameterList> 
            < > 
              <math> 
                <apply> 
                  <eq/> 

                  <apply> 
                    <sum/> 

                  <ci>price</ci> 

                    <bvar>singlePrice</bvar> 

 128 



 

                    <ci>singlePrice</ci> 
                    <!--ci>singlePrice</ci--> 
 
                  </ > apply

apply
math

product

contractInformation

                </ > 
              </ > 
            </operation> 
          </function> 
        </formulae> 
      </calculation> 
      < ="1005">  id
        <title>GDMS Demo</title> 
        <abstract>GDMS Demo</abstract> 
        < > 
          <supplier> 
            <supplierId>de.lverma-bb</supplierId> 
            <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
            <address role="supplier"> 
              <name>Landesvermessungsamt Brandenburg</name> 
              <name2/> 
              <contact>Kundendienst</contact> 
              <street>Am Vermessungsamt 1</street> 
              <zip>44227</zip> 
              <city>Potsdam</city> 
              <country>Germany</country> 
              <phone>+49 231 97 00 7 00</phone> 
              <fax>+49 231 97 00 798</fax> 
              <email>info@lverm-bb.de</email> 
              <url>http://www.lverm-bb.de</url> 
            </address> 
          </supplier> 
          <licensing licensingCat="de.lverma-bb"> 
            <rightsOfUse>Die Institution ISST gewährt der Partnerfirma eine unbefristete, nicht ausschliessliche, 
eingeschränkte Nutzung. Hierzu räumt das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu 
speichern, zu bearbeiten, zu kopieren und ausschliesslich im Internet zu nutzen. Die Demodaten sind ausschliesslich zu 
eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung für Dritte ist ausgeschlossen. Die Nutzungsrechte beziehen 
sich ausschliesslich auf die Nutzing der o.g. Daten.</rightsOfUse> 
            <copyright>Das ISST versichert, dass an den von ISST zur Verfügung gestellten Daten keine Rechte Dritter im 
Sinner eines Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit 
von Ansprüchen Dritter frei. Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu 
einer anderen Auffassung kommen, haftet das ISST nicht.</copyright> 
            <devolution>Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu 
übertragen, sofern dies nicht ausdrücklich genhemigt ist. Für den Fall der Zuwiderhandlung gegen das vorstehende 
Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 50.000,- zu zahlen.</devolution> 
            <duties>Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft 
einzurichten und aufrecht zu halten. Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden 
Voraussetzungen : - Quellenangabe : © ? ? Jahr ? ? ISST, Berlin/Dortmund - Link auf die Homepage vom ISST : 
www.isst.fhg.de - Schutz der Daten gegen Auslesen / Downloaden Eine Weitergabe an Kunden zwecks Internetnutzung 
bedarf der vorherigen individuellen Vereinbarung mit dem ISST.</duties> 
            <warranty>Das ISST garantiert nicht, dass die Datenprodukte den Bedürfnissen oder Erwartungen des Endnutzers 
entsprechen werden. Da die Datenprodukte u.a. auch aus öffentlichen Verzeichnissen und Registern zusammengestllt 
werden, kann das ISST trotz ständiger Vergleichskontrollen die Richtigkeit und Vollständigkeit nicht 
gewährleisten.</warranty> 
            <generalProvisions>Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, 
so wird dadurch die Gültigkeit der übrigen Bestimmungen nicht berührt. Die Parteien sind in diesem Falle verpflichtet, die 
unwirksame Bestimmung durch eine solche zu ersetzten, die den beiderseitigen Interessen und dem wirtschaftlichen 
Zweck weitestgehend gerecht wird. Mündliche Nebenabreden haben die Parteien nicht getroffen. Sämtliche änderungen 
und Ergänzungen dieser Vereinbarung befürfen der Schriftform. Auf alle Rechtsbeziehungen zu uns findet ausschliesslich 
deutsches Recht Anwendung.</generalProvisions> 
            <jurisdiction>Ist der Kunde Vollkaufmann, so wird für alle Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als 
Gerichtsstand vereinbart.</jurisdiction> 
          </licensing> 
        </contractInformation> 

 129



 

        <calculation> 
          <declarationList> 
            <predefinedParameters> 
              <parameter name="Format" type="string"> 
                <variableDescr lang="de">Ausgabeformat fuer TK25 (JPG)</variableDescr> 
                <variableValue condition="JPG">JPG</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="productName" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableValue>TK25</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="pricePerSurface" type="real"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableValue>10</variableValue> 
                <variableUnit textstyle="EUR"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ProductName" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>LUPA</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ProductId" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>1005</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ArticleName" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 

 130 



 

                <variableValue>101043080</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ArticleId" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>1005-01</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </predefinedParameters> 
            <configurationParameters> 
              <parameter name="xmin" type="real"> 
                <variableDescr lang="de">Westliche Begrenzung</variableDescr> 
                < >server</ > variableGroup variableGroup
                <variableValue>1</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ymin" type="real"> 
                <variableDescr lang="de">Südliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>2</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="xmax" type="real"> 
                <variableDescr lang="de">Östliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>3</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ymax" type="real"> 
                <variableDescr lang="de">Nördliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>4</variableValue> 

 131



 

                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="height" type="real"> 
                <variableDescr lang="">Höhe der Karte</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>5</variableValue> 
                <variableUnit textstyle="Pixel"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="width" type="real"> 
                <variableDescr lang="">Breite der Karte</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>6</variableValue> 
                <variableUnit textstyle="Pixel"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </configurationParameters> 
            <precalculatedParameters> 
              <parameter name="bboxarea" type="real"> 
                <variableDescr lang="de">Bestellte Flaeche</variableDescr> 
                <variableDescr lang="en">Order Area</variableDescr> 
                <variableValue>24601.0</variableValue> 
                <variableUnit textstyle="km²"> 
                  <math> 
                    <apply> 
                      <power/> 
                      <ci>km</ci> 
                      <cn>2</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </precalculatedParameters> 
            <resultParameters> 
              <parameter name="price" type="real"> 
                <variableDescr lang="de">Preis</variableDescr> 
                <variableValue>246010.00</variableValue> 
                <variableUnit textstyle="Euro"> 
                  <math> 
                    <apply> 
                      <ci>Euro</ci> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </resultParameters> 
          </declarationList> 

 132 



 

          <formulae> 
            <function name="flaechenberechnung"> 
              <outParameterList> 
                <parameterName>xmin</parameterName> 
                <parameterName>xmax</parameterName> 
                <parameterName>ymin</parameterName> 
                <parameterName>ymax</parameterName> 
              </outParameterList> 
              <inParameterList> 
                <parameterName>bboxarea</parameterName> 
              </inParameterList> 
              <operation> 
                <DCPType> 
                  <HTTP> 
                    <Get> 
                      <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://localhost:8761/xcpfwscSurfaceCalculation/servlet/xcpfwscSurfaceCalculation.XmlRpcServerBase/calcula
te"></OnlineResource> 
                    </Get> 
                  </HTTP> 
                </DCPType> 
              </operation> 
            </function> 
            <function name="Hauptformel"> 
              <outParameterList> 
                <parameterName>bboxarea</parameterName> 
              </outParameterList> 
              <inParameterList> 
                <parameterName>price</parameterName> 
              </inParameterList> 
              <operation> 
                <math> 
                  <apply> 
                    <eq/> 
                    <ci>price</ci> 
                    <apply> 
                      <times/> 
                      <ci>bboxarea</ci> 
                      <ci>pricePerSurface</ci> 
                    </apply> 
                  </apply> 
                </math> 
              </operation> 
            </function> 
          </formulae> 
        </calculation> 
      </product> 
      <product id="http://xtra.interactive-instruments.de/cgi-bin/XtraWMS"> 
        <title>http://xtra.interactive-instruments.de/cgi-bin/XtraWMS</title> 
        <abstract>http://xtra.interactive-instruments.de/cgi-bin/XtraWMS</abstract> 
        <contractInformation> 
          <supplier> 
            <supplierId>de.lverma-bb</supplierId> 
            <supplierName>Landesvermessungsamt Brandenburg</supplierName> 
            <address role="supplier"> 
              <name>Landesvermessungsamt Brandenburg</name> 
              <name2/> 
              <contact>Kundendienst</contact> 
              <street>Am Vermessungsamt 1</street> 
              <zip>44227</zip> 
              <city>Potsdam</city> 
              <country>Germany</country> 
              <phone>+49 231 97 00 7 00</phone> 

 133



 

              <fax>+49 231 97 00 798</fax> 
              <email>info@lverm-bb.de</email> 
              <url>http://www.lverm-bb.de</url> 
            </address> 
          </supplier> 
          <licensing licensingCat="de.lverma-bb"> 
            <rightsOfUse>Die Institution ISST gewährt der Partnerfirma eine unbefristete, nicht ausschliessliche, 
eingeschränkte Nutzung. Hierzu räumt das ISST einer Partnerfirma das Recht ein, die Demodaten in Datenbanken zu 
speichern, zu bearbeiten, zu kopieren und ausschliesslich im Internet zu nutzen. Die Demodaten sind ausschliesslich zu 
eigenen Nutzung bestimmt. Der Erwerb oder Dienstleistung für Dritte ist ausgeschlossen. Die Nutzungsrechte beziehen 
sich ausschliesslich auf die Nutzing der o.g. Daten.</rightsOfUse> 
            <copyright>Das ISST versichert, dass an den von ISST zur Verfügung gestellten Daten keine Rechte Dritter im 
Sinner eines Datenbankurheberrechtsschutzes gem. § 87 a ff. UrhG bestehen. Das ISSt stellt der Partnerfirma insoweit 
von Ansprüchen Dritter frei. Sollte ein ordentliches Gericht oder ein gerichtlicher oder aussergerichtlicher Vergleich zu 
einer anderen Auffassung kommen, haftet das ISST nicht.</copyright> 
            <devolution>Die Partnerfirma ist nicht berechtigt, Aufgaben und Pflichten aus dieser Vereinbarung auf Dritte zu 
übertragen, sofern dies nicht ausdrücklich genhemigt ist. Für den Fall der Zuwiderhandlung gegen das vorstehende 
Verbot hat die Partnerfirma ISST eine Vertragsstrafe von DM 50.000,- zu zahlen.</devolution> 
            <duties>Die Parnerfirma verpflichtet sich, auf ihrer Homepage inen Link zur Homepage vom ISST dauerhaft 
einzurichten und aufrecht zu halten. Die Nutzung der Daten im Internet gestattet ISST der Parnerfirma unter folgenden 
Voraussetzungen : - Quellenangabe : © ? ? Jahr ? ? ISST, Berlin/Dortmund - Link auf die Homepage vom ISST : 
www.isst.fhg.de - Schutz der Daten gegen Auslesen / Downloaden Eine Weitergabe an Kunden zwecks Internetnutzung 
bedarf der vorherigen individuellen Vereinbarung mit dem ISST.</duties> 
            <warranty>Das ISST garantiert nicht, dass die Datenprodukte den Bedürfnissen oder Erwartungen des Endnutzers 
entsprechen werden. Da die Datenprodukte u.a. auch aus öffentlichen Verzeichnissen und Registern zusammengestllt 
werden, kann das ISST trotz ständiger Vergleichskontrollen die Richtigkeit und Vollständigkeit nicht 
gewährleisten.</warranty> 
            <generalProvisions>Sollte eine der vorstehenden Bestimmungen aus irgendeinem Rechtsgrund unwirksam sein, 
so wird dadurch die Gültigkeit der übrigen Bestimmungen nicht berührt. Die Parteien sind in diesem Falle verpflichtet, die 
unwirksame Bestimmung durch eine solche zu ersetzten, die den beiderseitigen Interessen und dem wirtschaftlichen 
Zweck weitestgehend gerecht wird. Mündliche Nebenabreden haben die Parteien nicht getroffen. Sämtliche änderungen 
und Ergänzungen dieser Vereinbarung befürfen der Schriftform. Auf alle Rechtsbeziehungen zu uns findet ausschliesslich 
deutsches Recht Anwendung.</generalProvisions> 
            <jurisdiction>Ist der Kunde Vollkaufmann, so wird für alle Rechtsstreitigkeiten aus dieser Vereinbarung Berlin als 
Gerichtsstand vereinbart.</jurisdiction> 
          </licensing> 
        </contractInformation> 
        <calculation> 
          <declarationList> 
            <predefinedParameters> 
              <parameter name="Format" type="string"> 
                <variableDescr lang="de">Ausgabeformat fuer TK25 (JPG)</variableDescr> 
                <variableValue condition="JPG">JPG</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="productName" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableValue>TK25</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="pricePerSurface" type="real"> 

 134 



 

                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableValue>10</variableValue> 
                <variableUnit textstyle="EUR"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ProductName" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>LUPA</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ProductId" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>1005</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ArticleName" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>101043080</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ArticleId" type="string"> 
                <variableDescr lang="de">ProduktName aus MIS</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>1005-01</variableValue> 
                <variableUnit textstyle=""> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </predefinedParameters> 
            <configurationParameters> 
              <parameter name="xmin" type="real"> 
                <variableDescr lang="de">Westliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 

 135



 

                <variableValue>2465148.7644131454</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ymin" type="real"> 
                <variableDescr lang="de">Südliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>5576452</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="xmax" type="real"> 
                <variableDescr lang="de">Östliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>2764016.1155868545</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="ymax" type="real"> 
                <variableDescr lang="de">Nördliche Begrenzung</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>5824151.4</variableValue> 
                <variableUnit textstyle="UTM Koordinaten"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="height" type="real"> 
                <variableDescr lang="">Höhe der Karte</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>426</variableValue> 
                <variableUnit textstyle="Pixel"> 
                  <math> 
                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
              <parameter name="width" type="real"> 
                <variableDescr lang="">Breite der Karte</variableDescr> 
                <variableGroup>server</variableGroup> 
                <variableValue>514</variableValue> 
                <variableUnit textstyle="Pixel"> 
                  <math> 

 136 



 

                    <apply> 
                      <cn>1</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </configurationParameters> 
            <precalculatedParameters> 
              <parameter name="bboxarea" type="real"> 
                <variableDescr lang="de">Bestellte Flaeche</variableDescr> 
                <variableDescr lang="en">Order Area</variableDescr> 
                <variableValue>74029.0</variableValue> 
                <variableUnit textstyle="km²"> 
                  <math> 
                    <apply> 
                      <power/> 
                      <ci>km</ci> 
                      <cn>2</cn> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </precalculatedParameters> 
            <resultParameters> 
              <parameter name="price" type="real"> 
                <variableDescr lang="de">Preis</variableDescr> 
                <variableValue>740290.00</variableValue> 
                <variableUnit textstyle="Euro"> 
                  <math> 
                    <apply> 
                      <ci>Euro</ci> 
                    </apply> 
                  </math> 
                </variableUnit> 
              </parameter> 
            </resultParameters> 
          </declarationList> 
          <formulae> 
            <function name="flaechenberechnung"> 
              <outParameterList> 
                <parameterName>xmin</parameterName> 
                <parameterName>xmax</parameterName> 
                <parameterName>ymin</parameterName> 
                <parameterName>ymax</parameterName> 
              </outParameterList> 
              <inParameterList> 
                <parameterName>bboxarea</parameterName> 
              </inParameterList> 
              <operation> 
                <DCPType> 
                  <HTTP> 
                    <Get> 
                      <OnlineResource xmlns:xlink="http://www.w3.org/1999/xlink" xlink:type="simple" 
xlink:href="http://localhost:8761/xcpfwscSurfaceCalculation/servlet/xcpfwscSurfaceCalculation.XmlRpcServerBase/calcula
te"></OnlineResource> 
                    </Get> 
                  </HTTP> 
                </DCPType> 
              </operation> 
            </function> 
            <function name="Hauptformel"> 
              <outParameterList> 
                <parameterName>bboxarea</parameterName> 

 137



 

              </outParameterList> 
              <inParameterList> 
                <parameterName>price</parameterName> 
              </inParameterList> 
              <operation> 
                <math> 
                  <apply> 
                    <eq/> 
                    <ci>price</ci> 
                    <apply> 
                      <times/> 
                      <ci>bboxarea</ci> 
                      <ci>pricePerSurface</ci> 
                    </apply> 
                  </apply> 
                </math> 
              </operation> 
            </function> 
          </formulae> 
        </calculation> 
      </product> 
    </productGroup> 
  </xcpfCatalog> 
</xcpfEnvelope> 
 
 

 

 138 



 

5 XCPF Schema 
 

<?xml version="1.0" encoding="ISO-8859-1"?> 
<!-- edited with XML Spy v4.1 U (http://www.xmlspy.com) by Hr. Wagner (Fraunhofer Institut Software u. Systemtechnik) --
> 
<!--W3C Schema generated by XML Spy v4.1 U (http://www.xmlspy.com)--> 
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" 
elementFormDefault="qualified"> 
 <!--====================Main structur====================--> 
 <xs:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/> 
 <xs:element name="xcpfEnvelope"> 
  <xs:annotation> 
   <xs:documentation>Envelope for multiple catalogs, e.g. cascading</xs:documentation> 
  </xs:annotation> 
  <xs:complexType> 
   <xs:sequence> 
    <xs:element ref="calculation"/> 
    <xs:element name="xcpfCatalog" maxOccurs="unbounded"> 
     <xs:annotation> 
      <xs:documentation>Each supplier may have an own pricing catalog, wherein most standard 
entries may be inherited, e.g. contact address or licensing information</xs:documentation> 
     </xs:annotation> 
     <xs:complexType> 
      <xs:sequence> 
       <xs:element ref="productStatusList" minOccurs="0"/> 
       <xs:element name="generatorInfo" type="xs:string" minOccurs="0"> 
        <xs:annotation> 
         <xs:documentation>The editor or other information may be written down in this 
textfield</xs:documentation> 
        </xs:annotation> 
       </xs:element> 
       <xs:element name="xcpfVer" type="xs:string" minOccurs="0"> 
        <xs:annotation> 
         <xs:documentation>Contains the used version of the XML complex Configuration 
&amp; Pricing Format</xs:documentation> 
        </xs:annotation> 
       </xs:element> 
       <xs:element ref="transactionNumber" minOccurs="0"/> 
       <xs:element ref="inheritance" minOccurs="0"/> 
       <xs:element ref="calculation"/> 
       <xs:element ref="productGroup" maxOccurs="unbounded"/> 
      </xs:sequence> 
      <xs:attribute name="id" type="xs:string" use="required"/> 
      <xs:attribute name="name" type="xs:string"/> 
     </xs:complexType> 
    </xs:element> 
   </xs:sequence> 
   <xs:attribute name="id" type="xs:string" use="required"/> 
   <xs:attribute name="name" type="xs:string"/> 
  </xs:complexType> 
 </xs:element> 
 <xs:complexType name="productGroupType"> 
  <xs:sequence> 
   <xs:element ref="productStatusList" minOccurs="0"/> 
   <xs:element ref="title" minOccurs="0"/> 
   <xs:element ref="abstract" minOccurs="0"/> 
   <xs:element ref="transactionNumber" minOccurs="0"/> 
   <xs:element ref="offerDuration" minOccurs="0"/> 
   <xs:element ref="inheritance" minOccurs="0"/> 
   <xs:element ref="calculation"/> 

 139



 

   <xs:element name="product" type="productType" minOccurs="0" maxOccurs="unbounded"> 
    <xs:annotation> 
     <xs:documentation>Important structure of the smallest unit, which has a complete calculation 
environment. 
The product block corresponds directly to data product and to its metadata</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
   <xs:element ref="productGroup" minOccurs="0" maxOccurs="unbounded"/> 
  </xs:sequence> 
  <xs:attribute name="id" type="xs:string" use="required"/> 
  <xs:attribute name="name" type="xs:string"/> 
 </xs:complexType> 
 <xs:complexType name="productType"> 
  <xs:sequence> 
   <xs:element ref="productStatusList" minOccurs="0"/> 
   <xs:element ref="title"/> 
   <xs:element ref="abstract" minOccurs="0"/> 
   <xs:element ref="transactionNumber" minOccurs="0"/> 
   <xs:element ref="offerDuration" minOccurs="0"/> 
   <xs:element ref="contractInformation" minOccurs="0"/> 
   <xs:element ref="calculation"/> 
  </xs:sequence> 
  <xs:attribute name="id" type="xs:string" use="required"/> 
  <xs:attribute name="name" type="xs:string"/> 
 </xs:complexType> 
 <!--====================Contract information====================--> 
 <xs:complexType name="addressType"> 
  <xs:sequence> 
   <xs:element name="name" type="xs:string"> 
    <xs:annotation> 
     <xs:documentation>Name of person or institution.</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
   <xs:element name="name2" type="xs:string" minOccurs="0"> 
    <xs:annotation> 
     <xs:documentation>Space for additional names.</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
   <xs:element name="contact" type="xs:string" minOccurs="0"> 
    <xs:annotation> 
     <xs:documentation>This field may be use for personal names in institutions.</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
   <xs:element name="street" type="xs:string"/> 
   <xs:element name="zip" type="xs:string"/> 
   <xs:element name="city" type="xs:string"/> 
   <xs:element name="country" type="xs:string"/> 
   <xs:element name="phone" type="xs:string" minOccurs="0"/> 
   <xs:element name="fax" type="xs:string" minOccurs="0"/> 
   <xs:element name="email" type="xs:string" minOccurs="0"/> 
   <xs:element name="url" type="xs:string" minOccurs="0"/> 
  </xs:sequence> 
  <xs:attribute name="role" use="required"> 
   <xs:simpleType> 
    <xs:restriction base="xs:NMTOKEN"> 
     <xs:enumeration value="customer"/> 
     <xs:enumeration value="supplier"/> 
    </xs:restriction> 
   </xs:simpleType> 
  </xs:attribute> 
  <xs:attribute name="type"> 
   <xs:simpleType> 
    <xs:restriction base="xs:NMTOKEN"> 

 140 



 

     <xs:enumeration value="billing"/> 
     <xs:enumeration value="default"/> 
     <xs:enumeration value="delivery"/> 
    </xs:restriction> 
   </xs:simpleType> 
  </xs:attribute> 
 </xs:complexType> 
 <xs:complexType name="contractInformationType"> 
  <xs:sequence> 
   <xs:element name="supplier"> 
    <xs:annotation> 
     <xs:documentation>The party who is offering data products must be public.</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element name="supplierId" type="xs:string"> 
       <xs:annotation> 
        <xs:documentation>This ID may help to process orders and can help in a distributed 
environment an in the case of different spelling of names and addresses.</xs:documentation> 
       </xs:annotation> 
      </xs:element> 
      <xs:element name="supplierName" type="xs:string"> 
       <xs:annotation> 
        <xs:documentation>Short name of the data supplier.</xs:documentation> 
       </xs:annotation> 
      </xs:element> 
      <xs:element ref="address"/> 
     </xs:sequence> 
    </xs:complexType> 
   </xs:element> 
   <xs:element name="customer" minOccurs="0"> 
    <xs:annotation> 
     <xs:documentation>In opposite to the supplier, the customer may be anonymous until he orders with 
the WPOS method "orderproduct".</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element name="customerId" type="xs:string"> 
       <xs:annotation> 
        <xs:documentation>Even customer must have an account ID. This is necessary to link the 
stack of orders to a customer.</xs:documentation> 
       </xs:annotation> 
      </xs:element> 
      <xs:element name="customerName" type="xs:string"> 
       <xs:annotation> 
        <xs:documentation>Short name of customer.</xs:documentation> 
       </xs:annotation> 
      </xs:element> 
      <xs:element ref="address" maxOccurs="unbounded"/> 
     </xs:sequence> 
    </xs:complexType> 
   </xs:element> 
   <xs:element name="licensing"> 
    <xs:annotation> 
     <xs:documentation>Each licensing entry must have an ID. In future, this ID may stand for a special 
group of licensing, which may be processed automatically.</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element name="rightsOfUse" type="xs:string"> 
       <xs:annotation> 
        <xs:documentation>Licensing term</xs:documentation> 
       </xs:annotation> 

 141



 

      </xs:element> 
      <xs:element name="copyright" type="xs:string"/> 
      <xs:element name="devolution" type="xs:string"/> 
      <xs:element name="duties" type="xs:string"/> 
      <xs:element name="warranty" type="xs:string"/> 
      <xs:element name="generalProvisions" type="xs:string"/> 
      <xs:element name="jurisdiction" type="xs:string"/> 
     </xs:sequence> 
     <xs:attribute name="licensingCat" type="xs:string" use="required"/> 
    </xs:complexType> 
   </xs:element> 
  </xs:sequence> 
 </xs:complexType> 
 <!--====================Calculation elements====================--> 
 <xs:complexType name="calculationType"> 
  <xs:sequence> 
   <xs:element name="declarationList"> 
    <xs:annotation> 
     <xs:documentation>Parameter need to be declared prior processing.  The input and output workflows 
can be determined by using categories.</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element name="predefinedParameters" minOccurs="0"> 
       <xs:annotation> 
        <xs:documentation>Some parameters are necessary for the processing, but are constant, 
e.g. tax. These parameter can be declared as "predefined".</xs:documentation> 
       </xs:annotation> 
       <xs:complexType> 
        <xs:sequence> 
         <xs:element ref="parameter" minOccurs="0" maxOccurs="unbounded"/> 
        </xs:sequence> 
       </xs:complexType> 
      </xs:element> 
      <xs:element name="configurationParameters" minOccurs="0"> 
       <xs:annotation> 
        <xs:documentation>Other parameter values need to be set by user. All these parameters 
will be visualized. Some of these may be used for pricing, e.g. Contract time, other may be used for data generation, e.g. 
style=red and some for both, e.g. data format= dxf.</xs:documentation> 
       </xs:annotation> 
       <xs:complexType> 
        <xs:sequence> 
         <xs:element ref="parameter" minOccurs="0" maxOccurs="unbounded"/> 
        </xs:sequence> 
       </xs:complexType> 
      </xs:element> 
      <xs:element name="referencedParameters" minOccurs="0"> 
       <xs:annotation> 
        <xs:documentation>NOTE: Only used in productGroup!  
 
This parameter group is needed for hierarchical calculations, where parameter values of previous calculated values can 
be accessed.  
 
An often used example is the sum, where in previous prices are summarized.</xs:documentation> 
       </xs:annotation> 
       <xs:complexType> 
        <xs:sequence> 
         <xs:element ref="parameter" minOccurs="0" maxOccurs="unbounded"/> 
        </xs:sequence> 
       </xs:complexType> 
      </xs:element> 
      <xs:element name="precalculatedParameters" minOccurs="0"> 
       <xs:annotation> 

 142 



 

        <xs:documentation>This kind of parameter are being used as sub functions. These 
functions may be mathematical operations or XCPF Web Service Calls (XCPF-WSC) and have only values at runtime.  
The XCPF-WSC are useful for access to mass storage, for complex calculations or for actual data. 
They are results of functions.  
 
An often used example is the calculation of a surface of a polygon.</xs:documentation> 
       </xs:annotation> 
       <xs:complexType> 
        <xs:sequence> 
         <xs:element ref="parameter" minOccurs="0" maxOccurs="unbounded"/> 
        </xs:sequence> 
       </xs:complexType> 
      </xs:element> 
      <xs:element name="resultParameters"> 
       <xs:annotation> 
        <xs:documentation>This textfield contains the parameter for the final result of all 
calculations. 
 
An example is: price</xs:documentation> 
       </xs:annotation> 
       <xs:complexType> 
        <xs:sequence> 
         <xs:element ref="parameter" minOccurs="0"/> 
        </xs:sequence> 
       </xs:complexType> 
      </xs:element> 
     </xs:sequence> 
    </xs:complexType> 
   </xs:element> 
   <xs:element name="formulae"> 
    <xs:annotation> 
     <xs:documentation>All declared parameters may be processed by formulae in this 
block</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element name="function" maxOccurs="unbounded"> 
       <xs:annotation> 
        <xs:documentation>The calculations may use several sub function or XPCF web Service 
Calls (XCPF-WSC) and a main function, which result need to be mapped to a parameter declared in the 
"resultParameters" block</xs:documentation> 
       </xs:annotation> 
       <xs:complexType> 
        <xs:sequence> 
         <xs:element name="outParameterList"> 
          <xs:annotation> 
           <xs:documentation>This list contains all parameters, which will be used in the 
formula or in the Web Service Call</xs:documentation> 
          </xs:annotation> 
          <xs:complexType> 
           <xs:sequence> 
            <xs:element ref="parameterName" minOccurs="0" 
maxOccurs="unbounded"/> 
           </xs:sequence> 
          </xs:complexType> 
         </xs:element> 
         <xs:element name="inParameterList"> 
          <xs:annotation> 
           <xs:documentation>This list contains the returned parameters, which are the 
results</xs:documentation> 
          </xs:annotation> 
          <xs:complexType> 
           <xs:sequence> 

 143



 

            <xs:element ref="parameterName" minOccurs="0" 
maxOccurs="unbounded"/> 
           </xs:sequence> 
          </xs:complexType> 
         </xs:element> 
         <xs:element name="operation"> 
          <xs:annotation> 
           <xs:documentation>The operation Block contains a: 
-mathematical forumula or a 
-XCPF Web Service Call Url</xs:documentation> 
          </xs:annotation> 
          <xs:complexType> 
           <xs:choice> 
            <xs:element ref="math"/> 
            <xs:element name="DCPType"> 
             <xs:annotation> 
              <xs:documentation>XCPF Web Service Call for external 
processing</xs:documentation> 
             </xs:annotation> 
             <xs:complexType> 
              <xs:sequence> 
               <xs:element name="HTTP"> 
                <xs:complexType> 
                 <xs:sequence> 
                  <xs:element name="Get"> 
                   <xs:annotation> 
                    <xs:documentation>HTTP Get 
Method</xs:documentation> 
                   </xs:annotation> 
                   <xs:complexType> 
                    <xs:sequence> 
                     <xs:element 
name="OnlineResource"> 
                      <xs:annotation> 
                      
 <xs:documentation>URL, e.g. http://www.geo-ebusiness.de</xs:documentation> 
                      </xs:annotation> 
                      <xs:complexType> 
                       <xs:attribute 
ref="xlink:type" fixed="simple"/> 
                       <xs:attribute 
ref="xlink:href" use="required"/> 
                      </xs:complexType> 
                     </xs:element> 
                    </xs:sequence> 
                   </xs:complexType> 
                  </xs:element> 
                 </xs:sequence> 
                </xs:complexType> 
               </xs:element> 
              </xs:sequence> 
             </xs:complexType> 
            </xs:element> 
           </xs:choice> 
          </xs:complexType> 
         </xs:element> 
        </xs:sequence> 
        <xs:attribute name="name" type="xs:string"/> 
       </xs:complexType> 
      </xs:element> 
     </xs:sequence> 
    </xs:complexType> 
   </xs:element> 

 144 



 

  </xs:sequence> 
 </xs:complexType> 
 <xs:element name="calculation" type="calculationType"> 
  <xs:annotation> 
   <xs:documentation>Because of rebates, taxes or other pricing mechanisms, pricing models may be adjusted 
with a formula on each hierarchical step of the pricing catalog; At least, a simple sum formula must be 
calculated</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:complexType name="parameterType"> 
  <xs:sequence> 
   <xs:element name="variableDescr" maxOccurs="unbounded"> 
    <xs:annotation> 
     <xs:documentation>Each parameter has a logical name. But at least for language reasons several 
different descriptions are useful. These descriptions may use white spaces and can contain 
sentences.</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:simpleContent> 
      <xs:extension base="xs:string"> 
       <xs:attribute name="lang" type="xs:string" use="required"/> 
      </xs:extension> 
     </xs:simpleContent> 
    </xs:complexType> 
   </xs:element> 
   <xs:element name="variableGroup" type="xs:string" minOccurs="0" maxOccurs="unbounded"> 
    <xs:annotation> 
     <xs:documentation>Typical some parameters may be used for some reasons as groups. The group 
relationship will be expressed by equal strings in the variableGroup field. 
Parameter may belong to more groups, e.g. for "pricing" and for generation "geoserver". 
 
An example is the use of a set of parameters for data generation. These parameters should contain a string, e.g. 
"geoserver". All the parameters with that string may be filtered and transferred to geo data generation 
server.</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
   <xs:element name="variableOrigin" minOccurs="0"> 
    <xs:annotation> 
     <xs:documentation>NOTE: Variable Origin will only be used in "referencedParameters" blocks. The 
required attribute "orginName" contains the original name of a low hierarchical parameter. 
 
Referenced parameter can be used in to ways: 
-Multiple Reference with lists of parameter values 
-Single Reference 
 
An often used multiple example is the price calculation, which refer to the list of all previous results.</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element name="originId" type="xs:string"> 
       <xs:annotation> 
        <xs:documentation>Multiple references need a "*" as a wildcard for all parameter values 
with the in variable Origin used names, not depending on product entries</xs:documentation> 
       </xs:annotation> 
      </xs:element> 
     </xs:sequence> 
     <xs:attribute name="originName" type="xs:string" use="required"/> 
    </xs:complexType> 
   </xs:element> 
   <xs:element name="variableValue" minOccurs="0" maxOccurs="unbounded"> 
    <xs:annotation> 
     <xs:documentation>The need for a value is depending on the parametergroup of the declarationList: 
-predefinedParameters must a value, because they are constant 

 145



 

-configurationParameters may have a value as a default 
-referencedParameters do not have a value 
-calcuationParameters do not have a value 
-resultParameters do not have a value</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:simpleContent> 
      <xs:extension base="xs:string"> 
       <xs:attribute name="condition" type="xs:string"/> 
       <xs:attribute name="selected" type="xs:string"/> 
      </xs:extension> 
     </xs:simpleContent> 
    </xs:complexType> 
   </xs:element> 
   <xs:element name="variableUnit"> 
    <xs:annotation> 
     <xs:documentation>Units are important for a correct calcuation. Therefore they have to be set in an 
engine processable way with MathML. But it might be neutral with a "1". They attribute textstyle should be used for string 
expressions, which may easly displayed. An example is: km^2</xs:documentation> 
    </xs:annotation> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element ref="math"/> 
     </xs:sequence> 
     <xs:attribute name="textstyle" type="xs:string" use="required"/> 
    </xs:complexType> 
   </xs:element> 
  </xs:sequence> 
  <xs:attribute name="name" type="xs:string" use="required"> 
   <xs:annotation> 
    <xs:documentation source="Source" xml:lang="en">The name of a parameter has the function to access 
the parameter and its values for processing. Therefore it need to "engine readable". That means typically, that it should 
only contain ASCII127 letters. Other letters, like ä,ü or ê may be treated on different computer platforms is a different way. 
White space are not allowed for naming. Names are case-sensitive.</xs:documentation> 
   </xs:annotation> 
  </xs:attribute> 
  <xs:attribute name="type" use="required"> 
   <xs:simpleType> 
    <xs:restriction base="xs:NMTOKEN"> 
     <xs:enumeration value="boolean"/> 
     <xs:enumeration value="integer"/> 
     <xs:enumeration value="real"/> 
     <xs:enumeration value="string"/> 
    </xs:restriction> 
   </xs:simpleType> 
  </xs:attribute> 
 </xs:complexType> 
 <xs:element name="parameter" type="parameterType"> 
  <xs:annotation> 
   <xs:documentation>The parameter object is the basic element for the calculation</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="parameterName" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>All used parameter need to be declared in the declaration List block. Therefore they do 
not be completley redeclared by calling a function, but only be named.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:complexType name="mathType"> 
  <xs:sequence> 
   <xs:element ref="apply"/> 
  </xs:sequence> 
 </xs:complexType> 

 146 



 

 <xs:element name="math" type="mathType"> 
  <xs:annotation> 
   <xs:documentation>MathML block, within this block a subset of MathML is being used. More at 
http://www.w3c.org/math</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="apply" type="applyType"> 
  <xs:annotation> 
   <xs:documentation>MathML: Acts like a mathematical bracket</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:complexType name="applyType"> 
  <xs:choice minOccurs="0" maxOccurs="unbounded"> 
   <xs:element ref="apply"/> 
   <xs:element ref="ci"/> 
   <xs:element ref="cn"/> 
   <xs:element ref="piecewise"/> 
   <xs:element ref="max"/> 
   <xs:element ref="min"/> 
   <xs:element ref="eq"/> 
   <xs:element ref="lt"/> 
   <xs:element ref="gt"/> 
   <xs:element ref="plus"/> 
   <xs:element ref="minus"/> 
   <xs:element ref="sin"/> 
   <xs:element ref="cos"/> 
   <xs:element ref="tan"/> 
   <xs:element ref="power"/> 
   <xs:element ref="times"/> 
   <xs:element ref="divide"/> 
   <xs:element ref="sum"/> 
   <xs:element name="bvar" type="xs:string"> 
    <xs:annotation> 
     <xs:documentation>MathML: bounding variable, used by "sum" operation</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
  </xs:choice> 
 </xs:complexType> 
 <xs:element name="piecewise"> 
  <xs:annotation> 
   <xs:documentation>MathML: mathematical "if..then" operator, example: 
<piecewise> 
     <piece> 
      <apply> 
       <times/> 
       <cn>15.34</cn> 
       <ci>Punktanzahl</ci> 
      </apply> 
      <apply> 
       <lt/> 
       <ci>Punktanzahl</ci> 
       <cn>2</cn> 
      </apply> 
     </piece> 
     <otherwise> 
      <apply> 
       <plus/> 
       <apply> 
        <times/> 
        <cn>15.34</cn> 
        <ci>Punktanzahl</ci> 
       </apply> 
       <apply> 

 147



 

        <times/> 
        <cn>10.23</cn> 
        <apply> 
         <minus/> 
         <ci>Punktanzahl</ci> 
         <cn>1</cn> 
        </apply> 
       </apply> 
      </apply> 
     </otherwise> 
    </piecewise> 
   </xs:documentation> 
  </xs:annotation> 
  <xs:complexType> 
   <xs:sequence> 
    <xs:element name="piece" maxOccurs="unbounded"> 
     <xs:complexType> 
      <xs:sequence> 
       <xs:element ref="plus" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="times" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:choice minOccurs="0" maxOccurs="unbounded"> 
        <xs:element ref="cn"/> 
        <xs:element ref="ci"/> 
       </xs:choice> 
       <xs:element ref="apply" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="gt" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="lt" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="ci" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="cn" minOccurs="0" maxOccurs="unbounded"/> 
      </xs:sequence> 
     </xs:complexType> 
    </xs:element> 
    <xs:element name="otherwise" minOccurs="0"> 
     <xs:complexType> 
      <xs:sequence> 
       <xs:choice minOccurs="0" maxOccurs="unbounded"> 
        <xs:element ref="cn"/> 
        <xs:element ref="ci"/> 
        <xs:element name="apply" type="applyType"/> 
       </xs:choice> 
       <xs:element ref="times" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="ci" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="cn" minOccurs="0" maxOccurs="unbounded"/> 
      </xs:sequence> 
     </xs:complexType> 
    </xs:element> 
   </xs:sequence> 
  </xs:complexType> 
 </xs:element> 
 <xs:element name="cn" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>MathML: Textfield for a number, e.g. 2.2345</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="ci" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>MathML: Textfield for identifier, e.g. "price"</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="gt"> 
  <xs:annotation> 
   <xs:documentation>MathML: "bigger than" operator</xs:documentation> 
  </xs:annotation> 

 148 



 

  <xs:complexType/> 
 </xs:element> 
 <xs:element name="lt"> 
  <xs:annotation> 
   <xs:documentation>MathML: "Smaller then" operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="times"> 
  <xs:annotation> 
   <xs:documentation>MathML: Times operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="divide"> 
  <xs:annotation> 
   <xs:documentation>MathML: Division operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="minus"> 
  <xs:annotation> 
   <xs:documentation>MathML: Minus operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="plus"> 
  <xs:annotation> 
   <xs:documentation>MathML: Plus operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="max"> 
  <xs:annotation> 
   <xs:documentation>MathML: Maximum operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="min"> 
  <xs:annotation> 
   <xs:documentation>MathML: Minimun operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="eq"> 
  <xs:annotation> 
   <xs:documentation>MathML: Equal operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="sin"> 
  <xs:annotation> 
   <xs:documentation>MathML: Sinus operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="cos"> 
  <xs:annotation> 
   <xs:documentation>MathML: Cosinus operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="tan"> 

 149



 

  <xs:annotation> 
   <xs:documentation>MathML: Tangence operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="power"> 
  <xs:annotation> 
   <xs:documentation>MathML: Power operator</xs:documentation> 
  </xs:annotation> 
  <xs:complexType/> 
 </xs:element> 
 <xs:element name="sum" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>MathML: Sumeration operator</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <!--====================other elements====================--> 
 <xs:element name="title" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>Each productGroup may have a title, but each product must have a 
title.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="abstract" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>Abstracts may be used to give some more background information about the 
productGroup or the product. Complete product description may be made in an ISO19115 description and referenced by a 
productId.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="offerDuration" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>Valid timeframe for that offer.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:complexType name="productStatusType"> 
  <xs:sequence> 
   <xs:element name="statusInfo" type="xs:string"> 
    <xs:annotation> 
     <xs:documentation>Textual information about a status.</xs:documentation> 
    </xs:annotation> 
   </xs:element> 
  </xs:sequence> 
  <xs:attribute name="date" type="xs:string" use="required"/> 
  <xs:attribute name="time" type="xs:string" use="required"/> 
  <xs:attribute name="statusCode" use="required"> 
   <xs:simpleType> 
    <xs:restriction base="xs:NMTOKEN"> 
     <xs:enumeration value="createOfOffer"/> 
     <xs:enumeration value="analogDelivery"/> 
     <xs:enumeration value="ordered"/> 
     <xs:enumeration value="orderProcessingFailed"/> 
     <xs:enumeration value="readyForDelivery"/> 
     <xs:enumeration value="delivered"/> 
     <xs:enumeration value="accounting"/> 
     <xs:enumeration value="endOfTransaction"/> 
    </xs:restriction> 
   </xs:simpleType> 
  </xs:attribute> 
 </xs:complexType> 
 <xs:complexType name="productStatusListType"> 
  <xs:sequence> 
   <xs:element ref="productStatus"/> 

 150 



 

   <xs:element name="statusHistory"> 
    <xs:complexType> 
     <xs:sequence> 
      <xs:element ref="productStatus" minOccurs="0" maxOccurs="unbounded"/> 
     </xs:sequence> 
    </xs:complexType> 
   </xs:element> 
  </xs:sequence> 
 </xs:complexType> 
 <xs:element name="transactionNumber" type="xs:string"> 
  <xs:annotation> 
   <xs:documentation>This number acts as an ID within processing steps. A transactionNumber may target to a 
productGroup, if a processing groups all "product" data files into one, e.g. zip compression, or in a "product", if each 
packet will be delivered separately. 
 
The WPOS "orderProduct" sets a transactionNumber in a XCPF instance and sends it to the client, who will request a data 
product file with the WPOS request "getProduct" and this transaction number.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="inheritance" type="inheritanceType"> 
  <xs:annotation> 
   <xs:documentation>The inheritance method provides a very powerful and useful optimisation for large data 
entries. It may contain most repeated XCPF elements for inheritance, e.g. contract information and calculation blocks. 
Inheritance can be overwritten in following productGroups or products</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:complexType name="inheritanceType"> 
  <xs:sequence> 
   <xs:element ref="title" minOccurs="0"/> 
   <xs:element ref="abstract" minOccurs="0"/> 
   <xs:element ref="contractInformation" minOccurs="0"/> 
   <xs:element ref="calculation" minOccurs="0"/> 
  </xs:sequence> 
 </xs:complexType> 
 <xs:element name="contractInformation" type="contractInformationType"> 
  <xs:annotation> 
   <xs:documentation>Orders can be processed under curtain circumstances, which must be declared in a 
contract.</xs:documentation> 
   <xs:documentation>Orders can be processed under curtain circumstances, which must be declared in a 
contract.</xs:documentation> 
   <xs:documentation>Orders can be processed under curtain circumstances, which must be declared in a 
contract.</xs:documentation> 
   <xs:documentation>Orders can be processed under curtain circumstances, which must be declared in a 
contract.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="address" type="addressType"> 
  <xs:annotation> 
   <xs:documentation>Contact information, 
In the case of a customer use, there might be more entries.</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="productStatus" type="productStatusType"> 
  <xs:annotation> 
   <xs:documentation>Current status with time, date and statuscode attributes. The status changes when a 
WPOS operation is processed</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="productGroup" type="productGroupType"> 
  <xs:annotation> 
   <xs:documentation>With the use of productGroup elements, pricing catalog can be arranged. 
</xs:documentation> 

 151



 

 152 

   <xs:documentation>With the use of productGroup elements, pricing catalog can be arranged. 
</xs:documentation> 
  </xs:annotation> 
 </xs:element> 
 <xs:element name="productStatusList" type="productStatusListType"> 
  <xs:annotation> 
   <xs:documentation>The Web Pricing &amp; Ordering Service uses an instance of the XCPF pricing model to 
store order process information into this status list. </xs:documentation> 
  </xs:annotation> 
 </xs:element> 
</xs:schema> 
 

 

6 Reference 
 

InGeoForum 2000. InGeo-MDF 2.1. InGeoForum,  July 2000 (www.ingeoforum.de) 

Jeff de La Beaujardiere, 2001. Basic Service Model. OpenGIS Consortium, 2001 (www.opengis.org), not 
published yet 

Krek 2000. Alenka Krek: Efficient Pricing of Geo-Marketing Internet Services: European vs. American 
Approach. In: Proceedings of The Spatial Information Society: Shaping the Future, 6th EC-GIS Workshop, Lyon, 
France, June 28-30, 2000 

Holtkamp 2000. Holtkamp, Bernhard: Fraunhofer ISST: GeoMarkt.NRW – Eine E-Commerce-Lösung für 
Geodaten. NÖV – Nachrichten aus dem öffentlichen Vermessungsdienst Nordrhein-Westfalen, Heft 2/2000, 
Innenministerium des Landes Nordrhein-Westfalen, Düsseldorf (An e-Commerce-Solution for Geodata. In: 
„NÖV“ – land surveying office Northrhine Westphalia news, 2/2000, Ministry of the Interior, Düsseldorf) 

OGC 1999-2002. Web Map Server Interface Implementation Specification. Open GIS Consortium, 1999-2002 
(www.opengis.org) 


	Index
	Introduction
	Infrastructure means building bridges
	Case Study: GIS meets e-Business - “GeoMarkt.NRW”
	Business Model
	Portal Model
	Procurement Model
	Integration Model
	Community Model

	Architecture
	Functionally and Requirements
	Suitable Standards, Workflow and the unsolved “Ga

	Open Questions
	
	How to Design an Machine-Readable Data Format for Geo-Domain Specific Business Price Models?
	Which Interface Functions are needed for Pricing and Ordering?
	How to embed the new Components into the existing OGC/ISO Workflow?
	How to Embed Pricing and Ordering Functions into cascaded Architectures?

	Product and Service Description
	Security (AAA)


	Motivation and Benefits
	Class A: Pricing Information
	Class B: Shop
	Class C: Portal
	Class D: Vertical Value Chain

	Geo-eBusiness Service: WPOS/XCPF Specification
	Abstract Design
	Abstract Architecture Principles
	Separation between Data and Logic
	Service Cascading and general Chaining

	Abstract Data Model and Encoding
	Transformation Business Pricing Models into mathematical Formulae
	“Filling the receipt”-Concept and XCPF Methods
	Organization of Products in Groups and Catalogues
	“Product” Elements and the Basic XCPF Process
	“ProductGroup” Elements and the Hierarchical XCPF
	Inheritance Methods and the Inheritance XCPF Process
	Order of XCPF Processes
	External Data Exchange
	Nomadism of XCPF instances

	Abstract Functionality Principles
	Functionality
	Business Protocols vs. technical Protocols
	Protocol Layering Method


	Applied Design
	Applied Data Encoding: XML Configuration & Pricing Format (XCPF)
	XCPF Object “Product”
	XCPF Object “contractInformation”
	XCPF Object “Calculation”
	XCPF Object “parameter”
	XCPF Object “operation”
	XCPF Object “productGroup”
	XCPF Object “Inheritance”
	Main structure axes

	Applied Functionality: Web Pricing & Ordering Service (WPOS)
	Method: GetCapabilities
	HTTP Get Request
	Request Example

	Response
	Response Example Fragment


	Method: GetPriceModel
	HTTP GET Request
	Example

	Response
	Example Fragment


	Method: GetPrice
	HTTP GET Request
	Example HTTP GET Request for unknown Services
	Example HTTP GET Request for known Services without additional Parameters
	Example HTTP GET Request for known Services with additional Parameters

	Response
	Example Response


	Method: OrderProduct
	HTTP GET Request
	Example

	Response

	Method: GetProduct
	HTTP GET Request
	Request example

	Response

	Method: GetOrderList
	Request
	Example




	General XCPF 1.0.0-v6 elements
	element abstract
	element address
	element contractInformation
	element calculation
	element inheritance
	element offerDuration
	element parameter
	element parameterName
	element productStatus
	element productStatusList
	element title
	element transactionNumber
	complexType inheritanceType
	complexType mathType
	complexType productType
	simpleType xlink:actuateEnum
	simpleType xlink:showEnum
	simpleType xlink:typeEnum

	MathML elements
	element math
	complexType applyType
	element applyType/bvar
	element apply
	element ci
	element cn
	element cos
	element divide
	element eq
	element gt
	element lt
	element max
	element min
	element minus
	element plus
	element power
	element sin
	element sum
	element tan
	element times
	element piecewise
	element piecewise/piece
	element piecewise/otherwise
	element piecewise/otherwise/apply

	element xcpfEnvelope
	element xcpfEnvelope/xcpfCatalog
	element xcpfEnvelope/xcpfCatalog/generatorInfo
	element xcpfEnvelope/xcpfCatalog/xcpfVer

	complexType addressType
	element addressType/name
	element addressType/name2
	element addressType/contact
	element addressType/street
	element addressType/zip
	element addressType/city
	element addressType/country
	element addressType/phone
	element addressType/fax
	element addressType/email
	element addressType/url

	complexType calculationType
	element calculationType/declarationList
	element calculationType/declarationList/predefinedParameters
	element calculationType/declarationList/configurationParameters
	element calculationType/declarationList/referencedParameters
	element calculationType/declarationList/precalculatedParameters
	element calculationType/declarationList/resultParameters
	element calculationType/formulae
	element calculationType/formulae/function/outParameterList
	element calculationType/formulae/function/inParameterList
	element calculationType/formulae/function/operation
	element calculationType/formulae/function/operation/DCPType
	element calculationType/formulae/function/operation/DCPType/HTTP
	element calculationType/formulae/function/operation/DCPType/HTTP/Get
	element calculationType/formulae/function/operation/DCPType/HTTP/Get/OnlineResource

	complexType contractInformationType
	element contractInformationType/supplier
	element contractInformationType/supplier/supplierId
	element contractInformationType/supplier/supplierName
	element contractInformationType/customer
	element contractInformationType/customer/customerId
	element contractInformationType/customer/customerName
	element contractInformationType/licensing
	element contractInformationType/licensing/rightsOfUse
	element contractInformationType/licensing/copyright
	element contractInformationType/licensing/devolution
	element contractInformationType/licensing/duties
	element contractInformationType/licensing/warranty
	element contractInformationType/licensing/generalProvisions
	element contractInformationType/licensing/jurisdiction

	complexType parameterType
	element parameterType/variableDescr
	element parameterType/variableGroup
	element parameterType/variableOrigin
	element parameterType/variableOrigin/originId
	element parameterType/variableValue
	element parameterType/variableUnit

	complexType productGroupType
	element productGroup
	element productGroupType/product

	complexType productStatusListType
	element productStatusListType/statusHistory
	complexType productStatusType
	element productStatusType/statusInfo


	Examples Series
	WPOS with Unknown Service Request
	HTTP GET Request GetCapabilities
	GetCapabilities Response
	HTTP GET GetPriceModel Request
	GetPriceModel Response XCPF
	HTTP GET GetPrice Request
	GetPrice Response XCPF
	HTTP GET OrderProduct Request
	OrderProduct Response XCPF

	WPOS with OGC WMS Service Request
	HTTP GET GetPrice Request
	XCPF Response Object


	XCPF Schema
	Reference

