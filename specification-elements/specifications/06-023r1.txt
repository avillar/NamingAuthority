
06-023r1 URN Definitions Folder/06-023r1 URN definitions.doc
OGC 06-023r1

OGC 06-023r1



Open Geospatial Consortium Inc.

Date: 2006-08-08

Reference number of this OGC™ document: 06-023r1

Version: 1.1.0


Category: OGC™ Best Practices Paper

Editor: Arliss Whiteside

Definition identifier URNs in OGC namespace

Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
To obtain additional rights of use, visit http://www.opengeospatial.org/legal/.


Document type:

OGC™ Best Practices Paper

Document subtype:
(none)

Document stage:
Approved Best Practices Paper version 1.1


Document language: 
English

Recipients of this document are invited to submit, with their comments, notification of any relevant patent rights of which they are aware and to provide supporting documentation.


Contents
Page

ivi.
Preface


ii.
Document contributor contact points
iv

iii.
Revision history
v

iv.
Changes to the OGC Abstract Specification
v

v.
Future work
v

Foreword
vi

Introduction
vi

1
Scope
1

2
Conformance
1

3
Normative references
1

4
Terms and definitions
3

5
Conventions
5

5.1
Symbols (and abbreviated terms)
5

5.2
Document terms and definitions
5

6
Background
6

6.1
Definition identifiers
6

6.2
Use for Coordinate Reference Systems
6

6.3
Relationships to other identification schemes
7

6.3.1
URN and URL
7

6.3.2
URN and schema component designators
8

7
OGC URN scheme for definitions
9

7.1
OGC URN scheme
9

7.2
URNs for single objects
9

7.3
URNs for not-completely-specified objects
13

7.4
URNs for combined objects
13

7.4.1
Overview
13

7.4.2
URN combined references for compound coordinate reference systems
15

7.4.3
URN combined references for concatenated operations
15

7.4.4
URN combined references for projected or derived CRSs
15

7.4.5
URN combined references for datum and coordinate system
16

8
URN values for definitions and concepts in ogc namespace
16

8.1
Introduction
16

8.2
CRS definitions
16

8.3
CRS code list values definitions
17

8.4
Unit-of-measure (uom) definitions
19

8.5
Data type definitions
20

Annex A (normative)  GML dictionaries of OGC definitions
23

A.1
Introduction
23

A.2
Definitions of derivedCRSType values
23

A.3
Definitions of verticalDatumType values
25

A.4
Definitions of pixelInCell values
26

A.5
Definitions of rangeMeaning values
26

A.6
Definitions of axisDirection values
27

A.7
Definitions of units-of-measure
33

A.8
Definitions of data types
34

Bibliography
39




Tables
Page

11Table 1 — “authority” values for definitions in OGC URN namespace


Table 2 — “objectType” values for definitions in OGC URN namespace
12

Table 3 — URNs for CRSs defined by OGC
17

Table 4 — URNs for derivedCRSType values
17

Table 5 — URNs for verticalDatumType values
17

Table 6 — URNs for pixelInCell values
18

Table 7 — URNs for rangeMeaning values
18

Table 8 — URNs for axisDirection values
18

Table 9 — URNs for units-of-measure
20

Table 10 — URNs for data types
20

i. 
Preface


NOTE 
The previous version of this document was numbered 05-010, now renumbered 06-023r1 after revision in 2006. This document has been slightly changed to correct the OGC URN scheme reference document number. The correct document number is 04-013r4. 


This revised version of this document adds additional allowed “authority” and “objectType” values, plus specifies URNs for data types, as proposed in change requests OGC 05-091r2 and 05-060. In addition, corrections have been made to the XML documents listed in Annex A. The changes made in this version are tracked in the Microsoft Word (.doc) format of this document.


This Best Practices Paper specifies Universal Resource Names (URNs) in the “ogc” URN namespace to be used for identifying definitions. This document specifies the formats used by these URNs, plus a set of specific URNs for specific definitions. These definitions should be used wherever applicable by implementations of various OGC Implementation Specifications, including GML, WMS, WFS, and WCS. 


This document does not require or encourage OGC specifications to use only URNs defined in the "ogc" URN namespace. In addition, it does not encourage use of URNs when URLs are appropriate. Furthermore, other OGC documents do and can specify more URNs in the "ogc" URN namespace.


However, OGC specifications should specify that all URI values used with that specification have well-specified formats and meanings, preferably electronically accessible meanings. If well-specified URI values are not available for an OGC specification need, specification of new URNs in the "ogc" URN namespace should be considered (in that specification or elsewhere). If new URNs are being specified in another URN namespace for use with OGC specifications, it would be useful if the same URN structure is used as is used by the OGC.


Suggested additions, improvements, and comments on this specification are welcome and encouraged. Such suggestions may be submitted to the editor by email message. Extensive and/or multiple changes can be suggested by making changes in an edited copy of this document. If you choose to submit suggested changes by editing this document, please make your suggested changes with change tracking on.


ii. Document contributor contact points


All questions regarding this document should be directed to the editor or the contributors:


		Name

		Organization



		Arliss Whiteside

		BAE Systems E&IS



		John Evans

		NASA / GST, Inc.



		Keith Pomakis

		CubeWerx, Inc.



		Simon Cox

		CSIRO Exploration and Mining





iii. Revision history


		Date

		Release

		Editor

		Primary clauses modified

		Description



		2004-12-17

		0.0.0

		Arliss Whiteside

		All

		Initial version



		2005-01-07

		0.0.0

		Arliss Whiteside

		7.1, 7.2

		Adds information on referencing EPSG coordinate axis objects



		2005-01-26

		1.0.0

		Arliss Whiteside

		Cover, i, 7.1, 7.2

		Removed information on referencing EPSG coordinate axis objects, edited as approved Recommendation Paper



		2006-02-13

		1.0.1

		Arliss Whiteside

		Cover, i, 7.1, 7.5, A

		Added additional allowed “authority” and “objectType” values, plus URNs for data  types



		2006-07-04

		1.0.2

		Simon Cox

		v, 6.1, 6.3, 7.1

		Add to future work, TBD



		2006-07-24

		1.1.0

		Arliss Whiteside

		All

		Final editing



		2006-08-08

		1.1.0

		Arliss Whiteside

		Various

		Correct document number for OGC URN Scheme





iv. Changes to the OGC Abstract Specification


The OGC™ Abstract Specification does not require changes to accommodate the technical contents of this document.


v. Future work


Improvements in this document are desirable to:


a) Add more and complete existing examples in Clause 7


b) Specify additional URNs in Clause 8


c) Specify meanings of additional URNs in Annex A


d) Replace static list of Authorities with dynamic registry (hosted by OGC Network)


e) Replace the static list of Object Types with dynamic registry


f) Point to standard resolution service for OGC URNs


Foreword


This document includes one normative annex: Annex A.


Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. The Open Geospatial Consortium Inc. shall not be held responsible for identifying any or all such patent rights.


Introduction


This document specifies Universal Resource Names (URNs) in the “ogc” URN namespace to be used for identifying definitions. These definitions include definitions of Coordinate Reference Systems (CRSs) and related objects, as specified in OGC Abstract Specification Topic 2: Spatial referencing by coordinates, plus a several other resource types for which standard identifiers are useful in OGC Web Services. This document specifies the formats used by these URNs, including formats that can reference definitions recorded in the EPSG database and by other authorities. This document also specifies URNs for some specific definitions for which OGC is the custodian.


Definition identifier URNs in OGC namespace

1 Scope


This document specifies Universal Resource Names (URNs) in the “ogc” URN namespace to be used for identifying definitions. These definitions include definitions of Coordinate Reference Systems (CRSs) and related objects, as specified in OGC Abstract Specification Topic 2: Spatial referencing by coordinates. This document specifies the formats used by these URNs, including formats that can reference any definition recorded in the EPSG database. This document also specifies URNs for some specific definitions.


This document specifies URN formats for several uses, currently including referencing definitions of:


g) Single objects


h) Not-completely-specified objects


i) Combined objects


Most XML attributes and elements with the anyURI data type that reference definitions, in all approved and draft OGC Implementation Specifications, can use a URN value in the “ogc” URN namespace. Such a URN shall be used when a URL cannot be used to electronically access that definition, by all clients and servers that may need to reference that definition.


The “ogc” definition URNs specified here should be used wherever applicable by implementations of all approved and draft OGC Implementation Specifications, including GML, WMS, WFS, and WCS. Additional definition URNs in the “ogc” URN namespace are and will be specified in other OGC documents.

2 Conformance


Conformance with this specification shall be checked using all the relevant tests specified in each separate specification that normatively references this specification, and specifically references the applicable parts of this specification.


3 Normative references


The following normative documents contain provisions which, through reference in this text, constitute provisions of this document. For dated references, subsequent amendments to, or revisions of, any of these publications do not apply. For undated references, the latest edition of the normative document referred to applies.


European Petroleum Survey Group database: EPSG Geodesy Parameters, available through http://www.epsg.org/


IETF RFC 2141 (May 1997), URN Syntax, R. Moats <http://www.ietf.org/rfc/rfc2141.txt>


IETF RFC 2396 (August 1998), Uniform Resource Identifiers (URI): Generic Syntax, Berners-Lee, T., Fielding, N., and Masinter, L., eds., <http://www.ietf.org/rfc/rfc2396.txt>


ISO/IEC 18025:2005, Information technology — Computer graphics and image processing — Environmental Data Coding Specification (EDCS)

ISO 31:1992, Quantities and Units. (13 Parts, with revisions 1998)


ISO 1000:1998, The International System of Units (SI), 7th edition

ISO 19109:2004. Geographic information - Rules for application schema

OGC 03-105r1, OpenGIS Geography Markup Language (GML) Implementation Specification, Version 3.1.0


OGC 04-013r4, A URN namespace for the Open Geospatial Consortium (OGC), draft


OGC 04-024, Geographic information — Web Map Service interface, v1.3.0


OGC 04-092r4, OpenGIS Geography Markup Language (GML) Implementation Specification Schemas, Version 3.1.1


OGC 05-008, OGC Web Services Common Specification, Version 1.0.0

OGC 05-020r4, Technical Committee Policies and Procedures

OGC 05-087r2, Observations and Measurements

OGC 05-096r1, GML 3.1.1 grid CRSs profile


OGC 05-099r2, GML 3.1.1 simple dictionary profile

OGC 05-103, The OpenGIS Abstract Specification, Topic 2: Spatial Referencing by Coordinates


OGC 05-108r1, Geographic information — Geography Markup Language (GML)

W3C Recommendation January 1999, Namespaces In XML, http://www.w3.org/TR/2000/REC-xml-names

W3C Recommendation 04 February 2004, Extensible Markup Language (XML) 1.0 (Third Edition), http://www.w3.org/TR/REC-xml


W3C Recommendation 2 May 2001: XML Schema Part 0: Primer, http://www.w3.org/TR/2001/REC-xmlschema-0-20010502/

W3C Recommendation 2 May 2001: XML Schema Part 1: Structures, http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/

W3C Recommendation 2 May 2001: XML Schema Part 2: Datatypes, http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/

UCUM, Unified Code for Units of Measure, Schadow, G. and McDonald, C. J. (eds.), http://aurora.rg.iupui.edu/UCUM

In addition to this document, this specification includes several normative XML document files. Following approval of this document, these files will be posted online at the URL http://schemas.openis.net/definitions/. These XML files are also bundled with the present document. In the event of a discrepancy between the bundled and online versions of the XML files, the online files shall be considered authoritative.


4 Terms and definitions


For the purposes of this document, the following terms and definitions apply.


client


software component that can invoke an operation from a server


document type


class or structure of a document, which implies its intended application


NOTE 
Some document types imply a formal structure or grammar (e.g., schemas, used for document design and validation), while for other document types the structure is more generally defined (e.g., Discussion Papers).


feature


abstraction of a real world phenomena [ISO 19109]


feature type


class for all instances of that feature type


NOTE 
The instances of a class that represents an individual feature type are feature instances.

interface


named set of operations that characterize the behaviour of an entity [ISO 19119]

nil


explanation for a void value or other missing information [OGC 05-108r1]

operation


specification of a transformation or query that an object may be called to execute [ISO 19119]


parameter


variable whose name and value are included in an operation request or response


phenomenon

feature characteristic, the estimation of which is the purpose of an observation [OGC 05-087r2]


NOTE 
A phenomenon may be a physical property (such as temperature, length, etc), a classification (such as species), frequency or count, or an existence indication.


request


invocation of an operation by a client


response


result of an operation, returned from a server to a client


server


service instance


a particular instance of a service [ISO 19119 edited]

service


distinct part of the functionality that is provided by an entity through interfaces [ISO 19119]


capability which a service provider entity makes available to a service user entity at the interface between those entities [ISO 19104 terms repository]

version


version of an Implementation Specification (document) and XML Schemas to which the requested operation conforms


5 Conventions


5.1 Symbols (and abbreviated terms)


CRS
Coordinate Reference System


EDCS
Environmental Data Coding Standard


EPSG
European Petroleum Survey Group

GML
Geography Markup Language


ISO
International Organization for Standardization


OGC
Open Geospatial Consortium


OWS
OGC Web Service, or Open Web Service


SI
The International System of Units 


TBD
To Be Determined


UCUM
Unified Code for Units of Measure


URI
Universal Resource Identifier


URL
Uniform Resource Locator


URN
Universal Resource Name


WCS
Web Coverage Service


WFS
Web Feature Service


WMS
Web Map Service


XML
Extensible Markup Language


1D
One Dimensional


2D
Two Dimensional


3D
Three Dimensional


5.2 Document terms and definitions


The following specification terms and definitions are used in this document:


j) shall – verb form used to indicate a requirement to be strictly followed to conform to this specification, from which no deviation is permitted


k) should – verb form used to indicate desirable ability or use, without mentioning or excluding other possibilities


l) may – verb form used to indicate an action permissible within the limits of this specification


m) can – verb form used for statements of possibility


n) informative – a part of a document that is provided for explanation, but is not required


o) normative – a part of a standards document that is required


p) annex – an auxiliary part of a document, called an “appendix” in United States English


q) clause – a major part of a document, called a “section” or “paragraph” in United States English


r) subclause – a secondary part of a clause or annex, called a “subsection” in United States English


6 Background


6.1 Definition identifiers


The OGC URN scheme is defined in OGC Document 04-013r4. It specifies a family of identifiers for resources of interest in OGC Web Services, mostly resources provided or defined by the OGC. 


The “def” branch of the OGC URN scheme is defined in this document. This branch provides standard identifiers for many concepts and definitions. These definitions include coordinate reference systems and related components, units of measure, nils, and various object types and definitions. These include definitions and concepts maintained by OGC and by other authorities who do not provide URNs for their concepts, but which are of importance in OGC Web Services and encodings. 


The URN syntax is useful because (a) it provides persistent identifiers that are independent of resource location, while (b) being part of the URI scheme, and thus compatible with referencing in a web context. A uniform identification scheme is useful for interoperability, allowing use of short identifiers for concepts. These identifiers allow suitable software to make rapid comparisons, and to obtain values from a local cache when available, in preference to accessing definitions from a remote service. 


6.2 Use for Coordinate Reference Systems 


One frequent use is referencing the CRS for an OWS server input or output; another use Is referencing the CRS for a feature geometry or bounding box. These URNs are used to identify the referenced CRS, not to transfer a definition of that CRS. Most of this material is also applicable to referencing CRS components and Coordinate Operations and their components, often referred to as objects.


NOTE 1
Subclause C.14 of [OGC 05-008] summarizes many of the requirements considered when specifying how to reference CRSs. 


Document [OGC 05-108] specifies that each specific OWS shall always reference a CRS by using a XML attribute or element with the type anyURI. Such an anyURI value can be used to reference a CRS whether the definition of that CRS is included in the same data transfer, is NOT included in the same data transfer, cannot be electronically accessed, or can be electronically accessed.


NOTE 2
In XML Schemas, the anyURI data type is the standard way to briefly reference (or cite) something specified elsewhere. XML attributes with the type anyURI include the GML defined attributes named gml:srsName, gml:uom, xlink:href, and gml:codeSpace.


When using a XML attribute or element with the type anyURI to reference a CRS, CRS-related, or other object, that URI shall have a value which uses one of two alternative URI formats:


s) Universal Resource Locator (URL), with standard form. The URL format should be used whenever the referenced definition is known to be electronically available using this standard URL.


t) Universal Resource Name (URN), with a specified form. The URN format shall be used whenever the referenced definition is not, or might not be, available using a URL. This URN shall reference data that is specified by some “authority” and is “well-known” to both client and server software, including multiple clients and multiple servers.


NOTE 3
Two widely-used forms of URI are URL and URN. We are specifying using URNs as the way of citing CRS-related definitions that are "well-known" but are not adequately electronically available using a URL. 

Subclause 10.3.2 of the OWS Common specification [OGC 05-108] specifies when and how to use URLs to reference a CRS or CRS-related object. Use of URNs is expected to be more common than use of URLs, and specific OWS Implementation Specifications are expected to specify many standard URN values. 


6.3 Relationships to other identification schemes


6.3.1 URN and URL


URNs [IETF RFC 2141] are a kind of URI [IETF RFC 2396], and may be used as the value of references where a URI is required. This is often the case in GML-based encodings (e.g., the standard XML attributes xlink:href, xlink:role, xlink:arcrole, srsName, uom, codeSpace) and in OGC Web Services (OWS) operation requests and responses. 


A URN serves as an identifier of a resource or concept. A detailed description of the resource may also be available online, with a resource locator (URL) providing an access point. In general, there is no direct mapping or algorithm to obtain a URL for the resource designated by a URN. URNs are intended to be more persistent than URLs, so that they remain valid even if a resource description is relocated. However, a resolution service or resolver may provide a URL corresponding to a URN. 


NOTE 
In the future it is expected that the OGC Network will provide a resolution service for URNs in the OGC scheme. 

6.3.2 URN and schema component designators


In a few places in OWS interfaces, an identifier for an XML component is required. In these cases, it is important that the identifier reference the actual schema definition, which may then be used as the template for an OWS request or response. 


A number of options are available for identification of schema components. The W3C XML Schema recommendation provides QName (qualified name – see XML Schema Part 2, clause 3.2.18). A QName has the lexical form ns:name where “ns” is an XML namespace prefix for which a namespace declaration is in scope. The QName thus corresponds with an identifier tuple {namespace, local name} where “namespace” is the fully scoped identifier for the XML namespace. In contrast, a URN identifier is complete, and does not depend on context for resolution of the namespace prefix. 


NOTE 
The W3C XML activity is currently considering a more complete scheme for identification of schema components, documented in the working draft XML Schema: Component Designators [8]. 

In OWS interfaces, XML components are generally identified using a QName. 


While there is some overlap of the meaning of schema component designators with the OGC URN scheme used for dataTypes (clause 8.5) and featureTypes, it should be understood that a URN identifies the concept, and not just its XML and XML Schema implementation. Of course, the concepts denoted by identifiers from the featureType branch generally have XML Schema implementations, so direct mappings are implied. Note that the mapping may be one-to-many, for example to manage versioning of the XML schema implementation independent of versioning of the concept. 


Table 10 in Subclause 8.5 provides definitions in the dataType branch, together with mappings to a QName designation of equivalent XML schema components. That subclause provides the complete definition of URNs in the dataType branch, since “OGC” is the only authority recognised for this branch. 


For the featureType branch, it is expected that many authorities will have an interest in using the “def” branch of the OGC URN scheme to provide feature type identifiers. It is incumbent on each authority to indicate the mapping from the URN form of identifier to other schema component designators, such as a QName, so that the use of these in OWS interfaces is unambiguous. 


7 OGC URN scheme for definitions


7.1 OGC URN scheme


The OGC URN scheme is defined in OGC Document 04-013r4. It specifies a family of identifiers for resources of interest in the context of OGC Web Services, mostly concerning resources provided or defined by OGC. The OGC scheme has the form 


urn:ogc:{category.label}:{resource.group}:{resource.type}{-resource.subtype}?{[doc.id]}?:{[resource.label]}?:{[release]}?:{[parameters]}


The category.label must be one of “specification”, “service”, “def” or “tc”. This document specifies the “def” branch. 


7.2 URNs for single objects


To identify the definition of a single object, the URN shall have the form:


urn:ogc:def:objectType:authority:version:code


The “urn”, “ogc”, “def”, and six “:” parts of this URN are fixed. The “ogc” part shall be the registered namespace authority for all URNs used by the OGC. The “def” part shall be the fixed category label which identifies all the OGC URNs that reference object definitions. The “objectType” part shall be an OGC-specified unique-identifier of the type of the referenced definition.


NOTE 1
The ”ogc” part denotes the namespace authority in a URN, and the value used should be registered with IANA. Pending the official registration of the OGC scheme with IETF/IANA, the value “x-ogc” should be used, where the “x” denotes an experimental namespace. The “def” part is a value for the (resource.group}part as specified in [OGC 04-013r4]. This “authority” part is an implementation of the {resource.type} part specified in [OGC 04-013r4]. The {resource.subtype} in [OGC 04-013r4] is not used.  This “authority” part is an implementation of the (doc.id) specified in [OGC 04-013r4]. This “version” part is an implementation of the (release) specified in [OGC 04-013r4]. This “code” part is an implementation of the (resource.label) specified in [OGC 04-013r4]. The “value1:value2” parts specified in Subclause 7.3 is an implementation of the (parameters) specified in [OGC 04-013r4].

The “objectType” part shall be the OGC-specified token for the type of concept identified by the URN. 


NOTE 2
The set of object types denoted by the OGC URN scheme is currently specified normatively in Table 2 in this document and revisions. In future it is expected that this mechanism will be replaced by a dynamic registry. 


The “authority” part shall be the OGC-specified abbreviation for the authority organization that specified the referenced definition. 


NOTE 3
The set of authorities recognised for the purposes of the OGC URN scheme is currently specified normatively in Table 1 in this document. In future it is expected that this mechanism will be replaced by a dynamic registry. 


The optional “version” part shall be the version of the authority or code for the referenced definition. The “code” part shall be a unique identifier of the referenced definition, as specified by the referenced authority. The “code” part can be human-understandable, provided that it is unique for that authority, version, and objectType. In this use, all textual parts of URN values shall be case-insensitive.


The “version” part of these URNs can be omitted when the referenced definition does not have a version, and the referenced definition is not specific to an authority version. When included, the “version” shall be recorded in the format specified by the authority. The version format is sometimes “N.N.N” or “N.N”, where each “N” stands for an integer. If no other version identification is provided by the authority, a year or other date can be used. No "v" or other version prefix shall be included.


The required “authority” part identifies an authority recognized by the OGC, and the allowed “authority” values shall include those listed in Table 1.


Table 1 — “authority” values for definitions in OGC URN namespace 


		“authority” value

		Referenced authority

		Reference to specification

		Use for 
“code” value

		Use for 
“version” value



		EDCS

		Environmental Data Coding Specification a

		ISO/IEC 18025:2005

		Label or Code column value f 

		2005



		EPSG

		EPSG database b

		http://www.epsg.org/

		EPSG numeric identifier value

		Database version



		OGC

		Open Geospatial Consortium c

		Clause 8 g

		Values specified in Clause 8 g

		Values specified in Clause 8 g



		SI

		International System of Units d

		ISO 1000:1992, 


http://www.bipm.fr/en/si/

		Values from Symbol column of tables h

		2000



		UCUM

		Unified Code for Units of Measure e

		http://aurora.regenstrief.org/UCUM

		“Case sensitive” form of code i

		none



		a
The Environmental Data Coding Specification (EDCS) is recognized as an authority that specifies a vocabulary of phenomena in its Attributes dictionary (“EAs”).


b
The EPSG database is now maintained by the OGP Surveying and Positioning Committee, and is recognized as an authority that specifies many CRS-related definitions.


c
The Open Geospatial Consortium (OGC) recognizes itself as one or more authorities, here using “OGC” as the one current authority abbreviation.


d
The International System of Units (SI) is recognized as an authority that specifies basic units of measure and a limited selection of derived units.


e
The Unified Code for Units of Measure (UCUM) is recognized as an authority that specifies symbols for denoting a large set of basic units of measure and a grammar that defines combinations of these that correspond with symbols that are commonly used in commerce, scientific and engineering applications. 


f
Values from the Label or Code columns of the attribute Tables 6.5 – 6.30 of ISO/IEC 18025:2005.


g
The OGC shall explicitly specify each “code” and “version” value defined by the “OGC” authority. Clause 8 of this document specifies some of these codes and versions. Additional OGC codes and versions are now specified in Clause 10 of OGC 05-096r1, and more can be specified in future OGC Implementation Specifications and Best Practices Papers.


h
Plus combinations of symbols as defined in the SI specification. Note that some symbols include elements that are not available on a standard character entry device (e.g. , °C). For these units, it is recommended that the UCUM symbol and URN be used in preference. See also footnote i. 


i
UCUM specifies code values or symbols using the reduced character set universally available on character entry devices (“7-bit ascii"), and combinations of these generated using the grammar described in the UCUM specification. For this reason the use of UCUM codes is preferred to those specified in ISO 31:1992 [7], as the latter specifies the use of superscripts and non-latin symbols for certain units. While these are in principle supported by Unicode, for practical reasons the reduced character-set encoding is preferred for use in the URN syntax.





The required “objectType” part identifies the type of the referenced definition, and the allowed “objectType” values shall include those listed in Table 3.


Table 3 — “objectType” values for definitions in OGC URN namespace 


		“objectType” value

		URN references

		Object type defined in



		axis

		coordinate system axe definition

		9.3 in OGC 05-103



		axisDirection

		axis direction code definition

		9.4 in OGC 05-103



		coordinateOperation

		coordinate operation definition

		11.1 in OGC 05-103



		crs

		coordinate reference system definition

		8.2 in OGC 05-103



		cs

		coordinate system definition

		9.2 in OGC 05-103



		datum

		datum definition

		10.1 in OGC 05-103



		dataType

		data type definition

		D.1 in OGC 05-007r4



		derivedCRSType

		derived CRS type code definition

		8.3 in OGC 05-103



		documentType

		document type definition

		4. in OGC 05-020r4



		ellipsoid

		ellipsoid definition

		10.2.2 in OGC 05-103



		featureType

		feature type definition

		as specified in an application schema (ISO 19109)



		group

		operation parameter group definition

		11.2 in OGC 05-103



		meaning

		parameter meaning definition

		D.1 in OGC 05-007r4



		meridian

		prime meridian definition

		10.2.1 in OGC 05-103



		method

		operation method definition

		11.2 in OGC 05-103



		nil

		explanations for missing information

		8.2.3.1 in OGC 05-108r1



		parameter

		operation parameter definition

		11.2 in OGC 05-103



		phenomenon

		observable property definition

		6.2 in OGC 05-087r2



		pixelInCell

		Pixel in cell code definition

		10.3 in OGC 05-103



		rangeMeaning

		range meaning code definition

		9.4 in OGC 05-103



		referenceSystem

		value reference system definition

		D.1 in OGC 05-007r4



		uom

		unit of measure definition

		



		verticalDatumType

		vertical datum type code definition

		10.3 in OGC 05-103





Specializing the above, the URN value for an anyURI that references one object in the European Petroleum Survey Group (EPSG) database shall have the form:



urn:ogc:def:objectType:EPSG:version:code


In this case, the “authority” part of a URN shall be “EPSG”. The “code” part of a URN should be the EPSG “code” unique identifier of the referenced definition. Alternately, the “code” part of a URN can be the EPSG “name” unique identifier. The “version” part shall be included in this case, since the EPSG sometimes deprecates and replaces existing definitions.


NOTE 2
The EPSG does not make any substantive changes to existing entries. However, if a record is found to be incorrect, that record is deprecated and replaced. When this is done, the deprecation field of the deprecated record is changed from "no" to "yes". (In some implementations, "no" may be "0" or "false", and "yes" may be "1" or "true"). If we do not include the EPSG dataset version and the record has been deprecated, you will not know whether the reference relates to the record before or after it was deprecated.


Example 1
The URN value for CRS 26986 specified by version 6.3 of the EPSG database is:



urn:ogc:def:crs:EPSG:6.3:26986


Example 1
The URN value for the “WGS 84 longitude-latitude” CRS specified in Subclause B.3 of WMS 1.3 (previously referenced as “CRS:84”) is:



urn:ogc:def:crs:OGC:1.3:CRS84


7.3 URNs for not-completely-specified objects


A URN can also be used to denote a not-completely-specified object, which is specified without the values of a few identified parameters. In this case, the URN value includes the values for each identified parameter. To identify an object with two unspecified parameters, the URN shall have the form:


urn:ogc:def:objectType:authority:version:code:value1:value2


NOTE 1
Not-completely-specified objects are very useful when many similar objects are needed, especially when the possible values of the distinguishing parameters cannot be enumerated.


EXAMPLE 1
Subclause 6.7.3.4 and Annex B of WMS 1.3.0 specify five not-completely-specified map projections, where the parameters specify the central meridian, etc.


EXAMPLE 2
Clause 7 of [OGC 05-096r1] specifies two not-completely-specified unrectified image CRSs, where the single parameter specifies the image identifier.


In this URN form, the values for the previously-identified parameters are added to the URN form for a single object, as specified above. The obvious variations on the URI form can be used when one or three parameters are unspecified. The object identified by the “authority”, “version”, and “code” must be completely specified with the exception of the values for a few clearly identified parameters. Whenever such a parameter value requires a unit of measure (uom), the uom for that parameter shall be specified by the referenced not-completely-specified object.


EXAMPLE 3
The URN value for the Auto Orthographic CRS 42003 specified in Subclauses 6.7.3.4 and B.9 of WMS 1.3.0 is:



urn:ogc:def:crs:OGC:1.3:AUTO42003:1:-100:45


NOTE 2
Additional examples of not-completely-specified objects are specified in Subclauses B.7, B.8, B.10, and B.11 of WMS 1.3.0, and in Subclauses 10.1 through 10, 3 of [OGC 05-096r1].


7.4 URNs for combined objects


7.4.1 Overview


In some cases, it is useful to reference two or more well-known objects that are combined, where the combination is specified at run time. Such combining of two or more well-known objects shall only be used when all of the following conditions are true:


a) The objects being combined are correct for the combination being formed, as these objects are specified in [OGC 05-103] for CRS-related objects.


b) This combination of objects is not an existing well-known object, such as specified in the EPSG database.


NOTE 1
If combining two or more well-known objects, please ask if this combination will be frequently used. If combining only EPSG codes because EPSG has not populated this combination, please send a request for this combination to the EPSG if this combination is likely to be frequently used. Similarly, if combining OGC codes, by themselves or with EPSG codes, please suggest that this combination be added to the OGC codes, if this combination is likely to be frequently used.


c) The objects being combined are all in the “ogc” URN namespace, preferably all defined by the same authority (e.g., EPSG or OGC).


NOTE 2
If objects specified by different authorities are combined, there is higher risk that these objects are not compatible. For example, some authorities might specify objects different from [OGC 05-103].

d) Using a URN for the combination is desirable, since it is not convenient to combine these objects in an XML document based on GML, and then reference this document using a URL (as specified in Subclauses 10.3.1 and 10.3.2 of [OGC 05-TBD]).

A URN that identifies a definition that is itself defined by combining two or more objects shall be constructed by concatenating the URNs of the two individual objects into one URN, as follows:


urn:ogc:def:objectType,objectType:authority:version:code,‌objectType:authority:version:code


Similarly, an identifier can concatenate the URNs of the three individual objects, using the URN form:


urn:ogc:def:objectType,objectType:authority:version:code,‌objectType:authority:version:code,objectType:authority:version:code


NOTE 3
When URNs are concatenated like this, the combined object is implicitly defined, and is not assigned a single object “code”. That is, the defined object is has no single code.


In a concatenated URN, the first “objectType” is the type of the combined object. Combined references in a URN can be used for defining several types of objects, as specified by specific Implementation Specifications, including for:


u) Compound coordinate reference systems


v) Concatenated operations


w) Projected and derived coordinate reference systems


x) Combining a datum and a coordinate system into a coordinate reference system


y) Objects defined by specific Implementation Specifications


The first four combinations listed above are described in the following subclauses.


7.4.2 URN combined references for compound coordinate reference systems


A URN reference to combined objects can be allowed for any compound coordinate reference system (CompoundCRS) that combines two or three well-known CRSs. In this case, the URN shall concatenate the URNs of the two or three individual well-known CRSs. This combining is allowed only when all the conditions specified in Subclause 7.3.1 are met.


The URNs of the individual well-known CRSs shall be listed in the same order in which the individual coordinate tuples are combined to form the CompoundCRS coordinate tuple. All the “objectType” values shall be “crs”.


EXAMPLE 
The URN value for combining the EPSG 27700 and EPSG 5701 CRSs is:


urn:ogc:def:crs,crs:EPSG:6.3:27700,crs:EPSG:6.3:5701

7.4.3 URN combined references for concatenated operations


A URN reference to combined objects can be allowed for any concatenated coordinate operation (ConcatenatedOperation) that combines two or more well-known coordinate operations. In this case, the URN shall concatenate the URNs of the two or more well-known coordinate operations. This combining is allowed only when all the conditions specified in Subclause 7.3.1 are met.


NOTE 1
In particular, the coordinate operations concatenated must meet the stated constraint: The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation.


NOTE 2
In a well-known dataset, a CoordinateOperation may be registered only in one direction, with the reverse operation being implied. This means that the roles of source and target CRS may have to be swapped if an implied-reverse CoordinateOperation is included in a ConcatenatedOperation. In this case, the swapped source and target CRS shall satisfy the above constraint.


The URNs of the individual coordinate operations shall be concatenated in the order of coordinate operation application. The “objectType” values shall all be “coordinateOperation”.


EXAMPLE 
The URN value for combining the EPSG XXXX and EPSG YYYY coordinate operations is:

urn:ogc:def:coordinateOperation,coordinateOperation:EPSG:6.3:XXXX,coordinateOperation:EPSG:6.3:YYYY


7.4.4 URN combined references for projected or derived CRSs


A URN reference to combined objects can be allowed for any projected coordinate reference system (ProjectedCRS) that combines a well-known GeographicCRS and a well-known (defined by) Conversion. In this case, the URN shall concatenate the URNs of the one well-known CRS, one well-known Conversion, and one well-known CartesianCS. This combining is allowed only when all the conditions specified in Subclause 7.3.1 are met.


Similarly, a URN reference to combined objects can be allowed for any derived coordinate reference system (DerivedCRS) that combines a well-known base CRS, a well-known CoordinateSystem, and a well-known (defined by) Conversion.


The URNs of the individual components of the projected or derived CRS shall be listed in the order of GeographicCRS, CS, and then Conversion. The four “objectType” values shall be “crs”, “crs”, “cs”, and “coordinateOperation”.


EXAMPLE 
The URN value for combining the EPSG XXXX CRS, EPSG YYYY CS, and EPSG ZZZZ Conversion to define a custom projected or derived CRS is:


urn:ogc:def:crs,crs:EPSG:6.3:XXXX,cs:EPSG:6.3:YYYY,coordinateOperation:EPSG:6.3:ZZZZ


7.4.5 URN combined references for datum and coordinate system


A URN reference to combined objects can be allowed for a coordinate reference system that combines a well-known datum with a well-known coordinate system. In this case, the URN shall concatenate the URNs of one well-known datum and one well-known coordinate system. This combining is allowed only when all the conditions specified in Subclause 7.3.1 are met.


The URNs of the individual components shall be listed in the order of datum and then coordinate system. The three “objectType” values shall be “crs”, “datum” and “cs”.


EXAMPLE 
The URN value for combining the EPSG XXXX datum and EPSG YYYY coordinate system to define a custom CRS is:



urn:ogc:def:crs,datum:EPSG:6.3:XXXX,cs:EPSG:6.3:YYYY


8 URN values for definitions and concepts in ogc namespace


8.1 Introduction


This clause provides the normative specification and URNs for some specific object definitions defined by the OGC. Additional definitions in the “ogc” URN namespace will be specified in other OGC documents. For example, more URNs are specified in Subclause 7.1 of the GML grid CRSs profile [OGC 05-096r1].


NOTE 
Many examples of “ogc” URN use for object definitions are contained in the GML examples in Annex A of this document, in Clause 7 of [OGC 05-096r1], and in Clause 6 of [OGC 05-095r1].


8.2 CRS definitions


The definitions of Coordinate Reference Systems (CRSs) defined by the OGC shall use the URNs listed in Table 5. The URN parts shown as “99” ands “8888” represent numbers that shall be substituted for the specified parameter values. All of these CRSs are defined in Annex B of WMS 1.3 [OGC 04-024].


Table 5 — URNs for CRSs defined by OGC


		URN

		CRS name

		Definition reference



		urn:ogc:def:crs:OGC:1.3:CRS1

		Map CS

		B.2 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:CRS84

		WGS 84 longitude-latitude

		B.3 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:CRS83

		NAD27 longitude-latitude

		B.4 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:CRS27

		NAD83 longitude-latitude

		B.5 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:CRS88

		NAVD 88

		B.6 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:AUTO42001:99:8888

		Auto universal transverse mercator

		B.7 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:AUTO42002:99:8888

		Auto transverse mercator

		B.8 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:AUTO42003:99:8888

		Auto orthographic

		B.9 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:AUTO42004:99:8888

		Auto equirectangular

		B.10 in OGC 04-024



		urn:ogc:def:crs:OGC:1.3:AUTO42005:99

		Auto Mollweide

		B.11 in OGC 04-024





8.3 CRS code list values definitions


The definitions of the standard values for the five CodeList stereotyped classes specified in Tables 9, 31, 32, 37, and 39 of OGC Abstract Specification Topic 2 [OGC 05-103] shall use the URNs listed in Tables 2 through 6. The definitions of these values shall be as specified in the XML documents in Subclauses A.2 through A.6.


Table 7 — URNs for derivedCRSType values


		URN

		Value

		Brief definition



		urn:ogc:def:derivedCRSType:OGC:1.0:geographic

		geographic

		A coordinate reference system based on an ellipsoidal approximation of the geoid.



		urn:ogc:def:derivedCRSType:OGC:1.0:vertical

		vertical

		A coordinate reference system used for recording of heights or depths.



		urn:ogc:def:derivedCRSType:OGC:1.0:geocentric

		geocentric

		A coordinate reference system with the origin at the centre of mass of the earth.



		urn:ogc:def:derivedCRSType:OGC:1.0:engineering

		engineering

		A contextually local coordinate reference system.



		urn:ogc:def:derivedCRSType:OGC:1.0:image

		image

		An engineering coordinate reference system applied to locations in images.



		urn:ogc:def:derivedCRSType:OGC:1.0:temporal

		temporal

		A reference system used for the recording of time.





Table 8 — URNs for verticalDatumType values


		URN

		Value

		Brief definition



		urn:ogc:def:verticalDatumType:OGC:1.0:geoidal

		geoidal

		Zero value of vertical axis approximates a constant potential surface, usually the geoid.



		urn:ogc:def:verticalDatumType:OGC:1.0:depth

		depth

		Zero value of vertical axis has meaning for purpose which measurements are used for



		urn:ogc:def:verticalDatumType:OGC:1.0:barometric

		barometric

		Atmospheric pressure is basis for the definition of origin of vertical axis



		urn:ogc:def:verticalDatumType:OGC:1.0:otherSurface

		otherSurface

		Other variations to above three vertical datum types.





NOTE 
The verticalDatumType existed in the previous version of OGC Abstract Specification Topic 2 [OGC 04-046r3], but has been removed in the new version [OGC 05-103]. The verticalDatumType is thus included in GML 3.1.1, but not in GML 3.2 [OGC 05-108r1]. 


Table 9 — URNs for pixelInCell values


		URN

		Value

		Definition



		urn:ogc:def:pixelInCell:OGC:1.0:cellCenter

		cellCenter

		The origin of the image coordinate system is at the centre of a grid cell or image pixel.



		urn:ogc:def:pixelInCell:OGC:1.0:cellCorner

		cellCorner

		The origin of the image coordinate system is at the corner of a grid cell, or half-way between the centres of adjacent image pixels.





Table 10 — URNs for rangeMeaning values


		URN

		Value

		Brief definition



		urn:ogc:def:rangeMeaning:OGC:1.0:exact

		exact

		Any value between and including minimumValue and maximiumValue is valid.



		urn:ogc:def:rangeMeaning:OGC:1.0:wraparound

		wraparound

		The axis is continuous with values wrapping around at the minimumValue and maximumValue. 





Table 11 — URNs for axisDirection values


		URN

		Value

		Brief definition



		urn:ogc:def:axisDirection:OGC:1.0:north

		north

		Axis positive direction is north.



		urn:ogc:def:axisDirection:OGC:1.0:northNorthEast

		northNorthEast

		Axis positive direction is approximately north-north-east. 



		urn:ogc:def:axisDirection:OGC:1.0:northEast

		northEast

		Axis positive direction is approximately north-east.



		urn:ogc:def:axisDirection:OGC:1.0:eastNorthEast

		eastNorthEast

		Axis positive direction is approximately east-north-east.



		urn:ogc:def:axisDirection:OGC:1.0:east

		east

		Axis positive direction is (/2 radians clockwise from north.



		urn:ogc:def:axisDirection:OGC:1.0:eastSouthEast

		eastSouthEast

		Axis positive direction is approximately east-south-east.



		urn:ogc:def:axisDirection:OGC:1.0:southEast

		southEast

		Axis positive direction is approximately south-east.



		urn:ogc:def:axisDirection:OGC:1.0:southSouthEast

		southSouthEast

		Axis positive direction is approximately south-south-east.



		urn:ogc:def:axisDirection:OGC:1.0:south

		south

		Axis positive direction is ( radians clockwise from north.



		urn:ogc:def:axisDirection:OGC:1.0:southSouthWest

		southSouthWest

		Axis positive direction is approximately south-south-west.



		urn:ogc:def:axisDirection:OGC:1.0:southWest

		southWest

		Axis positive direction is approximately south-west.



		urn:ogc:def:axisDirection:OGC:1.0:westSouthWest

		westSouthWest

		Axis positive direction is approximately west-south-west.



		urn:ogc:def:axisDirection:OGC:1.0:west

		west

		Axis positive direction is 3(/2 radians clockwise from north.



		urn:ogc:def:axisDirection:OGC:1.0:westNorthWest

		westNorthWest

		Axis positive direction is approximately west-north-west.



		urn:ogc:def:axisDirection:OGC:1.0:northWest

		northWest

		Axis positive direction is approximately north-west.



		urn:ogc:def:axisDirection:OGC:1.0:northNorthWest

		northNorthWest

		Axis positive direction is approximately north-north-west.



		urn:ogc:def:axisDirection:OGC:1.0:up

		up

		Axis positive direction is up relative to gravity.



		urn:ogc:def:axisDirection:OGC:1.0:down

		down

		Axis positive direction is down relative to gravity.



		urn:ogc:def:axisDirection:OGC:1.0:geocentricX

		geocentricX

		Axis positive direction is in the equatorial plane from centre of modelled earth towards intersection of equator with prime meridian.



		urn:ogc:def:axisDirection:OGC:1.0:geocentricY

		geocentricY

		Axis positive direction is in equatorial plane from centre of the modelled earth towards intersection of equator and meridian (/2 radians eastwards from prime meridian.



		urn:ogc:def:axisDirection:OGC:1.0:geocentricZ

		geocentricZ

		Axis positive direction is from centre of modelled earth parallel to its rotation axis and towards its north pole.



		urn:ogc:def:axisDirection:OGC:1.0:future

		future

		Axis positive direction is towards the future.



		urn:ogc:def:axisDirection:OGC:1.0:past

		past

		Axis positive direction is towards the past.



		urn:ogc:def:axisDirection:OGC:1.0:columnPositive

		columnPositive

		Axis positive direction is towards higher pixel column.



		urn:ogc:def:axisDirection:OGC:1.0:columnNegative

		columnNegative

		Axis positive direction is towards lower pixel column.



		urn:ogc:def:axisDirection:OGC:1.0:rowPositive

		rowPositive

		Axis positive direction is towards higher pixel row.



		urn:ogc:def:axisDirection:OGC:1.0:rowNegative

		rowNegative

		Axis positive direction is towards lower pixel row.



		urn:ogc:def:axisDirection:OGC:1.0:displayRight

		displayRight

		Axis positive direction is right in display.



		urn:ogc:def:axisDirection:OGC:1.0:displayLeft

		displayLeft

		Axis positive direction is left in display.



		urn:ogc:def:axisDirection:OGC:1.0:displayUp

		displayUp

		Axis positive direction is towards top of approximately vertical display surface.



		urn:ogc:def:axisDirection:OGC:1.0:displayDown

		displayDown

		Axis positive direction is towards bottom of approximately vertical display surface.





8.4 Unit-of-measure (uom) definitions


The definitions of some units-of-measure which are defined by the OGC shall use the URNs listed in Table 12. The definitions of these units shall be as specified in the XML document in Subclause A.7. Most of these units are also specified by the EPSG, as listed.


Table 12 — URNs for units-of-measure


		OGC URN

		Meaning

		Quantity type

		EPSG URN



		urn:ogc:def:uom:OGC:1.0:degree

		Angular degree

		angle

		urn:ogc:def:uom:EPSG:6.3:9102



		urn:ogc:def:uom:OGC:1.0:radian

		Angular radian

		angle

		TBD



		urn:ogc:def:uom:OGC:1.0:metre

		Length metre

		length

		urn:ogc:def:uom:EPSG:6.3:9001



		urn:ogc:def:uom:OGC:1.0:unity

		unitless ratio of two quantities with the same units

		scale factor

		urn:ogc:def:uom:EPSG:6.3:8805





8.5 Data type definitions


URNs are useful to identify data types in multiple OGC Implementation Specifications. These uses include in the ows:DataType (metadata) element in the ows:DomainType in a future version of the OWS Common Implementation Specification [OGC 05-008]. The OGC-specified URNs that can be used for identifying data types (expected to be used in multiple OGC Implementation Specifications) shall include those listed in Table 14. The left column lists each URN specified here, and the centre column lists the definition which shall be used for that URN.


Use of these URNs is not limited to data encoded in XML, or even to use of these URNs in XML-encoded documents. When data is encoded in XML, the right column in this table lists an XML Schema (XSD) or Geometry Markup Language (GML) version 3.1.1 identifier that can be used to encode that data type. More complete definitions of some of these data types are specified in the XML document in Subclause A.8.


Table 14 — URNs for data types


		OGC URN

		Brief definition

		XSD/GML data type a



		urn:ogc:def:dataType:OGC:1.1:crsURI

		URI used to reference a Coordinate Reference System (CRS)

		xsd:anyURI



		urn:ogc:def:dataType:OGC:1.1:anyURI

		URI used for any other purpose

		xsd:anyURI



		urn:ogc:def:dataType:OGC:1.1:measure

		General numeric value of a quantity, with its associated unit of measure

		gml:MeasureType



		urn:ogc:def:dataType:OGC:1.1:length

		Value of a length (or distance) quantity, with its units

		gml:LengthType



		urn:ogc:def:dataType:OGC:1.1: scale

		Value of a scale factor (or ratio) that has no physical unit

		gml:ScaleType



		urn:ogc:def:dataType:OGC:1.1: time

		Value of a time or temporal quantity, with its units

		gml:TimeType



		urn:ogc:def:dataType:OGC:1.1:gridLength

		Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing b

		gml:GridLengthType



		urn:ogc:def:dataType:OGC:1.1:angle

		Value of an angle quantity, with its units

		gml:AngleType



		urn:ogc:def:dataType:OGC:1.1:lengthOrAngle

		Value of a length or angle quantity, with its units, sometimes used for horizontal ground coordinates

		gml:MeasureType



		urn:ogc:def:dataType:OGC:1.1:string

		String value a quantity c

		xsd:string



		urn:ogc:def:dataType:OGC:1.1:positiveInteger

		Positive integer value of a quantity, usually used for a count c

		xsd:positiveInteger



		urn:ogc:def:dataType:OGC:1.1:nonNegativeInteger

		Zero or positive integer values of a quantity c

		xsd:nonNegativeInteger



		urn:ogc:def:dataType:OGC:1.1:boolean

		Boolean value of a quantity c

		xsd:boolean



		urn:ogc:def:dataType:OGC:1.1:measureList

		Ordered sequence of two or more numeric values of a list of general measures d

		gml:MeasureListType



		urn:ogc:def:dataType:OGC:1.1:lengthList

		Ordered sequence of two or more numeric values of a list of Length measures  d

		gml:MeasureListType



		urn:ogc:def:dataType:OGC:1.1:scaleList

		Ordered sequence of two or more numeric values of a list of Scale measures 

		gml:MeasureListType



		urn:ogc:def:dataType:OGC:1.1:angleList

		Ordered sequence of two or more numeric values of a list of Angle measures d

		gml:MeasureListType



		urn:ogc:def:dataType:OGC:1.1:timeList

		Ordered sequence of two or more numeric values of a  list of Time measures d

		gml:MeasureListType



		urn:ogc:def:dataType:OGC:1.1:gridLengthList

		Ordered sequence of two or more numeric values of a  list of Grid Length measures d

		gml:MeasureListType



		urn:ogc:def:dataType:OGC:1.1:integerList

		Ordered sequence of two or more integer values of a  list, usually used for counts 

		gml:integerList



		urn:ogc:def:dataType:OGC:1.1:positiveIntegerList

		Ordered sequence of two or more positive integer values of a  list, usually used for counts e

		gml:integerList



		urn:ogc:def:dataType:OGC:1.1:valueFile

		URN reference to file or part of a file containing one or more parameter values, each numeric value with its associated unit of measure

		gml:valueFile



		urn:ogc:def:dataType:OGC:1.1:anyCRS

		Definition of any Coordinate Reference System

		Any concrete element in substitution group headed by gml:AbstractCoordinateReferenceSystem



		a
This data type is stated as a qualified name (QName). The two namespaces used here are:

xmlns:gml=”http://www.opengis.net/gml”

xmlns:xsd=”http://www.w3.org/2001/XMLSchema”

b
This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. 


c
Does not have an associated unit of measure.

d
Each value shall have the same associated unit of measure. An element of this type contains a space-separated list of double values with one associated unit of measure.

e
An element of this type contains a space-separated list of integer values, without an associated unit of measure.





Annex A
(normative)

GML dictionaries of OGC definitions


A.1
Introduction


This annex provides XML documents that specify the definitions of some of the objects assigned “ogc” URN values in Clause 8. Except for units-of-measure, these definitions are encoded in XML using the GML 3.1.1 simple dictionary profile [OGC 05-099r2]. The unitsDictionary is encoded in XML using coordinateReferenceSystems.xsd from GML 3.1.1.


NOTE 
All of these definitions also could be encoded using the gml:Dictionary element from dictionary.xsd in GML 3.1.1. The XML documents could be identical except for referencing dictionary.xsd in GML 3.1.1 instead of referencing the GML 3.1.1 simple dictionary profile.


These XML-encoded document files are bundled in a zip file with this document. These XML files will be posted online at the URL http://schemas.opengeospatial.net/definitions/, in a lower level directory used for this Version of this document. In the event of a discrepancy between the bundled and online versions of these XML files, the online files shall be considered authoritative.


A server may reference an exact copy of these documents located elsewhere, as long as they are readily accessible by clients. For example, it may be desirable to place the referenced documents on the same network server as an OWS instance, since that decreases the number of points of possible network failure. Such local copies should be organized into directories similar to http://schemas.opengeospatial.net/. The server owner shall insure that any such local copies are kept up-to-date with respect to the authoritative files at http://schemas.opengeospatial.net/.


A.2
Definitions of derivedCRSType values


The definitions of the derivedCRSType standard values used in defining DerivedCRSs shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xlink="http://www.w3.org/1999/xlink" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/gml gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xsd" 


gml:id="DerivedCRStypeDictionary">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<name>Derived CRS type standard values</name>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="geographic">





<description>A coordinate reference system based on an ellipsoidal approximation of the geoid; provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">">urn:ogc:def:derivedCRStype:OGC:1.0:geographic</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<Definition gml:id="vertical">





<description>A coordinate reference system used for recording of heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:derivedCRStype:OGC:1.0:vertical</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<Definition gml:id="geocentric">





<description>A coordinate reference system with the origin at the centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:derivedCRStype:OGC:1.0:geocentric</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<Definition gml:id="engineering">





<description>A contextually local coordinate reference system; which can be divided into two broad categories:


- earth-fixed systems applied to engineering activities on or near the surface of the earth;


- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft. </description>





<name codeSpace="urn:ogc:def:derivedCRStype:OGC:OGC:1.0:">engineering</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<Definition gml:id="image">





<description>A derived CRS used like an engineering coordinate reference system applied to locations in images. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:derivedCRStype:OGC:1.0:image</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<Definition gml:id="temporal">





<description>A reference system used for the recording of time. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:derivedCRStype:OGC:1.0:temporal</name>




</Definition>



</dictionaryEntry>


</Dictionary>

A.3
Definitions of verticalDatumType values


The definitions of the verticalDatumType standard values used in defining VerticalDatums shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/gml gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xsd" 


gml:id="VerticalDatumType">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<name>Vertical Datum Type standard values</name>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="geoidal">





<description>The zero value of the associated vertical coordinate system axis is defined to approximate a constant potential surface, usually the geoid. Such a reference surface is usually determined by a national or scientific authority, and is then a well-known, named datum. </description>





<name codeSpace="urn:ogc:tc:urn:docbpp:06-023">urn:ogc:def:pixelInCell:OGC:1.0:geoidal</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<!-- ===================================================== -->




<Definition gml:id="depth">





<description>The zero point of the vertical axis is defined by a surface that has meaning for the purpose which the associated vertical measurements are used for. For hydrographic charts, this is often a predicted nominal sea surface (i.e., without waves or other wind and current effects) that occurs at low tide. </description>





<name codeSpace="urn:ogc:tc:urn:docbpp:06-023">urn:ogc:def:pixelInCell:OGC:1.0:depth</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="barometric">





<description>Atmospheric pressure is the basis for the definition of the origin of the associated vertical coordinate system axis. </description>





<name codeSpace="urn:ogc:tc:urn:docbpp:06-023">urn:ogc:def:pixelInCell:OGC:1.0:barometric</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<!-- ===================================================== -->




<Definition gml:id="otherSurface">





<description>In some cases, e.g. oil exploration and production, a geological feature, such as the top or bottom of a geologically identifiable and meaningful subsurface layer, is used as a vertical datum. Other variations to the above three vertical datum types may exist and are all included in this type. </description>





<name codeSpace="urn:ogc:tc:urn:docbpp:06-023">urn:ogc:def:pixelInCell:OGC:1.0:otherSurface</name>




</Definition>



</dictionaryEntry>


</Dictionary>

A.4
Definitions of pixelInCell values


The definitions of the pixelInCell standard values used in defining ImageDatums shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/gml gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xsd" 


gml:id="PixelInCellDictionary">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<name>PixelInCell standard values</name>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="cellCenter">





<description>The origin of the image coordinate system is at the centre of a grid cell or image pixel. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:pixelInCell:OGC:1.0:cellCenter</name>




</Definition>



</dictionaryEntry>



<dictionaryEntry>




<!-- ===================================================== -->




<Definition gml:id="cellCorner">





<description>The origin of the image coordinate system is at the corner of a grid cell, or half-way between the centres of adjacent image pixels. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:pixelInCell:OGC:1.0:cellCorner</name>




</Definition>



</dictionaryEntry>


</Dictionary>

A.5
Definitions of rangeMeaning values


The definitions of the rangeMeaning standard values used in defining CoordinateAxes shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/gml gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xsd" 


gml:id="RangeMeaningDictionary">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<name>Range Meaning standard values</name>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="exact">





<description>Any value between and including minimumValue and maximiumValue is valid. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:rangeMeaning:OGC:1.0:exact</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="wraparound">





<description>The axis is continuous with values wrapping around at the minimumValue and maximumValue. Values with the same meaning repeat modulo the difference between maximumValue and minimumValue. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:rangeMeaning:OGC:1.0:wraparound</name>




</Definition>



</dictionaryEntry>


</Dictionary>

A.6
Definitions of axisDirection values


The definitions of the axisDirection standard values used in defining CoordinateAxes shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/gml gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xsd" 


gml:id="AxisDirectionDictionary">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<name>Axis Direction standard values</name>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="north">





<description>Axis positive direction is north. In a geographic or projected CRS, north is defined through the geodetic datum. In an engineering CRS, north may be defined with respect to an engineering object rather than a geographical direction. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:north</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="northNorthEast">





<description>Axis positive direction is approximately north-north-east. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:northNorthEast</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="northEast">





<description>Axis positive direction is approximately north-east. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:northEast</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="eastNorthEast">





<description>Axis positive direction is approximately east-north-east. </description>





<name codeSpace="urn:opengis:def:axisDirection:OGC:1.0:"/>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="east">





<description>Axis positive direction is pi/2 radians clockwise from north. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:east</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="eastSouthEast">





<description>Axis positive direction is approximately east-south-east. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:eastSouthEast</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="southEast">





<description>Axis positive direction is approximately south-east.</description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:southEast</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="southSouthEast">





<description>Axis positive direction is approximately south-south-east. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:southSouthEast</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="south">





<description>Axis positive direction is pi radians clockwise from north. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:south</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="southSouthWest">





<description>Axis positive direction is approximately south-south-west. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:southSouthWest</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="southWest">





<description>Axis positive direction is approximately south-west. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:southWest</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="westSouthWest">





<description>Axis positive direction is approximately west-south-west. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:westSouthWest</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="west">





<description>Axis positive direction is 3pi/2 radians clockwise from north. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:west</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="westNorthWest">





<description>Axis positive direction is approximately west-north-west. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:westNorthWest</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="northWest">





<description>Axis positive direction is approximately north-west.</description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:northWest</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="northNorthWest">





<description>Axis positive direction is approximately north-north-west. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:northNorthWest</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="up">





<description>Axis positive direction is up relative to gravity. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:up</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="down">





<description>Axis positive direction is down relative to gravity. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:down</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="geocentricX">





<description>Axis positive direction is in the equatorial plane from the centre of the modelled earth towards the intersection of the equator with the prime meridian. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:geocentricX</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="geocentricY">





<description>Axis positive direction is in the equatorial plane from the centre of the modelled earth towards the intersection of the equator and the meridian pi/2 radians eastwards from the prime meridian. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:geocentricY</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="geocentricZ">





<description>Axis positive direction is from the centre of the modelled earth parallel to its rotation axis and towards its north pole. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:geocentricZ</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="future">





<description>Axis positive direction is towards the future. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:future</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="past">





<description>Axis positive direction is towards the past. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:past</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="columnPositive">





<description>Axis positive direction is towards higher column numbers. </description>





<name codeSpace="urn:opengis:def:axisDirection:1.0:">columnPositive</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="columnNegative">





<description>Axis positive direction is towards lower pixel column numbers. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:columnNegative</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="rowPositive">





<description>Axis positive direction is towards higher row numbers. </description>





<name codeSpace="urn:opengis:def:axisDirection:1.0:">rowPositive</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="rowNegative">





<description>Axis positive direction is towards lower pixel row numbers. </description>





<name codeSpace="urn:opengis:def:axisDirection:OGC:1.0:"/>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="displayRight">





<description>Axis positive direction is right in display. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:displayRight</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="displayLeft">





<description>Axis positive direction is left in display. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:displayLeft</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="displayUp">





<description>Axis positive direction is towards top of approximately vertical display surface.


</description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:displayUp</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="displayDown">





<description>Axis positive direction is towards bottom of approximately vertical display surface.


</description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:opengis:def:axisDirection:OGC:1.0:displayDown</name>




</Definition>



</dictionaryEntry>


</Dictionary>

A.7
Definitions of units-of-measure


The definitions of the some commonly used unit-of-measure (uom) values shall be the same as can be XML encoded in the GML 3.1.1 dictionary:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" xmlns:gml="http://www.opengis.net/gml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/gml gml/3.1.1/base/coordinateReferenceSystems.xsd" gml:id="UnitsDictionary">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<description>Example GML Dictinary of unit definitions.</description>



<name>Units Dictionary</name>



<dictionaryEntry>




<ConventionalUnit gml:id="degree">





<name>degree</name>





<name codeSpace="urn:ogc:def:parameter:EPSG:6.3:">9102</name>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:uom:OGC:1.0:degree</name>





<quantityType>angle</quantityType>





<conversionToPreferredUnit uom="#radian">






<factor>1.74532925199433E-02</factor>





</conversionToPreferredUnit>




</ConventionalUnit>



</dictionaryEntry>



<dictionaryEntry>




<BaseUnit gml:id="radian">





<name>radian</name>





<quantityType>angle</quantityType>





<unitsSystem xlink:href="urn:ogc:ToBeSupplied"/>




</BaseUnit>



</dictionaryEntry>



<dictionaryEntry>




<BaseUnit gml:id="metre">





<name>metre</name>





<name codeSpace="urn:ogc:def:parameter:EPSG:6.3:">9001</name>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:uom:OGC:1.0:metre</name>





<quantityType>length</quantityType>





<unitsSystem xlink:href="urn:ogc:SI"/>




</BaseUnit>



</dictionaryEntry>



<dictionaryEntry>




<BaseUnit gml:id="unity">





<name>unity</name>





<name codeSpace="urn:ogc:def:uom:EPSG:6.3:">8805</name>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:uom:OGC:1.0:unity</name>





<quantityType>scale factor</quantityType>





<unitsSystem xlink:href="urn:ogc:ToBeSupplied"/>




</BaseUnit>



</dictionaryEntry>


</Dictionary>

A.8
Definitions of data types


The definitions of the some commonly used data types shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile:


<?xml version="1.0" encoding="UTF-8"?>


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/gml gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xsd" 


gml:id="parameterTypeDictionary">



<!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 -->



<name>dataType URN standard values</name>



<name>Data type of a quantity. Usually refers to a data type defined in measures.xsd or allowed in the ParameterValueType of coordinateOperations.xsd. </name>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="measure">





<description>General numeric value of a quantity, with its associated unit of measure. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:measure</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="length">





<description>Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:length</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="scale">





<description>Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as one, percent, permil, or parts-per-million. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:scale</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="time">





<description>Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:time</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="gridLength">





<description>Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.</description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:gridLength</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="angle">





<description>Value of an angle quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:angle</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="lengthOrAngle">





<description>Value of a length or angle quantity, where an angle can be recorded in either degree-minute-second format or single value format. Often used for horizontal ground coordinates. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:lengthOrAngle</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="string">





<description>String value of a quantity. A string value does not have an associated unit of measure. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:string</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="positiveInteger">





<description>Positive integer value of a quantity, usually used for a count. An integer value does not have an associated unit of measure. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:positiveInteger</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="nonNegativeInteger">





<description>Zero or positive integer value of a quantity. An integer value does not have an associated unit of measure. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:nonNegativeInteger</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="boolean">





<description>Boolean value of a quantity. A Boolean value does not have an associated unit of measure. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:boolean</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="measureList">





<description>Ordered sequence of two or more numeric values of a quantity list, where each value has the same associated unit of measure. An element of this type contains a space-separated list of double values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:measureList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="lengthList">





<description>Ordered sequence of two or more numeric values of a list of Length measures. Each value has the same associated unit of measure suitable for a length, such as metres or feet. An element of this type contains a space-separated list of double values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:lengthList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="scaleList">





<description>Ordered sequence of two or more numeric values of a list of Scale measures. Each value has the same associated unit of measure suitable for a scale factor, such as one, percent, permil, or parts-per-million. An element of this type contains a space-separated list of double values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:scaleList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="angleList">





<description>Ordered sequence of two or more numeric values of a list of Angle measures. Each value has the same associated unit of measure suitable for an angle, such as degrees or radians. An element of this type contains a space-separated list of double values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:angleList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="timeList">





<description>Ordered sequence of two or more numeric values of a list of Time measures, each recorded as a single number. Each value has the same associated unit of measure suitable for a time value, such as seconds or days. An element of this type contains a space-separated list of double values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:timeList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="gridLengthList">





<description>Ordered sequence of two or more Grid Length measures. Each value has the same associated unit of measure suitable for length along the axes of a grid, such as pixel spacings or grid spacings. An element of this type contains a space-separated list of double values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:gridLengthList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="integerList">





<description>Ordered sequence of two or more integer values, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated list of integer values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:integerList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="positiveIntegerList">





<description>Ordered sequence of two or more positive integer values, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated list of integer values. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:positiveIntegerList</name>




</Definition>



</dictionaryEntry>



<!-- ===================================================== -->



<dictionaryEntry>




<Definition gml:id="anyURI">





<description>Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. </description>





<name codeSpace="urn:ogc:tc:urn:doc:bpp:06-023">urn:ogc:def:dataType:OGC:1.1:anyURI</name>




</Definition>



</dictionaryEntry>


</Dictionary>

[1] Bibliography


[2] OGC 02-058, Web Feature Service Implementation Specification, v1.0.0


[3] OGC 03-065r6, Web Coverage Service Implementation Specification, v1.0.0


[4] OGC 05-013, Web Coordinate Transformation Service Implementation Specification, draft


[5] OGC 05-060, URNs 05-010 change request – Specify data type URNs 


[6] OGC 05-091r2, Add additional objectTypes and authorities to the OGC “def” URN scheme


[7] OGC 05-095r1, GML 3.1.1 common CRSs profile


[8] ISO 31:1992, Quantities and Units. (13 Parts, with revisions 1998)


[9] XML Schema: Component Designators, W3C Working Draft 29 March 2005


		

		





		ii

		Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 





		Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 

		iii









06-023r1 URN Definitions Folder/06-023r1 URN definitions.pdf


 


 


Open Geospatial Consortium Inc. 


Date: 2006-08-08 


Reference number of this OGC™ document: 06-023r1 


Version: 1.1.0 


Category: OGC™ Best Practices Paper 


Editor: Arliss Whiteside 


Definition identifier URNs in OGC namespace 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  
To obtain additional rights of use, visit http://www.opengeospatial.org/legal/. 


Recipients of this document are invited to submit, with their comments, notification of any 
relevant patent rights of which they are aware and to provide supporting documentation. 


Document type:  OGC™ Best Practices Paper 
Document subtype: (none) 
Document stage: Approved Best Practices Paper version 1.1 
Document language:  English 


 
 



http://www.opengeospatial.org/legal/





OGC 06-023r1 


Contents Page 


i. Preface.................................................................................................................... iv 
ii. Document contributor contact points..................................................................... iv 
iii. Revision history .......................................................................................................v 
iv. Changes to the OGC Abstract Specification............................................................v 
v. Future work..............................................................................................................v 
Foreword ............................................................................................................................ vi 
Introduction........................................................................................................................ vi 
1 Scope........................................................................................................................1 
2 Conformance............................................................................................................1 
3 Normative references ...............................................................................................1 
4 Terms and definitions ..............................................................................................3 
5 Conventions .............................................................................................................5 


5.1 Symbols (and abbreviated terms) ..........................................................................5 
5.2 Document terms and definitions............................................................................5 


6 Background..............................................................................................................6 
6.1 Definition identifiers .............................................................................................6 
6.2 Use for Coordinate Reference Systems.................................................................6 
6.3 Relationships to other identification schemes .......................................................7 


6.3.1 URN and URL ....................................................................................................7 
6.3.2 URN and schema component designators...........................................................8 


7 OGC URN scheme for definitions...........................................................................9 
7.1 OGC URN scheme ................................................................................................9 
7.2 URNs for single objects.........................................................................................9 
7.3 URNs for not-completely-specified objects ........................................................13 
7.4 URNs for combined objects ................................................................................13 


7.4.1 Overview...........................................................................................................13 
7.4.2 URN combined references for compound coordinate reference systems .........15 
7.4.3 URN combined references for concatenated operations...................................15 
7.4.4 URN combined references for projected or derived CRSs ...............................15 
7.4.5 URN combined references for datum and coordinate system...........................16 


8 URN values for definitions and concepts in ogc namespace.................................16 
8.1 Introduction .........................................................................................................16 
8.2 CRS definitions ...................................................................................................16 
8.3 CRS code list values definitions..........................................................................17 
8.4 Unit-of-measure (uom) definitions......................................................................19 
8.5 Data type definitions............................................................................................20 


Annex A (normative)  GML dictionaries of OGC definitions...........................................23 
A.1 Introduction .........................................................................................................23 


ii Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


A.2 Definitions of derivedCRSType values...............................................................23 
A.3 Definitions of verticalDatumType values ...........................................................25 
A.4 Definitions of pixelInCell values.........................................................................26 
A.5 Definitions of rangeMeaning values ...................................................................26 
A.6 Definitions of axisDirection values .....................................................................27 
A.7 Definitions of units-of-measure...........................................................................33 
A.8 Definitions of data types......................................................................................34 


Bibliography ......................................................................................................................39 
 


Tables Page 


Table 1 — “authority” values for definitions in OGC URN namespace....................................... 11 
Table 2 — “objectType” values for definitions in OGC URN namespace ................................... 12 
Table 3 — URNs for CRSs defined by OGC................................................................................ 17 
Table 4 — URNs for derivedCRSType values ............................................................................. 17 
Table 5 — URNs for verticalDatumType values .......................................................................... 17 
Table 6 — URNs for pixelInCell values ....................................................................................... 18 
Table 7 — URNs for rangeMeaning values .................................................................................. 18 
Table 8 — URNs for axisDirection values.................................................................................... 18 
Table 9 — URNs for units-of-measure ......................................................................................... 20 
Table 10 — URNs for data types .................................................................................................. 20 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  iii
 







OGC 06-023r1 


i. Preface 
NOTE  The previous version of this document was numbered 05-010, now renumbered 06-023r1 after 
revision in 2006. This document has been slightly changed to correct the OGC URN scheme reference 
document number. The correct document number is 04-013r4.  


This revised version of this document adds additional allowed “authority” and 
“objectType” values, plus specifies URNs for data types, as proposed in change requests 
OGC 05-091r2 and 05-060. In addition, corrections have been made to the XML 
documents listed in Annex A. The changes made in this version are tracked in the 
Microsoft Word (.doc) format of this document. 


This Best Practices Paper specifies Universal Resource Names (URNs) in the “ogc” URN 
namespace to be used for identifying definitions. This document specifies the formats 
used by these URNs, plus a set of specific URNs for specific definitions. These 
definitions should be used wherever applicable by implementations of various OGC 
Implementation Specifications, including GML, WMS, WFS, and WCS.  


This document does not require or encourage OGC specifications to use only URNs 
defined in the "ogc" URN namespace. In addition, it does not encourage use of URNs 
when URLs are appropriate. Furthermore, other OGC documents do and can specify 
more URNs in the "ogc" URN namespace. 


However, OGC specifications should specify that all URI values used with that 
specification have well-specified formats and meanings, preferably electronically 
accessible meanings. If well-specified URI values are not available for an OGC 
specification need, specification of new URNs in the "ogc" URN namespace should be 
considered (in that specification or elsewhere). If new URNs are being specified in 
another URN namespace for use with OGC specifications, it would be useful if the same 
URN structure is used as is used by the OGC. 


Suggested additions, improvements, and comments on this specification are welcome and 
encouraged. Such suggestions may be submitted to the editor by email message. 
Extensive and/or multiple changes can be suggested by making changes in an edited copy 
of this document. If you choose to submit suggested changes by editing this document, 
please make your suggested changes with change tracking on. 


ii. Document contributor contact points 


All questions regarding this document should be directed to the editor or the contributors: 


iv Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


Name Organization 
Arliss Whiteside BAE Systems E&IS 
John Evans NASA / GST, Inc. 
Keith Pomakis CubeWerx, Inc. 
Simon Cox CSIRO Exploration and Mining 


 


iii. Revision history 


Date Release Editor Primary clauses 
modified 


Description 


2004-12-17 0.0.0 Arliss 
Whiteside 


All Initial version 


2005-01-07 0.0.0 Arliss 
Whiteside 


7.1, 7.2 Adds information on referencing EPSG coordinate 
axis objects 


2005-01-26 1.0.0 Arliss 
Whiteside 


Cover, i, 7.1, 7.2 Removed information on referencing EPSG 
coordinate axis objects, edited as approved 
Recommendation Paper 


2006-02-13 1.0.1 Arliss 
Whiteside 


Cover, i, 7.1, 
7.5, A 


Added additional allowed “authority” and 
“objectType” values, plus URNs for data  types 


2006-07-04 1.0.2 Simon 
Cox 


v, 6.1, 6.3, 7.1 Add to future work, TBD 


2006-07-24 1.1.0 Arliss 
Whiteside 


All Final editing 


2006-08-08 1.1.0 Arliss 
Whiteside 


Various Correct document number for OGC URN Scheme 


 


iv. Changes to the OGC Abstract Specification 


The OGC™ Abstract Specification does not require changes to accommodate the 
technical contents of this document. 


v. Future work 


Improvements in this document are desirable to: 


a) Add more and complete existing examples in Clause 7 
b) Specify additional URNs in Clause 8 
c) Specify meanings of additional URNs in Annex A 
d) Replace static list of Authorities with dynamic registry (hosted by OGC Network) 
e) Replace the static list of Object Types with dynamic registry 
f) Point to standard resolution service for OGC URNs 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  v
 







OGC 06-023r1 


Foreword 


This document includes one normative annex: Annex A. 


Attention is drawn to the possibility that some of the elements of this document may be 
the subject of patent rights. The Open Geospatial Consortium Inc. shall not be held 
responsible for identifying any or all such patent rights. 


Introduction 


This document specifies Universal Resource Names (URNs) in the “ogc” URN 
namespace to be used for identifying definitions. These definitions include definitions of 
Coordinate Reference Systems (CRSs) and related objects, as specified in OGC Abstract 
Specification Topic 2: Spatial referencing by coordinates, plus a several other resource 
types for which standard identifiers are useful in OGC Web Services. This document 
specifies the formats used by these URNs, including formats that can reference 
definitions recorded in the EPSG database and by other authorities. This document also 
specifies URNs for some specific definitions for which OGC is the custodian. 


vi Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC™ Best Practices Paper OGC 06-023r1


 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  1
 


Definition identifier URNs in OGC namespace 


1 Scope 


This document specifies Universal Resource Names (URNs) in the “ogc” URN 
namespace to be used for identifying definitions. These definitions include definitions of 
Coordinate Reference Systems (CRSs) and related objects, as specified in OGC Abstract 
Specification Topic 2: Spatial referencing by coordinates. This document specifies the 
formats used by these URNs, including formats that can reference any definition recorded 
in the EPSG database. This document also specifies URNs for some specific definitions. 


This document specifies URN formats for several uses, currently including referencing 
definitions of: 


a) Single objects 
b) Not-completely-specified objects 
c) Combined objects 


Most XML attributes and elements with the anyURI data type that reference definitions, 
in all approved and draft OGC Implementation Specifications, can use a URN value in 
the “ogc” URN namespace. Such a URN shall be used when a URL cannot be used to 
electronically access that definition, by all clients and servers that may need to reference 
that definition. 


The “ogc” definition URNs specified here should be used wherever applicable by 
implementations of all approved and draft OGC Implementation Specifications, including 
GML, WMS, WFS, and WCS. Additional definition URNs in the “ogc” URN namespace 
are and will be specified in other OGC documents. 


2 Conformance 


Conformance with this specification shall be checked using all the relevant tests specified 
in each separate specification that normatively references this specification, and 
specifically references the applicable parts of this specification. 


3 Normative references 


The following normative documents contain provisions which, through reference in this 
text, constitute provisions of this document. For dated references, subsequent 







OGC 06-023r1 


amendments to, or revisions of, any of these publications do not apply. For undated 
references, the latest edition of the normative document referred to applies. 


European Petroleum Survey Group database: EPSG Geodesy Parameters, available 
through http://www.epsg.org/ 


IETF RFC 2141 (May 1997), URN Syntax, R. Moats 
<http://www.ietf.org/rfc/rfc2141.txt> 


IETF RFC 2396 (August 1998), Uniform Resource Identifiers (URI): Generic Syntax, 
Berners-Lee, T., Fielding, N., and Masinter, L., eds., 
<http://www.ietf.org/rfc/rfc2396.txt> 


ISO/IEC 18025:2005, Information technology — Computer graphics and image 
processing — Environmental Data Coding Specification (EDCS) 


ISO 31:1992, Quantities and Units. (13 Parts, with revisions 1998) 


ISO 1000:1998, The International System of Units (SI), 7th edition 


ISO 19109:2004. Geographic information - Rules for application schema 


OGC 03-105r1, OpenGIS Geography Markup Language (GML) Implementation 
Specification, Version 3.1.0 


OGC 04-013r4, A URN namespace for the Open Geospatial Consortium (OGC), draft 


OGC 04-024, Geographic information — Web Map Service interface, v1.3.0 


OGC 04-092r4, OpenGIS Geography Markup Language (GML) Implementation 
Specification Schemas, Version 3.1.1 


OGC 05-008, OGC Web Services Common Specification, Version 1.0.0 


OGC 05-020r4, Technical Committee Policies and Procedures 


OGC 05-087r2, Observations and Measurements 


OGC 05-096r1, GML 3.1.1 grid CRSs profile 


OGC 05-099r2, GML 3.1.1 simple dictionary profile 


OGC 05-103, The OpenGIS Abstract Specification, Topic 2: Spatial Referencing by 
Coordinates 


OGC 05-108r1, Geographic information — Geography Markup Language (GML) 


W3C Recommendation January 1999, Namespaces In XML, 
http://www.w3.org/TR/2000/REC-xml-names


2 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 



http://www.w3.org/TR/2000/REC-xml-names





OGC 06-023r1 


W3C Recommendation 04 February 2004, Extensible Markup Language (XML) 1.0 
(Third Edition), http://www.w3.org/TR/REC-xml 


W3C Recommendation 2 May 2001: XML Schema Part 0: Primer, 
http://www.w3.org/TR/2001/REC-xmlschema-0-20010502/


W3C Recommendation 2 May 2001: XML Schema Part 1: Structures, 
http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/


W3C Recommendation 2 May 2001: XML Schema Part 2: Datatypes, 
http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/


UCUM, Unified Code for Units of Measure, Schadow, G. and McDonald, C. J. (eds.), 
http://aurora.rg.iupui.edu/UCUM


In addition to this document, this specification includes several normative XML 
document files. Following approval of this document, these files will be posted online at 
the URL http://schemas.openis.net/definitions/. These XML files are also bundled with 
the present document. In the event of a discrepancy between the bundled and online 
versions of the XML files, the online files shall be considered authoritative. 


4 Terms and definitions 


For the purposes of this document, the following terms and definitions apply. 


4.1  
client 
software component that can invoke an operation from a server 


4.2  
document type 
class or structure of a document, which implies its intended application 


NOTE  Some document types imply a formal structure or grammar (e.g., schemas, used for document 
design and validation), while for other document types the structure is more generally defined (e.g., 
Discussion Papers). 


4.3  
feature 
abstraction of a real world phenomena [ISO 19109] 


4.4  
feature type 
class for all instances of that feature type 


NOTE  The instances of a class that represents an individual feature type are feature instances. 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  3
 



http://www.w3.org/TR/2001/REC-xmlschema-0-20010502/

http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/

http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/

http://aurora.rg.iupui.edu/UCUM





OGC 06-023r1 


4.5  
interface 
named set of operations that characterize the behaviour of an entity [ISO 19119] 


4.6  
nil 
explanation for a void value or other missing information [OGC 05-108r1] 


4.7  
operation 
specification of a transformation or query that an object may be called to execute [ISO 
19119] 


4.8  
parameter 
variable whose name and value are included in an operation request or response 


4.9  
phenomenon 
feature characteristic, the estimation of which is the purpose of an observation [OGC 05-
087r2] 


NOTE  A phenomenon may be a physical property (such as temperature, length, etc), a classification 
(such as species), frequency or count, or an existence indication. 


4.10  
request 
invocation of an operation by a client 


4.11  
response 
result of an operation, returned from a server to a client 


4.12  
server 
service instance 
a particular instance of a service [ISO 19119 edited] 


4.13  
service 
distinct part of the functionality that is provided by an entity through interfaces [ISO 
19119] 


capability which a service provider entity makes available to a service user entity at the 
interface between those entities [ISO 19104 terms repository] 


4 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


4.14  
version 
version of an Implementation Specification (document) and XML Schemas to which the 
requested operation conforms 


5 Conventions 


5.1 Symbols (and abbreviated terms) 


CRS Coordinate Reference System 


EDCS Environmental Data Coding Standard 


EPSG European Petroleum Survey Group 


GML Geography Markup Language 


ISO International Organization for Standardization 


OGC Open Geospatial Consortium 


OWS OGC Web Service, or Open Web Service 


SI The International System of Units  


TBD To Be Determined 


UCUM Unified Code for Units of Measure 


URI Universal Resource Identifier 


URL Uniform Resource Locator 


URN Universal Resource Name 


WCS Web Coverage Service 


WFS Web Feature Service 


WMS Web Map Service 


XML Extensible Markup Language 


1D One Dimensional 


2D Two Dimensional 


3D Three Dimensional 


5.2 Document terms and definitions 


The following specification terms and definitions are used in this document: 


a) shall – verb form used to indicate a requirement to be strictly followed to conform to 
this specification, from which no deviation is permitted 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  5
 







OGC 06-023r1 


b) should – verb form used to indicate desirable ability or use, without mentioning or 
excluding other possibilities 


c) may – verb form used to indicate an action permissible within the limits of this 
specification 


d) can – verb form used for statements of possibility 
e) informative – a part of a document that is provided for explanation, but is not 


required 


f) normative – a part of a standards document that is required 
g) annex – an auxiliary part of a document, called an “appendix” in United States 


English 


h) clause – a major part of a document, called a “section” or “paragraph” in United 
States English 


i) subclause – a secondary part of a clause or annex, called a “subsection” in United 
States English 


6 Background 


6.1 Definition identifiers 


The OGC URN scheme is defined in OGC Document 04-013r4. It specifies a family of 
identifiers for resources of interest in OGC Web Services, mostly resources provided or 
defined by the OGC.  


The “def” branch of the OGC URN scheme is defined in this document. This branch 
provides standard identifiers for many concepts and definitions. These definitions include 
coordinate reference systems and related components, units of measure, nils, and various 
object types and definitions. These include definitions and concepts maintained by OGC 
and by other authorities who do not provide URNs for their concepts, but which are of 
importance in OGC Web Services and encodings.  


The URN syntax is useful because (a) it provides persistent identifiers that are 
independent of resource location, while (b) being part of the URI scheme, and thus 
compatible with referencing in a web context. A uniform identification scheme is useful 
for interoperability, allowing use of short identifiers for concepts. These identifiers allow 
suitable software to make rapid comparisons, and to obtain values from a local cache 
when available, in preference to accessing definitions from a remote service.  


6.2 Use for Coordinate Reference Systems  


One frequent use is referencing the CRS for an OWS server input or output; another use 
Is referencing the CRS for a feature geometry or bounding box. These URNs are used to 
identify the referenced CRS, not to transfer a definition of that CRS. Most of this material 


6 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


is also applicable to referencing CRS components and Coordinate Operations and their 
components, often referred to as objects. 


NOTE 1 Subclause C.14 of [OGC 05-008] summarizes many of the requirements considered when 
specifying how to reference CRSs.  


Document [OGC 05-108] specifies that each specific OWS shall always reference a CRS 
by using a XML attribute or element with the type anyURI. Such an anyURI value can be 
used to reference a CRS whether the definition of that CRS is included in the same data 
transfer, is NOT included in the same data transfer, cannot be electronically accessed, or 
can be electronically accessed. 


NOTE 2 In XML Schemas, the anyURI data type is the standard way to briefly reference (or cite) 
something specified elsewhere. XML attributes with the type anyURI include the GML defined attributes 
named gml:srsName, gml:uom, xlink:href, and gml:codeSpace. 


When using a XML attribute or element with the type anyURI to reference a CRS, CRS-
related, or other object, that URI shall have a value which uses one of two alternative 
URI formats: 


a) Universal Resource Locator (URL), with standard form. The URL format should be 
used whenever the referenced definition is known to be electronically available using 
this standard URL. 


b) Universal Resource Name (URN), with a specified form. The URN format shall be 
used whenever the referenced definition is not, or might not be, available using a 
URL. This URN shall reference data that is specified by some “authority” and is 
“well-known” to both client and server software, including multiple clients and 
multiple servers. 


NOTE 3 Two widely-used forms of URI are URL and URN. We are specifying using URNs as the way 
of citing CRS-related definitions that are "well-known" but are not adequately electronically available 
using a URL.  


Subclause 10.3.2 of the OWS Common specification [OGC 05-108] specifies when and 
how to use URLs to reference a CRS or CRS-related object. Use of URNs is expected to 
be more common than use of URLs, and specific OWS Implementation Specifications 
are expected to specify many standard URN values.  


6.3 Relationships to other identification schemes 


6.3.1 URN and URL 


URNs [IETF RFC 2141] are a kind of URI [IETF RFC 2396], and may be used as the 
value of references where a URI is required. This is often the case in GML-based 
encodings (e.g., the standard XML attributes xlink:href, xlink:role, xlink:arcrole, 
srsName, uom, codeSpace) and in OGC Web Services (OWS) operation requests and 
responses.  


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  7
 







OGC 06-023r1 


A URN serves as an identifier of a resource or concept. A detailed description of the 
resource may also be available online, with a resource locator (URL) providing an access 
point. In general, there is no direct mapping or algorithm to obtain a URL for the resource 
designated by a URN. URNs are intended to be more persistent than URLs, so that they 
remain valid even if a resource description is relocated. However, a resolution service or 
resolver may provide a URL corresponding to a URN.  


NOTE  In the future it is expected that the OGC Network will provide a resolution service for URNs in 
the OGC scheme.  


6.3.2 URN and schema component designators 


In a few places in OWS interfaces, an identifier for an XML component is required. In 
these cases, it is important that the identifier reference the actual schema definition, 
which may then be used as the template for an OWS request or response.  


A number of options are available for identification of schema components. The W3C 
XML Schema recommendation provides QName (qualified name – see XML Schema 
Part 2, clause 3.2.18). A QName has the lexical form ns:name where “ns” is an XML 
namespace prefix for which a namespace declaration is in scope. The QName thus 
corresponds with an identifier tuple {namespace, local name} where “namespace” is the 
fully scoped identifier for the XML namespace. In contrast, a URN identifier is complete, 
and does not depend on context for resolution of the namespace prefix.  


NOTE  The W3C XML activity is currently considering a more complete scheme for identification of 
schema components, documented in the working draft XML Schema: Component Designators [8].  


In OWS interfaces, XML components are generally identified using a QName.  


While there is some overlap of the meaning of schema component designators with the 
OGC URN scheme used for dataTypes (clause 8.5) and featureTypes, it should be 
understood that a URN identifies the concept, and not just its XML and XML Schema 
implementation. Of course, the concepts denoted by identifiers from the featureType 
branch generally have XML Schema implementations, so direct mappings are implied. 
Note that the mapping may be one-to-many, for example to manage versioning of the 
XML schema implementation independent of versioning of the concept.  


Table 10 in Subclause 8.5 provides definitions in the dataType branch, together with 
mappings to a QName designation of equivalent XML schema components. That 
subclause provides the complete definition of URNs in the dataType branch, since 
“OGC” is the only authority recognised for this branch.  


For the featureType branch, it is expected that many authorities will have an interest in 
using the “def” branch of the OGC URN scheme to provide feature type identifiers. It is 
incumbent on each authority to indicate the mapping from the URN form of identifier to 
other schema component designators, such as a QName, so that the use of these in OWS 
interfaces is unambiguous.  


8 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


7 OGC URN scheme for definitions 


7.1 OGC URN scheme 


The OGC URN scheme is defined in OGC Document 04-013r4. It specifies a family of 
identifiers for resources of interest in the context of OGC Web Services, mostly 
concerning resources provided or defined by OGC. The OGC scheme has the form  


urn:ogc:{category.label}:{resource.group}:{resource.type}{-
resource.subtype}?{[doc.id]}?:{[resource.label]}?:{[release]}?:{[parameters]} 


The category.label must be one of “specification”, “service”, “def” or “tc”. This 
document specifies the “def” branch.  


7.2 URNs for single objects 


To identify the definition of a single object, the URN shall have the form: 


 urn:ogc:def:objectType:authority:version:code 
 
The “urn”, “ogc”, “def”, and six “:” parts of this URN are fixed. The “ogc” part shall be 
the registered namespace authority for all URNs used by the OGC. The “def” part shall 
be the fixed category label which identifies all the OGC URNs that reference object 
definitions. The “objectType” part shall be an OGC-specified unique-identifier of the 
type of the referenced definition. 


NOTE 1 The ”ogc” part denotes the namespace authority in a URN, and the value used should be 
registered with IANA. Pending the official registration of the OGC scheme with IETF/IANA, the value “x-
ogc” should be used, where the “x” denotes an experimental namespace. The “def” part is a value for the 
(resource.group}part as specified in [OGC 04-013r4]. This “authority” part is an implementation of the 
{resource.type} part specified in [OGC 04-013r4]. The {resource.subtype} in [OGC 04-013r4] is not used.  
This “authority” part is an implementation of the (doc.id) specified in [OGC 04-013r4]. This “version” part 
is an implementation of the (release) specified in [OGC 04-013r4]. This “code” part is an implementation 
of the (resource.label) specified in [OGC 04-013r4]. The “value1:value2” parts specified in Subclause 7.3 
is an implementation of the (parameters) specified in [OGC 04-013r4]. 


The “objectType” part shall be the OGC-specified token for the type of concept identified 
by the URN.  


NOTE 2 The set of object types denoted by the OGC URN scheme is currently specified normatively in 
Table 2 in this document and revisions. In future it is expected that this mechanism will be replaced by a 
dynamic registry.  


The “authority” part shall be the OGC-specified abbreviation for the authority 
organization that specified the referenced definition.  


NOTE 3 The set of authorities recognised for the purposes of the OGC URN scheme is currently 
specified normatively in Table 1 in this document. In future it is expected that this mechanism will be 
replaced by a dynamic registry.  


The optional “version” part shall be the version of the authority or code for the referenced 
definition. The “code” part shall be a unique identifier of the referenced definition, as 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  9
 







OGC 06-023r1 


specified by the referenced authority. The “code” part can be human-understandable, 
provided that it is unique for that authority, version, and objectType. In this use, all 
textual parts of URN values shall be case-insensitive. 


The “version” part of these URNs can be omitted when the referenced definition does not 
have a version, and the referenced definition is not specific to an authority version. When 
included, the “version” shall be recorded in the format specified by the authority. The 
version format is sometimes “N.N.N” or “N.N”, where each “N” stands for an integer. If 
no other version identification is provided by the authority, a year or other date can be 
used. No "v" or other version prefix shall be included. 


The required “authority” part identifies an authority recognized by the OGC, and the 
allowed “authority” values shall include those listed in Table 1. 


10 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


Table 1 — “authority” values for definitions in OGC URN namespace  


“authority” 
value 


Referenced authority Reference to 
specification 


Use for  
“code” value 


Use for  
“version” value 


EDCS Environmental Data 
Coding 
Specification a


ISO/IEC 18025:2005 Label or Code 
column value f  


2005 


EPSG EPSG database b http://www.epsg.org/ EPSG numeric 
identifier value 


Database 
version 


OGC Open Geospatial 
Consortium c


Clause 8 g Values specified 
in Clause 8 g


Values specified 
in Clause 8 g


SI International System 
of Units d


ISO 1000:1992,  
http://www.bipm.fr/en


/si/ 


Values from 
Symbol column 
of tables h


2000 


UCUM Unified Code for 
Units of Measure e


http://aurora.regenstrie
f.org/UCUM 


“Case sensitive” 
form of code i


none 


a The Environmental Data Coding Specification (EDCS) is recognized as an authority that specifies a 
vocabulary of phenomena in its Attributes dictionary (“EAs”). 
b The EPSG database is now maintained by the OGP Surveying and Positioning Committee, and is 
recognized as an authority that specifies many CRS-related definitions. 
c The Open Geospatial Consortium (OGC) recognizes itself as one or more authorities, here using “OGC” as 
the one current authority abbreviation. 
d The International System of Units (SI) is recognized as an authority that specifies basic units of measure 
and a limited selection of derived units. 
e The Unified Code for Units of Measure (UCUM) is recognized as an authority that specifies symbols for 
denoting a large set of basic units of measure and a grammar that defines combinations of these that correspond 
with symbols that are commonly used in commerce, scientific and engineering applications.  
f Values from the Label or Code columns of the attribute Tables 6.5 – 6.30 of ISO/IEC 18025:2005. 
g The OGC shall explicitly specify each “code” and “version” value defined by the “OGC” authority. Clause 
8 of this document specifies some of these codes and versions. Additional OGC codes and versions are now 
specified in Clause 10 of OGC 05-096r1, and more can be specified in future OGC Implementation 
Specifications and Best Practices Papers. 
h Plus combinations of symbols as defined in the SI specification. Note that some symbols include elements 
that are not available on a standard character entry device (e.g. , °C). For these units, it is recommended that 
the UCUM symbol and URN be used in preference. See also footnote i.  
i UCUM specifies code values or symbols using the reduced character set universally available on character 
entry devices (“7-bit ascii"), and combinations of these generated using the grammar described in the UCUM 
specification. For this reason the use of UCUM codes is preferred to those specified in ISO 31:1992 [7], as the 
latter specifies the use of superscripts and non-latin symbols for certain units. While these are in principle 
supported by Unicode, for practical reasons the reduced character-set encoding is preferred for use in the URN 
syntax. 


 
The required “objectType” part identifies the type of the referenced definition, and the 
allowed “objectType” values shall include those listed in Table 2. 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  11
 







OGC 06-023r1 


Table 2 — “objectType” values for definitions in OGC URN namespace  


“objectType” value URN references Object type defined in 


axis coordinate system axe definition 9.3 in OGC 05-103 
axisDirection axis direction code definition 9.4 in OGC 05-103 
coordinateOperation coordinate operation definition 11.1 in OGC 05-103 
crs coordinate reference system definition 8.2 in OGC 05-103 
cs coordinate system definition 9.2 in OGC 05-103 
datum datum definition 10.1 in OGC 05-103 
dataType data type definition D.1 in OGC 05-007r4 
derivedCRSType derived CRS type code definition 8.3 in OGC 05-103 
documentType document type definition 4. in OGC 05-020r4 
ellipsoid ellipsoid definition 10.2.2 in OGC 05-103 
featureType feature type definition as specified in an application 


schema (ISO 19109) 
group operation parameter group definition 11.2 in OGC 05-103 
meaning parameter meaning definition D.1 in OGC 05-007r4 
meridian prime meridian definition 10.2.1 in OGC 05-103 
method operation method definition 11.2 in OGC 05-103 
nil explanations for missing information 8.2.3.1 in OGC 05-108r1 
parameter operation parameter definition 11.2 in OGC 05-103 
phenomenon observable property definition 6.2 in OGC 05-087r2 
pixelInCell Pixel in cell code definition 10.3 in OGC 05-103 
rangeMeaning range meaning code definition 9.4 in OGC 05-103 
referenceSystem value reference system definition D.1 in OGC 05-007r4 
uom unit of measure definition  
verticalDatumType vertical datum type code definition 10.3 in OGC 05-103 


 
Specializing the above, the URN value for an anyURI that references one object in the 
European Petroleum Survey Group (EPSG) database shall have the form: 


 urn:ogc:def:objectType:EPSG:version:code 
 
In this case, the “authority” part of a URN shall be “EPSG”. The “code” part of a URN 
should be the EPSG “code” unique identifier of the referenced definition. Alternately, the 
“code” part of a URN can be the EPSG “name” unique identifier. The “version” part shall 
be included in this case, since the EPSG sometimes deprecates and replaces existing 
definitions. 


NOTE 2 The EPSG does not make any substantive changes to existing entries. However, if a record is 
found to be incorrect, that record is deprecated and replaced. When this is done, the deprecation field of the 
deprecated record is changed from "no" to "yes". (In some implementations, "no" may be "0" or "false", 


12 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


and "yes" may be "1" or "true"). If we do not include the EPSG dataset version and the record has been 
deprecated, you will not know whether the reference relates to the record before or after it was deprecated. 


Example 1 The URN value for CRS 26986 specified by version 6.3 of the EPSG database is: 
 urn:ogc:def:crs:EPSG:6.3:26986 
 
Example 1 The URN value for the “WGS 84 longitude-latitude” CRS specified in Subclause B.3 of 
WMS 1.3 (previously referenced as “CRS:84”) is: 
 urn:ogc:def:crs:OGC:1.3:CRS84 
 


7.3 URNs for not-completely-specified objects 


A URN can also be used to denote a not-completely-specified object, which is specified 
without the values of a few identified parameters. In this case, the URN value includes 
the values for each identified parameter. To identify an object with two unspecified 
parameters, the URN shall have the form: 


urn:ogc:def:objectType:authority:version:code:value1:value2 
 
NOTE 1 Not-completely-specified objects are very useful when many similar objects are needed, 
especially when the possible values of the distinguishing parameters cannot be enumerated. 


EXAMPLE 1 Subclause 6.7.3.4 and Annex B of WMS 1.3.0 specify five not-completely-specified map 
projections, where the parameters specify the central meridian, etc. 


EXAMPLE 2 Clause 7 of [OGC 05-096r1] specifies two not-completely-specified unrectified image 
CRSs, where the single parameter specifies the image identifier. 


In this URN form, the values for the previously-identified parameters are added to the 
URN form for a single object, as specified above. The obvious variations on the URI 
form can be used when one or three parameters are unspecified. The object identified by 
the “authority”, “version”, and “code” must be completely specified with the exception of 
the values for a few clearly identified parameters. Whenever such a parameter value 
requires a unit of measure (uom), the uom for that parameter shall be specified by the 
referenced not-completely-specified object. 


EXAMPLE 3 The URN value for the Auto Orthographic CRS 42003 specified in Subclauses 
6.7.3.4 and B.9 of WMS 1.3.0 is: 
 urn:ogc:def:crs:OGC:1.3:AUTO42003:1:-100:45 
 
NOTE 2 Additional examples of not-completely-specified objects are specified in Subclauses B.7, B.8, 
B.10, and B.11 of WMS 1.3.0, and in Subclauses 10.1 through 10, 3 of [OGC 05-096r1]. 


7.4 URNs for combined objects 


7.4.1 Overview 


In some cases, it is useful to reference two or more well-known objects that are 
combined, where the combination is specified at run time. Such combining of two or 
more well-known objects shall only be used when all of the following conditions are true: 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  13
 







OGC 06-023r1 


a) The objects being combined are correct for the combination being formed, as these 
objects are specified in [OGC 05-103] for CRS-related objects. 


b) This combination of objects is not an existing well-known object, such as specified in 
the EPSG database. 


NOTE 1 If combining two or more well-known objects, please ask if this combination will be frequently 
used. If combining only EPSG codes because EPSG has not populated this combination, please send a 
request for this combination to the EPSG if this combination is likely to be frequently used. Similarly, if 
combining OGC codes, by themselves or with EPSG codes, please suggest that this combination be added 
to the OGC codes, if this combination is likely to be frequently used. 


c) The objects being combined are all in the “ogc” URN namespace, preferably all 
defined by the same authority (e.g., EPSG or OGC). 


NOTE 2 If objects specified by different authorities are combined, there is higher risk that these objects 
are not compatible. For example, some authorities might specify objects different from [OGC 05-103]. 


d) Using a URN for the combination is desirable, since it is not convenient to combine 
these objects in an XML document based on GML, and then reference this document 
using a URL (as specified in Subclauses 10.3.1 and 10.3.2 of [OGC 05-TBD]). 


A URN that identifies a definition that is itself defined by combining two or more objects 
shall be constructed by concatenating the URNs of the two individual objects into one 
URN, as follows: 


urn:ogc:def:objectType,objectType:authority:version:code,
objectType:authority:version:code 


 
Similarly, an identifier can concatenate the URNs of the three individual objects, using 
the URN form: 


urn:ogc:def:objectType,objectType:authority:version:code,
objectType:authority:version:code,objectType:authority:version
:code 


 
NOTE 3 When URNs are concatenated like this, the combined object is implicitly defined, and is not 
assigned a single object “code”. That is, the defined object is has no single code. 


In a concatenated URN, the first “objectType” is the type of the combined object. 
Combined references in a URN can be used for defining several types of objects, as 
specified by specific Implementation Specifications, including for: 


a) Compound coordinate reference systems 
b) Concatenated operations 
c) Projected and derived coordinate reference systems 
d) Combining a datum and a coordinate system into a coordinate reference system 
e) Objects defined by specific Implementation Specifications 


The first four combinations listed above are described in the following subclauses. 


14 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


7.4.2 URN combined references for compound coordinate reference systems 


A URN reference to combined objects can be allowed for any compound coordinate 
reference system (CompoundCRS) that combines two or three well-known CRSs. In this 
case, the URN shall concatenate the URNs of the two or three individual well-known 
CRSs. This combining is allowed only when all the conditions specified in Subclause 
7.3.1 are met. 


The URNs of the individual well-known CRSs shall be listed in the same order in which 
the individual coordinate tuples are combined to form the CompoundCRS 
coordinate tuple. All the “objectType” values shall be “crs”. 


EXAMPLE  The URN value for combining the EPSG 27700 and EPSG 5701 CRSs is: 


 urn:ogc:def:crs,crs:EPSG:6.3:27700,crs:EPSG:6.3:5701 
 
7.4.3 URN combined references for concatenated operations 


A URN reference to combined objects can be allowed for any concatenated coordinate 
operation (ConcatenatedOperation) that combines two or more well-known coordinate 
operations. In this case, the URN shall concatenate the URNs of the two or more well-
known coordinate operations. This combining is allowed only when all the conditions 
specified in Subclause 7.3.1 are met. 


NOTE 1 In particular, the coordinate operations concatenated must meet the stated constraint: The 
sequence of operations is constrained by the requirement that the source coordinate reference system of 
step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate 
reference system of the first step and the target coordinate reference system of the last step are the source 
and target coordinate reference system associated with the concatenated operation. 


NOTE 2 In a well-known dataset, a CoordinateOperation may be registered only in one direction, with 
the reverse operation being implied. This means that the roles of source and target CRS may have to be 
swapped if an implied-reverse CoordinateOperation is included in a ConcatenatedOperation. In this case, 
the swapped source and target CRS shall satisfy the above constraint. 


The URNs of the individual coordinate operations shall be concatenated in the order of 
coordinate operation application. The “objectType” values shall all be 
“coordinateOperation”. 


EXAMPLE  The URN value for combining the EPSG XXXX and EPSG YYYY coordinate operations 
is: 


urn:ogc:def:coordinateOperation,coordinateOperation:EPSG:6.3:XXXX,co
ordinateOperation:EPSG:6.3:YYYY 


 
7.4.4 URN combined references for projected or derived CRSs 


A URN reference to combined objects can be allowed for any projected coordinate 
reference system (ProjectedCRS) that combines a well-known GeographicCRS and a 
well-known (defined by) Conversion. In this case, the URN shall concatenate the URNs 
of the one well-known CRS, one well-known Conversion, and one well-known 
CartesianCS. This combining is allowed only when all the conditions specified in 
Subclause 7.3.1 are met. 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  15
 







OGC 06-023r1 


Similarly, a URN reference to combined objects can be allowed for any derived 
coordinate reference system (DerivedCRS) that combines a well-known base CRS, a 
well-known CoordinateSystem, and a well-known (defined by) Conversion. 


The URNs of the individual components of the projected or derived CRS shall be listed 
in the order of GeographicCRS, CS, and then Conversion. The four “objectType” values 
shall be “crs”, “crs”, “cs”, and “coordinateOperation”. 


EXAMPLE  The URN value for combining the EPSG XXXX CRS, EPSG YYYY CS, and EPSG 
ZZZZ Conversion to define a custom projected or derived CRS is: 


urn:ogc:def:crs,crs:EPSG:6.3:XXXX,cs:EPSG:6.3:YYYY,coordinateOperati
on:EPSG:6.3:ZZZZ 


 
7.4.5 URN combined references for datum and coordinate system 


A URN reference to combined objects can be allowed for a coordinate reference system 
that combines a well-known datum with a well-known coordinate system. In this case, 
the URN shall concatenate the URNs of one well-known datum and one well-known 
coordinate system. This combining is allowed only when all the conditions specified in 
Subclause 7.3.1 are met. 


The URNs of the individual components shall be listed in the order of datum and then 
coordinate system. The three “objectType” values shall be “crs”, “datum” and “cs”. 


EXAMPLE  The URN value for combining the EPSG XXXX datum and EPSG YYYY coordinate 
system to define a custom CRS is: 


 urn:ogc:def:crs,datum:EPSG:6.3:XXXX,cs:EPSG:6.3:YYYY 
 


8 URN values for definitions and concepts in ogc namespace 


8.1 Introduction 


This clause provides the normative specification and URNs for some specific object 
definitions defined by the OGC. Additional definitions in the “ogc” URN namespace will 
be specified in other OGC documents. For example, more URNs are specified in 
Subclause 7.1 of the GML grid CRSs profile [OGC 05-096r1]. 


NOTE  Many examples of “ogc” URN use for object definitions are contained in the GML examples in 
Annex A of this document, in Clause 7 of [OGC 05-096r1], and in Clause 6 of [OGC 05-095r1]. 


8.2 CRS definitions 


The definitions of Coordinate Reference Systems (CRSs) defined by the OGC shall use 
the URNs listed in Table 3. The URN parts shown as “99” ands “8888” represent 
numbers that shall be substituted for the specified parameter values. All of these CRSs 
are defined in Annex B of WMS 1.3 [OGC 04-024]. 


16 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


Table 3 — URNs for CRSs defined by OGC 


URN CRS name Definition reference 


urn:ogc:def:crs:OGC:1.3:CRS1 Map CS B.2 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:CRS84 WGS 84 longitude-latitude B.3 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:CRS83 NAD27 longitude-latitude B.4 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:CRS27 NAD83 longitude-latitude B.5 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:CRS88 NAVD 88 B.6 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:AUTO42001:99:8888 Auto universal transverse mercator B.7 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:AUTO42002:99:8888 Auto transverse mercator B.8 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:AUTO42003:99:8888 Auto orthographic B.9 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:AUTO42004:99:8888 Auto equirectangular B.10 in OGC 04-024 
urn:ogc:def:crs:OGC:1.3:AUTO42005:99 Auto Mollweide B.11 in OGC 04-024 


 


8.3 CRS code list values definitions 


The definitions of the standard values for the five CodeList stereotyped classes specified 
in Tables 9, 31, 32, 37, and 39 of OGC Abstract Specification Topic 2 [OGC 05-103] 
shall use the URNs listed in Tables 2 through 6. The definitions of these values shall be 
as specified in the XML documents in Subclauses A.2 through A.6. 


Table 4 — URNs for derivedCRSType values 


URN Value Brief definition 
urn:ogc:def:derivedCRSType:OGC:1.0:geographic geographic A coordinate reference system based on an 


ellipsoidal approximation of the geoid. 


urn:ogc:def:derivedCRSType:OGC:1.0:vertical vertical A coordinate reference system used for recording 
of heights or depths. 


urn:ogc:def:derivedCRSType:OGC:1.0:geocentric geocentric A coordinate reference system with the origin at 
the centre of mass of the earth. 


urn:ogc:def:derivedCRSType:OGC:1.0:engineering engineering A contextually local coordinate reference 
system. 


urn:ogc:def:derivedCRSType:OGC:1.0:image image An engineering coordinate reference system 
applied to locations in images. 


urn:ogc:def:derivedCRSType:OGC:1.0:temporal temporal A reference system used for the recording of 
time. 


 
Table 5 — URNs for verticalDatumType values 


URN Value Brief definition 
urn:ogc:def:verticalDatumType:OGC:1.0:geoidal geoidal Zero value of vertical axis approximates a 


constant potential surface, usually the geoid. 


urn:ogc:def:verticalDatumType:OGC:1.0:depth depth Zero value of vertical axis has meaning for 
purpose which measurements are used for 


urn:ogc:def:verticalDatumType:OGC:1.0:barometric barometric Atmospheric pressure is basis for the 
definition of origin of vertical axis 


urn:ogc:def:verticalDatumType:OGC:1.0:otherSurface otherSurface Other variations to above three vertical 
datum types. 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  17
 







OGC 06-023r1 


 
NOTE  The verticalDatumType existed in the previous version of OGC Abstract Specification Topic 2 
[OGC 04-046r3], but has been removed in the new version [OGC 05-103]. The verticalDatumType is thus 
included in GML 3.1.1, but not in GML 3.2 [OGC 05-108r1].  


Table 6 — URNs for pixelInCell values 


URN Value Definition 


urn:ogc:def:pixelInCell:OGC:1.0:cellCenter cellCenter The origin of the image coordinate system is 
at the centre of a grid cell or image pixel. 


urn:ogc:def:pixelInCell:OGC:1.0:cellCorner cellCorner The origin of the image coordinate system is 
at the corner of a grid cell, or half-way 
between the centres of adjacent image pixels. 


 
Table 7 — URNs for rangeMeaning values 


URN Value Brief definition 
urn:ogc:def:rangeMeaning:OGC:1.0:exact exact Any value between and including minimumValue 


and maximiumValue is valid. 


urn:ogc:def:rangeMeaning:OGC:1.0:wraparound wraparound The axis is continuous with values wrapping 
around at the minimumValue and maximumValue.  


 
Table 8 — URNs for axisDirection values 


URN Value Brief definition 
urn:ogc:def:axisDirection:OGC:1.0:north north Axis positive direction is north. 


urn:ogc:def:axisDirection:OGC:1.0:northNorthEast northNorthEast Axis positive direction is approximately north-
north-east.  


urn:ogc:def:axisDirection:OGC:1.0:northEast northEast Axis positive direction is approximately north-
east. 


urn:ogc:def:axisDirection:OGC:1.0:eastNorthEast eastNorthEast Axis positive direction is approximately east-
north-east. 


urn:ogc:def:axisDirection:OGC:1.0:east east Axis positive direction is π/2 radians clockwise 
from north. 


urn:ogc:def:axisDirection:OGC:1.0:eastSouthEast eastSouthEast Axis positive direction is approximately east-
south-east. 


urn:ogc:def:axisDirection:OGC:1.0:southEast southEast Axis positive direction is approximately south-
east. 


urn:ogc:def:axisDirection:OGC:1.0:southSouthEast southSouthEast Axis positive direction is approximately south-
south-east. 


urn:ogc:def:axisDirection:OGC:1.0:south south Axis positive direction is π radians clockwise 
from north. 


urn:ogc:def:axisDirection:OGC:1.0:southSouthWest southSouthWest Axis positive direction is approximately south-
south-west. 


urn:ogc:def:axisDirection:OGC:1.0:southWest southWest Axis positive direction is approximately south-
west. 


urn:ogc:def:axisDirection:OGC:1.0:westSouthWest westSouthWest Axis positive direction is approximately west-
south-west. 


urn:ogc:def:axisDirection:OGC:1.0:west west Axis positive direction is 3π/2 radians 
clockwise from north. 


18 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


URN Value Brief definition 
urn:ogc:def:axisDirection:OGC:1.0:westNorthWest westNorthWest Axis positive direction is approximately west-


north-west. 


urn:ogc:def:axisDirection:OGC:1.0:northWest northWest Axis positive direction is approximately north-
west. 


urn:ogc:def:axisDirection:OGC:1.0:northNorthWest northNorthWest Axis positive direction is approximately north-
north-west. 


urn:ogc:def:axisDirection:OGC:1.0:up up Axis positive direction is up relative to gravity. 


urn:ogc:def:axisDirection:OGC:1.0:down down Axis positive direction is down relative to 
gravity. 


urn:ogc:def:axisDirection:OGC:1.0:geocentricX geocentricX Axis positive direction is in the equatorial plane 
from centre of modelled earth towards 
intersection of equator with prime meridian. 


urn:ogc:def:axisDirection:OGC:1.0:geocentricY geocentricY Axis positive direction is in equatorial plane 
from centre of the modelled earth towards 
intersection of equator and meridian π/2 radians 
eastwards from prime meridian. 


urn:ogc:def:axisDirection:OGC:1.0:geocentricZ geocentricZ Axis positive direction is from centre of 
modelled earth parallel to its rotation axis and 
towards its north pole. 


urn:ogc:def:axisDirection:OGC:1.0:future future Axis positive direction is towards the future. 


urn:ogc:def:axisDirection:OGC:1.0:past past Axis positive direction is towards the past. 


urn:ogc:def:axisDirection:OGC:1.0:columnPositive columnPositive Axis positive direction is towards higher pixel 
column. 


urn:ogc:def:axisDirection:OGC:1.0:columnNegative columnNegative Axis positive direction is towards lower pixel 
column. 


urn:ogc:def:axisDirection:OGC:1.0:rowPositive rowPositive Axis positive direction is towards higher pixel 
row. 


urn:ogc:def:axisDirection:OGC:1.0:rowNegative rowNegative Axis positive direction is towards lower pixel 
row. 


urn:ogc:def:axisDirection:OGC:1.0:displayRight displayRight Axis positive direction is right in display. 


urn:ogc:def:axisDirection:OGC:1.0:displayLeft displayLeft Axis positive direction is left in display. 


urn:ogc:def:axisDirection:OGC:1.0:displayUp displayUp Axis positive direction is towards top of 
approximately vertical display surface. 


urn:ogc:def:axisDirection:OGC:1.0:displayDown displayDown Axis positive direction is towards bottom of 
approximately vertical display surface. 


 


8.4 Unit-of-measure (uom) definitions 


The definitions of some units-of-measure which are defined by the OGC shall use the 
URNs listed in Table 9. The definitions of these units shall be as specified in the XML 
document in Subclause A.7. Most of these units are also specified by the EPSG, as listed. 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  19
 







OGC 06-023r1 


Table 9 — URNs for units-of-measure 


OGC URN Meaning Quantity type EPSG URN 


urn:ogc:def:uom:OGC:1.0:degree Angular degree angle urn:ogc:def:uom:EPSG:6.3:9102 
urn:ogc:def:uom:OGC:1.0:radian Angular radian angle TBD 
urn:ogc:def:uom:OGC:1.0:metre Length metre length urn:ogc:def:uom:EPSG:6.3:9001 
urn:ogc:def:uom:OGC:1.0:unity unitless ratio of two 


quantities with the 
same units 


scale factor urn:ogc:def:uom:EPSG:6.3:8805 


 


8.5 Data type definitions 


URNs are useful to identify data types in multiple OGC Implementation Specifications. 
These uses include in the ows:DataType (metadata) element in the ows:DomainType in a 
future version of the OWS Common Implementation Specification [OGC 05-008]. The 
OGC-specified URNs that can be used for identifying data types (expected to be used in 
multiple OGC Implementation Specifications) shall include those listed in Table 10. The 
left column lists each URN specified here, and the centre column lists the definition 
which shall be used for that URN. 


Use of these URNs is not limited to data encoded in XML, or even to use of these URNs 
in XML-encoded documents. When data is encoded in XML, the right column in this 
table lists an XML Schema (XSD) or Geometry Markup Language (GML) version 3.1.1 
identifier that can be used to encode that data type. More complete definitions of some of 
these data types are specified in the XML document in Subclause A.8. 


Table 10 — URNs for data types 


OGC URN Brief definition XSD/GML data type a


urn:ogc:def:dataType:
OGC:1.1:crsURI


URI used to reference a Coordinate Reference 
System (CRS) 


xsd:anyURI 


urn:ogc:def:dataType:
OGC:1.1:anyURI


URI used for any other purpose xsd:anyURI 


urn:ogc:def:dataType:
OGC:1.1:measure 


General numeric value of a quantity, with its 
associated unit of measure 


gml:MeasureType 


urn:ogc:def:dataType:
OGC:1.1:length 


Value of a length (or distance) quantity, with its 
units 


gml:LengthType 


urn:ogc:def:dataType:
OGC:1.1: scale 


Value of a scale factor (or ratio) that has no 
physical unit 


gml:ScaleType 


urn:ogc:def:dataType:
OGC:1.1: time 


Value of a time or temporal quantity, with its 
units 


gml:TimeType 


urn:ogc:def:dataType:
OGC:1.1:gridLength 


Value of a length (or distance) quantity in a grid, 
where the grid spacing does not have any 
associated physical units, or does not have a 
constant physical spacing b


gml:GridLengthType 


20 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


OGC URN Brief definition XSD/GML data type a


urn:ogc:def:dataType:
OGC:1.1:angle 


Value of an angle quantity, with its units gml:AngleType 


urn:ogc:def:dataType:
OGC:1.1:lengthOrA
ngle 


Value of a length or angle quantity, with its units, 
sometimes used for horizontal ground 
coordinates 


gml:MeasureType 


urn:ogc:def:dataType:
OGC:1.1:string 


String value a quantity c xsd:string 


urn:ogc:def:dataType:
OGC:1.1:positiveInt
eger 


Positive integer value of a quantity, usually used 
for a count c


xsd:positiveInteger 


urn:ogc:def:dataType:
OGC:1.1:nonNegati
veInteger 


Zero or positive integer values of a quantity c xsd:nonNegativeInteger 


urn:ogc:def:dataType:
OGC:1.1:boolean 


Boolean value of a quantity c xsd:boolean 


urn:ogc:def:dataType:
OGC:1.1:measureLi
st 


Ordered sequence of two or more numeric values 
of a list of general measures d


gml:MeasureListType 


urn:ogc:def:dataType:
OGC:1.1:lengthList 


Ordered sequence of two or more numeric values 
of a list of Length measures  d


gml:MeasureListType 


urn:ogc:def:dataType:
OGC:1.1:scaleList 


Ordered sequence of two or more numeric values 
of a list of Scale measures  


gml:MeasureListType 


urn:ogc:def:dataType:
OGC:1.1:angleList 


Ordered sequence of two or more numeric values 
of a list of Angle measures d


gml:MeasureListType 


urn:ogc:def:dataType:
OGC:1.1:timeList 


Ordered sequence of two or more numeric values 
of a  list of Time measures d


gml:MeasureListType 


urn:ogc:def:dataType:
OGC:1.1:gridLength
List 


Ordered sequence of two or more numeric values 
of a  list of Grid Length measures d


gml:MeasureListType 


urn:ogc:def:dataType:
OGC:1.1:integerList 


Ordered sequence of two or more integer values 
of a  list, usually used for counts 


gml:integerList 


urn:ogc:def:dataType:
OGC:1.1:positiveInt
egerList 


Ordered sequence of two or more positive integer 
values of a  list, usually used for counts e


gml:integerList 


urn:ogc:def:dataType:
OGC:1.1:valueFile 


URN reference to file or part of a file containing 
one or more parameter values, each numeric 
value with its associated unit of measure 


gml:valueFile 


urn:ogc:def:dataType:
OGC:1.1:anyCRS


Definition of any Coordinate Reference System Any concrete element 
in substitution group 
headed by 
gml:AbstractCoordin
ateReferenceSystem 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  21
 







OGC 06-023r1 


OGC URN Brief definition XSD/GML data type a


a This data type is stated as a qualified name (QName). The two namespaces used here are: 
 xmlns:gml=”http://www.opengis.net/gml” 
 xmlns:xsd=”http://www.w3.org/2001/XMLSchema” 
b This grid length will often be used in a digital image grid, where the base units are likely to be pixel 
spacings.  
c Does not have an associated unit of measure. 
d Each value shall have the same associated unit of measure. An element of this type contains a space-
separated list of double values with one associated unit of measure. 
e An element of this type contains a space-separated list of integer values, without an associated unit of 
measure. 


 


22 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


Annex A 
(normative) 


 
GML dictionaries of OGC definitions 


A.1 Introduction 


This annex provides XML documents that specify the definitions of some of the objects 
assigned “ogc” URN values in Clause 8. Except for units-of-measure, these definitions 
are encoded in XML using the GML 3.1.1 simple dictionary profile [OGC 05-099r2]. 
The unitsDictionary is encoded in XML using coordinateReferenceSystems.xsd from 
GML 3.1.1. 


NOTE  All of these definitions also could be encoded using the gml:Dictionary element from 
dictionary.xsd in GML 3.1.1. The XML documents could be identical except for referencing dictionary.xsd 
in GML 3.1.1 instead of referencing the GML 3.1.1 simple dictionary profile. 


These XML-encoded document files are bundled in a zip file with this document. These 
XML files will be posted online at the URL 
http://schemas.opengeospatial.net/definitions/, in a lower level directory used for this 
Version of this document. In the event of a discrepancy between the bundled and online 
versions of these XML files, the online files shall be considered authoritative. 


A server may reference an exact copy of these documents located elsewhere, as long as 
they are readily accessible by clients. For example, it may be desirable to place the 
referenced documents on the same network server as an OWS instance, since that 
decreases the number of points of possible network failure. Such local copies should be 
organized into directories similar to http://schemas.opengeospatial.net/. The server owner 
shall insure that any such local copies are kept up-to-date with respect to the authoritative 
files at http://schemas.opengeospatial.net/. 


A.2 Definitions of derivedCRSType values 


The definitions of the derivedCRSType standard values used in defining DerivedCRSs 
shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile: 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml"  
xmlns:gml="http://www.opengis.net/gml"  
xmlns:xlink="http://www.w3.org/1999/xlink"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xsi:schemaLocation="http://www.opengis.net/gml 
gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xs
d"  
gml:id="DerivedCRStypeDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <name>Derived CRS type standard values</name> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  23
 



http://schemas.opengeospatial.net/

http://schemas.opengis.net/ows/





OGC 06-023r1 


 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="geographic"> 
   <description>A coordinate reference system based on an 
ellipsoidal approximation of the geoid; provides an accurate 
representation of the geometry of geographic features for a large 
portion of the earth's surface. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">">urn:ogc:def:derivedCRStype:OGC:1.0:geographic</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Definition gml:id="vertical"> 
   <description>A coordinate reference system used for recording 
of heights or depths. Vertical CRSs make use of the direction of 
gravity to define the concept of height or depth, but the relationship 
with gravity may not be straightforward. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:derivedCRStype:OGC:1.0:vertical</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Definition gml:id="geocentric"> 
   <description>A coordinate reference system with the origin at 
the centre of mass of the earth. A geocentric CRS deals with the 
earth's curvature by taking a 3D spatial view. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:derivedCRStype:OGC:1.0:geocentric</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Definition gml:id="engineering"> 
   <description>A contextually local coordinate reference system; 
which can be divided into two broad categories: 
- earth-fixed systems applied to engineering activities on or near the 
surface of the earth; 
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or 
spacecraft. </description> 
   <name 
codeSpace="urn:ogc:def:derivedCRStype:OGC:OGC:1.0:">engineering</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Definition gml:id="image"> 
   <description>A derived CRS used like an engineering coordinate 
reference system applied to locations in images. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:derivedCRStype:OGC:1.0:image</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <Definition gml:id="temporal"> 
   <description>A reference system used for the recording of 
time. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:derivedCRStype:OGC:1.0:temporal</name> 
  </Definition> 


24 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


 </dictionaryEntry> 
</Dictionary> 
  


A.3 Definitions of verticalDatumType values 


The definitions of the verticalDatumType standard values used in defining 
VerticalDatums shall be the same as can be XML encoded in the GML 3.1.1 simple 
dictionary profile: 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml"  
xmlns:gml="http://www.opengis.net/gml"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xsi:schemaLocation="http://www.opengis.net/gml 
gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xs
d"  
gml:id="VerticalDatumType"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <name>Vertical Datum Type standard values</name> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="geoidal"> 
   <description>The zero value of the associated vertical 
coordinate system axis is defined to approximate a constant potential 
surface, usually the geoid. Such a reference surface is usually 
determined by a national or scientific authority, and is then a well-
known, named datum. </description> 
   <name codeSpace="urn:ogc:tc:urn:docbpp:06-
023">urn:ogc:def:pixelInCell:OGC:1.0:geoidal</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <!-- ===================================================== --> 
  <Definition gml:id="depth"> 
   <description>The zero point of the vertical axis is defined by 
a surface that has meaning for the purpose which the associated 
vertical measurements are used for. For hydrographic charts, this is 
often a predicted nominal sea surface (i.e., without waves or other 
wind and current effects) that occurs at low tide. </description> 
   <name codeSpace="urn:ogc:tc:urn:docbpp:06-
023">urn:ogc:def:pixelInCell:OGC:1.0:depth</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="barometric"> 
   <description>Atmospheric pressure is the basis for the 
definition of the origin of the associated vertical coordinate system 
axis. </description> 
   <name codeSpace="urn:ogc:tc:urn:docbpp:06-
023">urn:ogc:def:pixelInCell:OGC:1.0:barometric</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <!-- ===================================================== --> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  25
 







OGC 06-023r1 


  <Definition gml:id="otherSurface"> 
   <description>In some cases, e.g. oil exploration and 
production, a geological feature, such as the top or bottom of a 
geologically identifiable and meaningful subsurface layer, is used as a 
vertical datum. Other variations to the above three vertical datum 
types may exist and are all included in this type. </description> 
   <name codeSpace="urn:ogc:tc:urn:docbpp:06-
023">urn:ogc:def:pixelInCell:OGC:1.0:otherSurface</name> 
  </Definition> 
 </dictionaryEntry> 
</Dictionary> 
  


A.4 Definitions of pixelInCell values 


The definitions of the pixelInCell standard values used in defining ImageDatums shall be 
the same as can be XML encoded in the GML 3.1.1 simple dictionary profile: 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml"  
xmlns:gml="http://www.opengis.net/gml"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xsi:schemaLocation="http://www.opengis.net/gml 
gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xs
d"  
gml:id="PixelInCellDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <name>PixelInCell standard values</name> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="cellCenter"> 
   <description>The origin of the image coordinate system is at 
the centre of a grid cell or image pixel. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:pixelInCell:OGC:1.0:cellCenter</name> 
  </Definition> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <!-- ===================================================== --> 
  <Definition gml:id="cellCorner"> 
   <description>The origin of the image coordinate system is at 
the corner of a grid cell, or half-way between the centres of adjacent 
image pixels. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:pixelInCell:OGC:1.0:cellCorner</name> 
  </Definition> 
 </dictionaryEntry> 
</Dictionary> 
  


A.5 Definitions of rangeMeaning values 


The definitions of the rangeMeaning standard values used in defining CoordinateAxes 
shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile: 


<?xml version="1.0" encoding="UTF-8"?> 


26 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


<Dictionary xmlns="http://www.opengis.net/gml"  
xmlns:gml="http://www.opengis.net/gml"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xsi:schemaLocation="http://www.opengis.net/gml 
gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xs
d"  
gml:id="RangeMeaningDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <name>Range Meaning standard values</name> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="exact"> 
   <description>Any value between and including minimumValue and 
maximiumValue is valid. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:rangeMeaning:OGC:1.0:exact</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="wraparound"> 
   <description>The axis is continuous with values wrapping 
around at the minimumValue and maximumValue. Values with the same 
meaning repeat modulo the difference between maximumValue and 
minimumValue. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:rangeMeaning:OGC:1.0:wraparound</name> 
  </Definition> 
 </dictionaryEntry> 
</Dictionary> 
  


A.6 Definitions of axisDirection values 


The definitions of the axisDirection standard values used in defining CoordinateAxes 
shall be the same as can be XML encoded in the GML 3.1.1 simple dictionary profile: 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml"  
xmlns:gml="http://www.opengis.net/gml"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xsi:schemaLocation="http://www.opengis.net/gml 
gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xs
d"  
gml:id="AxisDirectionDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <name>Axis Direction standard values</name> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="north"> 
   <description>Axis positive direction is north. In a geographic 
or projected CRS, north is defined through the geodetic datum. In an 
engineering CRS, north may be defined with respect to an engineering 
object rather than a geographical direction. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:north</name> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  27
 







OGC 06-023r1 


  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="northNorthEast"> 
   <description>Axis positive direction is approximately north-
north-east. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:northNorthEast</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="northEast"> 
   <description>Axis positive direction is approximately north-
east. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:northEast</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="eastNorthEast"> 
   <description>Axis positive direction is approximately east-
north-east. </description> 
   <name codeSpace="urn:opengis:def:axisDirection:OGC:1.0:"/> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="east"> 
   <description>Axis positive direction is pi/2 radians clockwise 
from north. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:east</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="eastSouthEast"> 
   <description>Axis positive direction is approximately east-
south-east. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:eastSouthEast</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="southEast"> 
   <description>Axis positive direction is approximately south-
east.</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:southEast</name> 
  </Definition> 
 </dictionaryEntry> 
 
 <!-- ===================================================== --> 


28 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


 <dictionaryEntry> 
  <Definition gml:id="southSouthEast"> 
   <description>Axis positive direction is approximately south-
south-east. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:southSouthEast</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="south"> 
   <description>Axis positive direction is pi radians clockwise 
from north. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:south</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="southSouthWest"> 
   <description>Axis positive direction is approximately south-
south-west. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:southSouthWest</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="southWest"> 
   <description>Axis positive direction is approximately south-
west. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:southWest</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="westSouthWest"> 
   <description>Axis positive direction is approximately west-
south-west. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:westSouthWest</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="west"> 
   <description>Axis positive direction is 3pi/2 radians 
clockwise from north. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:west</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="westNorthWest"> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  29
 







OGC 06-023r1 


   <description>Axis positive direction is approximately west-
north-west. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:westNorthWest</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="northWest"> 
   <description>Axis positive direction is approximately north-
west.</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:northWest</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="northNorthWest"> 
   <description>Axis positive direction is approximately north-
north-west. </description> 
 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:northNorthWest</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="up"> 
   <description>Axis positive direction is up relative to 
gravity. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:up</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="down"> 
   <description>Axis positive direction is down relative to 
gravity. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:down</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="geocentricX"> 
   <description>Axis positive direction is in the equatorial 
plane from the centre of the modelled earth towards the intersection of 
the equator with the prime meridian. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:geocentricX</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="geocentricY"> 


30 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


   <description>Axis positive direction is in the equatorial 
plane from the centre of the modelled earth towards the intersection of 
the equator and the meridian pi/2 radians eastwards from the prime 
meridian. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:geocentricY</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="geocentricZ"> 
   <description>Axis positive direction is from the centre of the 
modelled earth parallel to its rotation axis and towards its north 
pole. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:geocentricZ</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="future"> 
   <description>Axis positive direction is towards the future. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:future</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="past"> 
   <description>Axis positive direction is towards the past. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:past</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="columnPositive"> 
   <description>Axis positive direction is towards higher column 
numbers. </description> 
   <name 
codeSpace="urn:opengis:def:axisDirection:1.0:">columnPositive</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="columnNegative"> 
   <description>Axis positive direction is towards lower pixel 
column numbers. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:columnNegative</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="rowPositive"> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  31
 







OGC 06-023r1 


   <description>Axis positive direction is towards higher row 
numbers. </description> 
   <name 
codeSpace="urn:opengis:def:axisDirection:1.0:">rowPositive</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="rowNegative"> 
   <description>Axis positive direction is towards lower pixel 
row numbers. </description> 
   <name codeSpace="urn:opengis:def:axisDirection:OGC:1.0:"/> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="displayRight"> 
   <description>Axis positive direction is right in display. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:displayRight</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="displayLeft"> 
   <description>Axis positive direction is left in display. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:displayLeft</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="displayUp"> 
   <description>Axis positive direction is towards top of 
approximately vertical display surface. 
 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:displayUp</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="displayDown"> 
   <description>Axis positive direction is towards bottom of 
approximately vertical display surface. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:opengis:def:axisDirection:OGC:1.0:displayDown</name> 
  </Definition> 
 </dictionaryEntry> 
</Dictionary> 
  


32 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


A.7 Definitions of units-of-measure 


The definitions of the some commonly used unit-of-measure (uom) values shall be the 
same as can be XML encoded in the GML 3.1.1 dictionary: 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml" 
xmlns:gml="http://www.opengis.net/gml" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:xlink="http://www.w3.org/1999/xlink" 
xsi:schemaLocation="http://www.opengis.net/gml 
gml/3.1.1/base/coordinateReferenceSystems.xsd" 
gml:id="UnitsDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <description>Example GML Dictinary of unit 
definitions.</description> 
 <name>Units Dictionary</name> 
 <dictionaryEntry> 
  <ConventionalUnit gml:id="degree"> 
   <name>degree</name> 
   <name codeSpace="urn:ogc:def:parameter:EPSG:6.3:">9102</name> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:uom:OGC:1.0:degree</name> 
   <quantityType>angle</quantityType> 
   <conversionToPreferredUnit uom="#radian"> 
    <factor>1.74532925199433E-02</factor> 
   </conversionToPreferredUnit> 
  </ConventionalUnit> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <BaseUnit gml:id="radian"> 
   <name>radian</name> 
   <quantityType>angle</quantityType> 
   <unitsSystem xlink:href="urn:ogc:ToBeSupplied"/> 
  </BaseUnit> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <BaseUnit gml:id="metre"> 
   <name>metre</name> 
   <name codeSpace="urn:ogc:def:parameter:EPSG:6.3:">9001</name> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:uom:OGC:1.0:metre</name> 
   <quantityType>length</quantityType> 
   <unitsSystem xlink:href="urn:ogc:SI"/> 
  </BaseUnit> 
 </dictionaryEntry> 
 <dictionaryEntry> 
  <BaseUnit gml:id="unity"> 
   <name>unity</name> 
   <name codeSpace="urn:ogc:def:uom:EPSG:6.3:">8805</name> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:uom:OGC:1.0:unity</name> 
   <quantityType>scale factor</quantityType> 
   <unitsSystem xlink:href="urn:ogc:ToBeSupplied"/> 
  </BaseUnit> 
 </dictionaryEntry> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  33
 







OGC 06-023r1 


</Dictionary> 
 


A.8 Definitions of data types 


The definitions of the some commonly used data types shall be the same as can be XML 
encoded in the GML 3.1.1 simple dictionary profile: 


<?xml version="1.0" encoding="UTF-8"?> 
<Dictionary xmlns="http://www.opengis.net/gml"  
xmlns:gml="http://www.opengis.net/gml"  
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xsi:schemaLocation="http://www.opengis.net/gml 
gml\3.1.1\Profiles\SimpleDictionary\1.0.0\gmlSimpleDictionaryProfile.xs
d"  
gml:id="parameterTypeDictionary"> 
 <!-- Primary editor: Arliss Whiteside. Last updated 2006-02-13 --> 
 <name>dataType URN standard values</name> 
 <name>Data type of a quantity. Usually refers to a data type defined 
in measures.xsd or allowed in the ParameterValueType of 
coordinateOperations.xsd. </name> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="measure"> 
   <description>General numeric value of a quantity, with its 
associated unit of measure. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:measure</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="length"> 
   <description>Value of a length (or distance) quantity, with 
its units. Uses the MeasureType with the restriction that the unit of 
measure referenced by uom must be suitable for a length, such as metres 
or feet. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:length</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="scale"> 
   <description>Value of a scale factor (or ratio) that has no 
physical unit. Uses the MeasureType with the restriction that the unit 
of measure referenced by uom must be suitable for a scale factor, such 
as one, percent, permil, or parts-per-million. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:scale</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="time"> 


34 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


   <description>Value of a time or temporal quantity, with its 
units. Uses the MeasureType with the restriction that the unit of 
measure referenced by uom must be suitable for a time value, such as 
seconds or weeks. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:time</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="gridLength"> 
   <description>Value of a length (or distance) quantity in a 
grid, where the grid spacing does not have any associated physical 
units, or does not have a constant physical spacing. This grid length 
will often be used in a digital image grid, where the base units are 
likely to be pixel spacings. Uses the MeasureType with the restriction 
that the unit of measure referenced by uom must be suitable for length 
along the axes of a grid, such as pixel spacings or grid 
spacings.</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:gridLength</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="angle"> 
   <description>Value of an angle quantity, with its units. Uses 
the MeasureType with the restriction that the unit of measure 
referenced by uom must be suitable for an angle, such as degrees or 
radians. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:angle</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="lengthOrAngle"> 
   <description>Value of a length or angle quantity, where an 
angle can be recorded in either degree-minute-second format or single 
value format. Often used for horizontal ground coordinates. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:lengthOrAngle</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="string"> 
   <description>String value of a quantity. A string value does 
not have an associated unit of measure. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:string</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="positiveInteger"> 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  35
 







OGC 06-023r1 


   <description>Positive integer value of a quantity, usually 
used for a count. An integer value does not have an associated unit of 
measure. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:positiveInteger</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="nonNegativeInteger"> 
   <description>Zero or positive integer value of a quantity. An 
integer value does not have an associated unit of measure. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:nonNegativeInteger</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="boolean"> 
   <description>Boolean value of a quantity. A Boolean value does 
not have an associated unit of measure. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:boolean</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="measureList"> 
   <description>Ordered sequence of two or more numeric values of 
a quantity list, where each value has the same associated unit of 
measure. An element of this type contains a space-separated list of 
double values. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:measureList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="lengthList"> 
   <description>Ordered sequence of two or more numeric values of 
a list of Length measures. Each value has the same associated unit of 
measure suitable for a length, such as metres or feet. An element of 
this type contains a space-separated list of double values. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:lengthList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="scaleList"> 
   <description>Ordered sequence of two or more numeric values of 
a list of Scale measures. Each value has the same associated unit of 
measure suitable for a scale factor, such as one, percent, permil, or 
parts-per-million. An element of this type contains a space-separated 
list of double values. </description> 


36 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:scaleList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="angleList"> 
   <description>Ordered sequence of two or more numeric values of 
a list of Angle measures. Each value has the same associated unit of 
measure suitable for an angle, such as degrees or radians. An element 
of this type contains a space-separated list of double values. 
</description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:angleList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="timeList"> 
   <description>Ordered sequence of two or more numeric values of 
a list of Time measures, each recorded as a single number. Each value 
has the same associated unit of measure suitable for a time value, such 
as seconds or days. An element of this type contains a space-separated 
list of double values. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:timeList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="gridLengthList"> 
   <description>Ordered sequence of two or more Grid Length 
measures. Each value has the same associated unit of measure suitable 
for length along the axes of a grid, such as pixel spacings or grid 
spacings. An element of this type contains a space-separated list of 
double values. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:gridLengthList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="integerList"> 
   <description>Ordered sequence of two or more integer values, 
usually used for counts. These integer values do not have an associated 
unit of measure. An element of this type contains a space-separated 
list of integer values. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:integerList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="positiveIntegerList"> 
   <description>Ordered sequence of two or more positive integer 
values, usually used for counts. These integer values do not have an 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  37
 







OGC 06-023r1 


associated unit of measure. An element of this type contains a space-
separated list of integer values. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:positiveIntegerList</name> 
  </Definition> 
 </dictionaryEntry> 
 <!-- ===================================================== --> 
 <dictionaryEntry> 
  <Definition gml:id="anyURI"> 
   <description>Reference to a file or a part of a file 
containing one or more parameter values, each numeric value with its 
associated unit of measure. When referencing a part of a file, that 
file must contain multiple identified parts, such as an XML encoded 
document. Furthermore, the referenced file or part of a file can 
reference another part of the same or different files, as allowed in 
XML documents. </description> 
   <name codeSpace="urn:ogc:tc:urn:doc:bpp:06-
023">urn:ogc:def:dataType:OGC:1.1:anyURI</name> 
  </Definition> 
 </dictionaryEntry> 
</Dictionary> 


38 Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
 







OGC 06-023r1 


Bibliography 


[1] OGC 02-058, Web Feature Service Implementation Specification, v1.0.0 


[2] OGC 03-065r6, Web Coverage Service Implementation Specification, v1.0.0 


[3] OGC 05-013, Web Coordinate Transformation Service Implementation 
Specification, draft 


[4] OGC 05-060, URNs 05-010 change request – Specify data type URNs  


[5] OGC 05-091r2, Add additional objectTypes and authorities to the OGC “def” URN 
scheme 


[6] OGC 05-095r1, GML 3.1.1 common CRSs profile 


[7] ISO 31:1992, Quantities and Units. (13 Parts, with revisions 1998) 


[8] XML Schema: Component Designators, W3C Working Draft 29 March 2005 


 


Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.  39
 





		1 Scope

		2 Conformance

		3 Normative references

		4 Terms and definitions

		5 Conventions

		5.1 Symbols (and abbreviated terms)

		5.2 Document terms and definitions



		6 Background

		6.1 Definition identifiers

		6.2 Use for Coordinate Reference Systems 

		6.3 Relationships to other identification schemes

		6.3.1 URN and URL

		6.3.2 URN and schema component designators





		7 OGC URN scheme for definitions

		7.1 OGC URN scheme

		7.2 URNs for single objects

		7.3 URNs for not-completely-specified objects

		7.4 URNs for combined objects

		7.4.1 Overview

		7.4.2 URN combined references for compound coordinate reference systems

		7.4.3 URN combined references for concatenated operations

		7.4.4 URN combined references for projected or derived CRSs

		7.4.5 URN combined references for datum and coordinate system





		8 URN values for definitions and concepts in ogc namespace

		8.1 Introduction

		8.2 CRS definitions

		8.3 CRS code list values definitions

		8.4 Unit-of-measure (uom) definitions

		8.5 Data type definitions







06-023r1 URN Definitions Folder/axisDirection.xml
 
	
	 Axis Direction standard values
	
	 
		 
			 Axis positive direction is north. In a geographic or projected CRS, north is defined through the geodetic datum. In an engineering CRS, north may be defined with respect to an engineering object rather than a geographical direction. 
			 urn:opengis:def:axisDirection:OGC:1.0:north
		
	
	
	 
		 
			 Axis positive direction is approximately north-north-east. 
			 urn:opengis:def:axisDirection:OGC:1.0:northNorthEast
		
	
	
	 
		 
			 Axis positive direction is approximately north-east. 
			 urn:opengis:def:axisDirection:OGC:1.0:northEast
		
	
	
	 
		 
			 Axis positive direction is approximately east-north-east. 
			 
		
	
	
	 
		 
			 Axis positive direction is pi/2 radians clockwise from north. 
			 urn:opengis:def:axisDirection:OGC:1.0:east
		
	
	
	 
		 
			 Axis positive direction is approximately east-south-east. 
			 urn:opengis:def:axisDirection:OGC:1.0:eastSouthEast
		
	
	
	 
		 
			 Axis positive direction is approximately south-east.
			 urn:opengis:def:axisDirection:OGC:1.0:southEast
		
	
	
	 
		 
			 Axis positive direction is approximately south-south-east. 
			 urn:opengis:def:axisDirection:OGC:1.0:southSouthEast
		
	
	
	 
		 
			 Axis positive direction is pi radians clockwise from north. 
			 urn:opengis:def:axisDirection:OGC:1.0:south
		
	
	
	 
		 
			 Axis positive direction is approximately south-south-west. 
			 urn:opengis:def:axisDirection:OGC:1.0:southSouthWest
		
	
	
	 
		 
			 Axis positive direction is approximately south-west. 
			 urn:opengis:def:axisDirection:OGC:1.0:southWest
		
	
	
	 
		 
			 Axis positive direction is approximately west-south-west. 
			 urn:opengis:def:axisDirection:OGC:1.0:westSouthWest
		
	
	
	 
		 
			 Axis positive direction is 3pi/2 radians clockwise from north. 
			 urn:opengis:def:axisDirection:OGC:1.0:west
		
	
	
	 
		 
			 Axis positive direction is approximately west-north-west. 
			 urn:opengis:def:axisDirection:OGC:1.0:westNorthWest
		
	
	
	 
		 
			 Axis positive direction is approximately north-west.
			 urn:opengis:def:axisDirection:OGC:1.0:northWest
		
	
	
	 
		 
			 Axis positive direction is approximately north-north-west. 
			 urn:opengis:def:axisDirection:OGC:1.0:northNorthWest
		
	
	
	 
		 
			 Axis positive direction is up relative to gravity. 
			 urn:opengis:def:axisDirection:OGC:1.0:up
		
	
	
	 
		 
			 Axis positive direction is down relative to gravity. 
			 urn:opengis:def:axisDirection:OGC:1.0:down
		
	
	
	 
		 
			 Axis positive direction is in the equatorial plane from the centre of the modelled earth towards the intersection of the equator with the prime meridian. 
			 urn:opengis:def:axisDirection:OGC:1.0:geocentricX
		
	
	
	 
		 
			 Axis positive direction is in the equatorial plane from the centre of the modelled earth towards the intersection of the equator and the meridian pi/2 radians eastwards from the prime meridian. 
			 urn:opengis:def:axisDirection:OGC:1.0:geocentricY
		
	
	
	 
		 
			 Axis positive direction is from the centre of the modelled earth parallel to its rotation axis and towards its north pole. 
			 urn:opengis:def:axisDirection:OGC:1.0:geocentricZ
		
	
	
	 
		 
			 Axis positive direction is towards the future. 
			 urn:opengis:def:axisDirection:OGC:1.0:future
		
	
	
	 
		 
			 Axis positive direction is towards the past. 
			 urn:opengis:def:axisDirection:OGC:1.0:past
		
	
	
	 
		 
			 Axis positive direction is towards higher column numbers. 
			 urn:opengis:def:axisDirection:1.0:columnPositive
		
	
	
	 
		 
			 Axis positive direction is towards lower pixel column numbers. 
			 urn:opengis:def:axisDirection:OGC:1.0:columnNegative
		
	
	
	 
		 
			 Axis positive direction is towards higher row numbers. 
			 urn:opengis:def:axisDirection:1.0:rowPositive
		
	
	
	 
		 
			 Axis positive direction is towards lower pixel row numbers. 
			 urn:opengis:def:axisDirection:OGC:1.0:rowNegative
		
	
	
	 
		 
			 Axis positive direction is right in display. 
			 urn:opengis:def:axisDirection:OGC:1.0:displayRight
		
	
	
	 
		 
			 Axis positive direction is left in display. 
			 urn:opengis:def:axisDirection:OGC:1.0:displayLeft
		
	
	
	 
		 
			 Axis positive direction is towards top of approximately vertical display surface.

			 urn:opengis:def:axisDirection:OGC:1.0:displayUp
		
	
	
	 
		 
			 Axis positive direction is towards bottom of approximately vertical display surface.

			 urn:opengis:def:axisDirection:OGC:1.0:displayDown
		
	




06-023r1 URN Definitions Folder/dataType.xml
 
	
	 dataType URN standard values
	 Data type of a quantity. Usually refers to a data type defined in measures.xsd or allowed in the ParameterValueType of coordinateOperations.xsd. 
	
	 
		 
			 General numeric value of a quantity, with its associated unit of measure. 
			 urn:ogc:def:dataType:OGC:1.1:measure
		
	
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
			 urn:ogc:def:dataType:OGC:1.1:length
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as one, percent, permil, or parts-per-million. 
			 urn:ogc:def:dataType:OGC:1.1:scale
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks. 
			 urn:ogc:def:dataType:OGC:1.1:time
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
			 urn:ogc:def:dataType:OGC:1.1:gridLength
		
	
	
	 
		 
			 Value of an angle quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians. 
			 urn:ogc:def:dataType:OGC:1.1:angle
		
	
	
	 
		 
			 Value of a length or angle quantity, where an angle can be recorded in either degree-minute-second format or single value format. Often used for horizontal ground coordinates. 
			 urn:ogc:def:dataType:OGC:1.1:lengthOrAngle
		
	
	
	 
		 
			 String value of a quantity. A string value does not have an associated unit of measure. 
			 urn:ogc:def:dataType:OGC:1.1:string
		
	
	
	 
		 
			 Positive integer value of a quantity, usually used for a count. An integer value does not have an associated unit of measure. 
			 urn:ogc:def:dataType:OGC:1.1:positiveInteger
		
	
	
	 
		 
			 Zero or positive integer value of a quantity. An integer value does not have an associated unit of measure. 
			 urn:ogc:def:dataType:OGC:1.1:nonNegativeInteger
		
	
	
	 
		 
			 Boolean value of a quantity. A Boolean value does not have an associated unit of measure. 
			 urn:ogc:def:dataType:OGC:1.1:boolean
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of a quantity list, where each value has the same associated unit of measure. An element of this type contains a space-separated list of double values. 
			 urn:ogc:def:dataType:OGC:1.1:measureList
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of a list of Length measures. Each value has the same associated unit of measure suitable for a length, such as metres or feet. An element of this type contains a space-separated list of double values. 
			 urn:ogc:def:dataType:OGC:1.1:lengthList
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of a list of Scale measures. Each value has the same associated unit of measure suitable for a scale factor, such as one, percent, permil, or parts-per-million. An element of this type contains a space-separated list of double values. 
			 urn:ogc:def:dataType:OGC:1.1:scaleList
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of a list of Angle measures. Each value has the same associated unit of measure suitable for an angle, such as degrees or radians. An element of this type contains a space-separated list of double values. 
			 urn:ogc:def:dataType:OGC:1.1:angleList
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of a list of Time measures, each recorded as a single number. Each value has the same associated unit of measure suitable for a time value, such as seconds or days. An element of this type contains a space-separated list of double values. 
			 urn:ogc:def:dataType:OGC:1.1:timeList
		
	
	
	 
		 
			 Ordered sequence of two or more Grid Length measures. Each value has the same associated unit of measure suitable for length along the axes of a grid, such as pixel spacings or grid spacings. An element of this type contains a space-separated list of double values. 
			 urn:ogc:def:dataType:OGC:1.1:gridLengthList
		
	
	
	 
		 
			 Ordered sequence of two or more integer values, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated list of integer values. 
			 urn:ogc:def:dataType:OGC:1.1:integerList
		
	
	
	 
		 
			 Ordered sequence of two or more positive integer values, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated list of integer values. 
			 urn:ogc:def:dataType:OGC:1.1:positiveIntegerList
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
			 urn:ogc:def:dataType:OGC:1.1:anyURI
		
	




06-023r1 URN Definitions Folder/derivedCRSType.xml
 
	
	 Derived CRS type standard values
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface. 
			 urn:ogc:def:derivedCRStype:OGC:1.0:geographic
		
	
	
	 
		 
			 A coordinate reference system used for recording of heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. 
			 urn:ogc:def:derivedCRStype:OGC:1.0:vertical
		
	
	
	 
		 
			 A coordinate reference system with the origin at the centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view. 
			 urn:ogc:def:derivedCRStype:OGC:1.0:geocentric
		
	
	
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft. 
			 urn:ogc:def:derivedCRStype:OGC:OGC:1.0:engineering
		
	
	
	 
		 
			 A derived CRS used like an engineering coordinate reference system applied to locations in images. 
			 urn:ogc:def:derivedCRStype:OGC:1.0:image
		
	
	
	 
		 
			 A reference system used for the recording of time. 
			 urn:ogc:def:derivedCRStype:OGC:1.0:temporal
		
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/basicTypes.xsd
 
   
     basicTypes.xsd
     
    Generic simpleContent components for use in GML 
    Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
    
  
  
   
     
        Some common reasons for a null value:   
			
        innapplicable - the object does not have a value
        missing - The correct value is not readily available to the sender of this data.  
                           Furthermore, a correct value may not exist.
        template - the value will be available later
        unknown - The correct value is not known to, and not computable by, the sender of this data. 
                           However, a correct value probably exists.
        withheld - the value is not divulged 
        
        other:reason - as indicated by "reason" string
        
        Specific communities may agree to assign more strict semantics when these terms are used in a particular context.  
      
    
     
       
         
           
           
           
           
           
        
      
       
         
           
        
      
    
  
  
   
     
       Utility type for null elements.  The value may be selected from one of the enumerated tokens, or may be a URI in which case this should identify a resource which describes the reason for the null. 
    
     
  
  
   
  
   
     
       Utility type used in various places 
      - e.g. to indicate the direction of topological objects;
      "+" for forwards, or "-" for backwards.
    
     
       
       
    
  
  
   
     
       Union of the XML Schema boolean type and the GML Nulltype.  An element which uses this type may have content which is either a boolean {0,1,true,false} or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of boolean values {0,1,true,false} with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
    
     
  
  
   
     
       Union of the XML Schema string type and the GML Nulltype.  An element which uses this type may have content which is either a string or a value from Nulltype.  Note that a "string" may contain whitespace.  
    
     
  
  
   
     
       Union of the XML Schema Name type and the GML Nulltype.  An element which uses this type may have content which is either a Name or a value from Nulltype.  Note that a "Name" may not contain whitespace.  
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of Name values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema Name type.  An element of this type contains a space-separated list of Name values
    
     
  
  
   
     
       Union of the XML Schema double type and the GML Nulltype.  An element which uses this type may have content which is either a double or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of double values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       Union of the XML Schema integer type and the GML Nulltype.  An element which uses this type may have content which is either an integer or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of integer values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.   
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.  
      A member of the list may be a typed null.  
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      A member of the list may be a typed null. 
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       Tables or arrays of tuples.  
        May be used for text-encoding of values from a table.  
        Actually just a string, but allows the user to indicate which characters are used as separators.  
        The value of the 'cs' attribute is the separator for coordinate values, 
        and the value of the 'ts' attribute gives the tuple separator (a single space by default); 
        the default values may be changed to reflect local usage.
        Defaults to CSV within a tuple, space between tuples.  
        However, any string content will be schema-valid.  
    
     
       
         
         
         
      
    
  
  
   
     
       A set of values, representing a list of token with the lexical value space of NCName. The tokens are seperated by whitespace.
    
     
  
  
   
     
       A set of values, representing a list of token with the lexical value space of QName. The tokens are seperated by whitespace.
    
     
  
  




06-023r1 URN Definitions Folder/gml/3.1.1/base/coordinateOperations.xsd
 
	 
		 
		 How to encode coordinate operation definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define coordinate operations, including Transformations, Conversions, and other specific subtypes of operations. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
						 
							 Unordered set of estimates of the impact of this coordinate operation on point position accuracy. Gives position error estimates for target coordinates of this coordinate operation, assuming no errors in source coordinates. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
	
	 
		 
			 Association to a concatenated operation, either referencing or containing the definition of that concatenated operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
	
	 
		 
			 Association to a pass through operation, either referencing or containing the definition of that pass through operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	 
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 Value of an angle operation parameter, in either degree-minute-second format or single value format. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 A group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level parameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
							 Unordered set of composition associations to the parameter values and groups of values included in this group. 
						
					
					 
				
			
		
	
	
	 
		 
			 A composition association to a parameter value or group of values included in this group. 
		
	
	
	 
		 
			 Association to the operation parameter group for which this element provides parameter values. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter group objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter group is identified. 
		
	
	
	 
		 
			 The definition of a group of parameters used by an operation method. This complexType is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter group. The first groupID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter group, including source information. 
						
					
					 
					 
						 
							 Unordered list of associations to the set of operation parameters that are members of this group. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter group. 
		
	
	
	 
		 
			 The maximum number of times that values for this parameter group can be included. If this attribute is omitted, the maximum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter that is a member of a group. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/coordinateReferenceSystems.xsd
 
	 
		 
		 How to encode coordinate reference system definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define coordinate reference systems, including the specific subtypes of coordinate reference systems. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Coordinate Reference System (SC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates, with the exception of the abstract "SC_CRS" class. The "SC_CRS" class is encoded in referenceSystems.xsd, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 Association to a compound coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a geographic coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 3D coordinate reference system with the origin at the approximate centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view, which obviates the need to model the earth's curvature. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the spherical coordinate system used by this CRS.
		
	
	
	 
	
	 
		 
			 Association to a geocentric coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a projected coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft.
For further information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the engineering datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an engineering coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the oblique Cartesian coordinate system used by this CRS.
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an image coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for the recording of time. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the temporal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the temporal datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/coordinateSystems.xsd
 
	 
		 
		 How to encode coordinate system definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define coordinate systems, including the specific subtypes of coordinate systems. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Coordinate System (CS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system containing a single time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TemporalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated ordinate is the distance from the specified origin to the point along the axis. Example: usage of the line feature representing a road to describe points on or along that road. A LinearCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a linear coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. An example is a multilinear coordinate system which contains one coordinate axis that may have any 1-D shape which has no intersections with itself. This non-straight axis is supplemented by one or two straight axes to complete a 2 or 3 dimensional coordinate system. The non-straight axis is typically incrementally straight or curved. A UserDefinedCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a user-defined coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be confused with an ellipsoidal coordinate system based on an ellipsoid "degenerated" into a sphere. A SphericalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a spherical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a polar coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An ObliqueCartesianCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an oblique-Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/coverage.xsd
 
	 
		 coverage.xsd
		 GML Coverage schema. 
        Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	 
	 
	
	
	
	
	 
	
	 
		 
			 Abstract element which acts as the head of a substitution group for coverages. Note that a coverage is a GML feature.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either geometry or temporal objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. This definition conforms to ISO 19123.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 The spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods, or

N.B. Temporal geometric complexes and temporal grids are not yet implemented in GML.
		
		 
			 
				 
				 
			
		
		 
	
	
	 
	
	 
		 
			 
				 
					 each member _Value holds a tuple or "row" from the equivalent table
				
			
			 
				 
					 each list holds the complete set of one scalar component from the values - i.e. a "column" from the equivalent table
				
			
			 
				 
					 Its tuple list holds the values as space-separated tuples each of which contains comma-separated components, and the tuple structure is specified using the rangeParameters property.
				
			
			 
				 
					 a reference to an external source for the data, together with a description of how that external source is structured
				
			
		
	
	
	 
	
	 
		 
			 The function or rule which defines the map from members of the domainSet to the range.  
      More functions will be added to this list
		
		 
			 
			 
		
	
	
	
	
	 
	
	 
		 
			 
			 
				 
				 
			
		
	
	
	 
	
	 
	
	 
	
	 
		 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 List of codes that identifies the file structure model for records stored in files.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Metadata about the rangeSet.  Definition of record structure.   
      This is required if the rangeSet is encoded in a DataBlock.  
      We use a gml:_Value with empty values as a map of the composite value structure.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Description of a rule for associating members from the domainSet with members of the rangeSet.
		
	
	
	 
	
	 
		 
			 Defines how values in the domain are mapped to the range set. The start point and the sequencing rule are specified here.
		
		 
			 
				 
					 If absent, the implied value is "Linear".
				
			
			 
				 
					 Index position of the first grid post, which must lie somwhere in the GridEnvelope.  If absent, the startPoint is equal to the value of gridEnvelope::low from the grid definition.
				
			
		
	
	
	 
	
	 
		 
			 Exends GridFunctionType with a lookUpTable.  This contains a list of indexes of members within the rangeSet corresponding with the members of the domainSet.  The domainSet is traversed in list order if it is enumerated explicitly, or in the order specified by a SequenceRule if the domain is an implicit set.    The length of the lookUpTable corresponds with the length of the subset of the domainSet for which the coverage is defined.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 List of codes (adopted from ISO 19123 Annex C) that identifies the rule for traversing a grid to correspond with the sequence of members of the rangeSet.
		
		 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 The enumeration value here indicates the incrementation order  to be used on the first 2 axes, i.e. "+x-y" means that the points on the first axis are to be traversed from lowest to highest and  the points on the second axis are to be traversed from highest to lowest. The points on all other axes (if any) beyond the first 2 are assumed to increment from lowest to highest.
		
		 
			 
			 
			 
			 
		
	
	
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of point
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of curves.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of surface patches (includes polygons, triangles, rectangles, etc).
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of Solids.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/dataQuality.xsd
 
	 
		 
		 How to encode positional data quality information. 
	Builds on units.xsd to encode the data needed to describe the positional accuracy of coordinate operations. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Data Quality (DQ) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/datums.xsd
 
	 
		 
		 How to encode datum definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define datums, including the specific subtypes of datums. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Datum (CD_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 Association to a datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering datum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin can be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite). 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an engineering datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorPoint" and "realizationEpoch" elements. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Defines the origin of a temporal coordinate reference system. This type extends the TemporalDatumRestrictionType to add the "origin" element with the dateTime type. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The date and time origin of this temporal datum. 
		
	
	
	 
	
	 
		 
			 Association to a temporal datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is Greenwich, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is Greenwich. 
		
	
	
	 
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. Value is a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/defaultStyle.xsd
 
	 
		 defaultStyle.xsd
		 Default Style schema for GML 3.1.0
	Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr 
	
	
	 
	 
	
	 
		 
			 Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
	
	
	 
		 
			 [complexType of] Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
	
	
	 
		 
			 [complexType of] The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
		 
			 
		
	
	
	 
		 
			 Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
	
	
	 
		 
			 [complexType of] Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for features.
		
	
	
	 
		 
			 [complexType of] The style descriptor for features.
		
		 
			 
				 
					 
					 
					 
					 
				
				 
				 
				 
			
		
	
	
	 
		 
			 Used to specify the grammar of the feature query mechanism.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Base complex type for geometry, topology, label and graph styles.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for geometries of a feature.
		
	
	
	 
		 
			 [complexType of] The style descriptor for geometries of a feature.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
	
	
	 
		 
			 [complexType of] The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for labels of a feature, geometry or topology.
		
	
	
	 
		 
			 [complexType of] The style descriptor for labels of a feature, geometry or topology.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
	
	
	 
		 
			 [complexType of] The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The symbol property. Extends the gml:AssociationType to allow for remote referencing of symbols.
		
	
	
	 
		 
			 [complexType of] The symbol property. Allows for remote referencing of symbols.
		
		 
			 
		
		 
		 
		 
		 
	
	
	 
		 
			 Used to specify the type of the symbol used.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Label is mixed -- composed of text and XPath expressions used to extract the useful information from the feature.
		
		 
			 
		
		 
	
	
	 
		 
			 Defines the geometric transformation of entities. There is no particular grammar defined for this value.
		
	
	
	 
		 
			 Used to vary individual graphic parameters and attributes of the style, symbol or text.
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/dictionary.xsd
 
	 
		 
		 
			Dictionary schema for GML 3.1.1 
			Components to support the lists of definitions.  
    Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	
	 
		 
			 This content model group makes it easier to construct types that 
      derive from DefinitionType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard definition properties. 
      See definition of StandardObjectProperties for more documentation
		
		 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
						 
							 
								 An identified reference to a remote entry in this dictionary, to be used when this entry should be identified to allow external references to this specific entry. 
							
						
					
				
			
		
	
	
	 
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains or refers to a definition object.  

The number of definitions contained in this dictionaryEntry is restricted to one, but a DefinitionCollection or Dictionary that contains multiple definitions can be substituted if needed. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
		 
			 
				 A non-identified reference to a remote entry in this dictionary, to be used when this entry need not be identified to allow external references to this specific entry. The remote entry referenced will usually be in a dictionary in the same XML document. This element will usually be used in dictionaries that are inside of another dictionary. 
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions that contains a GML object which references a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 A proxy entry in a dictionary of definitions. An element of this type contains a reference to a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. 
		
		 
			 
				 
					 
						 
							 A reference to a remote entry in this dictionary, used when this dictionary entry is identified to allow external references to this specific entry. The remote entry referenced can be in a dictionary in the same or different XML document. 
						
					
				
			
		
	
	
	 
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/direction.xsd
 
	 
		 direction.xsd
		 This schema defines "direction" element and type.
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	 
	
	 
		 
			 
		
		 
			 
			 
			 
			 
		
		 
	
	
	 
	
	 
		 
			 Direction expressed as a vector, either using components, or using angles.
		
		 
			 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/dynamicFeature.xsd
 
	 
		 
		 Basic support for tracking moving objects and objects with changing state.     
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	 
	 
	
	 
	
	 
		 
			 A timeslice encapsulates the time-varying properties of a dynamic feature--it 
        must be extended to represent a timestamped projection of a feature. The dataSource 
        property describes how the temporal data was acquired.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 This type encapsulates various dynamic properties of moving objects        
             (points, lines, regions). It is useful for dealing with features whose        
             geometry or topology changes over time.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 The history relationship associates a feature with a sequence of TimeSlice instances.
		
		 
			 
		
	
	
	 
	
	 
		 
			 The track of a moving object is a sequence of specialized timeslices        that indicate the status of the object.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 A dynamic feature may possess a history and/or a timestamp.
		
		 
			 
				 
			
		
	
	
	 
		 
			 A dynamic feature collection may possess a history and/or a timestamp.
		
		 
			 
				 
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/edited GML 311 schemas.zip


coordinateOperations.xsd

 
	 
		 
		 How to encode coordinate operation definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define coordinate operations, including Transformations, Conversions, and other specific subtypes of operations. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
						 
							 Unordered set of estimates of the impact of this coordinate operation on point position accuracy. Gives position error estimates for target coordinates of this coordinate operation, assuming no errors in source coordinates. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
	
	 
		 
			 Association to a concatenated operation, either referencing or containing the definition of that concatenated operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
	
	 
		 
			 Association to a pass through operation, either referencing or containing the definition of that pass through operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	 
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 Value of an angle operation parameter, in either degree-minute-second format or single value format. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 A group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level parameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
							 Unordered set of composition associations to the parameter values and groups of values included in this group. 
						
					
					 
				
			
		
	
	
	 
		 
			 A composition association to a parameter value or group of values included in this group. 
		
	
	
	 
		 
			 Association to the operation parameter group for which this element provides parameter values. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter group objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter group is identified. 
		
	
	
	 
		 
			 The definition of a group of parameters used by an operation method. This complexType is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter group. The first groupID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter group, including source information. 
						
					
					 
					 
						 
							 Unordered list of associations to the set of operation parameters that are members of this group. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter group. 
		
	
	
	 
		 
			 The maximum number of times that values for this parameter group can be included. If this attribute is omitted, the maximum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter that is a member of a group. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	







coordinateSystems.xsd

 
	 
		 
		 How to encode coordinate system definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define coordinate systems, including the specific subtypes of coordinate systems. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Coordinate System (CS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system containing a single time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TemporalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated ordinate is the distance from the specified origin to the point along the axis. Example: usage of the line feature representing a road to describe points on or along that road. A LinearCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a linear coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. An example is a multilinear coordinate system which contains one coordinate axis that may have any 1-D shape which has no intersections with itself. This non-straight axis is supplemented by one or two straight axes to complete a 2 or 3 dimensional coordinate system. The non-straight axis is typically incrementally straight or curved. A UserDefinedCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a user-defined coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be confused with an ellipsoidal coordinate system based on an ellipsoid "degenerated" into a sphere. A SphericalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a spherical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a polar coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An ObliqueCartesianCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an oblique-Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	







coordinateReferenceSystems.xsd

 
	 
		 
		 How to encode coordinate reference system definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define coordinate reference systems, including the specific subtypes of coordinate reference systems. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Coordinate Reference System (SC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates, with the exception of the abstract "SC_CRS" class. The "SC_CRS" class is encoded in referenceSystems.xsd, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 Association to a compound coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a geographic coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 3D coordinate reference system with the origin at the approximate centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view, which obviates the need to model the earth's curvature. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the spherical coordinate system used by this CRS.
		
	
	
	 
	
	 
		 
			 Association to a geocentric coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a projected coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft.
For further information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the engineering datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an engineering coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the oblique Cartesian coordinate system used by this CRS.
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an image coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for the recording of time. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the temporal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the temporal datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	







defaultStyle.xsd

 
	 
		 defaultStyle.xsd
		 Default Style schema for GML 3.1.0
	Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr 
	
	
	 
	 
	
	 
		 
			 Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
	
	
	 
		 
			 [complexType of] Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
	
	
	 
		 
			 [complexType of] The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
		 
			 
		
	
	
	 
		 
			 Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
	
	
	 
		 
			 [complexType of] Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for features.
		
	
	
	 
		 
			 [complexType of] The style descriptor for features.
		
		 
			 
				 
					 
					 
					 
					 
				
				 
				 
				 
			
		
	
	
	 
		 
			 Used to specify the grammar of the feature query mechanism.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Base complex type for geometry, topology, label and graph styles.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for geometries of a feature.
		
	
	
	 
		 
			 [complexType of] The style descriptor for geometries of a feature.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
	
	
	 
		 
			 [complexType of] The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for labels of a feature, geometry or topology.
		
	
	
	 
		 
			 [complexType of] The style descriptor for labels of a feature, geometry or topology.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
	
	
	 
		 
			 [complexType of] The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The symbol property. Extends the gml:AssociationType to allow for remote referencing of symbols.
		
	
	
	 
		 
			 [complexType of] The symbol property. Allows for remote referencing of symbols.
		
		 
			 
		
		 
		 
		 
		 
	
	
	 
		 
			 Used to specify the type of the symbol used.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Label is mixed -- composed of text and XPath expressions used to extract the useful information from the feature.
		
		 
			 
		
		 
	
	
	 
		 
			 Defines the geometric transformation of entities. There is no particular grammar defined for this value.
		
	
	
	 
		 
			 Used to vary individual graphic parameters and attributes of the style, symbol or text.
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	







dataQuality.xsd

 
	 
		 
		 How to encode positional data quality information. 
	Builds on units.xsd to encode the data needed to describe the positional accuracy of coordinate operations. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Data Quality (DQ) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	







datums.xsd

 
	 
		 
		 How to encode datum definitions. 
	Builds on referenceSystems.xsd to encode the data needed to define datums, including the specific subtypes of datums. Primary editor: Arliss Whiteside. Last updated 2005-06-22. 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Datum (CD_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
		
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 Association to a datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering datum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin can be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite). 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an engineering datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorPoint" and "realizationEpoch" elements. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Defines the origin of a temporal coordinate reference system. This type extends the TemporalDatumRestrictionType to add the "origin" element with the dateTime type. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The date and time origin of this temporal datum. 
		
	
	
	 
	
	 
		 
			 Association to a temporal datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is Greenwich, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is Greenwich. 
		
	
	
	 
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. Value is a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	







measures.xsd

 
	 
		 
		 Extends the units.xsd and basicTypes.xsd schemas with types for recording measures using specific types of units, especially the measures and units needed for coordinate reference systems and coordinate operations. The specific unit types encoded are length, angle, scale factor, time, area, volume, speed, and grid length. This schema allows angle values to be recorded as single numbers or in degree-minute-second format. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on Subclause 4.7 of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations. 
	
	
	 
	
	
	
	 
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million.
		
		 
			 
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks.
		
		 
			 
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial area quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an area, such as square metres or square miles.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial volume quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a volume, such as cubic metres or cubic feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a speed, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour.
		
		 
			 
		
	
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Angle value provided in degree-minute-second or degree-minute format.
		
		 
			 
			 
				 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Integer number of degrees, plus the angle direction. This element can be used for geographic Latitude and Longitude. For Latitude, the XML attribute direction can take the values "N" or "S", meaning North or South of the equator. For Longitude, direction can take the values "E" or "W", meaning East or West of the prime meridian. This element can also be used for other angles. In that case, the direction can take the values "+" or "-" (of SignType), in the specified rotational direction from a specified reference direction.
		
		 
			 
				 
					 
						 
							 
								 
									 
									 
									 
									 
								
							
							 
								 
							
						
					
				
			
		
	
	
	 
		 
			 Integer number of degrees in a degree-minute-second or degree-minute angular value, without indication of direction.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Decimal number of arc-minutes in a degree-minute angular value.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Integer number of arc-minutes in a degree-minute-second angular value.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Number of arc-seconds in a degree-minute-second angular value.
		
		 
			 
			 
		
	
	







referenceSystems.xsd

 
	 
		 
		 How to encode reference system definitions.
			Builds on several other parts of GML 3 to encode the data needed to define reference systems. Primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Reference System (RS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. The SC_CRS class is also encoded here, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. The RS_SpatialReferenceSystemUsingGeographicIdentifier class is not encoded, since it is not applicable to coordinate positions. The CI_Citation class is not directly encoded, since such information can be included as metaDataProperty elements which are optionally allowed. A modified version of the EX_Extent (DataType) class from ISO 19115 is currently encoded here, using GML 3 schema types. (A more extensive version of the EX_Extent package might be XML encoded in the future, probably in a separate extent.xsd schema.)
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111.
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. Contains text or refers to external text.
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
			 
				 
					 Unordered list of time periods whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	
	 
		 
			 A time period defining the temporal domain of this object.
		
	
	







units.xsd

 
	 
		 
		 Builds on gmlBase.xsd to encode units of measure (or uom), including definitions of units of measure and dictionaries of such definitions. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on most of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure (or uom). The definition includes a quantityType property, which indicates the phenomenon to which the units apply, and a catalogSymbol, which gives the short symbol used for this unit. This element is used when the relationship of this unit to other units or units systems is unknown.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is a base unit from the system of units.  A base unit cannot be derived by combination of other base units within this system.  Sometimes known as "fundamental unit".
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is defined through algebraic combination of more primitive units, which are usually base units from a particular system of units. Derived units based directly on base units are usually preferred for quantities other than the base units or fundamental quantities within a system.  If a derived unit is not the preferred unit, the ConventionalUnit element should be used instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is related to a preferred unit for this quantity type through a conversion formula.  A method for deriving this unit by algebraic combination of more primitive units, may also be provided.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Informal description of the phenomenon or type of quantity that is measured or observed. For example, "length", "angle", "time", "pressure", or "temperature". When the quantity is the result of an observation or measurement, this term is known as Observable Type or Measurand.
		
	
	
	 
		 
			 For global understanding of a unit of measure, it is often possible to reference an item in a catalog of units, using a symbol in that catalog. The "codeSpace" attribute in "CodeType" identifies a namespace for the catalog symbol value, and might reference the catalog. The "string" value in "CodeType" contains the value of a symbol that is unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units. For example, the symbol "cm" might indicate that it is the "m" symbol combined with the "c" prefix.
		
	
	
	 
	
	 
		 
			 Definition of one unit term for a derived unit of measure. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent can be positive or negative, but not zero.
		
		 
			 
				 
			
		
	
	
	 
		 
			 This element is included when this unit has an accurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 This element is included when the correct definition of this unit is unknown, but this unit has a rough or inaccurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 Relation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute "uom" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: "factor" or "formula".
		
		 
			 
				 
					 
						 
							 Specification of the scale factor by which a value using this unit of measure can be multiplied to obtain the corresponding value using the preferred unit of measure.
						
					
					 
						 
							 Specification of the formula by which a value using this unit of measure can be converted to obtain the corresponding value using the preferred unit of measure.
						
					
				
			
		
	
	
	 
		 
			 Paremeters of a simple formula by which a value using this unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type "double". These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the preferred unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
		
		 
			 
			 
			 
			 
		
	
	







06-023r1 URN Definitions Folder/gml/3.1.1/base/feature.xsd
 
	 
		 
		 GML Feature schema. 		      
    Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	
	 
	 
	
	 
	
	 
		 
			 An abstract feature provides a set of common properties, including id, metaDataProperty, name and description inherited from AbstractGMLType, plus boundedBy.    A concrete feature type must derive from this type and specify additional  properties in an application schema. A feature must possess an identifying attribute ('id' - 'fid' has been deprecated).
		
		 
			 
				 
					 
					 
						 
							 deprecated
							 deprecated in GML version 3.1
						
					
					
				
			
		
	
	
	
	 
	
	 
		 
			 Bounding shape.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 Envelope that includes also a temporal extent.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	 
	
	 
		 
			 Container for a feature - follow gml:AssociationType pattern.
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Container for features - follow gml:ArrayAssociationType pattern.
		
		 
			 
		
	
	
	
	 
	
	 
		 
			 A feature collection contains zero or more features.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Concrete generic feature collection.
		
		 
			 
		
	
	
	
	 
	 
	
	
	 
	 
	 
	 
	 
	
	
	 
		 
			 Makes boundedBy mandatory
		
		 
			 
				 
					 
					 
					 
						 
							 deprecated
							 deprecated in GML version 3.1
						
					
				
			
		
	
	
	 
		 
			 Deprecated in GML 3.1.0
		
	
	
	 
		 
			 Convenience property for generalised location.  
      A representative location for plotting or analysis.  
      Often augmented by one or more additional geometry properties with more specific semantics.
			 Deprecated in GML 3.1.0
		
		 
			 
				 
				 
				 
				 
			
		
		 
	
	
	 
		 
			 Deprecated in GML 3.1.0
		
	
	
	 
		 
			 G-XML component
			 Deprecated in GML 3.1.0
		
		 
			 
				 
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/geometryAggregates.xsd
 
	 
		 geometryAggregates.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	
	
	
	 
		 
			 The "_GeometricAggregate" element is the abstract head of the substituition group for all geometric aggremates.
		
	
	
	 
		 
			 This is the abstract root type of the geometric aggregates.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A geometry collection must include one or more geometries, referenced through geometryMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a geometric aggregate via the XLink-attributes or contains the "multi geometry" element. multiGeometryProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _GeometricAggregate.
		
	
	
	 
		 
			 A property that has a geometric aggregate as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiPoint is defined by one or more Points, referenced through pointMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a point aggregate via the XLink-attributes or contains the "multi point" element. multiPointProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiPoint.
		
	
	
	 
		 
			 A property that has a collection of points as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiCurve is defined by one or more Curves, referenced through curveMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve aggregate via the XLink-attributes or contains the "multi curve" element. multiCurveProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiCurve.
		
	
	
	 
		 
			 A property that has a collection of curves as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiSurface is defined by one or more Surfaces, referenced through surfaceMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface aggregate via the XLink-attributes or contains the "multi surface" element. multiSurfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiSurface.
		
	
	
	 
		 
			 A property that has a collection of surfaces as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiSolid is defined by one or more Solids, referenced through solidMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a solid aggregate via the XLink-attributes or contains the "multi solid" element. multiSolidProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiSolid.
		
	
	
	 
		 
			 A property that has a collection of solids as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "MultiSurface" element instead.
		
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "MultiCurve" element instead.
		
	
	
	 
		 
			 A MultiLineString is defined by one or more LineStrings, referenced through lineStringMember elements. Deprecated with GML version 3.0. Use MultiCurveType instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use MultiCurvePropertyType instead.
A property that has a collection of line strings as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
		 
			 A MultiPolygon is defined by one or more Polygons, referenced through polygonMember elements. Deprecated with GML version 3.0. Use MultiSurfaceType instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use MultiSurfacePropertyType instead.

A property that has a collection of polygons as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	 
		 
			 This property element either references a geometry element via the XLink-attributes or contains the geometry element.
		
	
	 
		 
			 This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a Point via the XLink-attributes or contains the Point element.
		
	
	 
		 
			 This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for "_Surface".
		
	
	 
		 
			 This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element which is substitutable for "_Solid".
		
	
	 
		 
			 This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
	 
	 
	 
	 
	 
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveMember" instead.
This property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveMember" instead.
This property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceMember" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/geometryBasic0d1d.xsd
 
	 
		 geometryBasic0d1d.xsd
		 
			 Schematron validation
			 
				 
					 The presence of a dimension attribute implies the presence of the srsName attribute.
					 The presence of an axisLabels attribute implies the presence of the srsName attribute.
					 The presence of an uomLabels attribute implies the presence of the srsName attribute.
					 The presence of an uomLabels attribute implies the presence of the axisLabels attribute and vice versa.
				
			
			 
				 
					 The presence of a count attribute implies the presence of the dimension attribute.
				
			
		
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
		 
			 This includes not only measures.xsd, but also units.xsd, gmlBase.xsd and basicTypes.xsd.
		
	
	
	
	
	 
		 
			 The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This 
			includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction 
			of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 A geometric property can either be any geometry element encapsulated in an element of this type or an XLink reference 
			to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Note that either 
			the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference 
				remote resources (including those elsewhere in the same document). A simple link element can be constructed by 
				including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation 
				of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create 
				sophisticated links between resources; such links can be used to reference remote properties. A simple link element 
				can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by 
				including the gml:AssociationAttributeGroup.
			
		
	
	
	 
		 
			 A container for an array of geometry elements. The elements are always contained in the array property, 
			referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may 
			have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated 
			with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive 
			from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the 
			substitution group of _Geometry.
		
		 
			 
				 
					 
						 This attribute is included for backward compatibility with GML 2 and is deprecated with GML 3. 
						This identifer is superceded by "gml:id" inherited from AbstractGMLType. The attribute "gid" should not be used 
						anymore and may be deleted in future versions of GML without further notice.
					
				
				 
			
		
	
	
	 
		 
			 Optional reference to the CRS used by this geometry, with optional additional information to simplify use when 
			a more complete definition of the CRS is not needed.
		
		 
			 
				 In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType 
				(see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the 
				location the URI points to. If no srsName attribute is given, the CRS must be specified as part of the larger context this 
				geometry element is part of, e.g. a geometric element like point, curve, etc. It is expected that this attribute will be specified 
				at the direct position level only in rare cases.
			
		
		 
			 
				 The "srsDimension" is the length of coordinate sequence (the number of entries in the list). This dimension is 
				specified by the coordinate reference system. When the srsName attribute is omitted, this attribute shall be omitted.
			
		
		 
	
	
	 
		 
			 Optional additional and redundant information for a CRS to simplify use when a more complete definition of the 
			CRS is not needed. This information shall be the same as included in the more complete definition of the CRS, referenced by the 
			srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes 
			shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
		
		 
			 
				 Ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis 
				labels, after spaces and forbiddden characters are removed. When the srsName attribute is included, this attribute is optional. 
				When the srsName attribute is omitted, this attribute shall also be omitted.
			
		
		 
			 
				 Ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the 
				gml:catalogSymbol should be used for this uom labels, after spaces and forbiddden characters are removed. When the 
				axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute 
				shall also be omitted.
			
		
	
	
	 
		 
			 The "_GeometricPrimitive" element is the abstract head of the substituition group for all (pre- and user-defined) 
			geometric primitives.
		
	
	
	 
		 
			 This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not 
			decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their 
			coordinate tuples.
		
		 
			 
		
	
	
	 
		 
			 A property that has a geometric primitive as its value domain can either be an appropriate geometry element 
			encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry 
			elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither 
			both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a 
				specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide 
				Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between 
				resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer 
				functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	
	 
	
	 
		 
			 A Point is defined by a single coordinate tuple.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the direct poisiton of a point. 1. The "pos" element is of type 
							DirectPositionType.
						
						 
						 
							 
								 Deprecated with GML version 3.1.0 for coordinates with ordinate values that are numbers. Use "pos" 
								instead. The "coordinates" element shall only be used for coordinates with ordinates that require a string 
								representation, e.g. DMS representations.
							
						
						 
							 
								 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for 
								backwards compatibility with GML 2.
							
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a point via the XLink-attributes or contains the point element. pointProperty 
			is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that 
			is substitutable for Point.
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
		
	
	
	 
		 
			 A property that has a point as its value domain can either be an appropriate geometry element encapsulated in an 
			element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located 
			elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific 
				set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. 
				XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be 
				used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has 
				been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of points. The elements are always contained in the array property, referencing geometry 
			elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	
	
	 
		 
			 The "_Curve" element is the abstract head of the substituition group for all (continuous) curve elements.
		
	
	
	 
		 
			 An abstraction of a curve to support the different levels of complexity. The curve can always be viewed as a geometric 
			primitive, i.e. is continuous.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the 
			predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is 
			substitutable for _Curve.
		
	
	
	 
		 
			 A property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an 
			element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere 
			in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific 
				set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. 
				XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used 
				to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built 
				into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of curves. The elements are always contained in the array property, referencing geometry elements 
			or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate 
			tuples, with linear interpolation between them. It is backwards compatible with the LineString of GML 2, GM_LineString of ISO 19107 is 
			implemented by LineStringSegment.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a line string. 1. A sequence of "pos" 
							(DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part 
							of this curve, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference 
							another point defined outside of this curve (reuse of existing points). 2. The "posList" element allows for a compact way to 
							specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong 
							to this curve only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility 
									with GML 3.0.0.
								
							
							 
								 
									 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for backwards 
									compatibility with GML 2.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
			
		
	
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since 
			DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the 
			"srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a 
			CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 DirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate 
			reference system (CRS).
		
		 
			 
				 
				 
					 
						 "count" allows to specify the number of direct positions in the list. If the attribute count is present then 
						the attribute srsDimension shall be present, too.
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 Vector instances hold the compoents for a (usually spatial) vector within some coordinate reference system (CRS). 
			Since Vectors will often be included in larger objects that have references to CRS, the "srsName" attribute may be missing. 
			In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.

			Note that this content model is the same as DirectPositionType, but is defined separately to reflect the distinct semantics, and to avoid validation problems. SJDC 2004-12-02
		
		 
			 
				 
			
		
	
	
	 
		 
			 A geometric position represented either by a DirectPosition or a Point.
		
		 
			 
			 
		
	
	
	 
		 
			 A list of geometric positions represented either by a DirectPosition or a Point.
		
		 
			 
			 
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0.
		
	
	
	
	
	 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct 
			position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), 
			the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the 
			envelope).
		
		 
			 
				 
				 
			
			 
				 
					 deprecated
					 deprecated with GML version 3.0
				
			
			 
				 
					 deprecated
					 Deprecated with GML version 3.1. Use the explicit properties "lowerCorner" and "upperCorner" instead.
				
			
			 
				 
					 Deprecated with GML version 3.1.0. Use the explicit properties "lowerCorner" and "upperCorner" instead.
				
			
		
		 
	
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "pos" element instead.
		
	
	 
		 
			 Represents a coordinate tuple in one, two, or three dimensions. Deprecated with GML 3.0 and replaced by 
			DirectPositionType.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveProperty" instead. This 
			property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use 
			CurvePropertyType instead. A property that has a line string as its value domain can either be an appropriate geometry element encapsulated 
			in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere 
			in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources 
				(including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. 
				The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to 
				be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. 
				A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by 
				including the gml:AssociationAttributeGroup.
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	
	
	 
		 
			 The "_Surface" element is the abstract head of the substituition group for all (continuous) surface elements.
		
	
	
	 
		 
			 An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Surface.
		
	
	
	 
		 
			 A property that has a surface as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	
	 
		 
			 The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
		
		 
			 
		
	
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	 
		 
			 A boundary of a surface consists of a number of rings. The "interior" rings seperate the surface / surface patch from the area enclosed by the rings.
		
	
	 
		 
			 Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "exterior" instead.
		
	
	 
		 
			 Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "interior" instead.
		
	
	
	 
		 
			 Encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a linear ring.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this ring, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this ring (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this ring only. The number of direct positions in the list must be at least four.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
						 
							 
								 Deprecated with GML version 3.0 and included for backwards compatibility with GML 2. Use "pos" elements instead.
							
						
					
				
			
		
	
	
	 
		 
			 Encapsulates a ring to represent properties in features or geometry collections.
		
		 
			 
		
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceProperty" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use SurfacePropertyType instead.
A property that has a polygon as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/geometryComplexes.xsd
 
	 
		 geometryComplexes.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	 
	
	 
		 
			 A CompositeCurve is defined by a sequence of (orientable) curves such that the each curve in the sequence terminates at the start point of the subsequent curve in the list.
		
		 
			 
				 
					 
						 
							 This element references or contains one curve in the composite curve. The curves are contiguous, the collection of curves is ordered.
NOTE: This definition allows for a nested structure, i.e. a CompositeCurve may use, for example, another CompositeCurve as a curve member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A CompositeSurface is defined by a set of orientable surfaces. A composite surface is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
		
		 
			 
				 
					 
						 
							 This element references or contains one surface in the composite surface. The surfaces are contiguous.
NOTE: This definition allows for a nested structure, i.e. a CompositeSurface may use, for example, another CompositeSurface as a member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A composite solid is a geometry type with all the geometric properties of a (primitive) solid. 
				Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
								
							
							 This element references or contains one solid in the composite solid. The solids are contiguous.
NOTE: This definition allows for a nested structure, i.e. a CompositeSolid may use, for example, another CompositeSolid as a member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A geometric complex.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A property that has a geometric complex as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
NOTE: The allowed geometry elements contained in such a property (or referenced by it) have to be modelled by an XML Schema choice element since the composites inherit both from geometric complex *and* geometric primitive and are already part of the _GeometricPrimitive substitution group.
		
		 
			 
				 
				 
				 
				 
			
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/geometryPrimitives.xsd
 
	 
		 geometryPrimitives.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	 
	
	 
		 
			 Curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. 
				A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
				The orientation of the curve is positive.
		
		 
			 
				 
					 
						 
							 This element encapsulates the segments of the curve.
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for "_Curve".
		
	
	
	 
	
	 
		 
			 OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another _Curve with a parameterization that reverses the sense of the curve traversal.
		
		 
			 
				 
					 
						 
							 References or contains the base curve (positive orientation).
NOTE: This definition allows for a nested structure, i.e. an OrientableCurve may use another OrientableCurve as its base curve.
						
					
				
				 
					 
						 If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another _Curve with a parameterization that reverses the sense of the curve traversal. "+" is the default value.
					
				
			
		
	
	
	
	
	
	 
		 
			 The "_CurveSegment" element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism.
		
	
	
	 
		 
			 Curve segment defines a homogeneous segment of a curve.
		
		 
		 
			 
				 The attribute "numDerivativesAtStart" specifies the type of continuity between this curve segment and its predecessor. If this is the first curve segment in the curve, one of these values, as appropriate, is ignored. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
		 
			 
				 The attribute "numDerivativesAtEnd" specifies the type of continuity between this curve segment and its successor. If this is the last curve segment in the curve, one of these values, as appropriate, is ignored. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
		 
			 
				 The attribute "numDerivativesInterior" specifies the type of continuity that is guaranteed interior to the curve. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
	
	
	 
		 
			 This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
		 
			 A container for an array of curve segments.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LineStringSegment is a curve segment that is defined by two or more coordinate tuples, with linear interpolation between them.
				Note: LineStringSegment implements GM_LineString of ISO 19107.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a LineStringSegment the interpolation is fixed as "linear".
					
				
			
		
	
	
	 
	
	 
		 
			 An ArcString is a curve segment that uses three-point circular arc interpolation.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcString the interpolation is fixed as "circularArc3Points".
					
				
				 
					 
						 The number of arcs in the arc string can be explicitly stated in this attribute. The number of control points in the arc string must be 2 * numArc + 1.
					
				
			
		
	
	
	 
	
	 
		 
			 An Arc is an arc string with only one arc unit, i.e. three control points.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 An arc is an arc string consiting of a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 A Circle is an arc whose ends coincide to form a simple closed loop. The "start" and "end" bearing are equal and shall be the bearing for the first controlPoint listed. The three control points must be distinct non-co-linear points for the Circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
		
		 
			 
		
	
	
	 
	
	 
		 
			 This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The bulge controls the offset of each arc's midpoint. The "bulge" is the real number multiplier for the normal that determines the offset direction of the midpoint of each arc. The length of the bulge sequence is exactly 1 less than the length of the control point array, since a bulge is needed for each pair of adjacent points in the control point array. The bulge is not given by a distance, since it is simply a multiplier for the normal.
The midpoint of the resulting arc is given by: midPoint = ((startPoint + endPoint)/2.0) + bulge*normal
						
					
					 
						 
							 The attribute "normal" is a vector normal (perpendicular) to the chord of the arc, the line joining the first and last
point of the arc. In a 2D coordinate system, there are only two possible directions for the normal, and it is often given as a signed real, indicating its length, with a positive sign indicating a left turn angle from the chord line, and a negative sign indicating a right turn from the chord. In 3D, the normal determines the plane of the arc, along with the start and endPoint of the arc.
The normal is usually a unit vector, but this is not absolutely necessary. If the normal is a zero vector, the geometric object becomes equivalent to the straight line between the two end points. The length of the normal sequence is exactly the same as for the bulge sequence, 1 less than the control point sequence length.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcStringByBulge the interpolation is fixed as "circularArc2PointWithBulge".
					
				
				 
					 
						 The number of arcs in the arc string can be explicitly stated in this attribute. The number of control points in the arc string must be numArc + 1.
					
				
			
		
	
	
	 
	
	 
		 
			 An ArcByBulge is an arc string with only one arc unit, i.e. two control points and one bulge.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The bulge controls the offset of each arc's midpoint. The "bulge" is the real number multiplier for the normal that determines the offset direction of the midpoint of each arc. The length of the bulge sequence is exactly 1 less than the length of the control point array, since a bulge is needed for each pair of adjacent points in the control point array. The bulge is not given by a distance, since it is simply a multiplier for the normal.
The midpoint of the resulting arc is given by: midPoint = ((startPoint + endPoint)/2.0) + bulge*normal
						
					
					 
						 
							 The attribute "normal" is a vector normal (perpendicular) to the chord of the arc, the line joining the first and last
point of the arc. In a 2D coordinate system, there are only two possible directions for the normal, and it is often given as a signed real, indicating its length, with a positive sign indicating a left turn angle from the chord line, and a negative sign indicating a right turn from the chord. In 3D, the normal determines the plane of the arc, along with the start and endPoint of the arc.
The normal is usually a unit vector, but this is not absolutely necessary. If the normal is a zero vector, the geometric object becomes equivalent to the straight line between the two end points. The length of the normal sequence is exactly the same as for the bulge sequence, 1 less than the control point sequence length.
						
					
				
				 
					 
						 An arc is an arc string consiting of a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 This variant of the arc requires that the points on the arc have to be computed instead of storing the coordinates directly. The control point is the center point of the arc plus the radius and the bearing at start and end. This represenation can be used only in 2D.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) element. The "pos" element contains a center point that is only part of this curve segment, a "pointProperty" element contains a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element can be used to specifiy the coordinates of the center point, too. The number of direct positions in the list must be one.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The radius of the arc.
						
					
					 
						 
							 The bearing of the arc at the start.
						
					
					 
						 
							 The bearing of the arc at the end.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcByCenterPoint the interpolation is fixed as "circularArcCenterPointWithRadius".
					
				
				 
					 
						 Since this type describes always a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 A CircleByCenterPoint is an ArcByCenterPoint with identical start and end angle to form a full circle. Again, this represenation can be used only in 2D.
		
		 
			 
		
	
	
	 
	
	 
		 
			 An offset curve is a curve at a constant
		 distance from the basis curve. They can be useful as a cheap
		 and simple alternative to constructing curves that are offsets	
		 by definition.
		
		 
			 
				 
					 
						 
							 offsetBase is a reference to thecurve from which this
							 curve is define	as an offset.
						
					
					 
						 
							 distance is the distance at which the
							 offset curve is generated from the basis curve. In 2D systems, positive distances
							 are to be to the left of the basis curve, and the negative distances are to be to the 
							 right of the basis curve.
						
					
					 
						 
							 refDistance is used to define the vector
       direction of the offset curve from the basis curve. It can
       be omitted in the 2D case, where the distance can be 
       positive or negative. In that case, distance defines left
       side (positive distance) or right side (negative distance)
       with respect to the tangent to the basis curve.

       In 3D the basis curve shall have a well defined tangent 
       direction for every point. The offset curve at any point 
       in 3D, the basis curve shall have a well-defined tangent
       direction for every point. The offset curve at any point
       (parameter) on the basis curve c is in the direction
       -   -   -         -               
       s = v x t  where  v = c.refDirection()  
       and
       -
       t = c.tangent()
                                                    -
       For the offset direction to be well-defined, v shall not
       on any point of the curve be in the same, or opposite, 
       direction as
       - 
       t.

       The default value of the refDirection shall be the local
       co-ordinate axis vector for elevation, which indicates up for
       the curve in a geographic sense.

       NOTE! If the refDirection is the positive tangent to the
       local elevation axis ("points upward"), then the offset
       vector points to the left of the curve when viewed from
       above.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A placement takes a standard geometric
   construction and places it in geographic space. It defines a
   transformation from a constructive parameter space to the 
   co-ordinate space of the co-ordinate reference system being used.  
   Parameter spaces in formulae in this International Standard are 
   given as (u, v) in 2D and(u, v, w) in 3D. Co-ordinate reference 
   systems positions are given in formulae, in this International 
   Standard, by either (x, y) in 2D, or (x, y, z) in 3D.

   Affine placements are defined by linear transformations from 
   parameter space to the target co-ordiante space. 2-dimensional 
   Cartesian parameter space,(u,v) transforms into 3-dimensional co-
   ordinate reference systems,(x,y,z) by using an affine 
   transformation,(u,v)->(x,y,z) which is defined :

	x	ux vx  	x0
			 u	  
	y =	uy vy   + y0
			 v		
	x	uz vz	z0
	
   Then, given this equation, the location element of the 
   AffinePlacement is the direct position (x0, y0, z0), which is the
   target position of the origin in (u, v). The two reference
   directions (ux, uy, uz) and (vx, vy, vz) are the target     
   directions of the unit vectors at the origin in (u, v).
		
		 
			 
				 
					 The location property gives 
     the target of the parameter space origin. This is the vector  
    (x0, y0, z0) in the formulae above.
				
			
			 
				 
					 The attribute refDirection gives the    
target directions for the co-ordinate basis vectors of the  
parameter space. These are the columns of the matrix in the 
formulae given above. The number of directions given shall be 
inDimension. The dimension of the directions shall be 
outDimension.
				
			
			 
				 
					 Dimension of the constructive parameter 
     space.
				
			
			 
				 
					 Dimension of the co-ordinate space.
				
			
		
	
	
	 
	
	 
		 
			 A clothoid, or Cornu's spiral, is plane
   curve whose curvature is a fixed function of its length.
   In suitably chosen co-ordinates it is given by Fresnel's
   integrals.

    x(t) = 0-integral-t cos(AT*T/2)dT    
    
    y(t) = 0-integral-t sin(AT*T/2)dT
   
   This geometry is mainly used as a transition curve between
   curves of type straight line to circular arc or circular arc
   to circular arc. With this curve type it is possible to 
   achieve a C2-continous transition between the above mentioned
   curve types. One formula for the Clothoid is A*A = R*t where
   A is constant, R is the varying radius of curvature along the
   the curve and t is the length along and given in the Fresnel 
   integrals.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 The "refLocation" is an affine mapping 
          that places  the curve defined by the Fresnel Integrals  
          into the co-ordinate reference system of this object.
									
								
							
						
					
					 
						 
							 The element gives the value for the
       constant in the Fresnel's integrals.
						
					
					 
						 
							 The startParameter is the arc length
       distance from the inflection point that will be the start
       point for this curve segment. This shall be lower limit
       used in the Fresnel integral and is the value of the
       constructive parameter of this curve segment at its start
       point. The startParameter can either be positive or
       negative. 
       NOTE! If 0.0 (zero), lies between the startParameter and
       the endParameter of the clothoid, then the curve goes
       through the clothoid's inflection point, and the direction
       of its radius of curvature, given by the second
       derivative vector, changes sides with respect to the
       tangent vector. The term length distance for the
						
					
					 
						 
							 The endParameter is the arc length
       distance from the inflection point that will be the end
       point for this curve segment. This shall be upper limit
       used in the Fresnel integral and is the value of the
       constructive parameter of this curve segment at its
       start point. The startParameter can either be positive
       or negative.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A GeodesicString consists of sequence of
   geodesic segments. The type essentially combines a sequence of
   Geodesic into a single object.
   The GeodesicString is computed from two or more positions and an
   interpolation using geodesics defined from the geoid (or 
   ellipsoid) of the co-ordinate reference system being used.
		
		 
			 
				 
					 
					 
				
				 
					 
						 The attribute "interpolation" specifies the
     curve interpolation mechanism used for this segment. This
     mechanism uses the control points and control parameters to
     determine the position of this curve segment. For an 
     GeodesicString the interpolation is fixed as "geodesic".
					
				
			
		
	
	
	 
	
	 
		 
			 A Geodesic consists of two distinct
   positions joined by a geodesic curve. The control points of
   a Geodesic shall lie on the geodesic between its start
   point and end points. Between these two points, a geodesic
   curve defined from ellipsoid or geoid model used by the
   co-ordinate reference systems may be used to interpolate
   other positions. Any other point in the controlPoint array
   must fall on this geodesic.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Cubic splines are similar to line strings in that they are a sequence of segments each with its own defining function. A cubic spline uses the control points and a set of derivative parameters to define a piecewise 3rd degree polynomial interpolation. Unlike line-strings, the parameterization by arc length is not necessarily still a polynomial. 
				The function describing the curve must be C2, that is, have a continuous 1st and 2nd derivative at all points, and pass through the controlPoints in the order given. Between the control points, the curve segment is defined by a cubic polynomial. At each control point, the polynomial changes in such a manner that the 1st and 2nd derivative vectors are the same from either side. The control parameters record must contain vectorAtStart, and vectorAtEnd which are the unit tangent vectors at controlPoint[1] and controlPoint[n] where n = controlPoint.count. 
				Note: only the direction of the vectors is relevant, not their length.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 "vectorAtStart" is the unit tangent vector at the start point of the spline.
						
					
					 
						 
							 "vectorAtEnd" is the unit tangent vector at the end point of the spline.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a CubicSpline the interpolation is fixed as "cubicSpline".
					
				
				 
					 
						 The degree for a cubic spline is "3".
					
				
			
		
	
	
	 
		 
			 A knot is a breakpoint on a piecewise spline curve.
		
		 
			 
				 
					 The property "value" is the value of the parameter at the knot of the spline. The sequence of knots shall be a non-decreasing sequence. That is, each knot's value in the sequence shall be equal to or greater than the previous knot's value. The use of equal consecutive knots is normally handled using the multiplicity.
				
			
			 
				 
					 The property "multiplicity" is the multiplicity of this knot used in the definition of the spline (with the same weight).
				
			
			 
				 
					 The property "weight" is the value of the averaging weight used for this knot of the spline.
				
			
		
	
	
	 
		 
			 Encapsulates a knot to use it in a geometric type.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions. Knots are breakpoints on the curve that connect its pieces. They are given as a non-decreasing sequence of real numbers. If the weights in the knots are equal then it is a polynomial spline. The degree is the algebraic degree of the basis functions.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The attribute "degree" shall be the degree of the polynomial used for interpolation in this spline.
						
					
					 
						 
							 The property "knot" shall be the sequence of distinct knots used to define the spline basis functions.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a BSpline the interpolation can be either "polynomialSpline" or "rationalSpline", default is "polynomialSpline".
					
				
				 
					 
						 The attribute isPolynomial is set to true if this is a polynomial spline.
					
				
				 
					 
						 The attribute "knotType" gives the type of knot distribution used in defining this spline. This is for information only
and is set according to the different construction-functions.
					
				
			
		
	
	
	 
	
	 
		 
			 Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The attribute "degree" shall be the degree of the polynomial used for interpolation in this spline.
						
					
					 
						 
							 The property "knot" shall be the sequence of distinct knots used to define the spline basis functions.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a Bezier the interpolation is fixed as "polynomialSpline".
					
				
				 
					 
						 The attribute isPolynomial is set to true as this is a polynomial spline.
					
				
				 
					 
						 The property "knotType" is not relevant for Bezier curve segments.
					
				
			
		
	
	
	 
	
	 
		 
			 A Surface is a 2-dimensional primitive and is composed of one or more surface patches. The surface patches are connected to one another.
				The orientation of the surface is positive ("up"). The orientation of a surface chooses an "up" direction through the choice of the upward normal, which, if the surface is not a cycle, is the side of the surface from which the exterior boundary appears counterclockwise. Reversal of the surface orientation reverses the curve orientation of each boundary component, and interchanges the conceptual "up" and "down" direction of the surface. If the surface is the boundary of a solid, the "up" direction is usually outward. For closed surfaces, which have no boundary, the up direction is that of the surface patches, which must be consistent with one another. Its included surface patches describe the interior structure of the Surface.
		
		 
			 
				 
					 
						 
							 This element encapsulates the patches of the surface.
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for "_Surface".
		
	
	
	 
	
	 
		 
			 OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a Surface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
		
		 
			 
				 
					 
						 
							 References or contains the base surface (positive orientation).
						
					
				
				 
					 
						 If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a Surface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface". "+" is the default value.
					
				
			
		
	
	
	
	
	
	 
		 
			 The "_SurfacePatch" element is the abstract head of the substituition group for all surface pach elements describing a continuous portion of a surface.
		
	
	
	 
		 
			 A surface patch defines a homogenuous portion of a surface.
		
		 
	
	
	 
		 
			 This property element contains a list of surface patches. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
		 
			 A container for an array of surface patches.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves are coplanar and the polygon uses planar interpolation in its interior. Implements GM_Polygon of ISO 19107.
		
		 
			 
				 
					 
					 
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
	
	 
		 
			 Represents a triangle as a surface with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring must be four.
		
		 
			 
				 
					 
						 
							 Constraint: The Ring shall be a LinearRing and must form a triangle, the first and the last position must be co-incident.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
	
	 
		 
			 Represents a rectangle as a surface with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring must be five.
		
		 
			 
				 
					 
						 
							 Constraint: The Ring shall be a LinearRing and must form a rectangle; the first and the last position must be co-incident.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
		 
			 This property element either references a curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for "_Curve".
		
	
	
	 
	
	 
		 
			 A Ring is used to represent a single connected component of a surface boundary. It consists of a sequence of curves connected in a cycle (an object whose boundary is empty).
A Ring is structurally similar to a composite curve in that the endPoint of each curve in the sequence is the startPoint of the next curve in the Sequence. Since the sequence is circular, there is no exception to this rule. Each ring, like all boundaries, is a cycle and each ring is simple.
NOTE: Even though each Ring is simple, the boundary need not be simple. The easiest case of this is where one of the interior rings of a surface is tangent to its exterior ring.
		
		 
			 
				 
					 
						 
							 This element references or contains one curve in the composite curve. The curves are contiguous, the collection of curves is ordered.
NOTE: This definition allows for a nested structure, i.e. a CompositeCurve may use, for example, another CompositeCurve as a curve member.
						
					
				
			
		
	
	
	 
		 
			 Encapsulates a ring to represent properties in features or geometry collections.
		
		 
			 
		
	
	
	 
		 
			 Reference points which are organised
   into sequences or grids(sequences of equal length sequences).
		
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
	
	 
		 
			 
			
		
		 
			 
		
	
	
	 
	
	 
		 
			 A gridded surface is a parametric curve
   surface derived from a rectangular grid in the parameter
   space. The rows from this grid are control points for
   horizontal surface curves; the columns are control points
   for vertical surface curves. The working assumption is that
   for a pair of parametric co-ordinates (s, t) that the
   horizontal curves for each integer offset are calculated
   and evaluated at "s". The defines a sequence of control
   points:
   
   cn(s) : s  1 .....columns 

   From this sequence a vertical curve is calculated for "s",
   and evaluated at "t". In most cases, the order of
   calculation (horizontal-vertical vs. vertical-horizontal)
   does not make a difference. Where it does, the horizontal-   
   vertical order shall be the one used.

   Logically, any pair of curve interpolation types can lead
   to a subtype of GriddedSurface. The following clauses
   define some most commonly encountered surfaces that can
   be represented in this manner.
		
		 
			 
				 
					 
						 
							 This is the double indexed sequence
       of control points, given in row major form. 
       NOTE! There in no assumption made about the shape
       of the grid. 
       For example, the positions need not effect a "21/2D"
       surface, consecutive points may be equal in any or all
       of the ordinates. Further, the curves in either or both
       directions may close.
						
					
					 
						 
							 The attribute rows gives the number
         of rows in the parameter grid.
						
					
					 
						 
							 The attribute columns gives the number
        of columns in the parameter grid.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A cone is a gridded surface given as a
   family of conic sections whose control points vary linearly.
   NOTE! A 5-point ellipse with all defining positions identical
   is a point. Thus, a truncated elliptical cone can be given as a
   2x5 set of control points
   ((P1, P1, P1, P1, P1), (P2, P3, P4, P5, P6)). P1 is the apex 
   of the cone. P2, P3,P4, P5 and P6 are any five distinct points
   around the base ellipse of the cone. If the horizontal curves
   are circles as opposed to ellipses, the a circular cone can
   be constructed using ((P1, P1, P1),(P2, P3, P4)). The apex most     
   not coinside with the other plane.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A cylinder is a gridded surface given as a
   family of circles whose positions vary along a set of parallel
   lines, keeping the cross sectional horizontal curves of a
   constant shape.
   NOTE! Given the same working assumptions as in the previous
   note, a Cylinder can be given by two circles, giving us the
   control points of the form ((P1, P2, P3),(P4, P5, P6)).
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A sphere is a gridded surface given as a
   family of circles whose positions vary linearly along the
   axis of the sphere, and whise radius varies in proportions to
   the cosine function of the central angle. The horizontal 
   circles resemble lines of constant latitude, and the vertical
   arcs resemble lines of constant longitude. 
   NOTE! If the control points are sorted in terms of increasing
   longitude, and increasing latitude, the upNormal of a sphere
   is the outward normal.
   EXAMPLE If we take a gridded set of latitudes and longitudes
   in degrees,(u,v) such as

	(-90,-180)  (-90,-90)  (-90,0)  (-90,  90) (-90, 180) 
	(-45,-180)  (-45,-90)  (-45,0)  (-45,  90) (-45, 180) 
	(  0,-180)  (  0,-90)  (  0,0)  (  0,  90) (  0, 180)
	( 45,-180)  ( 45,-90)  ( 45,0)  ( 45, -90) ( 45, 180)
	( 90,-180)  ( 90,-90)  ( 90,0)  ( 90, -90) ( 90, 180)
   
   And map these points to 3D using the usual equations (where R
   is the radius of the required sphere).

    z = R sin u
    x = (R cos u)(sin v)
    y = (R cos u)(cos v)

   We have a sphere of Radius R, centred at (0,0), as a gridded
   surface. Notice that the entire first row and the entire last
   row of the control points map to a single point in each 3D
   Euclidean space, North and South poles respectively, and that
   each horizontal curve closes back on itself forming a 
   geometric cycle. This gives us a metrically bounded (of finite
   size), topologically unbounded (not having a boundary, a
   cycle) surface.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A polyhedral surface is a surface composed
   of polygon surfaces connected along their common boundary 
   curves. This differs from the surface type only in the
   restriction on the types of surface patches acceptable.
		
		 
			 
				 
					 
					 
						 
							 This property encapsulates the patches of 
      the polyhedral surface.
						
					
				
			
		
	
	
	 
		 
			 This property element contains a list of
   polygon patches. The order of the patches is significant and 
   shall be preserved when processing the list.
		
	
	
	 
		 
			 This type defines a container for an array of 
   polygon patches.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This property element contains a list of
   triangle patches. The order of the patches is significant and 
   shall be preserved when processing the list.
		
	
	
	 
		 
			 This type defines a container for an array of 
     triangle patches.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 A triangulated surface is a polyhedral 
   surface that is composed only of triangles. There is no
   restriction on how the triangulation is derived.
		
		 
			 
				 
					 
					 
						 
							 This property encapsulates the patches of 
      the triangulated surface.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A tin is a triangulated surface that uses
   the Delauny algorithm or a similar algorithm complemented with
   consideration of breaklines, stoplines, and maximum length of 
   triangle sides. These networks satisfy the Delauny's criterion
   away from the modifications: Fore each triangle in the 
   network, the circle passing through its vertices does not
   contain, in its interior, the vertex of any other triangle.
		
		 
			 
				 
					 
						 
							 Stoplines are lines where the local
       continuity or regularity of the surface is questionable.
       In the area of these pathologies, triangles intersecting
       a stopline shall be removed from the tin surface, leaving
       holes in the surface. If coincidence occurs on surface
       boundary triangles, the result shall be a change of the 
       surface boundary. Stoplines contains all these
       pathological segments as a set of line strings.
						
					
					 
						 
							 Breaklines are lines of a critical
       nature to the shape of the surface, representing local
       ridges, or depressions (such as drainage lines) in the
       surface. As such their constituent segments must be
       included in the tin eve if doing so
       violates the Delauny criterion. Break lines contains these
       critical segments as a set of line strings.
						
					
					 
						 
							 Areas of the surface where data is not 
       sufficiently dense to assure reasonable calculation shall be    
       removed by adding a retention criterion for triangles based 
       on the length of their sides. For many triangle sides  
       exceeding maximum length, the adjacent triangles to that 
       triangle side shall be removed from the surface.
						
					
					 
						 
							 The corners of the triangles in the TIN 
  are often referred to as pots. ControlPoint shall contain a 
  set of the GM_Position used as posts for this TIN. Since each  
  TIN contains triangles, there must be at least 3 posts. The 
       order in which these points are given does not affect the 
       surface that is represented. Application schemas may add 
       information based on ordering of control points to facilitate 
       the reconstruction of the TIN from the control points.
						
						 
							 
								 
								 
							
						
					
				
			
		
	
	 
		 
			 
		
	
	
	
	
	
	 
		 
			 The "_Solid" element is the abstract head of the substituition group for all (continuous) solid elements.
		
	
	
	 
		 
			 An abstraction of a solid to support the different levels of complexity. A solid is always contiguous.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Solid.
		
	
	
	 
		 
			 A property that has a solid as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces (shells). A shell is represented by a composite surface, where every  shell is used to represent a single connected component of the boundary of a solid. It consists of a composite surface (a list of orientable surfaces) connected in a topological cycle (an object whose boundary is empty). Unlike a Ring, a Shell's elements have no natural sort order. Like Rings, Shells are simple.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
								
							
							 Boundaries of solids are similar to surface boundaries. In normal 3-dimensional Euclidean space, one (composite) surface is distinguished as the exterior. In the more general case, this is not always possible.
						
					
					 
						 
							 
								 
									 
										 
									
								
							
							 Boundaries of solids are similar to surface boundaries.
						
					
				
			
		
	
	
	
	
	 
		 
			 CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an
application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an
application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 Defines allowed values for the knots` type. Uniform knots implies that all knots are of multiplicity 1 and they differ by a positive constant from the preceding knot. Knots are quasi-uniform iff they are of multiplicity (degree + 1) at the ends, of multiplicity 1 elsewhere, and they differ by a positive constant from the preceding knot.
		
		 
			 
			 
			 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/gml.xsd
 
	 
		 gml.xsd
		 Top level GML schema
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	 
	 
	 
	 
	 
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/gmlBase.xsd
 
	 
		 
			 Schematron validation
			 
			 
			 
				 
					 Property element may not carry both a reference to an object and contain an object.
					 Property element must either carry a reference to an object or contain an object.
				
			
		
		 GML base schema for GML 3
			Components to support the GML encoding model.  
			
			The abstract Schematron rules can be used by any schema that includes gmlBase.  

    Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that 
      derive from AbstractGMLType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype 
	to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. 
	Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	 
		 
			 Generic GML element to contain a heterogeneous collection of GML _Objects
		
	
	
	 
		 
			 A non-abstract generic collection type that can be used as a document element for a collection of any GML types - Geometries, Topologies, Features ...

FeatureCollections may only contain Features.  GeometryCollections may only contain Geometrys.  Bags are less constrained  they must contain objects that are substitutable for gml:_Object.  This may mix several levels, including Features, Definitions, Dictionaries, Geometries etc.  

The content model would ideally be 
   member 0..*
   members 0..1
   member 0..*
for maximum flexibility in building a collection from both homogeneous and distinct components: 
included "member" elements each contain a single Object
an included "members" element contains a set of Objects 

However, this is non-deterministic, thus prohibited by XSD.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	 
		 
			 Generic GML element to contain a homogeneous array of GML _Objects
		
	
	
	 
		 
			 A non-abstract generic collection type that can be used as a document element for a homogeneous collection of any GML types - Geometries, Topologies, Features ...
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 Abstract element which acts as the head of a substitution group for packages of MetaData properties.
		
	
	
	 
		 
			 An abstract base type for complex metadata types.
		
		 
	
	
	
	 
		 
			 Concrete element in the _MetaData substitution group, which permits any well-formed XML content.  Intended to act as a container for metadata defined in external schemas, for which it is not possible to add the concrete components to the GML _MetaData substitution group directly. Deprecated with GML version 3.1.0.
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	
	
	 
	
	 
		 
			 
				 
					 
						 
					
				
			
			 must carry a reference to an object or contain an object but not both
		
	
	
	 
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  

Descendents of this type can be restricted in an application schema to 
* allow only specified classes as valid participants in the aggregation
* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    

When used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   

In many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   

If co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a "cached" version of the value(s).
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.
		
		 
		 
	
	
	
	 
	
	 
		 
			 A base for derived types used to specify complex types containing an array of objects, by unspecified UML association - either composition or aggregation.  An instance of this type contains elements representing Objects.

Ideally this type would be derived by extension of AssociationType.  
However, this leads to a non-deterministic content model, since both the base and the extension have minOccurs="0", and is thus prohibited in XML Schema.
		
		 
			 
		
	
	
	
	 
		 
			 Contains or refers to a metadata package that contains metadata properties.
		
	
	
	 
		 
			 Base type for complex metadata property types.
		
		 
			
			 
		
		 
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Reference to an XML Schema fragment that specifies the content model of the propertys value. This is in conformance with the XML Schema Section 4.14 Referencing Schemas from Elsewhere.
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the simple link components from xlinks.xsd, with all members optional, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance.
		
		 
		 
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object, or refers to an external description.
		
	
	
	 
		 
			 This type is available wherever there is a need for a "text" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.
		
		 
			 
				 
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/grids.xsd
 
	 
		 grids.xsd
		 Grid geometries
    A subset of implicit geometries
    Designed for use with GML Coverage schema, but maybe useful elsewhere as well.  
    
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	 
	
	 
	
	 
		 
			 An unrectified grid, which is a network composed of two or more sets of equally spaced parallel lines in which the members of each set intersect the members of the other sets at right angles.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Provides grid coordinate values for the diametrically opposed corners of an envelope that bounds a section of grid. The value of a single coordinate is the number of offsets from the origin of the grid in the direction of a specific axis.
		
		 
			 
			 
		
	
	
	 
		 
			 Should be substitutionGroup="gml:Grid" but changed in order to accomplish Xerces-J schema validation
		
	
	
	 
		 
			 A rectified grid has an origin and vectors that define its post locations.
		
		 
			 
				 
					 
					 
				
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/measures.xsd
 
	 
		 
		 Extends the units.xsd and basicTypes.xsd schemas with types for recording measures using specific types of units, especially the measures and units needed for coordinate reference systems and coordinate operations. The specific unit types encoded are length, angle, scale factor, time, area, volume, speed, and grid length. This schema allows angle values to be recorded as single numbers or in degree-minute-second format. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on Subclause 4.7 of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations. 
	
	
	 
	
	
	
	 
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million.
		
		 
			 
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks.
		
		 
			 
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial area quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an area, such as square metres or square miles.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial volume quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a volume, such as cubic metres or cubic feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a speed, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour.
		
		 
			 
		
	
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Angle value provided in degree-minute-second or degree-minute format.
		
		 
			 
			 
				 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Integer number of degrees, plus the angle direction. This element can be used for geographic Latitude and Longitude. For Latitude, the XML attribute direction can take the values "N" or "S", meaning North or South of the equator. For Longitude, direction can take the values "E" or "W", meaning East or West of the prime meridian. This element can also be used for other angles. In that case, the direction can take the values "+" or "-" (of SignType), in the specified rotational direction from a specified reference direction.
		
		 
			 
				 
					 
						 
							 
								 
									 
									 
									 
									 
								
							
							 
								 
							
						
					
				
			
		
	
	
	 
		 
			 Integer number of degrees in a degree-minute-second or degree-minute angular value, without indication of direction.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Decimal number of arc-minutes in a degree-minute angular value.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Integer number of arc-minutes in a degree-minute-second angular value.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Number of arc-seconds in a degree-minute-second angular value.
		
		 
			 
			 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/observation.xsd
 
	 
		 observation.xsd
		 Observation schema for GML 3.1     
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	 
	 
	 
	
	
	 
		 
			 This element contains or points to a description of a sensor, instrument or procedure used for the observation
		
	
	
	 
		 
			 This element contains or points to the specimen, region or station which is the object of the observation
		
	
	
	 
		 
			 Synonym for target - common word used for photographs
		
	
	
	 
		 
			 Container for an object representing the target or subject of an observation.
		
		 
			 
				 
				 
			
		
		 
	
	
	 
		 
			 The result of the observation: an image, external object, etc
		
	
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/referenceSystems.xsd
 
	 
		 
		 How to encode reference system definitions.
			Builds on several other parts of GML 3 to encode the data needed to define reference systems. Primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	This schema encodes the Reference System (RS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. The SC_CRS class is also encoded here, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. The RS_SpatialReferenceSystemUsingGeographicIdentifier class is not encoded, since it is not applicable to coordinate positions. The CI_Citation class is not directly encoded, since such information can be included as metaDataProperty elements which are optionally allowed. A modified version of the EX_Extent (DataType) class from ISO 19115 is currently encoded here, using GML 3 schema types. (A more extensive version of the EX_Extent package might be XML encoded in the future, probably in a separate extent.xsd schema.)
	Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). 
	The GML 3.2 package will implement the model described in the revised version of ISO 19111.
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. Contains text or refers to external text.
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
			 
				 
					 Unordered list of time periods whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	
	 
		 
			 A time period defining the temporal domain of this object.
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/temporal.xsd
 
	 
		 
		 The temporal schema for GML 3.1 provides constructs for handling time-varying spatial data. 
    This schema reflects a partial implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal primitives and complexes.
		
	
	
	 
		 
			 The abstract supertype for temporal objects.
		
		 
			 
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal primitives.
		
	
	
	 
		 
			 The abstract supertype for temporal primitives.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
						
					
				
			
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal complexes. 
			Temporal complex is an aggregation of temporal primitives as its components, 
			represents a temporal geometric complex and a temporal topology complex. 
			N.B. Temporal geometric complex is not defined in this schema.
		
	
	
	 
		 
			 The abstract supertype for temporal complexes.
		
		 
			 
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal geometric primitives.
		
	
	
	 
		 
			 The abstract supertype for temporal geometric primitives.
       A temporal geometry must be associated with a temporal reference system via URI. 
       The Gregorian calendar with UTC is the default reference system, following ISO 
       8601. Other reference systems in common use include the GPS calendar and the 
       Julian calendar.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 Omit back-pointers begunBy, endedBy.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 
				 
					 
						 
						 
					
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
		 
			 This model group is provided as an alternative to the abstract susbstitutionGroup head _timeLength.
		ISO 19136 comment 411
		
		 
			 
			 
		
	
	
	 
		 
			 This element is an instance of the primitive xsd:duration simple type to 
      enable use of the ISO 8601 syntax for temporal length (e.g. P5DT4H30M). 
      It is a valid subtype of TimeDurationType according to section 3.14.6, 
      rule 2.2.4 in XML Schema, Part 1.
		
	
	
	 
		 
			 This element is a valid subtype of TimeDurationType 
			according to section 3.14.6, rule 2.2.4 in XML Schema, Part 1.
		
	
	
	 
		 
			 This type extends the built-in xsd:decimal simple type to allow floating-point 
      values for temporal length. According to  the ISO 11404 model you have to use 
      positiveInteger together with appropriate values for radix and factor. The 
      resolution of the time interval is to one radix ^(-factor) of the specified 
      time unit (e.g. unit="second", radix="10", factor="3" specifies a resolution 
      of milliseconds). It is a subtype of TimeDurationType.
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 Standard units for measuring time intervals (see ISO 31-1).
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
			 
				 
					 
				
			
		
	
	
	
	
	 
		 
			 Direct representation of a temporal position
		
	
	
	 
		 
			 Direct representation of a temporal position. 
      Indeterminate time values are also allowed, as described in ISO 19108. The indeterminatePosition 
      attribute can be used alone or it can qualify a specific value for temporal position (e.g. before 
      2002-12, after 1019624400). 
      For time values that identify position within a calendar, the calendarEraName attribute provides 
      the name of the calendar era to which the date is referenced (e.g. the Meiji era of the Japanese calendar).
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 The ISO 19108:2002 hierarchy of subtypes for temporal position are collapsed 
      by defining a union of XML Schema simple types for indicating temporal position relative 
      to a specific reference system. 
      
      Dates and dateTime may be indicated with varying degrees of precision.  
      dateTime by itself does not allow right-truncation, except for fractions of seconds. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      
      An ordinal position may be referenced via URI identifying the definition of an ordinal era.  
      
      A time coordinate value is indicated as a decimal (e.g. UNIX time, GPS calendar).
		
		 
	
	
	 
		 
			 Calendar dates may be indicated with varying degrees of precision, 
      using year, year-month, date. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      time is used for a position that recurs daily (see clause 5.4.4.2 of ISO 19108:2002).
		
		 
	
	
	 
		 
			 This enumerated data type specifies values for indeterminate positions.
		
		 
			 
			 
			 
			 
		
	
	
	
	
	 
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/temporalReferenceSystems.xsd
 
	 
		 
		 The Temporal Reference Systems schema for GML 3.1 provides constructs for handling various styles of temporal reference system. 
    This schema reflects a partial implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	
	
	 
		 
			 Abstract element serves primarily as the head of a substitution group for temporal reference systems.
		
	
	
	 
		 
			 A value in the time domain is measured relative to a temporal reference system. Common 
        types of reference systems include calendars, ordinal temporal reference systems, and 
        temporal coordinate systems (time elapsed since some epoch, e.g. UNIX time).
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 A temporal coordinate system is based on a continuous interval scale defined in terms of a single time interval.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 In an ordinal reference system the order of events in time can be well 
      established, but the magnitude of the intervals between them can not be 
      accurately determined (e.g. a stratigraphic sequence).
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Ordinal temporal reference systems are often hierarchically structured 
      such that an ordinal era at a given level of the hierarchy includes a 
      sequence of shorter, coterminous ordinal eras. This captured using the member/group properties.  
      
      Note that in this schema, TIme Ordinal Era is patterned on TimeEdge, which is a variation from ISO 19108.  
      This is in order to fulfill the requirements of ordinal reference systems based on eras delimited by 
      named points or nodes, which are common in geology, archeology, etc.  
      
      This change is subject of a change proposal to ISO
		
		 
			 
				 
					 
					 
					 
					 
					 
						 
							 An Era may be composed of several member Eras. The "member" element implements the association to the Era at the next level down the hierarchy.  "member" follows the standard GML property pattern whereby its (complex) value may be either described fully inline, or may be the target of a link carried on the member element and described fully elsewhere, either in the same document or from another service.
						
					
					 
						 
							 In a particular Time System, an Era may be a member of a group.  The "group" element implements the back-pointer to the Era at the next level up in the hierarchy. 

If the hierarchy is represented by describing the nested components fully in the their nested position inside "member" elements, then the parent can be easily inferred, so the group property is unnecessary.  

However, if the hierarchy is represented by links carried on the "member" property elements, pointing to Eras described fully elsewhere, then it may be useful for a child (member) era to carry an explicit pointer back to its parent (group) Era.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A calendar is a discrete temporal reference system 
      that provides a basis for defining temporal position to a resolution of one day. 
      A single calendar may reference more than one calendar era.
		
		 
			 
				 
					 
						 
							 Link to the CalendarEras that it uses as a reference for dating.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 In every calendar, years are numbered relative to the date of a 
      reference event that defines a calendar era. 
      In this implementation, we omit the back-pointer "datingSystem".
		
		 
			 
				 
					 
						 
							 Name or description of a mythical or historic event which fixes the position of the base scale of the calendar era.
						
					
					 
						 
							 Date of the referenceEvent expressed as a date in the given calendar. 
              In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true.
						
					
					 
						 
							 Julian date that corresponds to the reference date.  
              The Julian day numbering system is a temporal coordinate system that has an 
              origin earlier than any known calendar, 
              at noon on 1 January 4713 BC in the Julian proleptic calendar.  
              The Julian day number is an integer value; 
              the Julian date is a decimal value that allows greater resolution. 
              Transforming calendar dates to and from Julian dates provides a 
              relatively simple basis for transforming dates from one calendar to another.
						
					
					 
						 
							 Period for which the calendar era was used as a basis for dating.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A clock provides a basis for defining temporal position within a day. 
      A clock must be used with a calendar in order to provide a complete description of a temporal position 
      within a specific day.
		
		 
			 
				 
					 
						 
							 Name or description of an event, such as solar noon or sunrise, 
              which fixes the position of the base scale of the clock.
						
					
					 
						 
							 time of day associated with the reference event expressed as 
              a time of day in the given clock. The reference time is usually the origin of the clock scale.
						
					
					 
						 
							 24 hour local or UTC time that corresponds to the reference time.
						
					
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/temporalTopology.xsd
 
	 
		 
		 The temporal topology schema for ISO19136 provides constructs for handling topological complexes and 
		temporal feature relationships. 
		Temporal geometric characteristics of features are represented as instants and periods. 
		While, temporal context of features that does not relate to the position of time is described as connectivity relationships 
		among instants and periods. These relationships are called temporal topology as they do not change in time, 
		as long as the direction of time does not change. 
		It is used effectively in the case of describing a family tree expressing evolution of species, an ecological cycle, 
		a lineage of lands or buildings, or a history of separation and merger of administrative boundaries.
		This schema reflects a partial yet consistent implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	
	 
		 
			 This element represents temporal topology complex. It shall be the connected acyclic directed graph composed of time nodes and time edges.
		
	
	
	 
		 
			 A temporal topology complex.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A time topology complex property can either be any time topology complex element
			 encapsulated in an element of this type or an XLink reference to a remote time topology complex element 
			 (where remote includes elements located elsewhere in the same document). 
			 Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal topology primitives.
		
	
	
	 
		 
			 The element "complex" carries a reference to the complex containing this primitive.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A time topology primitive property can either hold any time topology complex element
			 eor carry an XLink reference to a remote time topology complex element 
			 (where remote includes elements located elsewhere in the same document). 
			 Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 "TimeNode" is a zero dimensional temporal topology primitive, 
			expresses a position in topological time, and is a start and an end of time edge, which represents states of time.
			Time node may be isolated. However, it cannot describe the ordering relationships with other primitives. 
			An isolated node may not be an element of any temporal topology complex.
		
	
	
	 
		 
			 Type declaration of the element "TimeNode".
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 A time node property can either be any time node element encapsulated in an element of this type 
			or an XLink reference to a remote time node element (where remote includes elements located elsewhere in the same document). 
			Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 TimeEdge is one dimensional temporal topology primitive,
			 expresses a state in topological time. It has an orientation from its start toward the end, 
			 and its boundaries shall associate with two different time nodes.
		
	
	
	 
		 
			 Type declaration of the element "TimeEdge".
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 A time edge property can either be any time edge element encapsulated in an element of this type 
			or an XLink reference to a remote time edge element (where remote includes elements located elsewhere in the same document). 
			Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Feature succession is a semantic relationship derived from evaluation of observer, and 
			Feature Substitution, Feature Division and Feature Fusion are defined as associations between 
			previous features and next features in the temporal context. 
			Successions shall be represented in either following two ways. 
			* define a temporal topological complex element as a feature element 
			* define an association same as temporal topological complex between features.
		
		 
			 
			 
			 
			 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/topology.xsd
 
	 
		 topology.xsd
		 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		
	
	 
	
	
	 
	
	 
		 
			 
		
	
	
	 
		 
			 Substitution group branch for Topo Primitives, used by TopoPrimitiveArrayAssociationType
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
			 
		
		 
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
				 
			
		
		 
	
	
	
	
	 
	
	 
		 
			 Its optional co-boundary is a set of connected directedEdges.  The orientation of one of these dirEdges is "+" if the Node is the "to" node of the Edge, and "-" if it is the "from" node.
		
		 
			 
				 
					 
					 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 There is precisely one positively directed and one negatively directed node in the boundary of every edge. The negatively and positively directed nodes correspond to the start and end nodes respectively. The optional coboundary of an edge is a circular sequence of directed faces which are incident on this edge in document order. Faces which use a particular boundary edge in its positive orientation appear with positive orientation on the coboundary of the same edge. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". An edge may optionally be realised by a 1-dimensional (curve) geometric primitive.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 . The topological boundary of a face consists of a set of directed edges. Note that all edges associated with a Face, including dangling and interior edges, appear in the boundary.  Dangling and interior edges are each referenced by pairs of directedEdges with opposing orientations.  The optional coboundary of a face is a pair of directed solids which are bounded by this face. If present, there is precisely one positively directed and one negatively directed solid in the coboundary of every face. The positively directed solid corresponds to the solid which lies in the direction of the positively directed normal to the face in any geometric realisation.  A face may optionally be realised by a 2-dimensional (surface) geometric primitive.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 The topological boundary of a TopoSolid consists of a set of directed faces. Note that all faces associated with the TopoSolid, including dangling faces, appear in the boundary. The coboundary of a TopoSolid is empty and hence requires no representation.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	 
	
	 
		 
			 The intended use of TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this point to other features via shared node definitions. Note the orientation assigned to the directedNode has no meaning in this context. It is preserved for symmetry with the types and elements which follow.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 The end Node of each directedEdge of a TopoCurveType
is the start Node of the next directedEdge of the TopoCurveType in document order.  The TopoCurve type and element represent a homogeneous topological expression, a list of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of TopoCurve is to appear within a line feature instance to express the structural and geometric relationships of this line to other features via the shared edge definitions.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 The TopoSurface type and element represent a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of TopoSurface is to appear within a surface feature instance to express the structural and possibly geometric relationships of this surface to other features via the shared face definitions.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 The TopoVolume type and element represent a homogeneous topological expression, a set of directed TopoSolids, which if realised are isomorphic to a geometric solid primitive. The intended use of TopoVolume is to appear within a 3D solid feature instance to express the structural and geometric relationships of this solid to other features via the shared TopoSolid definitions.  . Note the orientation assigned to the directedSolid has no meaning in three dimensions. It is preserved for symmetry with the preceding types and elements.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 This type represents a TP_Complex capable of holding topological primitives.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 Need schamatron test here that isMaximal attribute value is true
		
	
	
	 
		 
			 This Property can be used to embed a TopoComplex in a feature collection.
		
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 This type supports embedding topological primitives in a TopoComplex.
		
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 This type supports embedding an array of topological primitives in a TopoComplex
		
		
		 
			 
				 
			
		
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/units.xsd
 
	 
		 
		 Builds on gmlBase.xsd to encode units of measure (or uom), including definitions of units of measure and dictionaries of such definitions. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on most of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure (or uom). The definition includes a quantityType property, which indicates the phenomenon to which the units apply, and a catalogSymbol, which gives the short symbol used for this unit. This element is used when the relationship of this unit to other units or units systems is unknown.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is a base unit from the system of units.  A base unit cannot be derived by combination of other base units within this system.  Sometimes known as "fundamental unit".
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is defined through algebraic combination of more primitive units, which are usually base units from a particular system of units. Derived units based directly on base units are usually preferred for quantities other than the base units or fundamental quantities within a system.  If a derived unit is not the preferred unit, the ConventionalUnit element should be used instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is related to a preferred unit for this quantity type through a conversion formula.  A method for deriving this unit by algebraic combination of more primitive units, may also be provided.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Informal description of the phenomenon or type of quantity that is measured or observed. For example, "length", "angle", "time", "pressure", or "temperature". When the quantity is the result of an observation or measurement, this term is known as Observable Type or Measurand.
		
	
	
	 
		 
			 For global understanding of a unit of measure, it is often possible to reference an item in a catalog of units, using a symbol in that catalog. The "codeSpace" attribute in "CodeType" identifies a namespace for the catalog symbol value, and might reference the catalog. The "string" value in "CodeType" contains the value of a symbol that is unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units. For example, the symbol "cm" might indicate that it is the "m" symbol combined with the "c" prefix.
		
	
	
	 
	
	 
		 
			 Definition of one unit term for a derived unit of measure. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent can be positive or negative, but not zero.
		
		 
			 
				 
			
		
	
	
	 
		 
			 This element is included when this unit has an accurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 This element is included when the correct definition of this unit is unknown, but this unit has a rough or inaccurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 Relation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute "uom" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: "factor" or "formula".
		
		 
			 
				 
					 
						 
							 Specification of the scale factor by which a value using this unit of measure can be multiplied to obtain the corresponding value using the preferred unit of measure.
						
					
					 
						 
							 Specification of the formula by which a value using this unit of measure can be converted to obtain the corresponding value using the preferred unit of measure.
						
					
				
			
		
	
	
	 
		 
			 Paremeters of a simple formula by which a value using this unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type "double". These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the preferred unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
		
		 
			 
			 
			 
			 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/base/valueObjects.xsd
 
	 
		 valueObjects.xsd
		 GML conformant schema for Values in which the  
		    * scalar Value types and lists have their values recorded in simpleContent elements 
		    * complex Value types are built recursively
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	 
	 
	
	 
		 
			 Utility choice group which unifies generic Values defined in this schema document with 
			Geometry and Temporal objects and the Measures described above, 
			so that any of these may be used within aggregate Values.
		
		 
			
			 
			 
			
			 
		
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	
	 
		 
			 A value from two-valued logic, using the XML Schema boolean type.  An instance may take the values {true, false, 1, 0}.
		
	
	
	 
		 
			 XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
		
	
	
	
	 
		 
			 A term representing a classification.  It has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
		
	
	
	 
		 
			 A space-separated list of terms or nulls.  A single XML attribute codeSpace may be provided, which authorises all the terms in the list.
		
	
	
	
	 
		 
			 A numeric value with a scale.  The content of the element is an amount using the XML Schema type double which permits decimal or scientific notation.  An XML attribute uom (unit of measure) is required, whose value is a URI which identifies the definition of the scale or units by which the numeric value must be multiplied.
		
	
	
	 
		 
			 A space separated list of amounts or nulls.  The amounts use the XML Schema type double.  A single XML attribute uom (unit of measure) is required, whose value is a URI which identifies the definition of the scale or units by which all the amounts in the list must be multiplied.
		
	
	
	
	 
		 
			 An integer representing a frequency of occurrence.
		
	
	
	 
		 
			 A space-separated list of integers or nulls.
		
	
	
	
	
	
	 
		 
			 Aggregate value built from other Values using the Composite pattern. It contains zero or an arbitrary number of valueComponent elements, and zero or one valueComponents elements.  It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Aggregate value built using the Composite pattern.
		
	
	
	
	 
		 
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.  The member values may be scalars, composites, arrays or lists.  ValueArray has the same content model as CompositeValue, but the member values must be homogeneous.  The element declaration contains a Schematron constraint which expresses this restriction precisely.            Since the members are homogeneous, the referenceSystem (uom, codeSpace) may be specified on the ValueArray itself and implicitly inherited by all the members if desired.    Note that a_ScalarValueList is preferred for arrays of Scalar Values since this is a more efficient encoding.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
					 
						 ValueArray may not carry both a reference to a codeSpace and a uom
					
				
				 
					 
						 All components of   must be of the same type
						 All components of   must be of the same type
					
				
			
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.   _ScalarValueList is preferred for arrays of Scalar Values since this is more efficient.  Since "choice" is not available for attribute groups, an external constraint (e.g. Schematron) would be required to enforce the selection of only one of these through schema validation
		
	
	
	 
		 
		 
	
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Utility element to store a 2-point range of numeric values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of numeric values. If one member is a null, then this is a single ended interval.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Utility element to store a 2-point range of ordinal values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of ordinal values. If one member is a null, then this is a single ended interval.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Utility element to store a 2-point range of frequency values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of frequency values. If one member is a null, then this is a single ended interval.
		
		 
			 
		
	
	
	
	 
		 
			 Element which refers to, or contains, a Value
		
	
	
	 
		 
			 Element which refers to, or contains, a Value.  This version is used in CompositeValues.
		
	
	
	 
		 
			 GML property which refers to, or contains, a Value
		
		 
			 
		
		 
	
	
	
	 
		 
			 Element which refers to, or contains, a set of homogeneously typed Values.
		
	
	
	 
		 
			 GML property which refers to, or contains, a set of homogeneously typed Values.
		
		 
			 
		
	
	
	 
		 
			 Property whose content is a scalar value.
		
		 
			 
				 
					
					 
				
			
		
	
	 
		 
			 Property whose content is a Boolean value.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Category.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Quantity.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Count.
		
		 
			 
				 
					 
				
			
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/Profiles/SimpleDictionary/1.0.0/basicTypes.xsd
 
   
     basicTypes.xsd
		 Subset of basicTypes.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Arliss Whiteside. Last updated 2005-10-14 
  
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus  or authority for the term, such as the organisation who assigned the value,  or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  




06-023r1 URN Definitions Folder/gml/3.1.1/Profiles/SimpleDictionary/1.0.0/dictionary.xsd
 
	 
		 
		 Subset of dictionary.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-14 
	
	
	 
	
	
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
					
				
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
	




06-023r1 URN Definitions Folder/gml/3.1.1/Profiles/SimpleDictionary/1.0.0/gmlBase.xsd
 
	 
		 
		 Subset of gmlBase.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-14 
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
	
	
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that  derive from AbstractGMLType and its descendents "by restriction".  A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object.
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	




06-023r1 URN Definitions Folder/gml/3.1.1/Profiles/SimpleDictionary/1.0.0/gmlSimpleDictionaryProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 profile for Dictionary. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
	
	
	 
	




06-023r1 URN Definitions Folder/pixelInCell.xml
 
	
	 PixelInCell standard values
	
	 
		 
			 The origin of the image coordinate system is at the centre of a grid cell or image pixel. 
			 urn:ogc:def:pixelInCell:OGC:1.0:cellCenter
		
	
	 
		
		 
			 The origin of the image coordinate system is at the corner of a grid cell, or half-way between the centres of adjacent image pixels. 
			 urn:ogc:def:pixelInCell:OGC:1.0:cellCorner
		
	




06-023r1 URN Definitions Folder/rangeMeaning.xml
 
	
	 Range Meaning standard values
	
	 
		 
			 Any value between and including minimumValue and maximiumValue is valid. 
			 urn:ogc:def:rangeMeaning:OGC:1.0:exact
		
	
	
	 
		 
			 The axis is continuous with values wrapping around at the minimumValue and maximumValue. Values with the same meaning repeat modulo the difference between maximumValue and minimumValue. 
			 urn:ogc:def:rangeMeaning:OGC:1.0:wraparound
		
	




06-023r1 URN Definitions Folder/unitsDictionaryv1.xml
 
	
	 Example GML Dictinary of unit definitions.
	 Units Dictionary
	
	 
		 
			 degree
			 9102
			 urn:ogc:def:uom:OGC:1.0:degree
			 angle
			 
				 1.74532925199433E-02
			
		
	
	
	 
		 
			 radian
			 angle
			 
		
	
	
	 
		 
			 metre
			 9001
			 urn:ogc:def:uom:OGC:1.0:metre
			 length
			 
		
	
	
	 
		 
			 unity
			 8805
			 urn:ogc:def:uom:OGC:1.0:unity
			 scale factor
			 
		
	




06-023r1 URN Definitions Folder/verticalDatumType.xml
 
	
	 Vertical Datum Type standard values
	
	 
		 
			 The zero value of the associated vertical coordinate system axis is defined to approximate a constant potential surface, usually the geoid. Such a reference surface is usually determined by a national or scientific authority, and is then a well-known, named datum. 
			 urn:ogc:def:pixelInCell:OGC:1.0:geoidal
		
	
	 
		
		 
			 The zero point of the vertical axis is defined by a surface that has meaning for the purpose which the associated vertical measurements are used for. For hydrographic charts, this is often a predicted nominal sea surface (i.e., without waves or other wind and current effects) that occurs at low tide. 
			 urn:ogc:def:pixelInCell:OGC:1.0:depth
		
	
	
	 
		 
			 Atmospheric pressure is the basis for the definition of the origin of the associated vertical coordinate system axis. 
			 urn:ogc:def:pixelInCell:OGC:1.0:barometric
		
	
	 
		
		 
			 In some cases, e.g. oil exploration and production, a geological feature, such as the top or bottom of a geologically identifiable and meaningful subsurface layer, is used as a vertical datum. Other variations to the above three vertical datum types may exist and are all included in this type. 
			 urn:ogc:def:pixelInCell:OGC:1.0:otherSurface
		
	



