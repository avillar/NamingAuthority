

Future City Pilot-1: Using IFC/CityGML in Urban Planning Engineering Report







Publication Date: 2016-10-03




Approval Date: 2017-08-17




Posted Date: 2017-06-27




Reference number of this document: OGC 16-097




Reference URL for this document: http://www.opengis.net/doc/PER/FCP1-UPrules




Category: Public Engineering Report




Editor: Mohsen Kalantari




Title: Future City Pilot 1: Using IFC/CityGML in Urban Planning Engineering Report






OGC Engineering Report

COPYRIGHT




Copyright © 2017 Open Geospatial Consortium.
To obtain additional rights of use, visit http://www.opengeospatial.org/




WARNING





This document is an OGC Public Engineering Report created as a deliverable of an OGC Innovation Program Initiative. This document is not an OGC Standard and is not an official position of the OGC membership. It is distributed for review and comment. It is subject to change without notice and may not be referred to as an OGC Standard. Further, any OGC Engineering Report should not be referenced as required or mandatory technology in procurements. However, the discussions in this document could very well lead to the definition of an OGC Standard.








LICENSE AGREEMENT




Permission is hereby granted by the Open Geospatial Consortium, ("Licensor"), free of charge and subject to the terms set forth below, to any person obtaining a copy of this Intellectual Property and any associated documentation, to deal in the Intellectual Property without restriction (except as set forth below), including without limitation the rights to implement, use, copy, modify, merge, publish, distribute, and/or sublicense copies of the Intellectual Property, and to permit persons to whom the Intellectual Property is furnished to do so, provided that all copyright notices on the intellectual property are retained intact and that each person to whom the Intellectual Property is furnished agrees to the terms of this Agreement.




If you modify the Intellectual Property, all copies of the modified Intellectual Property must include, in addition to the above copyright notice, a notice that the Intellectual Property includes modifications that have not been approved or adopted by LICENSOR.




THIS LICENSE IS A COPYRIGHT LICENSE ONLY, AND DOES NOT CONVEY ANY RIGHTS UNDER ANY PATENTS THAT MAY BE IN FORCE ANYWHERE IN THE WORLD. THE INTELLECTUAL PROPERTY IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS NOTICE DO NOT WARRANT THAT THE FUNCTIONS CONTAINED IN THE INTELLECTUAL PROPERTY WILL MEET YOUR REQUIREMENTS OR THAT THE OPERATION OF THE INTELLECTUAL PROPERTY WILL BE UNINTERRUPTED OR ERROR FREE. ANY USE OF THE INTELLECTUAL PROPERTY SHALL BE MADE ENTIRELY AT THE USER’S OWN RISK. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ANY CONTRIBUTOR OF INTELLECTUAL PROPERTY RIGHTS TO THE INTELLECTUAL PROPERTY BE LIABLE FOR ANY CLAIM, OR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM ANY ALLEGED INFRINGEMENT OR ANY LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR UNDER ANY OTHER LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH THE IMPLEMENTATION, USE, COMMERCIALIZATION OR PERFORMANCE OF THIS INTELLECTUAL PROPERTY.




This license is effective until terminated. You may terminate it at any time by destroying the Intellectual Property together with all copies in any form. The license will also terminate if you fail to comply with any term or condition of this Agreement. Except as provided in the following sentence, no such termination of this license shall require the termination of any third party end-user sublicense to the Intellectual Property which is in force as of the date of notice of such termination. In addition, should the Intellectual Property, or the operation of the Intellectual Property, infringe, or in LICENSOR’s sole opinion be likely to infringe, any patent, copyright, trademark or other right of a third party, you agree that LICENSOR, in its sole discretion, may terminate this license without any compensation or liability to you, your licensees or any other party. You agree upon termination of any kind to destroy or cause to be destroyed the Intellectual Property together with all copies in any form, whether held by you or by any third party.




Except as contained in this notice, the name of LICENSOR or of any other holder of a copyright in all or part of the Intellectual Property shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Intellectual Property without prior written authorization of LICENSOR or such copyright holder. LICENSOR is and shall at all times be the sole entity that may authorize you or any third party to use certification marks, trademarks or other special designations to indicate compliance with any LICENSOR standards or specifications.




This Agreement is governed by the laws of the Commonwealth of Massachusetts. The application to this Agreement of the United Nations Convention on Contracts for the International Sale of Goods is hereby expressly excluded. In the event any provision of this Agreement shall be deemed unenforceable, void or invalid, such provision shall be modified so as to make it valid and enforceable, and as so modified the entire Agreement shall remain in full force and effect. No decision, action or inaction by LICENSOR shall be construed to be a waiver of any rights or remedies available to it.




None of the Intellectual Property or underlying information or technology may be downloaded or otherwise exported or reexported in violation of U.S. export laws and regulations. In addition, you are responsible for complying with any local laws in your jurisdiction which may impact your right to import, export or use the Intellectual Property, and you represent that you have complied with any regulations or registration procedures required by applicable law to make this license enforceable.






Table of Contents

	1. Introduction
	1.1. Scope
	1.2. Document contributor contact points
	1.3. Future work
	1.4. Foreword



	2. References
	3. Terms and definitions
	3.1. Abbreviated terms



	4. Overview
	5. Future City Pilot Phase 1
	5.1. Urban Planning Requirements
	5.2. Data



	6. Conceptual Design
	6.1. Requirements Analysis
	6.2. System Architecture



	7. FCP 1 - IFC/CityGML in Urban Planning Demonstrator
	7.1. Software components
	7.2. Implementation
	7.2.1. Solution 1
	7.2.2. Solution 2






	8. Conclusions and future work
	8.1. Conclusions
	8.2. Future work



	Appendix A: Revision History
	Appendix B: Bibliography







Abstract

Numerous and diverse technologies push cities towards open and platform-independent information infrastructures to manage human, natural, and physical systems. The  Future Cities Pilot 1 (FCP1), as an OGC Innovation Program initiative, demonstrated how cities can benefit from open standards when used in urban planning workflows. This report details the lessons learned of implementing both the  OGC CityGML and the buildingSMART Industry Foundation Classes (IFC) standards for visualizing and processing 3D spatial data when used in urban planning processes.




Business Value

Spatial representation of land development proposals are often submitted in 2D paper/image/CAD formats. The 2D design of even complex high-rise land developments is a norm. Moreover, land development assessments are applied in isolation since the responsible agencies usually do not have the infrastructure that enables sharing spatial data and automating the assessment process. This report outlines how land development proposal assessments can be improved through the use of 3D open models such as IFC and CityGML. This report illustrates the benefits of using of open standards, including 3D open standards, for the land development process. It also identifies important considerations for urban planning authorities in adopting CityGML and IFC in their operations.




What does this ER mean for the Working Group and OGC, in general

This report is of interest for CityGML SWG in particular and OGC’s alliance standard organization building Smart International (bSI) in general. The report presents interoperability issues between IFC and CityGML in the context of urban planning.




How does this ER relates to the work of the Working Group

This report details some issues in transforming from and to 3D commonly used data standards (IFC, CityGML, KML).




Keywords

Urban Planning, Land Development, WPS, WFS, CityGML, IFC, KML




Proposed OGC Working Group for Review and Approval

Web Processing Service and CityGML SWGs.








1. Introduction



1.1. Scope


The Future Cities Pilot is an OGC initiative to demonstrate how cities can benefit from open standards in managing human,  physical and natural systems. The first pilot project (FCP1) aimed to show how 3D modeling open standards such as IFC and CityGML can be used in urban planning and management scenarios. The scenarios included 1) the application of IFC and CityGML in land development proposal assessment, 2) the integration of CityGML with dynamic data feeds such as sensor observations and the utility of CityGML in solar energy potential of buildings, and 3) the value of CityGML in modeling urban flooding.




These scenarios were proposed and sponsored by Institut National de l’Information Géographique et Forestière - IGN (France), Ordnance Survey Great Britain (UK), and virtualcitySYSTEMS GmbH (Germany).  The pilot participants that developed the solutions for  Scenario 1 was University of Melbourne (Australia), for Scenario 2 was Technical University of Munich (Germany), and for Scenario 3 was Remote Sensing Solutions, Inc. (U.S.A).




Scenario 1 involved two objectives. The first objective was to demonstrate that 3D data in IFC and CityGML can provide the land development assessment process with better information than that of 2D spatial data. The second objective was to demonstrate how the conformance with urban planning rules can be enhanced and automated through the adoption of WPS.




This OGC® document addresses the first objective of Scenario 1 in which a land development assessment workflow system that uses 3D data was developed. [OGC 16-16-099], which is an output of FCP1, addresses the second objective of Scenario 1.






1.2. Document contributor contact points


All questions regarding this document should be directed to the editor or the contributors:



Table 1. Contacts	Name	Organisation
	Mohsen Kalantari
	The University of Melbourne

	Bart De Lathouwer
	OGC






1.3. Future work


The future work related to this document are specifications for preparing IFC files to use in urban planning and mapping from IFC to CityGML LoD 2 and LoD 3.






1.4. Foreword


Attention is drawn to the possibility that some of the elements of this document may be the subject of patent rights. The Open Geospatial Consortium shall not be held responsible for identifying any or all such patent rights.




Recipients of this document are requested to submit, with their comments, notification of any relevant patent claims or other intellectual property rights of which they may be aware that might be infringed by any implementation of the standard set forth in this document, and to provide supporting documentation.










2. References



The following documents are referenced in this document. For dated references, subsequent amendments to, or revisions of, any of these publications do not apply. For undated references, the latest edition of the normative document referred to applies.




	
OGC: OGC 02-058, OGC® Web Feature Service, 2002


	
OGC: OGC 09-025r1, OGC® OpenGIS Web Feature Service 2.0 Interface Standard (also ISO 19142), 2010


	
OGC: OGC 05-007r7, OGC® Web Processing Service, 2007


	
OGC: OGC 12-09, OGC® OGC City Geography Markup Language (CityGML) Encoding Standard, 2012


	
OGC: OGC 16-098, FCP1 Engineering Report, 2017


	
OGC: OGC 16-099,Future City Pilot 1 - Automating Urban Planning Using Web Processing Service Engineering Report, 2017


	
bSI: buildingSMART, Industry Foundation Classes IFC2x Edition 3, Technical Corrigendum 1, http://www.buildingsmart-tech.org/ifc/IFC2x3/TC1/html/index.htm, 2007











3. Terms and definitions



For the purposes of this report, the definitions specified in Clause 4 of OGC® Web Processing Service [OGC 14-065] shall apply.




3.1. Abbreviated terms


	
AEC - Architecture Engineering Construction


	
bSI - buildingSMART International


	
BIM - Building Information Modeling


	
CityGML - City Geography Markup Language


	
COLLADA - COLLAborative Design Activity


	
ER - Engineering Report


	
FCP1 - Future City Pilot Phase 1


	
GML - Geography Markup Language


	
GUI - Graphical User Interface


	
IFC - Industry Foundation Classes


	
KML - Keyhole Markup Language


	
LoD - Level of Detail


	
OGC - Open Geospatial Consortium


	
O&M - Observations & Measurements


	
PB - Protocol Buffers


	
UI - User Interface


	
WAR - Web application ARchive


	
WFS - Web Feature Service


	
WPS - Web Processing Service


	
XML - Extensible Markup Language













4. Overview



This report outlines the use of IFC and CityGML in the urban planning process. It includes the following sections.




	
The section "Future City Pilot Phase 1” sets the scene and identifies urban planning as one of the key areas where open spatial data infrastructures can be of value. Specific urban planning requirements with a case study are introduced.


	
The section "Conceptual Design" provides requirements analysis of urban planning and identifies three areas of inefficiencies. This section presents the design of a system based on open platforms to address these inefficiencies.


	
The section "FCP 1 - IFC/CityGML in Urban Planning Demonstrator" details the implementation of a development proposal assessment workflow that can handle 3D data such as IFC and CityGML.


	
The section “Conclusions and future work”, summarizes the work and provides considerations for future work.











5. Future City Pilot Phase 1



Digitally enhancing cities is essential for a sustainable, prosperous, healthy, and inclusive future for citizens by using advanced technologies, although the digital enhancement requires diverse and numerous technologies that operate in space and time. The enhancement of cities cannot, therefore, be realized unless open standards are used for communicating spatial and temporal data. 3D CityModels are becoming the ‘Base maps’ for cities. Orthoimagery serves as the base map for 2D maps and provides the basis for location of other layers.  Similarly, 3D urban models will become the spatially correct basis for locating BIM models and other urban features into a colocated view.




Various cities around the world have successfully created 3D digital city models. These models have the potential to be used in several aspects of cities. For instance, current land development assessments can be significantly enhanced by using the 3D models of the proposed development and existing digital city models.  3D models combined with real-time data of building temperature and temperature change and energy and water use can provide information, knowledge, and insight to enhances financial, environmental, and social outcomes for citizens living in cities. 3D models can also be used to better understand the dynamic of flooding in cities and assessment of flood damage on buildings.




Considering the potential of open standards in realizing such scenarios, FCP1 aimed at demonstrating standards-based location-enabled information technology to advance a range of city services, improve governance, and enable innovative citizen and consumer services. The pilot was required to prove the ability of spatial data infrastructures to support indicators of quality of life, civic initiatives, and resilience. Several scenarios were considered in the pilot including urban planning, social services, and urban resilience.




5.1. Urban Planning Requirements


The use of BIM models encoded in IFC will become mandatory for major land development projects. The FCP1’s urban planning requirement, therefore, included the use of BIM in the development approval process. This process included a requirement to automatically validate the proposed development against urban planning rules. In particular, the process was required to use contextual information such as the surrounding city model, cadastre, and road network to facilitate the validation process. Concerning the city models, the process was required to consider mapping IFC to various levels of detail of CityGML including Level of Details (LoD) 2, LoD 3, and LoD 4.  The process was also required to provide facilities for human inspection and verification of proposal such that urban planner can view the building project within the existing 3D model of the city and store in databases.






5.2. Data


The following dataset was provided for urban planning scenario:




	
BIM model (IFC) of the proposed development;


	
Existing CityModel of the area of interest (CityGML profile, according to Ref3DNat recommendations, in LOD2 – or 3 in close future – with textures);


	
Roads and buildings footprints;


	
Cadastre; and


	
Urban Planning Rules.













6. Conceptual Design



6.1. Requirements Analysis


Urban planning systems aim to establish affordable, socially inclusive, environmentally friendly environments for human settlement. Urban planning is an interplay of place, people, and purpose. Planning for where to live, work, and enjoy is therefore inherently a spatial process. The use of geospatial information system in urban planning is now well established. The use of small and large scale geospatial data such as planning zones, green areas, street networks, and property boundaries is an indispensable part of the planning processes for land development.




In urban planning, land development is considered to be a multi-stakeholder process, in which several agencies are involved. The agencies may include privately operated land surveying, land development, or architecture design firms or publicly-funded organizations such as municipalities, road authorities, land registries, or mapping agencies. Each agency plays a unique role in the land development approval process, but the process itself is about preparing development proposals and the application of rules and criteria defined in the regulation, some of which are location-dependent, against the proposals. Where the rules are location-dependent, the agencies use spatial data for assessing land development proposals. Spatial representation of development proposals may be prepared and designed using CAD or GIS software solutions but are often submitted in paper/image formats for assessment.




Some technology inefficiencies are evident in this process. First, even if proposals are submitted as data, the format may not be readily usable by processing agencies (1). Second, the 2D design of even complex high-rise land developments is a norm in representing proposals (2). Third, land development rules are applied in isolation since the responsible agencies usually do not have the infrastructure that enables sharing spatial data (3a) and automating rules (3b).






6.2. System Architecture


An open platform design is presented in this report to help with inefficiency 2 by replacing the workflow system that is based on 2D paper/image/CAD drawings with a workflow that uses 3D data. [OGC 16-099], which is part of FCP1, addresses inefficiencies 1 and 3 in a separate report.




The design enables recording and visualization of 3D data in several formats and the ability to transform data from IFC to CityGML . The system architecture involves four layers: User Interface, Logic, Service, and Data (Figure 1). The layers include 11 components including development approval workflow user interface, several database systems capable of managing various data formats, urban planning rules engine, a data transformation engine, and web services for accessing data and processing.











Figure 1: System Architecture




Of significance to this ER, to address inefficiency 2, some components were designed for demonstration including: 1) a web-based client for rendering IFC files; 2) transforming IFC to CityGML; 3) a web-based client for rendering the resulted CityGML and city model of it surroundings.




The components are described as below.




	
Component 1 is a part of the UI and is a web client that enables creating projects and uploading IFC files.


	
Component 2 is a database system that stores the content of IFC files.


	
Component 3 is a web service to provide access to IFC files of Component 2.


	
Component 4 is another aspect of the UI which is a web client for rendering and inspecting an IFC file and its elements.


	
Component 5 is the IFC to CityGML transformation function.


	
Component 6 is a web client to enable users to call Component 5 and download the resulted CityGML or execute WPS 1.


	
Component 7 (WPS 1) is a WPS based function that calls Component 5 and stores the resulted CityGML in a file server which is Component 8.


	
Component 9 is a database to store the CityGML data of the proposed development and existing city model.


	
Component 10 is the urban planning validation UI that allows executing urban planning rules against the development proposal data.


	
Component 11 is the urban planning rules engine.


	
Component 12  (WPS 2, 3, and 4) includes WPS based functions for specifying inputs and output parameters in executing urban planning rules using Component 11.


	
Component 13 is to access non-CityGML spatial data that are stored in Component 14 which is a spatial database.


	
Component 15 is a 3D data web service.


	
Component 16 is a 3D data web client for rendering the proposed development together with data about the surrounding environment.







Based on the system architecture, two solutions were put forward for implementation. The first solution was to use only the IFC file and examine if the considered urban planning scenarios can be realized (Solution 1). The second solution was to convert the IFC file to its equivalent in CityGML and then test if the urban planning scenarios can be realized (Solution 2).










7. FCP 1 - IFC/CityGML in Urban Planning Demonstrator



In this section of the ER, the implementation of the system is detailed. First, the software components that were utilized are listed, and their utility is introduced. Then, the workflow system based on 3D data is outlined.




7.1. Software components


BIMServer: The Building Information Model server (BIMserver.org) platform enables creating web based applications for BIM based on the open standard IFC. IFC data are interpreted by a smart core and stored as objects in an underlying database. BIMserver is based on plugins in an open framework. The BIMserver software is free and open source (GNU Affero GPL) (BIMserver, 2017). It can support dynamic collaboration processes in urban planning where several players such as land developers, land registration officers, mapping agencies, and urban planners play a role. It has core server features like revisions, authorization, compare, query, model checking, merging, etc.  BIMserver has open interfaces and network protocols (soap, PB, JSON), uses open standards, is built as a plugin framework for easy fine-tuning, has an admin configuration GUI, and developers documentation and SDKs. The core of the software is based on the open standard IFC. Components 1 to 5  of the demonstrator are built on BIMserver and its plug-ins.




52°North Web Processing Service: This component enables the deployment of standardized geo-processing on the web (52°North, 2017). It features a pluggable architecture for processes and data encodings. It is used to implement components 7 and 12 which are about WPS 1, 2, 3 and 4 for automating development assessment proposal. In this project, the WPS version 1.0.0 was used.




GeoServer: It is a software server that allows viewing and editing geospatial data based on OGC standards. In implementing the demonstrator, GeoServer’s Web Feature Service (WFS) capability is used to serve the topographic and cadastral data that was required in WPS based urban planning functions. In this demonstrator, WFS implementation 1.0.0 was used.




3D City Database: It is a free 3D geo database to store, represent, and manage virtual 3D city models on top of a spatial relational database based on CityGML schema (3DCityDB, 2017). In this project, it has been used to store the existing city model of the study area, and the resultant CityGML.




3D City Database Importer/Exporter: It is an application interface for the 3D City Database (3DCityImporterExporter, 2017). This application offers a wide range of configuration options (e.g., based on the schema, feature id, bounding box) to validate and import CityGML files into the 3D City Database. It also allows exporting the content of the database to file format such as KMZ, KML, COLLADA. When exporting, several aspects of the data such as LoD, bounding box, and appearance can be configured. This tool has been extensively used in preparing data for this demonstrator.




3D City Database Web Feature Service: This service allows web-based access to 3D City Database. It is a platform-independent, database-independent service that is provided as a Java WAR and Java libraries that render necessary dependencies for the WFS service (3DCityWFS, 2017). This service was used to access the CityGML data that was required in parameterizing data requirements of WPS 3 and 4.




3D-DB-Web-Map-Client: This is a web client for 3D visualization (3DCityWebClient, 2017). It is based on Cesium Virtual Globe with WebGL as the underlying technology. This component has been customized to visualize the proposed development and surrounding area. It is important to note that the spatial data of interest were converted to KML and KMZ for visualization by 3D-DB-Web-Map-Client.






7.2. Implementation


As described in the conceptual design section, the implementation of the demonstrator considers two solutions. The implementation result of these two solutions are detailed below.




7.2.1. Solution 1


Solution 1 aimed at examining if an IFC file alone can be used in the land development approval process. A 3D data processing workflow web-client (Figure 2) was designed to allow the actors to create an assessment project and then upload an IFC file to the project.











Figure 2: 3D data processing workflow web-client




As soon as an IFC file is uploaded, a schema check is undertaken to make sure a structurally valid IFC file is uploaded. After checking the IFC file, it is recorded in the database and ready for visual inspection and query (Figure 3).











Figure 3: an uploaded IFC file in the web client.




The web-based client provides an intuitive visualization tool by which IFC files can be inspected element by element.  Both land developer/architect and urban planner actors can utilize this tool to see if the elements are appropriately coded. The web-client also provides a means to use the BIMServer query language and can potentially be used for validation against urban planning.




The IFC file was not provided with the geographic coordinates embedded in it. The geographical coordinates in an IFC file are provided via the ifcSite element. In a geo-referenced file, the ifcSite element should at least contain latitude and longitude of a reference point in the building or its surrounding. The provided IFC file was missing the ifcSite element.




The visual inspection of the provided IFC file revealed several inconsistencies in grouping and naming elements. the elements used in the IFC file were aggregated in an inconsistent manner.




For instance, there were many elements that were organized as the ifcBuildinfElementProxy element. The IfcBuildingElementProxy is a proxy definition that provides the same functionality as an IfcBuildingElement, but without having a defined meaning of the special type of building element it represents. As such, there were many elements with unclear definitions. As illustrated in Figure 4, some wall and opening elements have been provided undefined.











Figure 4: Examples of inconsistencies in IFC.




The file also did not contain geometries that are described as roof. Most of the horizontal spaces were coded as ifcSlab (Figure 5). Similarly, many features were coded as ifcWall, which architecturally were not compatible with the definition of a wall (Figure 6).











Figure 5: Roof elements are modeled but incorrectly coded.











Figure 6: Non-wall elements mapped as walls.




In addition to the inconsistencies, some differences in modeling approaches were also identified. For example, in the IFC file, the garage door (looks like a rolling door) and its horizontal frame, together were modeled as a door element. While conceptually it is a valid approach, such a modeling method makes it complicated to disaggregate the geometry of the garage door into finer elements for mapping to other models such as CityGML (Figure 7).











Figure 7: Garage door and its horizontal frame on the right side of the model.




The query facility of BIMserver was also considered for checking urban planning rules. The query language could have been potentially used for assessment of a development proposal. The BIMServer query service was not found useful. Although it could execute the command without any error message, the result of the query was null. The challenges included ambiguity in semantics and geometry of the IFC elements. For example, to calculate the building footprint area, all the ground floor slabs needed to be projected to a plane.




In implementing Solution 1, there were issues identified that prevented the solution from fully meeting the requirements. Some of the issues were related to the way the IFC files (BIM) were designed and prepared, and some were attributed to the utility of BIMserver’s query language.




The building location validation can be done if boundaries of the land containing the building are provided in the IFC file. The height validation can be undertaken if the datum is provided in the ifcSite element. However, urban planning requirements cannot be fully met using only IFC files. Requirements such as shadow analysis and distance from the street cannot be fulfilled.




Despite these issues, several aspects of Solution 1 were found promising. Theses include the ability to handle IFC files in a web-based client, which was consistent with the requirements.  Schema validation and visual inspection were also assessed as useful and intuitive.




Based on the outcomes of Solution 1, it was concluded to maintain the 3D data processing workflow web client and build Solution 2 on Solution 1.






7.2.2. Solution 2


There were a number issues related to data preparation in Solution 1 which demanded some data pre-processing. The pre-processing involved two aspects: georeferencing and modifying the IfcSlab elements of the IFC file. For georeferencing, the architectural plan of the building was used by which the positioning of the building on the parcel and orientation to north was provided. Specifically, geographic location of the North West corner of the building together with the angle on eastern facade of the building was defined. The Specify Coordinate function of Revit was used for this aspect of pre-processing. Also, several elements of the IFC model were modified and regrouped to remove the inconsistencies that were discussed earlier. The modification was manually undertaken in Revit; considerable resources of the project was dedicated to this aspect of the IFC file making its elements coherent.




After preprocessing the IFC file, a transformation from the IFC file into CityGML LoD2 was implemented using FME. This transformation only used the geometry, relations and properties of only two features from the IFC file: the IfcSlab and IfcSpace (Figure 8). As illustrated in Figure 9, and the transformation created a valid CityGML LoD 2.











Figure 8: FME workbench, IFC to CityGML LoD2











Figure 9: Visualising CityGML LoD2




The LoD2 transformtaion was then modified to replace  IfcSpace with IfcWalls. This modification potentially could have helped with realizing CityGML in LoD3. However, some challenges were identified. IfcWalls as solid objects were transformed to several horizontal and vertical surfaces (Figure 10). To achieve a CityGML LoD3, all horizontal surfaces and inner surfaces as result of transforming walls should be removed.











Figure 10: CityGML through the use of ifcWall, all horizontal surfaces and inner surfaces should be removed.




If there are no attributes or traits that indicate whether a surface is a wall, roof or ground, it is required to use linear algebra methods to calculate the directions of the norm vectors of the surfaces. This can get quite complicated, especially for the building model of this project. The basic idea is to calculate the norm vectors and verify that they will not touch another wall when extended. This will identify the outer shell for any building with a convex footprint. It will also help to remove horizontal surfaces resulted from IfcWall transformation.




Solution 2 was designed such that IFC can be transformed to CityGML LoD4 as the final data format for visualization and validation against the urban planning requirement. As such a transformation module was made available in the 3D processing workflow in two forms; as a WPS as well as a download function (Figure 4). [OGC 16-16-099], which is part of FCP1, discusses the details of the WPS. The transformation modules uses a plug-in of BIMserver that converts IFC to CityGML 2.0











Figure 11: The conversion facility of the system




The plug-in documentation does not provide the mapping details between IFC and CityGML. However, following the transformation code, the logic of the BIMserver transformation plug-in follows the steps below.




	
Create CityGML objects and assign the information from corresponding IFC model elements.


	
Create the Building feature based on information from IfcBuilding element)).


	
Extract the geometry of the room from IfcSpace element.


	
Obtain the geometry of the floor from IfcSlab element.


	
Extract the geometry of the roof from IfcRoof element.


	
Create the exterior MultiSurface boundary geometry of the building from the IfcWall element and test for openings not to include windows, doors, and slabs.


	
Test if the openings are Windows or Doors type and not to include them in the boundarySurface and create the window and door CityGML objects.


	
Check for the existence of Roof surface and not incorporate them in boundarySurface and create the roofSurface object.


	
Add floorSurface from IfcSlab to the boundary of the project.


	
Create Door object from IfcDoor.


	
Create FloorSurface from IfcSlab.


	
Create RoofSurface as a MultiSurface BoundarySurface.


	
Create Window from IfcWindow and adds attributes.







This transformation was undertaken at the LoD4 and a valid CityGML file was created. One limitation that was identified in the CityGML plug-in of the BIMserver created errors in the transformation of the coordinates in the IFC file to the CityGML file. As such the IFC file was directly converted to the KML format for visulization in the 3D web client. Figure 5 illustrates the building model as the result of the conversion. The files is visualized in a 3D web client.











Figure 12: CityGML LoD4 representation of IFC




Solution 2 was carried on by implementing urban planning validation rules and providing them as WPS based functions in the 3D data processing workflow (Figure 5).











Figure 13: A snapshot of a validation WPS




The proposed building model then was validated against the rules.  Spatial data such as CityGML of the proposed model, the footprint of proposed model,  land parcels, and CityGML of the surrounding area were utilized to assist the validity of the development. The effectiveness of rule checking can be found in [OGC 16-099].




Solution 2 was finalized by implementing a viewing component. The display component can represent kml/kmz format of spatial datasets. In this step, the geo-referenced IFC file of the building was converted to kml and together with the kmz format of the surrounding CityGML, parcel, footprint, and road data was visualized as shown in Figure 7.











Figure 14: A snapshot of 3D visualization component












8. Conclusions and future work



8.1. Conclusions


Digital enhancement of cities requires technologies that can record and represent temporal and spatial dynamics of their natural, human, and physical systems.




Collecting, recording and maintaining higher dimensional spatial data such as 3D data of the cities are vital with the growing dominance of multi-storey buildings.




The availability of several open spatial data infrastructure tools for dealing with 3D data has become evident as a result of developing this demonstrator. The open infrastructure tools that are utilized in this project are freely available, well supported, and more importantly, developed on open standards such as IFC, CityGML, WPS, and WFS. Such advancement in the open platforms development paints a promising future for the fast adoption of open standards in cities that use numerous and diverse technology for digital enhancement.




This report documents the potential applications of IFC and CityGML in urban planning using a case study. While the case study successfully used the CityGML file format in meeting the requirement of urban planning, it was also confirmed that IFC, after generalization, can be used in geographically constrained scenarios such as urban planning. It was demonstrated that IFC could be a source for CityGML. Recommendations for IFC to be an effective source for CityGML are as follows.




	
The full potential of 3D data models such as IFC cannot be realized unless thoughts are given to the utility of building models not only in design, engineering, and construction but also in other facets of built environment such as urban planning, emergency management, cadastres, etc.  The architecture design processes often do not require georeferencing and it is satisfactory only to have a relative positioning of the proposed building in the land parcel that contains it. In the context of urban planning, the geographical coordinate system of IFC file should be set in advance. While it is possible to georeference an IFC file, the process will require further ground surveys and the transformation of the local coordinate system into a recognized geographic coordinate system. It is an error-prone process and negatively impacts the data quality.


	
Building Information modeling process in architectural design requires building details that are not necessary for urban planning. For example, to examine the location of the proposed building or ratio of building footprint to its land parcel, the surface that represents the building footprint is all that is needed in urban planning.  In designing the architectural model of a building, a single planar footprint may or may not be present. In the provided file, there were several instances of horizontal 3D objects as slabs that collectively represent the building footprint. The project also identified several inconsistencies in coding IFC elements that made transformation to CityGML complicated. Therefore, for adopting IFC in urban planning a clear set of specification needs to be set for the preparation of IFC files.









8.2. Future work


This project demonstrated that the international open 3D standards such as CityGML and IFC, to a large extent, are interoperable such that the data from one format can be transformed without loss of much details to another format.




However, several challenges were identified that could constitute the future work for the Future City Pilot project. The future work can consider the following interoperability considerations.




	
Evaluating the IFC to CityGML LoD2 mapping presented in this ER. This project used the geometry, relations and properties of only two features from the IFC file: the IfcSlab and IfcSpace. This mapping can be implemented and tested in a BIMserver plug-in.


	
Mapping IFC to CityGML LoD3. The LoD2 transformation can be modified to replace IfcSpace with IfcWalls. This modification can potentially help with realizing CityGML in LoD3.


	
Computational methods to remove indoor surfaces for creating CityGML LoD3. If indoor surfaces carry no semantics, it is required to use linear algebra methods to calculate the directions of the norm vectors of the surfaces and distinguish interior walls from exterior walls and roofs from walls.


	
Improving the coordinate transformation routine of BIMserver. The CityGML plug-in of the BIMserver is not functional regarding coordinate transformation and it is recommended to improve this aspect of the plug-in.







This level of interoperability is significant as a design in the AEC industry that is based on IFC can provide valuable data for downstream disciplines of built environments such as city administration, emergency management, and facilities management. While this demonstrator was undertaken in the context of land development proposal assessment, the potential of 3D open models such as IFC and CityGML can be further demonstrated in other application domains such as urban heat island analysis, building management systems, evacuation of high-rise buildings, and search and rescue requirements of public safety agencies.




Some of these application domains need indoor (e.g. building management systems) or outdoor (e.g. urban heat island) only representation of built environments and the current level of interoperability between IFC and CityGML mostly can address these applications' requirements.




However, some of the other domains' requirements (e.g., emergency response) go beyond the interoperability between the data models. In these domains, it is the seamless representation of indoors and outdoors of built environment that is critical, not simply the ability to transform data from one model to another.










Appendix A: Revision History


Table 2. Revision History	Date	Editor	Release	Primary clauses modified	Descriptions
	August 15, 2016
	M. Kalantari
	0.1
	all
	Table of content

	February 3, 2017
	M. Kalantari
	0.2
	all
	Initial version

	February 11, 2017
	M. Kalantari
	0.3
	all
	Final draft

	February 28, 2017
	M. Kalantari
	0.4
	all
	Considering feedback by IGN and Project Manager

	March 9, 2017
	M. Kalantari
	0.5
	all
	Considering second round of feedback by IGN

	March 21, 2017
	M. Kalantari
	1.0
	all
	Considering  feedback by OGC








Appendix B: Bibliography



[1] 3DCityDB, : http://www.3dcitydb.org/3dcitydb/d3ddatabase/ (2017)




[2] 3DCityImporterExporter, : http://www.3dcitydb.org/3dcitydb/d3dimpexp/ (2017).




[3] 3DCityWFS, : http://www.3dcitydb.org/3dcitydb/dwfs/ (2017).




[4] 3DCityWebClient, : http://www.3dcitydb.org/3dcitydb/d3dwebclient/ (2017).




[5] 52°North, : http://52north.org/communities/geoprocessing/wps/index.html (2017).




[6] BIMServer,: http://bimserver.org/ (2017).




[7] GeoServer,: http://geoserver.org/ (2017).











Last updated 2017-10-03 18:52:12 EDT




