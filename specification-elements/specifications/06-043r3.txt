
06-043r4 WCS Add Transaction Operation Folder/06-043r4 Add Transaction operation.doc
06-043r4



Open Geospatial Consortium
OGC Doc 06-043r4

		CR-Form-v3



		CHANGE REQUEST



		



		(


		WCS

		CR

		?

		(

rev

		-

		(

Current version:

		1.1.0

		(




		



		For HELP on using this form, see bottom of this page or look at the pop-up text over the (
 symbols.



		



		Proposed change affects:
(


		AS 

		

		Imp Spec

		X

		Recom. Paper 

		

		Other

		



		



		Title:
(


		WCS change request: Add Transaction operation



		

		



		Source:
(


		Arliss Whiteside



		

		



		Work item code:
(


		

		

		Date: (


		2006-10-09



		

		

		

		

		



		Category:
(


		B

		

		



		

		Use one of the following categories:
F  (Critical correction)
A  (corresponds to a correction in an earlier release)
B  (Addition of feature), 
C  (Functional modification of feature)
D  (Editorial modification)

		



		

		



		Reason for change:
(


		Some applications of the Web Coverage Service (WCS) interface specification require a publicly specified, web accessible way to add or modify coverages in the set of coverages served by a WCS server



		

		



		Summary of change:
(


		Specify an additional optional “Transaction” operation in the Web Coverage Service (WCS) Implementation Specification, to allow adding, modifying, or deleting coverages in the set of coverages served by a server



		

		



		Consequences if 
(

not approved:

		Continued use of proprietary and/or non-web-accessible interfaces to add, modify and delete coverages in the set of coverages served by a WCS server



		

		



		Clauses affected:
(


		11 (new), 6, D.11 (new)



		

		



		Other specs
(


		

		 Other core specifications
(


		



		Affected:

		

		 Abstract specifications

		



		

		

		 Recommendation Papers

		



		

		



		Other comments:
(


		This change request is to the latest draft for WCS 1.1.





Add following clause to Web Coverage Service (WCS) specification:

11 Transaction operation (optional)


11.1 Introduction

The Transaction operation allows WCS clients to request that a WCS server import one or more new coverages into that server, update existing coverages, and/or delete existing coverages. This operation references (externally and internally) the data to be inserted or updated in that WCS server, and it is the job of the server to resolve these references, fetch that data, and store this data for future access. This operation is optional implementation by WCS servers.

NOTE 
This Transaction operation is similar to the Transaction operation in the CSW protocol binding, specified in Subclause 10.11 of the Catalogue Services Specification version 2.0 [OGC 04-021r3]. This WCS operation makes use of the Coverages data structure that is specified in WCS 1.1, to support adding or modifying multiple coverages and to include metadata associated with each coverage.

The Transaction operation has two modes of operation, controlled by a parameter in the operation request. The first mode of operation is synchronous, in which the server receives a Transaction request from the client, executes it immediately, and sends the results to the client while the client waits. The second mode of operation is asynchronous, in which the server receives a Transaction request from the client, and sends the client an immediate acknowledgement that the request has been successfully received. The server can then execute the Transaction operation when it has time, taking as much time as required, and then send the execution results to a URI specified in the original Transaction request. This latter mode of operation is included to support Transaction operation execution that could run longer than most HTTP timeouts allow.


11.2 Transaction operation request

11.2.1 Transaction request contents

A request to perform the Transaction operation shall include the parameters and data structure shown graphically in the UML diagram in Figure 1, and specified in Table 1.

RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


WCSRequestBase {Abstract}


+ service : CharacterString = "WCS" {frozen}


(from WCS Service)


<<DataType>>


Coverages


(from Coverages)


Transaction


+ request : CharacterString = "Transaction" {frozen}


+ responseHandler [0..1] : URL


1


1


+inputCoverages


1


1




Figure 1 — Transaction operation request UML class diagram


NOTE 1
To reduce the need for readers to refer to other documents, the first three parameters listed below are largely copied from Table 20 in Subclause 9.2.1 of [OGC 05-008].

Table 1 — Parameters in Transaction operation request

		Names a

		Definition

		Data type and value

		Multiplicity and use



		service


service

		Service type identifier

		Character String type, not empty


Value is OWS type abbreviation, namely “WCS” 

		One (mandatory)



		request

request

		Operation name

		Character String type, not empty


Value is operation name, namely “Transaction”

		One (mandatory)



		version

version

		Specification version for operation

		Character String type, not empty


Value is specified by each Implementation Specification and Schemas version

		One (mandatory)



		input‌Coverages

Input‌Coverages

		List of one or more coverages to be added, modified, or deleted

		Coverages data structure, see  Subclause I.3

 b

		One (mandatory)



		response‌Handler


Response‌Handler

		Address to respond to when server has completed processing this operation request

		URL

		Zero or one (optional)


Include to process operation request asynchronously c



		a
Although some values listed in the “Names” column appear to contain spaces, they shall not contain spaces. See Table 1 for UML and XML naming conventions.

b
Each coverage with its metadata shall be referenced by one Coverage within this Coverages data structure. One of these metadata items shall be the CoverageDescription specified in Subclause 9.3.1, containing all the description information needed for that coverage which is not specific to a WCS server. Similarly, one or more of those metadata items shall be the CovarageSummary specified in Subclause 8.3.4.2, containing all the summary information needed for that coverage which is not specific to a WCS server. This metadata can be referenced within the Transaction request message or remotely. The coverage data will often be referenced remotely, but can be included in the Transaction operation request message.

c
When this parameter is omitted in the operation request, this operation shall be executed synchronously and immediately by the server, with the operation response returned to the client following operation execution. When this parameter is included, this operation shall be processed asynchronously by the server. In that case, the server shall return an operation acknowledgement to the client immediately following operation acceptance. When operation execution is later completed, the (normal or exception) operation response shall be sent by the server to the response handler address provided by this parameter value.





The InputCoverages in this Transaction request shall include one Coverage (reference group) for each coverage to be input, modified, or deleted by this operation. In each Coverage data structure, the Title shall specify whether this Coverage is being inserted, modified, or deleted, as specified in Table 2. When needed, the Identifier in each Coverage data structure shall identify the existing coverage to be modified or deleted.

Table 2 — Transaction operation actions

		Title value

		Identifier value

		Transaction action

		



		Add

		(none)

		Add this coverage to set of coverages served

		



		UpdateMetadata

		Identifier of coverage whose metadata is to be replaced

		Replace the metadata for this coverage being served

		



		Update

		Identifier of coverage to be updated

		Replace the data and metadata for this coverage being served

		



		Delete

		Identifier of coverage to be deleted

		Delete the data and metadata for this coverage being served

		





NOTE 2
This Transaction operation does not now include the ability to update or delete only part of the point values in a grid coverage.  If considered needed, such abilities might be added in the future

11.2.2 Implementation requirements


The “Multiplicity and use” column in Table 1 specifies the optionality of each listed parameter and data structure in the Transaction operation request. All the “mandatory” parameters and data structures shall be implemented by all WCS clients that use this operation, using a specified value(s). Similarly, all the “mandatory” parameters and data structures shall be implemented by all WCS servers that implement this operation, checking that each request parameter or data structure is received with an allowed value(s).

The “optional” responseHandler parameter, in the Transaction operation request, shall be implemented by all WCS servers that implement this Transaction operation. The responseHandler parameter shall be implemented by all WCS clients that can execute this operation asynchronously.

11.2.3 Transaction request XML encoding

All WCS servers that implement the Transaction operation shall implement HTTP POST transfer of the Transaction operation request, using XML encoding. The following schema fragment specifies the contents and structure of a Transaction operation request encoded in XML:


<element name="Transaction" type="wcs:TransactionType">



<annotation>




<documentation>Request to a WCS to perform the Transaction operation. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. </documentation>



</annotation>


</element>


<!-- =========================================================== -->


<complexType name="TransactionType">



<complexContent>




<extension base="wcs:RequestBaseType">





<sequence>






<element name="InputCoverages" type="owcs:CoveragesType">







<annotation>








<documentation>List of one or more coverages to be added, modified, or deleted. Each coverage with its metadata shall be referenced by one Coverage reference group within this CoveragesType. Each new or modified coverage provided to a WCS server shall include all the metadata needed to populate one CoverageDescription object, as specified in Subclause 9.3 with the exception of the metadata that is specific to a specific server. Similarly, each new or modified coverage shall also include all the metadata needed to populate one or more CoverageSummary objects, as specified in Subclause 8.3.3 with the exception of the metadata that is specific to a specific server. In addition, each new unrectified but georeferenced coverage (image) shall include the georeferencing coordinate Transformation(s). These coverages are normally referenced remotely, but can be included in the Transaction request message. </documentation>







</annotation>






</element>






<element name="ResponseHandler" type="anyURI" minOccurs="0">







<annotation>








<documentation>Location to respond to when server has completed processing this operation request. When this parameter is omitted from the Transaction operation request, this operation shall be executed synchronously and immediately by the server, with the operation response returned to the client following operation execution. When this parameter is included, this operation shall be executed asynchronously by the server. In that case, the server shall return an operation acknowledgement to the client immediately following operation acceptance. When operation execution is later completed, the (normal or exception) operation response shall be sent by the server to the response handler referenced by this parameter value. </documentation>







</annotation>






</element>





</sequence>




</extension>



</complexContent>


</complexType>

EXAMPLE 
An example Transaction operation request XML encoded for HTTP POST is:


<?xml version="1.0" encoding="UTF-8"?>

<Transaction xmlns="http://www.opengis.net/wcs/1.1" 



xmlns:xlink="http://www.w3.org/1999/xlink" 



xmlns:owcs="http://www.opengis.net/wcs/1.1/ows" 



xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 



xmlns:schemaLocation="http://www.opengis.net/wcs/1.1 ../wcsTransaction.xsd http://www.opengis.net/wcs/1.1/ows ../owsCoverages.xsd" 



service="WCS" version="1.1.0">


<InputCoverages>



<owcs:Coverage>




<owcs:Reference xlink:href="http://foo.bar.com/Images/abcd1234Pixels" 




:role="urn:ogc:def:role:WCS:1.1:Pixels"/>




<owcs:Reference xlink:href="http://foo.bar.com/Images/abcd1234Metadata2" :role="urn:ogc:def:role:WCS:1.1:CoverageDescription"/>




<owcs:Reference xlink:href="http://foo.bar.com/Images/abcd1234Metadata2" :role="urn:ogc:def:role:WCS:1.1:GeoreferencingTransformation"/>



</owcs:Coverage>


</InputCoverages>

</Transaction>

11.2.4 Transaction request SOAP encoding


WCS servers that implement the Transaction operation may implement SOAP version 1.2 transfer of the Transaction operation request as specified in Annex F, using the XML encoding specified above.

11.2.5 Coverage metadata

Each new and modified coverage provided to a WCS server shall include all the metadata needed to populate one CoverageDescription object, as specified in Subclause 9.3 with the exception of the metadata that is specific to a specific server. Similarly, each new or modified coverage shall also include all the metadata needed to populate zero or more CoverageSummary objects, as specified in Subclause 8.3.3 with the exception of the metadata that is specific to a specific server.

NOTE 
The number of CoverageSummary objects provided will depend on how the CoverageSummary object hierarchy is being used for or by each coverage.

In addition, each new or modified coverage (image) that is unrectified but georeferenced should include the georeferencing coordinate Transformation(s). All this coverage metadata shall be encoded in XML as specified in this document or in GML 3.1.1.


The CoverageDescription and CoverageSummary metadata omitted as being specific to a specific server should be only the SupportedCRS and SupportedFormat values other than the CRS and format used by the coverage being input or updated. In all cases, the Identifier shall be included in the CoverageDescription, and when needed in a CoverageSummary. For a coverage that is input, this Identifier may be changed by the server, if it is not in the supported format or conflicts with an existing Identifier.

In each CoverageSummary, any subsidiary CoverageSummaries shall be correctly referenced. A set of CoverageSummaries shall use inheritance of parts as desired; the server shall not have to modify any possibly inherited parts of the input set of CoverageSummaries.

In each CoverageDescription, the InterpolationMethods object should be included, to indicate the desired default method or that no interpolation is allowed. If an interpolation method is listed that is not supported by this server (for this coverage), the server may change the provided InterpolationMethods object.

11.2.6 Use of OtherSource parameters


11.2.7 The preceding discussion largely assumes that all coverages have at least one CoverageSummary, instead of using only OtherSource reference(s) to catalogue(s) of coverages. When coverage catalogue(s) are being used, there are at least two alternative methods for a catalogue to get new and modified coverage metadata.

11.2.8 One method is for the client(s) that execute WCS Transaction operations to also execute the corresponding Catalogue Transaction operations. In this case, CoverageSummaries may be omitted in WCS Transaction requests. The metadata sent to the WCS for each new or modified coverage shall also include OtherSource reference(s) to the appropriate catalogue(s). The server shall then add these OtherSource(s) to the existing list, if it is not already in that list.

11.2.9 Another method is for coverage catalogue(s) to obtain new and modified coverage metadata from WCS servers. Again, CoverageSummaries may be omitted in WCS Transaction requests. In this case, the CoverageDescriptions shall include all the coverage metadata that might be needed by a Catalogue. Just how a Catalogue knows when and which coverages have been added, updated, or deleted is not specified here (but may be specified in an Application Profile).

11.3 Transaction operation response

11.3.1 Introduction


The Transaction operation shall be executed in one of two ways, depending on the presence or absence of the ResponseHandler parameter in the operation request. If the ResponseHandler parameter is not included, then the WCS server shall execute the Transaction operation immediately and then respond to the waiting client with a Coverages message. When an WCS server encounters an error while immediately performing a Transaction operation, it shall return an exception report message.

If the ResponseHandler parameter is included in the Transaction operation request, then the WCS server should verify the request syntax and immediately respond to the client with an Acknowledgment message. When a WCS server encounters an error while immediately checking a Transaction operation request, it shall immediately return an exception report message. Later, after the server has executed the Transaction operation, it should generate a Coveragess message and send it to the URI specified by the ResponseHandler parameter, using the protocol encoded therein. Common protocols are ftp for sending the response to a ftp server and mailto which may be used to send the response to an email address. When a WCS server encounters an error after sending an Acknowledgment message, it shall return an exception report message to the ResponseHandler.

11.3.2 Acknowledgement message


When the Transaction operation is performed asynchronously, the immediate response to a valid operation request shall be an Acknowledgement message that shall use.the data structure shown in the UML diagram in Figure 2. The attributes and associations of the new class shall include the parameters and data structures listed and defined in Table 3.

Transaction


Acknowlegement


+ timeStamp : DateTime


0..1


1


+operationRequest


0..1


1




Figure 2 — Acknowledgement UML diagram


Table 3 — Contents of Acknowledgement data structure

		Names

		Definition

		Data type and values

		Multiplicity and use



		timeStamp

TimeStamp

		Data and time this Acknowledgement message generated

		DateTime type

		One (mandatory)



		operation‌Request


Operation‌Request

		Copy of Transaction operation request being acknowledged

		Transaction request data structure, see Figure 1 and Table 1

		Zero or one (optional)


Include when expected to be useful to clients





11.3.3 Acknowledgement message XML encoding


WCS servers that implement the Transaction operation shall implement XML encoded transfer of the Transaction operation Acknowledgement response. An Acknowledgement message shall be encoded in XML as specified by the following schema fragment:


<element name="Acknowledgement" type="wcs:AcknowledgementType">



<annotation>




<documentation>XML encoded acknowledgement of an operation request. </documentation>



</annotation>


</element>


<!-- =========================================================== -->


<complexType name="AcknowledgementType">



<sequence>




<element name="TimeStamp" type="dateTime">





<annotation>






<documentation>Data and time this Acknowledgement message was generated. </documentation>





</annotation>




</element>




<element name="OperationRequest" type="wcs:TransactionType" minOccurs="0">





<annotation>






<documentation>Copy of Transaction operation request being acknowledged. This copy should be included when expected to be useful to clients. </documentation>





</annotation>




</element>



</sequence>


</complexType>

11.3.4 Acknowledgement message SOAP encoding


WCS servers that implement SOAP version 1.2 transfer of Transaction operation requests shall also implement SOAP transfer of the corresponding Transaction operation Acknowledgement messages. These operation responses shall be encoded as specified in Annex F, using the XML encoding referenced above.

11.3.5 Transaction response contents

The normal response to a valid Transaction operation request shall include the CoverageDescription for each newly imported or modified coverage, encoded in XML as specified for the DescribeCoverage operation response in Subclause 9.3. This response shall also include the new and modified CoverageSummaries, encoded in XML as specified for the Contents section of the Capabilities document in Subclause 8.3.3.

11.3.6 Transaction response XML encoding

The normal response to a valid Transaction operation request shall be XML encoded as a Coverages data structure, as specified in Subclause I.4. The contents referenced by that message shall be encoded in XML as specified in Subsections 9.3.3 and 8.3.5.

EXAMPLE 
An example XML encoded Transaction operation response XML encoded is:


TBD

11.3.7 Transaction response SOAP encoding

WCS servers that implement SOAP version 1.2 transfer of Transaction operation requests shall also implement SOAP transfer of the corresponding Transaction operation responses. These operation responses shall be encoded as specified in Annex F, using the XML encoding referenced above.

11.3.8 Transaction operation exceptions

When a WCS server encounters an error while performing a Transaction operation, it shall return an exception report message as specified in Subclause 7.4 of [OGC 05-008]. The allowed standard exception codes shall include those listed in Table 4. For each listed exceptionCode, the contents of the “locator” parameter value shall be as specified in the right column of Table 4.


NOTE 
To reduce the need for readers to refer to other documents, the first four values listed below are copied from Table 20 in Subclause 8.3 of [OGC 05-008].


Table 4 — Exception codes for Transaction operation

		exceptionCode value

		Meaning of code

		“locator” value



		OperationNotSupported 

		Request is for an operation that is not supported by this server

		Name of operation not supported



		MissingParameterValue

		Operation request does not include a parameter value, and this server did not declare a default value for that parameter

		Name of missing parameter



		InvalidParameterValue

		Operation request contains an invalid parameter value

		Name of parameter with invalid value



		NoApplicableCode

		No other exceptionCode specified by this service and server applies to this exception

		None, omit “locator” parameter



		InvalidURI

		One or more of the URI values of an xlink:href parameter was not a valid URL from which data could be accessed by this server a

		First invalid xlink:href value



		a
For this Transaction operation, these xlink:href parameters are Reference XML elements within the InputCoverages element in the Transaction operation request.





11.4 Transaction operation metadata


When this Transaction operation is implemented by a WCS server, the metadata for that operation shall include the three Constraints specified in Table 5, in the Operation data structure in the OperationsMetadata section of the Capabilities (service metadata) document.

Table 5 — Constraints on Transaction operation

		Constraint name

		Constraint meaning

		Data type

		AllowedValues



		InputFormat

		Identifier of accepted format of coverage data inputs to this server

		MIME type, see Subclause 10.5 of [OGC 05-008]

		Unordered list of all format identifiers accepted



		InputCRS

		Reference to accepted Coordinate Reference System (CRS) for coverage data inputs to this server

		URI




		Unordered list of all CRSs accepted



		Action

		Accepted actions (in Title parameter) by Transaction operation of this server

		CodeList, see Title column in Table 3

		Unordered list of all actions implemented





Add Subclause D.11 to Web Coverage Service (WCS) specification as follows:

D.11
WCS Transaction package


The WCS Transaction package is shown in the class diagram in Figure D.12. This diagram also shows several used classes from other packages. The two classes introduced by this package are further defined by Table 1 and Table 3 in this document.

RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


WCSRequestBase {Abstract}


+ service : CharacterString = "WCS" {frozen}


(from WCS Service)


<<DataType>>


Coverages


(from Coverages)


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


WebCoverageServer


+ describeCoverage(request : DescribeCoverage) : CoverageDescriptions


+ getCoverage(request : GetCoverage) : OperationResponse


+ transaction(request : Transaction) : Coverages


(from WCS Service)


Acknowlegement


+ timeStamp : DateTime


Transaction


+ request : CharacterString = "Transaction" {frozen}


+ responseHandler [0..1] : URL


11


+inputCoverages


11


0..1


1


+operationRequest


0..1


1




Figure D.12 — WCS Transaction package class diagram


Edit Clause 6 of Web Coverage Service (WCS) specification as follows:

6
WCS overview


The specified Web Coverage Service (WCS) interface supports electronic retrieval of geospatial data as "coverages", that is, digital geospatial information representing space-varying phenomena. A WCS provides access to potentially detailed and rich sets of geospatial information, in forms that are useful for client-side rendering and input into scientific models and other clients.


The WCS interface specifies four operations that may be requested by a WCS client and performed by a WCS server:


a) GetCapabilities (required implementation by servers) – This operation allows a client to request the service metadata (or Capabilities) document. This XML document describes the abilities of the specific server implementation, usually including brief descriptions of the coverages available on the server. This operation also supports negotiation of the specification version being used for client-server interactions. Clients would generally request the GetCapabilities operation and cache its result for use throughout a session, or reuse it for multiple sessions. If the GetCapabilities operation does not return descriptions of its available coverages, that information must be available from a separate source, such as an image catalog.


b) DescribeCoverage (required implementation by servers) – This operation allows a client to request full descriptions of one or more coverages served by a particular WCS server. The server responds with an XML document that fully describes the identified coverages.


c) GetCoverage (required implementation by servers) – This operation allows a client to request a coverage comprised of selected values or properties at a selected set of geographic locations. The server extracts the response data from the selected coverage, and encodes it in a well-known coverage format. The GetCoverage operation is normally run after GetCapabilities and DescribeCoverage operation responses have shown what requests are allowed and what data are available.


d) Transaction (optional implementation by servers) – This operation allows a client to request that a WCS server input new coverage(s) into that server, update existing coverages, and/or delete existing coverages. This operation references (externally and internally) the coverages to be inserted, updated, or deleted in that WCS server, and it is the job of the server to resolve the reference(s), fetch that data, and store this data for future access.

Many of these interface aspects that are common with other OGC Web Services (OWSs) are specified in the OGC Web Services Common Specification [OGC 05-008]. These common aspects are normatively referenced herein, instead of being repeated in this specification.


Figure 3 is a simple UML diagram summarizing the WCS interface. This class diagram shows that the WebCoverageServer interface class inherits the getCapabilities operation from the OGCWebService interface class, and adds the getCoverage and describeCoverage operations. (This capitalization of names uses the OGC/ISO profile of UML.) A more complete UML model of the WCS interface is provided in Annex D (informative).


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabilites)


<<Interface>>


Each server instance normally instantiates only one object of this 


class, and this object always exists while server is available.


WebCoverageServer


+ describeCoverage(request : DescribeCoverage) : CoverageDescriptions


+ getCoverage(request : GetCoverage) : OperationResponse


+ transaction(request : Transaction) : Coverages


(from WCS Service)




Figure 3 — WCS interface UML diagram


NOTE 
In this UML diagram, the request and response for each operation is shown as a single parameter that is a data structure containing multiple lower-level parameters, which are discussed in subsequent clauses. The UML classes modeling these data structures are included in the complete UML model in Annex D.


Each of the four operations is described in more detail in subsequent clauses.


�PAGE \# "'Page: '#'�'"  �� Enter the AS or Implementation Specification Name and Number in this box. For example, WMS 1.1.1 or GML 3.0. Do not prefix the number with anything, i.e. do not use "OGC", "GSM" or "OGC" etc.


�PAGE \# "'Page: '#'�'"  �� Enter the CR number here. This number is allocated by the OGC support team.


�PAGE \# "'Page: '#'�'"  �� Enter the revision number of the CR here. If it is the first version, use a "-".


�PAGE \# "'Page: '#'�'"  �� Enter the version of the specification here. This number is the version of the specification to which the CR will be applied if it is approved. Make sure that the more recent version of the specification (of the relevant release) is used when creating the CR. If unsure what the latest version is, go to http://www.opengeospatial.org.


�PAGE \# "'Page: '#'�'"  �� For help on how to fill out a field, place the mouse pointer over the special symbol closest to the field in question.


�PAGE \# "'Page: '#'�'"  �� Mark one or more of the boxes with an X. AS = Abstract Specification, IS = Implementation Specification, Recom. Paper = Recommendation Paper, Other = DIPR/IPR, etc.


�PAGE \# "'Page: '#'�'"  �� Enter a concise description of the subject matter of the CR. It should be no longer than one line.


�PAGE \# "'Page: '#'�'"  �� Enter the source of the CR. This is either (a) one or more OGC members or, (b) if a (sub)working group has already reviewed and agreed the CR, then list the group as the source.


�PAGE \# "'Page: '#'�'"  �� IF there is one, enter the work item code or issue code that is applicable to the change. These codes will relate to Work Items identified in a WBS associated with a particular OGC initiative. If there is no code, leave blank.


�PAGE \# "'Page: '#'�'"  �� Enter the date on which the CR was last revised.


�PAGE \# "'Page: '#'�'"  �� Enter a single letter corresponding to the most appropriate category listed below. For more detailed help on interpreting these categories, see the TC Policies and Procedures".


�PAGE \# "'Page: '#'�'"  �� Enter text which explains why the change is necessary.


�PAGE \# "'Page: '#'�'"  �� Enter text which describes the most important components of the change. i.e. How the change is made.


�PAGE \# "'Page: '#'�'"  �� Enter here the consequences if this CR was to be rejected. It is necessary to complete this section only if the CR is of category "F" (i.e. essential correction).


�PAGE \# "'Page: '#'�'"  �� Enter each the number of each clause which contains changes.


�PAGE \# "'Page: '#'�'"  �� Enter an X in the box if any other specifications are affected by this change.


�PAGE \# "'Page: '#'�'"  �� If known, list here the specifications which are affected or the CRs which are linked.


�PAGE \# "'Page: '#'�'"  �� Enter any other information which may be needed by the group being requested to approve the CR. This could include special conditions for it's approval which are not listed anywhere else above.





1

Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.

PAGE  

9

Copyright © 2006 Open Geospatial Consortium, Inc. All Rights Reserved.






06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/basicTypes.xsd
 
   
     basicTypes.xsd
     
    Generic simpleContent components for use in GML 
    Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
    
  
  
   
     
        Some common reasons for a null value:   
			
        innapplicable - the object does not have a value
        missing - The correct value is not readily available to the sender of this data.  
                           Furthermore, a correct value may not exist.
        template - the value will be available later
        unknown - The correct value is not known to, and not computable by, the sender of this data. 
                           However, a correct value probably exists.
        withheld - the value is not divulged 
        
        other:reason - as indicated by "reason" string
        
        Specific communities may agree to assign more strict semantics when these terms are used in a particular context.  
      
    
     
       
         
           
           
           
           
           
        
      
       
         
           
        
      
    
  
  
   
     
       Utility type for null elements.  The value may be selected from one of the enumerated tokens, or may be a URI in which case this should identify a resource which describes the reason for the null. 
    
     
  
  
   
  
   
     
       Utility type used in various places 
      - e.g. to indicate the direction of topological objects;
      "+" for forwards, or "-" for backwards.
    
     
       
       
    
  
  
   
     
       Union of the XML Schema boolean type and the GML Nulltype.  An element which uses this type may have content which is either a boolean {0,1,true,false} or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of boolean values {0,1,true,false} with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
    
     
  
  
   
     
       Union of the XML Schema string type and the GML Nulltype.  An element which uses this type may have content which is either a string or a value from Nulltype.  Note that a "string" may contain whitespace.  
    
     
  
  
   
     
       Union of the XML Schema Name type and the GML Nulltype.  An element which uses this type may have content which is either a Name or a value from Nulltype.  Note that a "Name" may not contain whitespace.  
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of Name values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema Name type.  An element of this type contains a space-separated list of Name values
    
     
  
  
   
     
       Union of the XML Schema double type and the GML Nulltype.  An element which uses this type may have content which is either a double or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of double values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       Union of the XML Schema integer type and the GML Nulltype.  An element which uses this type may have content which is either an integer or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of integer values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.   
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.  
      A member of the list may be a typed null.  
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      A member of the list may be a typed null. 
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       Tables or arrays of tuples.  
        May be used for text-encoding of values from a table.  
        Actually just a string, but allows the user to indicate which characters are used as separators.  
        The value of the 'cs' attribute is the separator for coordinate values, 
        and the value of the 'ts' attribute gives the tuple separator (a single space by default); 
        the default values may be changed to reflect local usage.
        Defaults to CSV within a tuple, space between tuples.  
        However, any string content will be schema-valid.  
    
     
       
         
         
         
      
    
  
  
   
     
       A set of values, representing a list of token with the lexical value space of NCName. The tokens are seperated by whitespace.
    
     
  
  
   
     
       A set of values, representing a list of token with the lexical value space of QName. The tokens are seperated by whitespace.
    
     
  
  




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/coordinateOperations.xsd
 
	 
		 
		 How to encode coordinate operation definitions. Builds on referenceSystems.xsd to encode the data needed to define coordinate operations, including Transformations, Conversions, and other specific subtypes of operations. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
						 
							 Unordered set of estimates of the impact of this coordinate operation on point position accuracy. Gives position error estimates for target coordinates of this coordinate operation, assuming no errors in source coordinates. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
	
	 
		 
			 Association to a concatenated operation, either referencing or containing the definition of that concatenated operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
	
	 
		 
			 Association to a pass through operation, either referencing or containing the definition of that pass through operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	 
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 Value of an angle operation parameter, in either degree-minute-second format or single value format. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 A group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level parameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
							 Unordered set of composition associations to the parameter values and groups of values included in this group. 
						
					
					 
				
			
		
	
	
	 
		 
			 A composition association to a parameter value or group of values included in this group. 
		
	
	
	 
		 
			 Association to the operation parameter group for which this element provides parameter values. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter group objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter group is identified. 
		
	
	
	 
		 
			 The definition of a group of parameters used by an operation method. This complexType is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter group. The first groupID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter group, including source information. 
						
					
					 
					 
						 
							 Unordered list of associations to the set of operation parameters that are members of this group. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter group. 
		
	
	
	 
		 
			 The maximum number of times that values for this parameter group can be included. If this attribute is omitted, the maximum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter that is a member of a group. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/coordinateReferenceSystems.xsd
 
	 
		 
		 How to encode coordinate reference system definitions. Builds on referenceSystems.xsd to encode the data needed to define coordinate reference systems, including the specific subtypes of coordinate reference systems. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Coordinate Reference System (SC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates, with the exception of the abstract "SC_CRS" class. The "SC_CRS" class is encoded in referenceSystems.xsd, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 Association to a compound coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a geographic coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 3D coordinate reference system with the origin at the approximate centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view, which obviates the need to model the earth's curvature. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the spherical coordinate system used by this CRS.
		
	
	
	 
	
	 
		 
			 Association to a geocentric coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a projected coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft.
For further information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the engineering datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an engineering coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the oblique Cartesian coordinate system used by this CRS.
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an image coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for the recording of time. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the temporal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the temporal datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/coordinateSystems.xsd
 
	 
		 
		 How to encode coordinate system definitions. Builds on referenceSystems.xsd to encode the data needed to define coordinate systems, including the specific subtypes of coordinate systems. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Coordinate System (CS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system containing a single time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TemporalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated ordinate is the distance from the specified origin to the point along the axis. Example: usage of the line feature representing a road to describe points on or along that road. A LinearCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a linear coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. An example is a multilinear coordinate system which contains one coordinate axis that may have any 1-D shape which has no intersections with itself. This non-straight axis is supplemented by one or two straight axes to complete a 2 or 3 dimensional coordinate system. The non-straight axis is typically incrementally straight or curved. A UserDefinedCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a user-defined coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be confused with an ellipsoidal coordinate system based on an ellipsoid "degenerated" into a sphere. A SphericalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a spherical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a polar coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An ObliqueCartesianCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an oblique-Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/coverage.xsd
 
	 
		 coverage.xsd
		 GML Coverage schema. 
        Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	 
	 
	
	
	
	
	 
	
	 
		 
			 Abstract element which acts as the head of a substitution group for coverages. Note that a coverage is a GML feature.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either geometry or temporal objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. This definition conforms to ISO 19123.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 The spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods, or

N.B. Temporal geometric complexes and temporal grids are not yet implemented in GML.
		
		 
			 
				 
				 
			
		
		 
	
	
	 
	
	 
		 
			 
				 
					 each member _Value holds a tuple or "row" from the equivalent table
				
			
			 
				 
					 each list holds the complete set of one scalar component from the values - i.e. a "column" from the equivalent table
				
			
			 
				 
					 Its tuple list holds the values as space-separated tuples each of which contains comma-separated components, and the tuple structure is specified using the rangeParameters property.
				
			
			 
				 
					 a reference to an external source for the data, together with a description of how that external source is structured
				
			
		
	
	
	 
	
	 
		 
			 The function or rule which defines the map from members of the domainSet to the range.  
      More functions will be added to this list
		
		 
			 
			 
		
	
	
	
	
	 
	
	 
		 
			 
			 
				 
				 
			
		
	
	
	 
	
	 
	
	 
	
	 
		 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 List of codes that identifies the file structure model for records stored in files.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Metadata about the rangeSet.  Definition of record structure.   
      This is required if the rangeSet is encoded in a DataBlock.  
      We use a gml:_Value with empty values as a map of the composite value structure.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Description of a rule for associating members from the domainSet with members of the rangeSet.
		
	
	
	 
	
	 
		 
			 Defines how values in the domain are mapped to the range set. The start point and the sequencing rule are specified here.
		
		 
			 
				 
					 If absent, the implied value is "Linear".
				
			
			 
				 
					 Index position of the first grid post, which must lie somwhere in the GridEnvelope.  If absent, the startPoint is equal to the value of gridEnvelope::low from the grid definition.
				
			
		
	
	
	 
	
	 
		 
			 Exends GridFunctionType with a lookUpTable.  This contains a list of indexes of members within the rangeSet corresponding with the members of the domainSet.  The domainSet is traversed in list order if it is enumerated explicitly, or in the order specified by a SequenceRule if the domain is an implicit set.    The length of the lookUpTable corresponds with the length of the subset of the domainSet for which the coverage is defined.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 List of codes (adopted from ISO 19123 Annex C) that identifies the rule for traversing a grid to correspond with the sequence of members of the rangeSet.
		
		 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 The enumeration value here indicates the incrementation order  to be used on the first 2 axes, i.e. "+x-y" means that the points on the first axis are to be traversed from lowest to highest and  the points on the second axis are to be traversed from highest to lowest. The points on all other axes (if any) beyond the first 2 are assumed to increment from lowest to highest.
		
		 
			 
			 
			 
			 
		
	
	
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of point
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of curves.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of surface patches (includes polygons, triangles, rectangles, etc).
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of Solids.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/dataQuality.xsd
 
	 
		 
		 How to encode positional data quality information. Builds on units.xsd to encode the data needed to describe the positional accuracy of coordinate operations. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Data Quality (DQ) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/datums.xsd
 
	 
		 
		 How to encode datum definitions. Builds on referenceSystems.xsd to encode the data needed to define datums, including the specific subtypes of datums. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Datum (CD_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 Association to a datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering datum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin can be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite). 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an engineering datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorPoint" and "realizationEpoch" elements. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Defines the origin of a temporal coordinate reference system. This type extends the TemporalDatumRestrictionType to add the "origin" element with the dateTime type. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The date and time origin of this temporal datum. 
		
	
	
	 
	
	 
		 
			 Association to a temporal datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is Greenwich, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is Greenwich. 
		
	
	
	 
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. Value is a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/defaultStyle.xsd
 
	 
		 defaultStyle.xsd
		 Default Style schema for GML 3.1.0
		Copyright (c) 2001-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		Compliance: reference to ISO Specifications
	
	
	 
	 
	
	 
		 
			 Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
	
	
	 
		 
			 [complexType of] Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
	
	
	 
		 
			 [complexType of] The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
		 
			 
		
	
	
	 
		 
			 Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
	
	
	 
		 
			 [complexType of] Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for features.
		
	
	
	 
		 
			 [complexType of] The style descriptor for features.
		
		 
			 
				 
					 
					 
					 
					 
				
				 
				 
				 
			
		
	
	
	 
		 
			 Used to specify the grammar of the feature query mechanism.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Base complex type for geometry, topology, label and graph styles.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for geometries of a feature.
		
	
	
	 
		 
			 [complexType of] The style descriptor for geometries of a feature.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
	
	
	 
		 
			 [complexType of] The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for labels of a feature, geometry or topology.
		
	
	
	 
		 
			 [complexType of] The style descriptor for labels of a feature, geometry or topology.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
	
	
	 
		 
			 [complexType of] The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The symbol property. Extends the gml:AssociationType to allow for remote referencing of symbols.
		
	
	
	 
		 
			 [complexType of] The symbol property. Allows for remote referencing of symbols.
		
		 
			 
		
		 
		 
		 
		 
	
	
	 
		 
			 Used to specify the type of the symbol used.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Label is mixed -- composed of text and XPath expressions used to extract the useful information from the feature.
		
		 
			 
		
		 
	
	
	 
		 
			 Defines the geometric transformation of entities. There is no particular grammar defined for this value.
		
	
	
	 
		 
			 Used to vary individual graphic parameters and attributes of the style, symbol or text.
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/dictionary.xsd
 
	 
		 
		 
			Dictionary schema for GML 3.1.1 
			Components to support the lists of definitions.  
    Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	
	 
		 
			 This content model group makes it easier to construct types that 
      derive from DefinitionType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard definition properties. 
      See definition of StandardObjectProperties for more documentation
		
		 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
						 
							 
								 An identified reference to a remote entry in this dictionary, to be used when this entry should be identified to allow external references to this specific entry. 
							
						
					
				
			
		
	
	
	 
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains or refers to a definition object.  

The number of definitions contained in this dictionaryEntry is restricted to one, but a DefinitionCollection or Dictionary that contains multiple definitions can be substituted if needed. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
		 
			 
				 A non-identified reference to a remote entry in this dictionary, to be used when this entry need not be identified to allow external references to this specific entry. The remote entry referenced will usually be in a dictionary in the same XML document. This element will usually be used in dictionaries that are inside of another dictionary. 
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions that contains a GML object which references a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 A proxy entry in a dictionary of definitions. An element of this type contains a reference to a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. 
		
		 
			 
				 
					 
						 
							 A reference to a remote entry in this dictionary, used when this dictionary entry is identified to allow external references to this specific entry. The remote entry referenced can be in a dictionary in the same or different XML document. 
						
					
				
			
		
	
	
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/direction.xsd
 
	 
		 direction.xsd
		 This schema defines "direction" element and type.
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	 
	
	 
		 
			 
		
		 
			 
			 
			 
			 
		
		 
	
	
	 
	
	 
		 
			 Direction expressed as a vector, either using components, or using angles.
		
		 
			 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/dynamicFeature.xsd
 
	 
		 
		 Basic support for tracking moving objects and objects with changing state.     
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	 
	 
	
	 
	
	 
		 
			 A timeslice encapsulates the time-varying properties of a dynamic feature--it 
        must be extended to represent a timestamped projection of a feature. The dataSource 
        property describes how the temporal data was acquired.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 This type encapsulates various dynamic properties of moving objects        
             (points, lines, regions). It is useful for dealing with features whose        
             geometry or topology changes over time.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 The history relationship associates a feature with a sequence of TimeSlice instances.
		
		 
			 
		
	
	
	 
	
	 
		 
			 The track of a moving object is a sequence of specialized timeslices        that indicate the status of the object.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 A dynamic feature may possess a history and/or a timestamp.
		
		 
			 
				 
			
		
	
	
	 
		 
			 A dynamic feature collection may possess a history and/or a timestamp.
		
		 
			 
				 
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/feature.xsd
 
	 
		 
		 GML Feature schema. 		      
    Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	
	 
	 
	
	 
	
	 
		 
			 An abstract feature provides a set of common properties, including id, metaDataProperty, name and description inherited from AbstractGMLType, plus boundedBy.    A concrete feature type must derive from this type and specify additional  properties in an application schema. A feature must possess an identifying attribute ('id' - 'fid' has been deprecated).
		
		 
			 
				 
					 
					 
						 
							 deprecated
							 deprecated in GML version 3.1
						
					
					
				
			
		
	
	
	
	 
	
	 
		 
			 Bounding shape.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 Envelope that includes also a temporal extent.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	 
	
	 
		 
			 Container for a feature - follow gml:AssociationType pattern.
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Container for features - follow gml:ArrayAssociationType pattern.
		
		 
			 
		
	
	
	
	 
	
	 
		 
			 A feature collection contains zero or more features.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Concrete generic feature collection.
		
		 
			 
		
	
	
	
	 
	 
	
	
	 
	 
	 
	 
	 
	
	
	 
		 
			 Makes boundedBy mandatory
		
		 
			 
				 
					 
					 
					 
						 
							 deprecated
							 deprecated in GML version 3.1
						
					
				
			
		
	
	
	 
		 
			 Deprecated in GML 3.1.0
		
	
	
	 
		 
			 Convenience property for generalised location.  
      A representative location for plotting or analysis.  
      Often augmented by one or more additional geometry properties with more specific semantics.
			 Deprecated in GML 3.1.0
		
		 
			 
				 
				 
				 
				 
			
		
		 
	
	
	 
		 
			 Deprecated in GML 3.1.0
		
	
	
	 
		 
			 G-XML component
			 Deprecated in GML 3.1.0
		
		 
			 
				 
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/geometryAggregates.xsd
 
	 
		 geometryAggregates.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	
	
	
	 
		 
			 The "_GeometricAggregate" element is the abstract head of the substituition group for all geometric aggremates.
		
	
	
	 
		 
			 This is the abstract root type of the geometric aggregates.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A geometry collection must include one or more geometries, referenced through geometryMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a geometric aggregate via the XLink-attributes or contains the "multi geometry" element. multiGeometryProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _GeometricAggregate.
		
	
	
	 
		 
			 A property that has a geometric aggregate as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiPoint is defined by one or more Points, referenced through pointMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a point aggregate via the XLink-attributes or contains the "multi point" element. multiPointProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiPoint.
		
	
	
	 
		 
			 A property that has a collection of points as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiCurve is defined by one or more Curves, referenced through curveMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve aggregate via the XLink-attributes or contains the "multi curve" element. multiCurveProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiCurve.
		
	
	
	 
		 
			 A property that has a collection of curves as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiSurface is defined by one or more Surfaces, referenced through surfaceMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface aggregate via the XLink-attributes or contains the "multi surface" element. multiSurfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiSurface.
		
	
	
	 
		 
			 A property that has a collection of surfaces as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiSolid is defined by one or more Solids, referenced through solidMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a solid aggregate via the XLink-attributes or contains the "multi solid" element. multiSolidProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiSolid.
		
	
	
	 
		 
			 A property that has a collection of solids as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "MultiSurface" element instead.
		
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "MultiCurve" element instead.
		
	
	
	 
		 
			 A MultiLineString is defined by one or more LineStrings, referenced through lineStringMember elements. Deprecated with GML version 3.0. Use MultiCurveType instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use MultiCurvePropertyType instead.
A property that has a collection of line strings as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
		 
			 A MultiPolygon is defined by one or more Polygons, referenced through polygonMember elements. Deprecated with GML version 3.0. Use MultiSurfaceType instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use MultiSurfacePropertyType instead.

A property that has a collection of polygons as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	 
		 
			 This property element either references a geometry element via the XLink-attributes or contains the geometry element.
		
	
	 
		 
			 This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a Point via the XLink-attributes or contains the Point element.
		
	
	 
		 
			 This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for "_Surface".
		
	
	 
		 
			 This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element which is substitutable for "_Solid".
		
	
	 
		 
			 This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
	 
	 
	 
	 
	 
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveMember" instead.
This property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveMember" instead.
This property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceMember" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/geometryBasic0d1d.xsd
 
	 
		 geometryBasic0d1d.xsd
		 
			 Schematron validation
			 
				 
					 The presence of a dimension attribute implies the presence of the srsName attribute.
					 The presence of an axisLabels attribute implies the presence of the srsName attribute.
					 The presence of an uomLabels attribute implies the presence of the srsName attribute.
					 The presence of an uomLabels attribute implies the presence of the axisLabels attribute and vice versa.
				
			
			 
				 
					 The presence of a count attribute implies the presence of the dimension attribute.
				
			
		
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
		 
			 This includes not only measures.xsd, but also units.xsd, gmlBase.xsd and basicTypes.xsd.
		
	
	
	
	
	 
		 
			 The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This 
			includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction 
			of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 A geometric property can either be any geometry element encapsulated in an element of this type or an XLink reference 
			to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Note that either 
			the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference 
				remote resources (including those elsewhere in the same document). A simple link element can be constructed by 
				including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation 
				of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create 
				sophisticated links between resources; such links can be used to reference remote properties. A simple link element 
				can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by 
				including the gml:AssociationAttributeGroup.
			
		
	
	
	 
		 
			 A container for an array of geometry elements. The elements are always contained in the array property, 
			referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may 
			have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated 
			with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive 
			from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the 
			substitution group of _Geometry.
		
		 
			 
				 
					 
						 This attribute is included for backward compatibility with GML 2 and is deprecated with GML 3. 
						This identifer is superceded by "gml:id" inherited from AbstractGMLType. The attribute "gid" should not be used 
						anymore and may be deleted in future versions of GML without further notice.
					
				
				 
			
		
	
	
	 
		 
			 Optional reference to the CRS used by this geometry, with optional additional information to simplify use when 
			a more complete definition of the CRS is not needed.
		
		 
			 
				 In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType 
				(see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the 
				location the URI points to. If no srsName attribute is given, the CRS must be specified as part of the larger context this 
				geometry element is part of, e.g. a geometric element like point, curve, etc. It is expected that this attribute will be specified 
				at the direct position level only in rare cases.
			
		
		 
			 
				 The "srsDimension" is the length of coordinate sequence (the number of entries in the list). This dimension is 
				specified by the coordinate reference system. When the srsName attribute is omitted, this attribute shall be omitted.
			
		
		 
	
	
	 
		 
			 Optional additional and redundant information for a CRS to simplify use when a more complete definition of the 
			CRS is not needed. This information shall be the same as included in the more complete definition of the CRS, referenced by the 
			srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes 
			shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
		
		 
			 
				 Ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis 
				labels, after spaces and forbiddden characters are removed. When the srsName attribute is included, this attribute is optional. 
				When the srsName attribute is omitted, this attribute shall also be omitted.
			
		
		 
			 
				 Ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the 
				gml:catalogSymbol should be used for this uom labels, after spaces and forbiddden characters are removed. When the 
				axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute 
				shall also be omitted.
			
		
	
	
	 
		 
			 The "_GeometricPrimitive" element is the abstract head of the substituition group for all (pre- and user-defined) 
			geometric primitives.
		
	
	
	 
		 
			 This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not 
			decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their 
			coordinate tuples.
		
		 
			 
		
	
	
	 
		 
			 A property that has a geometric primitive as its value domain can either be an appropriate geometry element 
			encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry 
			elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither 
			both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a 
				specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide 
				Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between 
				resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer 
				functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	
	 
	
	 
		 
			 A Point is defined by a single coordinate tuple.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the direct poisiton of a point. 1. The "pos" element is of type 
							DirectPositionType.
						
						 
						 
							 
								 Deprecated with GML version 3.1.0 for coordinates with ordinate values that are numbers. Use "pos" 
								instead. The "coordinates" element shall only be used for coordinates with ordinates that require a string 
								representation, e.g. DMS representations.
							
						
						 
							 
								 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for 
								backwards compatibility with GML 2.
							
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a point via the XLink-attributes or contains the point element. pointProperty 
			is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that 
			is substitutable for Point.
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
		
	
	
	 
		 
			 A property that has a point as its value domain can either be an appropriate geometry element encapsulated in an 
			element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located 
			elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific 
				set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. 
				XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be 
				used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has 
				been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of points. The elements are always contained in the array property, referencing geometry 
			elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	
	
	 
		 
			 The "_Curve" element is the abstract head of the substituition group for all (continuous) curve elements.
		
	
	
	 
		 
			 An abstraction of a curve to support the different levels of complexity. The curve can always be viewed as a geometric 
			primitive, i.e. is continuous.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the 
			predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is 
			substitutable for _Curve.
		
	
	
	 
		 
			 A property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an 
			element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere 
			in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific 
				set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. 
				XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used 
				to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built 
				into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of curves. The elements are always contained in the array property, referencing geometry elements 
			or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate 
			tuples, with linear interpolation between them. It is backwards compatible with the LineString of GML 2, GM_LineString of ISO 19107 is 
			implemented by LineStringSegment.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a line string. 1. A sequence of "pos" 
							(DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part 
							of this curve, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference 
							another point defined outside of this curve (reuse of existing points). 2. The "posList" element allows for a compact way to 
							specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong 
							to this curve only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility 
									with GML 3.0.0.
								
							
							 
								 
									 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for backwards 
									compatibility with GML 2.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
			
		
	
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since 
			DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the 
			"srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a 
			CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 DirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate 
			reference system (CRS).
		
		 
			 
				 
				 
					 
						 "count" allows to specify the number of direct positions in the list. If the attribute count is present then 
						the attribute srsDimension shall be present, too.
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 Vector instances hold the compoents for a (usually spatial) vector within some coordinate reference system (CRS). 
			Since Vectors will often be included in larger objects that have references to CRS, the "srsName" attribute may be missing. 
			In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.

			Note that this content model is the same as DirectPositionType, but is defined separately to reflect the distinct semantics, and to avoid validation problems. SJDC 2004-12-02
		
		 
			 
				 
			
		
	
	
	 
		 
			 A geometric position represented either by a DirectPosition or a Point.
		
		 
			 
			 
		
	
	
	 
		 
			 A list of geometric positions represented either by a DirectPosition or a Point.
		
		 
			 
			 
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0.
		
	
	
	
	
	 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct 
			position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), 
			the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the 
			envelope).
		
		 
			 
				 
				 
			
			 
				 
					 deprecated
					 deprecated with GML version 3.0
				
			
			 
				 
					 deprecated
					 Deprecated with GML version 3.1. Use the explicit properties "lowerCorner" and "upperCorner" instead.
				
			
			 
				 
					 Deprecated with GML version 3.1.0. Use the explicit properties "lowerCorner" and "upperCorner" instead.
				
			
		
		 
	
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "pos" element instead.
		
	
	 
		 
			 Represents a coordinate tuple in one, two, or three dimensions. Deprecated with GML 3.0 and replaced by 
			DirectPositionType.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveProperty" instead. This 
			property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use 
			CurvePropertyType instead. A property that has a line string as its value domain can either be an appropriate geometry element encapsulated 
			in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere 
			in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources 
				(including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. 
				The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to 
				be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. 
				A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by 
				including the gml:AssociationAttributeGroup.
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	
	
	 
		 
			 The "_Surface" element is the abstract head of the substituition group for all (continuous) surface elements.
		
	
	
	 
		 
			 An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Surface.
		
	
	
	 
		 
			 A property that has a surface as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	
	 
		 
			 The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
		
		 
			 
		
	
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	 
		 
			 A boundary of a surface consists of a number of rings. The "interior" rings seperate the surface / surface patch from the area enclosed by the rings.
		
	
	 
		 
			 Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "exterior" instead.
		
	
	 
		 
			 Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "interior" instead.
		
	
	
	 
		 
			 Encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a linear ring.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this ring, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this ring (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this ring only. The number of direct positions in the list must be at least four.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
						 
							 
								 Deprecated with GML version 3.0 and included for backwards compatibility with GML 2. Use "pos" elements instead.
							
						
					
				
			
		
	
	
	 
		 
			 Encapsulates a ring to represent properties in features or geometry collections.
		
		 
			 
		
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceProperty" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use SurfacePropertyType instead.
A property that has a polygon as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/geometryComplexes.xsd
 
	 
		 geometryComplexes.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	 
	
	 
		 
			 A CompositeCurve is defined by a sequence of (orientable) curves such that the each curve in the sequence terminates at the start point of the subsequent curve in the list.
		
		 
			 
				 
					 
						 
							 This element references or contains one curve in the composite curve. The curves are contiguous, the collection of curves is ordered.
NOTE: This definition allows for a nested structure, i.e. a CompositeCurve may use, for example, another CompositeCurve as a curve member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A CompositeSurface is defined by a set of orientable surfaces. A composite surface is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
		
		 
			 
				 
					 
						 
							 This element references or contains one surface in the composite surface. The surfaces are contiguous.
NOTE: This definition allows for a nested structure, i.e. a CompositeSurface may use, for example, another CompositeSurface as a member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A composite solid is a geometry type with all the geometric properties of a (primitive) solid. 
				Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
								
							
							 This element references or contains one solid in the composite solid. The solids are contiguous.
NOTE: This definition allows for a nested structure, i.e. a CompositeSolid may use, for example, another CompositeSolid as a member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A geometric complex.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A property that has a geometric complex as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
NOTE: The allowed geometry elements contained in such a property (or referenced by it) have to be modelled by an XML Schema choice element since the composites inherit both from geometric complex *and* geometric primitive and are already part of the _GeometricPrimitive substitution group.
		
		 
			 
				 
				 
				 
				 
			
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/geometryPrimitives.xsd
 
	 
		 geometryPrimitives.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	 
	
	 
		 
			 Curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. 
				A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
				The orientation of the curve is positive.
		
		 
			 
				 
					 
						 
							 This element encapsulates the segments of the curve.
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for "_Curve".
		
	
	
	 
	
	 
		 
			 OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another _Curve with a parameterization that reverses the sense of the curve traversal.
		
		 
			 
				 
					 
						 
							 References or contains the base curve (positive orientation).
NOTE: This definition allows for a nested structure, i.e. an OrientableCurve may use another OrientableCurve as its base curve.
						
					
				
				 
					 
						 If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another _Curve with a parameterization that reverses the sense of the curve traversal. "+" is the default value.
					
				
			
		
	
	
	
	
	
	 
		 
			 The "_CurveSegment" element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism.
		
	
	
	 
		 
			 Curve segment defines a homogeneous segment of a curve.
		
		 
		 
			 
				 The attribute "numDerivativesAtStart" specifies the type of continuity between this curve segment and its predecessor. If this is the first curve segment in the curve, one of these values, as appropriate, is ignored. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
		 
			 
				 The attribute "numDerivativesAtEnd" specifies the type of continuity between this curve segment and its successor. If this is the last curve segment in the curve, one of these values, as appropriate, is ignored. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
		 
			 
				 The attribute "numDerivativesInterior" specifies the type of continuity that is guaranteed interior to the curve. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
	
	
	 
		 
			 This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
		 
			 A container for an array of curve segments.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LineStringSegment is a curve segment that is defined by two or more coordinate tuples, with linear interpolation between them.
				Note: LineStringSegment implements GM_LineString of ISO 19107.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a LineStringSegment the interpolation is fixed as "linear".
					
				
			
		
	
	
	 
	
	 
		 
			 An ArcString is a curve segment that uses three-point circular arc interpolation.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcString the interpolation is fixed as "circularArc3Points".
					
				
				 
					 
						 The number of arcs in the arc string can be explicitly stated in this attribute. The number of control points in the arc string must be 2 * numArc + 1.
					
				
			
		
	
	
	 
	
	 
		 
			 An Arc is an arc string with only one arc unit, i.e. three control points.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 An arc is an arc string consiting of a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 A Circle is an arc whose ends coincide to form a simple closed loop. The "start" and "end" bearing are equal and shall be the bearing for the first controlPoint listed. The three control points must be distinct non-co-linear points for the Circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
		
		 
			 
		
	
	
	 
	
	 
		 
			 This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The bulge controls the offset of each arc's midpoint. The "bulge" is the real number multiplier for the normal that determines the offset direction of the midpoint of each arc. The length of the bulge sequence is exactly 1 less than the length of the control point array, since a bulge is needed for each pair of adjacent points in the control point array. The bulge is not given by a distance, since it is simply a multiplier for the normal.
The midpoint of the resulting arc is given by: midPoint = ((startPoint + endPoint)/2.0) + bulge*normal
						
					
					 
						 
							 The attribute "normal" is a vector normal (perpendicular) to the chord of the arc, the line joining the first and last
point of the arc. In a 2D coordinate system, there are only two possible directions for the normal, and it is often given as a signed real, indicating its length, with a positive sign indicating a left turn angle from the chord line, and a negative sign indicating a right turn from the chord. In 3D, the normal determines the plane of the arc, along with the start and endPoint of the arc.
The normal is usually a unit vector, but this is not absolutely necessary. If the normal is a zero vector, the geometric object becomes equivalent to the straight line between the two end points. The length of the normal sequence is exactly the same as for the bulge sequence, 1 less than the control point sequence length.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcStringByBulge the interpolation is fixed as "circularArc2PointWithBulge".
					
				
				 
					 
						 The number of arcs in the arc string can be explicitly stated in this attribute. The number of control points in the arc string must be numArc + 1.
					
				
			
		
	
	
	 
	
	 
		 
			 An ArcByBulge is an arc string with only one arc unit, i.e. two control points and one bulge.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The bulge controls the offset of each arc's midpoint. The "bulge" is the real number multiplier for the normal that determines the offset direction of the midpoint of each arc. The length of the bulge sequence is exactly 1 less than the length of the control point array, since a bulge is needed for each pair of adjacent points in the control point array. The bulge is not given by a distance, since it is simply a multiplier for the normal.
The midpoint of the resulting arc is given by: midPoint = ((startPoint + endPoint)/2.0) + bulge*normal
						
					
					 
						 
							 The attribute "normal" is a vector normal (perpendicular) to the chord of the arc, the line joining the first and last
point of the arc. In a 2D coordinate system, there are only two possible directions for the normal, and it is often given as a signed real, indicating its length, with a positive sign indicating a left turn angle from the chord line, and a negative sign indicating a right turn from the chord. In 3D, the normal determines the plane of the arc, along with the start and endPoint of the arc.
The normal is usually a unit vector, but this is not absolutely necessary. If the normal is a zero vector, the geometric object becomes equivalent to the straight line between the two end points. The length of the normal sequence is exactly the same as for the bulge sequence, 1 less than the control point sequence length.
						
					
				
				 
					 
						 An arc is an arc string consiting of a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 This variant of the arc requires that the points on the arc have to be computed instead of storing the coordinates directly. The control point is the center point of the arc plus the radius and the bearing at start and end. This represenation can be used only in 2D.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) element. The "pos" element contains a center point that is only part of this curve segment, a "pointProperty" element contains a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element can be used to specifiy the coordinates of the center point, too. The number of direct positions in the list must be one.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The radius of the arc.
						
					
					 
						 
							 The bearing of the arc at the start.
						
					
					 
						 
							 The bearing of the arc at the end.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcByCenterPoint the interpolation is fixed as "circularArcCenterPointWithRadius".
					
				
				 
					 
						 Since this type describes always a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 A CircleByCenterPoint is an ArcByCenterPoint with identical start and end angle to form a full circle. Again, this represenation can be used only in 2D.
		
		 
			 
		
	
	
	 
	
	 
		 
			 An offset curve is a curve at a constant
		 distance from the basis curve. They can be useful as a cheap
		 and simple alternative to constructing curves that are offsets	
		 by definition.
		
		 
			 
				 
					 
						 
							 offsetBase is a reference to thecurve from which this
							 curve is define	as an offset.
						
					
					 
						 
							 distance is the distance at which the
							 offset curve is generated from the basis curve. In 2D systems, positive distances
							 are to be to the left of the basis curve, and the negative distances are to be to the 
							 right of the basis curve.
						
					
					 
						 
							 refDistance is used to define the vector
       direction of the offset curve from the basis curve. It can
       be omitted in the 2D case, where the distance can be 
       positive or negative. In that case, distance defines left
       side (positive distance) or right side (negative distance)
       with respect to the tangent to the basis curve.

       In 3D the basis curve shall have a well defined tangent 
       direction for every point. The offset curve at any point 
       in 3D, the basis curve shall have a well-defined tangent
       direction for every point. The offset curve at any point
       (parameter) on the basis curve c is in the direction
       -   -   -         -               
       s = v x t  where  v = c.refDirection()  
       and
       -
       t = c.tangent()
                                                    -
       For the offset direction to be well-defined, v shall not
       on any point of the curve be in the same, or opposite, 
       direction as
       - 
       t.

       The default value of the refDirection shall be the local
       co-ordinate axis vector for elevation, which indicates up for
       the curve in a geographic sense.

       NOTE! If the refDirection is the positive tangent to the
       local elevation axis ("points upward"), then the offset
       vector points to the left of the curve when viewed from
       above.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A placement takes a standard geometric
   construction and places it in geographic space. It defines a
   transformation from a constructive parameter space to the 
   co-ordinate space of the co-ordinate reference system being used.  
   Parameter spaces in formulae in this International Standard are 
   given as (u, v) in 2D and(u, v, w) in 3D. Co-ordinate reference 
   systems positions are given in formulae, in this International 
   Standard, by either (x, y) in 2D, or (x, y, z) in 3D.

   Affine placements are defined by linear transformations from 
   parameter space to the target co-ordiante space. 2-dimensional 
   Cartesian parameter space,(u,v) transforms into 3-dimensional co-
   ordinate reference systems,(x,y,z) by using an affine 
   transformation,(u,v)->(x,y,z) which is defined :

	x	ux vx  	x0
			 u	  
	y =	uy vy   + y0
			 v		
	x	uz vz	z0
	
   Then, given this equation, the location element of the 
   AffinePlacement is the direct position (x0, y0, z0), which is the
   target position of the origin in (u, v). The two reference
   directions (ux, uy, uz) and (vx, vy, vz) are the target     
   directions of the unit vectors at the origin in (u, v).
		
		 
			 
				 
					 The location property gives 
     the target of the parameter space origin. This is the vector  
    (x0, y0, z0) in the formulae above.
				
			
			 
				 
					 The attribute refDirection gives the    
target directions for the co-ordinate basis vectors of the  
parameter space. These are the columns of the matrix in the 
formulae given above. The number of directions given shall be 
inDimension. The dimension of the directions shall be 
outDimension.
				
			
			 
				 
					 Dimension of the constructive parameter 
     space.
				
			
			 
				 
					 Dimension of the co-ordinate space.
				
			
		
	
	
	 
	
	 
		 
			 A clothoid, or Cornu's spiral, is plane
   curve whose curvature is a fixed function of its length.
   In suitably chosen co-ordinates it is given by Fresnel's
   integrals.

    x(t) = 0-integral-t cos(AT*T/2)dT    
    
    y(t) = 0-integral-t sin(AT*T/2)dT
   
   This geometry is mainly used as a transition curve between
   curves of type straight line to circular arc or circular arc
   to circular arc. With this curve type it is possible to 
   achieve a C2-continous transition between the above mentioned
   curve types. One formula for the Clothoid is A*A = R*t where
   A is constant, R is the varying radius of curvature along the
   the curve and t is the length along and given in the Fresnel 
   integrals.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 The "refLocation" is an affine mapping 
          that places  the curve defined by the Fresnel Integrals  
          into the co-ordinate reference system of this object.
									
								
							
						
					
					 
						 
							 The element gives the value for the
       constant in the Fresnel's integrals.
						
					
					 
						 
							 The startParameter is the arc length
       distance from the inflection point that will be the start
       point for this curve segment. This shall be lower limit
       used in the Fresnel integral and is the value of the
       constructive parameter of this curve segment at its start
       point. The startParameter can either be positive or
       negative. 
       NOTE! If 0.0 (zero), lies between the startParameter and
       the endParameter of the clothoid, then the curve goes
       through the clothoid's inflection point, and the direction
       of its radius of curvature, given by the second
       derivative vector, changes sides with respect to the
       tangent vector. The term length distance for the
						
					
					 
						 
							 The endParameter is the arc length
       distance from the inflection point that will be the end
       point for this curve segment. This shall be upper limit
       used in the Fresnel integral and is the value of the
       constructive parameter of this curve segment at its
       start point. The startParameter can either be positive
       or negative.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A GeodesicString consists of sequence of
   geodesic segments. The type essentially combines a sequence of
   Geodesic into a single object.
   The GeodesicString is computed from two or more positions and an
   interpolation using geodesics defined from the geoid (or 
   ellipsoid) of the co-ordinate reference system being used.
		
		 
			 
				 
					 
					 
				
				 
					 
						 The attribute "interpolation" specifies the
     curve interpolation mechanism used for this segment. This
     mechanism uses the control points and control parameters to
     determine the position of this curve segment. For an 
     GeodesicString the interpolation is fixed as "geodesic".
					
				
			
		
	
	
	 
	
	 
		 
			 A Geodesic consists of two distinct
   positions joined by a geodesic curve. The control points of
   a Geodesic shall lie on the geodesic between its start
   point and end points. Between these two points, a geodesic
   curve defined from ellipsoid or geoid model used by the
   co-ordinate reference systems may be used to interpolate
   other positions. Any other point in the controlPoint array
   must fall on this geodesic.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Cubic splines are similar to line strings in that they are a sequence of segments each with its own defining function. A cubic spline uses the control points and a set of derivative parameters to define a piecewise 3rd degree polynomial interpolation. Unlike line-strings, the parameterization by arc length is not necessarily still a polynomial. 
				The function describing the curve must be C2, that is, have a continuous 1st and 2nd derivative at all points, and pass through the controlPoints in the order given. Between the control points, the curve segment is defined by a cubic polynomial. At each control point, the polynomial changes in such a manner that the 1st and 2nd derivative vectors are the same from either side. The control parameters record must contain vectorAtStart, and vectorAtEnd which are the unit tangent vectors at controlPoint[1] and controlPoint[n] where n = controlPoint.count. 
				Note: only the direction of the vectors is relevant, not their length.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 "vectorAtStart" is the unit tangent vector at the start point of the spline.
						
					
					 
						 
							 "vectorAtEnd" is the unit tangent vector at the end point of the spline.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a CubicSpline the interpolation is fixed as "cubicSpline".
					
				
				 
					 
						 The degree for a cubic spline is "3".
					
				
			
		
	
	
	 
		 
			 A knot is a breakpoint on a piecewise spline curve.
		
		 
			 
				 
					 The property "value" is the value of the parameter at the knot of the spline. The sequence of knots shall be a non-decreasing sequence. That is, each knot's value in the sequence shall be equal to or greater than the previous knot's value. The use of equal consecutive knots is normally handled using the multiplicity.
				
			
			 
				 
					 The property "multiplicity" is the multiplicity of this knot used in the definition of the spline (with the same weight).
				
			
			 
				 
					 The property "weight" is the value of the averaging weight used for this knot of the spline.
				
			
		
	
	
	 
		 
			 Encapsulates a knot to use it in a geometric type.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions. Knots are breakpoints on the curve that connect its pieces. They are given as a non-decreasing sequence of real numbers. If the weights in the knots are equal then it is a polynomial spline. The degree is the algebraic degree of the basis functions.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The attribute "degree" shall be the degree of the polynomial used for interpolation in this spline.
						
					
					 
						 
							 The property "knot" shall be the sequence of distinct knots used to define the spline basis functions.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a BSpline the interpolation can be either "polynomialSpline" or "rationalSpline", default is "polynomialSpline".
					
				
				 
					 
						 The attribute isPolynomial is set to true if this is a polynomial spline.
					
				
				 
					 
						 The attribute "knotType" gives the type of knot distribution used in defining this spline. This is for information only
and is set according to the different construction-functions.
					
				
			
		
	
	
	 
	
	 
		 
			 Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The attribute "degree" shall be the degree of the polynomial used for interpolation in this spline.
						
					
					 
						 
							 The property "knot" shall be the sequence of distinct knots used to define the spline basis functions.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a Bezier the interpolation is fixed as "polynomialSpline".
					
				
				 
					 
						 The attribute isPolynomial is set to true as this is a polynomial spline.
					
				
				 
					 
						 The property "knotType" is not relevant for Bezier curve segments.
					
				
			
		
	
	
	 
	
	 
		 
			 A Surface is a 2-dimensional primitive and is composed of one or more surface patches. The surface patches are connected to one another.
				The orientation of the surface is positive ("up"). The orientation of a surface chooses an "up" direction through the choice of the upward normal, which, if the surface is not a cycle, is the side of the surface from which the exterior boundary appears counterclockwise. Reversal of the surface orientation reverses the curve orientation of each boundary component, and interchanges the conceptual "up" and "down" direction of the surface. If the surface is the boundary of a solid, the "up" direction is usually outward. For closed surfaces, which have no boundary, the up direction is that of the surface patches, which must be consistent with one another. Its included surface patches describe the interior structure of the Surface.
		
		 
			 
				 
					 
						 
							 This element encapsulates the patches of the surface.
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for "_Surface".
		
	
	
	 
	
	 
		 
			 OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a Surface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
		
		 
			 
				 
					 
						 
							 References or contains the base surface (positive orientation).
						
					
				
				 
					 
						 If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a Surface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface". "+" is the default value.
					
				
			
		
	
	
	
	
	
	 
		 
			 The "_SurfacePatch" element is the abstract head of the substituition group for all surface pach elements describing a continuous portion of a surface.
		
	
	
	 
		 
			 A surface patch defines a homogenuous portion of a surface.
		
		 
	
	
	 
		 
			 This property element contains a list of surface patches. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
		 
			 A container for an array of surface patches.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves are coplanar and the polygon uses planar interpolation in its interior. Implements GM_Polygon of ISO 19107.
		
		 
			 
				 
					 
					 
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
	
	 
		 
			 Represents a triangle as a surface with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring must be four.
		
		 
			 
				 
					 
						 
							 Constraint: The Ring shall be a LinearRing and must form a triangle, the first and the last position must be co-incident.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
	
	 
		 
			 Represents a rectangle as a surface with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring must be five.
		
		 
			 
				 
					 
						 
							 Constraint: The Ring shall be a LinearRing and must form a rectangle; the first and the last position must be co-incident.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
		 
			 This property element either references a curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for "_Curve".
		
	
	
	 
	
	 
		 
			 A Ring is used to represent a single connected component of a surface boundary. It consists of a sequence of curves connected in a cycle (an object whose boundary is empty).
A Ring is structurally similar to a composite curve in that the endPoint of each curve in the sequence is the startPoint of the next curve in the Sequence. Since the sequence is circular, there is no exception to this rule. Each ring, like all boundaries, is a cycle and each ring is simple.
NOTE: Even though each Ring is simple, the boundary need not be simple. The easiest case of this is where one of the interior rings of a surface is tangent to its exterior ring.
		
		 
			 
				 
					 
						 
							 This element references or contains one curve in the composite curve. The curves are contiguous, the collection of curves is ordered.
NOTE: This definition allows for a nested structure, i.e. a CompositeCurve may use, for example, another CompositeCurve as a curve member.
						
					
				
			
		
	
	
	 
		 
			 Encapsulates a ring to represent properties in features or geometry collections.
		
		 
			 
		
	
	
	 
		 
			 Reference points which are organised
   into sequences or grids(sequences of equal length sequences).
		
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
	
	 
		 
			 
			
		
		 
			 
		
	
	
	 
	
	 
		 
			 A gridded surface is a parametric curve
   surface derived from a rectangular grid in the parameter
   space. The rows from this grid are control points for
   horizontal surface curves; the columns are control points
   for vertical surface curves. The working assumption is that
   for a pair of parametric co-ordinates (s, t) that the
   horizontal curves for each integer offset are calculated
   and evaluated at "s". The defines a sequence of control
   points:
   
   cn(s) : s  1 .....columns 

   From this sequence a vertical curve is calculated for "s",
   and evaluated at "t". In most cases, the order of
   calculation (horizontal-vertical vs. vertical-horizontal)
   does not make a difference. Where it does, the horizontal-   
   vertical order shall be the one used.

   Logically, any pair of curve interpolation types can lead
   to a subtype of GriddedSurface. The following clauses
   define some most commonly encountered surfaces that can
   be represented in this manner.
		
		 
			 
				 
					 
						 
							 This is the double indexed sequence
       of control points, given in row major form. 
       NOTE! There in no assumption made about the shape
       of the grid. 
       For example, the positions need not effect a "21/2D"
       surface, consecutive points may be equal in any or all
       of the ordinates. Further, the curves in either or both
       directions may close.
						
					
					 
						 
							 The attribute rows gives the number
         of rows in the parameter grid.
						
					
					 
						 
							 The attribute columns gives the number
        of columns in the parameter grid.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A cone is a gridded surface given as a
   family of conic sections whose control points vary linearly.
   NOTE! A 5-point ellipse with all defining positions identical
   is a point. Thus, a truncated elliptical cone can be given as a
   2x5 set of control points
   ((P1, P1, P1, P1, P1), (P2, P3, P4, P5, P6)). P1 is the apex 
   of the cone. P2, P3,P4, P5 and P6 are any five distinct points
   around the base ellipse of the cone. If the horizontal curves
   are circles as opposed to ellipses, the a circular cone can
   be constructed using ((P1, P1, P1),(P2, P3, P4)). The apex most     
   not coinside with the other plane.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A cylinder is a gridded surface given as a
   family of circles whose positions vary along a set of parallel
   lines, keeping the cross sectional horizontal curves of a
   constant shape.
   NOTE! Given the same working assumptions as in the previous
   note, a Cylinder can be given by two circles, giving us the
   control points of the form ((P1, P2, P3),(P4, P5, P6)).
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A sphere is a gridded surface given as a
   family of circles whose positions vary linearly along the
   axis of the sphere, and whise radius varies in proportions to
   the cosine function of the central angle. The horizontal 
   circles resemble lines of constant latitude, and the vertical
   arcs resemble lines of constant longitude. 
   NOTE! If the control points are sorted in terms of increasing
   longitude, and increasing latitude, the upNormal of a sphere
   is the outward normal.
   EXAMPLE If we take a gridded set of latitudes and longitudes
   in degrees,(u,v) such as

	(-90,-180)  (-90,-90)  (-90,0)  (-90,  90) (-90, 180) 
	(-45,-180)  (-45,-90)  (-45,0)  (-45,  90) (-45, 180) 
	(  0,-180)  (  0,-90)  (  0,0)  (  0,  90) (  0, 180)
	( 45,-180)  ( 45,-90)  ( 45,0)  ( 45, -90) ( 45, 180)
	( 90,-180)  ( 90,-90)  ( 90,0)  ( 90, -90) ( 90, 180)
   
   And map these points to 3D using the usual equations (where R
   is the radius of the required sphere).

    z = R sin u
    x = (R cos u)(sin v)
    y = (R cos u)(cos v)

   We have a sphere of Radius R, centred at (0,0), as a gridded
   surface. Notice that the entire first row and the entire last
   row of the control points map to a single point in each 3D
   Euclidean space, North and South poles respectively, and that
   each horizontal curve closes back on itself forming a 
   geometric cycle. This gives us a metrically bounded (of finite
   size), topologically unbounded (not having a boundary, a
   cycle) surface.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A polyhedral surface is a surface composed
   of polygon surfaces connected along their common boundary 
   curves. This differs from the surface type only in the
   restriction on the types of surface patches acceptable.
		
		 
			 
				 
					 
					 
						 
							 This property encapsulates the patches of 
      the polyhedral surface.
						
					
				
			
		
	
	
	 
		 
			 This property element contains a list of
   polygon patches. The order of the patches is significant and 
   shall be preserved when processing the list.
		
	
	
	 
		 
			 This type defines a container for an array of 
   polygon patches.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This property element contains a list of
   triangle patches. The order of the patches is significant and 
   shall be preserved when processing the list.
		
	
	
	 
		 
			 This type defines a container for an array of 
     triangle patches.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 A triangulated surface is a polyhedral 
   surface that is composed only of triangles. There is no
   restriction on how the triangulation is derived.
		
		 
			 
				 
					 
					 
						 
							 This property encapsulates the patches of 
      the triangulated surface.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A tin is a triangulated surface that uses
   the Delauny algorithm or a similar algorithm complemented with
   consideration of breaklines, stoplines, and maximum length of 
   triangle sides. These networks satisfy the Delauny's criterion
   away from the modifications: Fore each triangle in the 
   network, the circle passing through its vertices does not
   contain, in its interior, the vertex of any other triangle.
		
		 
			 
				 
					 
						 
							 Stoplines are lines where the local
       continuity or regularity of the surface is questionable.
       In the area of these pathologies, triangles intersecting
       a stopline shall be removed from the tin surface, leaving
       holes in the surface. If coincidence occurs on surface
       boundary triangles, the result shall be a change of the 
       surface boundary. Stoplines contains all these
       pathological segments as a set of line strings.
						
					
					 
						 
							 Breaklines are lines of a critical
       nature to the shape of the surface, representing local
       ridges, or depressions (such as drainage lines) in the
       surface. As such their constituent segments must be
       included in the tin eve if doing so
       violates the Delauny criterion. Break lines contains these
       critical segments as a set of line strings.
						
					
					 
						 
							 Areas of the surface where data is not 
       sufficiently dense to assure reasonable calculation shall be    
       removed by adding a retention criterion for triangles based 
       on the length of their sides. For many triangle sides  
       exceeding maximum length, the adjacent triangles to that 
       triangle side shall be removed from the surface.
						
					
					 
						 
							 The corners of the triangles in the TIN 
  are often referred to as pots. ControlPoint shall contain a 
  set of the GM_Position used as posts for this TIN. Since each  
  TIN contains triangles, there must be at least 3 posts. The 
       order in which these points are given does not affect the 
       surface that is represented. Application schemas may add 
       information based on ordering of control points to facilitate 
       the reconstruction of the TIN from the control points.
						
						 
							 
								 
								 
							
						
					
				
			
		
	
	 
		 
			 
		
	
	
	
	
	
	 
		 
			 The "_Solid" element is the abstract head of the substituition group for all (continuous) solid elements.
		
	
	
	 
		 
			 An abstraction of a solid to support the different levels of complexity. A solid is always contiguous.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Solid.
		
	
	
	 
		 
			 A property that has a solid as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces (shells). A shell is represented by a composite surface, where every  shell is used to represent a single connected component of the boundary of a solid. It consists of a composite surface (a list of orientable surfaces) connected in a topological cycle (an object whose boundary is empty). Unlike a Ring, a Shell's elements have no natural sort order. Like Rings, Shells are simple.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
								
							
							 Boundaries of solids are similar to surface boundaries. In normal 3-dimensional Euclidean space, one (composite) surface is distinguished as the exterior. In the more general case, this is not always possible.
						
					
					 
						 
							 
								 
									 
										 
									
								
							
							 Boundaries of solids are similar to surface boundaries.
						
					
				
			
		
	
	
	
	
	 
		 
			 CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an
application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an
application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 Defines allowed values for the knots` type. Uniform knots implies that all knots are of multiplicity 1 and they differ by a positive constant from the preceding knot. Knots are quasi-uniform iff they are of multiplicity (degree + 1) at the ends, of multiplicity 1 elsewhere, and they differ by a positive constant from the preceding knot.
		
		 
			 
			 
			 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/gml.xsd
 
	 
		 gml.xsd
		 Top level GML schema
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	 
	 
	 
	 
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/gmlBase.xsd
 
	 
		 
			 Schematron validation
			 
			 
			 
				 
					 Property element may not carry both a reference to an object and contain an object.
					 Property element must either carry a reference to an object or contain an object.
				
			
		
		 GML base schema for GML 3
		Components to support the GML encoding model.  
		The abstract Schematron rules can be used by any schema that includes gmlBase.  
		Copyright (c) 2001-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that 
      derive from AbstractGMLType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype 
	to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. 
	Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	 
		 
			 Generic GML element to contain a heterogeneous collection of GML _Objects
		
	
	
	 
		 
			 A non-abstract generic collection type that can be used as a document element for a collection of any GML types - Geometries, Topologies, Features ...

FeatureCollections may only contain Features.  GeometryCollections may only contain Geometrys.  Bags are less constrained  they must contain objects that are substitutable for gml:_Object.  This may mix several levels, including Features, Definitions, Dictionaries, Geometries etc.  

The content model would ideally be 
   member 0..*
   members 0..1
   member 0..*
for maximum flexibility in building a collection from both homogeneous and distinct components: 
included "member" elements each contain a single Object
an included "members" element contains a set of Objects 

However, this is non-deterministic, thus prohibited by XSD.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	 
		 
			 Generic GML element to contain a homogeneous array of GML _Objects
		
	
	
	 
		 
			 A non-abstract generic collection type that can be used as a document element for a homogeneous collection of any GML types - Geometries, Topologies, Features ...
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 Abstract element which acts as the head of a substitution group for packages of MetaData properties.
		
	
	
	 
		 
			 An abstract base type for complex metadata types.
		
		 
	
	
	
	 
		 
			 Concrete element in the _MetaData substitution group, which permits any well-formed XML content.  Intended to act as a container for metadata defined in external schemas, for which it is not possible to add the concrete components to the GML _MetaData substitution group directly. Deprecated with GML version 3.1.0.
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	
	
	 
	
	 
		 
			 
				 
					 
						 
					
				
			
			 must carry a reference to an object or contain an object but not both
		
	
	
	 
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  

Descendents of this type can be restricted in an application schema to 
* allow only specified classes as valid participants in the aggregation
* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    

When used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   

In many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   

If co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a "cached" version of the value(s).
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.
		
		 
		 
	
	
	
	 
	
	 
		 
			 A base for derived types used to specify complex types containing an array of objects, by unspecified UML association - either composition or aggregation.  An instance of this type contains elements representing Objects.

Ideally this type would be derived by extension of AssociationType.  
However, this leads to a non-deterministic content model, since both the base and the extension have minOccurs="0", and is thus prohibited in XML Schema.
		
		 
			 
		
	
	
	
	 
		 
			 Contains or refers to a metadata package that contains metadata properties.
		
	
	
	 
		 
			 Base type for complex metadata property types.
		
		 
			 
			
		
		 
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Reference to an XML Schema fragment that specifies the content model of the propertys value. This is in conformance with the XML Schema Section 4.14 Referencing Schemas from Elsewhere.
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the simple link components from xlinks.xsd, with all members optional, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance.
		
		 
		 
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object, or refers to an external description.
		
	
	
	 
		 
			 This type is available wherever there is a need for a "text" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.
		
		 
			 
				 
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/grids.xsd
 
	 
		 grids.xsd
		 Grid geometries
    A subset of implicit geometries
    Designed for use with GML Coverage schema, but maybe useful elsewhere as well.  
    
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	 
	
	 
	
	 
		 
			 An unrectified grid, which is a network composed of two or more sets of equally spaced parallel lines in which the members of each set intersect the members of the other sets at right angles.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Provides grid coordinate values for the diametrically opposed corners of an envelope that bounds a section of grid. The value of a single coordinate is the number of offsets from the origin of the grid in the direction of a specific axis.
		
		 
			 
			 
		
	
	
	 
		 
			 Should be substitutionGroup="gml:Grid" but changed in order to accomplish Xerces-J schema validation
		
	
	
	 
		 
			 A rectified grid has an origin and vectors that define its post locations.
		
		 
			 
				 
					 
					 
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/measures.xsd
 
	 
		 
		 Extends the units.xsd and basicTypes.xsd schemas with types for recording measures using specific types of units, especially the measures and units needed for coordinate reference systems and coordinate operations. The specific unit types encoded are length, angle, scale factor, time, area, volume, speed, and grid length. This schema allows angle values to be recorded as single numbers or in degree-minute-second format. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on Subclause 4.7 of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations.
	
	
	 
	
	
	
	 
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million.
		
		 
			 
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks.
		
		 
			 
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial area quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an area, such as square metres or square miles.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial volume quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a volume, such as cubic metres or cubic feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a speed, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour.
		
		 
			 
		
	
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Angle value provided in degree-minute-second or degree-minute format.
		
		 
			 
			 
				 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Integer number of degrees, plus the angle direction. This element can be used for geographic Latitude and Longitude. For Latitude, the XML attribute direction can take the values "N" or "S", meaning North or South of the equator. For Longitude, direction can take the values "E" or "W", meaning East or West of the prime meridian. This element can also be used for other angles. In that case, the direction can take the values "+" or "-" (of SignType), in the specified rotational direction from a specified reference direction.
		
		 
			 
				 
					 
						 
							 
								 
									 
									 
									 
									 
								
							
							 
								 
							
						
					
				
			
		
	
	
	 
		 
			 Integer number of degrees in a degree-minute-second or degree-minute angular value, without indication of direction.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Decimal number of arc-minutes in a degree-minute angular value.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Integer number of arc-minutes in a degree-minute-second angular value.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Number of arc-seconds in a degree-minute-second angular value.
		
		 
			 
			 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/observation.xsd
 
	 
		 observation.xsd
		 Observation schema for GML 3.1     
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	 
	 
	 
	
	
	 
		 
			 This element contains or points to a description of a sensor, instrument or procedure used for the observation
		
	
	
	 
		 
			 This element contains or points to the specimen, region or station which is the object of the observation
		
	
	
	 
		 
			 Synonym for target - common word used for photographs
		
	
	
	 
		 
			 Container for an object representing the target or subject of an observation.
		
		 
			 
				 
				 
			
		
		 
	
	
	 
		 
			 The result of the observation: an image, external object, etc
		
	
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/ReadMe.txt
This set of XML Schema Documents for GML Version 3.1.1 has been edited
to reflect the corrigendum to documents 0GC 03-105r1 and OGC 04-092r4 
that is based on the change requests: 
OGC 05-068r1 "Store xlinks.xsd file at a fixed location"
OGC 05-081r2 "Change to use relative paths"
OGC 05-105 "Remove description and copyright tags from XML schema documents"

Arliss Whiteside, 2005-11-22





06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/referenceSystems.xsd
 
	 
		 
		 How to encode reference system definitions. Builds on several other parts of GML 3 to encode the data needed to define reference systems. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Reference System (RS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. The SC_CRS class is also encoded here, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. The RS_SpatialReferenceSystemUsingGeographicIdentifier class is not encoded, since it is not applicable to coordinate positions. The CI_Citation class is not directly encoded, since such information can be included as metaDataProperty elements which are optionally allowed. A modified version of the EX_Extent (DataType) class from ISO 19115 is currently encoded here, using GML 3 schema types. (A more extensive version of the EX_Extent package might be XML encoded in the future, probably in a separate extent.xsd schema.)
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111.
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. Contains text or refers to external text.
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
			 
				 
					 Unordered list of time periods whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	
	 
		 
			 A time period defining the temporal domain of this object.
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/temporal.xsd
 
	 
		 
		 The temporal schema for GML 3.1 provides constructs for handling time-varying spatial data. 
    This schema reflects a partial implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal primitives and complexes.
		
	
	
	 
		 
			 The abstract supertype for temporal objects.
		
		 
			 
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal primitives.
		
	
	
	 
		 
			 The abstract supertype for temporal primitives.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
						
					
				
			
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal complexes. 
			Temporal complex is an aggregation of temporal primitives as its components, 
			represents a temporal geometric complex and a temporal topology complex. 
			N.B. Temporal geometric complex is not defined in this schema.
		
	
	
	 
		 
			 The abstract supertype for temporal complexes.
		
		 
			 
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal geometric primitives.
		
	
	
	 
		 
			 The abstract supertype for temporal geometric primitives.
       A temporal geometry must be associated with a temporal reference system via URI. 
       The Gregorian calendar with UTC is the default reference system, following ISO 
       8601. Other reference systems in common use include the GPS calendar and the 
       Julian calendar.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 Omit back-pointers begunBy, endedBy.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 
				 
					 
						 
						 
					
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
		 
			 This model group is provided as an alternative to the abstract susbstitutionGroup head _timeLength.
		ISO 19136 comment 411
		
		 
			 
			 
		
	
	
	 
		 
			 This element is an instance of the primitive xsd:duration simple type to 
      enable use of the ISO 8601 syntax for temporal length (e.g. P5DT4H30M). 
      It is a valid subtype of TimeDurationType according to section 3.14.6, 
      rule 2.2.4 in XML Schema, Part 1.
		
	
	
	 
		 
			 This element is a valid subtype of TimeDurationType 
			according to section 3.14.6, rule 2.2.4 in XML Schema, Part 1.
		
	
	
	 
		 
			 This type extends the built-in xsd:decimal simple type to allow floating-point 
      values for temporal length. According to  the ISO 11404 model you have to use 
      positiveInteger together with appropriate values for radix and factor. The 
      resolution of the time interval is to one radix ^(-factor) of the specified 
      time unit (e.g. unit="second", radix="10", factor="3" specifies a resolution 
      of milliseconds). It is a subtype of TimeDurationType.
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 Standard units for measuring time intervals (see ISO 31-1).
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
			 
				 
					 
				
			
		
	
	
	
	
	 
		 
			 Direct representation of a temporal position
		
	
	
	 
		 
			 Direct representation of a temporal position. 
      Indeterminate time values are also allowed, as described in ISO 19108. The indeterminatePosition 
      attribute can be used alone or it can qualify a specific value for temporal position (e.g. before 
      2002-12, after 1019624400). 
      For time values that identify position within a calendar, the calendarEraName attribute provides 
      the name of the calendar era to which the date is referenced (e.g. the Meiji era of the Japanese calendar).
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 The ISO 19108:2002 hierarchy of subtypes for temporal position are collapsed 
      by defining a union of XML Schema simple types for indicating temporal position relative 
      to a specific reference system. 
      
      Dates and dateTime may be indicated with varying degrees of precision.  
      dateTime by itself does not allow right-truncation, except for fractions of seconds. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      
      An ordinal position may be referenced via URI identifying the definition of an ordinal era.  
      
      A time coordinate value is indicated as a decimal (e.g. UNIX time, GPS calendar).
		
		 
	
	
	 
		 
			 Calendar dates may be indicated with varying degrees of precision, 
      using year, year-month, date. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      time is used for a position that recurs daily (see clause 5.4.4.2 of ISO 19108:2002).
		
		 
	
	
	 
		 
			 This enumerated data type specifies values for indeterminate positions.
		
		 
			 
			 
			 
			 
		
	
	
	
	
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/temporalReferenceSystems.xsd
 
	 
		 
		 The Temporal Reference Systems schema for GML 3.1 provides constructs for handling various styles of temporal reference system. 
    This schema reflects a partial implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	
	
	 
		 
			 Abstract element serves primarily as the head of a substitution group for temporal reference systems.
		
	
	
	 
		 
			 A value in the time domain is measured relative to a temporal reference system. Common 
        types of reference systems include calendars, ordinal temporal reference systems, and 
        temporal coordinate systems (time elapsed since some epoch, e.g. UNIX time).
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 A temporal coordinate system is based on a continuous interval scale defined in terms of a single time interval.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 In an ordinal reference system the order of events in time can be well 
      established, but the magnitude of the intervals between them can not be 
      accurately determined (e.g. a stratigraphic sequence).
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Ordinal temporal reference systems are often hierarchically structured 
      such that an ordinal era at a given level of the hierarchy includes a 
      sequence of shorter, coterminous ordinal eras. This captured using the member/group properties.  
      
      Note that in this schema, TIme Ordinal Era is patterned on TimeEdge, which is a variation from ISO 19108.  
      This is in order to fulfill the requirements of ordinal reference systems based on eras delimited by 
      named points or nodes, which are common in geology, archeology, etc.  
      
      This change is subject of a change proposal to ISO
		
		 
			 
				 
					 
					 
					 
					 
					 
						 
							 An Era may be composed of several member Eras. The "member" element implements the association to the Era at the next level down the hierarchy.  "member" follows the standard GML property pattern whereby its (complex) value may be either described fully inline, or may be the target of a link carried on the member element and described fully elsewhere, either in the same document or from another service.
						
					
					 
						 
							 In a particular Time System, an Era may be a member of a group.  The "group" element implements the back-pointer to the Era at the next level up in the hierarchy. 

If the hierarchy is represented by describing the nested components fully in the their nested position inside "member" elements, then the parent can be easily inferred, so the group property is unnecessary.  

However, if the hierarchy is represented by links carried on the "member" property elements, pointing to Eras described fully elsewhere, then it may be useful for a child (member) era to carry an explicit pointer back to its parent (group) Era.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A calendar is a discrete temporal reference system 
      that provides a basis for defining temporal position to a resolution of one day. 
      A single calendar may reference more than one calendar era.
		
		 
			 
				 
					 
						 
							 Link to the CalendarEras that it uses as a reference for dating.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 In every calendar, years are numbered relative to the date of a 
      reference event that defines a calendar era. 
      In this implementation, we omit the back-pointer "datingSystem".
		
		 
			 
				 
					 
						 
							 Name or description of a mythical or historic event which fixes the position of the base scale of the calendar era.
						
					
					 
						 
							 Date of the referenceEvent expressed as a date in the given calendar. 
              In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true.
						
					
					 
						 
							 Julian date that corresponds to the reference date.  
              The Julian day numbering system is a temporal coordinate system that has an 
              origin earlier than any known calendar, 
              at noon on 1 January 4713 BC in the Julian proleptic calendar.  
              The Julian day number is an integer value; 
              the Julian date is a decimal value that allows greater resolution. 
              Transforming calendar dates to and from Julian dates provides a 
              relatively simple basis for transforming dates from one calendar to another.
						
					
					 
						 
							 Period for which the calendar era was used as a basis for dating.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A clock provides a basis for defining temporal position within a day. 
      A clock must be used with a calendar in order to provide a complete description of a temporal position 
      within a specific day.
		
		 
			 
				 
					 
						 
							 Name or description of an event, such as solar noon or sunrise, 
              which fixes the position of the base scale of the clock.
						
					
					 
						 
							 time of day associated with the reference event expressed as 
              a time of day in the given clock. The reference time is usually the origin of the clock scale.
						
					
					 
						 
							 24 hour local or UTC time that corresponds to the reference time.
						
					
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/temporalTopology.xsd
 
	 
		 
		 The temporal topology schema for ISO19136 provides constructs for handling topological complexes and 
		temporal feature relationships. 
		Temporal geometric characteristics of features are represented as instants and periods. 
		While, temporal context of features that does not relate to the position of time is described as connectivity relationships 
		among instants and periods. These relationships are called temporal topology as they do not change in time, 
		as long as the direction of time does not change. 
		It is used effectively in the case of describing a family tree expressing evolution of species, an ecological cycle, 
		a lineage of lands or buildings, or a history of separation and merger of administrative boundaries.
		This schema reflects a partial yet consistent implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	
	 
		 
			 This element represents temporal topology complex. It shall be the connected acyclic directed graph composed of time nodes and time edges.
		
	
	
	 
		 
			 A temporal topology complex.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A time topology complex property can either be any time topology complex element
			 encapsulated in an element of this type or an XLink reference to a remote time topology complex element 
			 (where remote includes elements located elsewhere in the same document). 
			 Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal topology primitives.
		
	
	
	 
		 
			 The element "complex" carries a reference to the complex containing this primitive.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A time topology primitive property can either hold any time topology complex element
			 eor carry an XLink reference to a remote time topology complex element 
			 (where remote includes elements located elsewhere in the same document). 
			 Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 "TimeNode" is a zero dimensional temporal topology primitive, 
			expresses a position in topological time, and is a start and an end of time edge, which represents states of time.
			Time node may be isolated. However, it cannot describe the ordering relationships with other primitives. 
			An isolated node may not be an element of any temporal topology complex.
		
	
	
	 
		 
			 Type declaration of the element "TimeNode".
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 A time node property can either be any time node element encapsulated in an element of this type 
			or an XLink reference to a remote time node element (where remote includes elements located elsewhere in the same document). 
			Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 TimeEdge is one dimensional temporal topology primitive,
			 expresses a state in topological time. It has an orientation from its start toward the end, 
			 and its boundaries shall associate with two different time nodes.
		
	
	
	 
		 
			 Type declaration of the element "TimeEdge".
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 A time edge property can either be any time edge element encapsulated in an element of this type 
			or an XLink reference to a remote time edge element (where remote includes elements located elsewhere in the same document). 
			Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Feature succession is a semantic relationship derived from evaluation of observer, and 
			Feature Substitution, Feature Division and Feature Fusion are defined as associations between 
			previous features and next features in the temporal context. 
			Successions shall be represented in either following two ways. 
			* define a temporal topological complex element as a feature element 
			* define an association same as temporal topological complex between features.
		
		 
			 
			 
			 
			 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/topology.xsd
 
	 
		 topology.xsd
		 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		
	
	 
	
	
	 
	
	 
		 
			 
		
	
	
	 
		 
			 Substitution group branch for Topo Primitives, used by TopoPrimitiveArrayAssociationType
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
			 
		
		 
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
				 
			
		
		 
	
	
	
	
	 
	
	 
		 
			 Its optional co-boundary is a set of connected directedEdges.  The orientation of one of these dirEdges is "+" if the Node is the "to" node of the Edge, and "-" if it is the "from" node.
		
		 
			 
				 
					 
					 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 There is precisely one positively directed and one negatively directed node in the boundary of every edge. The negatively and positively directed nodes correspond to the start and end nodes respectively. The optional coboundary of an edge is a circular sequence of directed faces which are incident on this edge in document order. Faces which use a particular boundary edge in its positive orientation appear with positive orientation on the coboundary of the same edge. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". An edge may optionally be realised by a 1-dimensional (curve) geometric primitive.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 . The topological boundary of a face consists of a set of directed edges. Note that all edges associated with a Face, including dangling and interior edges, appear in the boundary.  Dangling and interior edges are each referenced by pairs of directedEdges with opposing orientations.  The optional coboundary of a face is a pair of directed solids which are bounded by this face. If present, there is precisely one positively directed and one negatively directed solid in the coboundary of every face. The positively directed solid corresponds to the solid which lies in the direction of the positively directed normal to the face in any geometric realisation.  A face may optionally be realised by a 2-dimensional (surface) geometric primitive.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 The topological boundary of a TopoSolid consists of a set of directed faces. Note that all faces associated with the TopoSolid, including dangling faces, appear in the boundary. The coboundary of a TopoSolid is empty and hence requires no representation.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	 
	
	 
		 
			 The intended use of TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this point to other features via shared node definitions. Note the orientation assigned to the directedNode has no meaning in this context. It is preserved for symmetry with the types and elements which follow.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 The end Node of each directedEdge of a TopoCurveType
is the start Node of the next directedEdge of the TopoCurveType in document order.  The TopoCurve type and element represent a homogeneous topological expression, a list of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of TopoCurve is to appear within a line feature instance to express the structural and geometric relationships of this line to other features via the shared edge definitions.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 The TopoSurface type and element represent a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of TopoSurface is to appear within a surface feature instance to express the structural and possibly geometric relationships of this surface to other features via the shared face definitions.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 The TopoVolume type and element represent a homogeneous topological expression, a set of directed TopoSolids, which if realised are isomorphic to a geometric solid primitive. The intended use of TopoVolume is to appear within a 3D solid feature instance to express the structural and geometric relationships of this solid to other features via the shared TopoSolid definitions.  . Note the orientation assigned to the directedSolid has no meaning in three dimensions. It is preserved for symmetry with the preceding types and elements.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 This type represents a TP_Complex capable of holding topological primitives.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 Need schamatron test here that isMaximal attribute value is true
		
	
	
	 
		 
			 This Property can be used to embed a TopoComplex in a feature collection.
		
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 This type supports embedding topological primitives in a TopoComplex.
		
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 This type supports embedding an array of topological primitives in a TopoComplex
		
		
		 
			 
				 
			
		
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/units.xsd
 
	 
		 
		 Builds on gmlBase.xsd to encode units of measure (or uom), including definitions of units of measure and dictionaries of such definitions. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on most of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure (or uom). The definition includes a quantityType property, which indicates the phenomenon to which the units apply, and a catalogSymbol, which gives the short symbol used for this unit. This element is used when the relationship of this unit to other units or units systems is unknown.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is a base unit from the system of units.  A base unit cannot be derived by combination of other base units within this system.  Sometimes known as "fundamental unit".
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is defined through algebraic combination of more primitive units, which are usually base units from a particular system of units. Derived units based directly on base units are usually preferred for quantities other than the base units or fundamental quantities within a system.  If a derived unit is not the preferred unit, the ConventionalUnit element should be used instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is related to a preferred unit for this quantity type through a conversion formula.  A method for deriving this unit by algebraic combination of more primitive units, may also be provided.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Informal description of the phenomenon or type of quantity that is measured or observed. For example, "length", "angle", "time", "pressure", or "temperature". When the quantity is the result of an observation or measurement, this term is known as Observable Type or Measurand.
		
	
	
	 
		 
			 For global understanding of a unit of measure, it is often possible to reference an item in a catalog of units, using a symbol in that catalog. The "codeSpace" attribute in "CodeType" identifies a namespace for the catalog symbol value, and might reference the catalog. The "string" value in "CodeType" contains the value of a symbol that is unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units. For example, the symbol "cm" might indicate that it is the "m" symbol combined with the "c" prefix.
		
	
	
	 
	
	 
		 
			 Definition of one unit term for a derived unit of measure. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent can be positive or negative, but not zero.
		
		 
			 
				 
			
		
	
	
	 
		 
			 This element is included when this unit has an accurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 This element is included when the correct definition of this unit is unknown, but this unit has a rough or inaccurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 Relation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute "uom" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: "factor" or "formula".
		
		 
			 
				 
					 
						 
							 Specification of the scale factor by which a value using this unit of measure can be multiplied to obtain the corresponding value using the preferred unit of measure.
						
					
					 
						 
							 Specification of the formula by which a value using this unit of measure can be converted to obtain the corresponding value using the preferred unit of measure.
						
					
				
			
		
	
	
	 
		 
			 Paremeters of a simple formula by which a value using this unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type "double". These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the preferred unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
		
		 
			 
			 
			 
			 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/base/valueObjects.xsd
 
	 
		 valueObjects.xsd
		 GML conformant schema for Values in which the  
		    * scalar Value types and lists have their values recorded in simpleContent elements 
		    * complex Value types are built recursively
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	 
	 
	
	 
		 
			 Utility choice group which unifies generic Values defined in this schema document with 
			Geometry and Temporal objects and the Measures described above, 
			so that any of these may be used within aggregate Values.
		
		 
			
			 
			 
			
			 
		
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	
	 
		 
			 A value from two-valued logic, using the XML Schema boolean type.  An instance may take the values {true, false, 1, 0}.
		
	
	
	 
		 
			 XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
		
	
	
	
	 
		 
			 A term representing a classification.  It has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
		
	
	
	 
		 
			 A space-separated list of terms or nulls.  A single XML attribute codeSpace may be provided, which authorises all the terms in the list.
		
	
	
	
	 
		 
			 A numeric value with a scale.  The content of the element is an amount using the XML Schema type double which permits decimal or scientific notation.  An XML attribute uom (unit of measure) is required, whose value is a URI which identifies the definition of the scale or units by which the numeric value must be multiplied.
		
	
	
	 
		 
			 A space separated list of amounts or nulls.  The amounts use the XML Schema type double.  A single XML attribute uom (unit of measure) is required, whose value is a URI which identifies the definition of the scale or units by which all the amounts in the list must be multiplied.
		
	
	
	
	 
		 
			 An integer representing a frequency of occurrence.
		
	
	
	 
		 
			 A space-separated list of integers or nulls.
		
	
	
	
	
	
	 
		 
			 Aggregate value built from other Values using the Composite pattern. It contains zero or an arbitrary number of valueComponent elements, and zero or one valueComponents elements.  It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Aggregate value built using the Composite pattern.
		
	
	
	
	 
		 
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.  The member values may be scalars, composites, arrays or lists.  ValueArray has the same content model as CompositeValue, but the member values must be homogeneous.  The element declaration contains a Schematron constraint which expresses this restriction precisely.            Since the members are homogeneous, the referenceSystem (uom, codeSpace) may be specified on the ValueArray itself and implicitly inherited by all the members if desired.    Note that a_ScalarValueList is preferred for arrays of Scalar Values since this is a more efficient encoding.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
					 
						 ValueArray may not carry both a reference to a codeSpace and a uom
					
				
				 
					 
						 All components of   must be of the same type
						 All components of   must be of the same type
					
				
			
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.   _ScalarValueList is preferred for arrays of Scalar Values since this is more efficient.  Since "choice" is not available for attribute groups, an external constraint (e.g. Schematron) would be required to enforce the selection of only one of these through schema validation
		
	
	
	 
		 
		 
	
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Utility element to store a 2-point range of numeric values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of numeric values. If one member is a null, then this is a single ended interval.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Utility element to store a 2-point range of ordinal values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of ordinal values. If one member is a null, then this is a single ended interval.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Utility element to store a 2-point range of frequency values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of frequency values. If one member is a null, then this is a single ended interval.
		
		 
			 
		
	
	
	
	 
		 
			 Element which refers to, or contains, a Value
		
	
	
	 
		 
			 Element which refers to, or contains, a Value.  This version is used in CompositeValues.
		
	
	
	 
		 
			 GML property which refers to, or contains, a Value
		
		 
			 
		
		 
	
	
	
	 
		 
			 Element which refers to, or contains, a set of homogeneously typed Values.
		
	
	
	 
		 
			 GML property which refers to, or contains, a set of homogeneously typed Values.
		
		 
			 
		
	
	
	 
		 
			 Property whose content is a scalar value.
		
		 
			 
				 
					
					
				
			
		
	
	 
		 
			 Property whose content is a Boolean value.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Category.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Quantity.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Count.
		
		 
			 
				 
					 
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateOperations.xsd
 
	 
		 
		 Subset of coordinateOperations.xsd for GML 3.1.1 Common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateReferenceSystems.xsd
 
	 
		 
		 Subset of coordinateReferenceSystems.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateSystems.xsd
 
	 
		 
		 Subset of coordinateSystems.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/dataQuality.xsd
 
	 
		 
		 Subset of dataQuality.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.  
	
	
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/datums.xsd
 
	 
		 
		 Subset of datums.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is Greenwich, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is Greenwich. 
		
	
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. Value is a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/gmlCommonCRSsProfile.xsd
 
	 
		 commonCRSsProfile.xsd
		 GML 3.1.1 profile for Common CRSs. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/basicTypes.xsd
 
   
     basicTypes.xsd
	 Subset of basicTypes.xsd for GML 3.1.1 CRS Support profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14
	Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
  
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/crsSupportProfile.xsd
 
	 
		 crsSupportProfile.xsd
		 GML 3.1.1 profile for CRS Support. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/dictionary.xsd
 
	 
		 
		 Subset of dictionary.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
					
				
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/geometryBasic0d1d.xsd
 
	 
		 geometryBasic0d1d.xsd
		 Subset of geometryBasic0d1d.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
		 
			 The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
		
	
	
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of _Geometry.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Optional reference to the CRS used by this geometry.
		
		 
			 
				 In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType (see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the location the URI points to.
			
		
	
	
	 
		 
			 This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
		
		 
			 
		
	
	
	
	
	 
	
	 
		 
			 DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the "srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
		
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 DirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS).
		
		 
			 
				 
			
		
	
	
	
	
	 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
		
		 
			 
				 
				 
			
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 Subset of geometryBasic2d.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
		 
			 An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
		 
			 The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
		
		 
			 
		
	
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	
	 
		 
			 Encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
		
		 
			 
				 
					 
						 
							 The "posList" element provides a compact way to specifiy the coordinates of the control points, assuming all control points are in the same coordinate reference systems. The number of direct positions in the list must be at least four.
						
					
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/gmlBase.xsd
 
	 
		 
		 Subset of gmlBase.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that derive from AbstractGMLType and its descendents "by restriction".  A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.
		
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the simple link components from xlinks.xsd, with all members optional, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance.
		
		 
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object.
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/gmlCrsSupportProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 profile for CRS Support. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/measures.xsd
 
	 
		 
		 Subset of measures.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million.
		
		 
			 
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks.
		
		 
			 
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
		
		 
			 
		
	
	
	 
		 
			 Value of a speed, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour.
		
		 
			 
		
	
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians.
		
		 
			 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/referenceSystems.xsd
 
	 
		 
		 Subset of referenceSystems.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. 
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/units.xsd
 
	 
		 
		 Subset of units.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11.
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/coordinateOperations.xsd
 
	 
		 
		 Subset of coordinateOperations.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/coordinateReferenceSystems.xsd
 
	 
		 
		 Subset of coordinateReferenceOperations.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/dataQuality.xsd
 
	 
		 
		 Subset of dataQuality.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/datums.xsd
 
	 
		 
		 Subset of datums.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/gmlGridCRSsProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 grid CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/basicTypes.xsd
 
   
     basicTypes.xsd
		 Subset of basicTypes.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Arliss Whiteside. Last updated 2005-10-14 
  
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus  or authority for the term, such as the organisation who assigned the value,  or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/dictionary.xsd
 
	 
		 
		 Subset of dictionary.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-14 
	
	
	 
	
	
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
					
				
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/gmlBase.xsd
 
	 
		 
		 Subset of gmlBase.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-14 
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
	
	
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that  derive from AbstractGMLType and its descendents "by restriction".  A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object.
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/gmlSimpleDictionaryProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 profile for Dictionary. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
	
	
	 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/readme.txt
GML 3.1.1 Schema Package Readme

The schema package contained in this directory is the normative GML
3.1.1 schema set as approved by the OGC membership in May 2005. This
version corrects a number of errors in the GML 3.1.0 schemas that
prevented validation.

Reason for Changes: The XML Schema for GML 3.1 fails to validate using
several of the most popular XML processing software applications.

Four sets of errors have been found in the GML 3.1 Schema, with
corrections applied as described:

1. the content model for "metaDataProperty" is non-determinstic: you
can't have a choice group containing <any> with anything else 
	- delete _MetaData from the choice group

2. membership of the _timeLength, _Value, _ScalarValue,
_ScalarValueList substitution groups relies on an interpretation of the
XML Schema specification which is not uniformly accepted
	- replace with an explicit <choice> groups 

3. axisName (type="string") in grids.xsd clashes with axisName
(different type) in coordinateSystems.xsd 
	- Remove the latter, use the gml:name property instead

4. a "derivation-by-restriction" pattern used widely throughout the
schema has a cardinality constraint (minOccurs="0", and sometimes
maxOccurs="unbounded") applied to a "property" element in a base type,
where the property element is the head of a substitution group; in a
type derived by restriction in which one or more members of the
substitution group is selected, the validation procedure described in
the W3C XML Schema specification requires that the validation
constraint appear on a <choice> container element, rather than on the
substitution group member element
	- move the cardinality constraint up to the <sequence>
	  container element
	- remove unnecessary derivation-by-restriction chains,
	  particularly concerning derivation of property elements

As this pattern is used pervasively in GML, there are numerous changes
in almost all of the schema documents.

The revised schema has been tested with Xerces-J, XSV, .NET, MSXML and
no validation errors are found. 

http://schemas.opengis.net/gml/3.1.1/

2005-08-11





06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/smil/smil20-language.xsd
 
	
	 
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
				 
			
		
	
	 
		 
		 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
	
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
				 
			
		
	
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
				 
			
		
	
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
			
		
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/smil/smil20.xsd
 
	 
	
	 
	 
		 
		 
		 
	
	
	 
		 
	
	
	 
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	 
		 
		 
		 
	
	 
		 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 
				 
					 
					 
				
			
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
		 
		 
		 
	
	 
		 
	
	 
		 
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
	 
		 
		 
		 
	
	 
	 
		 
		 
		 
	
	 
	 
		 
		 
	
	
	 
		 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
		 
	
	 
		 
	
	 
		 
		 
	
	 
		 
	
	 
		 
		 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/smil/xml-mod.xsd
 
	 
		 
			 In due course, we should install the relevant ISO 2- and 3-letter
                codes as the enumerated possible values . . .
		
	
	 
		 
			 
				 
				 
			
		
	
	 
		 
		 
	




06-043r4 WCS Add Transaction Operation Folder/gml/3.1.1/xlink/xlinks.xsd
 
	 
		 xlinks.xsd
		 This document is now deprecated. Instead, please reference the xlinks.xsd file stored at the location http://schemas.opengis.net/xlink/1.0.0/xlinks.xsd.
		This modified xlink.xsd document is provided because some existing XML Schema Documents might still reference it at this location. In the future, this file will be made invalid so that any documents referencing it will no longer validate as expected. Subsequent to that, this file will be deleted from this location. This strategy is designed to smooth transition from the many xlinks.xsd files previously distributed throughout the OGC schema repository, to having only one official xlink.xsd document stored at http://schemas.opengis.net/xlink/1.0.0/xlinks.xsd.
		All references to xlinks.xsd documents, in existing XML Schema Documents within the OGC schema repository, have been modified to reference the xlinks.xsd file stored at http://schemas.opengis.net/xlink/1.0.0/xlinks.xsd. All include and import statements have also been changed to use relative paths to this xlinks.xsd document. Any new XML Schema documents shall also point to the new xlink/xlinks.xsd file and shall use a relative path. 
	
	 




06-043r4 WCS Add Transaction Operation Folder/ows/1.0.0/ows19115subset.xsd
 
	 
		 ows19115subset.xsd 2006-02-02
		 This XML Schema Document encodes the parts of ISO 19115 used by the common "ServiceIdentification" and "ServiceProvider" sections of the GetCapabilities operation response, known as the service metadata XML document. The parts encoded here are the MD_Keywords, CI_ResponsibleParty, and related classes. This XML Schema largely follows the current draft for ISO 19139, with the addition of documentation text extracted and edited from Annex B of ISO 19115. The UML package prefixes were omitted from XML names, and the XML element names were all capitalized, for consistency with other OWS Schemas. Also, the optional smXML:id attributes were omitted, as not being useful in a service metadata document.
		Copyright (c) 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Title of this resource, normally used for display to a human. 
		
	
	
	 
		 
			 Brief narrative description of this resource, normally used for display to a human. 
		
	
	
	 
	
	 
		 
			 Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe the subject. When needed, the optional "type" can name the type of the associated list of keywords that shall all have the same type. Also when needed, the codeSpace attribute of that "type" can reference the type name authority and/or thesaurus. 
			 For OWS use, the optional thesaurusName element was omitted as being complex information that could be referenced by the codeSpace attribute of the Type element. 
		
		 
			 
			 
		
	
	
	 
		 
			 Name or code with an (optional) authority. If the codeSpace attribute is present, its value should reference a dictionary, thesaurus, or authority for the name or code, such as the organisation who assigned the value, or the dictionary from which it is taken. 
			 Type copied from basicTypes.xsd of GML 3 with documentation edited, for possible use outside the ServiceIdentification section of a service metadata document. 
		
		 
			 
				 
			
		
	
	
	 
		 
			 Identification of, and means of communication with, person(s) responsible for the resource(s). 
			 For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The optional individualName element was made mandatory, since either the organizationName or individualName element is mandatory. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section. 
		
	
	
	 
		 
			 Identification of, and means of communication with, person responsible for the server. At least one of IndividualName, OrganisationName, or PositionName shall be included. 
		
		 
			 
			 
			 
			 
			 
		
	
	
	
	 
		 
			 Identification of, and means of communication with, person responsible for the server. 
			 For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section. 
		
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Name of the responsible person: surname, given name, title separated by a delimiter. 
		
	
	
	 
		 
			 Name of the responsible organization. 
		
	
	
	 
		 
			 Role or position of the responsible person. 
		
	
	
	 
		 
			 Function performed by the responsible party. Possible values of this Role shall include the values and the meanings listed in Subclause B.5.5 of ISO 19115:2003. 
		
	
	
	 
		 
			 Address of the responsible party. 
		
	
	
	 
		 
			 Information required to enable contact with the responsible person and/or organization. 
			 For OWS use in the service metadata document, the optional hoursOfService and contactInstructions elements were retained, as possibly being useful in the ServiceProvider section. 
		
		 
			 
				 
					 Telephone numbers at which the organization or individual may be contacted. 
				
			
			 
				 
					 Physical and email address at which the organization or individual may be contacted. 
				
			
			 
				 
					 On-line information that can be used to contact the individual or organization. OWS specifics: The xlink:href attribute in the xlink:simpleLink attribute group shall be used to reference this resource. Whenever practical, the xlink:href attribute with type anyURI should be a URL from which more contact information can be electronically retrieved. The xlink:title attribute with type "string" can be used to name this set of information. The other attributes in the xlink:simpleLink attribute group should not be used. 
				
			
			 
				 
					 Time period (including time zone) when individuals can contact the organization or individual. 
				
			
			 
				 
					 Supplemental instructions on how or when to contact the individual or organization. 
				
			
		
	
	
	 
		 
			 Reference to on-line resource from which data can be obtained. 
			 For OWS use in the service metadata document, the CI_OnlineResource class was XML encoded as the attributeGroup "xlink:simpleLink", as used in GML. 
		
		 
	
	
	 
		 
			 Telephone numbers for contacting the responsible individual or organization. 
		
		 
			 
				 
					 Telephone number by which individuals can speak to the responsible organization or individual. 
				
			
			 
				 
					 Telephone number of a facsimile machine for the responsible
organization or individual. 
				
			
		
	
	
	 
		 
			 Location of the responsible individual or organization. 
		
		 
			 
				 
					 Address line for the location. 
				
			
			 
				 
					 City of the location. 
				
			
			 
				 
					 State or province of the location. 
				
			
			 
				 
					 ZIP or other postal code. 
				
			
			 
				 
					 Country of the physical address. 
				
			
			 
				 
					 Address of the electronic mailbox of the responsible organization or individual. 
				
			
		
	




06-043r4 WCS Add Transaction Operation Folder/ows/1.0.0/owsAll.xsd
 
	 
		 owsAll.xsd 2006-09-27
		 This XML Schema Document includes and imports, directly and indirectly, all the XML Schemas defined by the OWS Common Implemetation Specification and used by WCS 1.1.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 




06-043r4 WCS Add Transaction Operation Folder/ows/1.0.0/owsCommon.xsd
 
	 
		 owsCommon.xsd 2006-02-02
		 This XML Schema Document encodes various parameters and parameter types that can be used in OWS operation requests and responses.
		Copyright (c) 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 XML encoded identifier of a standard MIME type, possibly a parameterized MIME type. 
		
		 
			 
		
	
	
	 
		 
			 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
		
		 
	
	
	 
	
	 
		 
			 This element either references or contains more metadata about the element that includes this element. To reference metadata stored remotely, at least the xlinks:href attribute in xlink:simpleLink shall be included. Either at least one of the attributes in xlink:simpleLink or a substitute for the AbstractMetaData element shall be included, but not both. An Implementation Specification can restrict the contents of this element to always be a reference or always contain metadata. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.) 
		
		 
			 
		
		 
			 
				 Reference to metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, the xlink:href attribute with type anyURI should include a URL from which this metadata can be electronically retrieved. 
			
		
		 
			 
				 Optional reference to the aspect of the element which includes this "metadata" element that this metadata provides more information about. 
			
		
	
	
	 
		 
			 Abstract element containing more metadata about the element that includes the containing "metadata" element. A specific server implementation, or an Implementation Specification, can define concrete elements in the AbstractMetaData substitution group. 
		
	
	
	
	 
	
	 
		 
			 XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. 
			 This type is adapted from the EnvelopeType of GML 3.1, with modified contents and documentation for encoding a MINIMUM size box SURROUNDING all associated data. 
		
		 
			 
				 
					 Position of the bounding box corner at which the value of each coordinate normally is the algebraic minimum within this bounding box. In some cases, this position is normally displayed at the top, such as the top left for some image coordinates. For more information, see Subclauses 10.2.5 and C.13. 
				
			
			 
				 
					 Position of the bounding box corner at which the value of each coordinate normally is the algebraic maximum within this bounding box. In some cases, this position is normally displayed at the bottom, such as the bottom right for some image coordinates. For more information, see Subclauses 10.2.5 and C.13. 
				
			
		
		 
			 
				 Usually references the definition of a CRS, as specified in [OGC Topic 2]. Such a CRS definition can be XML encoded using the gml:CoordinateReferenceSystemType in [GML 3.1]. For well known references, it is not required that a CRS definition exist at the location the URI points to. If no anyURI value is included, the applicable CRS must be either:
a)	Specified outside the bounding box, but inside a data structure that includes this bounding box, as specified for a specific OWS use of this bounding box type.
b)	Fixed and specified in the Implementation Specification for a specific OWS use of the bounding box type. 
			
		
		 
			 
				 The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here. 
			
		
	
	
	 
		 
			 Position instances hold the coordinates of a position in a coordinate reference system (CRS) referenced by the related "crs" attribute or elsewhere. For an angular coordinate axis that is physically continuous for multiple revolutions, but whose recorded values can be discontinuous, special conditions apply when the bounding box is continuous across the value discontinuity:
a)  If the bounding box is continuous clear around this angular axis, then ordinate values of minus and plus infinity shall be used.
b)  If the bounding box is continuous across the value discontinuity but is not continuous clear around this angular axis, then some non-normal value can be used if specified for a specific OWS use of the BoundingBoxType. For more information, see Subclauses 10.2.5 and C.13. 
			 This type is adapted from DirectPositionType and doubleList of GML 3.1. The adaptations include omission of all the attributes, since the needed information is included in the BoundingBoxType. 
		
		 
	
	
	 
	
	 
		 
			 XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. This box is specialized for use with the 2D WGS 84 coordinate reference system with decimal values of longitude and latitude. 
			 This type is adapted from the general BoundingBoxType, with modified contents and documentation for use with the 2D WGS 84 coordinate reference system. 
		
		 
			 
				 
					 
						 
							 Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13. 
						
					
					 
						 
							 Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13. 
						
					
				
				 
					 
						 This attribute can be included when considered useful. When included, this attribute shall reference the 2D WGS 84 coordinate reference system with longitude before latitude and decimal values of longitude and latitude. 
					
				
				 
					 
						 The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here. 
					
				
			
		
	
	
	 
		 
			 Two-dimensional position instances hold the longitude and latitude coordinates of a position in the 2D WGS 84 coordinate reference system. The longitude value shall be listed first, followed by the latitude value, both in decimal degrees. Latitude values shall range from -90 to +90 degrees, and longitude values shall normally range from -180 to +180 degrees. For the longitude axis, special conditions apply when the bounding box is continuous across the +/- 180 degrees meridian longitude value discontinuity:
a)  If the bounding box is continuous clear around the Earth, then longitude values of minus and plus infinity shall be used.
b)  If the bounding box is continuous across the value discontinuity but is not continuous clear around the Earth, then some non-normal value can be used if specified for a specific OWS use of the WGS84BoundingBoxType. For more information, see Subclauses 10.4.5 and C.13. 
		
		 
			 
		
	




06-043r4 WCS Add Transaction Operation Folder/ows/1.0.0/owsExceptionReport.xsd
 
	 
		 owsExceptionReport.xsd 2006-02-02
		 This XML Schema Document encodes the Exception Report response to all OWS operations.
		Copyright (c) 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
		 
			 Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request. 
		
		 
			 
				 
					 
						 Unordered list of one or more Exception elements that each describes an error. These Exception elements shall be interpreted by clients as being independent of one another (not hierarchical). 
					
				
			
			 
				 
					 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
				
			
			 
				 
					 Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 1766. When this attribute is omitted, the language used is not identified. 
				
			
		
	
	
	 
	
	 
		 
			 An Exception element describes one detected error that a server chooses to convey to the client. 
		
		 
			 
				 
					 Ordered sequence of text strings that describe this specific exception or error. The contents of these strings are left open to definition by each server implementation. A server is strongly encouraged to include at least one ExceptionText value, to provide more information about the detected error than provided by the exceptionCode. When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first. 
				
			
		
		 
			 
				 A code representing the type of this exception, which shall be selected from a set of exceptionCode values specified for the specific service operation and server. 
			
		
		 
			 
				 When included, this locator shall indicate to the client where an exception was encountered in servicing the client's operation request. This locator should be included whenever meaningful information can be provided by the server. The contents of this locator will depend on the specific exceptionCode and OWS service, and shall be specified in the OWS Implementation Specification. 
			
		
	




06-043r4 WCS Add Transaction Operation Folder/ows/1.0.0/owsServiceProvider.xsd
 
	 
		 owsServiceProvider.xsd 2006-02-02
		 This XML Schema Document encodes the common "ServiceProvider" section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceProvider class of ISO 19119 (OGC Abstract Specification Topic 12).
		Copyright (c) 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Metadata about the organization that provides this specific service instance or server. 
		
		 
			 
				 
					 
						 A unique identifier for the service provider organization. 
					
				
				 
					 
						 Reference to the most relevant web site of the service provider. 
					
				
				 
					 
						 Information for contacting the service provider. The OnlineResource element within this ServiceContact element should not be used to reference a web site of the service provider. 
					
				
			
		
	




06-043r4 WCS Add Transaction Operation Folder/ows/1.0.0/ReadMe.txt
The XML Schema Documents for the OpenGIS® Web Services (OWS) 
Implementation Specification version 1.0.0 [OGC 05-008] that are modified for use in WCS 1.1 have been moved into the WCS/1.1 directory.

Arliss Whiteside, 2006-07-24





06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/Examples/exampleTransaction1.xml
 
	 
		 
			 
			 
			 
		
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owcsAll.xsd
 
	 
		 owcsAll.xsd 2006-10-05
		 This XML Schema Document includes, directly and indirectly, all the OWS Common XML Schema Documents defined by the OGC Web Coverage Service (WCS). 
			Copyright (c) 2006 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	 




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsCoverages.xsd
 
	 
		 wcsCoverageGroup.xsd 2006-10-05
		 This XML Schema Document specifies types and elements for groups of coverages, allowing each coverage to include or reference multiple files. 
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Group of coverages that can be used as the response from the WCS GetCoverage operation, allowing each coverage to include or reference multiple files. This CoverageGroup element may also be used for outputs from, or inputs to, other OWS operations. 
			 This element is specified for use where the ManifestType contents are needed for an operation response or request that contains a group of one or more coverages, and the Manifest element name and contents are not considered to be specific enough. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 Complete data for one coverage, referencing each coverage file either remotely or locallly in the same message. 
		
	
	
	 
	
	 
		 
			 Complete reference to a remote resource that needs to be retrieved from an OWS using an XML-encoded operation request. This element shall be used, within an Coverage element that is used for input data, when that input data needs to be retrieved from another web service using a XML-encoded OWS operation request. This element shall not be used for local payload input data or for requesting the resource from a web server using HTTP Get. 
		
		 
			 
				 
					 
						 
							 The XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. 
						
					
					 
						 
							 Reference to the XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. The referenced message shall be attached to the same message (using the cid scheme), or be accessible using a URL. 
						
					
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsDataIdentification.xsd
 
	 
		 owsDataIdentification.xsd 2006-09-27
		 This XML Schema Document encodes the parts of the MD_DataIdentification class of ISO 19115 (OGC Abstract Specification Topic 11) which are expected to be used for most datasets. This Schema also encodes the parts of this class that are expected to be useful for other metadata. Both are expected to be used within the Contents section of OWS service metadata (Capabilities) documents.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Human-readable descriptive information for the object it is included within.
This type shall be extended if needed for specific OWS use to include additional metadata for each type of information. This type shall not be restricted for a specific OWS to change the multiplicity (or optionality) of some elements. 
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Basic metadata identifying and describing a set of data. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier or name of this dataset. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	
	 
		 
			 Extended metadata identifying and describing a set of data. This type shall be extended if needed for each specific OWS to include additional metadata for each type of dataset. If needed, this type should first be restricted for each specific OWS to change the multiplicity (or optionality) of some elements. 
		
		 
			 
				 
					 
						 
							 Unordered list of zero or more bounding boxes whose union describes the extent of this dataset. 
						
					
					 
						 
							 Unordered list of zero or more references to data formats supported for server outputs. 
						
					
					 
						 
							 Unordered list of zero or more available coordinate reference systems. 
						
					
				
			
		
	
	
	 
		 
			 Unique identifier or name of this dataset. 
		
	
	
	 
		 
			 Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
	 
		 
			 Coordinate reference system in which data from this data(set) or resource is available or supported. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
		 
			 Access constraint applied to assure the protection of privacy or intellectual property, or any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. 
		
	
	
	 
		 
			 Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE (case insensitive) shall be used to mean no fees or terms. 
		
	
	
	 
		 
			 Identifier of a language used by the data(set) contents. This language identifier shall be as specified in IETF RFC 1766. When this element is omitted, the language used is not identified. 
		
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsDomainType.xsd
 
	 
		 owsDomainType.xsd 2006-07-28
		 This XML Schema Document encodes the allowed values (or domain) of a quantity, usually for an input or output parameter to an OWS. Such a parameter is sometimes called a variable, quantity, literal, or typed literal. Such a quantity can use one of many data types, including double, integer, boolean, string, or URI. The allowed values can also be encoded for a quantity that is not explicit or not transferred, but is constrained by a server implementation.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Valid domain (or allowed set of values) of one quantity, with its name or identifier. 
		
		 
			 
				 
					 
						 Name or identifier of this quantity. 
					
				
			
		
	
	
	 
		 
			 Valid domain (or allowed set of values) of one quantity, with needed metadata but without a quantity name or identifier. 
		
		 
			 
			 
				 
					 Optional default value this quantity, which should be included when this quantity has a default value. 
				
			
			 
				 
					 Meaning metadata, which should be referenced for each quantity. 
				
			
			 
				 
					 Data type metadata, which should be referenced for each quantity. 
				
			
			 
				 
					 Unit of measure, which should be included when this set of PossibleValues has units or a more complete reference system. 
				
			
			 
				 
					 Optional unordered list of other metadata about this quantity. A list of required and optional other metadata elements for this quantity should be specified in the Implementation Specification for this service. 
				
			
		
	
	
	 
		 
			 Specifies the possible values of this quantity. 
		
			 
				 
				 
				 
				 
			
	
	
	 
		 
			 Specifies that any value is allowed for this quantity.
		
		 
	
	
	 
		 
			 Specifies that no values are allowed for this quantity.
		
		 
	
	
	 
		 
			 Reference to externally specified list of all the valid values and/or ranges of values for this quantity. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.) 
		
		 
			 
				 
					 
						 Human-readable name of the list of values provided by the referenced document. Can be empty string when this list has no name. 
					
					 
					
				
			
		
	
	
	 
		 
			 Indicates that this quantity has units or a reference system, and identifies the unit or reference system used by the AllowedValues or ValuesReference. 
		
			 
				 
					 
						 Identifier of unit of measure of this set of values. Should be included then this set of values has units (and not a more complete reference system). 
					
				
				 
					 
						 Identifier of reference system used by this set of values. Should be included then this set of values has a reference system (not just units). 
					
				
			
	
	
	
	 
		 
			 List of all the valid values and/or ranges of values for this quantity. For numeric quantities, signed values shall be ordered from negative infinity to positive infinity. 
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A single value, encoded as a string. This type can be used for one value, for a spacing between allowed values, or for the default value of a quantity. 
		
		 
			 
		
	
	
	 
		 
			 The default value for a quantity for which multiple values are allowed. 
		
	
	
	 
	
	 
		 
			 A range of values of a numeric quantity. This range can be continuous or discrete, defined by a fixed spacing between adjacent valid values. If the MinimumValue or MaximumValue is not included, there is no value limit in that direction. Inclusion of the specified minimum and maximum values in the range shall be defined by the rangeClosure. 
		
		 
			 
			 
			 
				 
					 Shall be included when the allowed values are NOT continuous in this range. Shall not be included when the allowed values are continuous in this range. 
				
			
		
		 
			 
				 Shall be included unless the default value applies. 
			
		
	
	
	 
		 
			 Minimum value of this numeric quantity. 
		
	
	
	 
		 
			 Maximum value of this numeric quantity. 
		
	
	
	 
		 
			 The regular distance or spacing between the allowed values in a range. 
		
	
	
	 
		 
			 Specifies which of the minimum and maximum values are included in the range. Note that plus and minus infinity are considered closed bounds. 
		
		 
			 
				 
					 
						 The specified minimum and maximum values are included in this range. 
					
				
				 
					 
						 The specified minimum and maximum values are NOT included in this range. 
					
				
				 
					 
						 The specified minimum value is NOT included in this range, and the specified maximum value IS included in this range. 
					
				
				 
					 
						 The specified minimum value IS included in this range, and the specified maximum value is NOT included in this range. 
					
				
			
		
	
	
	
	 
		 
			 References metadata about a quantity, and provides a name for this metadata. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.) 
		
		 
			 
				 
					 Human-readable name of the metadata described by associated referenced document. 
				
				 
			
		
	
	
	 
		 
			 Reference to data or metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, this attribute should be a URL from which this metadata can be electronically retrieved. Alternately, this attribute can reference a URN for well-known metadata. For example, such a URN could be a URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Reference to the meaning or semantics of this value or set of values. 
		
	
	
	 
		 
			 Reference to the data type of this value or set of values. In this case, the '"reference" attribute can reference a URN for a well-known data type. For example, such a URN could be a data type identification URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Reference to the reference system used by this set of values, including the unit of measure whenever applicable (as is normal). In this case, the '"reference" attribute can reference a URN for a well-known reference system, such as for a coordinate reference system (CRS). For example, such a URN could be a CRS identification URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Reference to the unit of measure of this value or set of values. In this case, the '"reference" attribute can reference a URN for a well-known unit of measure (uom). For example, such a URN could be a UOM identification URN defined in the "ogc" URN namespace. 
		
	
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsGetCapabilities.xsd
 
	 
		 owsGetCapabilities.xsd 2006-09-27
		 This XML Schema Document defines the GetCapabilities operation request and response XML elements and types, which are common to all OWSs. This XML Schema shall be edited by each OWS, for example, to specify a specific value for the "service" attribute.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional sections shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. 
		
		 
			 
			 
			 
		
		 
		 
	
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. This base type shall be extended by each specific OWS to include the additional required "service" attribute, with the correct value for that OWS. 
		
		 
			 
				 
					 When omitted, server shall return latest supported version. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". 
				
			
		
		 
			 
				 When omitted or not supported by server, server shall return latest complete service metadata document. 
			
		
	
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	
	 
		 
			 Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information.  
		
		 
			 
		
	
	
	 
		 
			 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. 
		
		 
	
	
	 
		 
			 Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. 
		
		 
			 
		
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsInterpolationMethod.xsd
 
	 
		 owsInterpolationMethod.xsd 2006-09-01
		 This XML Schema Document defines interpolation method elements and types, used by the OGC Web Coverage Service (WCS) version 1.1 and intended to be included in OWS Common version 1.1. 
		Copyright (c) 2006 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	
	 
		 
			 Interpolation method(s) that can be used when continuous grid coverage resampling is needed. 
		
		 
			 
				 
					 
						 Spatial interpolation method used when client doesn’t specify one. This default interpolation method should be the recommended or normal method for this coverage range field. 
					
				
				 
					 
						 Unordered list of identifiers of other spatial interpolation methods that server can apply to this range field. When the default interpolation method is “none”, no other methods should be listed. 
					
				
			
		
	
	
	 
		 
			 Identifier of a spatial interpolation method applicable to continuous grid coverages, plus the optional "null Resistance" parameter. 
		
		 
			 
				 
					 
						 Identifier of how the server handles null values when spatially interpolating values in this field using this interpolation method. This identifier shall be selected from the referenced dictionary. This parameter shall be omitted when the rule for handling nulls is unknown. 
					
				
			
		
	
	
	 
		 
			 Identifier of an interpolation method applicable to continuous grid coverages. The string in this type shall be one interpolation type identifier string, selected from the referenced dictionary. 
			 Adapts gml:CodeWithAuthorityType from GML 3.2 for this WCS purpose, allowing the codeSpace to be omitted but providing a default value for the standard interpolation methods defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. 
		
		 
			 
				 
					 
						 Reference to a dictionary that specifies allowed values for interpolation method identifier strings and nullResistance identifier strings. This reference defaults to the standard interpolation methods dictionary specified in WCS 1.1.0. 
					
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsManifest.xsd
 
	 
		 owsManifest.xsd 2006-09-27
		 This XML Schema Document specifies types and elements for document or resource references and for package manifests that contain multiple references. The contents of each type and element specified here can be restricted and/or extended for each use in a specific OWS specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
	
	 
		 
			  Base for a reference to a remote or local resource. 
			 This type contains only a restricted and annotated set of the attributes from the xlink:simpleLink attributeGroup. 
		
		 
		 
				 
					 Reference to a remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (such as a multipart mime message), the xlink:href must start with the prefix cid:. 
			
		
		 
			 
				 Reference to a resource that describes the role of this reference. When no value is supplied, no particular role value is to be inferred. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
		 
			 
				 Describes the meaning of the referenced resource in a human-readable fashion. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
	
	
	 
	
	 
		 
			 Complete reference to a remote or local resource, allowing including metadata about that resource. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier of the referenced resource. 
						
					
					 
					 
						 
							 The format of the referenced resource. This element is omitted when the mime type is indicated in the http header of the reference. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this resource. A list of optional metadata elements for this ReferenceType could be specified in the Implementation Specification for each use of this type in a specific OWS. 
						
					
				
			
		
	
	
	
	 
	
	 
		 
			 Logical group of one or more references to remote and/or local resources, allowing including metadata about that group. A Group can be used instead of a Manifest that can only contain one group. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Unordered list of one or more groups of references to remote and/or local resources. 
		
		 
			 
				 
					 
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsOperationsMetadata.xsd
 
	 
		 owsOperationsMetadata.xsd 2006-09-27
		 This XML Schema Document encodes the basic contents of the "OperationsMetadata" section of the GetCapabilities operation response, also known as the Capabilities XML document.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements. 
		
		 
			 
				 
					 
						 Metadata for unordered list of all the (requests for) operations that this server interface implements. The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of parameter valid domains that each apply to one or more operations which this server interface implements. The list of required and optional parameter domain limitations shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this server. The list of required and optional constraints shall be specified in the Implementation Specification for this service. 
					
				
				 
			
		
	
	
	 
		 
			 Individual software vendors and servers can use this element to provide metadata about any additional server abilities. 
		
	
	
	 
		 
			 Metadata for one operation that this server implements. 
		
		 
			 
				 
					 
						 Unordered list of Distributed Computing Platforms (DCPs) supported for this operation. At present, only the HTTP DCP is defined, so this element will appear only once. 
					
				
				 
					 
						 Optional unordered list of parameter domains that each apply to this operation which this server implements. If one of these Parameter elements has the same "name" attribute as a Parameter element in the OperationsMetadata element, this Parameter element shall override the other one for this operation. The list of required and optional parameter domain limitations for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of additional metadata about this operation and its' implementation. A list of required and optional metadata elements for this operation should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the operation request parameters or provide the XML Schemas for the operation request.) 
					
				
			
			 
				 
					 Name or identifier of this operation (request) (for example, GetCapabilities). The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
				
			
		
	
	
	 
		 
			 Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.

		
		 
			 
				 
			
		
	
	
	 
		 
			 Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup. 
		
		 
			 
				 
					 
						 Connect point URL prefix and any constraints for the HTTP "Get" request method for this operation request. 
					
				
				 
					 
						 Connect point URL and any constraints for the HTTP "Post" request method for this operation request. 
					
				
			
		
	
	
	 
		 
			 Connect point URL and any constraints for this HTTP request method for this operation request. In the OnlineResourceType, the xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL. The other attributes in the xlink:simpleLink attribute group should not be used. 
		
		 
			 
				 
					 
						 
							 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this request method for this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata or Operation element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this request method for this operation shall be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/owsServiceIdentification.xsd
 
	 
		 owsServiceIdentification.xsd 2006-09-27
		 This XML Schema Document encodes the common "ServiceIdentification" section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceIdentification class of ISO 19119 (OGC Abstract Specification Topic 12).
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 General metadata for this specific server. This XML Schema of this section shall be the same for all OWS. 
		
		 
			 
				 
					 
						 
							 
								 A service type name from a registry of services. For example, the values of the codeSpace URI and name and code string may be "OGC" and "catalogue." This type name is normally used for machine-to-machine communication. 
							
						
						 
							 
								 Unordered list of one or more versions of this service type implemented by this server. This information is not adequate for version negotiation, and shall not be used for that purpose. 
							
						
						 
							 
								 Unordered list of identifiers of Application Profiles that are implemented by this server. This element should be included for each specified application profile implemented by this server. The identifier value should be specified by each Application Profile. If this element is omitted, no meaning is implied. 
							
						
						 
							 
								 If this element is omitted, no meaning is implied. 
							
						
						 
							 
								 Unordered list of access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. If this element is omitted, no meaning is implied. 
							
						
					
				
			
		
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/wcsCommon.xsd
 
	 
		 wcsContents.xsd 2006-09-23
		 
			 http://schemas.opengis.net/wcs/1.1.0/gml4wcs.xsd
		
		 This XML Schema Document encodes the elements and types that are shared by multiple WCS operations. 
		Copyright (c) 2006 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	
	 
		 
			 XML encoded WCS operation request base, for all operations except GetCapabilities. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
		 
			 
				 Service type identifier, where the value is the OWS type abbreviation. For WCS operation requests, the value is "WCS". 
			
		
		 
			 
				 Specification version for WCS version and operation. See Version parameter Subclause 7.3.1 of OWS Common for more information. 
			
		
	
	
	 
	
	 
		 
			 Unambiguous identifier. Although there is no formal restriction on characters included, these identifiers shall be directly usable in GetCoverage operation requests for the specific server, whether those requests are encoded in KVP or XML. Each of these encodings requires that certain characters be avoided, encoded, or escaped (TBR). 
		
		 
			 
		
	
	
	 
		 
			 List of time positions and periods. The time positions and periods should be ordered from the oldest to the newest, but this is not required. 
		
		 
			 
			 
		
	
	
	 
		 
			 This is a variation of the GML TimePeriod, which allows the beginning and end of a time-period to be expressed in short-form inline using the begin/endPosition element, which allows an identifiable TimeInstant to be defined simultaneously with using it, or by reference, using xlinks on the begin/end elements. 
			 (Arliss) What does this mean? What do the TimeResolution and "frame" mean? 
		
		 
			 
			 
			 
		
		 
	
	
	 
		 
			 
      Base type for describing temporal length or distance. The value space is further 
      constrained by subtypes that conform to the ISO 8601 or ISO 11404 standards.
      
		
		 
	
	




06-043r4 WCS Add Transaction Operation Folder/wcs/1.1.0/wcsTransaction.xsd
 
	 
		 wcsHarvest.xsd 2006-10-05
		 This XML Schema Document defines the Harvest operation request and response elements and types, for the OGC Web Coverage Service (WCS). 
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Request to a WCS to perform the Transaction operation. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
	
	
	 
		 
			 
				 
					 
						 
							 List of one or more coverages to be added, modified, or deleted. Each coverage with its metadata shall be referenced by one Coverage reference group within this CoveragesType. Each new or modified coverage provided to a WCS server shall include all the metadata needed to populate one CoverageDescription object, as specified in Subclause 9.3 with the exception of the metadata that is specific to a specific server. Similarly, each new or modified coverage shall also include all the metadata needed to populate one or more CoverageSummary objects, as specified in Subclause 8.3.3 with the exception of the metadata that is specific to a specific server. In addition, each new unrectified but georeferenced coverage (image) shall include the georeferencing coordinate Transformation(s). These coverages are normally referenced remotely, but can be included in the Transaction request message. 
						
					
					 
						 
							 Location to respond to when server has completed processing this operation request. When this parameter is omitted from the Transaction operation request, this operation shall be executed synchronously and immediately by the server, with the operation response returned to the client following operation execution. When this parameter is included, this operation shall be executed asynchronously by the server. In that case, the server shall return an operation acknowledgement to the client immediately following operation acceptance. When operation execution is later completed, the (normal or exception) operation response shall be sent by the server to the response handler referenced by this parameter value. 
						
					
				
			
		
	
	
	
	 
		 
			 XML encoded acknowledgement of an operation request. 
		
	
	
	 
		 
			 
				 
					 Data and time this Acknowledgement message was generated. 
				
			
			 
				 
					 Copy of Transaction operation request being acknowledged. This copy should be included when expected to be useful to clients. 
				
			
		
	
	




06-043r4 WCS Add Transaction Operation Folder/xlink/1.0.0/xlinks.xsd
 
	 
		 xlinks.xsd v3.0b2 2001-07
		 
			GML 3.0 candidate xlinks schema. Copyright (c) 2001 OGC, All Rights Reserved.
		
	
	
	
	 
	
	 
	 
	 
	
	 
		 
			 
        The 'show' attribute is used to communicate the desired presentation 
        of the ending resource on traversal from the starting resource; it's 
        value should be treated as follows: 
        new - load ending resource in a new window, frame, pane, or other 
              presentation context
        replace - load the resource in the same window, frame, pane, or 
                  other presentation context
        embed - load ending resource in place of the presentation of the 
                starting resource
        other - behavior is unconstrained; examine other markup in the 
                link for hints 
        none - behavior is unconstrained 
      
		
		 
			 
				 
				 
				 
				 
				 
			
		
	
	 
		 
			 
        The 'actuate' attribute is used to communicate the desired timing 
        of traversal from the starting resource to the ending resource; 
        it's value should be treated as follows:
        onLoad - traverse to the ending resource immediately on loading 
                 the starting resource 
        onRequest - traverse from the starting resource to the ending 
                    resource only on a post-loading event triggered for 
                    this purpose 
        other - behavior is unconstrained; examine other markup in link 
                for hints 
        none - behavior is unconstrained
      
		
		 
			 
				 
				 
				 
				 
			
		
	
	
	 
	 
	 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
	
	 
		 
	
	 
		 
	



