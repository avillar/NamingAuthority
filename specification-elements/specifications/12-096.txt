
  
 

 

Open Geospatial Consortium 
Approval Date: 2013-01-18 

Posted Date: 2013-02-01 

Reference number of this document: OGC 12-096 

Reference URL for this document: www.opengis.net/def/doc-type/per/OWS9-GPS-SWE  

Category: Engineering Report 

Editor: Dr. Mike Botts 

OWS-9: Engineering Report: Use of SWE Common and 
SensorML for GPS Messaging  

 

Copyright © 2013 Open Geospatial Consortium. 
To obtain additional rights of use, visit http://www.opengeospatial.org/legal/. 

Warning 

This document is not an OGC Standard. This document is an OGC Public 
Engineering Report created as a deliverable in an OGC Interoperability Initiative 
and is not an official position of the OGC membership. It is distributed for review 
and comment. It is subject to change without notice and may not be referred to as 
an OGC Standard. Further, any OGC Engineering Report should not be referenced 
as required or mandatory technology in procurements.  

 

  



OGC 12-096 

ii Copyright © 2013 Open Geospatial Consortium. 
 

 

Abstract 

This document is an Engineering Report for the OWS-9 Interoperability Test Bed. The 
focus of the document is discussion and demonstration on the use of SWE Common Data 
2.0 encodings to support an interoperable messaging description and encoding for the 
next generation GPS message streams into and out of the GPS navigation accuracy 
improvement services. The connection of SWE Common to SensorML 2.0 and the 
application of SensorML to describe the processing surrounding GPS navigation 
improvement will also be discussed. 

Keywords 

ogcdoc, ows9, gps, swe common, swe, sensorml 

What is OGC Web Services 9 (OWS-9)? 

OWS-9 builds on the outcomes of prior OGC interoperability initiatives and is organized 
around the following threads: 

-   Aviation: Develop and demonstrate the use of the Aeronautical Information Exchange 
Model (AIXM) and the Weather Exchange Model (WXXM) in an OGC Web Services 
environment, focusing on support for several Single European Sky ATM Research 
(SESAR) project requirements as well as FAA (US Federal Aviation Administration) 
Aeronautical Information Management (AIM) and Aircraft Access to SWIM (System 
Wide Information Management) (AAtS) requirements. 

-   Cross-Community Interoperability (CCI): Build on the CCI work accomplished in 
OWS–8 by increasing interoperability within communities sharing geospatial data, 
focusing on semantic mediation, query results delivery, data provenance and quality and 
Single Point of Entry Global Gazetteer. 

-   Security and Services Interoperability (SSI): Investigate 5 main activities: Security 
Management, OGC Geography Markup Language (GML) Encoding Standard 
Application Schema UGAS (UML to GML Application Schema) Updates, Web Services 
Façade, Reference Architecture Profiling, and Bulk Data Transfer. 

-   OWS Innovations: Explore topics that represent either new areas of work for the 

Document type:  OGC® Engineering Report 
Document subtype: NA 
Document stage:  Approved for public release 
Document language:  English 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. iii 
 

Consortium (such as GPS and Mobile Applications), a desire for new approaches to 
existing technologies to solve new challenges (such as the OGC Web Coverage Service 
(WCS) work), or some combination of the two. 

-   Compliance & Interoperability Testing & Evaluation (CITE): Develop a suite of 
compliance test scripts for testing and validation of products with interfaces 
implementing the following OGC standards: Web Map Service (WMS) 1.3 Interface 
Standard, Web Feature Service (WFS) 2.0 Interface Standard, Geography Markup 
Language (GML) 3.2.1 Encoding Standard, OWS Context 1.0 (candidate encoding 
standard), Sensor Web Enablement (SWE) standards, Web Coverage Service for Earth 
Observation (WCS-EO) 1.0 Interface Standard, and TEAM (Test, Evaluation, And 
Measurement) Engine Capabilities. 

The OWS-9 sponsors are: AGC (Army Geospatial Center, US Army Corps of 
Engineers), CREAF-GeoViQua-EC, EUROCONTROL, FAA (US Federal Aviation 
Administration), GeoConnections - Natural Resources Canada, Lockheed Martin 
Corporation, NASA (US National Aeronautics and Space Administration), NGA (US 
National Geospatial-Intelligence Agency), USGS (US Geological Survey), UK DSTL 
(UK MoD Defence Science and Technology Laboratory).  



OGC 12-096 

iv Copyright © 2013 Open Geospatial Consortium. 
 

License Agreement 

Permission is hereby granted by the Open Geospatial Consortium, ("Licensor"), free of charge and subject to the terms set forth below, 
to any person obtaining a copy of this Intellectual Property and any associated documentation, to deal in the Intellectual Property 
without restriction (except as set forth below), including without limitation the rights to implement, use, copy, modify, merge, publish, 
distribute, and/or sublicense copies of the Intellectual Property, and to permit persons to whom the Intellectual Property is furnished to 
do so, provided that all copyright notices on the intellectual property are retained intact and that each person to whom the Intellectual 
Property is furnished agrees to the terms of this Agreement. 

If you modify the Intellectual Property, all copies of the modified Intellectual Property must include, in addition to the above 
copyright notice, a notice that the Intellectual Property includes modifications that have not been approved or adopted by LICENSOR. 

THIS LICENSE IS A COPYRIGHT LICENSE ONLY, AND DOES NOT CONVEY ANY RIGHTS UNDER ANY PATENTS 
THAT MAY BE IN FORCE ANYWHERE IN THE WORLD. 

THE INTELLECTUAL PROPERTY IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
PURPOSE, AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. THE COPYRIGHT HOLDER OR HOLDERS INCLUDED 
IN THIS NOTICE DO NOT WARRANT THAT THE FUNCTIONS CONTAINED IN THE INTELLECTUAL PROPERTY WILL 
MEET YOUR REQUIREMENTS OR THAT THE OPERATION OF THE INTELLECTUAL PROPERTY WILL BE 
UNINTERRUPTED OR ERROR FREE. ANY USE OF THE INTELLECTUAL PROPERTY SHALL BE MADE ENTIRELY AT 
THE USER’S OWN RISK. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ANY CONTRIBUTOR OF 
INTELLECTUAL PROPERTY RIGHTS TO THE INTELLECTUAL PROPERTY BE LIABLE FOR ANY CLAIM, OR ANY 
DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING 
FROM ANY ALLEGED INFRINGEMENT OR ANY LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF 
CONTRACT, NEGLIGENCE OR UNDER ANY OTHER LEGAL THEORY, ARISING OUT OF OR IN CONNECTION WITH 
THE IMPLEMENTATION, USE, COMMERCIALIZATION OR PERFORMANCE OF THIS INTELLECTUAL PROPERTY. 

This license is effective until terminated. You may terminate it at any time by destroying the Intellectual Property together with all 
copies in any form. The license will also terminate if you fail to comply with any term or condition of this Agreement. Except as 
provided in the following sentence, no such termination of this license shall require the termination of any third party end-user 
sublicense to the Intellectual Property which is in force as of the date of notice of such termination. In addition, should the Intellectual 
Property, or the operation of the Intellectual Property, infringe, or in LICENSOR’s sole opinion be likely to infringe, any patent, 
copyright, trademark or other right of a third party, you agree that LICENSOR, in its sole discretion, may terminate this license 
without any compensation or liability to you, your licensees or any other party. You agree upon termination of any kind to destroy or 
cause to be destroyed the Intellectual Property together with all copies in any form, whether held by you or by any third party. 

Except as contained in this notice, the name of LICENSOR or of any other holder of a copyright in all or part of the Intellectual 
Property shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Intellectual Property without 
prior written authorization of LICENSOR or such copyright holder. LICENSOR is and shall at all times be the sole entity that may 
authorize you or any third party to use certification marks, trademarks or other special designations to indicate compliance with any 
LICENSOR standards or specifications. 

This Agreement is governed by the laws of the Commonwealth of Massachusetts. The application to this Agreement of the United 
Nations Convention on Contracts for the International Sale of Goods is hereby expressly excluded. In the event any provision of this 
Agreement shall be deemed unenforceable, void or invalid, such provision shall be modified so as to make it valid and enforceable, 
and as so modified the entire Agreement shall remain in full force and effect. No decision, action or inaction by LICENSOR shall be 
construed to be a waiver of any rights or remedies available to it. 

None of the Intellectual Property or underlying information or technology may be downloaded or otherwise exported or reexported in 
violation of U.S. export laws and regulations. In addition, you are responsible for complying with any local laws in your jurisdiction 
which may impact your right to import, export or use the Intellectual Property, and you represent that you have complied with any 
regulations or registration procedures required by applicable law to make this license enforceable 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. v 
 

Contents Page 

1	   Introduction ................................................................................................................... 1	  
1.1	   Scope ....................................................................................................................... 1	  
1.2	   Document contributor contact points ...................................................................... 1	  
1.3	   Revision history ...................................................................................................... 1	  
1.4	   Future work ............................................................................................................. 2	  
1.5	   Forward ................................................................................................................... 2	  

2	   References ..................................................................................................................... 2	  
3	   Terms and definitions ................................................................................................... 3	  
4	   Abbreviated terms ......................................................................................................... 3	  
5	   Conventions .................................................................................................................. 4	  

5.1	   UML notation .......................................................................................................... 4	  
6	   Overview ....................................................................................................................... 5	  

6.1	   The GPS Correction Process ................................................................................... 6	  
6.2	   Messaging and file formats within the GPS system ............................................... 7	  
6.3	   Project Purpose and Goals ...................................................................................... 8	  
6.4	   Benefits of using SWE services and encodings ...................................................... 8	  

7	   Current Message Formats ........................................................................................... 10	  
7.1	   Introduction ........................................................................................................... 10	  
7.2	   BINEX Binary Message Stream ........................................................................... 10	  
7.3	   EPOCHA Real-Time Data Files ........................................................................... 11	  
7.4	   EPOCHA Filter and Predicted Output Stream ...................................................... 11	  
7.5	   SP3 DataSets ......................................................................................................... 13	  
7.6	   Rinex Data Set ...................................................................................................... 13	  

8	   SOS server and SWE Common Encodings of GPS Data ........................................... 14	  
8.1	   Overview ............................................................................................................... 14	  
8.2	   EPOCHA Filter and Predicted Output (previously HDF) .................................... 15	  
8.3	   NGA Precise Ephemeris and State Vectors (previously SP3) .............................. 16	  
8.4	   EPOCHA Real-Time Data .................................................................................... 17	  
8.5	   Raw Navigation Observation Data (previously RINEX Nav) .............................. 17	  
8.6	   MSNCC Binary Stream ........................................................................................ 18	  

The MSNCC Binary stream was encoded in SWE Common Data in the project but 
due to sensitivity of the data,  the descriptions and the data itself are not 
made available to the public within the ER nor the SOS. ..................................... 18	  

8.7	   Calculated positions used in the demonstration .................................................... 18	  
9	   Demonstration Description and Observations ............................................................ 20	  

9.1	   Demonstration Objectives ..................................................................................... 20	  
9.2	   SOS Implementations ........................................................................................... 21	  
9.3	   Use Case 1: Uncorrected Positions ....................................................................... 22	  



OGC 12-096 

vi Copyright © 2013 Open Geospatial Consortium. 
 

9.4	   Execution Notes For All Use Cases ...................................................................... 23	  
9.5	   Use Case 2: Post-Processing Corrected Positions ................................................ 26	  
9.6	   Use Case 3: Real-Time Corrected Positions ......................................................... 26	  
9.7	   Demonstration results ........................................................................................... 27	  

10	   Conclusions and Vision ............................................................................................ 31	  
11	   Recommended Future Directions ............................................................................. 32	  
Annex A  SWE Common descriptions of the EPOCHA Output Message Stream ........... 33	  
Bibliography ..................................................................................................................... 43	  
 

 

 



OGC® Engineering Report OGC 12-096 

 

Copyright © 2013 Open Geospatial Consortium. 1 
 

OGC® OWS-9 Engineering Report: Use of SWE Common and 
SensorML for GPS Messaging 

1 Introduction 

1.1 Scope 

This Engineering Report (ER) describes the approach and results of an OGC 
Interoperability Project supported under the OWS-9 Innovation thread. The purpose of 
this project has been to explore and demonstrate: 

- the potential for supporting ALL data files and data streams within GPS system 
using the OGC SWE Common Data standard 

- the ability to describe GPS processing workflows using the OGC Sensor Model 
Language (SensorML) standard 

- web-enabling the processing and application of corrected GPS data using the 
OGC Sensor Web Enablement (SWE) encodings and web services 

-  

1.2 Document contributor contact points 

All questions regarding this document should be directed to the editor or the contributors: 

Name Organization 
Dr. Mike Botts Botts Innovative Research Inc. 

mike.botts@botts-inc.net  
Alex Robin Sensia Software 

alex.robin@sensiasoftware.com  
Peter D. Kopcha National Geospatial Intelligence Agency 

Peter.D.Kopcha@nga.mil  
 

1.3 Revision history 

Date Release Editor Primary clauses 
modified 

Description 

7/25/2012 Initial 
draft 

Botts all Initial draft of the ER 

11/20/2012 mid draft Botts Message types Added sections describing format descriptions 



OGC 12-096 

2 

    

Copyright © 2013 Open Geospatial Consortium. 
 

01/04/2013 Final draft Botts all Final draft 

 

 

1.4 Future work 

Future efforts in this project are desired to: 

 Design consistent data models for all message types in the GPS system 

 Incorporate SWE Common Data readers/writers in the GPSTk processing apps 

 Create SensorML descriptions for GPSTk apps 

 Demonstrate on-demand design and execution of SensorML-defined workflows 
for GPS correction 

 Demonstrate on-demand precise geolocation of UAVs, ground vehicles, and 
hand-held sensors using SWE services and encodings 
 

1.5 Forward 

Attention is drawn to the possibility that some of the elements of this document may be 
the subject of patent rights. The Open Geospatial Consortium shall not be held 
responsible for identifying any or all such patent rights. 

Recipients of this document are requested to submit, with their comments, notification of 
any relevant patent claims or other intellectual property rights of which they may be 
aware that might be infringed by any implementation of the standard set forth in this 
document, and to provide supporting documentation. 

2 References 

The following documents are referenced in this document. For dated references, 
subsequent amendments to, or revisions of, any of these publications do not apply. For 
undated references, the latest edition of the normative document referred to applies. 

OGC 06-121r3, OGC® Web Services Common Standard 

OGC 08-094r1, OGC® SWE Common Data Model Encoding Standard 

OGC 12-000, OGC® SensorML: Model and XML Encoding Standard 

In addition to this document, this report includes several XML Schema Document files as 
specified in Annex A. 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 3 
 

3 Terms and definitions 

For the purposes of this report, the definitions specified in Clause 4 of the OWS Common 
Implementation Standard [OGC 06-121r3] shall apply. In addition, the following terms 
and definitions apply. 

3.1  
ephemeris 
A list of coordinates or variables required to calculate the past, present, or future position 
of a celestial body, (including a satellite). 

3.2  
Global Positioning System (GPS) 
A space-based satellite navigation system that provides location and time information in 
all weather conditions, anywhere on or near the Earth where there is an unobstructed line 
of sight to four or more GPS satellites. 

3.3  
Pseudorange 
The calculated distance between a GPS satellite and a GPS receiver based on the time 
difference between when the signal was sent and when it was received. Because there are 
errors in the measured times, the term “pseudorange” is applied rather than “range”. 

4 Abbreviated terms 

BINEX Binary Exchange format 
COTS Commercial Off The Shelf 

EPOCHA Estimation and Prediction of Orbits and Clocks to High Accuracy 
GPS Global Position System 

GPSIS Global Positioning System Information Service 
HDF Hierarchical Data File 

MSNCC Monitor Station Network Control Center 
NGA National Geospatial Intelligence Agency 

NMR Navigation Replacement Message 
NPAF Near-real time Performance Assessment File 

NSOF Near-real time Satellite Outage File 
PAF  Performance Assessment File 

PRED  Predicted Ephemeris/State Vector Data File 
PSF Prediction Support File 

SOF Satellite Outage File 



OGC 12-096 

4 

    

Copyright © 2013 Open Geospatial Consortium. 
 

SensorML Sensor Model Language 
SWE Sensor Web Enablement 

 

5 Conventions 

5.1 UML notation 

Some diagrams appearing in this standard may be presented using the Unified Modeling 
Language (UML) static structure diagram, as described in Subclause 5.2 of [OGC 06-
121r3]. 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 5 
 

6 Overview 

The Global Positioning System (GPS) on which we have all come to depend, relies on 
accurate knowledge regarding the position, measured time, and state of the 28-32 
satellites making up the GPS network. This information is provided to GPS devices and 
processing centers in the form of satellite ephemeris data and status reports. The accuracy 
of the system relies on communication between the satellites themselves, the data 
collection systems, the data processing centers, and the GPS devices that ultimately 
determine their own location. This communication is through various data streams that 
consist of predefined message structures and encodings. 

The accuracy of the positions derived from the GPS can be negatively affected by clock 
drift on-board the satellites, as well as errors in predicted satellite position derived from 
ephemeris, and signal delays resulting from atmospheric interference. Improvements to 
the derived positions within the current operational system can occur (1) through 
occasional (once a day or once every few hours) updates to the satellites clock and 
ephemeris on-board information, or (2) through post-processing to derived improved 
positions for applications such as geodetic surveying or image processing and 
georectification. Efforts are underway for providing for timely updates to satellites or 
positioning devices in order to improve the accuracy of positioning in real-time. 

 

Figure 1. Typical flow of data within the GPS correction system. 



OGC 12-096 

6 

    

Copyright © 2013 Open Geospatial Consortium. 
 

6.1 The GPS Correction Process 

One view of the current system for correcting GPS positioning is provided in Fig. 1 
above. A GPS positioning unit (shown as a device with red thumb tack) receives signals 
from four or more GPS satellites with each satellite providing the signal time and the 
satellite’s current location and status. From the time difference between when the 
message was sent by the satellite and when it was received by the device, a “pseudo-
range” can be calculated providing an approximate distance to the satellite. Combining 
this information for each satellite in view and using the satellite positions provided, a 
position of the device is derived by the GPS positioning device. The accuracy of this 
calculation is again dependent on the synchronization of the satellite clocks and that on 
the device, as well as the accuracy of satellite positions provided and the amount of 
interference of the signal between the satellites and the device. 

In addition, the information being sent by all satellites in the GPS system (28-32) are also 
received at various receiving stations, stored as raw navigation data, and used to correct 
the clock and position information for all of the satellites. The correction process can 
utilize one or more operational processing systems for correcting satellite clock and 
ephemeris information. Each of these systems tends to utilize particular data sources and 
often output their results in different message structures and encodings. 

One such system for correcting the timing and positioning of GPS satellites is EPOCHA 
(Estimation and Prediction of Orbits and Clocks to High Accuracy). Currently, 
navigation and timing improvements are only uploaded to the satellites and GPS devices 
once a day. As part of the EPOCHA system, the National Geospatial Intelligence Agency 
(NGA) is researching the logistics and benefits of updating the navigation and timing 
information at much shorter time frames (e.g. every 2-15 minutes).  

The improved positional state of the GPS satellites is typically provided as improved 
ephemeris (i.e. Keplerian orbital elements) or as discreet locations, velocities, and 
accelerations of the satellites at given moments in time (i.e. epochs). 

The corrected satellite clock and state data can then be (1) sent to the GPS satellites to 
update their current clock and positional information, (2) used by processing centers to 
improve geolocation of real-time or archived GPS-derived positions or remotely sensed 
observations, or (3) sent to GPS devices in the field to improve their real-time position 
measurements.  

The post-processing use case typically consists of two processing stages: (1) correcting 
the clock and positional information of the GPS satellites at given epochs (i.e. times), and 
(2) using these corrected satellite states along with archived pseudo-ranges measured 
between a GPS device and 4 or more GPS satellites.  

A processing system that is in widespread use for applying these corrections to positional 
measurements from GPS devices is the GPS Toolkit (GPSTk). GPSTk is open-source, 
C++ software developed by the Applied research Laboratory (ARL) at the University of 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 7 
 

Texas at Austin. This software will be used to demonstrate the processing of SWE 
Common encoded GPS data within a web-enabled environment.  

6.2 Messaging and file formats within the GPS system 

As shown in Fig. 1, the data flowing between various archiving and processing 
components of the GPS correction system exist in a wide variety of data formats. 
Currently, these message streams consist of message structures defined through various 
documents, some of which have restricted access. Additionally, these streams and the 
messages they contain, are being encoded in various formats, including for example, a 
binary exchange format (BINEX), a system-specific XML schema, a HDF5 file format, 
text-based formats, and others. Additionally, the message components within each of 
these formats are inconsistent, even though two messages (e.g. Filter/PRED and SP3) 
may contain similar information.  Often a processing system is required to read data and 
output results in multiple formats and to understand the inconsistencies between them.  

By forcing different software and processing systems to support multiple message 
structures and data formats, the current system inhibits the effective use of these data by  

(1) requiring several format-specific readers and writers to be developed in the 
appropriate software language (i.e. C, C++, Java, Python, etc.) required by each 
application system,  

(2) providing inconsistent message structures between the data used or produced by 
different processing systems,  

(3) requiring careful and thus error-prone human interpretation of the data 
components based on the documentation provided for each 

(4) a lack of interoperability with regard to using data designed for or produced by a 
different particular processing system 

(5) discouragement of new and innovative software and processing solutions 
 

This Engineering Report addresses the feasibility of utilizing the OGC SWE Common 
Data v2.0 standard as a potentially beneficial means of supporting all message and data 
streams within future generations of the GPS operational network. In particular, the 
current effort is focused on the message streams that provide the input to and output from 
the processing systems that are responsible for providing improved position and time 
accuracy within the GPS network. Such processing systems are responsible for ingesting 
streams of data consisting of satellite ephemeris, clock information, and satellite health 
reports over a given time period (e.g. five minutes), and then calculating and outputting 
improved navigation and timing information for use by the satellites and ultimately the 
GPS receiver. 

 



OGC 12-096 

8 

    

Copyright © 2013 Open Geospatial Consortium. 
 

6.3 Project Purpose and Goals 

The purpose and scope of this project is to provide initial investigation and demonstration 
of: 

(1) the potential for supporting ALL data files and data streams within GPS system 
using the OGC SWE Common Data standard 

(2) the ability to describe all processing using the OGC Sensor Model Language 
(SensorML) standard 

(3) web-enabling the processing and application of corrected GPS data using the 
OGC Sensor Web Enablement (SWE) encodings and web services 

The goals for the project included: 

(1) Describe ALL of these data messages using the SWE Common Data standard 
with NO loss of information and NO loss of efficiency 

(2) Implement OC Sensor Observation Services (SOS) to provide web access to any 
of these data products on-demand 

(3) Develop a processing workflow to provide on-demand GPS data for three use 
cases: 

a. Use Case 1 – Uncorrected Positions 

b. Use Case 2 – Post-Processing Corrected Positions 

c. Use Case 3 – Real-Time Corrected Positions 
 
 

6.4 Benefits of using SWE services and encodings 

The Sensor Web Enablement (SWE) set of OGC standards provides a comprehensive 
framework for establishing interoperable, web-enabled, capabilities for the discovery, 
access to, and processing of virtually any sensor-related data. This project primarily 
focuses on the SWE Common Data 2.0 standard and the Sensor Observation Service 
(SOS) 2.0 standards, with an eye on the potential application of SensorML 2.0 in future 
efforts. 

The SWE Common Data standard was developed in order to provide a common means of 
supporting all data, and particularly data associated with sensor description, sensor 
output, and sensor and actuator tasking. The SWE Common Data standard was designed 
in a way that uses the eXtensible Markup Language (XML) for what it is good for (i.e. 
providing a web-enabled standard for robustly describing information), but doesn’t force 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 9 
 

the use of XML for what it is bad for (e.g. providing a compact, efficient, and rapidly 
parsed block or stream of large amounts of data values).     

Specifically, the benefits of the SWE Common Data standard are: 

 The data can be fully described in a machine- and human-readable XML 
document 

– data type, units, constraints, semantics, quality, labels, etc. 

– both the data structure and encoding of messages/records are 
unambiguously defined 

 The data values themselves can be encoded in highly-efficient binary or ASCII 
text blocks or streams 

 A single software application is able to read any data described in SWE Common 
data 

 Any process can be described in SensorML using SWE Common as inputs, 
outputs, and parameters 

 Any SensorML-defined process can participate in easily-defined executable 
workflows 

 

 



OGC 12-096 

10 Copyright © 2013 Open Geospatial Consortium. 
 

7 Current Message Formats 

7.1 Introduction 

Models and SWE Common Data encodings were generated for five different files or 
message streams used in the current GPS framework. Two of these provides the input 
stream into the EPOCHA process system, while the other three streams represent various 
output products from EPOCHA. These five streams include a wide variety of predefined 
messages (or records), one of which is encoded in a BINEX binary stream, the second is 
an XML-based format, a third is currently encoded within binary HDF5 data files, while 
the fourth and fifth are in a text-based file with pre-defined fixed line-row format.  

For the BINEX binary data stream, we are able to robustly describe the message 
components and encodings in SWE Common such that the existing stream can be 
effectively parse with a generic SWE parser without any modification to the data stream. 
For the other formats, the messages and data stream have been modeled and described in 
SWE Common allowing for a highly efficient and easily parsed ASCII or binary stream 
of data values. 

The ability to provide SWE Common encodings for these five different data streams, 
each containing various message types, illustrates that SWE Common is able to support a 
wide variety of both ASCII and binary messages and data streams. The ability to support 
highly compact binary streams and ASCII data blocks furthermore illustrates that SWE 
Common encoding can be highly efficient. In addition, without any custom software or a 
priori knowledge of these message components or encoding, all of these streams can be 
parsed by a generic SWE data parser. 

7.2 BINEX Binary Message Stream 

The first data stream serves as input to the EPOCHA system. This legacy format supports 
a multiplexed binary stream using a BINEX protocol. A multiplexed stream is one that 
supports various disparate messages provided in any order. 

The message types include: 

 Smoothed Observation Message 

 Raw Observation Message 

 Weather Observation Message 

 Receiver Hardware Information 

 Satellite Vehicle Information 

 Monitor Station information 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 11 
 

 Moving Platform Information (TBD) 

 Clock Observations 

 Satellite Orbital and Clock Initial Condition 

The message structure of this binary stream has been described in SWE Common in such 
a way as to preserve the integrity (i.e. structure and binary encoding) of the current 
BINEX stream. Access to these data is restricted and not presented here. 

7.3 EPOCHA Real-Time Data Files 

The EPOCHA Real-Time Data apply to GPS satellites and is encoded as XML. Most of 
the data values are encoded as attributes rather than elements within the XML file. These 
data serve as output from the EPOCHA processing system. 

The message types include: 

 Satellite Outage File (provides dates and times for current or predicted outages for 
a given satellite in the GPS constellation) 

 Near-real Time Satellite Outage File 

 Performance Assessment File (provides position and velocity errors, clock bias 
and drift, and other satellite performance variables for a given satellite in the GPS 
constellation) 

 Near-real Time Performance Assessment File 

 Prediction Support File 

 Navigation Message Replacement (provides corrections to the ephemeris of a 
given satellite in the GPS constellation) 

 Predicted Ephemeris/State Vector Data File (provides position and velocity errors 
as well as clock drift and bias for each satellite in the GPS constellation) 

All of these messages have been encoded in SWE Common Data and can be served from 
a Sensor Observation Service (SOS).  

7.4 EPOCHA Filter and Predicted Output Stream 

The EPOCHA Filter and Predicted Output Stream is a product of the EPOCHA 
processing system and is provided in a HDF-5 (Hierarchical Data Format) file. It is 
received by GPS clients that use the information to correct GPS-derived positions. 
[NOTE: there is no documentation for this data format ] 

The messages for the Filter and Predictive Data include:  



OGC 12-096 

12 Copyright © 2013 Open Geospatial Consortium. 
 

 Antenna Data  

 Attitude Info Data  

 Clock Data 

 Corrected Measurement Data 

 Covariance Submatrix Data 

 Earth Data 

 Earth Orientation Parameters 

 Iers Ut1 Minus UTC Data 

 Master Clock Comp Data 

 Master Clock Data 

 Measurement Info Data 

 Product Data 

 Radiation Pressure Data 

 Satellite Covariance Data 

 Satellite Data (provides position and velocity as well as other parameters for each 
satellite in the GPS consellation) 

 Station Data 

 Station Earth Covariance Data 

 Station Epoch Data 

 Submatrix Data 

 Troposhere Data 

 Thrust Data 

 Weather Data 

 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 13 
 

All of these messages are currently being ingested from the HDF file and automatically 
being encoded and served by an SOS as SWE Common Data. 

7.5 SP3 DataSets 

SP3 datasets provide corrected position, velocity, and clock data for all active GPS 
satellites for one or more given epochs. They are encoded as a text file which utilizes a 
predefined line-column packing arrangement, as defined by “The Extended Standard 
Product 3 Orbit Format (SPS3-c)” by Steve Hilla (17 August 2010). The message types 
supported by SP3 include: 

 Satellite ephemeris 

 Satellite State Vectors 

 

7.6 Rinex Data Set 

Rinex data is commonly used for transferring both satellite ephemeris and observation 
pseudorange data. Rinex is a row-column delimited text-based format defined by the GPS 
receiver interface document. The message types for Rinex include: 

 Satellite ephemeris 

 GPS device observations (pseudorange data) 

 

 

 



OGC 12-096 

14 Copyright © 2013 Open Geospatial Consortium. 
 

8 SOS server and SWE Common Encodings of GPS Data 

8.1 Overview 

While the GPS data products could be served from separate SOS instances as illustrated 
in the GPS data service diagrams above, all the products used in this project were served 
from a single SOS. The various products are separated as different “offerings” while the 
different message (or records) are provided by different “observable properties” within 
these offerings.  

Typically, upon accessing a newly-discovered SOS, the first action of a SWE-enabled 
clients is to request the capabilities of the service. This is accomplished with a 
GetCapabilities request which returns an XML document describing the offerings, the 
observable properties of each offering, the filtering capabilities, temporal and spatial 
range of the data, and other general information. The full GetCapabilities request for the 
GPS data for this project is given by: 

http://botts-inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetCapabilities  

These capabilities can be used by a generic SWE-enabled client to auto-generate a 
graphical user interface (GUI) for manual selection of desired data products or to connect 
particular products to workflows. 

Likewise, the SWE Common Data descriptions of the offerings are available directly 
from the SOS. These descriptions are machine readable and can be automatically parsed 
by a generic SWE Common Data reader without a priori knowledge of the data. Thus, 
before requesting actual data values, the next step for a SWE client would typically be to 
request a description of the contents and encoding of the offering that is desired. This is 
accomplished with a GetResultTemplate request which will include an offering ID and an 
observedProperty ID: 

http://botts-inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate 
        &offering=[offering ID]&observedProperty=[observableProperty ID]  

 

An operational example of the GetResultTemplate for the offering, 
urn:nga:datasets:gps:sp3-pe, and observableProperty, http://www.nga.gov/def/sp3/PosVel, is 
given by the following request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate&offering=urn:nga:data
sets:gps:sp3-pe&observedProperty=http://www.nga.gov/def/sp3/PosVel 

 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 15 
 

Now that the client has the ability to understand and parse the dataset, one or more 
request can be sent to retrieve results based on filters advertised within the capabilities 
document. This is accomplished using the GetResult request to the SOS which includes 
the offering ID, observableProperty ID, and filter values as shown in the following: 

 

http://botts-inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult 
        &offering=[offering ID]&observedProperty=[observablePropertyID] 
        &temporalFilter=phenomenonTime,2012-10-27T17:00:00Z/2012-10-27T17:30:00Z  

 

An operational example of the GetResult for the offering, urn:nga:datasets:gps:sp3-pe, and 
observableProperty, http://www.nga.gov/def/sp3/PosVel, is given by the following request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult&offering=urn:nga:datasets:gps:s
p3-
pe&observedProperty=http://www.nga.gov/def/sp3/PosVel&temporalFilter=phenomenonTime,2012-
10-27T16:40:00Z/2012-10-27T17:30:00Z 

 

8.2 EPOCHA Filter and Predicted Output (previously HDF) 

The EPOCHA filter and predicted output data are provided by the observable: 

urn:nga:datasets:epocha:predictor 
 

and includes the observable properties: 

http://www.nga.gov/def/epocha/AllData 
http://www.nga.gov/def/epocha/AntennaData 
http://www.nga.gov/def/epocha/AttitudeInfoData 
http://www.nga.gov/def/epocha/ClockData 
http://www.nga.gov/def/epocha/CovarianceSubmatrixData 
http://www.nga.gov/def/epocha/EarthData 
http://www.nga.gov/def/epocha/EarthOrienationParamData 
http://www.nga.gov/def/epocha/IersUt1MinusUtcData 
http://www.nga.gov/def/epocha/MasterClockData 
http://www.nga.gov/def/epocha/RadiationPressureData 
http://www.nga.gov/def/epocha/SatelliteCovarianceData 
http://www.nga.gov/def/epocha/SatelliteData 

 

Thus, one can choose to receive all of these data using the AllData observable property or 
select individual data products. These can be requested as an open-ended data stream or 
as a block of text or binary encoded data. Either way, the first step again is to get an 
understanding of the data structure and encoding, as in the GetResultTemplate example 
below (for AntennaData): 



OGC 12-096 

16 Copyright © 2013 Open Geospatial Consortium. 
 

 

 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate&offering=urn:nga:data
sets:epocha:predictor&observedProperty=http://www.nga.gov/def/epocha/AntennaData 

 

The data values in a text block encoding are provided the by request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult&offering=urn:nga:datasets:epoc
ha:predictor&observedProperty=http://www.nga.gov/def/epocha/AntennaData&temporalFilter=pheno
menonTime,2012-07-05T12:30:00Z/2012-07-05T14:30:00Z 

 

8.3 NGA Precise Ephemeris and State Vectors (previously SP3) 

The NGA corrected ephemeris is provided by the observable: 

urn:nga:datasets:gps:sp3-pe 
 

and the observable properties: 

http://www.nga.gov/def/sp3/Position 
http://www.nga.gov/def/sp3/Velocity 
http://www.nga.gov/def/sp3/PosVel 

 

An example of the SWE Common Data description (for PosVel) is provided by the 
following request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate&offering=urn:nga:data
sets:gps:sp3-pe&observedProperty=http://www.nga.gov/def/sp3/PosVel 

The data values in a text block encoding are provided the by link: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult&offering=urn:nga:datasets:gps:s
p3-
pe&observedProperty=http://www.nga.gov/def/sp3/PosVel&temporalFilter=phenomenonTime,2012-
10-27T16:40:00Z/2012-10-27T17:30:00Z 

 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 17 
 

8.4 EPOCHA Real-Time Data 

The EPOCHA Real-Time Ephemeris Predictor data is provided by the observable: 

urn:nga:datasets:gpsis 
 

and the observable property: 

http://www.nga.gov/def/gpsis/PRED 
 

An example of the SWE Common Data description (for PRED) is provided by the 
following request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate&offering=urn:nga:data
sets:gpsis&observedProperty=http://www.nga.gov/def/gpsis/PRED 

while the data values are returned by the request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult&offering=urn:nga:datasets:gpsis
&observedProperty=http://www.nga.gov/def/gpsis/PRED&temporalFilter=phenomenonTime,2012-
10-27T16:30:00Z/2012-10-27T18:30:00Z 

 

8.5 Raw Navigation Observation Data (previously RINEX Nav) 

The raw navigation data is provided by the observable: 

 urn:nga:datasets:gps:rinex 

and the observable properties: 

http://igscb.jpl.nasa.gov/def/gps/raw-obs/ALL 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/C1 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/C2 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/P1 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/P2 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/L1 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/L2 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/D1 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/D2 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/S1 
http://igscb.jpl.nasa.gov/def/gps/raw-obs/S2 

 
An example of a SWE Common Data description is provided by the request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate&offering=urn:nga:data
sets:gps:rinex&observedProperty=http://igscb.jpl.nasa.gov/def/gps/raw-obs/ALL 



OGC 12-096 

18 Copyright © 2013 Open Geospatial Consortium. 
 

while the data values can be obtained from the request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult&offering=urn:nga:datasets:gps:r
inex&observedProperty=http://igscb.jpl.nasa.gov/def/gps/raw-
obs/ALL&temporalFilter=phenomenonTime,2012-10-27T16:56:35Z/2012-10-27T17:57:55Z 

 

8.6 MSNCC Binary Stream 

The MSNCC Binary stream was encoded in SWE Common Data in the project but due to 
sensitivity of the data,  the descriptions and the data itself are not made available to the 
public within the ER nor the SOS. 
 

8.7 Calculated positions used in the demonstration  

The calculated runway positions used in the demonstration are provided by the offering: 

 urn:nga:datasets:gps:nav 

and includes the observable properties: 

http://www.nga.gov/def/gps-nav/BROADCAST 
http://www.nga.gov/def/gps-nav/NGA-PE 
http://www.nga.gov/def/gps-nav/PRED 
http://www.nga.gov/def/gps-nav/REF 
 
 

An example of the SWE Common Data description for the BROADCAST data can be 
obtained with the request: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResultTemplate&offering=urn:nga:data
sets:gps:nav&observedProperty=http://www.nga.gov/def/gps-nav/BROADCAST 

 

The values from this SOS are calculated on-demand as described in the following 
sections. An example GetResult request is: 

http://botts-
inc.com/SosGPS/sos?service=SOS&version=2.0&request=GetResult&offering=urn:nga:datasets:gps:
nav&observedProperty=http://www.nga.gov/def/gps-
nav/BROADCAST&temporalFilter=phenomenonTime,2012-10-27T16:56:35Z/2012-10-
27T17:57:55Z 

 

 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 19 
 

 



OGC 12-096 

20 Copyright © 2013 Open Geospatial Consortium. 
 

9 Demonstration Description and Observations 

A test bed was conceived in order to demonstrate (1) the ability to provide a common 
encoding for a wide range of disparate data files and messages using the SWE Common, 
and (2) the ability and benefits “web-enabling” GPS correction data and processing using 
SWE web services such as the Sensor Observation Service (SOS).  

The demonstration used open-source software components developed primarily by Alex 
Robin, both while he was part of the University of Alabama in Huntsville (UAH) VAST 
team under Mike Botts, and more recently under Mr. Robin’s current company, Sensia 
Software. This software is available through Google Code and includes: 

 A SWE Common Data support software for parsing and writing any data 
described and encoded using the SWE Common Data standard 

 OWS and SWE Common Service support software 

 SWE Services support software for Sensor Observation Services (SOS) and 
Sensor Planning Service (SPS) 

We initially intended to also utilize open-source SensorML Execution Engine software as 
well, but the level of funding and supported effort did not allow incorporation of 
SensorML-driven workflow execution. 

9.1 Demonstration Objectives 

In order to test and demonstrate the capabilities and benefits of SWE encodings and SWE 
web services applied to GPS data correction and processing, the sponsor conceived three 
use cases which would utilize data from multiple sources. These use cases would all 
utilize particular apps (or routines) from the GPS Toolkit (GPSTk) which is used by 
surveyors at NGA as well as the general public for processing GPS data. 

All of the three use cases utilize pseudo-range observation data taken from a runway in 
Oregon and originally served in Rinex Observation format. All use cases also use the 
PRSolve routine in the GPSTk to calculate geopositions from the pseudorange data. The 
three use cases included: 

Use Case 1: Uncorrected Positions 

 - Uses original broadcast satellite ephemeris (originally in Rinex Nav format) 

Use Case 2: Post-Processing Corrected Positions 

 - Uses corrected satellite state vectors from EPOCHA (originally in SP3 format) 

Use Case 3: Real-Time Corrected Positions 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 21 
 

 - Uses corrected satellite ephemeris from EPOCHA (originally in GPSIS format) 
 

9.2 SOS Implementations 

The approach taken was to first configure SOS implementations from which one could 
request and receive various GPS correction products on-demand. The requested data 
would be served from each SOS in the SWE Common Data encoding as described in the 
previous sections of this ER. 

All of the SOS implementations that were configured for this project are illustrated in 
Fig. 2 below. Each of these services would ingest the original data in its legacy format 
and provide the data on-demand using the SWE Common Data standard encodings. 
These SOS implementations thus provided a means to request any of the products using 
the common query language provided by the SOS specification, as well as provided the 
requested data in a common, easily parsed SWE Common Data format.  
 

 

Figure 2. Collection of SWE services providing on-demand access  
to ALL GPS-related data in the project 

 

In essence, a single SWE-enabled client would be able to access and parse any of these 
data products (or streams) using common software providing general SOS and SWE 
Common Data support. This is in stark contrast to the current practice of having to access 
the products through various protocols and then require a separate piece of software to 
read each different legacy data format. The standard web interfaces and data encoding 
allow for easily-configured workflows and interoperability between various products. 



OGC 12-096 

22 Copyright © 2013 Open Geospatial Consortium. 
 

9.3 Use Case 1: Uncorrected Positions 

The first use case utilizes uncorrected GPS satellite ephemeris and thus represents the 
result that would normally be obtained. The diagram in Fig 3 shows the workflow that 
was configured to obtain the uncorrected position result.  

The middle pink block represents a workflow that could be configured in SensorML 2.0 
and executed on-demand. Due to budget constraints and the need to update the SensorML 
execution engine to support SensorML 2.0, this workflow was implemented in code. The 
workflow consist of two SOS simple processes acting as SOS clients and one aggregate 
process that encapsulates the GPSTk PRSolve routine. 

 

 

Figure 3. Diagram showing the workflow for Use Case 1. 

 

In all use cases, the SosClient:obs process is configured to request data from the SOS:obs 
service. In Use Case 1, the SosClient:ephem process is configured to access uncorrected 
satellite ephemeris data from the SOS:OrigNav service. These two data sets, which have 
been subsetted for the requested time range, are fed to the PRSolve:GeoPos process 
which uses the pseudoranges and satellite ephemeris to determine geopositions. These 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 23 
 

calculated positions are then made available to the SOS:Position service which can 
provide them to a requesting client. 

 
 

9.4 Execution Notes For All Use Cases 

There are several ways one could execute the workflows show. For example, such a 
workflow could be encoded in SensorML 2.0 and executed on a SensorML-enabled 
client. In such a case, the data would be requested and received from the SOS services by 
the client and be processed in local CPU. Alternatively, the PRSolve:GeoPos process 
could be handled within a SWE Web Processing Service (SWE-WPS) and called from 
the client. 

The approach used in this demonstration, however, has been to execute the workflow on-
demand within the SOS:Position service whenever a request is received from a client. 
Thus, the SOS:Position server, through the workflow engine, acts as a client to the other 
SOS services as required to fulfill the users request. 

 

 

Figure 4. The execution diagram for the workflow in all use cases. 



OGC 12-096 

24 Copyright © 2013 Open Geospatial Consortium. 
 

 

 

The order of execution is indicated in Fig 4 and is described below: 

(1) User request uncorrected, post-processed, or predictive geopositions from the 
SOS:Position service. 

(2)  The SOS:Position service internally fires off the appropriate aggregate process 
and inputs the requested time period 

(3) The SOSClient:obs process request the pseudoranges from the SOS:Obs service 

(4) The SOS:Obs service returns the appropriate time-sliced pseudoranges as SWE 
Common Data 

(5) At the same time, the SOSClient:ephem sends a request to the appropriate 
navigation SOS (in Use Case 1, the SOS:OrigNav service) 

(6) The appropriate navigation SOS returns the requested ephemeris as SWE 
Common Data 

(7) The data received from both SOS services are input into the PRSolve:GeoPos 
process which calculates the geopositions 

(8) The geoposition results are provided as output, which 

(9) The SOS:Position service returns to the user. 

All use cases utilize the PRSolve:GeoPos process for calculating geoposition based on 
the pseudorange and the GPS satellite ephemeris. PRSolve:GeoPos is an aggregate 
process with sub-processes as illustrated in Fig 5. The majority of processes are involved 
in converting data from SWE Common Data to the legacy data formats that the GPSTk 
PRSolve routine currently expects and one for going from the PRSolve results to SWE 
Common Data. None of these sub-processes would be necessary if the GPSTk included 
the SWE Common open-source parser discussed above, and was configured to recognize 
standard models for pseudorange and ephemeris data sets. Furthermore, the input options 
for the PRSolve:GeoPos process could be greatly simplified and would not need to be 
format-specific. Establishing standard data models for GPS data and incorporating the 
SWE Common reader/writer software into GPSTk was considered out-of-scope for this 
project but recommended for future efforts.  

One additional sub-process PRSolve aggregate process was a routine for converting state 
vectors from Earth-Centered-Earth-Fixed (ECEF) coordinates to Earth-Centered-Inertial 
(ECI) coordinates, which was needed specifically for the GPSIS/PRED data. While there 
was an attempt to utilize routines from GPSTk for this, that effort failed to be come 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 25 
 

together in time; thus, we instead utilized a simpler conversion utility from the SensorML 
process library that doesn’t incorporation up-to-date perturbations of the Earth. Probably 
for this reason the predictive ephemeris (PRED) data products do not show much 
improvement from the raw ephemeris. 
 

 

Figure 5. The component processes within the PRSolve:GeoPos aggregate process. 
 

The complete process, from parsing the users request to providing corrected geoposition 
results, is executed and repeated on-demand as required by requests to the SOS:Position 
service. As shown in the demonstration, the response time for this to complete is typically 
1-2 seconds. This process could be significantly faster, however, if  this system were to 
be totally SWE-enabled. For instance, the following on-demand steps would no longer be 
required: conversion from legacy data formats to SWE Common at each of the required 
SOS services, the conversion back from SWE Common to legacy formats for ingestion 
into PRSolve, and the conversion of PRSolve results to SWE Common at the end. 

 



OGC 12-096 

26 Copyright © 2013 Open Geospatial Consortium. 
 

 

Figure 6. Diagram showing the workflow for Use Case 2. 

9.5 Use Case 2: Post-Processing Corrected Positions 

The second use case utilizes GPS satellite ephemeris that has been corrected and applied 
to the archived pseudorange observations in post-processing. The diagram in Fig 6 shows 
the workflow that was configured to obtain the uncorrected position result. For this use 
case, the process, SosClient:position, has been configured to access ephemeris data (in 
SWE Common) from the SOS:CorrNav service.  

9.6 Use Case 3: Real-Time Corrected Positions 

The third use case utilizes GPS satellite ephemeris that has been corrected and used to 
generate predicted ephemeris in the future. It is thus suitable for providing to GPS 
devices for improved geoposition calculations in real-time. The diagram in Fig 7 shows 
the workflow that was configured to obtain the simulated “real-time” position results. For 
this use case, the process, SosClient:position, has been configured to access ephemeris 
data (in SWE Common) from the SOS:PredNav service.  

 

 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 27 
 

 

Figure 7. Diagram showing the workflow for Use Case 3. 

 

9.7 Demonstration results 

A basic web client was developed that allowed the testing and visualization of the results 
obtained from the SOS:Position service. This web client makes a request for the 
appropriate SOS data layer based on the user’s product selection in the graphical user 
interface (GUI), and then receives the results as SWE Common Data and displays the 
results on a Google Map window. This web client can be accessed and run at: 

http://botts-inc/SosGPS/  

The initial configuration is shown in Fig 8, which displays a satellite imagery of the test 
runway, and the reference trajectory obtained from an SOS. The reference trajectory is 
the known position that a GPS-enabled vehicle followed in order to provide the test data.  



OGC 12-096 

28 Copyright © 2013 Open Geospatial Consortium. 
 

 

Figure 8. Web Client initial configuration showing reference trajectory 
(white dashed line). 

 

The zoom in the display can be controlled using the + and – buttons in the upper left, 
while display pan can be controlled by a click-hold mouse action in the display followed 
by movement of the mouse.  

The geopositions calculated using the original broadcast satellite ephemeris (Use Case 1) 
are displayed in Fig 9 and in the zoomed in display in Fig 10. Significant deviation can be 
seen between these geopositions and the reference trajectory in Fig 10. 

For Use Case 2, shown in Fig 11, the NGA Precise ephemeris used in post-processing 
shows significantly improved accuracy. However, for Use Case 3 shown in Fig 12, the 
predictive “real-time” ephemeris product does not show any significant improvement 
relative to the original broadcast ephemeris data. As mentioned in Section 9.4 above, this 
is probably due to using an ECEF to ECI conversion process that does not account for 
updated Earth perturbations. 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 29 
 

 
Figure 9. Full-track results for Use Case 1: Original Broadcast Ephemeris. 

 

 

Figure 10. Close-up results for Use Case 1: Original Broadcast Ephemeris. 
(track show in red) 



OGC 12-096 

30 Copyright © 2013 Open Geospatial Consortium. 
 

 
Figure 11. Close-up results for Use Case 2: NGA Precise Ephemeris  

for post-processing. (track shown in green) 
 

 

Figure 12. Close-up results for Use Case 3: NGA Predictive Ephemeris  
for real-time processing (track shown in blue). 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 31 
 

10 Conclusions and Vision  

The current GPS system and the processing centers built to improve its accuracy depend 
on a diverse collection of disparate data models and formats. Each of these different 
models and formats requires its own set of software components in a variety of computer 
languages to support the possible application of the data within various tools. Often, the 
existing tools and data processing centers will only support a limited number of data 
models and formats. This significantly inhibits interoperability between these systems 
and is a deterrent to the development of new tools to support the use of corrected GPS 
data in a broader community of potential users. 

In addition, current data models within the GPS system vary significantly between data 
centers and formats. For example, the models for satellite ephemeris from different data 
centers can vary significantly in how the ephemeris is provided, the amount of error 
reporting, and even the coordinate reference frame used. 

This project has demonstrated that a common data framework could be utilized for ALL 
data files and streams within the GPS system, and that such a common framework would 
significantly improve interoperability between data centers, processing centers, and user 
tools. Common models for equivalent message or data records would also be important 
for interoperability between the various data and processing centers and the tools. Having 
common models and a common data framework allows for rapid reconfiguration of 
workflows using different GPS processing products. Likewise, the availability of a 
common web service interface also enables one to rapidly and flexibly request specific 
data products and feed them into an executable workflow. 

The Sensor Web Enablement (SWE) suite of standards provides a significant framework 
for supporting access to, parsing of, and processing of GPS data products and streams 
along the entire path of the data, from transmission from satellites, to processing of 
corrected products, to delivery to geopositioning devices. The SWE Common Data 
standard enables a common data framework for supporting all data needs within the GPS 
system. The Sensor Observation Service (SOS) provides a common web interface for 
accessing and filtering various data products, while the Sensor Model Language 
(SensorML) enables the description of processes and workflow for on-demand execution. 

Thus, the conclusions can be summarized by the following bullets: 

 The SWE Common Data standard provides a common and efficient data 
framework for all data products and data streams used within the GPS system 

 SWE Common Data provides a framework for data that is fully self-described and 
machine readable 

 Common models for all data would support “mix-and-match” capabilities within 
the processing workflows 
 



OGC 12-096 

32 Copyright © 2013 Open Geospatial Consortium. 
 

 

 SWE web services enable on-demand access to various GPS data products using a 
common framework 

 SWE Common Data enables the use of SensorML for readily defining and 
executing various workflows on-demand 

11 Recommended Future Directions 

This project was an initial exploration of the potential application of SWE Common Data 
and other SWE standards to the processing and delivery of more accurate GPS 
geopositioning. It is recommended that further research and development be considered 
to move closer to a highly interoperable GPS system that meets the needs of a broader 
community of GPS users. Thus the following are recommended: 

 

 Design consistent data models for all message types in navigation, observation, 
and state data streams 

 Incorporate SWE Common Data readers/writers in GPSTk 

 Create SensorML descriptions for GPSTk apps 

 Demonstrate on-demand design and execution of SensorML-defined workflows 
for GPS correction 

 Demonstrate on-demand geolocation of UAV, ground vehicle and hand-held 
sensors using SWE services and encodings 

 

 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 33 
 

Annex A 
 

SWE Common descriptions of the EPOCHA Output Message Stream 

Although example SWE Common Data descriptions can be obtained from the SOS 
request links provided in Section 8, example descriptions are also provided here for an 
EPOCHA Output stream. 

The EPOCHA output message stream is encoded as an ASCII stream with six message 
types, including Satellite Outage File (sof),  Near-Real Time Satellite Outage File (nsof), 
Performance Assessment File (paf), Near-Real Time Performance Assessment File 
(npaf), Navigation Message Replacement (nmr), and Predicted Ephemeris/State Vector 
Data File (pred). 

NOTE: This SWE Common description is based on the data record models used in the 
current EPOCHA output. The models could probably be better defined for use with SWE 
Common, particularly with regard to the timestamps, flags, and reserved bits. 

A multiplexed data stream can be defined as in A.1. below. The various messages  are 
encapsulated in a swe:DataChoice element and the data records for each defined 
separately. As specified in the SWE Common Data standard, the first value for each 
message in the stream must be the item name, followed by the record values. 

A.1 The ASCII-encoded EPOCHA data stream  

 

<?xml version="1.0" encoding="UTF-8"?> 
<swe:DataStream id="epocha_stream"  
   xmlns:swe="http://www.opengis.net/swe/2.0" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:xlink="http://www.w3.org/1999/xlink" 
   xsi:schemaLocation="http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd"> 
   <!-- EPOCHA DataStream definition with external reference to DataRecords --> 
   <swe:identifier>urn:nswcdd:epocha:epocha_stream</swe:identifier> 
   <swe:label>EPOCHA Data Stream</swe:label> 
   <swe:description> 
      The definition for the complete data stream used by the MSNCC-EPOCHA system for improving GPS accuracy 
   </swe:description> 
   <swe:elementType name="epocha"> 
 <swe:DataChoice> 
   
   <!-- paf --> 
  <swe:item name="PAF" xlink:href="http://msncc.org/gps/msg/paf_msg.xml"/> 
 
  <!-- npaf --> 
  <swe:item name="NPAF" xlink:href="http://msncc.org/gps/msg/npaf_msg.xml"/> 
  
  <!-- sof --> 
  <swe:item name="SOF" xlink:href="http://msncc.org/gps/msg/sof_msg.xml"/> 
  
  <!-- nsof --> 
  <swe:item name="NSOF" xlink:href="http://msncc.org/gps/msg/nsof_msg.xml"/> 
  
  <!-- pred --> 
  <swe:item name="PRED" xlink:href="http://msncc.org/gps/msg/pred_msg.xml"/> 



OGC 12-096 

34 Copyright © 2013 Open Geospatial Consortium. 
 

  
  <!-- nmr --> 
  <swe:item name="NMR" xlink:href="http://msncc.org/gps/msg/nmr_msg.xml"/> 
        
  </swe:DataChoice> 
   </swe:elementType> 
 
   <!-- ASCII Encoding --> 
   <swe:encoding> 
 <swe:TextEncoding tokenSeparator="," blockSeparator=" "/> 
   </swe:encoding> 
 
   <!--  values returned by linking to referenced URL  --> 
   <swe:values xlink:href="http://myser.org/epocha/epochaStream"/> 
</swe:DataStream> 

A.2 The common DateTime Record 
The DateTime record is common to all messages and is thus defined external to these 
messages and referenced by the message within the data structure definition. This could 
be greatly collapsed by just using the ISO 8601 timestamp standard designation: 2013-
01-13T21:10:01.24Z 

<?xml version="1.0" encoding="UTF-8"?> 
<swe:DataRecord 
    xmlns:swe="http://www.opengis.net/swe/2.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:xlink="http://www.w3.org/1999/xlink" 
    xsi:schemaLocation="http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd" 
    definition="http://epocha.org/gps/dict/datetime_record"> 
 
    <swe:label>Date and Time</swe:label> 
    <swe:field name="year"> 
        <swe:Count definition="http://eopcha.org/gps/dict/year"> 
            <swe:label>Year</swe:label> 
            <swe:constraint> 
                <swe:AllowedValues> 
                    <swe:interval>1980 2400</swe:interval> 
                </swe:AllowedValues> 
            </swe:constraint> 
        </swe:Count> 
    </swe:field> 
    <swe:field name="doy"> 
        <swe:Count definition="http://eopcha.org/gps/dict/dayOfYear"> 
            <swe:label>Day of Year</swe:label> 
            <swe:constraint> 
                <swe:AllowedValues> 
                    <swe:interval>1 366</swe:interval> 
                </swe:AllowedValues> 
            </swe:constraint> 
        </swe:Count> 
    </swe:field> 
    <swe:field name="hr"> 
        <swe:Count definition="http://eopcha.org/gps/dict/hour"> 
            <swe:label>Hour</swe:label> 
            <swe:constraint> 
                <swe:AllowedValues> 
                    <swe:interval>0 23</swe:interval> 
                </swe:AllowedValues> 
            </swe:constraint> 
        </swe:Count> 
    </swe:field> 
    <swe:field name="min"> 
        <swe:Count definition="http://eopcha.org/gps/dict/minute"> 
            <swe:label>Minute</swe:label> 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 35 
 

            <swe:constraint> 
                <swe:AllowedValues> 
                    <swe:interval>0 59</swe:interval> 
                </swe:AllowedValues> 
            </swe:constraint> 
        </swe:Count> 
    </swe:field> 
    <swe:field name="sec"> 
        <swe:Count definition="http://eopcha.org/gps/dict/second"> 
            <swe:label>Second</swe:label> 
            <swe:constraint> 
                <swe:AllowedValues> 
                    <swe:interval>0 59</swe:interval> 
                </swe:AllowedValues> 
            </swe:constraint> 
        </swe:Count> 
    </swe:field> 
</swe:DataRecord> 
 

A.3 The Satellite Outage File (sof) 
<?xml version="1.0" encoding="UTF-8"?> 
<swe:DataRecord id="SOF"  
   xmlns:swe="http://www.opengis.net/swe/2.0" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:xlink="http://www.w3.org/1999/xlink" 
   xsi:schemaLocation="http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd" 
   definition="http://epocha.org/gps/dict/sof"> 
    <!-- data structure for the weather observation message --> 
    <swe:identifier>urn:epocha:org:sof_msg</swe:identifier> 
 <swe:label>Satellite Outage File (SOF)</swe:label> 
    <swe:description>EPOCHA message structure for the Satellite Outage File (SOF) used for correcting GPS 
navigation</swe:description> 
   
 <!-- header field descriptions --> 
    <swe:field name="sysid"> 
    <swe:Category definition="http://epocha.org/gps/dict/sysid" updatable="false"> 
     <swe:value>GPS</swe:value> 
  </swe:Category> 
 </swe:field> 
    <swe:field name="version"> 
  <swe:Count definition="http://epocha.org/gps/dict/recordVersion"/> 
    </swe:field> 
  
 <!-- INITIAL DATETIME FIELDS --> 
 <!-- These fields utilize a predefined DataRecord for DateTime specification as do many fields in GPSIS --> 
 <!-- This DataRecord has een defined externally and is referenced here using the xlink:href attribute --> 
 <swe:field name="creationDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfRecordCreation"/> 
  
 <swe:field name="referenceDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfEvent"/> 
  
  
 <!-- PREDICTED RECORD --> 
 <swe:field name="predicted" xlink:role="http://epocha.org/gps/dict/predictedOutage"> 
  <swe:DataRecord id="SOF_RECORD"> 
   <swe:field name="svid"> 
    <swe:Count definition="http://epocha.org/gps/dict/satelliteID"/> 
   </swe:field> 
   <swe:field name="svn"> 
    <swe:Count definition="http://epocha.org/gps/dict/satelliteVehicleNumber"/> 
   </swe:field> 
   <swe:field name="name"> 
    <swe:Category definition="http://epocha.org/gps/dict/outageSource"/> 
   </swe:field> 
   <swe:field name="type"> 



OGC 12-096 

36 Copyright © 2013 Open Geospatial Consortium. 
 

    <swe:Category definition="http://epocha.org/gps/dict/outageSource"/> 
   </swe:field> 
   <swe:field name="reference"> 
    <swe:Count definition="http://epocha.org/gps/dict/referenceNumber"/> 
   </swe:field> 
    
   <swe:field name="startDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
    xlink:role="http://epocha.org/gps/dict/startOfEvent"/> 
   <swe:field name="endDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
    xlink:role="http://epocha.org/gps/dict/endOfEvent"/>  
  </swe:DataRecord> 
 </swe:field>  
  
 <!-- CURRENT RECORD --> 
 <swe:field name="predicted" xlink:role="http://epocha.org/gps/dict/currentOutage"> 
  <swe:DataRecord> 
   <swe:field name="svid"> 
    <swe:Count definition="http://epocha.org/gps/dict/satelliteID"/> 
   </swe:field> 
   <swe:field name="svn"> 
    <swe:Count definition="http://epocha.org/gps/dict/satelliteVehicleNumber"/> 
   </swe:field> 
   <swe:field name="name"> 
    <swe:Category definition="http://epocha.org/gps/dict/outageSource"/> 
   </swe:field> 
   <swe:field name="type"> 
    <swe:Category definition="http://epocha.org/gps/dict/outageSource"/> 
   </swe:field> 
   <swe:field name="reference"> 
    <swe:Count definition="http://epocha.org/gps/dict/referenceNumber"/> 
   </swe:field> 
    
   <swe:field name="startDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
    xlink:role="http://epocha.org/gps/dict/startOfEvent"/> 
  </swe:DataRecord> 
 </swe:field>  
  
 <!-- HISTORICAL RECORD --> 
 <swe:field name="predicted" xlink:href="#SOF_RECORD"  
  xlink:role="http://epocha.org/gps/dict/historicalOutage"/>  
  
</swe:DataRecord> 

A.4 The Near-real Time Satellite Outage File (nsof) 
<?xml version="1.0" encoding="UTF-8"?> 
<swe:DataRecord id="NSOF"  
   xmlns:swe="http://www.opengis.net/swe/2.0" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:xlink="http://www.w3.org/1999/xlink" 
   xsi:schemaLocation="http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd" 
   definition="http://epocha.org/gps/dict/nsof"> 
    
 <!-- data structure for the paf messages --> 
    <swe:identifier>urn:epocha:org:nsof_msg</swe:identifier> 
 <swe:label>Near Real-Time Satellite Outage File (NSOF)</swe:label> 
    <swe:description>EPOCHA message structure for the Near Real-Time Satellite Outage File (NSOF) used for GPS 
navigation</swe:description> 
    
 <!-- initial identification field descriptions --> 
    <swe:field name="sysid"> 
    <swe:Category definition="http://epocha.org/gps/dict/sysid" updatable="false"> 
   <swe:label>System ID</swe:label> 
     <swe:value>GPS</swe:value> 
  </swe:Category> 
 </swe:field> 
    <swe:field name="version"> 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 37 
 

  <swe:Count definition="http://epocha.org/gps/dict/recordVersion"> 
   <swe:label>Record Version</swe:label>  
  </swe:Count> 
    </swe:field> 
  
 <!-- INITIAL DATETIME FIELDS --> 
 <!-- These fields utilize a predefined DataRecord for DateTime specification as do many fields in GPSIS --> 
 <!-- This DataRecord has een defined externally and is referenced here using the xlink:href attribute --> 
 <swe:field name="creationDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfRecordCreation"/> 
  
 <swe:field name="referenceDate" xlink:href="http://epocha.org/gps/messages/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfEvent"/> 
  
 <!-- ACTUAL NSOF INFORMATION --> 
 <swe:field name="nsof_record"> 
  <swe:DataArray definition="http://epocha.org/gps/dict/nsofRecord"> 
   <swe:description>Satellite Array Health</swe:description> 
   <swe:elementCount> 
    <swe:Count> 
     <swe:value>32</swe:value> 
    </swe:Count> 
   </swe:elementCount> 
   <swe:elementType name="satHealth"> 
    <swe:DataRecord> 
     <swe:field name="svid"> 
      <swe:Count definition="http://epocha.org/gps/dict/satelliteID"> 
       <swe:label>Satellite ID</swe:label>     
      </swe:Count> 
     </swe:field> 
     <swe:field name="svn"> 
      <swe:Count definition="http://epocha.org/gps/dict/satelliteVN"> 
       <swe:label>Satellite Vehicle Number</swe:label>     
      </swe:Count> 
     </swe:field> 
     <swe:field name="health"> 
      <swe:Category definition="http://epocha.org/gps/dict/satelliteHealth"> 
       <swe:label>Satellite Health</swe:label> 
       <swe:constraint> 
        <swe:AllowedTokens> 
         <swe:value>HEALTHY UNHEALTHY UNASSIGNED</swe:value> 
        </swe:AllowedTokens> 
       </swe:constraint> 
      </swe:Category> 
     </swe:field> 
    </swe:DataRecord> 
   </swe:elementType>   
  </swe:DataArray> 
 </swe:field>  
</swe:DataRecord> 

 

A.5 The Predicted Ephemeris/State Vector Data File (pred) 
<?xml version="1.0" encoding="UTF-8"?> 
<swe:DataRecord id="PRED"  
   xmlns:swe="http://www.opengis.net/swe/2.0" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:xlink="http://www.w3.org/1999/xlink" 
   xsi:schemaLocation="http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd" 
   definition="http://epocha.org/gps/dict/pred"> 
    
 <!-- data structure for the paf messages --> 
    <swe:identifier>urn:epocha:org:pred_msg</swe:identifier> 
 <swe:label>Predicted Ephemeris/State Vector Data Record (PRED)</swe:label> 
    <swe:description> 
     EPOCHA message structure for the Predicted Ephemeris/State Vector Data File (PRED) used for correcting 



OGC 12-096 

38 Copyright © 2013 Open Geospatial Consortium. 
 

GPS navigation 
    </swe:description> 
    
 <!-- initial identification field descriptions --> 
    <swe:field name="sysid"> 
    <swe:Category definition="http://epocha.org/gps/dict/sysid" updatable="false"> 
   <swe:label>System ID</swe:label> 
     <swe:value>GPS</swe:value> 
  </swe:Category> 
 </swe:field> 
 <swe:field name="source"> 
  <swe:Category definition="http://epocha.org/gps/dict/outageSource" updatable="false"> 
   <swe:label>PRED Source</swe:label> 
   <swe:value>GOCGIS</swe:value> 
  </swe:Category> 
 </swe:field> 
    <swe:field name="version"> 
  <swe:Count definition="http://epocha.org/gps/dict/recordVersion"> 
   <swe:label>Record Version</swe:label>  
  </swe:Count> 
    </swe:field> 
  
 <!-- INITIAL DATETIME FIELDS --> 
 <!-- These fields utilize a predefined DataRecord for DateTime specification as do many fields in GPSIS --> 
 <!-- This DataRecord has een defined externally and is referenced here using the xlink:href attribute --> 
 <swe:field name="creationDate" xlink:href="http://epocha.org/gps/msg/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfRecordCreation"/> 
  
 <swe:field name="referenceDate" xlink:href="http://epocha.org/gps/msg/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfEvent"/> 
  
 <!-- ACTUAL PRED INFORMATION --> 
 <swe:field name="pred_record"> 
  <swe:DataRecord definition="http://epocha.org/gps/predictedEphemerisRecord"> 
   <swe:field name="validDate" xlink:href="http://epocha.org/gps/msg/DateTime.xml" 
    xlink:role="http://epocha.org/gps/dict/validDateOfEvent"/> 
   <swe:field name="svid"> 
    <swe:Count definition="http://epocha.org/gps/dict/satelliteID"> 
     <swe:label>Satellite ID</swe:label>     
    </swe:Count> 
   </swe:field> 
    
   <swe:field name="pos_error_x"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/posErrorX"> 
     <swe:label>Position Error X</swe:label> 
     <swe:uom code="m"/> 
    </swe:Quantity> 
   </swe:field> 
   <swe:field name="pos_error_y"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/posErrorY"> 
     <swe:label>Position Error Y</swe:label> 
     <swe:uom code="m"/> 
    </swe:Quantity> 
   </swe:field> 
   <swe:field name="pos_error_z"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/posErrorZ"> 
     <swe:label>Position Error Z</swe:label> 
     <swe:uom code="m"/> 
    </swe:Quantity> 
   </swe:field> 
    
   <swe:field name="vel_error_x"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/velErrorX"> 
     <swe:label>Velocity Error X</swe:label> 
     <swe:uom code="m/s"/> 
    </swe:Quantity> 
   </swe:field> 
   <swe:field name="vel_error_y"> 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 39 
 

    <swe:Quantity definition="http://epocha.org/gps/dict/velErrorY"> 
     <swe:label>Velocity Error Y</swe:label> 
     <swe:uom code="m/s"/> 
    </swe:Quantity> 
   </swe:field> 
   <swe:field name="vel_error_z"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/velErrorZ"> 
     <swe:label>Velocity Error Z</swe:label> 
     <swe:uom code="m/s"/> 
    </swe:Quantity> 
   </swe:field> 
    
   <swe:field name="clock_bias"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/clockBias"> 
     <swe:label>Clock Bias</swe:label> 
     <swe:uom code="s"/> 
    </swe:Quantity> 
   </swe:field> 
   <swe:field name="clock_drift"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/clockDrift"> 
     <swe:label>Clock Drift</swe:label> 
     <swe:uom code="s/s"/> 
    </swe:Quantity> 
   </swe:field> 
   <swe:field name="clock_drift_rate"> 
    <swe:Quantity definition="http://epocha.org/gps/dict/clockDriftRate"> 
     <swe:label>Clock Drift Rate</swe:label> 
     <swe:uom code="s/s2"/> 
    </swe:Quantity> 
   </swe:field> 
    
  </swe:DataRecord> 
 </swe:field>  
</swe:DataRecord> 

A.6 The Performance Assessment File (paf) 
<?xml version="1.0" encoding="UTF-8"?> 
<swe:DataRecord id="PAF"  
   xmlns:swe="http://www.opengis.net/swe/2.0" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:xlink="http://www.w3.org/1999/xlink" 
   xsi:schemaLocation="http://www.opengis.net/swe/2.0 http://schemas.opengis.net/sweCommon/2.0/swe.xsd" 
   definition="http://epocha.org/gps/dict/paf"> 
    
 <!-- data structure for the paf messages --> 
    <swe:identifier>urn:epocha:org:paf_msg</swe:identifier> 
 <swe:label>Performance Assessment File (PAF)</swe:label> 
    <swe:description>EPOCHA message structure for the Performance Assessment File (PAF) used for correcting GPS 
navigation</swe:description> 
    
 <!-- initial identification field descriptions --> 
    <swe:field name="sysid"> 
    <swe:Category definition="http://epocha.org/gps/dict/sysid" updatable="false"> 
   <swe:label>System ID</swe:label> 
     <swe:value>GPS</swe:value> 
  </swe:Category> 
 </swe:field> 
 <swe:field name="source"> 
  <swe:Category definition="http://epocha.org/gps/dict/outageSource" updatable="false"> 
   <swe:label>PAF Source</swe:label> 
   <swe:value>GOCGIS</swe:value> 
  </swe:Category> 
 </swe:field> 
    <swe:field name="version"> 
  <swe:Count definition="http://epocha.org/gps/dict/recordVersion"> 
   <swe:label>Record Version</swe:label>  
  </swe:Count> 
    </swe:field> 



OGC 12-096 

40 Copyright © 2013 Open Geospatial Consortium. 
 

  
 <!-- INITIAL DATETIME FIELDS --> 
 <!-- These fields utilize a predefined DataRecord for DateTime specification as do many fields in GPSIS --> 
 <!-- This DataRecord has een defined externally and is referenced here using the xlink:href attribute --> 
 <swe:field name="creationDate" xlink:href="http://epocha.org/gps/msg/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfRecordCreation"/> 
  
 <swe:field name="referenceDate" xlink:href="http://epocha.org/gps/msg/DateTime.xml" 
  xlink:role="http://epocha.org/gps/dict/dateOfEvent"/> 
  
 <!-- ACTUAL PAF INFORMATION --> 
 <swe:field name="paf_record"> 
  <swe:DataRecord definition="http://epocha.org/gps/performanceAssessmentRecord"> 
   <swe:field name="svid"> 
    <swe:Count definition="http://epocha.org/gps/dict/satelliteID"> 
     <swe:label>Satellite ID</swe:label>     
    </swe:Count> 
   </swe:field> 
    
   <!-- the paf data may be missing or not available, so we offer a DataChoice --> 
   <!-- if the value of the next field is "yes", data will be provided, if "no" no further data is provided --> 
   <swe:field name="dataAvailable"> 
    <swe:DataChoice definition="http://epocha.org/gps/dict/dataAvailable"> 
     <swe:description>If data available, provide it; if data not available, skip</swe:description> 
      
     <swe:item name="yes"> 
      <swe:DataRecord definition="http://epocha.org/gps/dict/pafData"> 
       <!-- NOTE: these 3-component properties could each be wrapped in swe:Vector  

if found benefitial --> 
       <swe:field name="pos_error_x"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/posErrorX"> 
         <swe:label>Position Error X</swe:label> 
         <swe:uom code="m"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="pos_error_y"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/posErrorY"> 
         <swe:label>Position Error Y</swe:label> 
         <swe:uom code="m"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="pos_error_z"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/posErrorZ"> 
         <swe:label>Position Error Z</swe:label> 
         <swe:uom code="m"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="clock_phase_error"> 
        <swe:Quantity definition="http://epocha.org/dict/gps/dict/clockPhaseError"> 
         <swe:label>Clock Phase Error</swe:label> 
         <swe:uom code="m"/> 
        </swe:Quantity> 
       </swe:field> 
        <swe:field name="vel_error_x"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/velErrorX"> 
         <swe:label>Velocity Error X</swe:label> 
         <swe:uom code="m/s"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="vel_error_y"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/velErrorY"> 
         <swe:label>Velocity Error Y</swe:label> 
         <swe:uom code="m/s"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="vel_error_z"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/velErrorZ"> 
         <swe:label>Velocity Error Z</swe:label> 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 41 
 

         <swe:uom code="m/s"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="clock_frequency_error"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/clockFrequencyError"> 
         <swe:label>Clock Phase Error</swe:label> 
         <swe:uom code="m/s"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="age_of_data"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/ageOfData"> 
         <swe:label>Age of Data</swe:label> 
         <swe:uom code="min"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="sigma_sv"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/sigmaSV"> 
         <swe:label>Sigma SV</swe:label> 
         <swe:nilValues> 
          <swe:NilValues> 
           <swe:nilValue 
reason="http://epocha.org/gps/dict/exceeds4RMS">0</swe:nilValue> 
          </swe:NilValues> 
         </swe:nilValues> 
         <swe:uom code="m"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="sigma_dot_sv"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/sigmaSV"> 
         <swe:label>Sigma Dot SV</swe:label> 
         <swe:nilValues> 
          <swe:NilValues> 
           <swe:nilValue 
reason="http://epocha.org/gps/dict/exceeds4RMS">0</swe:nilValue> 
          </swe:NilValues> 
         </swe:nilValues> 
         <swe:uom code="m/s"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="iode_current"> 
        <swe:Count definition="ttp://epocha.org/gps/dict/iodeCurrent"> 
         <swe:label>Current Issue of Data Ephemeris</swe:label> 
        </swe:Count> 
       </swe:field> 
       <swe:field name="iode_future"> 
        <swe:Count definition="ttp://epocha.org/gps/dict/iodeFuture"> 
         <swe:label>Future Issue of Data Ephemeris</swe:label>  
       
        </swe:Count> 
       </swe:field> 
       <!-- CONFIRM UOM FOR THE NEXT 4 COMPONENTS --> 
       <swe:field name="clock_minus_radius"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/clockMinusRadius"> 
         <swe:label>Clock Minus Radius</swe:label> 
         <swe:uom code="rad"/> 
        </swe:Quantity> 
       </swe:field> 
        <swe:field name="residual_x"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/residualX"> 
         <swe:label>Residual X</swe:label> 
         <swe:uom code="rad"/> 
        </swe:Quantity> 
       </swe:field> 
       <swe:field name="residual_y"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/residualY"> 
         <swe:label>Residual Y</swe:label> 
         <swe:uom code="rad"/> 
        </swe:Quantity> 
       </swe:field> 



OGC 12-096 

42 Copyright © 2013 Open Geospatial Consortium. 
 

       <swe:field name="residual_z"> 
        <swe:Quantity definition="http://epocha.org/gps/dict/residualZ"> 
         <swe:label>Residual Z</swe:label> 
         <swe:uom code="rad"/> 
        </swe:Quantity> 
       </swe:field>            
  
      </swe:DataRecord> 
     </swe:item> 
      
     <!-- for item with name=no", there are no fields to be specified --> 
     <swe:item name="no"/> 
      
    </swe:DataChoice> 
   </swe:field> 
    
  </swe:DataRecord> 
 </swe:field>  
</swe:DataRecord> 



OGC 12-096 

Copyright © 2013 Open Geospatial Consortium. 43 
 

Bibliography 

[1] NSWCDD/ARL:UT 2005 : Monitor Station Network Control Center/Estimation 
and Prediction of Orbits and Clocks to High Accuracy (MSNCC/EPOCHA) 
Interface Definition; January 2005 (DRAFT)   

 

 


