
 

OPENGIS PROJECT DOCUMENT 04-046r3 

TITLE:   OGC Abstract Specification Topic 2, Spatial referencing by coordinates 
AUTHOR:   Name: Roger Lott  
    Address: Shell International E&P Inc. 
     
     
    Phone: +44-1494-729297 
    FAX:   
    Email: epsg.rl@btinternet.com 
DATE:   2004-08-16 
CATEGORY: Abstract Specification 
 

1. Background 

OGC Abstract Specification Topic 2, Spatial referencing by coordinates, has been submitted to ISO as a 
proposed revision of 19111. In May 2004 ISO TC 211 resolved to submit a new work item proposal for the 
revision of 19111 based upon OGC 03-073r4 together with comments received. Document 04-046 was the 
proposed revision draft. Comments upon it received by the editor by 22nd July were considered before 
submission to ISO.  

This document 04-046r3 is the draft circulated within ISO TC211 as a New Work Item Proposal to revise ISO 
19111 - revision of 19111, Spatial referencing by coordinates. A small number of editorial corrections were 
made to the document circulated as 04-046r2. This OGC document is revised for completeness.

 
 



ISO TC 211/SC     
Date:   2004-08-02 

ISO/DIS 19111 

ISO TC 211/SC /WG  

Secretariat:   SN 

Geographic information — Spatial referencing by coordinates 
Information géographique — Système de références spatiales par coordonnées 

 

Warning 

This document is not an ISO International Standard. It is distributed for review and comment. It is subject to 
change without notice and may not be referred to as an International Standard. 

Recipients of this draft are invited to submit, with their comments, notification of any relevant patent rights of 
which they are aware and to provide supporting documentation. 

 
 



ISO/DIS 19111 

© ISO 2004 — All rights reserved iii
 

Copyright notice 

This ISO document is a Draft International Standard and is copyright-protected by ISO. Except as permitted 
under the applicable laws of the user's country, neither this ISO draft nor any extract from it may be 
reproduced, stored in a retrieval system or transmitted in any form or by any means, electronic, 
photocopying, recording or otherwise, without prior written permission being secured. 

Requests for permission to reproduce should be addressed to either ISO at the address below or ISO's 
member body in the country of the requester. 

ISO copyright office 
Case postale 56 • CH-1211 Geneva 20 
Tel.  + 41 22 749 01 11 
Fax  + 41 22 749 09 47 
E-mail  copyright@iso.org 
Web  www.iso.org 

Reproduction may be subject to royalty payments or a licensing agreement. 

Violators may be prosecuted. 

 



ISO/DIS 19111 

iv © ISO 2004 — All rights reserved
 

Contents Page 

Foreword.............................................................................................................................................................vi 
Introduction .......................................................................................................................................................vii 
1 Scope ......................................................................................................................................................1 
2 Conformance requirements..................................................................................................................1 
3 Normative references ............................................................................................................................1 
4 Terms and definitions ...........................................................................................................................2 
5 Conventions ...........................................................................................................................................8 
5.1 Symbols ..................................................................................................................................................8 
5.2 Abbreviated terms .................................................................................................................................8 
5.3 UML Notation..........................................................................................................................................9 
5.4 Attribute status ................................................................................................................................... 10 
6 The geodetic context of spatial referencing by coordinates ......................................................... 11 
6.1 Coordinates ......................................................................................................................................... 11 
6.2 Some geodetic concepts ................................................................................................................... 11 
7 The UML model for spatial referencing by coordinates – overview.............................................. 13 
8 Identified Object package .................................................................................................................. 15 
8.1 General................................................................................................................................................. 15 
8.2 UML schema of Identified Object package ...................................................................................... 15 
9 Coordinate Reference System package ........................................................................................... 17 
9.1 Reference system ............................................................................................................................... 17 
9.2 Coordinate reference system ............................................................................................................ 18 
9.3 Principal sub-types of coordinate reference system...................................................................... 19 
9.4 Additional sub-types of coordinate reference system.................................................................... 20 
9.4.1 Introduction ......................................................................................................................................... 20 
9.4.2 Compound coordinate reference system......................................................................................... 20 
9.4.3 Derived coordinate reference system .............................................................................................. 21 
9.5 UML schema of Coordinate Reference System package ............................................................... 22 
10 Coordinate System package.............................................................................................................. 28 
10.1 Introduction ......................................................................................................................................... 28 
10.2 Coordinate System ............................................................................................................................. 28 
10.3 Coordinate system axis ..................................................................................................................... 29 
10.4 UML schema of CS Coordinate System package............................................................................ 30 
11 Datum package ................................................................................................................................... 38 
11.1 Types of datums ................................................................................................................................. 38 
11.2 Vertical datum ..................................................................................................................................... 38 
11.3 Image datum........................................................................................................................................ 38 
11.4 Prime meridian.................................................................................................................................... 39 
11.5 Ellipsoid ............................................................................................................................................... 39 
11.6 UML schema of the CD Datum package........................................................................................... 39 
12 Coordinate operation package.......................................................................................................... 47 
12.1 General characteristics of coordinate operations........................................................................... 47 
12.2 Coordinate conversions..................................................................................................................... 48 
12.3 Concatenated coordinate operation ................................................................................................. 48 
12.4 Pass-through coordinate operation.................................................................................................. 48 
12.5 Coordinate operation method and parameters ............................................................................... 49 
12.6 Parameter groups ............................................................................................................................... 49 



ISO/DIS 19111 

© ISO 2004 — All rights reserved v
 

12.7 Implementation considerations .........................................................................................................49 
12.8 UML schema of Coordinate Operation package ..............................................................................50 
Annex A (normative)  Conformance ................................................................................................................58 
A.1 Class A – Conformance of a coordinate reference system ............................................................58 
A.1.1 Abstract test suite ...............................................................................................................................58 
A.1.2 Test case identifier: Completeness test............................................................................................58 
A.1.3 Test case identifier: Maximum occurrence test ...............................................................................58 
A.1.4 Test case identifier: Data type test ....................................................................................................58 
A.1.5 Test case identifier: Unit test .............................................................................................................59 
A.2 Class B - Conformance of a coordinate operation ..........................................................................59 
A.2.1 Abstract test suite ...............................................................................................................................59 
A.2.2 Test case identifier: Completeness test............................................................................................59 
A.2.3 Test case identifier: Maximum occurrence test ...............................................................................59 
A.2.4 Test case identifier: Data type test ....................................................................................................59 
A.2.5 Test case identifier: Unit test .............................................................................................................60 
Bibliography......................................................................................................................................................61 
 



ISO/DIS 19111 

vi © ISO 2004 — All rights reserved
 

Foreword 

ISO (the International Organization for Standardization) is a worldwide federation of national standards bodies 
(ISO member bodies). The work of preparing International Standards is normally carried out through ISO 
technical committees. Each member body interested in a subject for which a technical committee has been 
established has the right to be represented on that committee. International organizations, governmental and 
non-governmental, in liaison with ISO, also take part in the work. ISO collaborates closely with the 
International Electrotechnical Commission (IEC) on all matters of electrotechnical standardization. 

International Standards are drafted in accordance with the rules given in the ISO/IEC Directives, Part 2. 

The main task of technical committees is to prepare International Standards. Draft International Standards 
adopted by the technical committees are circulated to the member bodies for voting. Publication as an 
International Standard requires approval by at least 75 % of the member bodies casting a vote. 

Attention is drawn to the possibility that some of the elements of this document may be the subject of patent 
rights. ISO shall not be held responsible for identifying any or all such patent rights. 

ISO 19111 was prepared by Technical Committee ISO/TC 211, Geographic information / Geomatics. 

This second edition cancels and replaces the first edition (ISO 19111:2003), which has been technically 
revised. 



ISO/DIS 19111 

© ISO 2004 — All rights reserved vii
 

Introduction 

Geographic information contains spatial references which relate the features represented in the data to 
positions in the real world. Spatial references fall into two categories: 

 those using coordinates; 

 those based on geographic identifiers. 

This International Standard deals only with spatial referencing by coordinates. Spatial referencing by 
geographic identifiers is defined in ISO 19112, Geographic information ― Spatial referencing by geographic 
identifiers. 

Coordinates are unambiguous only when the coordinate reference system to which those coordinates are 
related has been fully defined. A coordinate reference system is a coordinate system which has a reference to 
the Earth. This International Standard describes the elements that are necessary to define fully various types 
of coordinate systems and coordinate reference systems applicable to geographic information. The subset of 
elements required is partially dependent upon the type of coordinates. This International Standard also 
includes optional fields to allow for the inclusion of non-essential coordinate reference system information. The 
elements are intended to be both machine and human readable. A coordinate set, which by definition uses 
one coordinate reference system, requires one coordinate reference system description. 

In addition to describing a coordinate reference system, this International Standard provides for the 
description of a coordinate transformation or coordinate conversion between two different coordinate 
reference systems. With such information, geographic data referred to different coordinate reference systems 
can be merged together for integrated manipulation. Alternatively an audit trail of coordinate reference system 
manipulations can be maintained. 

 





DRAFT INTERNATIONAL STANDARD ISO/DIS 19111

 

                                                     

Geographic information — Spatial referencing by coordinates 

1 Scope 

This International Standard defines the conceptual schema for the description of spatial referencing by 
coordinates, optionally extended to spatio-temporal referencing. It describes the minimum data required to 
define 1-, 2- and 3-dimensional spatial coordinate reference systems with an extension to merged spatial-
temporal reference systems. It allows additional descriptive information to be provided. It also describes the 
information required to change coordinate values from one coordinate reference system to another.  

This International Standard is applicable to producers and users of geographic information. Although it is 
applicable to digital geographic data, its principles can be extended to many other forms of geographic data 
such as maps, charts, and text documents. 

2 Conformance requirements 

This International Standard defines two classes of conformance, Class A for conformance of coordinate 
reference systems and Class B for coordinate operations between two coordinate reference systems. Any 
coordinate reference system claiming conformance to this International Standard shall satisfy the 
requirements given in Annex A, Clause A.1. Any coordinate operation claiming conformance to this 
International Standard shall satisfy the requirements given in Annex A, Clause A.2. 

3 Normative references 

The following referenced documents are indispensable for the application of this document. For dated 
references, only the cited edition applies. For undated references, the latest edition of the referenced 
document (including any amendments) applies. 

ISO 1000, SI units and recommendations for use of their multiples and of certain other units 

ISO/TS 19103:—1), Geographic information — Conceptual schema language 

ISO 19108, Geographic Information – Temporal schema 

ISO 19115, Geographic Information – Metadata 

Normative reference to ISO 19115 is restricted as follows. In this International Standard normative reference 
to 19115 excludes the MD_CRS class and its component classes. ISO 19115 class MD_CRS and its 
component, aggregated, classes specify descriptions of coordinate reference systems elements. These 
elements are modelled in this International Standard. 

ISO 19123, Geographic Information – Schema for coverage geometry and functions 

 

1) To be published. 

© ISO 2004 — All rights reserved 1
 



ISO/DIS 19111 

4 Terms and definitions 

For the purposes of this document the following terms and definitions apply. 

4.1 
affine coordinate system 
coordinate system in Euclidean space with straight axes that are not necessarily mutually perpendicular 

4.2 
Cartesian coordinate system 
coordinate system which gives the position of points relative to n mutually perpendicular axes 

NOTE n is 1, 2 or 3 for the purposes of this International Standard. 

4.3 
compound coordinate reference system 
coordinate reference system using at least two independent coordinate reference systems describing 
horizontal position and/or vertical position and/or temporal position or positions 

NOTE A compound coordinate reference system does not contain another compound coordinate reference system. 

4.4 
concatenated operation 
coordinate operation consisting of sequential application of multiple coordinate operations 

4.5 
coordinate 
one of a sequence of n numbers designating the position of a point in n-dimensional space  

NOTE In a coordinate reference system, the coordinate numbers are qualified by units. 

4.6 
coordinate conversion 
change of coordinates, based on a one-to-one relationship, from one coordinate reference system to 
another based on the same datum 

EXAMPLE Between ellipsoidal and Cartesian coordinate systems or between geographic coordinates and projected 
coordinates, or change of units such as from radians to degrees or feet to meters. 

NOTE A coordinate conversion uses parameters which have specified values, not empirically determined values. 

4.7 
coordinate operation 
change of coordinates, based on a one-to-one relationship, from one coordinate reference system to 
another 

NOTE Supertype of coordinate transformation and coordinate conversion. 

4.8 
coordinate reference system 
coordinate system which is related to the real world by a datum 

NOTE For geodetic and vertical datums, it will be related to the Earth. 

4.9 
coordinate set 
dataset of coordinate tuples related to the same coordinate reference system 

2 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

4.10 
coordinate system 
set of mathematical rules for specifying how coordinates are to be assigned to points 

4.11 
coordinate transformation 
change of coordinates from one coordinate reference system to another coordinate reference system 
based on a different datum through a one-to-one relationship 

NOTE A coordinate transformation uses parameters which are derived empirically by a set of points with known 
coordinates in both coordinate reference systems. 

4.12 
coordinate tuple 
tuple composed of a sequence of coordinates 

NOTE The number of coordinates in the coordinate tuple equals the dimension of the coordinate system; the order of 
coordinates in the coordinate tuple is identical to the order of the axes of the coordinate system. 

4.13 
cylindrical coordinate system 
three-dimensional coordinate system with two distance and one angular coordinates 

4.14 
datum 
parameter or set of parameters that define the position of the origin, the scale, and the orientation of a 
coordinate reference system 

4.15 
depth 
distance of a point from a chosen reference surface measured downward along a line perpendicular to that 
surface 

NOTE Depth is sometimes measured along a line that does not follow the vector of gravity locally. An example is 
depth in an oil or gas well where it is generally measured along the wellbore path. This path may vary significantly from the 
local vertical. Nevertheless the distance along the wellbore path is referred to as ‘depth’. 

4.16 
dimension 
coordinate dimension 
number of measurements or axes needed to describe a position in a coordinate system 

[ISO 19107] 

4.17 
easting 
E  
distance in a coordinate system, eastwards (positive) or westwards (negative) from a north-south reference 
line 

4.18 
ellipsoid 
surface formed by the rotation of an ellipse about a main axis 

NOTE In this International Standard, ellipsoids are always oblate, meaning that the axis of rotation is always the 
minor axis. 

© ISO 2004 — All rights reserved 3
 



ISO/DIS 19111 

4.19 
ellipsoidal coordinate system 
geodetic coordinate system 
coordinate system in which position is specified by geodetic latitude, geodetic longitude and (in the three-
dimensional case) ellipsoidal height, associated with one or more geographic coordinate reference 
systems 

4.20 
ellipsoidal height 
geodetic height 
h 
distance of a point from the ellipsoid measured along the perpendicular from the ellipsoid to this point 
positive if upwards or outside of the ellipsoid 

NOTE Only used as part of a three-dimensional ellipsoidal coordinate system and never on its own. 

4.21 
engineering coordinate reference system 
coordinate reference system that is defined for and usually used in a contextually local sense, which may be 
an area, significantly less than the complete surface of the earth or a moving platform and its vicinity 

EXAMPLE Local engineering and architectural coordinates, grids, and drawings; also: vessel navigation systems 
and coordinate reference systems associated with orbiting spacecraft. 

NOTE 1 A coordinate transformation of engineering coordinates to geodetic coordinates may or may not be possible 
depending on whether such operation parameters have been determined (or defined). 

NOTE 2 An engineering coordinate reference system may be defined to describe geometry that is local to the context 
of a moving platform, such as a car, a ship, an aircraft or a spacecraft. Transformation of such engineering coordinates to 
geodetic coordinates involves time dependent operation parameters and, when repeated at (regular) time-intervals, will 
result in a record of the ‘track’ of the moving platform. Additionally such a transformation may be used for real-time 
navigation of the platform. The term ‘vicinity of the moving platform’ may constitute an area varying from the immediate 
surroundings of the platform to the entire earth, the latter being the case in a number of space applications. 

4.22 
engineering datum 
local datum 
datum describing the relationship of a coordinate system to a local reference 

NOTE Engineering datum excludes both geodetic and vertical datums. 

EXAMPLE A system for identifying relative positions within a few kilometres of the reference point. 

4.23 
flattening 
f 
ratio of the difference between the semi-major (a) and semi-minor axis (b) of an ellipsoid to the semi-major 
axis; f = (a – b)/a 

NOTE Sometimes inverse flattening 1/f = a/(a-b) is given instead; 1/f is also known as reciprocal flattening. 

4.24 
geocentric coordinate reference system 
3-dimensional coordinate reference system with its origin at the centre of the modelled Earth 

4.25 
geodetic datum 
datum describing the relationship of a 3D or 2D coordinate system to the Earth 

4 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

4.26 
geodetic latitude 
ellipsoidal latitude 
ϕ 
angle from the equatorial plane to the perpendicular to the ellipsoid through a given point, northwards treated 
as positive 

4.27 
geodetic longitude 
ellipsoidal longitude 
λ 
angle from the prime meridian plane to the meridian plane of a given point, eastward treated as positive 

4.28 
geographic coordinate reference system 
coordinate reference system using an ellipsoidal coordinate system and based on an ellipsoid that 
approximates the shape of the Earth 

NOTE A geographic coordinate system can be 2D or 3D. In a 3D geographic coordinate system, the third dimension 
is height above the ellipsoid surface. 

4.29 
geoid 
level surface which best fits mean sea level either locally or globally 

NOTE “Level surface” means an equipotential surface of the Earth’s gravity field which is everywhere perpendicular 
to the direction of gravity. 

4.30 
gravity-related height 
H 
height dependent on the Earth’s gravity field 

NOTE In particular, orthometric height or normal height, which are both approximations of the distance of a point 
above the mean sea level. 

4.31 
Greenwich meridian 
meridian that passes through the position of the Airy Transit Circle at the Royal Observatory Greenwich, 
United Kingdom 

NOTE Most geodetic datums use the Greenwich meridian as the prime meridian. Its precise position differs slightly 
between different datums. 

4.32 
height 
h, H 
distance of a point from a chosen reference surface measured upward along a line perpendicular to that 
surface 

NOTE A height below the reference surface will have a negative value. 

4.33 
image coordinate reference system 
engineering coordinate reference system applied to locations in images 

4.34 
image datum 
engineering datum which defines the origin of an image coordinate reference system 

© ISO 2004 — All rights reserved 5
 



ISO/DIS 19111 

4.35 
linear coordinate system 
one-dimensional coordinate system in which a linear feature forms the axis 

EXAMPLES Distances along a pipeline; depths down a deviated oil well bore. 

4.36 
map projection 
coordinate conversion from an ellipsoidal coordinate system to a plane 

4.37 
mean sea level 
average level of the surface of the sea over all stages of tide and seasonal variations 

NOTE Mean sea level in a local context normally means mean sea level for the region calculated from observations 
at one or more points over a given period of time. Mean sea level in a global context differs from a global geoid by not 
more than 2 m. 

4.38 
meridian 
intersection of an ellipsoid by a plane containing the semi-minor axis of the ellipsoid 

NOTE This term is often used for the pole-to-pole arc rather than the complete closed figure. 

4.39 
northing 
N 
distance in a coordinate system, northwards (positive) or southwards (negative) from an east-west reference 
line 

4.40 
pixel 
smallest element of a digital image to which attributes are assigned 

NOTE This term originated as a contraction of “picture element”. 

4.41 
polar coordinate system 
two-dimensional coordinate system in which position is specified by distance and direction from the origin 

NOTE In three dimensions called spherical coordinate system. 

4.42 
prime meridian 
zero meridian 
meridian from which the longitudes of other meridians are quantified 

4.43 
projected coordinate reference system 
coordinate reference system derived from a two-dimensional geographic coordinate reference system by 
applying a map projection and using a Cartesian coordinate system 

4.44 
semi-major axis 
a 
semi-diameter of the longest axis of an ellipsoid 

NOTE This equates to the semi-diameter of the ellipsoid measured in its equatorial plane. 

6 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

4.45 
semi-minor axis 
b 
semi-diameter of the shortest axis of an ellipsoid 

NOTE The shortest axis coincides with the rotation axis of the ellipsoid and therefore contains both poles. 

4.46 
sequence 
finite, ordered collection of related items (objects or values) that may be repeated 

[ISO 19107] 

4.47 
spatial reference 
description of position in the real world 

NOTE This may take the form of a label, code or set of coordinates. 

4.48 
spherical coordinate system 
three-dimensional coordinate system with one distance, measured from the origin and two angular 
coordinates, commonly associated with a geocentric coordinate reference system 

NOTE Not to be confused with an ellipsoidal coordinate system based on an ellipsoid ‘degenerated’ into a sphere. 

4.49 
temporal reference system 
reference system against which time is measured  

[ISO 19108] 

4.50 
temporal datum 
datum defining the origin of a temporal reference system 

4.51 
time coordinate system 
one-dimensional coordinate system containing a time axis used in a temporal reference system to 
describe the temporal position of a point in the specified time units from a specified temporal datum 

4.52 
tuple 
ordered list of values  

[ISO 19136] 

4.53 
unit 
unit of measure 
defined quantity in which dimensioned parameters are expressed 

NOTE In this International Standard, the subtypes of units are length units, angular units, time units, scale units and 
pixel spacing units. 

4.54 
vertical coordinate reference system 
one-dimensional coordinate reference system used for gravity-related height or depth measurements 

© ISO 2004 — All rights reserved 7
 



ISO/DIS 19111 

4.55 
vertical datum 
datum describing the relation of gravity-related heights or depths to the Earth 

NOTE In most cases the vertical datum will be related to mean sea level. Ellipsoidal heights are treated as related to 
a three-dimensional ellipsoidal coordinate system referenced to a geodetic datum. Vertical datums include sounding 
datums (used for hydrographic purposes), in which case the heights may be negative heights or depths. 

5 Conventions 

5.1 Symbols 

a semi-major axis 

b semi-minor axis 

E easting 

f flattening 

H gravity-related height 

h ellipsoidal height 

N northing 

λ geodetic longitude 

ϕ geodetic latitude 

E, N Cartesian coordinates in a projected coordinate reference system  

X, Y, Z Cartesian coordinates in a geocentric coordinate reference system 

Editor's note to ISO secretariat. The use of upper case X, Y and Z is deliberate. Upper case is conventional in 
the geographic information/geomatics community. In this community the lower case of these symbols have 
alternative meanings outside of the scope of this standard. Please do not change the symbols to lower case. 
Thank you. 

i, j, [k] Cartesian coordinates in an engineering coordinate reference system 

r, θ polar coordinates in a 2D engineering coordinate reference system  

r, Ω, θ spherical coordinates in a 3D engineering or geocentric coordinate reference system 

5.2 Abbreviated terms 

CC change coordinates (package abbreviation in UML model) 

CD coordinate datum (package abbreviation in UML model) 

CCRS compound coordinate reference system 

CRS coordinate reference system 

CS coordinate system (also, package abbreviation in UML model) 

8 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

IO identified object (package abbreviation in UML model) 

MSL mean sea level 

RS reference system (package abbreviation in UML model) 

SC spatial referencing by coordinates (package abbreviation in UML model) 

SI le Système International d’unités 

UML Unified Modeling Language 

URI Uniform Resource Identifier 

1D one-dimensional 

2D two-dimensional 

3D three-dimensional 

5.3 UML Notation 

In this International Standard, the conceptual schema for describing coordinate reference systems and 
coordinate operations is modelled with the Unified Modelling Language (UML). The basic data types are 
defined in ISO/TS 19103.  

The UML notations used in this International Standard are described in Figure 1. 

 

Figure 1 — UML notation 

In this International Standard the following stereotypes of UML classes are used: 

© ISO 2004 — All rights reserved 9
 



ISO/DIS 19111 

a) <<DataType>> A descriptor of a set of values that lack identity (independent existence and the possibility 
of side effects). A DataType is a class with no operations whose primary purpose is to hold the 
information. 

b) <<CodeList>> A flexible enumeration that uses string values for expressing a list of potential values. 

c) <<Union>> Contains a list of attributes where only one of those attributes can be present at any time. 

d) <<Abstract>> A polymorphic object class that cannot be instantiated. 

The following data types defined in ISO/TS 19103 are used: 

a) Angle – amount of rotation required to bring one line or plane into coincidence with another. 

b) Boolean – a value specifying TRUE or FALSE. 

c) CharacterString – a sequence of characters. 

d) Date – a character string which comprises year, month and day in the format as specified by ISO 8601. 

e) DateTime – a character string which comprises year, month, day and time of the day to the appropriate 
level of precision in the format as specified by ISO 8601 

f) GenericName – a generic name structure in the context of namespaces, defined in ISO/TS 19103. 

g) Integer – an integer number. 

h) Length – the measure of distance. 

i) Measure – result from performing the act or process of ascertaining the extent, dimensions or quantity of 
some entity. 

j) Number – abstract class that can be sub-typed to a specific number type (real, integer, decimal, double, 
float). 

k) Scale – the ratio of one quantity to another. 

l) Unit of Measure – any of the systems devised to measure some physical quantity. 

In addition, a Sequence type of collection is used, which contains an ordered list of values with the specified 
data type. The format used is “Sequence<DataType>”. 

5.4 Attribute status 

In this International Standard, attributes are given an obligation status: 

Obligation Definition Meaning 

M mandatory This attribute shall be supplied. 

C conditional This attribute shall be supplied if the condition (given in the attribute 
description) is true. It may be supplied if the condition is false. 

O optional This attribute may be supplied. 

 
In this International Standard the Maximum Occurrence column indicates the maximum number of 
occurrences of attribute values that are permissible, with N indicating no upper limit.  

10 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

6 The geodetic context of spatial referencing by coordinates 

6.1 Coordinates 

The geometry of spatial features might be expressed in terms of invariant geometric quantities, viz. shapes 
and relative positions/orientations (strictly speaking only distance ratios and angles are invariant quantities). 
However, this would be impractical: performing calculations on spatial data would be a major effort. The 
expression of the position of a point by using coordinates introduces simplicity in terms of overview and 
calculus. However, there is a price to be paid for this convenience. To describe a simple shape such as a 
triangle in a plane, instead of one distance ratio and one angle, six coordinates are required. The inherent 
degrees of freedom (four in 2D, seven in 3D) have to be satisfied by choosing the origin of the coordinate 
axes, their unit of measure and the orientations of the axes. This choice underlines the fact that coordinates 
are human-defined quantities and not natural phenomena. Although this may seem self-evident, it is often 
overlooked and has consequences for the interpretation of coordinates and their error characteristics. 

In this International Standard, a coordinate is one of n scalar values that define the position of a single point. A 
coordinate tuple is an ordered list of coordinates. The coordinate tuple is composed of one, two or three 
spatial coordinates. The coordinates shall be mutually independent and their number shall be equal to the 
dimension of the coordinate space; for example a coordinate tuple shall not contain two heights. The order of 
the elements of the tuple and their unit(s) of measure are parts of the coordinate reference system definition. 

NOTE In other contexts the term ordinate is used for a single value and coordinate for multiple ordinates. Such usage 
is not part of this International Standard. 

In this International Standard, a coordinate set is a collection of coordinate tuples. By definition, all coordinate 
tuples within a coordinate set shall be referenced to the same system. Conversely, if coordinate tuples are 
referenced to different systems they shall be segregated into different coordinate sets. 

The concept of a coordinate reference system (CRS) captures the choice of values for the parameters that 
constitute the degrees of freedom of the coordinate space. The fact that such a choice has to be made, either 
arbitrarily or by adopting values from survey measurements, leads to the large number of coordinate reference 
systems in use around the world. It is also the cause of the little understood fact that the latitude and longitude 
of a point are not unique. Without the full specification of the coordinate reference system, coordinates are 
ambiguous at best and meaningless at worst. However for some interchange purposes it is sufficient to 
confirm the identity of the system without necessarily having the full system definition. 

The concept of coordinates may be expanded from a strictly spatial context to include time. Time is then 
added as another coordinate to the coordinate tuple. It is even possible to add two time-coordinates, provided 
the two coordinates describe different independent quantities. An example of the latter is the time/space 
position of a subsurface point of which the vertical coordinate is expressed as the two-way travel time of a 
sound signal in milliseconds, as is common in seismic imaging. A second time-coordinate indicates the time of 
observation, usually expressed in whole years. 

A coordinate reference system (CRS) identification or definition in accordance with this International Standard 
shall be associated with every coordinate tuple. It is not necessary to supply the CRS definition with every 
point; if a CRS is associated with a coordinate set, all coordinate tuples in that coordinate set inherit the 
association. One CRS identification or definition shall be associated with each coordinate set. 

The description of quality of a spatial reference is covered by the provisions of ISO 19115. 

6.2 Some geodetic concepts 

Geodesy is the applied science that aims to determine the size and shape of the earth. In a more practical and 
local sense, this may be understood to mean the determination of the relative positions of points on or near 
the earth’s surface. Survey measurements and techniques are the means to achieve this. 

The most accurate reference shape approximating the earth is the geoid, a surface that is defined as having 
equal gravity potential and being approximately at mean sea level. The gravity vector at mean sea level is 
everywhere perpendicular to this surface. Topographic heights (H) are typically expressed relative to the geoid. 

© ISO 2004 — All rights reserved 11
 



ISO/DIS 19111 

But due to the irregular mass distribution in the earth’s interior the geoid has an irregular shape. This makes it 
difficult to use in calculations for horizontal spatial data.  

To facilitate easier spatial calculations the geoid is approximated by the nearest regular body, an oblate 
ellipsoid, in which the oblateness corresponds to the flattening of the physical earth at the poles due to the 
earth's rotation. The ellipsoid is a reasonably accurate approximation of the geoid, the geoid undulating 
around the ellipsoid’s surface with variations in the order of several tens of metres. 

The ellipsoid forms the basis of the best-known type of coordinate reference system: the Geographic CRS. 
The position of a point relative to the ellipsoid is expressed by means of geographic coordinates: geodetic 
latitude (ϕ) and geodetic longitude (λ). The height above the ellipsoid (h) is an inseparable element of a 
geographic 3D coordinate tuple. Note however that ellipsoidal height (h) differs from "topographic" heights 
related to the geoid (H) by the amount by which the geoid undulates relative to the ellipsoid – see Figure 2. 
Geodetic science distinguishes several different types of gravity-related heights (H), differentiated by the 
assumptions made about the earth's gravity field. The differences between these types of gravity-related 
height are beyond the scope of this International Standard. 

 
Key 
1 geoid 
2 ellipsoid 
3 surface of the Earth 
 
h = ellipsoidal height, measured from ellipsoid along perpendicular passing through point; h = H + N 
H = gravity-related height, measured along direction of gravity from vertical datum plane at geoide 
N = geoid height, height of geoid above ellipsoid 

Figure 2 — Ellipsoidal and gravity-related heights 

There is not just one ellipsoid. An ellipsoid is a matter of choice, and therefore many choices are possible. The 
size and shape of an ellipsoid was traditionally chosen such that the surface of the geoid is matched as 
closely as possible locally, e.g. in a country. A number of global best-fit ellipsoids are now available. An 
association of an ellipsoid with the earth is made through the definition of the size and shape of the ellipsoid 
and the position and orientation of this ellipsoid with respect to the earth. Collectively this choice is captured 
by the concept of “geodetic datum”. A change of size, shape, position or orientation of an ellipsoid will result in 
a change of geographic coordinates of a point and be described as a different geodetic datum. Conversely 
geographic coordinates are unambiguous only when associated with a geodetic datum. 

12 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

A Geographic CRS is not suitable for mapmaking on a planar surface, because it describes geometry on a 
curved surface. It is impossible to represent such geometry in a Euclidean plane without introducing 
distortions. The need to control these distortions has given rise to the development of the science of map 
projections. Although some map projections can be represented as a geometric process, in general a map 
projection is a set of formulae that converts geodetic latitude and longitude to plane (map) coordinates. Height 
plays no role in this process, which is entirely two-dimensional. The same map projection can be applied to 
many geographic CRSs, resulting in many projected CRSs each of which is related to the same geodetic 
datum as the geographic CRS on which it was based. 

7 The UML model for spatial referencing by coordinates – overview 

The specification for spatial referencing by coordinates is defined in this International Standard in the form of a 
UML model with supplementary text. The UML model contains five primary UML packages, as shown in 
Figure 3, which also shows the dependencies among these packages. Each box represents a package, and 
contains the package name and a listing of all classes in that package. Each arrowed line shows the 
dependency (at the head of the arrow) of one package upon another package. 

© ISO 2004 — All rights reserved 13
 



ISO/DIS 19111 

CD_Datum
+ CD_Datum

+ CD_PrimeMeridian
+ CD_Ellipsoid

+ CD_GeodeticDatum
+ CD_VerticalDatum

+ CD_EngineeringDatum
+ CD_ImageDatum

+ CD_TemporalDatum
+ CD_SecondDefiningParameter

+ CD_VerticalDatumType
+ CD_PixelinCell

CS_CoordinateSystem
+ CS_CartesianCS

+ CS_CoordinateSystem
+ CS_CoordinateSystemAxis

+ CS_CylindricalCS
+ CS_EllipsoidalCS

+ CS_LinearCS
+ CS_AffineCS
+ CS_PolarCS

+ CS_RangeMeaning
+ CS_SphericalCS

+ CS_TimeCS
+ CS_UserDefinedCS

+ CS_VerticalCS

SC_CoordinateReferenceSystem
+ SC_CRS

+ SC_CompoundCRS
+ SC_DerivedCRS

+ SC_DerivedCRSType
+ SC_EngineeringCRS

+ SC_GeneralDerivedCRS
+ SC_GeocentricCRS
+ SC_GeographicCRS

+ SC_ImageCRS
+ SC_ProjectedCRS

+ SC_SingleCRS
+ SC_TemporalRS
+ SC_VerticalCRS

CC_CoordinateOperation
+ CC_CoordinateOperation

+ CC_ConcatenatedOperation
+ CC_SingleOperation

+ CC_PassThroughOperation
+ CC_Operation
+ CC_Conversion

+ CC_Transformation
+ CC_GeneralParameterValue
+ CC_ParameterValueGroup

+ CC_ParameterValue
+ CC_OperationMethod

+ CC_GeneralOperationParameter
+ CC_OperationParameterGroup

+ CC_OperationParameter

IO_IdentifiedObject
+ IO_IdentifiedObject

+ IO_IdentifiedObjectBase

 

Figure 3 — UML model packages and dependencies 

The five UML packages are more completely specified in the following clauses. 

14 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

8 Identified Object package 

8.1 General 

The Identified Object package contains attributes common to several objects used in spatial referencing by 
coordinates. These objects, for example datum, ellipsoid or coordinate system axis or coordinate operation, 
inherit attribute values from the Identified Object package. 

One of the attributes is the object primary name. For example, a datum name might be "North American 
Datum of 1983". This may have alternative names or aliases, for example the abbreviation "NAD83". Object 
primary names have a data type RS_Identifier which is defined in ISO 19115 whilst aliases have a data type 
GenericName which is defined in ISO/TS 19103. 

NOTE 1 Through its subclassing from RS_ReferenceSystem which is defined in ISO 19115, SC_CRS inherits the 
attribute name. Because of this inheritance the SC_CRS class does not use IO_IdentifiedObject for its primary name. But 
like other classes described in this International Standard, it may use the alias attribute from IO_IdentifiedObjectBase for 
aliases. 

Another attribute is identifier. This is a unique code used to reference an object in a given place. For example, 
an external geodetic register might give the NAD83 datum a unique code of "6269". Identifiers have a data 
type of RS_Identifier. 

In addition to the use of an identifier as a reference to a definition in a remote register, it may also be included 
in an object definition to allow remote users to refer to the object. 

Object identification shall be through: 

either  (a) a full object description as defined in this International Standard;  

or  (b) reference to a full object description in a register of geodetic parameters conforming to the 
requirements of ISO 19127. The reference is made through the register's object identifier; 

or (c) both full description and reference to a description in a register. If there is a conflict between 
the two the register description shall prevail. 

(a) and (b) are alternative means of providing a full object description. (b) is recommended for simplicity but if 
the object description is not available from a register it shall be given explicitly and in full. In both methods the 
order of coordinates in each coordinate tuple shall be as given in the coordinate system description. 

When using method (b), reference to a geodetic register, applications that require only to confirm the 
identification of an object can do so through the register citation and object unique identifier from that register. 
They do not need to retrieve the elements that constitute the full object description from the register unless 
there is a need to quote these or to perform a coordinate operation on the coordinate set. 

NOTE 2 Implementers are warned that there may be issues associated with the specification of elements by identifier, 
referring to a publicly available register of geodetic parameters. The latest version or edition of the register may not be 
sufficient to uniquely describe the referenced element. In any register, errors in the data may be corrected in accordance 
with rules specific to that register and defined by the responsible registration authority. The rules for dealing with 
erroneous data need to be known to implementers in order to be able to find the data that is required by their application; 
either the most up-to-date register information or, because historically it was used to transform spatial data that is still in 
use, the erroneous information from the past. 

8.2 UML schema of Identified Object package 

Figure 4 shows the UML class diagram of the Identified Object package. The definition of the object classes 
are provided in Tables 1 and 2. 

© ISO 2004 — All rights reserved 15
 



ISO/DIS 19111 

IO_IdentifiedObject
+ name : RS_Identifier

<<Abstract>>

RS_Identifier
(from RS_ReferenceSystem)

Defined in 
ISO 19115

CC_CoordinateOperation
(from CC_CoordinateOperation)

<<Abstract>>

SC_CRS
(from SC_CoordinateReferenceSystem)

<<Abstract>>

CC_GeneralOperationParameter
(from CC_CoordinateOperation)

<<Abstract>>

CC_OperationMethod
(from CC_CoordinateOperation)

CD_Datum
(from CD_Datum)

<<Abstract>>

CD_Ellipsoid
(from CD_Datum)

CD_PrimeMeridian
(from CD_Datum)

CS_CoordinateSystem
(from CS_CoordinateSystem)

<<Abstract>>

CS_CoordinateSystemAxis
(from CS_CoordinateSystem)

IO_IdentifiedObjectBase
+ identifier [0..*] : RS_Identifier
+ alias [0..*] : GenericName
+ remarks [0..1] : CharacterString

<<Abstract>>

 

Figure 4 — IO Identified Object package 

16 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 1 — Defining elements of IO_IdentifiedObjectBase class 

Description: Supplementary identification and remarks information for a CRS or CRS-related object. 

Stereotype: Abstract  

Derived from (none) 

Association roles: (none) 

Used by:  SC_CRS 
CS_CoordinateSystem 
CS_CoordinateSystemAxis 
CD_Datum 
CD_Ellipsoid 
CD_PrimeMeridian 
CC_CoordinateOperation 
CC_OperationMethod 
CC_GeneralOperationParmeter 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Object alias alias GenericName O N An alternative name by which this object is 
identified. 

Object identifier identifier RS_Identifier O N An identifier which references elsewhere the 
object's defining information; alternatively an 
identifier by which this object can be 
referenced. 

Object remarks remarks CharacterString O 1 Comments on or information about this 
object, including data source information. 

 
Table 2 — Defining elements of IO_IdentifiedObject class 

Description: Identifications of a CRS-related object. 

Stereotype: Abstract  

Derived from IO_IdentifiedObjectBase 

Association roles: (none) 

Used by:  CS_CoordinateSystem 
CS_CoordinateSystemAxis 
CD_Datum 
CD_Ellipsoid  
CD_PrimeMeridian 
CC_CoordinateOperation 
CC_OperationMethod 
CC_GeneralOperationParmeter 

Public attributes:  3 attributes inherited from IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Object name name RS_Identifier M 1 The primary name by which this object is 
identified. 

 

9 Coordinate Reference System package 

9.1 Reference system 

A reference system contains the metadata required to interpret spatial location information unambiguously. 
Two methods to describe spatial location are distinguished: 

© ISO 2004 — All rights reserved 17
 



ISO/DIS 19111 

a) Spatial referencing by geographic identifier. Geographic identifiers are location descriptors such as 
addresses and grid indexes. Such systems fall outside the scope of this International Standard and the 
associated model. The requirements for spatial referencing by geographic identifier are described in ISO 
19112. 

b) Spatial referencing by coordinates. The scope of this International Standard and the associated UML 
model is confined to the description of position through coordinates. 

The RS Reference System package and datatypes are described in ISO 19115. Table 3 shows the attributes 
inherited by the CRS class. 

Table 3 — Attributes of RS_ReferenceSystem class inherited from ISO 19115 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Reference system name name RS_Identifier M 1 Value uniquely identifying an object within a 
namespace. 

Reference system 
validity 

domainOfValidity EX_Extent O N Information about horizontal, vertical and 
temporal extent. 

 
9.2 Coordinate reference system 

A coordinate reference system consists of one coordinate system that is related to the earth through one 
datum. 

The coordinate system is composed of a set of coordinate axes with specified units of measure. This concept 
implies the mathematical rules that define how coordinate values are calculated from distances, angles and 
other geometric elements and vice versa. 

A datum specifies the relationship of a coordinate system to the earth, thus ensuring that the abstract 
mathematical concept “coordinate system” can be applied to the practical problem of describing positions of 
features on or near the earth’s surface by means of coordinates. The resulting combination of coordinate 
system and datum is a coordinate reference system. Each datum subtype can be associated with only specific 
types of coordinate reference systems. The datum implicitly (occasionally explicitly) contains the values 
chosen for the set parameters that represent the degrees of freedom of the coordinate system, as described 
in 6.1. A datum therefore implies a choice regarding the approximate origin and orientation of the coordinate 
system. 

The high level abstract model for spatial referencing by coordinates is shown in Figure 4. 

Coordinate Reference 
System

Datum Coordinate System

Coordinate 
Operation

+source

+target

 

Figure 5 — High-level conceptual model for spatial referencing by coordinates 

For the purposes of this International Standard, a coordinate reference system shall not change with time. For 
engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft and 
spacecraft, the transformation to an earth-fixed coordinate reference system may include a time element. The 
intention is to exclude the option to describe the time variability of geodetic coordinate reference systems as a 
result of for example tectonic motion. This variability is part of the subject matter of geophysical and geodetic 

18 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

science. The model for spatial referencing by coordinates described in this specification is in principle not 
suitable for such zero-order geodetic problems. Such time-variability of coordinate reference systems shall be 
covered in the spatial referencing model described in this document by creating different coordinate reference 
systems, each with a different datum, for consecutive epochs. The date of realisation of the datum shall then 
be included in its definition. It is further recommended to include the date of realisation in the names of those 
datums and coordinate reference systems. 

9.3 Principal sub-types of coordinate reference system 

Geodetic survey practice usually divides coordinate reference systems into a number of sub-types. The 
common classification criterion for sub-typing of coordinate reference systems can be described as the way in 
which they deal with earth curvature. This has a direct effect on the portion of the earth’s surface that can be 
covered by that type of CRS with an acceptable degree of error. 

Thus the following principal sub-types of coordinate reference system are distinguished: 

a) Geocentric. Type of coordinate reference system that deals with the earth’s curvature by taking the 3D 
spatial view, which obviates the need to model the earth’s curvature. The origin of a geocentric CRS is at 
the approximate centre of mass of the earth. 

b) Geographic. Type of coordinate reference system based on an ellipsoidal approximation of the geoid. 
This provides an accurate representation of the geometry of geographic features for a large portion of the 
earth’s surface. Geographic coordinate reference systems can be 2D or 3D. A 2D Geographic CRS is 
used when positions of features are described on the surface of the ellipsoid; a 3D Geographic CRS is 
used when positions are described on, above or below the ellipsoid. 

c) Projected. Type of coordinate reference system that is based on an approximation of the shape of the 
earth’s surface by a plane. The distortion that is inherent to the approximation is carefully controlled and 
known. Distortion correction is commonly applied to calculated bearings and distances to produce values 
that are a close match to actual field values. 

d) Engineering. Type of coordinate reference system that is used only in a contextually local sense. This 
sub-type is used to model two broad categories of local coordinate reference systems: 

• earth-fixed systems, applied to engineering activities on or near the surface of the earth; 

• coordinates on moving platforms such as road vehicles, vessels, aircraft or spacecraft. 

Earth-fixed Engineering CRSs are commonly based on a simple flat-earth approximation of the earth’s 
surface, and the effect of earth curvature on feature geometry is ignored: calculations on coordinates use 
simple plane arithmetic without any corrections for earth curvature. The application of such Engineering 
CRSs to relatively small areas and "contextually local" is in this case equivalent to "spatially local". 

Engineering CRSs used on moving platforms are usually intermediate coordinate reference systems that 
are computationally required to calculate coordinates referenced to geocentric, geographic or projected 
CRSs. These engineering coordinate reference systems are subject to all the motions of the platform with 
which they are associated. In this case "contextually local" means that the associated coordinates are 
meaningful only relative to the moving platform. Earth curvature is usually irrelevant and is therefore 
ignored. In the spatial sense their applicability may extend from the immediate vicinity of the platform (e.g. 
a moving seismic ship) to the entire earth (e.g. in space applications). The determining factor is the 
mathematical model deployed in the positioning calculations. Transformation of coordinates from these 
moving Engineering CRSs to earth-referenced coordinate reference systems involves time-dependent 
coordinate operation parameters, which can be modelled by the structures provided in this UML model. 

e) Image. An Image CRS is an Engineering CRS applied to images. Image CRSs are treated as a separate 
sub-type because for images a separate user community with its own vocabulary exists. The definition of 
the associated Image Datum contains two data attributes not relevant for other datums and coordinate 
reference systems. 

© ISO 2004 — All rights reserved 19
 



ISO/DIS 19111 

f) Vertical. Type of coordinate reference system used for the recording of heights or depths. Vertical CRSs 
make use of the direction of gravity to define the concept of height or depth, but its relationship with 
gravity may not be straightforward. By implication therefore, ellipsoidal heights (h) cannot be captured in a 
vertical coordinate reference system: ellipsoidal heights cannot exist independently, but only as an 
inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 

g) Temporal. Used for the recording of time in association with any of the listed spatial coordinate reference 
systems. 

9.4 Additional sub-types of coordinate reference system 

9.4.1 Introduction 

In addition to the principal sub-types, so called because they represent concepts generally known in geodetic 
practice, two more sub-types have been defined to permit modelling of certain relationships and constraints 
that exist between the principal sub-types. 

These additional sub-types are: 

a) Compound coordinate reference system; 

b) Derived coordinate reference system. 

9.4.2 Compound coordinate reference system 

The traditional separation of horizontal and vertical position described in Clause 6 has resulted in coordinate 
reference systems that are horizontal (2D) and vertical (1D) in nature, as opposed to truly 3-dimensional. It is 
established practice to combine the horizontal coordinates of a point with a height or depth from a different 
coordinate reference system. 

The coordinate reference system to which these 2D+1D coordinates are referenced combines the separate 
horizontal and vertical coordinate reference systems of the horizontal and vertical coordinates. Such a system 
is called a compound coordinate reference system (Compound CRS). It consists of a non-repeating sequence 
of two or more single coordinate reference systems, none of which can itself be compound. In general, a 
Compound CRS may contain any number of axes. The coordinate order within a coordinate tuple for a 
compound CRS shall follow the order of the component single CRSs and then the order of coordinates within 
the coordinate tuples for each of those component single CRSs. 

For spatial coordinates, a number of constraints exist for the construction of Compound CRSs. Coordinate 
reference systems that are combined shall not contain any duplicate or redundant axes. Valid combinations 
include: 

a) Geographic 2D + Vertical 

b) Geographic 2D + Engineering 1D (near vertical) 

c) Projected + Vertical 

d) Projected + Engineering 1D (near vertical) 

e) Engineering (horizontal 2D) + Vertical 

f) Engineering (1D linear) + Vertical 

Any single coordinate reference system, or any of the above listed combinations of spatial compound 
coordinate reference systems, can have a temporal reference system added. More than one temporal 
reference system may be added if these axes represent different time quantities.  

20 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

When more than two systems are combined to form a compound coordinate reference system, nesting of 
CCRSs is not permitted – the individual single systems are aggregated together. Figure 6 shows examples of 
the possible composition of spatial and spatio-temporal compound coordinate reference systems. 

Time Datum

Temporal CRS

Temporal CS

Compound CRS

Geographic CRS (2D) Vertical CRS

Vertical DatumGeodetic Datum

Ellipsoidal CS Gravity-related CS

Compound CRS

Geographic CRS (2D) Vertical CRS

Vertical DatumGeodetic Datum

Ellipsoidal CS Gravity-related CS

 

Figure 6 — Examples of spatial and spatio-temporal compound coordinate reference systems 

9.4.3 Derived coordinate reference system 

Some coordinate reference systems are defined by applying a coordinate conversion to another coordinate 
reference system. Such a coordinate reference system is called a Derived CRS and the coordinate reference 
system from which it was derived is called the Base CRS. The best-known example of a Derived CRS is a 
Projected CRS, which is always derived from a base Geographic CRS by applying the coordinate conversion 
known as a map projection.  

The principal subtypes of CRS discussed in Clause 9.3 all include one datum definition. A Derived CRS 
inherits its datum from its base CRS. These two cases are modelled with derived associations between 
SC_SingleCRS and SC_Datum. Principal CRS subtypes use direct associations, Derived CRSs use indirect 
associations. 

In principle, all sub-types of single coordinate reference system may take on the role of either Base or Derived 
CRS with the exception of a Projected CRS. Projected CRS is modelled as an object class under its own 
name, rather than as a general Derived CRS of type “projected”. This has been done to honour common 

© ISO 2004 — All rights reserved 21
 



ISO/DIS 19111 

practice, which acknowledges Projected CRSs as one of the most frequently encountered types of coordinate 
reference systems. A projected CRS always has a geographic CRS as its base CRS. 

An example of a Derived CRS of derivedCRStype: “geographic” is one of which the unit of measure has been 
modified with respect to an earlier defined Geographic CRS, which then takes the role of base CRS. 

9.5 UML schema of Coordinate Reference System package 

Figure 7 shows the UML class diagram of the Coordinate Reference System package. The definition of the 
object classes of the package are provided in Tables 4 through 16. 

The diagram shows a derived association from the SC_SingleCRS class to the CS_CoordinateSystem class, 
with the usesCS rolename. This derived association is included to indicate that all of the subclasses of 
SC_SingleCRS have a direct association to CS_CoordinateSystem or one of its subclasses, as later detailed 
in Figure 9. In most cases, the multiplicity of the usesCS end of these associations is 1 (mandatory). In two 
cases, a subclass of SC_SingleCRS has a direct association to one of two alternative (XOR) subclasses of 
the CS_CoordinateSystem class. 

The diagram also shows a derived association from SC_SingleCRS to the CD_Datum class, with the 
usesDatum rolename. This derived association indicates that many, but not all, of the subclasses of 
SC_SingleCRS have a direct association to CD_Datum or to one of its subclasses, as later shown in Figure 
11. For the subclasses of SC_SingleCRS that have a direct association to CD_Datum or one of its subclasses, 
the multiplicity of the usesDatum end of the association is 1 (mandatory). For the subclasses of 
SC_SingleCRS that do not have a direct association to CD_Datum or one of its subclasses, the multiplicity of 
the usesDatum end of the association is 0 (no association). Please notice that SC_ProjectedCRS is modelled 
separately from SC_DerivedCRS to permit modelling of its more specific characteristics. 

22 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

SC_DerivedCRSType
+ geographic
+ vertical
+ geocentric
+ engineering
+ image
+ temporal

<<CodeList>>

SC_GeocentricCRS

SC_ImageCRS

SC_TemporalRS

SC_VerticalCRS

RS_ReferenceSystem
(from RS_ReferenceSystem)

<<Abstract>>

(derived)

SC_EngineeringCRS

(derived)

SC_CRS
+ scope [0..*] : CharacterString

<<Abstract>>

CC_CoordinateOperation
(from CC_CoordinateOperation)

<<Abstract>>

0..1 0..*

+sourceCRS

0..1 0..*Source

0..1 0..*

+target CRS

0..1 0..*Target

SC_GeneralDerivedCRS
<<Abstract>>

CC_Conversion
(from CC_CoordinateOperation)

0..*0..*

+definedBy
Conversion

1

IO_IdentifiedObjectBase
(from IO_IdentifiedObject)

<<Abstract>>

SC_CompoundCRS CD_Datum
(from CD_Datum)

<<Abstract>>

CS_CoordinateSystem
(from CS_CoordinateSystem)

<<Abstract>>

SC_SingleCRS
<<Abstract>>2..*0..*

+includesCRS

2..*{ordered}0..*
0..1

0..* +usesDatum

0..1

0..*

1

0..*

+usesCS1

0..*

SC_DerivedCRS
+ derivedCRSType : SC_DerivedCRSType

0..*

1

0..*

+usesCS

1

1

0..*

+base
CRS

1

0..*

SC_GeographicCRS

SC_ProjectedCRS

1

0..*

+base
CRS

1

0..*

 

Figure 7 — SC Coordinate Reference System package 

© ISO 2004 — All rights reserved 23
 



ISO/DIS 19111 

Table 4 — Defining elements of SC_CRS class 

Description: Coordinate reference system which is usually single but may be compound. 

Stereotype: Abstract  

Derived from RS_ReferenceSystem 
IO_IdentifiedObjectBase 

Association roles: sourceCRS from CC_CoordinateOperation [0..1] 
targetCRS from CC_CoordinateOperation [0..1] 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

CRS scope scope CharacterString O N Description of usage, or limitations of usage, for which
this CRS is valid. 

 

5 attributes inherited from IO_IdentifiedObjectBase and from RS_ReferenceSystem: 

Note: As an exception to elsewhere in this International Standard, inherited attributes are included in this class table to allow the CRS name, CRS
alias and CRS identifier attributes to be shown together. 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

CRS name name RS_Identifier M 1 This is the primary name for the CRS. Aliases and other 
identifiers may be given through the attributes CRSalias 
and identifier. 

CRS alias alias GenericName O N An alias by which this CRS is known. 

CRS identifier identifier RS_Identifier O N An identifier which references elsewhere the CRS's 
defining information; alternatively an identifier by 
which this CRS can be referenced. 

CRS validity domainOfValidity EX_Extent O N Area or region or timeframe in which this CRS is 
valid. 

CRS remarks remarks CharacterString O 1 Comments on or information about this CRS, 
including data source information. 

 
Table 5 — Defining elements of SC_SingleCRS class 

Description: Coordinate reference system consisting of one Coordinate System and one Datum (as opposed to a Compound CRS). 
Note: In ISO 19111:2003, this class was called SC_CoordinateReferenceSystem. 

Stereotype: Abstract 

Derived from SC_CRS 

Association roles: (derived) usesDatum to CD_Datum [0..1] 
(derived) usesCS to CS_CoordinateSystem [1] 
baseCRS from SC_DerivedCRS [1] 
(associations inherited from SC_CRS) 

Public attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 
Table 6 — Defining elements of SC_CompoundCRS class 

Description: A coordinate reference system describing the position of points through two or more independent single coordinate 
reference systems. It is associated with a non-repeating sequence of two or more instances of SC_SingleCRS. 

Stereotype: (none) 

Derived from SC_CRS 

Association roles: includesCRS to SC_SingleCRS [2..*] {ordered} 
(associations inherited from SC_CRS) 

Public attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 

24 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 7 — Defining elements of SC_GeneralDerivedCRS class 

Description: A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system. 

Stereotype:  Abstract 

Derived from  SC_SingleCRS 

Association roles: definedByConversion to CC_Conversion [1]  
(associations inherited from SC_SingleCRS) 

Public attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 
Table 8 — Defining elements of SC_DerivedCRS class 

Description: A single coordinate reference system that is defined by its coordinate conversion from another single coordinate reference 
system known as the base CRS. The base CRS cannot be a projected coordinate reference system. 

Stereotype: (none) 

Derived from SC_GeneralDerivedCRS 

Association roles: usesCS to CS_CoordinateSystem [1] 
baseCRS to SC_SingleCRS [1] 
(associations inherited from SC_ GeneralDerivedCRS) 

Public attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Derived CRS type derivedCRStype SC_DerivedCRST
ype 

M 1 Type of this derived coordinate reference system. 

 

© ISO 2004 — All rights reserved 25
 



ISO/DIS 19111 

Table 9 — Defining elements of SC_DerivedCRSType class 

Description: The type of the derived CRS, according to the classification of principal CRS types. 

Stereotype: CodeList 

Derived from (none) 

Association roles: (none) 

Used by: SC_DerivedCRS 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Geographic CRS geographic CharacterString C 1 A coordinate reference system based on an 
ellipsoidal approximation of the geoid; provides an 
accurate representation of the geometry of 
geographic features for a large portion of the 
earth's surface. 

Vertical CRS vertical CharacterString C 1 A coordinate reference system used for recording 
of heights or depths. Vertical CRSs make use of 
the direction of gravity to define the concept of 
height or depth, but the relationship with gravity 
may not be straightforward. 

Geocentric CRS geocentric CharacterString C 1 A coordinate reference system with the origin at 
the centre of mass of the earth. A geocentric CRS 
deals with the earth's curvature by taking a 3D 
spatial view. 

Engineering CRS engineering CharacterString C 1 A contextually local coordinate reference system; 
which can be divided into two broad categories: 

- earth-fixed systems applied to engineering 
activities on or near the surface of the earth; 

- CRSs on moving platforms such as road vehicles, 
vessels, aircraft, or spacecraft. 

Image CRS image CharacterString C 1 An engineering coordinate reference system 
applied to locations in images. 

Temporal RS temporal CharacterString C 1 A reference system used for the recording of time. 

Condition: One and only one of the listed attributes shall be supplied. 

 

Table 10 — Defining elements of SC_GeocentricCRS class 

Description: A 3D coordinate reference system with the origin at the centre of mass of the earth. A geocentric CRS deals with the earth's 
curvature by taking a 3D spatial view. 

Stereotype: (none) 

Derived from SC_SingleCRS 

Association roles: usesDatum to CD_GeodeticDatum [1] 
usesCartesianCS to CS_CartesianCS [0..1] 
usesSphericalCS to CS_SphericalCS [0..1] 
(associations inherited from SC_SingleCRS)  
Note attached to usesCartesianCS and usesSphericalCS associations: {XOR} 

Public attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 

26 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 11 — Defining elements of SC_GeographicCRS class 

Description: A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation 
of the geometry of geographic features for a large portion of the earth's surface. 

Stereotype: (none) 

Derived from SC_SingleCRS 

Association roles: usesDatum to CD_GeodeticDatum [1] 
usesCS to CS_EllipsoidalCS [1]  
baseCRS from ProjectedCRS [0..*] 
(associations inherited from SC_SingleCRS) 

Public Attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 

Table 12 — Defining elements of SC_ProjectedCRS class 

Description: A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that 
the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly 
applied to calculated bearings and distances to produce values that are a close match to actual field values. 

Stereotype: (none) 

Derived from SC_GeneralDerivedCRS 

Association roles: usesCS to CS_CartesianCS [1]  
baseCRS to SC_GeographicCRS [1 
(associations inherited from SC_GeneralDerivedCRS) 

Public Attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 
Table 13 — Defining elements of SC_EngineeringCRS class 

Description: A contextually local coordinate reference system which can be divided into two broad categories:  
- earth-fixed systems applied to engineering activities on or near the surface of the earth;  
- CRSs on moving platforms such as road vehicles, vessels, aircraft or spacecraft. 

Stereotype: (none) 

Derived from SC_SingleCRS 

Association roles: usesDatum to CD_EngineeringDatum [1] 
usesCS to CS_CoordinateSystem [1] 
(associations inherited from SC_SingleCRS) 

Public Attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 
Table 14 — Defining elements of SC_ImageCRS class 

Description: An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated 
as a separate sub-type because for images a separate user community with its own terms of reference exists. 

Stereotype: (none) 

Derived from SC_SingleCRS 

Association roles: usesDatum to CD_ImageDatum [1] 
usesCartesianCS to CS_CartesianCS [0..1]  
usesAffineCS to CS_AffineCS [0..1] 
(associations inherited from SC_SingleCRS)  
Note attached to usesCartesianCS and usesAffineCS associations: {XOR} 

Public attributes: 6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 

© ISO 2004 — All rights reserved 27
 



ISO/DIS 19111 

Table 15 — Defining elements of SC_VerticalCRS class 

Description: A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity 
to define the concept of height or depth, but the relationship with gravity may not be straightforward. 
 
By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights 
cannot exist independently, but only as inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate 
reference system. 

Stereotype: (none) 

Derived from SC_SingleCRS 

Association roles: usesDatum to CD_VerticalDatum [1] 
usesCS to CS_VerticalCS [1]] 
(associations inherited from SC_SingleCRS) 

Public Attributes: 6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 
Table 16 — Defining elements of SC_TemporalCRS class 

Description: A 1D coordinate reference system used for the recording of time. 

Stereotype: (none) 

Derived from SC_SingleCRS 

Association roles: usesDatum to CD_TemporalDatum [1] 
usesCS to CS_TimeCS [1] 
(associations inherited from SC_SingleCRS) 

Public attributes:  6 attributes inherited from IO_IdentifiedObjectBase, RS_ReferenceSystem and SC_CRS. 

 

10 Coordinate System package 

10.1 Introduction 

The Coordinate System package models two main concepts: coordinate system and coordinate system axis. 

10.2 Coordinate System 

The coordinates of points are recorded in a coordinate system. A coordinate system is the set of coordinate 
system axes that spans the coordinate space. This concept implies the set of mathematical rules that 
determine how coordinates are associated with invariant quantities such as angles and distances. In other 
words, a coordinate system implies how coordinates are calculated from geometric elements such as 
distances and angles and vice versa. The calculus required to derive angles and distances from point 
coordinates in a map plane and vice versa is simple Euclidean 2D arithmetic. To do the same on the surface 
of an ellipsoid (curved 2D space) involves more complex ellipsoidal calculus. These rules cannot be specified 
in detail, but are implied in the geometric properties of the coordinate space. 

NOTE 1 The word ‘distance’ is used loosely in the above description. Strictly speaking distances are not invariant 
quantities, as they are expressed in the unit of measure defined for the coordinate system; ratios of distances are invariant. 

One coordinate system may be used by multiple coordinate reference systems. Its axes can be spatial or 
temporal. 

A coordinate system is composed of a non-repeating sequence of coordinate system axes, the number of 
axes being equal to the dimension of the space of which it describes the geometry. Coordinates in coordinate 
tuples shall be supplied in the same order as the coordinate axes are defined. 

The dimension of the coordinate space, the names, the units of measure, the directions and sequence of the 
axes are all part of the Coordinate System definition. The number of coordinates in a tuple shall be equal to 
the number of coordinate axes in the coordinate system. 

28 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

NOTE 2 It is therefore not permitted to supply a coordinate tuple with two heights of different definition in the same 
coordinate tuple. 

Coordinate systems are divided into subtypes by the geometric properties of the coordinate space spanned 
and the geometric properties of the axes themselves (straight or curved; perpendicular or not). Certain 
subtypes of coordinate system can only be used with specific subtypes of coordinate reference system as 
shown in the UML class diagram in Figure 9. A description of coordinate system subtypes is provided in 
Table 17. 

Table 17 — Subtypes of coordinate system and constraints in its relationship with coordinate 
reference system 

CS subtype Description Used with 
CRS type(s) 

Cartesian 1-, 2-, or 3-dimensional coordinate system. It gives the position of points relative to 
orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it 
contains a single straight axis. In the multi-dimensional case, all axes shall have the 
same unit of measure. 

Geocentric 

Projected 

Engineering 

Image 

affine 2- or 3-dimensional coordinate system with straight axes that are not necessarily 
orthogonal. 

Engineering 

Image 

ellipsoidal 2- or 3-dimensional coordinate system in which position is specified by geodetic latitude, 
geodetic longitude and (in the three-dimensional case) ellipsoidal height, associated with 
one or more geographic coordinate reference systems. 

Geographic 

Engineering 

spherical 3-dimensional coordinate system with one distance, measured from the origin, and two 
angular coordinates. Not to be confused with an ellipsoidal coordinate system based on 
an ellipsoid ‘degenerated’ into a sphere 

Geocentric 

Engineering 

cylindrical 3-dimensional coordinate system consisting of a polar coordinate system extended by a 
straight coordinate axis perpendicular to the plane spanned by the polar coordinate 
system. 

Engineering 

polar 2-dimensional coordinate system in which position is specified by distance from the 
origin and the angle between the line from origin to point and a reference direction. 

Engineering 

vertical 1-dimensional coordinate system used to record the heights (or depths) of points 
dependent on the Earth’s gravity field. An exact definition is deliberately not provided as 
the complexities of the subject fall outside the scope of this specification. 

Vertical 

Engineering 

linear 1-dimensional coordinate system that consists of the points that lie on the single axis 
described.. Example: usage of the line feature representing a pipeline to describe points 
on or along that pipeline. 

This International Standard only lends itself to be used for simple (=continuous) linear 
systems. For a more extensive treatment of the subject, particularly as applied to the 
transportation industry, refer to ISO 19133. 

Engineering 

temporal 1-dimensional coordinate system containing a single time axis and used to describe the 
temporal position of a point in the specified time units from a specified time origin. 

Temporal 

 

10.3 Coordinate system axis 

A coordinate system is composed of a non-repeating sequence of coordinate system axes. Each of its axes is 
completely characterised by a unique combination of axis name, axis abbreviation, axis direction and axis unit 
of measure. 

The concept of coordinate axis requires some clarification. Consider an arbitrary x, y, z coordinate system. 
The x-axis may be defined as the locus of points with y = z = 0. This is easily enough understood if the x, y, z 
coordinate system is a Cartesian system and the space it describes is Euclidean. It becomes a bit more 
difficult to understand in the case of a strongly curved space, such as the surface of an ellipsoid, its geometry 
described by an ellipsoidal coordinate system (2D or 3D). Applying the same definition by analogy to the 
curvilinear latitude and longitude coordinates the latitude axis would be the equator and the longitude axis 
would be the prime meridian, which is not a satisfactory definition. 

© ISO 2004 — All rights reserved 29
 



ISO/DIS 19111 

Bearing in mind that the order of the coordinates in a coordinate tuple shall be the same as the defined order 
of the coordinate axes, the ‘i-th’ coordinate axis of a coordinate system is defined as the locus of points for 
which all coordinates with sequence number not equal to ‘i’, have a constant value locally (whereby i = 1...n, 
and n is the dimension of the coordinate space). 

It will be evident that the addition of the word ‘locally’ in this definition apparently adds an element of ambiguity 
and this is intentional. However, the definition of the coordinate parameter associated with any axis has to be 
unique. The coordinate axis itself should not be interpreted as a unique mathematical object, the associated 
coordinate parameter should. 

EXAMPLE Geodetic latitude is defined as the “Angle from the equatorial plane to the perpendicular to the ellipsoid 
through a given point, northwards usually treated as positive”. However, when used in an ellipsoidal coordinate system the 
geodetic latitude axis will be described as pointing ‘north’. At two different points on the ellipsoid the direction ‘north’ will be 
a spatially different direction, but the concept of latitude is the same. 

The specified direction of the coordinate axes is often only approximate. For example, two geographic 
coordinate reference systems that make use of the same ellipsoidal coordinate system will usually be 
associated with the earth through two different geodetic datums. This may lead to the two uses of the 
coordinate system being slightly rotated with respect to each other. 

In a number of cases usage of coordinate system axis names is constrained by geodetic custom, depending 
on the coordinate reference system type. These constraints are shown in Table 18. This constraint works in 
two directions; for example the names ‘geodetic latitude’ and ‘geodetic longitude’ shall be used to designate 
the coordinate axis names associated with a geographic coordinate reference system. Conversely, these 
names shall not be used in any other context. 

Table 18 — Some naming constraints for coordinate system axis 

CS CRS Permitted coordinate system axis names 

Cartesian geocentric geocentric X, geocentric Y, geocentric Z 

spherical geocentric spherical latitude, spherical longitude, geocentric radius 

ellipsoidal geographic geodetic latitude, geodetic longitude, ellipsoidal height (if 3D) 

vertical vertical depth or gravity-related height 

Cartesian projected northing or southing, easting or westing 

 
Image and engineering coordinate reference systems may make use of names specific to the local context or 
custom and are therefore not included as constraints in the above list. 

EXAMPLE The combination {Latitude, Lat, north, degree} would lead to one instance of the object class 'coordinate 
system axis'; the combination {Latitude, ϕ, north, degree} to another instance, the axis abbreviation being different. 

10.4 UML schema of CS Coordinate System package 

Figure 8 shows the UML class diagram of the Coordinate System package. The associations between 
Coordinate Reference System subtypes and Coordinate System subtypes are shown in the UML class 
diagram in Figure 9. The definition of the object classes of package CS_CoordinateSystem is provided in 
Tables 19 through 32.  

30 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

CS_PolarCS

CS_SphericalCS

CS_CylindricalCSCS_UserDefinedCS

CS_AffineCS

CS_VerticalCS

CS_LinearCS

CS_TimeCS

(derived)
CS_CoordinateSystemAxis

+ axisAbbrev : CharacterString
+ axisDirection : CS_AxisDirection
+ axisUnitID : UnitOfMeasure
+ minimumValue [0..1] : Number
+ maximumValue [0..1] : Number
+ rangeMeaning [0..1] : CS_RangeMeaning

SC_SingleCRS
(from SC_CoordinateReferenceSystem)

<<Abstract>>

CS_CoordinateSystem
<<Abstract>> 0..*

0..* +usesAxis

0..*{ordered}

0..*

0..*

1

0..*

+usesCS1

CS_EllipsoidalCS

CS_CartesianCS

CS_RangeMeaning
+ exact
+ wraparound

<<CodeList>>
IO_IdentifiedObject
(from IO_Identi fiedObject)

<<Abstract>>
CS_AxisDirection

+ north
+ northNorthEast
+ northEast
+ eastNorthEast
+ east
+ eastSouthEast
+ southEast
+ southSouthEast
+ south
+ southSouthWest
+ southWest
+ westSouthWest
+ west
+ westNorthWest
+ northWest
+ northNorthWest
+ up
+ down
+ geocentricX
+ geocentricY
+ geocentricZ
+ future
+ past
+ columnPositive
+ columnNegative
+ rowPositive
+ rowNegative
+ displayRight
+ displayLeft
+ displayUp
+ displayDown

<<CodeList>>

 

Figure 8 — CS Coordinate System package 

See Figure 9 for detail of the associations between CS_CoordinateSystem and SC_SingleCRS. 

© ISO 2004 — All rights reserved 31
 



ISO/DIS 19111 

CS_VerticalCS
(from CS_CoordinateSystem)

SC_VerticalCRS

1

0..*

+usesCS1

0..*

CS_EllipsoidalCS
(from CS_CoordinateSystem)

CS_TimeCS
(from CS_CoordinateSystem)

SC_TemporalRS

1

0..*

+usesCS1

0..*

SC_GeneralDerivedCRS
<<Abstract>>

Not shown here: Four other subclasses of 
CS_CoordinateSystem class, used only by 
SC_EngineeringCRS and SC_DerivedCRS

CS_SphericalCS
(from CS_CoordinateSystem)

SC_GeocentricCRS

0..1

0..*

+usesSphericalCS0..1

0..*

    {XOR}     {XOR}

SC_EngineeringCRS

CS_CoordinateSystem
(from CS_CoordinateSystem)

<<Abstract>>

1

0..*

+usesCS

1

0..*

SC_SingleCRS
<<Abstract>>

SC_DerivedCRS
+ derivedCRSType : SC_DerivedCRSType

0..*

1

0..*

+usesCS

1

1

0..*

+baseCRS

1

0..*

Not shown here: Four other subclasses of 
CS_CoordinateSystem class, used only by 
SC_EngineeringCRS and SC_DerivedCRS

SC_GeocentricCRS

SC_GeographicCRS

1

0..*

+usesCS1

0..*

SC_ProjectedCRS

1 0..*1+baseCRS 0..*

CS_CartesianCS
(from CS_CoordinateSystem)

0..1

0..*

+usesCartesianCS
0..1

0..*

1

0..*

1

+uses
CS

0..*

SC_ImageCRS

0..1

0..*

0..1
+usesCartesianCS

0..*

CS_AffineCS
(from CS_CoordinateSystem)

0..1

0..*

0..1 +usesAffineCS

0..*

 

Figure 9 — Coordinate Reference System type associations to Coordinate System type 

Table 19 — Defining elements of CS_CoordinateSystem class 

Description: A coordinate system (CS) is the non-repeating sequence of coordinate system axes that spans a given coordinate space. A 
CS is derived from a set of mathematical rules for specifying how coordinates in a given space are to be assigned to points. 
The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations 
are recorded. 

Stereotype: Abstract 

Derived from IO_IdentifiedObject 

Association roles: usesAxis to CS_CoordinateSystemAxis [1..*] (ordered) 
usesCS from SC_EngineeringCRS [1] 
usesCS from SC_DerivedCRS [1]  
(derived) usesCS from SC_SingleCRS [1] 

Public attributes: 4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

32 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 20 — Defining elements of CS_CartesianCS class 

Description: A 1-, 2-, or 3-dimensional coordinate system. In the 1-dimensional case, it contains a single straight coordinate axis. In the 
2- and 3-dimensional cases it gives the position of points relative to orthogonal straight axes. In the multi-dimensional cases, 
all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations; the 
number of associations shall equal the dimension of the CS. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: usesCS from SC_ProjectedCRS [1] 
usesCartesianCS from SC_GeocentricCRS [0..1] 
usesCartesianCS from SC_ImageCRS [0..1] 
(associations inherited from CS_CoordinateSystem)  
Note attached to usesCartesianCS and usesSphericalCS associations from SC_GeocentricCRS: {XOR} 
Note attached to usesCartesianCS and usesObliqueCartesianCS associations SC_ImageCRS: {XOR} 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 21 — Defining elements of CS_AffineCS class 

Description: A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An AffineCS 
shall have two or three usesAxis associations; the number of associations shall equal the dimension of the CS. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: uses AffineCS from SC_ImageCRS [0..1] 
(associations inherited from CS_CoordinateSystem)  
Note attached to usesCartesianCS and usesAffineCS associations from SC_ImageCRS: {XOR} 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 22 — Defining elements of CS_EllipsoidalCS class 

Description: A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in 
the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations; the number 
of associations shall equal the dimension of the CS. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: usesCS from SC_GeographicCRS [1] 
(associations inherited from CS_CoordinateSystem) 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

Table 23 — Defining elements of CS_SphericalCS class 

Description: A three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be 
confused with an ellipsoidal coordinate system based on an ellipsoid "degenerated" into a sphere. A SphericalCS shall have 
three usesAxis associations. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: usesSphericalCS from SC_GeocentricCRS [0..1] 
(associations inherited from CS_CoordinateSystem)  
Note attached to usesCartesianCS and usesSphericalCS associations: {XOR} 

Public attributes: 4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

© ISO 2004 — All rights reserved 33
 



ISO/DIS 19111 

Table 24 — Defining elements of CS_CylindricalCS class 

Description: A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis 
perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three usesAxis associations. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: (associations inherited from CS_CoordinateSystem) 

Public attributes: 4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

Table 25 — Defining elements of CS_PolarCS class 

Description: A two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between 
the line from the origin to a point and a reference direction. A PolarCS shall have two usesAxis associations. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: (associations inherited from CS_CoordinateSystem) 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 26 — Defining elements of CS_LinearCS class 

Description: A one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated 
coordinate is the distance – with or without offset – from the specified datum to the point along the axis. Example: usage of 
the line feature representing a pipeline to describe points on or along that pipeline. A LinearCS shall have one usesAxis 
association. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: (associations inherited from CS_CoordinateSystem) 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 27 — Defining elements of CS_VerticalCS class 

Description: A one-dimensional coordinate system used to record the heights or depths of points. Such a coordinate system is usually 
dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate 
system axis. An exact definition is deliberately not provided as the complexities of the subject fall outside the scope of this 
specification. A VerticalCS shall have one usesAxis association. 

Stereotype: (none) 

Derived from CS_CoordinateSystem 

Association roles: usesCS from SC_VerticalCRS [1] 
(associations inherited from CS_CoordinateSystem) 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 28 — Defining elements of CS_TimeCS class 

Description: A one-dimensional coordinate system containing a time axis, used to describe the temporal position of a point in the 
specified time units from a specified time origin. A TemporalCS shall have one usesAxis association. 

Stereotype:  (none) 

Derived from CS_CoordinateSystem 

Association roles: usesCS from SC_TemporalCRS [1] 
(associations inherited from CS_CoordinateSystem) 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

34 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

 

Table 29 — Defining elements of CS_UserDefinedCS class 

Description: A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other 
Coordinate System type. An example is a multilinear coordinate system which contains one coordinate axis that may have 
any 1-D shape which has no intersections with itself. This non-straight axis is supplemented by one or two straight axes to 
complete a 2 or 3 dimensional coordinate system. The non-straight axis is typically incrementally straight or curved. A 
UserDefinedCS shall have two or three usesAxis associations; the number of associations shall equal the dimension of the 
CS. 

Stereotype: (none)  

Derived from CS_CoordinateSystem 

Association roles: (associations inherited from CS_CoordinateSystem) 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 30 — Defining elements of CS_CoordinateSystemAxis class 

Description: Definition of a coordinate system axis. 

Stereotype: (none) 

Derived from IO_IdentifiedObject 

Association roles: usesAxis from CS_CoordinateSystem [1..*] 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Coordinate system axis 
abbreviation 

axisAbbrev CharacterString M 1 The abbreviation used for this coordinate system 
axis; this abbreviation is also used to identify the 
coordinates in the coordinate tuple. Examples 
are X and Y. 

Coordinate system axis 
direction 

axisDirection CS_AxisDirection M 1 Direction of this coordinate system axis (or in the 
case of Cartesian projected coordinates, the 
direction of this coordinate system axis locally). 
Examples: north or south, east or west, up or 
down. Within any set of coordinate system axes, 
only one of each pair of terms can be used. For 
earth-fixed CRSs, this direction is often 
approximate and intended to provide a human 
interpretable meaning to the axis. When a 
geodetic datum is used, the precise directions of 
the axes may therefore vary slightly from this 
approximate direction. Note that an 
EngineeringCRS often requires specific 
descriptions of the directions of its coordinate 
system axes. 

Coordinate system axis 
minimum value 

minimumValue Number O 1 The minimum value normally allowed for this 
axis, in the unit of measure for the axis. 

Coordinate system axis 
maximum value 

maximumValue Number O 1 The maximum value normally allowed for this 
axis, in the unit of measure for the axis. 

Coordinate system axis 
range meaning 

rangeMeaning CS_RangeMeaning C 1 Meaning of axis value range specified by 
minimumValue and maximumValue. This 
element shall be omitted when both 
minimumValue and maximumValue are omitted. 
It may be included when minimumValue and/or 
maximumValue are included. If this element is 
omitted when minimumValue or maximumValue 
are included, the meaning is unspecified. 

Coordinate system axis 
unit identifier 

axisUnitID UnitOf Measure M 1 Identifier of the unit of measure used for this 
coordinate system axis. The value of a 
coordinate in a coordinate tuple shall be 
recorded using this unit of measure. 

 

© ISO 2004 — All rights reserved 35
 



ISO/DIS 19111 

Table 31 — Defining elements of CS_RangeMeaning class 

Description: Meaning of the axis value range specified through maximumValue and minimumValue. 

Stereotype: CodeList 

Derived from (none) 

Association roles: (none) 

Used by: CS_CoordinateSystemAxis 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Exact exact CharacterString C 1 Any value between and including 
minimumValue and maximiumValue is valid. 

Wraparound wraparound CharacterString C 1 The axis is continuous with values wrapping 
around at the minimumValue and 
maximumValue. Values with the same 
meaning repeat modulo the difference 
between maximumValue and 
minimumValue. 

Condition: One and only one of the listed attributes shall be supplied. 

 

36 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 32 — Defining elements of CS_AxisDirection class 

Description: The direction of positive increase in the coordinate value for a coordinate system axis. 

Stereotype: CodeList 

Derived from (none) 

Association roles: (none) 

Used by: CS_CoordinateSystemAxis 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

north north CharacterString C 1 Axis positive direction is north. In a geographic or projected 
CRS, north is defined through the geodetic datum. In an 
engineering CRS, north may be defined with respect to an 
engineering object rather than a geographical direction. 

north-north-east northNorthEast CharacterString C 1 Axis positive direction is approximately north-north-east.  

north-east northEast CharacterString C 1 Axis positive direction is approximately north-east. 

east-north-east eastNorthEast CharacterString C 1 Axis positive direction is approximately east-north-east. 

east east CharacterString C 1 Axis positive direction is π/2 radians clockwise from north. 

east-south-east eastSouthEast CharacterString C 1 Axis positive direction is approximately east-south-east. 

south-east southEast CharacterString C 1 Axis positive direction is approximately south-east. 

south-south-east southSouthEast CharacterString C 1 Axis positive direction is approximately south-south-east. 

south south CharacterString C 1 Axis positive direction is π radians clockwise from north. 

south-south-west southSouthWest CharacterString C 1 Axis positive direction is approximately south-south-west. 

south-west south-west CharacterString C 1 Axis positive direction is approximately south-west. 

west-south-west westSouthWest CharacterString C 1 Axis positive direction is approximately west-south-west. 

west west CharacterString C 1 Axis positive direction is 3π/2 radians clockwise from north. 

west-north-west westNorthWest CharacterString C 1 Axis positive direction is approximately west-north-west. 

north-west northWest CharacterString C 1 Axis positive direction is approximately north-west. 

north-north-west northNorthWest CharacterString C 1 Axis positive direction is approximately north-north-west. 

up up CharacterString C 1 Axis positive direction is up relative to gravity. 

down down CharacterString C 1 Axis positive direction is down relative to gravity. 

Geocentric X geocentricX CharacterString C 1 Axis positive direction is in the equatorial plane from the 
centre of the modelled earth towards the intersection of the 
equator with the prime meridian. 

Geocentric Y geocentricY CharacterString C 1 Axis positive direction is in the equatorial plane from the 
centre of the modelled earth towards the intersection of the 
equator and the meridian π/2 radians eastwards from the 
prime meridian. 

Geocentric Z geocentricZ CharacterString C 1 Axis positive direction is from the centre of the modelled 
earth parallel to its rotation axis and towards its north pole. 

future future CharacterString C 1 Axis positive direction is towards the future. 

past past CharacterString C 1 Axis positive direction is towards the past. 

column-positive columnPositive CharacterString C 1 Axis positive direction is towards higher pixel column. 

column-negative columnNegative CharacterString C 1 Axis positive direction is towards lower pixel column. 

row-positive rowPositive CharacterString C 1 Axis positive direction is towards higher pixel row. 

row-negative rowNegative CharacterString C 1 Axis positive direction is towards lower pixel row. 

display-right displayRight CharacterString C 1 Axis positive direction is right in display. 

display-left displayLeft CharacterString C 1 Axis positive direction is left in display. 

display-up displayUp CharacterString C 1 Axis positive direction is towards top of approximately 
vertical display surface. 

display-down displayDown CharacterString C 1 Axis positive direction is towards bottom of approximately 
vertical display surface. 

Condition: One and only one of the listed attributes shall be supplied. 

 

© ISO 2004 — All rights reserved 37
 



ISO/DIS 19111 

11 Datum package 

11.1 Types of datums 

A datum specifies the relationship of a coordinate system to the earth thus creating a coordinate reference 
system. A datum can be used as the basis for one-, two- or three-dimensional systems. In some applications 
for an Engineering CRS, the relationship is to a moving platform. In these applications the datum itself is not 
time-dependent, but any transformations of the associated coordinates to a earth-fixed or other coordinate 
reference system will contain time-dependent parameters.  

Five subtypes of datum are specified: geodetic, vertical, engineering, image and temporal. Each datum 
subtype can be associated only with specific types of coordinate reference systems, as shown in Figure 11. A 
geodetic datum is used with three-dimensional or horizontal (two-dimensional) coordinate reference systems, 
and requires an ellipsoid definition and a prime meridian definition. It is used to describe large portions of the 
earth’s surface up to the entire earth’s surface. A vertical datum can only be associated with a vertical 
coordinate reference system. Image datum and engineering datum are both used in a local context only: to 
describe the origin of an image and the origin of an engineering (or local) coordinate reference system. A 
temporal datum is used to define the origin of the time axis in a temporal coordinate reference system. 

11.2 Vertical datum 

Further sub-typing is required to describe vertical datums adequately. The following types of vertical datum 
are distinguished: 

a) Geoidal. The zero value of the associated (vertical) coordinate system axis is defined to approximate a 
constant potential surface, usually the geoid. Such a reference surface is usually determined by a national 
or scientific authority and is then a well-known, named datum. This is the default vertical datum type, 
because it is the most common one encountered. 

b) Depth. The zero point of the vertical axis is defined by a surface that has meaning for the purpose for 
which the associated vertical measurements are used. For hydrographic charts, this is often a predicted 
nominal sea surface (that is, without waves or other wind and current effects) which occurs at low tide. 
Examples are Lowest Astronomical Tide (LAT) and Lowest Low Water Springs (LLWS). A different 
example is a sloping and undulating River Datum defined as the nominal river water surface occurring at a 
quantified river discharge. 

c) Barometric. A vertical datum is of type “barometric” if atmospheric pressure is the basis for the definition 
of the origin. Atmospheric pressure may be used as the intermediary to determine height (barometric 
height determination) or it may be used directly as the vertical coordinate, against which other parameters 
are measured. The latter case is applied routinely in meteorology.  

d) Other surface. In some cases, for example oil exploration and production, geological features, such as the 
top or bottom of a geologically identifiable and meaningful subsurface layer, are sometimes used as a 
vertical datum. Other variations to the above three vertical datum types may exist and are all bracketed in 
this category. 

11.3 Image datum 

The image pixel grid is defined as the set of lines of constant integer coordinate values. The term “image grid” 
is often used in other standards to describe the concept of Image CRS. However, care has to be taken to 
correctly interpret this term in the context in which it is used. The term “grid cell” is often used as a substitute 
for the term “pixel”. 

The grid lines of the image may be associated in two ways with the data attributes of the pixel or grid cell (ISO 
19123). The data attributes of the image usually represent an average or integrated value that is associated 
with the entire pixel. 

38 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

An image grid can be associated with this data in such a way that the grid lines run through the centres of the 
pixels. The cell centres will thus have integer coordinate values. In that case the attribute “pixel in cell” will 
have the value “cell centre”. 

Alternatively the image grid may be defined such that the grid lines associate with the cell or pixel corners 
rather than the cell centres. The cell centres will thus have non-integer coordinate values, the fractional parts 
always being 0.5. The attribute “pixel in cell” will now have the value “cell corner”. 

This difference in perspective has no effect on the image interpretation, but is important for coordinate 
transformations involving this defined image. 

11.4 Prime meridian 

A prime meridian defines the origin from which longitude values are specified. The prime meridian description 
is mandatory if the datum type is geodetic. Most geodetic datums use Greenwich as their prime meridian. 
Default values for the attributes prime meridian name and greenwichLongitude are "Greenwich" and 0 
respectively. If the prime meridian name is "Greenwich" then the value of Greenwich longitude shall be 0 
degrees. 

A prime meridian description is not used for any datum type other than geodetic. 

The data attributes of prime meridian are described in 11.6, Table 43. 

11.5 Ellipsoid 

An ellipsoid is defined that approximates the surface of the geoid. Because of the area for which the 
approximation is valid – traditionally regionally, but with the advent of satellite positioning often globally – the 
ellipsoid is typically associated with Geographic and Projected CRSs. An ellipsoid specification shall not be 
provided if the datum type is not geodetic. 

One ellipsoid shall be specified with every geodetic datum, even if the ellipsoid is not used computationally. 
The latter may be the case when a Geocentric CRS is used, for example in the calculation of satellite orbit and 
ground positions from satellite observations. Although use of a Geocentric CRS apparently obviates the need 
of an ellipsoid, the ellipsoid usually played a role in the determination of the associated geodetic datum. 
Furthermore one or more Geographic CRSs may be based on the same geodetic datum, which requires the 
correct ellipsoid to be associated with that datum. 

An ellipsoid is defined either by its semi-major axis and inverse flattening, or by its semi-major axis and semi-
minor axis. For some applications, for example small scale mapping in atlases, a spherical approximation of 
the geoid’s surface is used, requiring only the radius of the sphere to be specified. 

In the UML model, these options are modelled by a mandatory attribute “semiMajorAxis” in the class 
“SC_Ellipsoid”, plus a “secondDefiningParameter” attribute. That attribute uses the 
CD_SecondDefiningParameter class with the stereotype “Union”, meaning that one and only one of its 
attributes is used by an object. That class allows specification of the semiMinorAxis or inverseFlattening as 
the second defining ellipsoid parameter, or can specify that a spherical model is used. For a sphere, the 
attribute "semiMajorAxis" of the "Ellipsoid" class is interpreted as the radius of the sphere. 

The data attributes of ellipsoid are described in 11.6, Tables 41 and 42. 

11.6 UML schema of the CD Datum package 

Figure 10 shows the UML class diagram for the CD Datum package. There are restrictions on the 
associations between Coordinate Reference System subtypes and Datum subtypes which are shown in the 
UML class diagram in Figure 11. The definition of the object classes of this package is provided in Tables 33 
through 43. 

© ISO 2004 — All rights reserved 39
 



ISO/DIS 19111 

CD_PixelinCell
+ cellCenter
+ cellCorner

<<CodeList>>

CD_SecondDefiningParameter
+ inverseFlattening : Scale
+ semiMinorAxis : Length
+ isSphere : CharacterString = "sphere"

<<Union>>CD_VerticalDatumType
+ geoidal
+ depth
+ barometric
+ other surface

<<CodeList>>

(derived)

CD_TemporalDatum
+ origin : DateTime
+ anchorPoint [0..0] : CharacterString
+ realizationEpoch [0..0] : Date

CD_VerticalDatum
+ verticalDatumType : CD_VerticalDatumType = geoidal

CD_EngineeringDatum

CD_ImageDatum
+ pixelinCell : CD_PixelinCell

EX_Extent
(from EX_Extent)

<<DataType>>
IO_IdentifiedObject
(from IO_Identi fiedObject)

<<Abstract>>

CD_Datum
+ anchorPoint [0..1] : CharacterString
+ realizationEpoch [0..1] : Date
+ domainOfValidity [0..1] : EX_Extent
+ scope [0..*] : CharacterString

<<Abstract>>

SC_SingleCRS
(from SC_CoordinateReferenceSystem)

<<Abstract>>

0..1

0..*

+usesDatum0..1

0..*

CD_Ellipsoid
+ semiMajorAxis : Length
+ secondDefiningParameter : CD_SecondDefiningParameter

CD_PrimeMeridian
+ greenwichLongitude : Angle = 0

CD_GeodeticDatum

1

0..*

+usesEllipsoid

1

0..*

1

0..*

+usesPrimeMeridian

1

0..*

Defined in ISO 
19115

 

Figure 10 — CD Datum package 

See Figure 11 for detail of the associations between CD_Datum and SC_SingleCRS. 

40 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

SC_DerivedCRS
+ derivedCRSType : SC_DerivedCRSType

SC_ImageCRS

CD_ImageDatum
(from CD_Datum)

0..*

1

0..*

+uses
Datum1

SC_VerticalCRS

CD_VerticalDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum 1

SC_TemporalRS

CD_TemporalDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum 1

CD_Datum
(from CD_Datum)

<<Abstract>>

SC_GeneralDerivedCRS
<<Abstract>>SC_EngineeringCRS

CD_EngineeringDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum 1

SC_SingleCRS
<<Abstract>> 1

0..*

+baseCRS

1

0..*

SC_GeocentricCRS

CD_GeodeticDatum
(from CD_Datum)

0..*

1

0..*

+usesDatum 1

SC_GeographicCRS

0..*

1

0..*

+usesDatum1

SC_ProjectedCRS

1

0..*

+base
CRS

1

0..*

 
Figure 11 — Coordinate Reference System type associations with Datum type 

 

© ISO 2004 — All rights reserved 41
 



ISO/DIS 19111 

Table 33 — Defining elements of CD_Datum class  

Description: A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A 
datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference 
system. Each datum subtype can be associated with only specific types of coordinate reference systems. 

Stereotype: Abstract 

Derived from IO_IdentifiedObject 

Association roles: (derived) usesDatum from SC_SingleCRS [0..1] 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Datum anchor point anchorPoint CharacterString O 1 Description, possibly including coordinates, 
of the point or points used to anchor the 
datum to the Earth. Also known as the 
"origin", especially for Engineering and 
Image Datums. 

- For a geodetic datum, this point is also 
known as the fundamental point, which is 
traditionally the point where the relationship 
between geoid and ellipsoid is defined. In 
some cases, the "fundamental point" may 
consist of a number of points. In those 
cases, the parameters defining the 
geoid/ellipsoid relationship have then been 
averaged for these points, and the averages 
adopted as the datum definition. 

- For an engineering datum, the anchor 
point may be a physical point, or it may be a 
point with defined coordinates in another 
CRS. 

- For an image datum, the anchor point is 
usually either the centre of the image or the 
corner of the image. 

- For a temporal datum, this attribute is not 
defined. Instead of the anchor point, a 
temporal datum carries a separate time 
origin of type DateTime. 

Datum realization epoch realizationEpoch Date O 1 The time after which this datum definition is 
valid. This time may be precise (e.g. 1997.0 
for IRTF97) or merely a year (e.g. 1986 for 
NAD83(86)). In the latter case, the epoch 
usually refers to the year in which a major 
recalculation of the geodetic control 
network, underlying the datum, was 
executed or initiated. An old datum may 
remain valid after a new datum is defined. 
Alternatively, a datum may be replaced by a 
later datum, in which case the realization 
epoch for the new datum defines the upper 
limit for the validity of the replaced datum. 

Datum validity domainOfValidity EX_Extent O 1 Area or region or timeframe in which this 
datum is valid. 

Datum scope scope CharacterString O N Description of usage, or limitations of usage, 
for which this datum is valid. 

 

42 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 34 — Defining elements of CD_GeodeticDatum class  

Description: A geodetic datum defines the location and precise orientation in 3-dimensional space of a defined ellipsoid (or sphere) 
that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 

Stereotype: (none) 

Derived from CD_Datum 

Association roles: usesEllipsoid to CD_Ellipsoid [1] 
usesPrimeMeridian to CD_PrimeMeridian [1] 
usesDatum from SC_GeocentricCRS [1] 
usesDatum from SC_GeographicCRS [1] 

Public attributes: 8 attributes inherited from CD_Datum, IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 35 — Defining elements of CD_EngineeringDatum class  

Description: An engineering datum defines the origin of an engineering coordinate reference system, and is used in a region around 
that origin. This origin can be fixed with respect to the earth (such as a defined point at a construction site), or be a 
defined point on a moving vehicle (such as on a ship or satellite). 

Stereotype: (none) 

Derived from CD_Datum 

Association roles: usesDatum from SC_EngineeringCRS [1] 

Public attributes: 8 attributes inherited from CD_Datum, IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

Table 36 — Defining elements of CD_ImageDatum class  

Description: An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For an 
image datum, the anchor point is usually either the centre of the image or the corner of the image. 

Stereotype: (none) 

Derived from CD_Datum 

Association roles: usesDatum from SC_ImageCRS [1] 

Public attributes:  8 attributes inherited from CD_Datum, IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Pixel in Cell pixelinCell  CD_PixelinCell M 1 Specification of the way the image grid is 
associated with the image data attributes. 

© ISO 2004 — All rights reserved 43
 



ISO/DIS 19111 

 

Table 37 — Defining elements of CD_PixelinCell class 

Description: Specification of the way the image grid is associated with the image data attributes. 

Stereotype: CodeList 

Derived from (none) 

Association roles: (none) 

Used by: CD_ImageDatum 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Cell center cellCenter CharacterString C 1 The origin of the image coordinate system is 
the centre of a grid cell or image pixel. 

Cell corner cellCorner CharacterString C 1 The origin of the image coordinate system is 
the corner of a grid cell, or half-way between 
the centres of adjacent image pixels. 

Condition: One and only one of the listed attributes shall be supplied. 

 
Table 38 — Defining elements of CD_VerticalDatum class 

Description: A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height or 
zero-depth surface, including its position with respect to the Earth. There are several types of vertical datum, and each 
may place constraints on the coordinate axis with which it is combined to create a Vertical CRS. 

Stereotype: (none) 

Derived from CD_Datum 

Association roles: usesDatum from SC_VerticalCRS [1] 

Public attributes: 8 attributes inherited from CD_Datum, IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Vertical datum type vertDatumType  CD_VerticalDatum
Type 

M 1 Type of this vertical datum.  

Default is “geoidal”. 

 

44 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 39 — Defining elements of CD_VerticalDatumType class 

Description: Type of a vertical datum. 

Stereotype: CodeList 

Derived from (none) 

Association roles: (none) 

Used by: CD_VerticalDatum 

Public attributes:  

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Geoidal geoidal CharacterString C 1 The zero value of the associated vertical 
coordinate system axis is defined to 
approximate a constant potential surface, 
usually the geoid. Such a reference surface 
is usually determined by a national or 
scientific authority, and is then a well-
known, named datum. 

Depth depth CharacterString C 1 The zero point of the vertical axis is defined 
by a surface that has meaning for the 
purpose which the associated vertical 
measurements are used for. For 
hydrographic charts, this is often a predicted 
nominal sea surface (i.e., without waves or 
other wind and current effects) that occurs 
at low tide. 

Barometric barometric CharacterString C 1 Atmospheric pressure is the basis for the 
definition of the origin of the associated 
vertical coordinate system axis. 

Other surface otherSurface CharacterString C 1 In some cases, e.g. oil exploration and 
production, a geological feature, such as the 
top or bottom of a geologically identifiable 
and meaningful subsurface layer, is used as 
a vertical datum. Other variations to the 
above three vertical datum types may exist 
and are all included in this type. 

Condition: One and only one of these attributes shall be supplied. 

 
Table 40 — Defining elements of CD_TemporalDatum class 

 Description: A temporal datum defines the origin of a temporal reference system. 

Stereotype: (none) 

Derived from CD_Datum 

Association roles: usesDatum from SC_TemporalRS [1] 

Public attributes:  8 attributes inherited from CD_Datum, IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Origin origin DateTime M 1 The date and time origin of this temporal 
datum. 

 

Of the 8 inherited attributes the following two are mofidied: 

Anchor Point anchorPoint CharacterString M 0 This attribute is not used by a Temporal 
Datum. 

Realization epoch realizationEpoch Date M 0 This attribute is not used by a Temporal 
Datum. 

© ISO 2004 — All rights reserved 45
 



ISO/DIS 19111 

 

Table 41 — Defining elements of CD_Ellipsoid class  

Description: An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical 
terms, it is a surface formed by the rotation of an ellipse about its minor axis. 

Stereotype: (none) 

Derived from IO_IdentifiedObject 

Association roles: usesEllipsoid from CD_GeodeticDatum [1] 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Length of semi-major 
axis 

semiMajorAxis Length M 1 Length of the semi-major axis of the 
ellipsoid. 

Second defining 
parameter 

secondDefiningPara
meter 

CD_SecondDefinin
gParameter 

M 1 Definition of the second parameter that 
describes the shape of this ellipsoid. 

 
Table 42 — Defining elements of CD_SecondDefiningParameter class  

Description: Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: 
semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere 
rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the 
semi-major axis "degenerates" into the radius of the sphere. 

Stereotype: Union 

Derived from (none) 

Association roles: (none) 

Used by: CD_Ellipsoid 

Public attributes: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Inverse flattening inverseFlattening Scale C 1 Inverse flattening value of the ellipsoid. 

Length of semi-minor 
axis 

semiMinorAxis Length C 1 Length of the semi-minor axis of the 
ellipsoid. 

“Ellipsoid = Sphere” 
indicator 

isSphere CharacterString C 1 The ellipsoid is degenerate and is actually a 
sphere. The sphere is completely defined by 
the semi-major axis, which is the radius of 
the sphere. This attribute has the fixed text 
value "sphere". 

Condition:  One and only one of these three elements shall be supplied.  

 

46 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 43 — Defining elements of CD_PrimeMeridian class  

Description: A prime meridian defines the origin from which longitude values are determined.  
 
Note: Default value for prime meridian name is "Greenwich". When default applies, value for greenwichLongitude shall 
be 0 (degrees). 

Stereotype: (none) 

Derived from IO_IdentifiedObject 

Association roles: usesPrimeMeridian from CD_GeodeticDatum [1] 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Prime meridian 
Greenwich longitude 

greenwichLongitude Angle M 1 Longitude of the prime meridian measured 
from the Greenwich meridian, positive 
eastward. 

Default value: 0 degrees. 

Note: If the value of the prime meridian 
name is "Greenwich" then the value of 
greenwichLongitude shall be 0 degrees. 

 

12 Coordinate operation package 

12.1 General characteristics of coordinate operations 

If the relationship between any two coordinate reference systems is known, coordinate tuples can be 
transformed or converted to another coordinate reference system. The UML model therefore specifies a 
source and a target coordinate reference system for such coordinate operations.  

NOTE 1 A coordinate operation is often popularly said to transform coordinate reference system A into coordinate 
reference system B. Although this wording may be good enough for conversation, it should be realised that coordinate 
operations do not operate on coordinate reference systems, but on coordinates. This is important for the design of 
implementation specifications because it implies that a coordinate reference system cannot be created from another 
coordinate reference system by a coordinate operation. Neither can a coordinate operation be used to modify the 
definition of a coordinate reference system, for example by converting the units of measure of the coordinates. In all these 
cases, the source and target coordinate reference systems involved have to exist before the coordinate operation can do. 

NOTE 2 There is an exception to the rule of explicit specification of source and target coordinate reference systems. 
This exception, related to so-called defining coordinate conversions, is described in 12.2. 

Coordinate operations are divided into two subtypes: 

Coordinate conversion – mathematical operation on coordinates in which there are no parameters or the 
parameters are defined rather than empirically derived. It does not involve any change of datum. The most 
frequently encountered type of coordinate conversion is a map projection.  

Coordinate transformation – mathematical operation on coordinates in which the parameters are empirically 
derived. It does involve a change of datum. The stochastic nature of the parameters may result in several 
different versions of the same coordinate transformation. Therefore multiple coordinate transformations may 
exist for a given pair of coordinate reference systems, differing in their method, parameter values and 
accuracy characteristics. 

A coordinate operation (transformation or conversion) can be time-varying, and shall be time-varying if either 
the source or target CRS is moving relative to the other CRS. When the coordinate operation is time-varying, 
the coordinate operation method used will also be time-varying, and some of the parameters used by that 
coordinate operation method will involve time. For example, some of the parameters may have time, velocity, 
and/or acceleration values and units 

© ISO 2004 — All rights reserved 47
 



ISO/DIS 19111 

12.2 Coordinate conversions 

Coordinate conversions are coordinate operations that make use of exact, defined (rather than measured or 
computed) and therefore error-free parameter values. Corresponding pairs of coordinate tuples in each of the 
two coordinate reference systems connected through a coordinate conversion have a fixed arithmetic 
relationship. Additionally one of the two coordinate tuples cannot exist without specification of the coordinate 
conversion and the ‘source’ or 'base' coordinate reference system. Coordinate conversions are therefore 
intimately related to the earlier-defined concept of Derived CRS. 

The best-known example of this source-derived relationship is a projected coordinate reference system, which 
is always related to a base geographic coordinate reference system. The associated map projection 
effectively defines the projected coordinate reference system from the geographic coordinate reference 
system. This concept is modelled in Figures 7 and 12 as a direct link between coordinate reference system 
and coordinate conversion. 

Please note that this does not contradict the statement in the first paragraph of this subclause that a 
coordinate operation cannot be used to create or modify a coordinate reference system in a software 
implementation. The text above describes a static source-result relationship between coordinates in the two 
coordinate reference systems. For such defining coordinate conversions, no source and target coordinate 
reference system are defined. The usage of such a coordinate conversion is in the coordinate reference 
system, which will point to that coordinate conversion and to its source coordinate reference system. 

12.3 Concatenated coordinate operation 

A concatenated coordinate operation is a non-repeating sequence of coordinate operations. This sequence of 
coordinate operations is constrained by the requirement that the target coordinate reference system of each 
step shall be the same as the source coordinate reference system of the next step. The source coordinate 
reference system of the first step and the target coordinate reference system of the last step are the source 
and target coordinate reference systems specified for the concatenated coordinate operation. 

The above constraint should not be interpreted as implying that only those coordinate operations that have 
their source and a target coordinate reference system specified through the association pair between 
CC_CoordinateOperation and SC_CRS can be used in a concatenated coordinate operation. This would 
exclude coordinate conversions. Concatenated coordinate operations may contain coordinate transformations 
and/or coordinate conversions. 

The source and target coordinate reference systems of a coordinate conversion are defined in the 
SC_GeneralDerivedCRS, by specifying the base (i.e. source) CRS and the defining coordinate conversion. 
The derived coordinate reference system itself is the target CRS in this situation. When used in a 
concatenated coordinate operation, the coordinate conversion’s source and target coordinate reference 
systems are subject to constraint of the target CRS of one step being the same as the source CRS of the next 
step. 

The concatenated coordinate operation class is primarily intended to provide a mechanism that forces 
application software to use a preferred path to change coordinates from source to target coordinate reference 
system when a direct transformation between the two is not available. 

12.4 Pass-through coordinate operation 

Coordinate operations require input coordinate tuples of certain dimensions and produce output tuples of 
certain dimensions. The dimension of the source coordinate reference system need not be the same as that of 
the target source coordinate reference system. 

The pass-through coordinate operation specifies what subset of a coordinate tuple is subject to a requested 
coordinate operation. It takes the form of referencing another coordinate operation and specifying a sequence 
of numbers defining the positions in the coordinate tuple of the coordinates affected by that coordinate 
operation. 

48 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

NOTE The ability to define compound coordinate reference systems combining two or more other coordinate 
reference systems introduces a difficulty. For example, it may be required to transform only the horizontal or only the 
vertical component of a compound coordinate reference system, which will put them at odds with coordinate operations 
specified for either horizontal or vertical coordinates only. To the human mind this is a trivial problem, but not so for 
coordinate transformation software that ought to be capable of automatic operation, without human intervention; the 
software logic would be confronted with the problem of having to apply a coordinate operation expecting 2-dimensional 
CRSs to (2+1)=3-dimensional coordinate tuples. 

12.5 Coordinate operation method and parameters 

The algorithm used to execute a coordinate operation is defined in the coordinate operation method. Each 
coordinate operation method uses a number of parameters (although some coordinate conversions use none), 
and each coordinate operation assigns a value to these parameters. 

Most parameter values are numeric, but for some coordinate operation methods, notably those implementing 
a grid interpolation algorithm, the parameter value could be a file name and location (this may be a URI). An 
example is the NADCON coordinate transformation from NAD 27 to NAD 83 in the USA in which one pair of a 
series of pairs of grid files is used. 

It is recommended to make extensive use of identifiers, referencing well-known registers wherever possible. 
There is as yet no standard way of spelling or even naming the various coordinate operation methods. Client 
software requesting a coordinate operation to be executed by a coordinate transformation server 
implementation may therefore ask for a coordinate operation method which this server does not recognise, 
although a perfectly valid method using a different name may be available. The same holds for coordinate 
operation parameters used by any coordinate operation method. 

To facilitate recognition and validation it is recommended that the coordinate operation method formulae be 
included or referenced in the relevant object, if possible with a worked example. 

NOTE Concatenated coordinate operations and pass-through coordinate operations list single coordinate operations 
and themselves do not require a coordinate operation method to be specified. 

12.6 Parameter groups 

Some coordinate operation methods require that groups of coordinate operation parameters be repeatable as 
a group. Also, some coordinate operation methods may utilise a large number of coordinate operation 
parameters. In such cases, it is helpful to group related parameters. Each coordinate operation parameter 
group consists of a collection of coordinate operation parameters or nested coordinate operation parameter 
groups. Two or more coordinate operation parameter groups are then associated with a particular coordinate 
operation method. This way of modelling is not mandatory; all coordinate operation parameters may be 
assigned directly to the coordinate operation method. 

12.7 Implementation considerations 

This explanation is not complete without giving some thought to implementations. Coordinate transformation 
services should be able to automatically derive coordinate operations that are not stored explicitly in any 
permanent data store, in other words determine their own concatenated or inverse operations. The reason is 
that is practically impossible to store all possible pairs of coordinate reference systems in explicitly defined 
coordinate operations. The key to a successful software implementation is the ability to apply meaningful 
constraints and validations to this process. For example: it may be mathematically possible to derive a 
concatenated coordinate operation that will transform North American Datum of 1983 coordinates to Geodetic 
Datum of Australia 1994 coordinates; but in a practical sense that operation would be meaningless. The key 
validation that would flag such a coordinate operation as invalid would be a comparison of the two areas of 
validity and the conclusion that there is no overlap between these. 

Coordinate transformation services should also be able to derive or infer from a forward coordinate operation 
(‘A’ to ‘B’) the inverse or complementary coordinate operation (from ‘B’ to ‘A’). Most permanent data stores for 
coordinate reference parameter data will record only one of these two coordinate operations. The logic to 

© ISO 2004 — All rights reserved 49
 



ISO/DIS 19111 

derive the inverse coordinate operation should be built into the application software that performs the 
coordinate operation, be it server or client. 

In some cases, the algorithm for the inverse coordinate operation is the same as the forward algorithm, and 
for the inverse operation to be fully defined only the signs of the parameter values need to be reversed. An 
example is the 7-parameter Helmert transformation (both position vector and coordinate frame rotation 
convention). 

Some polynomial coordinate operation methods require the signs of only most, but not all, parameter values 
to be reversed. Other coordinate operation methods imply two algorithms, one for the forward and one for the 
inverse coordinate operation. The parameters are generally the same in that case. The latter situation 
generally applies to map projections. 

Finally the same algorithm may be used for the inverse coordinate operation, with entirely different parameter 
values. This is the case with some polynomial and affine coordinate operation methods. In those cases the 
inverse coordinate operation cannot be inferred from the forward coordinate operation but has to be explicitly 
defined. 

12.8 UML schema of Coordinate Operation package 

Figures 12 and 13 contain the two parts of the UML class diagram for the CC Coordinate Operation package. 
As indicated by the note in Figure 12, Figure 13 shows additional classes and associations from the 
CC_Operation class shown in Figure 12. The definition of the object classes of the CC Coordinate Operations 
package is provided in Tables 44 through 57. 

50 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

CC_ConcatenatedOperation
CC_SingleOperation

<<Abstract>>

0..* 2..*0..*

+usesOperation

2..*{ordered}

DQ_PositionalAccuracy
(from DQ_DataQuality)

<<Abstract>>

SC_CRS
(from SC_CoordinateReferenceSystem)

<<Abstract>>
CC_CoordinateOperation

+ operationVersion [0..1] : CharacterString
+ domainOfValidity [0..1] : EX_Extent
+ scope [0..*] : CharacterString
+ coordinateOperationAccuracy [0..*] : DQ_PositionalAccuracy

<<Abstract>>0..1 0..*

+sourceCRS

0..1 0..*Source

0..1 0..*

+target CRS

0..1 0..*Target

The "sourceCRS" and "targetCRS" associations are mandatory for coordinate transformations only. 
Coordinate conversions have a source CRS and a target CRS that are NOT specified through these 
associations, but through associations from GeneralDerivedCRS to CoordinateReferenceSystem. For 
a concatenated coordinate operation sequence of n coordinate operations: 
source CRS (concatenated coordinate operation) = source CRS (coordinate operation step 1) 
target CRS (coordinate operation step i) = source CRS (coordinate operation step i+1); i = 1 ...(n-1)
target CRS (concatenated coordinate operation) = target CRS (coordinate operation step n)
Instead of a forward coordinate operation, an inverse coordinate operation may be used for one or 
more of the coordinate operation steps mentioned above, if the inverse coordinate operation is 
uniquely defined by the forward coordinate operation method.

CC_PassThroughOperation
+ modifiedCoordinate : Sequence<Integer> CC_Operation

<<Abstract>>

0..* 10..*

+usesOperation

1

Additional associations to 
additional classes shown 
on package diagram part 2

EX_Extent
(from EX_Extent)

<<DataType>>

CC_Transformation
+ operationVersion : CharacterString

CC_Conversion
+ operationVersion [0..0] : CharacterStringSC_GeneralDerivedCRS

(from SC_CoordinateReferenceSystem)

<<Abstract>>

10..*

+definedByConversion

10..*

IO_IdentifiedObject
(from IO_IdentifiedObject)

<<Abstract>>

Defined in 
ISO 19115

 

Figure 12 — CC Coordinate Operation package part 1 

 

© ISO 2004 — All rights reserved 51
 



ISO/DIS 19111 

CC_ParameterValue
+ value : Measure
+ stringValue : CharacterString
+ integerValue : Integer
+ booleanValue : Boolean
+ valueList : Sequence<Measure>
+ integerValueList : Sequence<Integer>
+ valueFile : CharacterString

<<Union>>

CC_OperationParameter

0..* 10..*

+valueOfParameter

1

CC_OperationMethod
+ formula : CharacterString
+ sourceDimensions : Integer
+ targetDimensions : Integer

CC_GeneralOperationParameter
+ minimumOccurs [0..1] : Integer

<<Abstract>>

0..*

0..*

0..*

+usesParameter 0..*

CC_Operation
<<Abstract>> 0..* 10..*

+usesMethod

1

CC_OperationParameterGroup
+ maximumOccurs [0..1] : Integer

2..*

0..*

+includesParameter 2..*

0..*

CC_GeneralParameterValue
<<Abstract>>

0..*

0..*

0..*

+usesValue0..*

CC_ParameterValueGroup

10..*

+valuesOfGroup

10..*

2..*

1

2..* +includesValue

1

IO_IdentifiedObject
(from IO_IdentifiedObject)

<<Abstract>>
Class repeated 
from package 
diagram part 1

 

Figure 13 — CC Coordinate Operation package part 2 

52 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 44 — Defining elements of CC_CoordinateOperation class 

Description:  A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. 
Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse coordinate operation (from 
CRS B to CRS A). In some cases, the coordinate operation method algorithm for the inverse coordinate operation is the 
same as for the forward algorithm, but the signs of some coordinate operation parameter values have to be reversed. In 
other cases, different algorithms are required for the forward and inverse coordinate operations, but the same coordinate 
operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate 
operation shall be defined. 

Stereotype:  Abstract  

Derived from:  IO_IdentifiedObject 
Association roles:  sourceCRS to SC_CRS [0..1], association named Source 

targetCRS to SC_CRS [0..1], association named Target 
Note attached to sourceCRS and targetCRS associations:  

The "sourceCRS" and "targetCRS" associations are mandatory for coordinate transformations only. Coordinate conversions 
have a source CRS and a target CRS that are NOT specified through these associations, but through associations from 
GeneralDerivedCRS to CoordinateReferenceSystem. For a concatenated coordinate operation sequence of n coordinate 
operations:  
 source CRS (concatenated coordinate operation) = source CRS (coordinate operation step 1)  
 target CRS (coordinate operation step i) = source CRS (coordinate operation step i+1); i = 1 ...(n-1)  
 target CRS (concatenated coordinate operation) = target CRS (coordinate operation step n)  
Instead of a forward coordinate operation, an inverse coordinate operation may be used for one or more of the coordinate 
operation steps mentioned above, if the inverse coordinate operation is uniquely defined by the forward coordinate 
operation method. 

Public attributes: 4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Coordinate operation 
version 

operationVersion CharacterString C 1 Version of the coordinate transformation (i.e. 
instantiation due to the stochastic nature of the 
parameters). Mandatory when describing a 
coordinate transformation, and should not be 
supplied for a coordinate conversion.  

Coordinate operation 
validity 

domainOfValidity EX_Extent O 1 Area or region or timeframe in which this 
coordinate operation is valid. 

Coordinate operation 
scope 

scope CharacterString O N Description of usage, or limitations of usage, for 
which this coordinate operation is valid. 

Coordinate operation 
accuracy 

coordinateOperation
Accuracy 

DQ_PositionalAcc
uracy 

O N Estimate(s) of the impact of this coordinate 
operation on point accuracy. Gives position error 
estimates for target coordinates of this 
coordinate operation, assuming no errors in 
source coordinates. 

 
Table 45 — Defining elements of CC_ConcatenatedOperation class 

Description:  An ordered sequence of two or more single coordinate operations. The sequence of coordinate operations is constrained by 
the requirement that the source coordinate reference system of step (n+1) shall be the same as the target coordinate 
reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference 
system of the last step are the source and target coordinate reference system associated with the concatenated coordinate 
operation. Instead of a forward coordinate operation, an inverse operation may be used for one or more of the coordinate 
operation steps mentioned above, if the inverse coordinate operation is uniquely defined by the forward coordinate 
operation method. 

Stereotype:  (none) 

Derived from:  CC_CoordinateOperation 

Association roles:  usesOperation to CC_SingleOperation [2..*] {ordered} 
(associations inherited from CC_CoordinateOperation) 

Public attributes: 8 attributes inherited from CC_CoordinateOperation, IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

© ISO 2004 — All rights reserved 53
 



ISO/DIS 19111 

Table 46 — Defining elements of CC_SingleOperation class 

Description:  A single (not concatenated) coordinate operation. 

Stereotype:  Abstract   

Derived from:  CC_CoordinateOperation 

Association roles:  (aggregation) usesOperation from CC_PassThroughOperation [2..*] 
(associations inherited from CC_CoordinateOperation) 

Public attributes: 8 attributes inherited from CC_CoordinateOperation, IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 47 — Defining elements of CC_PassThroughOperation class 

Description:  A pass-through coordinate operation specifies that a subset of a coordinate tuple is subject to a specific coordinate 
operation. 

Stereotype:  (none) 

Derived from:  CC_SingleOperation 

Association roles:  (aggregation) usesOperation to CC_SingleOperation [0..1] (associations inherited from CC_SingleOperation) 

Public attributes:  8 attributes inherited from CC_CoordinateOperation, IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Modified coordinates modifiedCoordinate Sequence<Integer
> 

M 1 Ordered sequence of positive integers defining 
the positions in a coordinate tuple of the 
coordinates affected by this pass-through 
operation. 

 
Table 48 — Defining elements of CC_Operation class 

Description:  A mathematical operation on coordinates that transforms or converts their values to values referenced to another coordinate 
reference system. A coordinate operation uses an operation method, usually with associated parameter values. 

Stereotype:  Abstract   

Derived from:  CC_SingleOperation 

Association roles:  usesOperation from CC_PassThroughOperation [1] 
usesMethod to CC_OperationMethod [1] 
usesValue to CC_GeneralParameterValue [0..*] 
(associations inherited from CC_SingleOperation) 

Public attributes: 8 attributes inherited from CC_CoordinateOperation, IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 

54 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 49 — Defining elements of CC_Conversion class 

Description:  A coordinate operation that does not include any change of datum. The best-known example of a coordinate conversion is a 
map projection. The parameter values describing coordinate conversions are defined rather than empirically derived. 

Stereotype:  (none) 

Derived from:  CC_Operation 

Association roles:  definedByConversion from SC_GeneralDerivedCRS [1]  
(associations inherited from CC_Operation) 

Public attributes:  8 attributes inherited from CC_CoordinateOperation, IO_IdentifiedObject and IO_IdentifiedObjectBase, one of which is 
modified: 

Attribute name UML identifier Data type Obliga-
tion 

Maxi-
mum 

Occur-
rence 

Description 

Operation version operationVersion CharacterString O 0 This attribute is not used in a coordinate 
conversion. 

 

Table 50 — Defining elements of CC_Transformation class 

Description:  A coordinate operation othat usually includes a change of datum. The parameters of a coordinate transformation are 
empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This 
computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the coodinate 
transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same 
coordinate transformations between the same source and target CRSs. 

Stereotype:  (none) 

Derived from:  CC_Opereration 

Association roles:  (associations inherited from CC_Operation) 

Public attributes:  8 attributes inherited from CC_CoordinateOperation, IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga-
tion 

Maxi-
mum 

Occur-
rence 

Description 

Operation version operationVersion CharacterString M 1 Version of the coordinate transformation (i.e. 
instantiation due to the stochastic nature of the 
parameters). This attribute is mandatory in a 
coordinate transformation. 

 
Table 51 — Defining elements of CC_OperationMethod class 

Description:  The method (algorithm or procedure) used to perform the coordinate operation. 

Stereotype:  (none) 

Derived from:  (none) 
Association roles: (aggregation) usesParameter to CC_GeneralOperationParameter [0..*] 
 usesMethod from CC_Operation [1] 
 
Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Coordinate operation 
method formula 

formula CharacterString M 1  Formula(s) or procedure used by this operation 
method. This may be a reference to a 
publication. Note that the operation method may 
not be analytic, in which case this attribute 
references or contains the procedure, not an 
analytic formula. 

Dimension of source 
CRS 

sourceDimensions Integer M 1 Number of dimensions in the source CRS of this 
operation method. 

Dimension of target CRS targetDimensions Integer M 1 Number of dimensions in the target CRS of this 
operation method. 

 

© ISO 2004 — All rights reserved 55
 



ISO/DIS 19111 

Table 52 — Defining elements of CC_GeneralOperationParameter class 

Description:  Definition of a parameter or group of parameters used by a coordinate operation method. 

Stereotype:  Abstract 

Derived from:  IO_IdentifiedObject 

Association roles: (aggregation) usesParameter from CC_OperationMethod [0..*]  
(aggregation) includesParameter from CC_OperationParameterGroup [2..*] 

Public attributes:  4 attributes inherited from IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Minimum occurrences minimumOccurs Integer O 1 The minimum number of times that values for 
this parameter group or parameter are required. 
If this attribute is omitted, the minimum number 
is one. 

 
Table 53 — Defining elements of CC_OperationParameterGroup class 

Description:  The definition of a group of related parameters used by a coordinate operation method. 

Stereotype:  (none) 

Derived from:  CC_GeneralOperationParameter 

Association roles: (aggregation) includesParameter to CC_GeneralOperationParameter [2..*] 
valuesOfGroup from CC_ParameterValueGroup [1] 
(associations inherited from CC_GeneralOperationParameter) 

Public attributes:  5 attributes inherited from CC_GeneralOperationParameter, IO_IdentifiedObject and IO_IdentifiedObjectBase, plus: 

Attribute name UML identifier Data type Obliga
tion 

Maxi-
mum 

Occur-
rence 

Attribute description 

Maximum occurrences maximumOccurs Integer O 1 The maximum number of times that values for 
this parameter group or parameter can be 
included. If this attribute is omitted, the minimum 
number is one. 

 
Table 54 — Defining elements of CC_OperationParameter class 

Description:  The definition of a parameter used by a coordinate operation method. Most parameter values are numeric, but other types 
of parameter values are possible. 

Stereotype:  (none) 

Derived from:  CC_GeneralOperationParameter 

Association roles: valueOfParameter from CC_ParameterValue [1] 
(associations inherited from CC_GeneralOperationParameter) 

Public attributes:  5 attributes inherited from CC_GeneralOperationParameter, IO_IdentifiedObject and IO_IdentifiedObjectBase. 

 
Table 55 — Defining elements of CC_GeneralParameterValue class 

Description:  Parameter value or group of parameter values. 

Stereotype:   Abstract 

Derived from:  (none) 

Association roles:  (composition) usesValue from CC_Operation [0..*] 
 (composition) includesValue from CC_ParameterValueGroup [2..*] 

Public attributes: (none) 

 

56 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

Table 56 — Defining elements of CC_ParameterValueGroup class 

Description:  A group of related parameter values. The same group can be repeated more than once in a coordinate operation or 
higher level ParameterValueGroup, if those instances contain different values of one or more ParameterValues which 
suitably distinquish among those groups. 

Stereotype:        (none) 

Derived from:  CC_GeneralParameterValue 

Association roles:      (aggregation) includesValue to CC_GeneralParameterValue [2..*] 
                                    valuesOfGroup to CC_OperationParameterGroup [1] 
                                    (associations inherited from CC_GeneralParameterValue) 

Public attributes: (none inherited) 

 
Table 57 — Defining elements of CC_ParameterValue class 

Description:  A parameter value, ordered sequence of values, or reference to a file of parameter values. 

Stereotype:  Union 

Derived from:  CC_GeneralParameterValue 

Association roles:  valueOfParameter to CC_OperationParameter [1]  
(associations inherited from CC_GeneralParameterValue) 

Used by:  CC_Operation 

Public attributes:  (none inherited), plus: 

Attribute name UML identifier Data type Obligati
on 

Maxi-
mum 

Occur-
rence 

Attribute description 

Operation parameter 
numeric value 

value Measure C 1 Numeric value of the coordinate 
operation parameter with its associated 
unit of measure. 

Operation parameter 
string value 

stringValue CharacterString C 1 String value of a coordinate operation 
parameter. A string value does not have 
an associated unit of measure. 

Operation parameter 
integer value 

integerValue Integer C 1 Positive integer value of a coordinate 
operation parameter, usually used for a 
count. An integer value does not have an 
associated unit of measure. 

Operation parameter 
Boolean value 

booleanValue Boolean C 1 Boolean value of a coordinate operation 
parameter. A Boolean value does not 
have an associated unit of measure. 

Operation parameter 
value list 

valueList Sequence<Measure> C 1 Ordered collection, i.e. sequence, of two 
or more numeric values of a coordinate 
operation parameter list, where each 
value has the same associated unit of 
measure. 

Operation parameter 
integer value list 

integerValueList Sequence<Integer> C 1 Ordered collection, i.e. sequence, of two 
or more integer values of a coordinate 
operation parameter list, usually used for 
counts. These integer values do not have 
an associated unit of measure. 

Operation parameter file 
reference 

valueFile CharacterString C 1 Reference to a file or a part of a file 
containing one or more parameter 
values. When referencing a part of a file, 
that file shall contain multiple identified 
parts, such as an XML encoded 
document. Furthermore, the referenced 
file or part of a file can reference another 
part of the same or different files, as 
allowed in XML documents. 

Condition: One and only one of the listed attributes shall be supplied. 

 
 

© ISO 2004 — All rights reserved 57
 



ISO/DIS 19111 

Annex A 
(normative) 

 
Conformance 

A.1 Class A – Conformance of a coordinate reference system 

A.1.1 Abstract test suite 

To check that a coordinate reference system is in conformance with this International Standard, check that it 
satisfies the requirements given in A.1.2 to A.1.5. For coordinate reference system descriptions, conformance 
shall be tested against the mandatory and conditional elements (where the condition is true) that are 
described in Clauses 8 to 11. If the type of coordinate reference system type is projected, the test shall be 
extended to the mandatory elements and conditional element attributes (where the condition is true), as 
required by Clause 12. 

A.1.2 Test case identifier: Completeness test 

a) Test purpose: To determine whether all of the relevant entities and elements which are specified to be 
mandatory or mandatory under the conditions specified have been provided in the description. 

b) Test method: Check the coordinate reference system to ensure that the coordinate reference system 
description includes as a minimum all of the elements indicated as mandatory for that type of system in 
Tables 1 to 43 and, in the case of projected coordinate reference systems, additionally Tables 44 to 57.  

c) Reference: Clauses 7 to 11 and, in the case of projected coordinate reference systems, also Clause 12. 

d) Test type: Basic. 

A.1.3 Test case identifier: Maximum occurrence test 

g) Test purpose: To ensure each coordinate reference system element occurs not more than the number of 
times specified in the standard. 

h) Test method: Examine the subject coordinate reference system for the number of occurrences of each 
entity and element provided to ensure that the number of occurrences for each shall be not more than the 
'Maximum Occurrences' attribute specified in Clauses 7 to 11 and, in the case of projected coordinate 
reference systems, additionally Clause 12. 

i) Reference: Clauses 7 to 11 and in the case of projected coordinate reference systems, also Clause 12. 

d) Test type: Basic. 

A.1.4 Test case identifier: Data type test 

a) Test purpose: To determine if each coordinate reference system in the dataset uses the specified data 
type. 

b) Test method: Check the data type of each element of the description of a coordinate reference system to 
ensure that it is of the data type specified in Clauses 7 to 11 and, in the case of projected coordinate 
reference systems, additionally Clause 12. 

c) Reference: Clauses 7 to 11 and, in the case of projected coordinate reference systems, also Clause 12. 

58 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

d) Test type: Basic. 

A.1.5 Test case identifier: Unit test 

a) Test purpose: To ensure that the units shall be in agreement with ISO 1000. 

b) Test method: Check that any units of elements conform to ISO 1000. 

c) Reference: Clauses 7 to 11 and, in the case of projected coordinate reference systems, also Clause 12. 

d) Test type: Basic. 

A.2 Class B - Conformance of a coordinate operation 

A.2.1 Abstract test suite 

To check that a coordinate operation is in conformance with this International Standard, check that it satisfies 
the requirements given in A.2.2 to A.2.5. 

A.2.2 Test case identifier: Completeness test 

a) Test purpose: To determine whether all of the relevant, entities and elements which are specified to be 
mandatory or mandatory under the conditions specified have been provided in the description. 

b) Test method: Check the coordinate operation description includes all of the elements indicated as 
mandatory in Tables 44 to 57. 

c) Reference: Clause 12. 

d) Test type: Basic. 

A.2.3 Test case identifier: Maximum occurrence test 

a) Test purpose: To ensure each coordinate operation element occurs not more than the number of times 
specified in the standard. 

b) Test method: Examine the coordinate operation dataset for the number of occurrences of each entity and 
element provided to ensure that the number of occurrences for each shall be not more than the 
'Maximum Occurrences' attribute specified in Tables 44 to 57. 

c) Reference: Clause 12. 

d) Test type: Basic. 

A.2.4 Test case identifier: Data type test 

a) Test purpose: To determine if each coordinate operation element in the dataset uses the specified data 
type. 

b) Test method: Check the data type of each element of the description of a coordinate operation to ensure 
that it is of the data type specified in Tables 44 to 57. 

c) Reference: Clause 12. 

d) Test type: Basic. 

© ISO 2004 — All rights reserved 59
 



ISO/DIS 19111 

A.2.5 Test case identifier: Unit test 

a) Test purpose: To ensure that the units shall be in agreement with ISO 1000. 

b) Test method: Check that any units of elements conform to ISO 1000. 

c) Reference: Clause 12. 

d) Test type: Basic 

 

60 © ISO 2004 — All rights reserved
 



ISO/DIS 19111 

© ISO 2004 — All rights reserved 61
 

Bibliography 

[1] HOOIJBERG, M. Practical Geodesy, Springer 1997 

[2] ISO 31 (all parts), Quantities and units 

[3] ISO 19112, Geographic information – Spatial referencing by geographic identifiers. 

[4] ISO 19113, Geographic information – Quality principles 

[5] ISO 19133, Geographic information – Location based services tracking and navigation 

 


	Scope
	Conformance requirements
	Normative references
	Terms and definitions
	Conventions
	Symbols
	Abbreviated terms
	UML Notation
	Attribute status

	The geodetic context of spatial referencing by coordinates
	Coordinates
	Some geodetic concepts

	The UML model for spatial referencing by coordina
	Identified Object package
	General
	UML schema of Identified Object package

	Coordinate Reference System package
	Reference system
	Coordinate reference system
	Principal sub-types of coordinate reference system
	Additional sub-types of coordinate reference system
	Introduction
	Compound coordinate reference system
	Derived coordinate reference system

	UML schema of Coordinate Reference System package

	Coordinate System package
	Introduction
	Coordinate System
	Coordinate system axis
	UML schema of CS Coordinate System package

	Datum package
	Types of datums
	Vertical datum
	Image datum
	Prime meridian
	Ellipsoid
	UML schema of the CD Datum package

	Coordinate operation package
	General characteristics of coordinate operations
	Coordinate conversions
	Concatenated coordinate operation
	Pass-through coordinate operation
	Coordinate operation method and parameters
	Parameter groups
	Implementation considerations
	UML schema of Coordinate Operation package


