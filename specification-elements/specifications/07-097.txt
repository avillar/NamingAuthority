
07-097/07-097.pdf


 


 


 


 


 


Open Geospatial Consortium Inc.  


Date:   2007-08-10 


Reference number of this OGC
®
 project document:    OGC 07-097 


Version: 2 (Rev 2.1) 


Category: OGC
®
 Best Practice 


Editor:   Thomas Usländer (Ed.) 


Reference Model for the ORCHESTRA Architecture 
(RM-OA) V2 (Rev 2.1) 


  


 


Copyright notice 


See Copyright statement on next page 


To obtain additional rights of use, visit http://www.opengeospatial.org/legal/. 


Warning 


This document is not an OGC Standard. It is distributed for review and comment. It is subject 


to change without notice and may not be referred to as an OGC Standard. 


Recipients of this document are invited to submit, with their comments, notification of any 


relevant patent rights of which they are aware and to provide supporting documentation. 


 


 


 


 


Document type:    Abstract Specification 


Document subtype:    OGC
®
 Best Practice 


Document stage:    Approved 


Document language:  English 



http://www.opengeospatial.org/legal/





 


 


 


 


 


 


 


 


Copyright © 2007, ORCHESTRA Consortium 


The ORCHESTRA Consortium (http://www.eu-orchestra.org/contact.shtml) grants third parties the 
right to use and distribute all or parts of this document, provided that the ORCHESTRA project and 
the document are properly referenced. 


THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS 
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE 
POSSIBILITY OF SUCH DAMAGE. 


 


 


 


 


Preamble to the "Reference Model for the Orchestra 
Architecture (RM-OA)" 
 


This document specifies the Reference Model for the ORCHESTRA Architecture (RM-OA). It is an extension 
of the OGC Reference Model and contains a specification framework for the design of geospatial service-
oriented architectures and service networks. The RM-OA comprises the generic aspects of service-oriented 
architectures, i.e., those aspects that are independent of the risk management domain and thus applicable to 
other application domains. The ORCHESTRA Architecture is a platform-neutral (abstract) specification of the 
informational and functional aspects of service networks taking into account and evolving out of architectural 
standards and service specifications of ISO, OGC, W3C and OASIS. The target audience of the RM-OA com-
prise system architects, information modellers and system developers.  


 
The present revision 2.1 of the RM-OA is an editorial update of revision 2.0 (OGC Discussion Paper  07-024). 
It is restricted to the core document of the RM-OA. The major changes comprise: 


- refactoring of some basic service descriptions into interfaces according to the ORCHESTRA meta-
model for services 


- update of the specification of the Engineering Viewpoint 
- update of the service interaction patterns, e.g. semantic catalogue and a new pattern for Geo Rights 


Management 
- removal of information that is specific to the management of the ORCHESTRA project 


The UML specification of the ORCHESTRA Meta-model for information and services is an integral part of this 
document. 
 
For the ORCHESTRA abstract service specifications see http://www.eu-orchestra.org . 



http://www.eu-orchestra.org/contact.shtml

http://www.eu-orchestra.org/





 


 


 


 


 


     


 


 


 


FP6-511678 


 


ORCHESTRA 


 


Open Architecture and Spatial Data Infrastructure for 
Risk Management 


 


Integrated Project 


 


Priority 2.3.2.9 Improving Risk Management 


 


 


 


Reference Model for the ORCHESTRA Architecture 


(RM-OA)  


 


Deliverable D3.2.3 RM-OA Version 2 


 


  


 


 


Date: 2007-08-10 


Revision: 2.1 


 


 


 


 


Start date of the ORCHESTRA project:     2004-09-01 


Duration of the ORCHESTRA project:    3 years 


Organisation name of lead contractor for this deliverable:  Fraunhofer IITB 


 


 


     







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


2/180 


 


Document Control Page 


 


Title Reference Model for the ORCHESTRA Architecture (RM-OA)  


OGC 07-097 


ORCHESTRA Deliverable D3.2.3: RM-OA Version 2 (Rev. 2.1) 


Creator Thomas Usländer, Fraunhofer IITB (Ed.) 


e-mail: thomas.uslaender@iitb.fraunhofer.de 


Subject ORCHESTRA Architecture Design 


Description This document specifies the Reference Model for the ORCHESTRA 
Architecture (RM-OA). It contains a platform-neutral specification of 
the ORCHESTRA Architecture and a specification framework for 
the design of ORCHESTRA-compliant service networks across all 
viewpoints. 


Publisher ORCHESTRA consortium 


Contributor Bernard, Lars                         Joint Research Centre - IES 


Bügel, Ulrich                   Fraunhofer IITB     


Corabœuf, Damien     BRGM 


Cooper, Michael                  ETH Zürich 


Denzer, Ralf                   Environmental Informatics Group 


Dihé, Pascal                   Environmental Informatics Group 


Ecker, Severin                        ARC Seibersdorf Research 


Fischer, Julian                   Environmental Informatics Group 


Friis-Christensen, Anders     Joint Research Centre - IES     


Frysinger, Steve                   Environmental Informatics Group 


Goodwin, John                   Ordnance Survey 


Güttler, Reiner                  Environmental Informatics Group 


Havlik, Denis                  ARC Seibersdorf Research 


Hilbring, Désirée                     Fraunhofer IITB 


Hofmann, Thomas      Environmental Informatics Group 


Holt, Ian                               Ordnance Survey     


Humer, Heinrich                  ARC Seibersdorf Research 


Iosifescu Enescu, Ionut          ETH Zürich 


Kunz, Wolfgang                   Environmental Informatics Group 


Kutschera, Peter                  ARC Seibersdorf Research 


Lorenzo, José                   Atos Origin Spain    


Lutz, Michael                          Joint Research Centre - IES 


Ma, Wenjie                   Environmental Informatics Group 


Pichler, Guenther                  Open Geospatial Consortium Europe 


Portele, Clemens                   Open Geospatial Consortium Europe   


Robida, Francois                  BRGM 


Schimak, Gerald                  ARC Seibersdorf Research 


Schlobinski, Sascha      Environmental Informatics Group 


Schmieder, Martin      Fraunhofer IITB 


Serrano, Jean-Jacques     BRGM     


Sykora, Peter                  ETH Zürich 


Usländer, Thomas                  Fraunhofer IITB 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


3/180 


Date 2007-08-10 


Type Text 


Format application/msword 


Identifier  ORCHESTRA Portal: SP3 / SP3 Quality Assurance /  
09: D3.2.3 / 06: D3.2.3 RM-OA V2 (2.1) – published version  


Source Not applicable 


Language  en-GB. 


Relation none 


Coverage Not applicable 


Rights  © 2007 ORCHESTRA Consortium 


The ORCHESTRA project is an Integrated Project (FP6-511678) 
funded under the FP6 (Sixth Framework Programme) of the Euro-
pean Commission in the research programme Information Society 
Technologies (IST). 


The ORCHESTRA Consortium (http://www.eu-
orchestra.org/contact.shtml) grants third parties the right to use and 
distribute all or parts of this document, provided that the 
ORCHESTRA project and the document are properly referenced. 


Deliverable number D3.2.3 


Audience  public 


 restricted 


 internal 


 



http://www.eu-orchestra.org/contact.shtml

http://www.eu-orchestra.org/contact.shtml





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


4/180 


Revision History 


 


Revision Date Sections 
Changed 


Description 


1.10 2005-10-14 all OGC Discussion Paper 05-107 


2.0 2007-07-10 all OGC Discussion Paper 07-024 


2.1 2007-08-10 all OGC Candidate Best Practice 07-097  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


5/180 


Table of Contents 


 


1 Executive Summary ................................................................................................................................. 13 


2 Document Structure and Links ................................................................................................................. 14 


2.1 Link to the RM-OA Annexes and ORCHESTRA Deliverables .......................................................... 14 


3 Introduction ............................................................................................................................................... 15 


3.1 Scope ................................................................................................................................................ 15 


3.2 Intended Audience ............................................................................................................................ 15 


3.3 References ........................................................................................................................................ 16 


3.3.1 Normative references ................................................................................................................ 16 


3.3.2 Documents and Books ............................................................................................................... 16 


4 Glossary ................................................................................................................................................... 18 


4.1 Abbreviations .................................................................................................................................... 18 


4.2 Terms and definitions ........................................................................................................................ 19 


4.3 General Remark ................................................................................................................................ 29 


5 Process of the ORCHESTRA Architectural Design ................................................................................. 30 


5.1 Overview ........................................................................................................................................... 30 


5.2 Application of the Reference Model of Open Distributed Processing (RM-ODP) ............................. 31 


5.2.1 RM-ODP Overview .................................................................................................................... 31 


5.2.2 Mapping of RM-ODP to the ORCHESTRA Architectural Design Process ................................ 32 


5.3 The ORCHESTRA Reference Model ................................................................................................ 34 


5.3.1 The ORCHESTRA Architecture ................................................................................................. 34 


5.3.2 The ORCHESTRA Implementation Specification ...................................................................... 35 


5.3.3 The ORCHESTRA Service Network and ORCHESTRA Applications ...................................... 35 


5.3.4 The ORCHESTRA Application Architecture .............................................................................. 37 


5.3.5 The ORCHESTRA Application Implementation Specification ................................................... 37 


5.4 The OpenGIS Service Architecture ................................................................................................... 38 


5.4.1 Platform-neutral and Platform-specific Service Specification .................................................... 38 


5.4.2 Service Taxonomy ..................................................................................................................... 39 


5.4.3 ORCHESTRA as Simple Service Architecture according to ISO 19119:2005 .......................... 39 


6 Enterprise Viewpoint ................................................................................................................................ 41 


6.1 Overview ........................................................................................................................................... 41 


6.2 Business Perspective ........................................................................................................................ 41 


6.2.1 Contribution to the ORCHESTRA Goals ................................................................................... 41 


6.2.2 Collaboration with European Initiatives and Projects ................................................................ 41 


6.2.3 Evolution of the ORCHESTRA Architecture .............................................................................. 45 


6.3 Architectural Requirements for the OSN Design .............................................................................. 45 


6.3.1 Rigorous Definition and Use of Concepts and Standards ......................................................... 45 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


6/180 


6.3.2 Loosely Coupled Components ................................................................................................... 45 


6.3.3 Technology Independence ........................................................................................................ 46 


6.3.4 Evolutionary Development - Design for Change ....................................................................... 46 


6.3.5 Component Architecture Independence .................................................................................... 46 


6.3.6 Generic Infrastructure ................................................................................................................ 46 


6.3.7 Self-describing Components ...................................................................................................... 46 


7 Design Decisions of the ORCHESTRA Architecture ............................................................................... 47 


7.1 Functional Domains of the ORCHESTRA Service Network ............................................................. 47 


7.2 The ORCHESTRA Meta-model Approach ........................................................................................ 48 


7.2.1 Overview .................................................................................................................................... 48 


7.2.2 Major Characteristics of the ORCHESTRA Information Meta-model ........................................ 49 


7.2.3 Major Characteristics of the ORCHESTRA Service Meta-model .............................................. 49 


7.3 Resources in an OSN and their identification ................................................................................... 51 


7.3.1 Identification of OSIs .................................................................................................................. 51 


7.3.2 Identification of Features ........................................................................................................... 52 


7.4 Meta-information ............................................................................................................................... 52 


7.5 User Management, Authentication and Authorisation ...................................................................... 53 


7.5.1 Overview .................................................................................................................................... 53 


7.5.2 User Management based on Subjects, Groups and Principals ................................................. 53 


7.5.3 Authentication ............................................................................................................................ 54 


7.5.4 Authorisation .............................................................................................................................. 55 


7.5.5 Session Information ................................................................................................................... 56 


7.6 Approach to Integration of Source Systems ..................................................................................... 56 


7.7 Service Interaction Modes................................................................................................................. 57 


7.8 Interoperability Between Different Service Platforms ....................................................................... 57 


8 Information Viewpoint ............................................................................................................................... 59 


8.1 Overview ........................................................................................................................................... 59 


8.2 The ORCHESTRA Definition of a Feature ........................................................................................ 59 


8.3 Framework for ORCHESTRA Information Models ........................................................................... 60 


8.4 Framework for ORCHESTRA Meta-Information Models .................................................................. 62 


8.4.1 Overview .................................................................................................................................... 62 


8.4.2 Description of Purposes ............................................................................................................. 63 


8.4.3 Framework Specification ........................................................................................................... 68 


8.4.4 OMM Extensions for Meta-information Association Types ........................................................ 69 


8.5 Inclusion of the Source System Level ............................................................................................... 70 


8.5.1 Extension of the Information Model Framework ........................................................................ 70 


8.5.2 Scenario for Data Interchange related to ISO 19109 ................................................................ 71 


8.6 Inclusion of the Semantic Level ........................................................................................................ 72 


8.6.1 Ontologies .................................................................................................................................. 72 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


7/180 


8.6.2 Extension of the Information Model Framework for Domain Ontologies ................................... 74 


8.7 The ORCHESTRA Meta-Model for Information ................................................................................ 75 


8.7.1 Overview .................................................................................................................................... 75 


8.7.2 Data Types ................................................................................................................................. 76 


8.7.3 OMM Basic Part ......................................................................................................................... 78 


8.7.4 OMM Attribute Types ................................................................................................................. 79 


8.7.5 OMM Extensions to Feature Types ........................................................................................... 80 


8.8 Rules for ORCHESTRA Application Schemas ................................................................................. 83 


8.8.1 General Approach ...................................................................................................................... 83 


8.8.2 Rules for the Identification of an OAS ....................................................................................... 83 


8.8.3 Rules for the Documentation of an OAS ................................................................................... 84 


8.8.4 Rule for the Integration of an OAS and other Schemas ............................................................ 84 


8.8.5 Rules for the Usage of Types in an OAS ................................................................................... 84 


8.8.6 Rules for the Usage of Stereotypes in an OAS ......................................................................... 85 


8.8.7 Rules for the Specification of an OAS ....................................................................................... 85 


8.8.8 Rules for Adding Information to a Standard Schema ................................................................ 87 


8.8.9 Rules for restricted Use of Standard Schemas ......................................................................... 87 


8.8.10 Rules for Adding Information to an OAS ................................................................................... 87 


8.8.11 Rules for Thematic Attributes .................................................................................................... 88 


8.8.12 Rules for Temporal Attributes .................................................................................................... 88 


8.8.13 Rules for Spatial Attributes ........................................................................................................ 88 


8.8.14 Rules for Spatial Referencing using Geographic Identifiers ...................................................... 88 


8.8.15 Rules for Information Types extending the OMM ...................................................................... 89 


8.9 A Simple Example ............................................................................................................................. 90 


9 Service Viewpoint ..................................................................................................................................... 91 


9.1 Overview ........................................................................................................................................... 91 


9.2 The ORCHESTRA Meta-Model for Services .................................................................................... 91 


9.2.1 Overview .................................................................................................................................... 91 


9.2.2 Service Types ............................................................................................................................ 93 


9.2.3 Structure of the ORCHESTRA Service Specification Process .................................................. 94 


9.2.4 Interface Types .......................................................................................................................... 97 


9.2.5 Rules for ORCHESTRA Services ............................................................................................ 100 


9.2.6 Rules for the Specification of Interface Types ......................................................................... 102 


9.2.7 Rules for the Specification of Operation Types ....................................................................... 102 


9.2.8 Rules for the Specification of Parameter Types ...................................................................... 103 


9.2.9 Rules for the Service Mapping to a given Platform ................................................................. 104 


9.2.10 Rules for Platform Specifications ............................................................................................. 106 


9.2.11 Rules for Implementation Specifications of ORCHESTRA Services ....................................... 106 


9.3 Functional Classification of ORCHESTRA Services ....................................................................... 107 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


8/180 


9.3.1 Overview .................................................................................................................................. 107 


9.3.2 OA Services ............................................................................................................................. 107 


9.3.3 OT Services ............................................................................................................................. 109 


9.3.4 Human Interaction Components .............................................................................................. 110 


9.4 Relationship of the ORCHESTRA Service Types to INSPIRE ....................................................... 111 


9.5 Service and Interface Description Framework ................................................................................ 112 


9.6 Basic Interface Descriptions ........................................................................................................... 113 


9.6.1 Service Capabilities Interface .................................................................................................. 113 


9.6.2 Synchronous Interaction Interface ........................................................................................... 113 


9.6.3 Asynchronous Interaction Interface ......................................................................................... 114 


9.6.4 Transaction Interface ............................................................................................................... 115 


9.6.5 Knowledge Base Interface ....................................................................................................... 116 


9.7 OA Info-Structure Service Descriptions .......................................................................................... 118 


9.7.1 Feature Access Service ........................................................................................................... 118 


9.7.2 Map and Diagram Service ....................................................................................................... 120 


9.7.3 Document Access Service ....................................................................................................... 122 


9.7.4 Sensor Access Service ............................................................................................................ 123 


9.7.5 Catalogue Service.................................................................................................................... 125 


9.7.6 Name Service .......................................................................................................................... 128 


9.7.7 User Management Service ...................................................................................................... 129 


9.7.8 Authorisation Service ............................................................................................................... 130 


9.7.9 Authentication Service ............................................................................................................. 132 


9.7.10 Service Monitoring Service ...................................................................................................... 134 


9.8 OA Support Service Descriptions ................................................................................................... 135 


9.8.1 Coordinate Operation Service ................................................................................................. 135 


9.8.2 Gazetteer Service .................................................................................................................... 136 


9.8.3 Annotation Service ................................................................................................................... 137 


9.8.4 Format Conversion Service ..................................................................................................... 139 


9.8.5 Schema Mapping Service ........................................................................................................ 140 


9.8.6 Ontology Access Service ......................................................................................................... 142 


9.8.7 Thesaurus Access Service ...................................................................................................... 144 


9.8.8 Service Chain Access Service ................................................................................................. 145 


9.9 OT Support Services ....................................................................................................................... 147 


9.9.1 Processing Service .................................................................................................................. 147 


9.9.2 Simulation Management Services ........................................................................................... 149 


9.9.3 Sensor Planning Service ......................................................................................................... 151 


9.9.4 Project Management Support Service ..................................................................................... 151 


9.9.5 Communication Service ........................................................................................................... 152 


9.9.6 Calendar Service ..................................................................................................................... 153 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


9/180 


9.9.7 Reporting Service .................................................................................................................... 154 


9.10 OA Service Interaction Patterns .................................................................................................. 155 


9.10.1 Controlled User Access to Resources ..................................................................................... 155 


9.10.2 Rights-Managed User Access to Resources ........................................................................... 157 


9.10.3 Integration of Source Systems into an OSN ............................................................................ 158 


9.10.4 Generation of Meta-information ............................................................................................... 160 


9.10.5 Registration of Resources in a Catalogue ............................................................................... 161 


9.10.6 Semantic Catalogue Component ............................................................................................. 162 


9.10.7 Naming in Dynamic OSN Environments .................................................................................. 163 


10 Technology Viewpoint ......................................................................................................................... 165 


10.1 Specification of Platform Properties ............................................................................................ 165 


10.2 Selection of User Management, Authentication and Authorisation Mechanisms ....................... 166 


10.3 Agreement on Data Formats ....................................................................................................... 166 


10.4 Definition of a Reversible Platform Mapping for Information Models .......................................... 166 


10.5 Definition of Procedures for the Mapping of Service Interfaces .................................................. 167 


10.6 Restrictions on certain Services .................................................................................................. 167 


11 Engineering Viewpoint ........................................................................................................................ 168 


11.1 OSN Characteristics .................................................................................................................... 168 


11.1.1 Policies ..................................................................................................................................... 168 


11.1.2 Resource Naming Policy ......................................................................................................... 168 


11.1.3 Resource Discovery Policy ...................................................................................................... 169 


11.1.4 OSN Operating Policy .............................................................................................................. 170 


11.1.5 User Management, Authorisation and Authentication Policy .................................................. 171 


11.2 OSN Classifiers ........................................................................................................................... 173 


11.3 Naming Policy Examples ............................................................................................................. 174 


11.3.1 Platform as Namespace for OSIs ............................................................................................ 174 


11.3.2 Feature Access OSI as Namespace for Feature Instances .................................................... 174 


12 Conclusion .......................................................................................................................................... 177 


12.1 Summary of Deviations from Standards...................................................................................... 177 


12.1.1 RM-ODP Computational Viewpoint mapped  to RM-OA Service Viewpoint ........................... 177 


12.1.2 The OpenGIS Service Architecture (ISO 19119:2005)............................................................ 177 


12.1.3 ISO 19101 Service Taxonomy ................................................................................................. 177 


12.1.4 ISO 19119:2005 Requirements for Platform-Neutrality ........................................................... 177 


12.1.5 ORCHESTRA as Simple Service Architecture according to ISO 19119:2005 ........................ 178 


12.1.6 The ORCHESTRA Definition of a Feature .............................................................................. 178 


12.1.7 The ORCHESTRA Meta-Model (OMM) ................................................................................... 178 


12.2 Evolution of the RM-OA ............................................................................................................... 178 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


10/180 


Figures 


 


Figure 1: Dynamic ORCHESTRA Analysis and Design Process .................................................................... 30 


Figure 2: The ORCHESTRA Reference Model ............................................................................................... 34 


Figure 3: Deployment of ORCHESTRA Service Instance in an ORCHESTRA Service Network ................... 36 


Figure 4: Example of two ORCHESTRA Applications using the same OSI .................................................... 36 


Figure 5: ORCHESTRA Application Architecture ............................................................................................ 37 


Figure 6: The Evolution of the ORCHESTRA Architecture ............................................................................. 45 


Figure 7: Functional Domains in an ORCHESTRA Service Network.............................................................. 47 


Figure 8: Relationship between Subject and Principal .................................................................................... 53 


Figure 9: Relationship between Subject, Group and Principal ........................................................................ 54 


Figure 10: Schema of Role-based Access Control ......................................................................................... 55 


Figure 11: External and ORCHESTRA Source Systems ................................................................................ 57 


Figure 12: OSI interactions in one platform domain ........................................................................................ 58 


Figure 13: OSI interactions across platform domains ..................................................................................... 58 


Figure 14: From phenomena to feature instances (derived from ISO 19109) ................................................ 60 


Figure 15: Framework for ORCHESTRA Information Models ......................................................................... 61 


Figure 16: Framework for the ORCHESTRA Meta-Information Model ........................................................... 69 


Figure 17: Subclasses of OMM_AssociationType........................................................................................... 70 


Figure 18: Inclusion of the Source System Level into the ORCHESTRA Information Model Framework ...... 71 


Figure 19: Ad-hoc use of published feature sets and application schemas .................................................... 72 


Figure 20: Inclusion of the Semantic Level into the Information Model Framework ....................................... 75 


Figure 21: Basic Data Types ........................................................................................................................... 78 


Figure 22: The basic part of the ORCHESTA Meta-model ............................................................................. 79 


Figure 23: OMM Attribute types....................................................................................................................... 80 


Figure 24: Schema of the OMM extension ―Document Type‖ ......................................................................... 81 


Figure 25: Schema of the OMM Extension ―Coverage Type‖ ......................................................................... 82 


Figure 26: Earthquake example ...................................................................................................................... 90 


Figure 27: Framework for ORCHESTRA Services.......................................................................................... 92 


Figure 28: Specification Process for ORCHESTRA Services ......................................................................... 96 


Figure 29: The Service Interface Part of the OMM.......................................................................................... 98 


Figure 30: Model of OMM Operations and Parameter Types ....................................................................... 100 


Figure 31: Specification of Exception Types ................................................................................................. 103 


Figure 32: Structure of the Service Mapping in the OMM ............................................................................. 105 


Figure 33: Functional classification of ORCHESTRA Services ..................................................................... 108 


Figure 34: Example of OT Service sub-categories for the application domain of Environmental Risk 
Management .......................................................................................................................................... 110 


Figure 35: Service Interaction Pattern for Geo Rights Management ............................................................ 157 


Figure 36: Operation Integration (upper right: SSI step 2a, lower right: SSI step 2b) .................................. 159 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


11/180 


Figure 37: Source System Integration Service .............................................................................................. 160 


Figure 38: Generation of resource meta-information .................................................................................... 160 


Figure 39: Generation of meta-information entries (push paradigm) ............................................................ 161 


Figure 40: Generation of meta-information entries (pull paradigm) .............................................................. 162 


Figure 41: Example of a Semantic Catalogue ............................................................................................... 163 


Figure 42: Linkage between Name Services ................................................................................................. 164 


Figure 43: Constructing feature identifiers by using OSI-related namespaces ............................................. 175 


 


Tables 


 


Table 1: Overview about the RM-OA Annexes ............................................................................................... 14 


Table 2: Mapping of the RM-ODP Viewpoints to ORCHESTRA ..................................................................... 33 


Table 3: Ontology Classes (ORCH-D2.3.5 2006) ........................................................................................... 73 


Table 4: Basic Data Types .............................................................................................................................. 77 


Table 5: List of Basic Interface Types ........................................................................................................... 108 


Table 6: List of OA Services .......................................................................................................................... 109 


Table 7: List of OT Support Services for Environmental Risk Management ................................................. 110 


Table 8: Possible Contribution of ORCHESTRA Service Types to INSPIRE Network Services .................. 111 


Table 9: Service Description Framework ...................................................................................................... 112 


Table 10: Description of the Service Capabilities Interface ........................................................................... 113 


Table 11: Description of the Synchronous Interaction Interface ................................................................... 114 


Table 12: Description of the Asynchronous Interaction Interface .................................................................. 115 


Table 13: Description of the Transaction Interface........................................................................................ 116 


Table 14: Description of the Knowledge Base Interface ............................................................................... 118 


Table 15: Description of the Feature Access Service ................................................................................... 120 


Table 16: Description of the Map and Diagram Service ................................................................................ 122 


Table 17: Description of the Document Access Service ............................................................................... 123 


Table 18: Description of the Sensor Access Service .................................................................................... 124 


Table 19: Description of the Catalogue Service ............................................................................................ 127 


Table 20: Description of the Name Service ................................................................................................... 129 


Table 21: Description of the User Management Service ............................................................................... 130 


Table 22: Description of the Authorisation Service ....................................................................................... 132 


Table 23: Description of the Authentication Service...................................................................................... 134 


Table 24: Description of the Service Monitoring Service .............................................................................. 135 


Table 25: Description of the Coordinate Operation Service .......................................................................... 136 


Table 26: Description of the Gazetteer Service ............................................................................................. 137 


Table 27: Description of the Annotation Service ........................................................................................... 139 


Table 28: Description of the Format Conversion Service .............................................................................. 140 


Table 29: Description of the Schema Mapping Service ................................................................................ 142 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


12/180 


Table 30: Description of the Ontology Access Service ................................................................................. 144 


Table 31: Description of the Thesaurus Access Service ............................................................................... 145 


Table 32: Description of the Service Chain Access Service ......................................................................... 147 


Table 33: Description of the Processing Service ........................................................................................... 149 


Table 34: Description of the Simulation Management Service ..................................................................... 150 


Table 35: Description of the Sensor Planning Service .................................................................................. 151 


Table 36: Description of the Project Management Support Service ............................................................. 152 


Table 37: Description of the Communication Service ................................................................................... 153 


Table 38: Description of the Calendar Service .............................................................................................. 154 


Table 39: Description of the Reporting Service ............................................................................................. 154 


Table 40: Minimum Policy Requirements according to OSN Classifiers....................................................... 173 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


13/180 


1 Executive Summary 


Increasing numbers of natural disasters have demonstrated to the European Union the paramount im-
portance of avoiding and mitigating natural hazards in order to protect the environment and citizens. 
Due to organisational and technological barriers, actors involved in the management of natural or man-
made risks cannot cooperate efficiently. In an attempt to solve some of these problems, the European 
Commission has made ―Improving risk management‖ one of its strategic objectives of the Information 
Society Technology (IST) research programme. The goal of the integrated project ORCHESTRA (Open 
Architecture and Spatial Data Infrastructure for Risk Management) is the design and implementation of 
an open, service-oriented software architecture as a contribution to overcome the interoperability prob-
lems in the domain of multi-risk management.  


Public information about the ORCHESTRA project is available under http://www.eu-orchestra.org/. 


The present document defines the Reference Model for the ORCHESTRA Architecture (RM-OA). The 
RM-OA comprises the generic aspects of service-oriented architectures, i.e., those aspects that are in-
dependent of the risk management domain and thus applicable to other application domains.  


Based on a glossary of architectural terms, the RM-OA provides a specification framework for system 
architects, information modellers and system developers. The ORCHESTRA Architecture is a platform-
neutral (abstract) specification of the informational and functional aspects of service networks taking 
into account and evolving out of architectural standards and service specifications of ISO, OGC, W3C 
and OASIS. 


The structure of the RM-OA follows the viewpoints of the ISO/IEC 10746-1 Reference Model for Open 
Distributed Processing (RM-ODP) in the following manner: 


 The RM-OA Enterprise Viewpoint provides a business perspective with respect to other Euro-
pean initiatives such as INSPIRE, GMES and other Integrated Projects. It yields the major ar-
chitectural requirements, namely the rigorous use of standards where applicable, the inde-
pendence from technology, the demand for loosely-coupled self-describing components based 
on a generic infrastructure and the design for change. 


 The RM-OA Information Viewpoint provides a specification framework of all categories of in-
formation including their thematic, spatial, and temporal characteristics as well as their meta-
information. The basic unit is the concept of a feature as an abstraction of a real world phe-
nomenon. In principle, it follows ISO 19109 for the meta-model structure and rules of applica-
tion schemas, but extends it by the pre-definition of the characteristics of eminent feature 
types (e.g. documents). As meta-information models are considered to be purpose-specific, 
the ORCHESTRA Meta-Model enables pluggable application schemas for meta-information. 
Furthermore, it explicitly considers the integration of data and services of existing systems 
(source systems) as well as the usage of ontologies. 


 The RM-OA Service Viewpoint (in RM-ODP called Computational Viewpoint) specifies types of 
ORCHESTRA Architecture Services that support the syntactic and semantic interoperability 
between systems as well as the administration of service instances organised in 
ORCHESTRA Service Networks. The RM-OA provides textual service descriptions according 
to a common service description framework and contains an initial description of so-called 
ORCHESTRA Thematic Support services that facilitate the development of thematic function-
ality. Furthermore, by means of a meta-model for services on a platform-neutral level, the RM-
OA provides rules how to formally specify service types based on interface types as the basic 
unit of re-usability and how to map them to concrete service platforms. 


 The RM-OA Engineering and Technology viewpoints yield the mapping of the application 
schemas and service specifications to service platforms (e.g. W3C Web Services). Here, the 
RM-OA just provides guidance for the mapping to a given service platform and specifies engi-
neering options for the design of ORCHESTRA Service Networks. The resulting work lead to 
platform-specific ORCHESTRA Implementation Specifications that are, however, documented 
outside of the RM-OA.   


RM-OA annexes contain more detailed system requirements, a conceptual meta-information model and 
default application schemas for meta-information for an initial list of ―purposes‖ (e.g. discovery). 



http://www.eu-orchestra.org/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


14/180 


2 Document Structure and Links 


2.1 Link to the RM-OA Annexes and ORCHESTRA Deliverables 


The RM-OA encompasses the results of the ORCHESTRA sub-project 3 and the related deliverables 
as annexes. These annexes are contained in the document package of the OGC Discussion paper 07-
024.  


Furthermore, they are available under http://www.eu-orchestra.org/publications.shtml#OAspecs at the 
Web site of the ORCHESTRA project together with the abstract specifications of the ORCHESTRA ser-
vices.  


 


Annex Name ORCHESTRA 
Deliverable 


OGC Document 


A High Level Requirements Specification 


A1 Development dimensions D3.2.1  OGC Discussion Paper 07-024 


A2 System requirements D3.2.1  OGC Discussion Paper 07-024 


A3 Conceptual Meta-information model D3.3.1  OGC Discussion Paper 07-024 


B Specification of ORCHESTRA Meta-information Models 


B1 RM-OA rules for OAS-MI D3.3.2  OGC Discussion Paper 07-024 


Table 1: Overview about the RM-OA Annexes 


. 



http://www.eu-orchestra.org/publications.shtml%23OAspecs





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


15/180 


3 Introduction 


3.1 Scope 


This document specifies the Reference Model for the ORCHESTRA Architecture (RM-OA). It contains a 
specification framework for the design of ORCHESTRA-compliant service networks and provides a plat-
form-neutral specification of the information and service viewpoints.  


The RM-OA specification is structured according to the viewpoints of the Reference Model for Open 
Distributed Processing (RM-ODP) as defined in ISO/IEC 10746-1:1998 (E), with some modifications re-
flecting both ORCHESTRA needs and the design objective of a service network based on loosely-
coupled components. 


The RM-OA document is divided into the following sections: 


 Section 4 ―Glossary‖ provides a definition of the architectural terms used in the RM-OA. 


 Section 5 ―Process of the ORCHESTRA Architectural Design‖ describes the ORCHESTRA  
Reference Model resulting from the mapping of the ISO/IEC 10746-1 Reference Model for 
Open Distributed Processing (RM-ODP) to the ORCHESTRA architectural design process. 


 Section 6 ―Enterprise Viewpoint‖ provides a business perspective and summarises the archi-
tectural requirements for the design of ORCHESTRA-compliant service networks. The archi-
tectural requirements are motivated in detail in an argumentation chain in Annex A2 of the 
RM-OA.. 


 Section 7 ―Design Decisions of the ORCHESTRA Architecture‖ summarises basic design de-
cisions for the ORCHESTRA Architecture as an introduction to the architecture specification 
in the following section. 


 Section 8 "Information Viewpoint‖ provides a specification framework of all categories of in-
formation dealt with by the ORCHESTRA Architecture, including their thematic, spatial, tem-
poral characteristics as well as their meta-information. 


 Section 9 ―Service Viewpoint‖ provides a specification framework for ORCHESTRA Services. 
Furthermore, it contains descriptions for the services that support the syntactic and semantic 
interoperability between services, applications and systems as well as the administration of 
ORCHESTRA service networks. The description distinguishes between ORCHESTRA Archi-
tecture services that provide the generic, i.e. application-domain independent part of a service 
network, and ORCHESTRA Thematic Service that support particular application-domains, in 
the case of ORCHESTRA the risk management domain. 


 Section 10 ―Technology Viewpoint‖ describes general guidelines to be considered when 
specifying a platform as a service infrastructure upon which the platform-neutral 
ORCHESTRA Architecture may be mapped. 


 Section 11 ‖Engineering Viewpoint‖ describes topics to be considered by designers of 
ORCHESTRA Service Networks, in particular characteristics of ORCHESTRA Service Net-
works and policies w.r.t. naming of service and feature instances, discovery, user manage-
ment, access control and authentication and service administration.   


 Section 12 ―Conclusion‖ lists the major aspects where the RM-OA deviates from standards. 
Furthermore, it provides an outlook for issues to be tackled in future RM-OA versions. 


The RM-OA core document is associated with a list of annexes that provide more background informa-
tion and more refined specifications. See Table 1 in section 2.1. 


3.2 Intended Audience 


System architects, information modellers and system developers when designing service networks tak-
ing into account relevant standards from ISO, OGC, W3C and OASIS. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


16/180 


3.3 References 


The following references are used as background documents for the RM-OA. They are categorised in 
normative references (i.e. ISO Standards or respective drafts) and other technical or scientific 
documents and books. 


3.3.1 Normative references 


ISO/IEC 10746-1:1998 (E). Information technology - Open Distributed Processing - Reference model 


ISO/IEC 10746-2:1996 (E). Information technology - Open Distributed Processing - Foundations 


ISO/IEC TR 14252:1996. Information technology - Guide to the POSIX Open System Environment 


ISO 19101:2004(E). Geographic information -- Reference model  


ISO/TS 19103. Geographic information -- Conceptual schema language  


ISO 19107:2004(E). Geographic information -- Spatial schema 


ISO 19108:2004(E) Geographic information -- Temporal schema  


ISO/FDIS 19109:2003. Text for FDIS 19109 Geographic information -- Rules for application schema, as 
sent to the ISO Central Secretariat for issuing as Final Draft International Standard 


ISO 19111:2003(E). Geographic information -- Spatial referencing by coordinates 


ISO 19112:2003(E). Geographic information -- Spatial referencing by geographic identifiers 


ISO 19115:2004(E). Geographic Information -- Metadata 


ISO 19119:2005. Geographic Information -- Services (see also ―The OpenGIS Abstract Specification - 
Topic 12: OpenGIS Service Architecture‖ under http://www.opengis.org/docs/02-112.pdf ) 


ISO 19123:2005(E). Geographic Information -- Schema for coverage geometry and functions 


ISO 19125-1:2004(E). Geographic Information -- Simple feature access -- Part 1: Common architecture 


ISO 19136: 2007. Geographic Information -- Geography Markup Language (GML). International 
Standard under publication (2007-07-13) 


ISO/TS 19139:2007. Geographic information -- Metadata -- XML schema implementation 


3.3.2 Documents and Books 


Dufourmont, H., Annoni, A., De Groof, H. (2004). INSPIRE - work programme Preparatory Phase 2005 
– 2006. Publisher: ESTAT-JRC-ENV. Identifier: rhd040705WP4A_v4.5.3.doc, 
http://inspire.jrc.it/reports/rhd040705WP4A_v4.5.3_final-2.pdf 


Egenhofer, M.J. (1989). A Formal Definition of Binary Topological Relationships. 3rd International Con-
ference on Foundations of Data Organization and Algorithms: 457-472 


GeoDRM (2006). Open Geospatial Consortium Abstract Specification 06-004r3: Geospatial Digital 
Rights Management Reference Model (GeoDRM RM). Version: 1.0.0. Editor: G. Vowles.  2006-
02-28 


GMES (2004). Global Monitoring for Environment and Security (GMES): Final Report for the GMES Ini-
tial Period (2001-2003) http://www.gmes.info/action_plan/index.html 


INSPIRE (2007). Directive 2007/2/EC of the European Parliament and of the Council of 14 March 2007 
establishing an Infrastructure for Spatial Information in the European Community (INSPIRE). 
http://www.ec-gis.org/inspire/directive/l_10820070425en00010014.pdf 


OASIS (2006) OASIS WS-Trust 1.3 Committee Draft 01. 06 September 2006 http://docs.oasis-
open.org/ws-sx/ws-trust/200512/ws-trust-1.3-spec-cd-01.html  


OMG (2006). ―Software Services Profile and Metamodel‖. Request For Proposal OMG Document: 
soa/2006-09-01 


ORCH-D2.1 (2006). D2.1 Final Report on User Requirements V1.4. Restricted Deliverable D2.1 



http://www.opengis.org/docs/02-112.pdf

http://www.gmes.info/action_plan/index.html

http://www.ec-gis.org/inspire/directive/l_10820070425en00010014.pdf

http://docs.oasis-open.org/ws-sx/ws-trust/200512/ws-trust-1.3-spec-cd-01.html

http://docs.oasis-open.org/ws-sx/ws-trust/200512/ws-trust-1.3-spec-cd-01.html





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


17/180 


Integrated Project 511678 ORCHESTRA. Editor: BRGM.  5 October 2006 


ORCH-D2.3.5 (2006). Knowledge Modelling Final Report. Internal Deliverable D2.3.5 Integrated Project 
511678 ORCHESTRA. Editor:  Ordnance Survey. Version 1.0. 28 February 2006  


ORCH-D2.4.1 (2005). Report on analysis of existing risk management  processes.  
Deliverable D2.4.1 Integrated Project 511678 ORCHESTRA. Editor:  DATAMAT. Revision [final]. 
13 June 2005  


ORCH-D2.4.2 (2005). Report identifying common service requirements.  
Deliverable 2.4.2 (2005) Integrated Project 511678 ORCHESTRA. Editor:  DATAMAT. Revision 
[final]. 21 December 2005 


ORCH-AbstrServ (2007). WP3.4 OA Service Abstract Specifications. Deliverables D3.4.x Integrated 
Project 511678 ORCHESTRA. Editor: Environmental Informatics Group (EIG). January 2007 


ORCH-DoW (2006). Integrated Project 511678 ORCHESTRA: ―Annex 1 – Description of Work‖. 6
th
 


Framework Programme IST Priority 2.3.2.9 Improving Risk Management. 11 May 2006 


ORCH-ImplServ (2007). WP3.6 OA Service Implementation Specifications. Deliverables D3.6.x. Inte-
grated Project 511678 ORCHESTRA. Editor: Environmental Informatics Group (EIG). 2007 (to be 
published) 


OGC (2003). Open Geospatial Consortium Doc. No. 03-040. OGC Reference Model, Version 0.1.2 , 
2003-03-04 http://portal.opengis.org/files/?artifact_id=3836 


OGC (2006) Open Geospatial Consortium Discussion paper  05-087r3 ―Observations and Measure-
ments‖, 2006-02-24, http://portal.opengeospatial.org/files/?artifact_id=14034   


Pollock, J.T., Hodgson, R. (2004). Adaptive Information. ISBN 0-471-48854-2. Wiley 2004 


Powell, D. (Ed.) (1991). Delta-4: A Generic Architecture for Dependable Distributed Computing. Re-
search Reports ESPRIT. Project 818/2252 Delta-4 Vol.1. ISBN 3-540-54985-4 Springer-Verlag 
1991 


RM-OA (2005) Usländer, T. (Ed.) Reference Model for the ORCHESTRA Architecture Version 1.10. 
Deliverable D3.2.2 of the ORCHESTRA Consortium, OGC Discussion Paper OGC 05-107 - 
https://portal.opengeospatial.org/files/?artifact_id=12574, October 2005 


SOA-RM (2006). OASIS Reference Model for Service Oriented Architecture 1.0. Committee Specifica-
tion 1, 2 August 2006. http://www.oasis-open.org/committees/download.php/19679/soa-rm-cs.pdf 


Studer, R.; Benjamins, V. R.; Fensel, D.: Knowledge engineering: Principles and methods. Data and 
Knowledge Engineering (DKE), 25(1-2):161-197, 1998. 


Tomlin, C.D. (1990). Geographic Information Systems and Cartographic Modeling (Prentice-Hall) 


W3C (2003). QoS for Web Services: Requirements and Possible Approaches. W3C Working Group 
Note, 25 November 2003, http://www.w3c.or.kr/kr-office/TR/2003/ws-qos/ 


W3C (2004). Web Services Architecture. W3C Working Group Note 11 February 2004. 
http://www.w3.org/TR/ws-arch/ 


 


 



http://portal.opengis.org/files/?artifact_id=3836

http://portal.opengeospatial.org/files/?artifact_id=14034

https://portal.opengeospatial.org/files/?artifact_id=12574

http://www.oasis-open.org/committees/download.php/19679/soa-rm-cs.pdf

http://www.w3c.or.kr/kr-office/TR/2003/ws-qos/

http://www.w3.org/TR/ws-arch/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


18/180 


4 Glossary 


The glossary provides the coherent terminological framework used in the RM-OA.  


4.1 Abbreviations 


AAA  Authentication, Authorisation, and Accounting 


ACID  Atomicity, Consistency, Isolation, and Durability 


CEN  Comité Européen de Normalisation (European Committee for Standardization) 


CSL  Conceptual Schema Language 


DIS  Draft International Standard 


DoW  ORCHESTRA Description of Work 


DRM  Digital Rights Management 


EBAC  Expression-based access control 


EC  European Commission 


ESA  European Space Agency 


ESDI  European Spatial Data Infrastructure 


GeoRM  Rights Management related to Geographic Information 


GFM  General Feature Model 


GMES  Global Monitoring for Environment and Security 


HCI  Human-Computer Interaction 


INSPIRE  Infrastructure for Spatial Information in Europe 


ID   Identifier 


IS   International Standard 


ISO  International Standardization Organisation 


IST  Information Society Technology 


LMO  Legally Mandated Organisations 


OA  ORCHESTRA Architecture 


OA Service ORCHESTRA Architecture Service 


OT Service ORCHESTRA Thematic Service 


OAA  ORCHESTRA Application Architecture 


OAS  ORCHESTRA Application Schema 


OAS-MI  ORCHESTRA Application Schema for Meta-information 


OFS  ORCHESTRA Feature Set 


OASIS  1) IST FP-6 project: Open Advanced System for Improved Crisis Management 


   2) Organization for the Advancement of Structured Information Standards 


OGC  Open Geospatial Consortium 


OIS  ORCHESTRA Implementation Specification 


OMG  Object Management Group 


OMM  ORCHESTRA Meta-model 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


19/180 


ORCHESTRA  Open Architecture and Spatial Data Infrastructure for Risk Management 


OSC  ORCHESTRA Service Component 


OSI  ORCHESTRA Service Instance 


OSN  ORCHESTRA Service Network 


OWL  Web Ontology Language 


OWL-S  Web service ontology based on OWL 


RBAC  Role-based access control 


RDF  Resource Description Framework 


RM  Risk Management 


RM-OA  Reference Model for the ORCHESTRA Architecture 


RM-ODP  Reference Model for Open Distributed Processing 


SOA  Service-oriented Architecture 


SOA-RM  (OASIS) Reference Model for Service Oriented Architecture 


SDI  Spatial Data Infrastructure 


SDIC  Spatial Data Interest Communities  


UAA  User Management, Authentication and Authorisation 


UDDI  Universal Description, Discovery and Integration 


URI  Uniform Resource Identifier 


W3C  World Wide Web Consortium  


WIN  Wide Information Network for Risk Management 


WP  Work package 


WSMO  Web Service Modeling Ontology 


XSD  XML Schema Definition 


 


4.2 Terms and definitions 


 
ABox 
 
Set of description logics statements about individuals with reference to a TBox (so-called "extensional" 
knowledge). 
 
Note: An example is: "Katrina" is-instance-of TropicalCyclone. 


 
Access control 
 
Combination of Authentication and Authorisation. 


 


Accounting 


Process of gathering information about the usage of resources by subjects. 
 


Application [derived from http://www.opengeospatial.org/resources/?page=glossary] 


Use of capabilities, including hardware, software and data, provided by an information system specific 
to the satisfaction of a set of user requirements in a given application domain. 



http://www.opengeospatial.org/resources/?page=glossary





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


20/180 


 


Application Domain 


Integrated set of problems, terms, information and tasks of a specific thematic domain that an applica-
tion (e.g. an information system or a set of information systems) has to cope with. 


Note: One example of an application domain is risk management. 


 


Application Schema [ISO/FDIS 19109:2003] 


Conceptual schema for data required by one or more applications. 


 


 
Architecture (of a system) [ISO/IEC 10746-2:1996] 


Set of rules to define the structure of a system and the interrelationships between its parts. 


 
Authentication 


Process of verifying the principal of a certain subject. In other words authentication indicates whether a 
subject is allowed to use a certain principal . 


Within the authentication process a subject proves that it is allowed to act with the corresponding princi-
pal . Generally speaking, this proof can depend on a secret that can be, e.g. 


- what somebody has (key, smart card, …) 
- what somebody knows (password, …) 
- what somebody is (biometrical data, …) 
- the place somebody resides (certain computer, …) 
- the skills of somebody (handmade signature) 


The result of an authentication process is called a session.  


 


Authorisation 


Process of determining whether a subject is allowed to have the specified types of access to a particular 
resource. This is done by evaluating applicable access control information contained in a so called au-
thorisation context. 


Usually, authorisation is carried out in the context of authentication. Once a subject is authenticated, it 
may be authorised to perform different types of access.  


 


Catalogue [derived from http://www.opengeospatial.org/resources/?page=glossary]  


Collection of entries, each of which describes and points to a feature collection. Catalogues include in-
dexed listings of feature collections, their contents, their coverages, and of meta-information. A cata-
logue registers the existence, location, and description of feature collections held by an Information 
Community. Catalogues provide the capability to add and delete entries. A minimum Catalogue will in-
clude the name for the feature collection and the locational handle that specifies where these data may 
be found. Each catalogue is unique to its Information Community. 


 
Component 


Hardware component (device) or Software Component. 


 


Conceptual model [ISO/FDIS 19109:2003(E); ISO 19101] 


Model that defines concepts of a universe of discourse. 



http://www.opengeospatial.org/resources/?page=glossary





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


21/180 


 


Conceptual schema [ISO/FDIS 19109:2003(E); ISO 19101] 


Formal description of a conceptual model. 


 


Coverage [ISO 19123] 


Function from a spatial, temporal or spatiotemporal domain to an attribute range. A coverage associ-
ates a position within its domain to a record of values of defined data types. Thus, a coverage is a fea-
ture with multiple values for each attribute type, where each direct position within the geometric repre-
sentation of the feature has a single value for each attribute type. 


 


Description Logics 


Family of logic based knowledge representation languages that are a decidable subset of first order 
logic with well defined semantics and inferencing (problem decision procedures). In Description Logics, 
a distinction is made between the terminological knowledge (the so-called TBox) and the assertional 
knowledge (ABox). This distinction is useful for knowledge base modelling and engineering: for model-
ling it is just natural to distinguish between concepts and individuals; for engineering it helps by separat-
ing key inference problems, e.g. classification is related to the TBox, while instance checking is related 
to the ABox. 


 


Discovery [derived from W3C: http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#discovery] 


Act of locating a machine-processable description of a resource that may have been previously un-
known and that meets certain functional criteria. It involves matching a set of functional and other crite-
ria with a set of resource descriptions.  


 


Engineering viewpoint 


Viewpoint of the ORCHESTRA Reference Model that specifies the mapping of the ORCHESTRA ser-
vice specifications and information models to the chosen service platform and the characteristics of 
ORCHESTRA Service Networks. 


 


End user 


Members of agencies (e.g. civil or environmental protection agencies) or private companies that are in-
volved in an application domain (e.g. risk management) and that use the applications built by the sys-
tem users according to the ORCHESTRA Architecture. 


 


External Source System 


Source system that does not provide its data and functions through an ORCHESTRA-conformant inter-
face. 


 


Feature [derived from ISO 19101] 


Abstraction of a real world phenomenon [ISO 19101] perceived in the context of an ORCHESTRA Ap-
plication. 


Note:  The ORCHESTRA understanding of a ―real world‖ explicitly comprises hypothetical worlds. 
Features may but need not contain geospatial properties. In this general sense, a feature corresponds 
to an ―object‖ in analysis and design models. 


 



http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#discovery





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


22/180 


Framework [http://www.opengeospatial.org/resources/?page=glossary] 


An information architecture that comprises, in terms of software design, a reusable software template, 
or skeleton, from which key enabling and supporting services can be selected, configured and inte-
grated with application code. 


 


Gazetteer  [http://www.opengeospatial.org/resources/?page=glossary] 


A catalogue of toponyms (place names) assigned with geographic references. A gazetteer service re-
trieves the geometries for one or more features, given their associated well-known feature identifiers 
(text strings). 


 


Generic 


A service is generic, if it is independent of the application domain. A service infrastructure is generic, if it 
is independent of the application domain and if it can adapt to different organisational structures at dif-
ferent sites, without programming (ideally). 


 


Geospatial [http://www.opengeospatial.org/resources/?page=glossary] 


Referring to a location relative to the Earth's surface. ―Geospatial‖ is more precise in many geographic 
information system contexts than "geographic," because geospatial information is often used in ways 
that do not involve a graphic representation, or map, of the information. 


 
Implementation [http://www.opengeospatial.org/resources/?page=glossary] 


Software package that conforms to a standard or specification. A specific instance of a more generally 
defined system. 


 


Information Community [http://www.opengeospatial.org/resources/?page=glossary] 


A collection of people (a government agency or group of agencies, a profession, a group of researchers 
in the same discipline, corporate partners cooperating on a project, etc.) who, at least part of the time, 
share a common digital geographic information language and common spatial feature definitions. 


 


Information viewpoint 


Viewpoint of the ORCHESTRA Reference Model that specifies the modelling approach of all categories 
of information the ORCHESTRA Architecture deals with including their thematic, spatial, temporal char-
acteristics as well as their meta-information. 


 


Interface [ISO 19119:2005; http://www.opengis.org/docs/02-112.pdf] 


Named set of operations that characterize the behaviour of an entity.  


The aggregation of operations in an interface, and the definition of interface, shall be for the purpose of 
software reusability. The specification of an interface shall include a static portion that includes defini-
tion of the operations. The specification of an interface shall include a dynamic portion that includes any 
restrictions on the order of invoking the operations. 


 


 
Interoperability [ISO 19119:2005 or OGC; 
http://www.opengeospatial.org/resources/?page=glossary] 


Capability to communicate, execute programs, or transfer data among various functional units in a 
manner that require the user to have little or no knowledge of the unique characteristics of those units 
[ISO 2382-1].  



http://www.opengeospatial.org/resources/?page=glossary

http://www.opengeospatial.org/resources/?page=glossary

http://www.opengeospatial.org/resources/?page=glossary

http://www.opengeospatial.org/resources/?page=glossary

http://www.opengeospatial.org/resources/?page=glossary

http://www.opengis.org/docs/02-112.pdf

http://www.opengeospatial.org/resources/?page=glossary





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


23/180 


 


Knowledge Base 


Store of formal knowledge about identifiable entities of a real or hypothetical world. The entity descrip-
tions are typically instance knowledge or data, or an ABox in terms of Description Logics. In some 
cases, the knowledge base additionally provides access to the knowledge schema (the TBox corre-
sponding to the ABox). Generally, a knowledge base does not necessarily need to be described by 
means of a schema: it basically provides a flexible means for identification, representation and interlink-
ing of entities. Compared to a conventional relational database, a knowledge base is more flexible: it 
may comprise several identifiable sets of entity relationships (―models‖), and new models can dynam i-
cally be added without the need for redefining the complete database schema. New entities and rela-
tions can be inserted at run time (population of the knowledge base).  


 


Note:  Knowledge stored in a knowledge base can be retrieved by means of a query language. 
Compared to a Catalogue and/or a Feature Access Service (see section 9.7.1), the result of these que-
ries is not necessarily a feature collection, e.g. just a boolean value an extreme case. If the knowledge 
base contains implicitly represented information, e.g. in terms of rules, the quality of the query results 
may be improved by automatically inferring new knowledge (TBox and/or ABox reasoning). 


 


Loose coupling [W3C; http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#loosecoupling] 


Coupling is the dependency between interacting systems. This dependency can be decomposed into 
real dependency and artificial dependency: Real dependency is the set of features or services that a 
system consumes from other systems. The real dependency always exists and cannot be reduced. Arti-
ficial dependency is the set of factors that a system has to comply with in order to consume the features 
or services provided by other systems. Typical artificial dependency factors are language dependency, 
platform dependency, API dependency, etc. Artificial dependency always exists, but it or its cost can be 
reduced. Loose coupling describes the configuration in which artificial dependency has been reduced to 
the minimum. 


 


Meta-information 


Descriptive information
 
about resources in the universe of discourse. Its structure is given by a meta-


information model depending on a particular purpose. 


Note:  A resource by itself does not necessarily need meta-information. The need for meta-
information arises from additional tasks or a particular purpose (like catalogue organisation), where 
many different resources (services and data objects) must be handled by common methods and there-
fore have to have/get common attributes and descriptions (like a location or the classification of a book 
in a library). 


Meta-information model 


Implementation of a conceptual model for meta-information. It is represented by an ORCHESTRA  Ap-
plication Schema for Meta-information. 


 


Middleware [http://www.opengeospatial.org/resources/?page=glossary] 


Software in a distributed computing environment that mediates between clients and servers. 


 


OA Info-structure Service 


OA Service that is required to operate an OSN in the sense that it plays an indispensable role in the 
operation of an OSN.  


 


 



w3c;%20http:/www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#loosecoupling

http://www.opengeospatial.org/resources/?page=glossary





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


24/180 


OA Support Service 


OA Service that facilitates the operation of an OSN , e.g. providing an added-value by combining the 
usage of OA Info-Structure Services.  


 


Ontology [based on (Studer et al 1998)] 


Explicit, formal specification of a shared conceptualisation (Studer et al 1998). 


It is formal in order to not only make it readable by humans, but also by machines. It is explicit as it is 
based on a taxonomy specified in terms of concepts, properties (or relationships) and axioms (the ―vo-
cabulary‖). It is shared in the sense that these specifications are fixed as an agreement set up and 
shared by a dedicated user community and that it is associated with a particular subject area (domain) 
or task. It is a conceptualisation as it defines a conceptual schema by abstracting from a real or hypo-
thetical world.  Its ultimate purpose is to enable machine understanding which in turn provides the po-
tential for data and service interoperability. 


In Description Logics, an ontology describes a TBox; optionally, it may also describe an ABox. The 
TBox can then be considered to be the schema of the ABox. 


 
 
Open Architecture [based on (Powell 1991)] 


Architecture whose specifications are published and made freely available to interested vendors and 
users with a view of widespread adoption of the architecture. An open architecture makes use of exist-
ing standards where appropriate and possible and otherwise contributes to the evolution of relevant 
new standards. 


 


Operation [ISO 19119:2005; http://www.opengis.org/docs/02-112.pdf] 


Specification of a transformation or query that an object may be called to execute. An operation has a 
name and a list of parameters. 


 


ORCHESTRA Architecture (OA) 


Open architecture that comprises the combined generic and platform-neutral specification of the infor-
mation and service viewpoint as part of the ORCHESTRA Reference Model.  


 


ORCHESTRA Application 


Set of software components that together comprise an application based on the usage of ORCHESTRA 
Services  


 


ORCHESTRA Application Architecture (OAA) 


Instantiation of the ORCHESTRA Architecture by inclusion of those thematic aspects that fulfil the pur-
pose and objectives of a given application. The concepts for such an application stem from a particular 
application domain (e.g. a risk management application).  


 


 


ORCHESTRA Architecture Service (OA Service)  


ORCHESTRA Service that provides a generic, platform-neutral and application-domain independent 
functionality. 


 


 



http://www.opengis.org/docs/02-112.pdf





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


25/180 


ORCHESTRA Application Schema (OAS) [extending ISO/FDIS 19109:2003] 


Conceptual schema for the data required by one or more ORCHESTRA Applications. As such it pro-
vides a formal specification that is compliant to the ORCHESTRA Meta-model of the concepts (e.g. fea-
ture types), their properties and associations which are relevant for a specific information model in an 
ORCHESTRA Service Network. 


 


ORCHESTRA Application Schema for Meta-information (OAS-MI)  


Form of an ORCHESTRA Application Schema applied to meta-information. 


 


ORCHESTRA Application Implementation Specification (OAIS) 


Extension and restriction of an ORCHESTRA Implementation Specification according to the needs of a 
particular application domain. An OAIS comprises a platform-specific combined specification of a the-
matic information model and a set of OT Services. 


 


ORCHESTRA Feature Set (OFS) 


Set of feature instances following the information model formally specified in an ORCHESTRA Applica-
tion Schema. 


 
ORCHESTRA Implementation Specification 


Combined platform-specific specification of the engineering and technology viewpoints as a result of the 
mapping of the ORCHESTRA Architecture to a specific platform. 


 


ORCHESTRA Meta-Model (OMM)  


Framework of rules for the specification of ORCHESTRA Application Schemas or ORCHESTRA Ser-
vice Types. It is specified in terms of UML classes stereotyped as <<MetaClass> and associated rules. 


 


ORCHESTRA Reference Model 


The ORCHESTRA Reference Model comprises a specification of all RM-ODP viewpoints for the open 
architecture for risk management. In particular, it encompasses the specification of the ORCHESTRA 
Architecture and a specification framework for ORCHESTRA  Implementation Specifications which are 
implemented in ORCHESTRA Service Components and deployed in an ORCHESTRA Service Network 
as ORCHESTRA Service Instances.  


 
ORCHESTRA Service 


Service specified as an ORCHESTRA Service Type, implemented as ORCHESTRA Service Compo-
nent and offered in an ORCHESTRA Service Network by an ORCHESTRA Service Instance. 


 


ORCHESTRA Service Component 


Component that provides an external interface of an ORCHESTRA Service according to an 
ORCHESTRA Implementation Specification. 


 


ORCHESTRA Service Instance 


Executing manifestation of an ORCHESTRA Service Component. 


 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


26/180 


ORCHESTRA Service Network 


Set of networked hardware components and ORCHESTRA Service Instances that interact in order to 
serve the objectives of ORCHESTRA Applications. The basic unit within an OSN for the provision of 
functions are the OSIs. 


 
ORCHESTRA Service Type 


Type of an ORCHESTRA Service specified according to the rules of the ORCHESTRA Reference 
Model.  


ORCHESTRA Service Types are functionally classified in ORCHESTRA Architecture Services (OA 
Services) and ORCHESTRA Thematic Services (OT Services).  


 


ORCHESTRA Source System 


Source system that provides its data and functions through an ORCHESTRA-conformant interface. 
Each ORCHESTRA Source System is associated to at least one External Source System. 


 


ORCHESTRA Thematic Service (OT Service) 


ORCHESTRA Service that provides an application domain-specific functionality built on top and by us-
age of OA Services and/or other OT Services. 


Note: An OT Service may but need not be specified in a platform-neutral way. 


 


Purpose (of meta-information) 


A purpose of meta-information describes the goal of the usage of the resources. 


 


(Service) Platform 


Set of infrastructural means and rules that describe how to specify service interfaces and related infor-
mation and how to invoke services in a distributed system.  


Examples for platforms are Web Services according to the W3C specifications including a GML profile 
for the representation of geographic information or a CORBA-based infrastructure with a UML profile 
according to the OMG specifications. 


 


Principal 


A principal represents the identity of a subject in an ORCHESTRA Service Network. A subject may 
have several identities, and thus several principals. The association between a principal and a subject 
is established in an authentication  process. 


 
Reference Model [ISO Archiving Standards; http://ssdoo.gsfc.nasa.gov/nost/isoas/us04/defn.html] 


A reference model is a framework for understanding significant relationships among the entities of 
some environment, and for the development of consistent standards or specifications supporting that 
environment. A reference model is based on a small number of unifying concepts and may be used as 
a basis for education and explaining standards to a non-specialist. 


 


Resource 


Functions (possibly provided through services) or data objects. 


 
 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


27/180 


Semantic Web  [W3C; http://www.w3.org/2001/sw/Overview.html] 


The Semantic Web provides a common framework that allows data to be shared and reused across 
application, enterprise, and community boundaries. It is a collaborative effort led by W3C with participa-
tion from a large number of researchers and industrial partners. It is based on the Resource Description 
Framework (RDF), which integrates a variety of applications using XML for syntax and URIs for naming. 


 


Service [ISO 19119:2005; ISO/IEC TR 14252;  http://www.opengis.org/docs/02-112.pdf] 


Distinct part of the functionality that is provided by an entity through interfaces. 


Note: In ORCHESTRA, such an entity is called ORCHESTRA Service Component when referring to 
the software component and ORCHESTRA Service Instance when referring to the running instance in an 
ORCHESTRA Service Network. 


 


Service Mapping 


Process of mapping a description of an ORCHESTRA Service Type and the specification of its inter-
faces on platform-neutral level to an ORCHESTRA Implementation Specification for a given platform. 


 


Service Profile Specification 


ORCHESTRA Implementation Specification defining a functional subset of an interface of an 
ORCHESTRA Service Type as a result of a service mapping. The functional subset is defined in the 
sense that those operations and parameters that are marked on the abstract level as ―mapping not re-
quired‖ may be omitted for the platform-specific specification. 


 


Service Viewpoint 


Viewpoint of the ORCHESTRA Reference Model that specifies the ORCHESTRA services supporting 
the syntactic and semantic interoperability between source systems and the development of 
ORCHESTRA Applications. 


 


Session 


Temporary association between a subject and a principal as a result of an authentication process initi-
ated by the subject. Information about a session is stored in authentication session information. 


 
Software Component [derived from component definition of 
http://www.opengeospatial.org/resources/?page=glossary] 


Software program unit that performs one or more functions and that communicates and interoperates 
with other components through common interfaces. 


 


Source System 


Container of unstructured, semi-structured or structured data and/or a provider of functions in terms of 
services. The source systems are of very heterogeneous nature and contain information in a variety of 
types and formats. 


 


Spatial Data Infrastructure [http://www.gsdi.org/pubs/cookbook/chapter01.html#spatial] 


Relevant base collection of technologies, policies and institutional arrangements that facilitate the avail-
ability of and access to spatial data. The Spatial Data Infrastructure provides a basis for spatial data 
discovery, evaluation, and application for users and providers within all levels of government, the com-



http://www.w3.org/2001/sw/Overview.html

http://www.opengis.org/docs/02-112.pdf

http://www.opengeospatial.org/resources/?page=glossary

http://www.gsdi.org/pubs/cookbook/chapter01.html#spatial





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


28/180 


mercial sector, the non-profit sector, academia and by citizens in general. 


 


Subject 


Abstract representation of a user or a software component in an ORCHESTRA Application. 


 
System [ISO/IEC 10746-2:1996] 


Something of interest as a whole or as comprised of parts. Therefore a system may be referred to as an 
entity. A component of a system may itself be a system, in which case it may be called a subsystem. 


Note: For modelling purposes, the concept of system is understood in its general, system-theoretic 
sense. The term "system" can refer to an information processing system but can also be applied more 
generally. 


 


System User 


Provider of services that are used for an application domain as well as IT architects, system develop-
ers, integrators and administrators that conceive, develop, deploy and run applications for an applica-
tion domain. 


 
TBox 


Describes relations between concepts (so-called "intensional" knowledge) without regarding concrete 
individuals. 


Note: An example is: Every TropicalCyclone has-exactly 1 hurricaneCategory. 


 


Technology viewpoint 


Viewpoint of the ORCHESTRA Reference Model that specifies the technological choices of the service 
platform and its operational issues. 


 


Thesaurus (Pollock, Hodgson 2004). 


Synonym and antonym repository for data vocabulary terminology. 


 


Transaction [W3C, http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#transaction] 


Transaction is a feature of the architecture that supports the coordination of results or operations on 
state in a multi-step interaction. The fundamental characteristic of a transaction is the ability to join mul-
tiple actions into the same unit of work, such that the actions either succeed or fail as a unit. 


 


User 


Human acting in the role of a system user or end user of the ORCHESTRA Architecture.  


 


Viewpoint [RM-ODP] 


Subdivision of the specification of a complete system, established to bring together those particular 
pieces of information relevant to some particular area of concern during the design of the system. 


 


 



http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#transaction





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


29/180 


Universe of discourse [ISO 19101] 


View of the real or hypothetical world that includes everything of interest. 


 


Web Service  


Self-contained, self-describing, modular service that can be published, located, and invoked across the 
Web. A Web service performs functions, which can be anything from simple requests to complicated 
business processes. Once a Web service is deployed, other applications (and other Web services) can 
discover and invoke the deployed service. 


 


W3C Web Service [W3C, http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#webservice]  


Software system designed to support interoperable machine-to-machine interaction over a network. It 
has an interface described in a machine-processable format (specifically WSDL). Other systems inter-
act with the Web service in a manner prescribed by its description using SOAP-messages, typically 
conveyed using HTTP with an XML serialization in conjunction with other Web-related standards. 


4.3 General Remark 


This document follows the ISO/IEC Directives, Part 2: Rules for the structure and drafting of 
International Standards w.r.t. the usage of the word ―shall‖. The word ―shall‖ (not ―must‖) is the verb 
form used to indicate a requirement to be strictly followed to conform to this specification. 



http://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#webservice





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


30/180 


5 Process of the ORCHESTRA Architectural Design 


 


5.1 Overview 


The ORCHESTRA Architecture is being designed in an iterative way recognising the fact that the re-
quirements of the system and of the end users as well as the technological progress in the IT market 
and in IT standardisation have a dynamic nature and cannot be completely caught in a one-shot design. 
Thus, a global iteration cycle between the analysis, the design, the implementation and the deployment 
phase of the architecture is foreseen. 


Figure 1 illustrates the iteration cycle between the analysis and the design phase which is explained fur-
ther in the following paragraphs. 


A consolidation process in-between ensures that, at a defined point in time, there is a common un-
derstanding of the system requirements, the user requirements and an assessment of the current tech-
nology as a foundation to design the ORCHESTRA Architecture.  


 


 


Figure 1: Dynamic ORCHESTRA Analysis and Design Process 


System requirements for the ORCHESTRA Architecture encompass all functional and non-functional 
aspects that need to be considered in order to enable interoperability between systems. Interoperability 
is understood here according to ISO 19119:2005 as the capability to communicate, execute programs, 
or transfer data among various functional units in a manner that require the user to have little or no 
knowledge of the unique characteristics of those units.  


Thus, system requirements for the ORCHESTRA Architecture are requirements for the infrastructure. 
Within the RM-OA, they originate from the combined expertise of the consortium in the area of interop-
erability as well as from (ORCH-DoW 2006).  


Starting from a view oriented at system user roles, the system requirements for the ORCHESTRA Ar-
chitecture are finally expressed in terms of architectural principals (see section A2.1.4 in the RM-OA 
Annex A2) that a system should follow. These architectural principals aim at improving the exchange, 
sharing and using of information and services among various functional units cross system boundaries, 
i.e. boundaries of existing systems which for some purpose need to collaborate with each other.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


31/180 


System requirements are expressed in generic technical terms, i.e. independent of application domains. 


User requirements for the ORCHESTRA Architecture encompass all aspects that users or end-users 
of the ORCHESTRA Architecture expect to be reflected by a service infrastructure. User requirements 
are usually expressed in terms that are tailored to the needs of a specific application domain, for 
ORCHESTRA being the domain of risk management. As such, user requirements for the ORCHESTRA 
Architecture have to be aligned with and mapped to generic system requirements. 


Technology assessment is a continuous process, too. ORCHESTRA aims at building the architecture 
on top of and abstracting from technologies, tools and products that are either standard approaches or 
have proven to be successful in solving interoperability problems in deployed use-cases. 


The dynamic nature of these three input factors of the ORCHESTRA Architecture naturally leads to an 
iterative architectural design process. Various but controlled upgrades of the ORCHESTRA Architecture 
are required to adapt the architecture to the changing needs. Both the system and the user require-
ments are dynamic in the sense that they will be prioritised and adapted in local iteration cycles. A con-
solidation process is required in order to assess them in the light of time, budget and technological 
constraints. The consolidation process is determined by the answers to the following questions: 


 How can the user requirements be realised by generic concepts such that a re-use for other 
application domains will be possible ? 


 Which user requirements are of utmost importance with respect to the pilot scenarios in which 
the ORCHESTRA results are to be validated in a first place? 


 What is the status of the existing technology in order to realise a given user requirement ? 


 What is the effort to realise a user requirement in a given environment ? 


As constant factors across the ORCHESTRA architectural design process, ORCHESTRA follows in 
each iteration step the principles  of the Reference Model for Open Distributed Processing (RM-ODP) 
and the taxonomy of the ORCHESTRA services as described in subsections 5.2 and 5.4. 


5.2 Application of the Reference Model of Open Distributed Processing (RM-ODP) 


5.2.1 RM-ODP Overview 


The Reference Model of Open Distributed Processing (ISO/IEC 10746-1:1998) is an international stan-
dard for architecting open, distributed processing systems. It provides an overall conceptual framework 
for building distributed systems in an incremental manner. The RM-ODP standards have been widely 
adopted: they constitute the conceptual basis for the ISO 19100 series of geomatics standards (norma-
tive references in ISO 19119:2005), and they also have been employed in the OMG object manage-
ment architecture.  


The RM-ODP approach has been used in the design of the OpenGIS Reference Model (OGC 2003) 
with respect to the following two aspects:  


 It constitutes a way of thinking about architectural issues in terms of fundamental patterns or 
organizing principles, and 


 It provides a set of guiding concepts and terminology.  


Systems resulting from the RM-ODP approach (called ODP systems) are composed of interacting ob-
jects (see section 7.1.1 of ISO/IEC 10746-1:1998) whereby in RM-ODP an object is a representation of 
an entity in the real world. It contains information and offers services.  


Based on this understanding of a system, ISO/IEC 10746 specifies an architectural framework for struc-
turing the specification of ODP systems in terms of the concepts of viewpoints and viewpoint specifica-
tions, and distribution transparencies. 


The viewpoints identify the top priorities for architectural specifications and provide a minimal set of re-
quirements—plus an object model—to ensure system integrity. They address different aspects of the 
system and enable the ‗separation of concerns‘. 


Five standard viewpoints are defined: 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


32/180 


 The enterprise viewpoint: A viewpoint on the system and its environment that focuses on 
the purpose, scope and policies for the system. 


 The information viewpoint: A viewpoint on the system and its environment that focuses on 
the semantics of the information and information processing performed. 


 The computational viewpoint: A viewpoint on the system and its environment that enables 
distribution through functional decomposition of the system into objects which interact at in-
terfaces. 


 The engineering viewpoint: A viewpoint on the system and its environment that focuses on 
the mechanisms and functions required to support distributed interaction between objects in 
the system. 


 The technology viewpoint: A viewpoint on the system and its environment that focuses on 
the choice of technology in that system. 


The aspect of a distributed ODP system is handled by the concept of distribution transparency. Distribu-
tion transparency relates to the masking from applications the details and the differences in mecha-
nisms used to overcome problems caused by distribution. According to the RM-ODP, application de-
signers simply select which distribution transparencies they wish to assume and where in the design 
they are to apply. The RM-ODP distinguishes between eight distribution transparency types. These dis-
tribution transparencies consider aspects of object access, failure of objects, location of objects, as well 
as replication, migration, relocation, persistence and transactional behaviour of objects. 


5.2.2 Mapping of RM-ODP to the ORCHESTRA Architectural Design Process 


An RM-ODP-based approach has been selected for the design of the ORCHESTRA Architecture as the 
primary objectives of RM-ODP, such as  


 support for aspects of distributed processing, 


 provision of interoperability across heterogeneous systems, and 


 hiding consequences of distribution to systems developers, 


are largely coherent with the ORCHESTRA objectives. However, as an ORCHESTRA system will have 
the characteristic of a loosely-coupled network of systems and services instead of a ―distributed proc-
essing system based on interacting objects‖, the RM-ODP concepts are not followed literally. For in-
stance, the ORCHESTRA concepts are not specified in terms of the RM-ODP distribution transparen-
cies as these are specified in terms of interacting objects. 


The usage of RM-ODP for the ORCHESTRA Architectural design process focuses on the structuring of 
ideas and the documentation of the ORCHESTRA Architecture. Thus, a mapping of the RM-ODP view-
points to the ORCHESTRA needs has been applied and summarised in Table 2: 


 The second column of Table 2 provides the original definitions of the viewpoints as given in the 
OpenGIS Reference Model using the terms of the OpenGIS glossary.  


 The third column of Table 2 indicates the mapping of the viewpoints to the ORCHESTRA needs 
using the terms as defined in the ORCHESTRA glossary (see section 4). 


Note: In order to highlight the fact, that an ORCHESTRA deployment will have the nature 
of a loosely-coupled distributed system based on networked services rather than a distributed 
application based on computational objects, the ―computational viewpoint‖ is referred to as 
―service viewpoint‖ in ORCHESTRA. 


 The fourth column of Table 2 provides examples of what will be defined in the respective view-
point. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


33/180 


View-
point  
Name 


Definition according 
to ISO/IEC 10746 


Definition accord-
ing to the Open-
GIS Reference 
Model 


Mapping to the 
ORCHESTRA  
architectural design 
process 


Examples 


E
n
te


rp
ri


s
e


 


Concerned with the 
purpose, scope and 
policies governing 
the activities of the 
specified system 
within the organiza-
tion of which it is a 
part. 


Focuses on the 
purpose, scope and 
policies for that sys-
tem. 


Reflects the analysis 
phase in terms of the 
system and the user re-
quirements as well as 
the technology assess-
ment. Includes rules that 
govern actors and 
groups of actors, and 
their roles. 


Use case definition for a 
statistical processing 
service. 


Rules for the mainte-
nance and evolution of 
the architecture.  


In
fo


rm
a
ti
o
n


 


Concerned with the 
kinds of information 
handled by the sys-
tem and constraints 
on the use and inter-
pretation of that in-
formation. 


 


Focuses on the 
semantics of infor-
mation and infor-
mation processing. 


Specifies the modelling 
approach of all catego-
ries of information the 
ORCHESTRA Architec-
ture deals with including 
their thematic, spatial, 
temporal characteristics 
as well as their meta-
data. 


Information objects 
specified in UML class 
diagrams and referred to 
by the specification of 
the processing service 
(e.g. as parameter 
types). 


C
o
m


p
u
ta


ti
o
n


a
l 


Concerned with the 
functional decompo-
sition of the system 
into a set of objects 
that interact at inter-
faces – enabling sys-
tem distribution. 


 


Captures compo-
nent and interface 
details without re-
gard to distribution. 


Referred to as ―Service 
Viewpoint‖ 


Specifies the ORCHES-
TRA Interface and Ser-
vice Types that aim at 
improving the syntactic 
and semantic inter-
operability between ser-
vices, source systems 
and ORCHESTRA Ap-
plications. 


Specification of the ex-
ternally visible behaviour 
of a service type, e.g. 
UML specification of the 
interface types of the 
processing service in-
cluding the possibility to 
perform statistics 


Service support for ser-
vice orchestration and 
choreography. 


T
e


c
h


n
o


lo
g


y
 


Concerned with the 
choice of technology 
to support system 
distribution. 


Focuses on the 
choice of technol-
ogy. 


Specifies the techno-
logical choices of the 
platform, its charac-
teristics and its opera-
tional issues. 


Specification of the plat-
form ―ORCHESTRA 
Web Services‖ consist-
ing of W3C Web Ser-
vices according to (W3C 
2004) and a GML pro-
file. 


E
n
g
in


e
e
ri
n
g


 


Concerned with the 
infrastructure re-
quired to support 
system distribution. 


 


Focuses on the 
mechanisms and 
functions required 
to support distri-
buted interaction 
between objects in 
the system. 


Specifies the mapping of 
the ORCHESTRA ser-
vice specifications and 
information models to 
the chosen platform. 


Considers the charac-
teristics and principles 
for service networks. 


Provision of the service 
implementation specifi-
cation, incl. mapping of 
the UML specification to 
WSDL and functional 
service properties (e.g. 
persistency). 


Decision on access con-
trol policies. 


Table 2: Mapping of the RM-ODP Viewpoints to ORCHESTRA 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


34/180 


5.3 The ORCHESTRA Reference Model 


A graphical depiction of the relationships between the viewpoints and their mapping to the 
ORCHESTRA architectural design process, the implementation and deployment phase is provided in 
Figure 2. The result is called the ORCHESTRA Reference Model that covers the following phases: 


 Analysis phase that leads to the specification of the Enterprise Viewpoint (see section 6) 


 Design phase that leads to the specification of the ORCHESTRA Architecture (see section 
5.3.1) 


 Implementation phase that leads to ORCHESTRA Implementation Specifications (see section 
5.3.2) implemented as ORCHESTRA Service Components 


 Deployment phase that leads to ORCHESTRA Service Networks (see section 5.3.3). 


The iteration cycles that permit to adapt the architecture to changing or refined needs as specified in 
the enterprise viewpoint are not shown in Figure 2. 


 


Figure 2: The ORCHESTRA Reference Model 


5.3.1 The ORCHESTRA Architecture 


The ORCHESTRA Architecture (OA) is, by definition, a platform-neutral specification according to the 
requirements of ISO 19119:2005 (i.e. specification in the conceptual schema language UML). The 
ORCHESTRA Architecture is specified as part of the design phase. It encompasses the harmonised 
specification of the Information and Service Viewpoint resulting from requirements of the Enterprise 
viewpoint. The fact that the specification is platform-neutral means that the ORCHESTRA Architecture 
does not contain any particular dependencies on the peculiarities of a given platform.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


35/180 


5.3.2 The ORCHESTRA Implementation Specification 


The aspects of the Engineering and Technology viewpoints are outside the scope of the ORCHESTRA 
Architecture. Instead, they are combined in a dedicated specification step that may be carried out multi-
ple times. Each step represents one mapping of the ORCHESTRA Architecture (i.e. the Information and 
Service Viewpoint specification) to a specific service platform and leads to a platform-specific 
ORCHESTRA Implementation Specification (OIS). 


A service platform, or platform for short, hereby is defined to be the set of infrastructural means and 
rules that describe how to specify service interfaces and related information and how to invoke services 
in a distributed system. Thus, a platform provides a service infrastructure and associated rules for the 
specification, discovery, composition and invocation of services in a distributed system. Examples of 
platforms are Web Services according to the W3C specifications or a CORBA-based infrastructure ac-
cording to the OMG specifications. 


An OIS contains platform-specific specifications of ORCHESTRA information models and 
ORCHESTRA services. This means in concrete terms that the information models expressed in UML 
have to be mapped to a schema language (e.g. XML/GML or EXPRESS) that fits to the selected plat-
form. Likewise, the abstract specifications of the ORCHESTRA service interfaces expressed in UML 
have to be mapped to a service description language (e.g. WSDL) that fits to this platform, too. These 
mapping processes may be done manually or performed (semi-)automatically by a tool.  


Note: The iterative design process of the ORCHESTRA Architecture allows designers to re-apply 
changes in the viewpoint specifications if problems during an OIS specification process occur.  


Note that an OIS itself is not part of the RM-OA specification. The RM-OA just provides the architectural 
framework for an OIS. As a consequence,  


 the RM-OA description of the Technology Viewpoint (see section 10) contains guidelines, re-
quirements and rules what has to be considered when specifying a platform, and 


 the RM-OA description of the Engineering Viewpoint (see section 11) contains guidelines, re-
quirements and rules what has to be considered when mapping to a chosen platform and in the 
specification of an OIS. Furthermore, the Engineering Viewpoint also covers engineering princi-
ples and guidelines how to design ORCHESTRA Service Networks (see section 5.3.3) and dis-
cusses their characteristics. 


The implementation phase encompasses the edition of the ORCHESTRA Implementation Specifica-
tions and their implementation in ORCHESTRA Service Components (OSC) and platform-specific en-
codings of the information models. An OSC is a component that provides an external interface of an 
ORCHESTRA Service according to an OIS. Note that the platform-specific encodings of the information 
models are accessed by means of ORCHESTRA Services, thus they are not explicitly illustrated in the 
ORCHESTRA Reference Model in Figure 2. 


5.3.3 The ORCHESTRA Service Network and ORCHESTRA Applications 


An executing manifestation of an OSC is an ORCHESTRA Service Instance (OSI). The deployment 
phase encompasses the deployment of OSIs on hardware (see Figure 3). 


The set of ORCHESTRA Service Instances connected through a communication network is called an 
ORCHESTRA Service Network (OSN). An OSN thus comprises the set of networked hardware com-
ponents and ORCHESTRA Service Instances that interact in order to serve the objectives of 
ORCHESTRA Applications. 


Note that the grouping of OSIs into software components and their distribution and deployment on 
hardware components (e.g. server machines) is not relevant from when specifying the ORCHESTRA 
Information and Service Viewpoint. The basic unit of an OSN for the provision of functions are the OSIs. 
One of several OSIs may be deployed as part of one software component.  


On a next higher level, software components distributed in a network are grouped together to form 
ORCHESTRA Applications. A software component as part of an ORCHESTRA Application may con-
tain one or more OSIs but, in addition, also other functionality, e.g. functions to built service request 
messages or to consume response messages. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


36/180 


 


 


 


Figure 3: Deployment of ORCHESTRA Service Instance in an ORCHESTRA Service Network 


Figure 4 shows the example of two ORCHESTRA Applications that are built out of several interacting 
software components, some of them containing an OSI and some not. Note that in this example these 
two ORCHESTRA Applications are sharing the usage of one OSI, i.e., client software components in 
the respective ORCHESTRA Applications may call operations of this OSI in parallel. 


 


 


Figure 4: Example of two ORCHESTRA Applications using the same OSI 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


37/180 


5.3.4 The ORCHESTRA Application Architecture 


An ORCHESTRA Application Architecture (OAA) is an instantiation of the ORCHESTRA Architecture 
by inclusion of those thematic aspects that fulfil the purpose and objectives of a given application. The 
concepts for such an application stem from a particular application domain (e.g. a risk management ap-
plication). 


 


 


Figure 5: ORCHESTRA Application Architecture 


By definition, an OAA is a platform-neutral specification. As such, an OAA covers both the platform-
neutral specification of the thematic aspects of the information viewpoint (thematic information model, 
e.g. a domain-specific ontology) and the service viewpoint (addition of thematic services). It may en-
compass a specification extension but also a restriction, e.g. omission of optional services or informa-
tion elements. 


The relationship between an ORCHESTRA Application Architecture and the ORCHESTRA Architecture 
is shown in Figure 5.  


Note:  The process to identify on the conceptual level the pre-eminent information types and their 
relationships (leading to a conceptual thematic information model) and the functional requirements 
(leading to service descriptions on the conceptual level) is outside the scope of the RM-OA. The RM-
OA just provides the framework to formally specify information models as well as services in order to in-
tegrate them into the OA. 


5.3.5 The ORCHESTRA Application Implementation Specification 


A platform-neutral specification of an OAA based on a conceptual schema language like UML might not 
be adequate in all development projects. Sometimes, the platform has been pre-selected and the deliv-
ery of a platform-neutral specification that abstracts from the platform specific characteristics is not 
necessary.  


Nevertheless, in order to allow the exploitation and usage of the ORCHESTRA Architecture, the the-
matic information model and the respective OT Services may also be specified directly on the basis of a 
chosen ORCHESTRA Implementation Specification. In this case, the resulting platform-specific specifi-
cation of the thematic extensions and restrictions is called an ORCHESTRA Application Implementa-
tion Specification (OAIS). 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


38/180 


5.4 The OpenGIS Service Architecture 


Topic 12 of the OpenGIS Abstract Specification (―The OpenGIS Service Architecture‖ - ISO 
19119:2005) provides a specification framework for developers to create software that enables users to 
access and process geographic data from a variety of sources across a generic computing interface 
within an open IT environment.  


It extends the architectural reference model of ISO 19101:2001 defining an Extended Open Systems 
Environment (EOSE) model for geographic services. 


The resulting ISO Architecture for Geospatial Services distinguishes between Information Technology 
Services (IT services) and Geospatial Information Services (GI services).  


 IT Services are general services in a distributed computing environment, such as processing 
services that perform large-scale computation involving substantial amount of data, system 
management services for encoding and transfer of data across communication networks etc.  


 GI Services are specialized IT services that define capabilities that are specific to the access to, 
analysis of, transformation of, manipulation of, storage of, or exchange of geographic informa-
tion. 


In the ISO Architecture for Geospatial Services, a GI service is only specified wherever existing IT ser-
vices of the selected distributed computing platform do not exist or do not meet the specific GI require-
ment.  


In the ORCHESTRA Reference Model the distributed computing platform is referred to as the service 
infrastructure. However, the distinction between IT and GI services is not applied for the ORCHESTRA 
service taxonomy because the ORCHESTRA Architecture (and thus the ORCHESTRA services) shall 
contain an integrated information model that covers thematic, temporal and spatial aspects. 


The link of the RM-OA to the technical content of ISO 19119:2005 focuses on the two following as-
pects: 


 the requirements for platform-neutrality (see section 5.4.1) 


 the usage of the service taxonomy (see section 5.4.2), and 


 the requirements for a simple service architecture (see section 5.4.3). 


5.4.1 Platform-neutral and Platform-specific Service Specification 


The ORCHESTRA service specifications as part of the ORCHESTRA Architecture shall comply with the 
requirements of ISO 19119:2005, section 10.3, for ―platform-neutrality‖. 


This means that the following points are considered: 


 The ORCHESTRA architectural models shall be described in UML according to the rules and 
guidelines of ISO/TS 19103 (conceptual schema language), e.g. for the usage of basic UML 
data types. 


 As part of the service viewpoint, ORCHESTRA services shall be defined as ―platform-neutral 
service specifications‖. They both define static models (objects including the attributes and op-
erations for each object) and dynamic models (capturing the interaction patterns between ob-
jects and state modelling). 


 As part of the engineering viewpoint, the ORCHESTRA platform-neutral models are mapped to 
a specific service infrastructure context. The resulting platform-specific service models may be 
defined in UML or in terms of the platform-specific language (e.g. WSDL). However, it is re-
quired to maintain a description of their mapping from the corresponding platform-neutral mod-
els. This mapping shall show how the intentions of the platform-neutral specifications are met in 
the context of the service platform. In order to support interoperability, the reverse mapping 
back to the concepts in the platform-neutral model must be defined. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


39/180 


5.4.2 Service Taxonomy 


The ORCHESTRA Architecture informally classifies the ORCHESTRA services according to the service 
taxonomy of ISO 19101 (also referred to in ISO 19119:2005, section 8.3). The service categories are: 


 Human interaction services are services for management of user interfaces, graphics, multi-
media, and for presentation of compound documents. 


 Model/Information management services are services for management of the development, 
manipulation, and storage of meta-information (including ontology specifications), conceptual 
schemas, and datasets. 


 Workflow/Task management services are services for support of specific tasks or work-
related activities conducted by humans or software components with a high degree of auton-
omy (agents). These services support use of resources and development of products involving 
a sequence of activities or steps that may be conducted by different persons. 


 Processing services are services that perform computations. These computations might 
range from the performance of mathematical equations up to large-scale computations involv-
ing substantial amounts of data. 


 Communication services are services for encoding and transfer of data across communica-
tions networks. 


 System management services are services for the management of system components, ap-
plications, and networks. These services also include management of user accounts and user 
access privileges. 


Note: The classification of a particular service in a taxonomy is considered as meta-information for 
the service. According to the ORCHESTRA handling of meta-information (see section 8.4.1), the ade-
quacy of this service taxonomy is therefore to be considered when defining purpose-oriented meta-
information for services (see section 8.4.2).  


5.4.3 ORCHESTRA as Simple Service Architecture according to ISO 19119:2005 


The ORCHESTRA Architecture is a service-oriented architecture. Furthermore, looking at ISO 
19119:2005, section 7.6, the ORCHESTRA Architecture aims at observing the characteristics of a 
―simple service architecture‖ in all cases where it is applicable and useful. Exceptions shall be identified 
in an explicit fashion.  


A simple service architecture according to ISO 19119 and interpreted in the context of the 
ORCHESTRA Architecture is a message-based architecture that supports service chaining and consid-
ers the following simplifying assumptions: 


 Message-operations 
 
ORCHESTRA operations shall be modelled as messages. A message operation shall consist of 
a request and response. Requests and responses contain parameters as the payload, which is 
transferred in uniform manner independent of content. Simple applications are characterized by 
message exchange patterns such as one-way (or event), and two-way (or synchronous) re-
quest response interactions. A service specification should make such simple exchange appli-
cations as easy as possible to create and to use. 


 Separation of control and data 


A client controlling an ORCHESTRA service may not want the full results of the service. For 
example, the user may have no need for the potentially voluminous intermediate products in a 
service chain. Only the final result of a service chain may be needed by the client. Therefore, 
an interface should separate the control of a service from the access to the data resulting from 
the service. A client should have the option of receiving just the status of an operation and the 
data should be accessible separately through a separate operation.  





 Stateful vs. stateless service







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


40/180 


For simplicity it is desired that an ORCHESTRA service be stateless, i.e., that a service invoca-
tion be composed of a single request-response pair with no dependence on past or future inter-
actions. This will not always be possible. For some ORCHESTRA services, preconditions must 
be set and iteration may be required. Then it will be necessary to model the service with a state 
diagram having multiple states. Transitions between the states are triggered by operations. The 
state diagram and associated descriptions will be part of the abstract and of the implementation 
specification of the interfaces of an ORCHESTRA service (see section 9.2.6). 


 Known service type


All ORCHESTRA service instances are of specific service types and the client may access the 
service type description prior to calling the service. In the ORCHESTRA Reference Model, a 
―known service type‖ is a service type with an externally available description. 


Note: The ORCHESTRA Reference Model does not enforce that the ―clients shall contain 
software for accessing the service type prior to encountering service instances of the type in an 
implemented architecture‖ as requested by ISO 19119:2005. Although this is useful and a good 
start in many applications in order to reduce complexity, the ORCHESTRA Architecture aims at 
providing services that enables the design of generic application code that is controlled by the 
availability of service meta-information.  


 Adequate hardware 


ORCHESTRA Services are implemented as software components (OSCs) and deployed and 
executed on hardware hosts. The ORCHESTRA Reference Model assumes that the issues of 
hardware hosting of the software are transparent to the user. It is assumed that the service has 
adequate hardware, i.e. hardware assignment is transparent to user. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


41/180 


6 Enterprise Viewpoint 


6.1 Overview 


The enterprise viewpoint of the ORCHESTRA Architecture briefly describes its 


 business perspective, 


 purpose (the core mission of the ORCHESTRA Architecture), 


 scope (e.g. intended users), 


 policies (e.g. standardisation approach, openness) 


In terms of the architectural process described in section 5, it reflects the analysis phase in terms of the 
high-level and the user requirements as well as the technology assessment. 


6.2 Business Perspective 


6.2.1 Contribution to the ORCHESTRA Goals 


The design of the ORCHESTRA Architecture (OA) is triggered by the main goals of the ORCHESTRA 
project which have been described as: 


 To design an open service-oriented architecture for risk management where special attention will 
be paid to providing a solution for the combination of spatial and non-spatial data and services. 
The ORCHESTRA Architecture will contribute to the INSPIRE (INSPIRE, 2007) (Dufourmont, 
Annoni, De Groof 2004) and GMES (GMES 2004) infrastructure and thus will assist and support 
the needed development of INSPIRE technical specifications and guidelines in the INSPIRE pre-
paratory phase. 


 To develop a software infrastructure for enabling risk management services. 


 To develop services for various multi-risk management applications based on the architecture. 


 To validate the ORCHESTRA Architecture and thematic services in a multi-risk scenario. 


 To provide software standards for risk management applications, and to provide additional infor-
mation about these standards. In particular, the de facto standard of OGC and the de-jure stan-
dards of ISO and CEN are expected to be influenced.  


6.2.2 Collaboration with European Initiatives and Projects 


Furthermore, the ORCHESTRA Architecture is meant to provide substantial input to an information in-
frastructure (info-structure) in the context of the European INSPIRE (Infrastructure for Spatial Informa-
tion in Europe) and GMES (Global Monitoring for Environment and Security) initiatives, especially but 
not exclusively for environmental risk management applications. For this task, ORCHESTRA will co-
operate with two other European integrated projects: 


 OASIS: Open Advanced System for crisIS management (IST IP 4677 http://www.oasis-fp6.org/) 


 WIN: Wide Information Network for Risk Management (IST IP 511481 http://www.win-eu.org) 


These projects face in common the task of organising risk management systems that are networked 
across and between organisations with interoperable capabilities. 


6.2.2.1 Common Architectural Principles of ORCHESTRA, OASIS and WIN 


In June 2004, the European Commission (DG INFSO) has initiated a series of meetings between major 
stakeholders of the strategic objective ―Improving Risk Management‖, (i.e. ORCHESTRA, OASIS and 
WIN), stakeholders of GMES (in particular ESA) and stakeholders of INSPIRE (in particular JRC). With 
respect to the relationship between ORCHESTRA, OASIS and WIN common architectural principles of 
an open info-structure have been discussed and were finalised in a white paper (see also section 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


42/180 


6.2.2.4). 


OASIS and ORCHESTRA have agreed to work on a common scenario that will combine the needs 
across different phases of the risk management cycles, including the response phase. The scenario will 
be developed as a paper study which aims at evaluating the OA in a disaster management context.  


6.2.2.2 Requirements of the INSPIRE Relationship 


The acronym INSPIRE stands for ―Infrastructure for Spatial Information in Europe‖. INSPIRE is a Euro-
pean directive establishing the legal framework for setting up and operating an Infrastructure for Spatial 
Information in Europe. The Directive focuses on spatial data that are held by or on behalf of public au-
thorities. INSPIRE is targeting environmental policies, however, other sectors such as agriculture, 
transport and energy may benefit, too, once this infrastructure is in place. 


The proposal of the INSPIRE directive lays down general rules for the various components of a frame-
work for a European Spatial Data Infrastructure (SDI). Thus it considers rules for metadata to support 
the discovery and evaluation of spatial data and services; rules to achieve interoperability that allows in-
tegration of spatial data of the various themes addressed by INSPIRE; rules for interoperable network 
services for discovery, viewing, accessing and downloading spatial information; rules for data sharing; 
necessary coordinating structures; and the development of a European geo-portal to provide a common 
entry to access all INSPIRE network services.  


The INSPIRE Directive was published in the official journal on the 25th April 2007and entered into force 
on the 15th May 2007 (INSPIRE, 2007). 


The INSPIRE Work Programme published in April 2005 identified a step-wise approach for the defini-
tion and preparation of detailed Implementing Rules (Dufourmont, Annoni, De Groof 2004). Clearly, 
such Implementing Rules cannot be developed in isolation but need to take into account what already 
exists in the Member States as well as the broader international developments in the field of SDI and e-
government services. In addition operational experiences, international agreements and protocols that 
are already in place across various thematic communities need to be considered.  


With these considerations in mind, an open call was launched in spring 2005 for the registration of in-
terest by Spatial Data Interest Communities (SDIC) and Legally Mandated Organisations (LMO). LMO 
represent those organisations at local, regional, and national levels that have a formal legal mandate 
giving them the responsibility for specific thematic data resources. As part of the open call it was asked 
to put forward experts and reference material to support the preparation of the Implementing Rules. 
More than 180 experts have been proposed, including experts supported by the ORCHESTRA project. 
The INSPIRE Drafting Teams were then established and started operations in October 2005.  


In early 2007 the ORCHESTRA consortium registered as SDIC. 


The current time-line for the full implementation of INSPIRE envisages that the Directive will be trans-
posed in national legislation by the Member States in 2008-9, and that implementation will take place in 
the following years.  


The technical INSPIRE Implementing Rules shall be based on existing standards and specifications if 
possible. Thus the existing geographic information standards and specifications from ISO, CEN and 
OGC serve as input into the drafting of the INSPIRE Implementing Rules. If it turns out that these stan-
dards do not cover or cannot fully fulfil requirements formulated in the INSPIRE directive adequate ex-
tensions and modifications are proposed and respective feedback into the standardisation bodies will 
be ensured. The current status of the drafting of the INSPIRE Implementing Rules has been reported 
on the recent 12


th
 EC GI conference in June 2006


1
.  


Input of ORCHESTRA into INSPIRE could be expected on the drafting of Implementing Rules for Net-
work Services by providing the RM-OA and the developed ORCHESTRA services specifications as ref-
erence materials. The requirements on INSPIRE Network Services are therefore detailed in the follow-
ing sub-section. Moreover ORCHESTRA could support the drafting of Implementing Rules for INSPIRE 
Data Specifications


2
 by providing the RM-OA and the derived application schemata as reference mate-


rial.  


                                                      


1
 See http://www.ec-gis.org/Workshops/12ec-gis/presentations  


2
 See http://www.ec-gis.org/Workshops/12ec-gis/presentations/Plenary%20room/INSPIRE%20I/portele.pdf 



http://www.ec-gis.org/Workshops/12ec-gis/presentations





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


43/180 


6.2.2.3 Detailed definitions and requirements of INSPIRE Network Services  


In the context of INSPIRE Network Services the current INSPIRE proposal distinguishes the following 
service types:  


 discovery services 


 upload services  


 view services 


 download services  


 transformation services 


 ―invoke spatial data services‖ services 


Following the INSPIRE proposal, the Network Services will be available from each Member State lead-
ing to a distributed architecture at the European level.  They will be accessible via the European Geo-
Portal and potentially via the member states‘ own portals. The definition of appropriate technical speci-
fications requires that considered interface specifications are mature and proved by implementation and 
operational usage, including performance consideration.  


As a first task a more detailed description of these network services is developed. The document on 
Detailed definitions on the INSPIRE Network Services 


3
 proposes a (technical) understanding of the 


INSPIRE Network Services and tries to identify related issues. This understanding served as a starting 
point for the work in INSPIRE Drafting Team on Network Services. The Drafting Team is currently up-
dating the document and adding a description of an INSPIRE (service) reference model that includes 
the concept of horizontal services for DRM, UAA, and e-commerce aspects


4
. The understanding and 


detailed description of the INSPIRE network services developed so far is summarised in the following 
paragraphs.  


Discovery Services 


Discovery services are to search for spatial data sets and spatial data services on the basis of the con-
tent of the corresponding metadata and to display the content of the metadata. As a minimum the fol-
lowing combination of search criteria shall be implemented:  


 keywords, 


 classification of spatial data and services, 


 spatial data quality and accuracy, 


 degree of conformity with the harmonised specifications, 


 geographical location, 


 conditions applying to the access to and use of spatial data sets and services, 


 the public authorities responsible for spatial data sets and services. 


The related search and response metadata are defined by the INSPIRE Metadata Drafting Team.  


The OpenGIS Specification Catalogue Service Web with the ISO application profile (CS-W 2.0 ISO AP 
19115/19119) has been identified by the Network Services Drafting Team as the most relevant specifi-
cation for INSPIRE discovery services. This specification would make the definition of a related set of 
query and response properties, query language, and the desired level of discovery (dataset only, or 
also feature level) necessary. As a candidate standard for service metadata ISO19119 has been identi-
fied but is not considered to be as well developed as the ISO19115 standard is for metadata. 


Another open issue on discovery services is whether and how to deal with multiple application profiles 
for discovery services (e.g. the ebRIM Profile for the CS-W) and whether and how to link to service reg-
istries as UDDI.  


                                                      


3
 http://inspire.jrc.it/reports/dt/ir_dev_process_network_services.pdf 


4
 See http://www.ec-gis.org/Workshops/12ec-gis/presentations/Plenary%20room/INSPIRE%20II/serrano.pdf 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


44/180 


Upload Services 


Currently the upload services are considered to be functionality closely linked to discovery services al-
lowing for the publishing and updating of metadata sets.  


View services 


The following specifications have been identified by the Network Services Drafting Team as the most 
relevant specification for INSPIRE view services: 


 ISO 19128 Web Map Service 


 Draft CEN TC287 profile of ISO 19128 / WMS 1.3 


Download services  


For INSPIRE Download services it is proposed to distinguish downloading predefined datasets (for in-
stance FTP for downloading files) and downloading features allowing for an appropriate selection of 
these features (for instance an OpenGIS Web Feature Services). It is envisioned that INSPIRE 
download services require close links to e-commerce services and the work on INSPIRE metadata and 
data specification implementing rules.  


Transformation services 


Services to support coordinate transformation have been identified as an important and thus prioritised 
instance of INSPIRE transformation services.  Within this context the draft OpenGIS Specification for 
Web Coordinate Transformation Service (OGC WCTS) has been identified as highly relevant. As for the 
view services questions were raised about the need for and requirements on a (European) CRS Regis-
try.  


As further candidates for INSPIRE transformation services, services for schema transformation and 
services for generalisation have been discussed. Whether these services are required is still under 
consideration.  


“Invoke spatial data services” services  


The INSPIRE drafting team proposed invocation services to be understood as the possibility to orches-
trate (―chain‖) INSPIRE spatial data services in the sense of distributed geo-processing.  


The draft INSPIRE Directive requires "invoke spatial data services" to ensure that spatial data services 
can be invoked in an INSPIRE way fostering harmonisation and interoperability, be it by a user or by 
other services or applications. If an INSPIRE service reference model includes constraints and charac-
teristics a spatial data service has to fulfil to be effectively invoked inside a framework and the invoca-
tion mechanism is unambiguously defined and detailed in an INSPIRE reference model then it could be 
envisioned that ―invoke spatial data services‖ service implementing rules concentrate on this reference 
model and the detailed invocation/activation framework. 


For defining INSPIRE invocation services or mechanisms it has been realised that orchestra-
tion/chaining of geospatial services is in a very early stage. Here, SOAP, WSDL, UDDI, and BPEL are 
currently considered as relevant technologies and specifications. 


6.2.2.4 Requirements of the GMES Relationship 


The overall aim of the Global Monitoring for Environment and Security (GMES) initiative is to support 
Europe‘s goals regarding sustainable development and global governance by providing timely and high 
quality data, information, and knowledge. Access to information has strategic value in the development 
of nations and regions. GMES will contribute to Europe‘s ability to fulfil its role as a world player. This 
entails the capacity to have independent access to reliable and timely information on the status and 
evolution of the Earth‘s environment at all scales, from global to regional to local. GMES must also en-
sure long-term, continuous monitoring on a time-scale of at least decades. 


A final report for the GMES initial period (2001-2003) is available (GMES 2004). It proposes a way for-
ward for the GMES period 2004-2008. As part of the strategic requirements specifying how to realise 
the GMES action plan, this report contains assessments and objectives for Data Integration and Infor-
mation Management in the GMES service context which could be relevant for ORCHESTRA.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


45/180 


6.2.3 Evolution of the ORCHESTRA Architecture 


In order to fulfil the business objectives, especially with respect to the GMES and INSPIRE initiative, the 
ORCHESTRA Architecture considers from the beginning a multi-step approach: 


 


Figure 6: The Evolution of the ORCHESTRA Architecture 


 In OA Version 1.x (RM-OA 2005), the ORCHESTRA Architecture has been conceived. The 
ORCHESTRA Architecture provides a common view of how to harmonise the requirements for 
syntactic and semantic service and data interoperability including their thematic, temporal and 
spatial characteristics. 


 In OA Versions 2.x (the present RM-OA version), the focus is on refining the OA V1 in terms of 
service specifications for syntactic interoperability in the spatial domain. These versions link to 
the INSPIRE requirements for network services as outlined in section 9.4.  


 In OA Version 3.x, the focus is on extending and refining former OA versions in terms of service 
specifications for semantic interoperability in the risk management domain.  


Note: None of these OA versions includes ORCHESTRA Implementation Specifications (OIS); 
they all stay on the platform-neutral level. It has not yet been decided for which OA versions a platform 
mapping will be provided in the form of corresponding OISs. 


6.3 Architectural Requirements for the OSN Design 


In the following sections, architectural requirements for the ORCHESTRA Architecture and an OSN are 
specified. They have been derived through a line of argument starting from  


1. the different types of users of an OSN and their roles, 


2. connecting these user roles with fundamental challenges for the ORCHESTRA Architecture, 


3. deriving from that the key system requirements, and 


4. finally developing architectural principles.  


Here, only the architectural principles are briefly explained in terms of architectural requirements. 


6.3.1 Rigorous Definition and Use of Concepts and Standards 


The ORCHESTRA Architecture shall make rigorous use of proven concepts and standards in order to 
decrease dependence on vendor-specific solutions, to help ensure the openness of the OSN and to 
support the evolutionary development process of the ORCHESTRA Architecture. 


6.3.2 Loosely Coupled Components 


The components involved in OSN shall be loosely coupled, where loose coupling implies the use of 
mediation to permit existing components to be interconnected without changes.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


46/180 


Note: An example of an ORCHESTRA Service Type that supports the concept of mediation is the 
Catalogue Service (see section 9.7.5) that decouples the resources (data and services) from their cli-
ents. 


6.3.3 Technology Independence 


The ORCHESTRA Architecture shall be independent of technologies, their cycles and their changes. It 
must be possible to accommodate changes in technology (e.g. the lifecycle of middleware technology) 
without changing the ORCHESTRA Architecture itself. The ORCHESTRA Architecture shall be inde-
pendent of specific implementation technologies (e.g. middleware, programming language, operating 
system) and shall not be influenced by or deal with technical limitations of specific implementation tech-
nologies. 


Note: The ORCHESTRA Architecture follows this architectural requirement by specifying it in a 
platform-neutral manner in the first place before mapping it to one or more ORCHESTRA Implementa-
tion Specifications (see section 5.3.1). 


6.3.4 Evolutionary Development - Design for Change 


The ORCHESTRA Architecture and an OSN shall be designed to evolve, i.e. it shall be possible to de-
velop and deploy the system in an evolutionary way. The ORCHESTRA Architecture and an OSN shall 
be able to cope with changes of user requirements, system requirements, organisational structures, in-
formation flows and information types in the source systems.  


Note: The iterative design approach in ORCHESTRA resulting in the planned evolution of the RM-
OA in several versions (see section 6.2.3) is an example of how this architectural requirement is sup-
ported. 


6.3.5 Component Architecture Independence 


The ORCHESTRA Architecture shall be designed such that an OSN and source systems (i.e. existing 
information systems and information networks) are architecturally decoupled. This means that the 
ORCHESTRA Architecture shall not impose any architectural patterns on source systems for the pur-
pose of allowing them to collaborate in an OSN, and no source system shall impose architectural pat-
terns (i.e. service interaction patterns as for instance described in section 9.10) on an OSN . 


6.3.6 Generic Infrastructure 


The OA Services shall be independent of the application domain. This means that the OA Services 
should be designed in such a flexible and adaptable way that the OA Services can be used across dif-
ferent thematic domains and in different organisational contexts, and that the update of integrated com-
ponents (e.g. applications, systems, ontologies) causes little or ideally no changes to the users of the 
OA Services.  


Note: The functional classification of the ORCHESTRA Service Types into application domain-
independent and dependent service types (see section 9.3) reflects this architectural requirement. 


6.3.7 Self-describing Components 


OSN components, such as data elements or services, shall include descriptions of their critical charac-
teristics, including sources, assumptions, etc. The usage of self-describing components that provide 
context-sensitive formal and semantic descriptions of their interfaces can help to realise semantic inter-
operability.  


Note: An example of how the ORCHESTRA Architecture considers the concept of self-describing 
components is the mandatory support of the service capabilities interface (see section 9.6.1) that allows 
a service consumer to learn about the capabilities and the characteristics of a service implementation. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


47/180 


7 Design Decisions of the ORCHESTRA Architecture 


The ORCHESTRA Architecture is the combined specification of the ORCHESTRA Information and Ser-
vice Viewpoints.  Both of these viewpoints are specified in dedicated sections (see section 8 for the In-
formation Viewpoint and section 9 for the Service Viewpoint). 


However, as concepts introduced in one viewpoint are required for the specification of the other view-
point, a purely sequential description is not possible. Important design decisions that are not specifically 
allocated to one of these viewpoints have to be presented in advance. Note that sometimes they are 
just introduced here but further refined in the respective section. In this case, a forward reference is 
used. 


7.1 Functional Domains of the ORCHESTRA Service Network 


The ORCHESTRA Architecture has to face the problem of integrating environmental risk management 
systems that are networked across and between organisations. It‘s the OSN, as the running instance of 
an ORCHESTRA Architecture, that contributes to improve the syntactic and the semantic interoperabil-
ity of these systems.  


 


Figure 7: Functional Domains in an ORCHESTRA Service Network 


The components of an ORCHESTRA Service Network, i.e. the ORCHESTRA Service Instances (OSIs) 
are classified according to the following functional domains (see Figure 7): 


 User Domain: provides the interface to a user component (a human or a software component) 
and interacts with the OSIs of the Mediation and Processing Domain according to the rules of 
the ORCHESTRA Meta-Model. However, user components as part of a (distributed) application 
may interact among themselves in a native way. 


 Mediation and Processing Domain: provides the main functional part of the OSN. It mediates 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


48/180 


the service calls from the User Domain to the Integration Domain based on meta-information 
exchanged with the components of the Integration Domain (e.g. by means of a publishing or a 
retrieval pattern). Note that the implementation of the services in the Mediation and Processing 
Domain may be designed themselves as a distributed, possibly functionally-redundant system. 
The interactions between the OSIs within the Mediation and Processing Domain and with the 
OSIs in the Integration Domain perform solely according to the rules of the ORCHESTRA Meta-
Model. Furthermore, dedicated OSIs in this domain aim at resolving the semantic differences 
between the information models of the source systems by means of ontologies. Thus, the Me-
diation and Processing Domain enables semantic interoperability if required by the components 
of the User Domain. 


 Integration Domain: provides support for the source system integration (see below). The OSIs 
in this domain have two-side interfaces. On the one hand, they interact according to the OMM 
rules with other OSIs in the Integration Domain and the Mediation and Processing Domain. On 
the other hand, they interact with the components of the Source System Domain according to 
their native interface. Thus, the Integration Domain enables syntactic interoperability within an 
OSN. 


 Source System Domain: incorporates the systems and system components of a thematic appli-
cation area (e.g. risk management) to be coupled. They provide the source of data and func-
tionality and are thus referred to as source systems in the following (see also section 7.6). By 
means of integration OSIs in the Integration Domains, these source systems are connected to 
the Mediation and Processing Domain. In practice, this means they need to identify the data 
and the functionality to be offered in an OSN and to wrap it by respective software components 
with an ORCHESTRA-compliant service interface. For tightly coupled software systems, this 
may imply a considerable re-engineering effort. 


Note: The platform domain is not visible in Figure 7. It provides the basic communication and en-
coding mechanisms for the service interactions (the service infrastructure). Its specification is outside the 
scope of the ORCHESTRA Architecture. The ORCHESTRA Architecture only makes assumptions about 
the characteristics of the platform (see section 9.2.2.2). Furthermore, in some cases, e.g. in the domain 
of access control, the platform directly provides support for the implementation of ORCHESTRA Ser-
vices (see section 10.2).  


7.2 The ORCHESTRA Meta-model Approach 


7.2.1 Overview 


By definition, the ORCHESTRA Architecture shall be generic in the sense that it does not prescribe a 
specific information model nor an exact configuration of ORCHESTRA Service Instances in an OSN for 
a given application domain problem. To summarise, the OA is not the specification of a particular infor-
mation system, but it provides a specification framework for distributed information systems to be used 
by information modellers and OSN designers. This specification framework provides a set of basic ele-
ments to be used and a set of rules to be observed for the purpose of enabling syntactic interoperability 
between the software components of an ORCHESTRA Application. 


These rules and basic elements are summarised in the so-called ORCHESTRA Meta-model (OMM). 
The OMM consists of two parts: 


 The ORCHESTRA Information Meta-model (OMM-Information) that is specified as part of the 
Information Viewpoint in section 8.7. OMM-Information provides rules about how to specify the 
application schemas for information models and meta-information models and prescribes the 
usage of data types. 


 The ORCHESTRA Service Meta-model (OMM-Service) that is specified as part of the Service 
Viewpoint in section 9.2. The OMM-Service provides rules about how to specify interfaces and 
ORCHESTRA Services and proposes a set of architectural services to be used in an OSN. 


Both parts of the OMM are interrelated and depend on each other: 


 On the one hand, the structure of the input and output parameters of interface operations have 
to obey the rules of the OMM-Info. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


49/180 


 On the other hand, built-in operations on feature types have to obey the rules of the OMM-
Service. 


Note: For convenience, if there is no need to explicitly distinguish between OMM-Information and 
OMM-Service, the RM-OA simply uses the term OMM to refer to the respective meta-model. 


The OMM serves as the basis for checking the conformance of information models and service 
specifications with respect to the RM-OA. Thus, it has to be specified in detail in a formal and 
unambiguous way. For convenience, as the OMM is defined in a very formal way as part of the 
Information and Service Viewpoint the major characteristics are summarised in an informal manner in 
the following sub-sections. 


7.2.2 Major Characteristics of the ORCHESTRA Information Meta-model 


In the context of an OSN, information models are specified in order to yield a structure for the 
information that is potentially being exchanged with an ORCHESTRA Service, i.e. they comprise the 
structure of the service parameters. The role of the OMM-Information is thus to deliver rules for the 
specification of such information models (called ORCHESTRA Application Schemas, OAS) with the aim 
of achieving a harmonised approach for all service specifications and therefore contributing to improved 
re-usability and interoperability of software components. 


The OMM-Information is basically an extension of the General Feature Model (GFM) as defined in ISO 
19109. The OMM mandates the usage of UML 2.0 as conceptual schema language. 


The central concept in the OMM-Information is that the feature is the basic informational unit as per-
ceived by ORCHESTRA Applications. OMM-Information is a meta-model for feature types. A feature is 
an abstraction of a real world phenomenon whereby the ―real world‖ explicitly includes hypothetical 
worlds. Individual features (or feature instances) are grouped into feature types where all instances of a 
certain type are described by common characteristics.  


A feature type contains a set of properties which may be either attributes, operations or associations 
with other feature types. Furthermore, feature types may be refined by means of inheritance. 


The OMM-Information provides rules for the usage of the value domains of attribute type definitions. 
First of all, for all attribute types it defines a list of basic data types to be used (mostly based on ISO/TS 
19103). However, attribute types are further classified into temporal, spatial, location and thematic at-
tribute types with the obligation to use the respective ISO standard definitions (e.g. ISO 19107 and ISO 
19125-1 for spatial attribute types).  


Attribute types may also represent meta-information about other resources of an OSN. Here, the OMM 
does not follow the GFM approach of ISO 19109 by strictly requiring the use of ISO 19115. Instead, ac-
cording to the meta-information approach of ORCHESTRA (see section 7.4), meta-information is al-
ways purpose-specific and thus ―the‖ single meta-information model may not be specified. The usage of 
ISO 19115 in order to define the value domain of meta-information attributes is thus just one of many 
options. 


7.2.3 Major Characteristics of the ORCHESTRA Service Meta-model 


The basic structural unit in the ORCHESTRA Architecture as a service-oriented architecture and in an 
OSN is, of course, the concept of an ORCHESTRA Service. Thus, service modelling plays the 
predominant role in the specification phase. According to the ORCHESTRA Reference Model, an 
ORCHESTRA Service is being specified as an ORCHESTRA Service Type, implemented as an 
ORCHESTRA Service Component (OSC) and executed as an ORCHESTRA Service Instance (OSI). 


The OMM-Service provides a meta-model and associated rules for the specification of ORCHESTRA 
Service Types. Particular emphasis is given to the approach that service modelling is not tied to a 
particular platform but shall take place on a platform-neutral level (abstract level). The abstraction from 
platform details improves the mapping from functional user requirements, favours re-use of service 
specifications for different platforms and enables cross-platform interoperability. 


On the abstract level, the purpose and the basic functionality of ORCHESTRA Service Types as seen 
by the service consumer is described in an abstract description that should be human-readable. The 
RM-OA proposes the service description framework as introduced in section 9.4 and used later on in 
the RM-OA for this part. However, there is no formal specification of ORCHESTRA Service Types. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


50/180 


Instead, the OMM-Service defines an ORCHESTRA Service Type as a collection of interface types 
which specify the externally visible behaviour of an ORCHESTRA Service Type. The concept of an 
interface type aims at aggregating coherent functionality for a particular objective (e.g. rendering of 
geographic information in a map) such that it may be re-used for other service types. Thus, on the 
abstract level an interface type is the unit for re-usability. An interface type itself comprises a set of 
operations which are the individual units of interaction between a service provider and and service 
consumer. It is specified in an abstract interface specification and uses UML 2.0 as the conceptual 
schema language. The OMM-Service proposes dedicated stereotypes for UML classes in order to 
customise UML for this modelling approach.  


An operation is specified by its signature, i.e. its name and its request and response (result and 
exception) parameters. Here the link between the OMM-Service and the OMM-Information becomes 
visible: The types of the request and response parameters shall be structured as an ORCHESTRA 
Application Schema (OAS) according to the rules of the OMM-Information. A parameter value may thus 
be a value of a basic data type (e.g. an integer) but also a collection of feature instances with their 
attribute values. 


On the platform-specific level, an ORCHESTRA Service Type is represented in an implementation 
specification that is tailored to the needs and capabilities of a given platform. A selected platform shall 
be specified beforehand in a platform specification.  


Derived from the architectural requirement of ―rigorous use of standards‖ (see section 6.3.1) the OMM-
Service assumes that the platform properties and especially the conformance guidelines as specified in 
the OASIS Reference Model for Service Oriented Architecture (SOA-RM 2006) are fulfilled. As an ex-
ample, the SOA-RM mandates that the SOA approach of a given platform shall describe how visibility is 
established between service providers and consumers whereby visibility is understood as follows: 


 The initiator in a service interaction shall be aware of the other parties (awareness), e.g. ef-
fected by means of a discovery mechanism. 


Note: This aspect is supported in terms of the Catalogue Service described in section 9.7.5 
that shall be available at least in all OSNs that are classified as ―mediated‖ (see section 11.2). 


 The participants shall be predisposed to interaction (willingness), e.g. a service provider shall 
respond to an interaction request of a service consumer (except in cases of a denial-of-service 
attack). 


 The participants shall be able to interact (reachability), e.g. it shall be possible to establish a 
communication path between the participants. 


Note: This aspect is supported by the means for OSN administration. See the Service 
Monitoring Service as described in section 9.7.10 that shall be available at least in all OSNs 
classified as „managed‖ (see section 11.2). 


Such a platform specification shall include a description of the principal way in which the mapping from 
the abstract level is performed (e.g. how an operation is represented), how synchronous and 
asynchronous interactions specified on the abstract level are principally implemented and how an OAS 
is mapped from and to UML to the information model langauge of the platform.  


For each service type, the OMM-Service mandates that service mapping from the abstract to the 
platform-specific level is to be specified as part of the implementation specification. The main rules that 
control the service specification and the mapping are: 


 There may be several implementation specifications for one ORCHESTRA Service Type as the 
implementation specification is platform-specific. However, the OMM-Service also allows sev-
eral implementation specifications for the same platform by introducing the concept of a service 
profile (see below). 


 Interface types are not visible on the platform-specific level. Instead, their operations are indi-
vidually mapped upon the action model (SOA-RM term characterising the permissible actions 
that may be invoked against a service) of the service. 


 All ORCHESTRA Service Types shall support the operations of the interface type 
ServiceCapabilities that provide the means to access the meta-information that is associated 
with a service (e.g. the supported service type, information about the service provider, the set of 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


51/180 


implemented operations). A recommendation for a capabilities schema is provided in Annex B1 
―RM-OA rules for OAS-MI‖ of the RM-OA. 


 Operations and operation parameters that are marked as optional in the respective abstract in-
terface specifications may be omitted in the mapping to implementation specifications. Thus, 
service profiles of ORCHESTRA Service Types may be defined, even for the same platform. 
Their action model thus provides a functional subset of the ORCHESTRA Service Type which 
is, however, syntacticly and semantically compatible such that generic service consumers (ap-
plication components) may be realised by knowing only the interface types of ORCHESTRA 
Service Types and the particular platform characteristics.  


 ORCHESTRA Service Types that are classified as OA Services (see below) shall first be speci-
fied on abstract level and then mapped to the platform level. For all other service types, even if 
just specified in a platform-specific implementation specification, at least an abstract description 
of their basic functionality shall be given. 


As a consequence of this approach, a community that applies the OMM to specify their services shall 
maintain a well-defined list of ORCHESTRA Service Types that is consistent between the abstract level 
and all supported platforms. The RM-OA incorporates as part of its Service Viewpoint in section 9.4 a 
description of service types that are derived from functional user requirements. This list is further struc-
tured into architectural service types (so-called OA Services) that are application-domain independent 
but indispensable for the operation of an OSN and thematic services (so-called OT Services) that are 
tailored towards a given application domain. The RM-OA, being a reference model for an application-
independent architecture, just provides descriptions of OT Services that support thematic applications 
across several domains (so-called OT Support Services). Domain-specific services are outside the 
scope of the RM-OA. 


Specifications of the abstract interfaces of the selected ORCHESTRA Service Types are delivered in 
(ORCH-AbstrServ 2007). 


7.3 Resources in an OSN and their identification 


There are two fundamental resources in an OSN that need dedicated identification schemes: 


 ORCHESTRA Service Instances (OSIs) as the basic functional unit, and 


 Feature instances as the basic informational unit. 


7.3.1 Identification of OSIs 


An OSN comprises a set of interacting ORCHESTRA Service Instances (OSIs) running on top of hard-
ware components connected through a network. In order to be able to search for an OSI and call its 
operations, a unique identifier of an OSI within an OSN is needed. This unique identifier is also referred 
to as the name of an OSI in the following. 


The name of an OSI is a logical name which may be generated automatically, i.e. it may not directly be 
meaningful to a human user.  


In the case of a dynamic OSN environment that supports the dynamic assignment of an OSI to several 
OSNs (i.e. the membership of an OSI to one or several OSNs may change during the lifetime of an 
OSI) an identifier of an OSI that uses an OSN as namespace is not sufficient. In this case, a globally 
unique identifier is required in order to avoid renaming of OSIs during their lifetime. This means that dif-
ferent OSIs within the same OSN or within different OSNs shall have different names. The OSI name 
shall be immutable during the lifetime of the OSI. 


A recommendation of a naming policy for OSIs that uses the platform as the namespace for an OSI is 
described in section 11.3.1, however, the usage of this policy is not obligatory. Other naming policies 
may be defined. The selection of a naming policy for OSIs is one of the characteristics of an OSN as 
described in the Engineering Viewpoint of the RM-OA (see section 11.1.2). 


Note: It has to be distinguished between: 


 name of an OSI 


 platform-specific identifier of an OSI (e.g. its URI) 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


52/180 


 platform-specific address of an OSI (e.g. its IP-address and port) 


The focus here is on OSI names and the mapping between OSI names and their platform-specific iden-
tifiers. These tasks are related to an OA Service which is called Name Service and introduced in sec-
tion 9.7.6. The mapping between platform-specific identifiers and addresses is done by platform-
specific mechanisms and is out of scope of this document. 


7.3.2 Identification of Features 


In the same way as an unambiguous identifier of an OSI is required to refer to that OSI within an OSN, 
each feature instance needs to be uniquely identifiable within the OSN. This is required in order to en-
able software components in ORCHESTRA Applications to work with references to feature instances 
instead of performing a query each time feature information is needed. 


Such a feature instance identifier shall be immutable during the lifetime of the feature instance. This 
means that while the values of attributes of a feature may change over time, the identifier assigned to 
the feature shall not change.  


A proposal of a naming policy for feature instances that uses a Feature Access OSI as namespace is 
described in section 11.3.2, however, as for OSI names, the usage of this policy is not obligatory and 
other naming policies for feature instances may be defined.  


Note that the naming policy of feature instances has to be distinguished from the semantic identity of 
two feature instances having different names but possibly representing the same real-world phenome-
non. 


7.4 Meta-information 


The terms data, metadata, meta-data, metainformation, information, meta-information, and meta-
information are used in different places in the literature, and on the Web.  


While most authors clearly distinguish between ―data‖ and ―information‖, the terms meta-data and meta-
information are often used interchangeably. In ORCHESTRA, the meaning of data is only given by the 
underlying information model, and certain pieces of data may have very different meanings depending 
on the information model. When referring to certain data in the context of a meta-information model, the 
RM-OA is actually referring to the meaning given to this data within a model.  


In order to avoid confusion, and to account for the fact that all data may have different meanings, the 
term meta-information shall be used in all the ORCHESTRA documents whenever a datum is seen in 
the context of a meta-information model (see the RM-OA Annex A3). The related terms, including 
―metadata‖, ―meta-data‖, and ―metainformation‖ must not be used in the specification parts of 
ORCHESTRA documents. 


The architectural approach to include meta-information in the OA and in the OMM is provided as part of 
the Information Viewpoint in section 8.4. The argumentation and the foundation for this approach are 
given in Annex A3 of the RM-OA. A detailed specification of rules and examples is given in Annex B1 of 
the RM-OA. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


53/180 


7.5 User Management, Authentication and Authorisation 


7.5.1 Overview 


The access to resources for both feature and service instances is controlled by authentication and au-
thorisation mechanisms. Access encompasses access from human users but also from software com-
ponents. This is handled by three services: the User Management Service (see section 9.7.6), the Au-
thentication Service (see section 9.7.9) and the Authorisation Service (see section 9.7.8), together re-
ferred to as UAA services in the following. An example of their combined usage is described in an OA 
pattern in section 9.10.1. The general question how many instances of the UAA services are present in 
an OSN and how they are configured is discussed in the context of UAA policies in the Engineering 
Viewpoint in section 11.1.5. 


The following section just introduces the basic terms and concepts. 


Note:  Among the variety of security aspects, only the fundamental challenge of how to control the 
access to resources in an OSN have been considered in the discussion about architectural 
requirements so far. The reason for this selection is that access control in an OSN  
is of primary importance when considering cross-border risk management applications. 


7.5.2 User Management based on Subjects, Groups and Principals 


The major concepts of the ORCHESTRA User Management are subjects and principals. 


A subject is an abstract representation of a user or a software component in an ORCHESTRA 
Application. Subject attributes are intended to store generic information about subjects (e.g. first name, 
last name, address, e-mail, ...).  


cd Principals


«type»


OA_Principal


+ id:  Integer


+ origin:  OA_OSI_Identifier


+ refSubject:  OA_Subject [0..1]


+ refGroups:  Sequence<OA_Group>


«type»


OA_Subject


+ id:  Integer


+ origin:  OA_OSI_Identifier


+ principals:  Sequence<OA_Principal>


+ attributes:  OA_SubjectAttributes


0..*1


 


Figure 8: Relationship between Subject and Principal 


Subjects need to be authenticated. However, the concept of a subject itself cannot be used for the 
authentication process. This is mainly because ORCHESTRA aims at supporting multiple 
authentication paradigms and mechanisms. Their potentially simultaneous use leads to a number of 
implications, e.g. different authentication mechanisms use different subject representations. Thus, a 
single subject representation cannot be chosen for ORCHESTRA.  


To solve the representation problem, a subject is decoupled from authentication. This decoupling is 
done by introducing a further concept called a principal. A principal is an identity of a subject whereas 
authentication indicates whether a subject is allowed to use a certain principal. One subject may have 
multiple principals as illustrated in Figure 8.  


Since each authentication mechanism can have its own way of representing a principal, the UAA 
concept defines a superclass OA_Principal that just contains some attributes used for collaboration 
purposes (like identifying a principal and referring to the related subject). All attributes that are specific 
for an authentication mechanism may then be realised by subclasses of OA_Principal. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


54/180 


cd Groups


«type»


OA_Subject


+ id:  Integer


+ origin:  OA_OSI_Identifier


+ principals:  Sequence<OA_Principal>


+ attributes:  OA_SubjectAttributes


«type»


OA_Group


+ memberPrincipals:  Sequence<OA_Principal>


«type»


OA_Principal


+ id:  Integer


+ origin:  OA_OSI_Identifier


+ refSubject:  OA_Subject [0..1]


+ refGroups:  Sequence<OA_Group>


0..*1


1..*


1


 


Figure 9: Relationship between Subject, Group and Principal 


A group is a special subject. A group can have one or more principals (group principals). In addition to 
principals identifying the group itself a group can have one or more principals as members (member 
principals). This relationship is illustrated in Figure 9. 


Member principals are assigned to a group to define memberships of certain principals. 


Based on these concepts, user management is the process of creation and management of subjects, 
including groups (of principals) as a special kind of subjects. Furthermore, it is up to the User Manage-
ment Service to associate principals with subjects. The creation and management of principals is up to 
the Authentication Service. 


7.5.3 Authentication 


Authentication is the process of verifying the principal of a certain subject. In other words, within an 
authentication process a subject proves that it is allowed to act with the corresponding principal. 
Generally speaking, this proof can depend on a secret (credentials) that can be, for example: 


 what somebody has (key, smart card, …) 


 what somebody knows (password, …) 


 what somebody is (biometrical data, …) 


 the place somebody resides (certain computer, …) 


 the skills of somebody (handmade signature) 


The result of an authentication process starts a session that is represented by session information (see 
section 7.5.5). 


Note: As the session information represents the state of the session and must be passed in each 
service interaction request, it is an example where stateful services are required (see the assumptions 
of a Simple Service Architecture according to ISO 19119 described in section 5.4.3). 


Principals are created and managed in instances of Authentication Services. The process of creating a 
new principal depends on the authentication mechanism used by the corresponding Authentication 
Service instance.  


After authentication has successfully been passed the Authentication Service generates session infor-
mation containing the information about which principal has been authenticated. 


As an example, consider an OSI of an Authentication Service wrapping an existing Kerberos 
authentication. Usually a Kerberos implementation ships with a solution for user management. A user in 
the Kerberos user management becomes an ORCHESTRA principal. This principal then will be 
associated with the corresponding subject using the ORCHESTRA User Management Service. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


55/180 


7.5.4 Authorisation 


Authorisation is the process of determining whether a subject is allowed to have the specified types of 
access to a particular resource (data or services). This is done by evaluating applicable access control 
information contained in a so-called authorisation context. 


Note: Up to now, only access control for operations has been considered in the RM-OA. 


Usually, authorisation is carried out in the context of authentication. Once a subject is authenticated 
through its principal, it may be authorised to perform different types of access. This is carried out 
through the concept of permissions that are attached to principals. 


A service requests an authorisation decision for a given principal and a given authorisation service con-
text. A service requesting an authorisation decision needs to pass session information containing at 
least one authenticated principal of the service requestor as well as the authorisation context. Since 
permissions are bound to principals, the Authorisation Service is able to retrieve permissions for a given 
principal. There is no restriction on how permissions are associated with principals. This might be done 
directly or indirectly using roles, for example. 


The connection of permissions and principals is essential to the UAA concept by enabling the decoup-
ling of authentication and authorisation. An Authorisation Service may assign permissions to every 
ORCHESTRA principal, regardless of the mechanism that has been used to authenticate it. This possi-
bility is important. If there is a problem with interoperability – maybe because clients do not support a 
certain authentication mechanism of a foreign authentication service – they can still use every 
ORCHESTRA service as long as the corresponding service provider is willing to assign permissions to 
the client principals. 


A group (see Figure 9) can be treated as an ordinary subject by Authorisation Service instances. Thus, 
assigning permissions to a group does not differ from assigning permissions to any other subject. 


Authorisation Services may use different authorisation paradigms. These paradigms can be classified 
into lookup and expression-based access control. 


Lookup based paradigms use predefined data structures to retrieve authorisation decisions. The most 
famous representative is the role-based paradigm. 


Example: 


A role-based access control (RBAC) system might use the information model illustrated in Figure 10. 


cd Authorisation Serv ice RBAC


«type»


OA_Principal


+ id:  Integer


+ origin:  OA_OSI_Identifier


+ refGroups:  Sequence<OA_Group>


+ refSubject:  OA_Subject [0..1]


«type»


OA_Permission


+ grant:  Boolean = false


«type»


OA_Role


+ description:  CharacterString


+ name:  CharacterString


+ permission:  OA_FeatureCollection


0..*


0..*


0..*


hasRole


0..*


 


Figure 10: Schema of Role-based Access Control 


Expression-based access control systems (EBAC) do not exclusively rely on predefined lookups. More 
than that, these systems define a framework to specify authorisation conditions. These conditions are 
parameterised and evaluated in order to compute authorisation decisions. Evaluation of expressions is 
done by a separated interpreter. This interpreter contains the computational logic and therefore forms 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


56/180 


the core of each EBAC. 


The most popular representatives of EBAC systems are trust management systems. 


7.5.5 Session Information 


Session information is created and/or modified by an Authentication Service. 


Session information mainly serves as proof that certain principals have been authenticated. Thus, the 
creation of session information is done by an Authentication Service after successfully authenticating a 
certain principal. 


In order to arrive at an authorisation decision a service needs to know under which principal a service 
requestor acts. Therefore the requestor of a service has to pass the session information in every inter-
action with the service instance. Interpretation of the session Information is performed by the invoked 
service instance. 


Verifying and extracting information from session information is a process which is specific to the way 
session information is treated, e.g. as a session key or as a session envelope. Thus, each service 
needs to provide a capability, possibly called session handler or session interpreter, which is able to in-
terpret session information as passed from the service requestor. 


7.6 Approach to Integration of Source Systems 


The OA explicitly takes into account the fact that existing systems and services have to be integrated 
when designing an OSN. In this respect, it does not matter whether these systems have existed for a 
long period of time, possibly realised with older technologies, or whether they have been recently de-
signed with modern technology. Thus, the OA uses the term source system to refer to such systems in-
stead of the often-used term legacy system. 


A source system is a container of unstructured, semi-structured or structured data and/or a provider of 
functions in terms of services. The source systems are of a very heterogeneous nature and contain in-
formation of a variety of types and and in a variety of formats. 


Examples are: 


 database containing structured data (e.g. numerical model data), i.e. information that is organ-
ised so that it can be easily located, searched, and updated 


 database containing semi-structured data (e.g. an XML database) 


 database containing unstructured data (e.g. a document archive or image database) 


 a system providing services (e.g. a map server) 


 Web site, i.e. a provider of a set of html-documents accessible through the W3C http protocol. 


For clarification, as illustrated in Figure 11, the OA furthermore distinguishes between an  


 External Source System as a source system that does not provide its data and functions through 
an ORCHESTRA-conformant interface, and 


 ORCHESTRA Source System as a source system that provides its data and functions through 
an ORCHESTRA-conformant interface, in Figure 11 called ORCHESTRA_SourceSystem_IF as 
an example. This interface shall be built according to the rules as specified in the ORCHESTRA 
Service Meta-model, in Figure 11  represented by the meta-class OMM_InterfaceType as speci-
fied in section 9.2.4.1  


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


57/180 


cd Source System


ORCHESTRA_SourceSystem


SourceSystem


ExternalSourceSystem


«interface»


ORCHESTRA_SourceSystem_IF


«MetaClass»


OMM_InterfaceType


transformation 


process called 


"source system 


integration"


1..*


«provides»


 


Figure 11: External and ORCHESTRA Source Systems 


Each ORCHESTRA Source System is associated with at least one External Source System. 


Thus, the major development process for an OSN designer is the process of transforming an External 
Source System into an ORCHESTRA Source System which is called source system integration. 


The OA approach for source system integration is specified in the RM-OA Service Viewpoint in section 
9.10.2 as part of the recommended patterns of OA Service usage. The consideration of source systems 
for the OMM is specified in the RM-OA Information Viewpoint in section 8.5. 


7.7 Service Interaction Modes 


ORCHESTRA Services will support at least two interaction modes at the conceptual level for the proc-
essing of their operations: 


 Synchronous mode: In this mode, the requestor principally waits for the response and the re-
sponse contains the requested data in its output parameters. This mode is usually applied for 
all operations with a relatively short response time. 


 Asynchronous mode: In this mode, the requestor just issues the request for the operation, con-
tinues its work in parallel and is asynchronously informed about the availability and a reference 
to the results. This mode is usually applied for all operations with a longer response time. 


Note: These modes are described on the conceptual level which is reflected in respective interac-
tion interfaces of the abstract specification (see sections 9.6.2 and 9.6.3). It does not imply any con-
straints on the application programming interface in an implementation. This means that a synchronous 
operation on the conceptual level may be implemented in an asynchronous way and vice versa. 


7.8 Interoperability Between Different Service Platforms 


Conceptually, there are the following two possible ways to map an OSN onto service platforms: 


1. There is exactly one platform assigned to the OSN. In this case, all interactions between all 
OSIs that participate in the OSN shall follow the rules of this platform (see Figure 12) with the 
dotted lines representing the logical interaction relationships between the OSIs. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


58/180 


 


Figure 12: OSI interactions in one platform domain 


2. There are several platforms assigned to the OSN sub-dividing the platform into several platform 
domains. In this case, all interactions between all OSIs that participate in the OSN and belong 
to the same platform domain shall follow the rules of the respective platform. Furthermore, it 
must be ensured that all interactions between OSIs that belong to different platform domains 
are made possible by the provision of respective service platform gateways (see Figure 13). An 
example for such a situation is a gateway that maps between a CORBA-based platform and 
W3C Web Services. 


 


Figure 13: OSI interactions across platform domains 


Note: Currently, the RM-OA is restricted to possibility 1, i.e. an OSN may only run on top of one 
platform that is specified in a given platform specification.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


59/180 


8 Information Viewpoint 


8.1 Overview 


The Information Viewpoint of the ORCHESTRA Reference Model specifies the modelling approach for 
all categories of information the OA deals with, including their thematic, spatial and temporal character-
istics as well as their meta-information. The ORCHESTRA Reference Model does not specify an infor-
mation system. Instead it provides a framework for distributed information systems and ORCHESTRA 
Applications based on a service-oriented architecture. As such, the Information Viewpoint of the 
ORCHESTRA Reference Model provides an integrated specification framework in order to support a 
formal specification of conceptual ORCHESTRA information and meta-information models in the con-
text of ORCHESTRA Applications.  


This specification framework encompasses the following levels: 


 source system level 


 feature level 


 schema level 


 meta-model level 


 semantic level 


The source system level comprises all the existing systems that contain relevant data or provide rele-
vant services in order to fulfil a particular objective of an application or end-user task (see also the 
ORCHESTRA functional domains in section 7.1).  


The feature level provides an informational view of the data and services of the source system level ac-
cording to the rules specified for ORCHESTRA features (see section 8.2). Note that no semantic con-
cepts are considered on this level. 


The schema level delivers the structuring of information on the feature level in terms of application 
schemas. Application schemas provide formal specifications of ORCHESTRA Information Models.  


The meta-model level provides rules to define application schemas. 


The semantic level provides semantics to the information specified in the other levels through explicit 
consideration of ontologies defined and shared in user communities.  


The following sections describe the framework for ORCHESTRA Information Models in two steps: 


 In a first step, just the meta-model, the schema and the feature level aspects are considered. For 
these levels, a specification framework for information models is specified (see section 8.3) and 
then extended by the consideration of meta-information (see section 8.4). 


 In a second step, the specification framework is enriched by considering aspects of the source 
system level (see section 8.4.4) and the semantic level (see section 8.6). 


8.2 The ORCHESTRA Definition of a Feature 


One basic concept of the RM-OA Information Viewpoint is the feature, where a feature is an abstraction 
of a real world phenomenon perceived in the context of an ORCHESTRA Application. A digital repre-
sentation of the real world can be thought of as a set of features. These individual features (or feature 
instances) are grouped into feature types where all instances of a certain type are described by com-
mon characteristics. The characterisation of features into feature types typically depends on the particu-
lar application and is captured in an application schema.  This process is shown in Figure 14. 


Note: Features have often been understood just as geographic features, i.e. as a feature associ-
ated with a location relative to the Earth. The ORCHESTRA definition of features explicitly goes beyond 
geographic features. It includes tangible objects of the real world but also abstractions, concepts or 
software artifacts (e.g. documents, software components of IT systems) that may have a physical rep-
resentation only in software systems. These features may, but need not, have spatial characteristics. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


60/180 


The ORCHESTRA understanding of a ―real world‖ explicitly comprises these hypothetical worlds or 
worlds of human‘s thoughts.  


 


 


Figure 14: From phenomena to feature instances (derived from ISO 19109) 


Common concepts of all application schemas are expressed in the ORCHESTRA feature model as 
specified in the ORCHESTRA Meta-Model (see section 8.7). Relationships between feature types are 
feature association types and inheritance. Properties of feature types are feature attributes, feature op-
erations and feature association roles.  


Any feature may have a number of such properties. Any feature may have a number of attributes, some 
of which may be numeric, a spatial geometry, meta-information, temporal information, etc. 


Examples of features types are earthquake, forest fire, road, building, water protection area, and moni-
toring station, but also sensor observation, measurement value, document, and equation. 


Examples of feature instances are  


 for the feature type ―earthquake‖ the Indian Ocean Tsunami December 26, 2004, 


 for the feature type ―water protection area‖ the ―Wasserschutzgebiet Seewiesenquellen 
ID=3463‖ in the German Federal State of Baden-Württemberg, 


 for the feature type ―forest fire‖ the ―forest fire near Fréjus in southern France started on July 6, 
2005‖, or 


 for the feature type ―document‖ the ―RM-OA Version 1.9 dated July 22, 2005‖. 


8.3 Framework for ORCHESTRA Information Models 


The framework for ORCHESTRA information models distinguishes between 


 the ORCHESTRA Meta-Model (OMM) (for information) on the meta-model level, 


 ORCHESTRA Application Schemas (OAS) on the schema level and 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


61/180 


 ORCHESTRA Feature Sets (OFS) on the feature level. 


The OMM specifies the common specification framework for all feature-based application schemas 
used within ORCHESTRA. It is a meta-model and defines rules for the specification of an OAS. An 
OAS formally specifies the feature types and their properties which are relevant for a specific informa-
tion model used in an OSN. It is expressed using the conceptual schema language UML. 


The OMM is an evolution of, but it is not a profile of the General Feature Model (GFM) of ISO 19109.  


A set of feature instances following the information model formally specified in an OAS is called an 
ORCHESTRA Feature Set (OFS).  


 


 


  


Figure 15: Framework for ORCHESTRA Information Models 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


62/180 


8.4 Framework for ORCHESTRA Meta-Information Models 


8.4.1 Overview  


The following definition for meta-information, which is derived from the principle ideas as described in 
the Annex A3, is applied for the RM-OA: 


Meta-information is descriptive information
 
about resources in the universe of discourse. The structure 


of the meta-information is given by a meta-information model that depends on a particular purpose. The 
terms used in this definition are used in the following sense:   


 Resources are either functions (possibly provided through services) or data objects. 


 Universe of discourse: view of the real or hypothetical world that includes everything of interest 
(see ISO 19101 and also section 8.2). 


 Particular purpose: A purpose of meta-information describes the goal of the usage of the re-
sources. The particular purpose also determines the set of resources in the universe of dis-
course that are to be considered. 


 Meta-information model: a meta-information model represents an implementation of a concep-
tual model for meta-information. It is represented by an ORCHESTRA Application Schema for 
Meta-information (OAS-MI). 


The above definition indicates that a resource by itself does not necessarily need meta-information. The 
need for meta-information arises from additional tasks or a particular purpose (like catalogue organisa-
tion) where many different resources must be handled by common methods. 


Common characteristics of resources in the context of a specific purpose are to be described by means 
of a meta-information model (concrete by an OAS-MI) that shall be suitable and sufficient in order to de-
fine respective algorithms. This means: 


1. All information needed to fill up the meta-information model is ―meta-information‖ for this par-
ticular purpose.  


2. Only attributes of the resources that are also specified in a particular meta-information model 
are candidates to be meta-information attributes. Specific attributes of the resources that are 
not specified in a meta-information model are consequently not considered as meta-information 
for this particular purpose.  


3. Meta-information may also be implicitly derived from the existence or content of the resources 
without requiring that this information be explicitly specified as attribute of the resources. Ex-
amples here are the results of annotation services for documents or services that generate 
meta-information according to a given ontology. This process is known as ―classification‖ in the 
domain of the Semantic Web. 


Thus, the ORCHESTRA Architecture does not define ―the‖ single meta-information model which is valid 
for any purpose. Instead, in the RM-OA Annex B1, ORCHESTRA defines rules which a meta-
information modeller will have to apply to build OAS-MIs related to a dedicated ORCHESTRA Applica-
tion Schema (information model). 


The development process of a meta-information model for data and/or services is guided by the fact 
that it is necessary to know the purpose of the meta-information. The following approach should be 
taken: 


1. Find the purposes (use cases/functions) in the context of users and/or machines like search, re-
trieve, etc. (see below). 


2. Develop the meta-information model(s) for data and/or services in the respective context.  


3. Based on the ORCHESTRA meta-information rules specified in Annex B1 and on the above 
(step 2) developed meta-information model specify your OAS-MI.  


In order to simplify the above process for writing OAS-MIs, Annex B1 offers several example OAS-MIs 
as a recommendation which can be combined in arbitrary ways to cover a great variety of real world 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


63/180 


needs. 


The RM-OA defines a set of rules for specifying OAS-MIs for the following ―well-known‖ particular pur-
poses that are further explained in the subsequent sub-sections: 


 discovery (including search and navigation) 


 access, storage and service invocation 


 integration (collaboration, including orchestration and choreography of services) 


 interpretation 


 user profiling 


 authentication, authorisation, and accounting (AAA) 


 quality control/management 


 transactions, synchronisation and locking 


 OSN configuration and management 


8.4.2 Description of Purposes 


8.4.2.1 Purpose ―Discovery‖ 


The purpose ―discovery‖ encompasses methods to find relevant resources within a set of resources, 
namely search and navigation. 


The procedure of searching starts with formulation of a search query that is submitted to the search en-
gine. The search engine returns a number of resources that it has identified as relevant with respect to 
the query (the search results). Then, the initiator of the query can select resources from the results 
and/or refine the query.  


Examples of meta-information supporting the search procedure are keyword lists, full text index, bound-
ing areas or gazetteer mapping. Examples of services are the Document Access Service and the Gaz-
etteer Service. 


Navigation is the process of finding relevant information by browsing within navigational structures. 
These are provided either by a static or a dynamic catalogue. Examples of meta-information supporting 
navigation are catalogue entries or catalogue structures; an example of a service is the ―Catalogue 
Service‖. 


Discovery of services requires a specific meta-information model and dedicated query languages to ac-
cess the meta-information entries. The type of meta-information needed depends on the quality of the 
discovery process: discovery might be user driven and based only on syntactic attributes, or it might be 
automated and based on semantic descriptions. 


8.4.2.2 Purpose ―Access, Storage and Service Invocation‖ 


The purposes ―access‖ and ―storage‖ are concerned with meta-information needed to access and store 
data such as exact location information, access protocol, login information, and access rights (see, for 
example, the authorisation context of the Authorisation Service as described in section 9.7.8). The stor-
age and retrieval will be handled by a ―data access service‖ (in the case of the RM-OA e.g. the Feature 
Access Service as described in section 9.7.1), so that data access is a specialisation of a service invo-
cation.  


Specific meta-information is needed for the purpose of automated ―service invocation‖ based on se-
mantic service descriptions (e.g. OWL-S or WSMO). This requires mapping (also referred to as ground-
ing) of the abstract specifications to concrete service invocation protocols (e.g. SOAP, the protocol for 
Web Services). 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


64/180 


8.4.2.3 Purpose ―Integration‖ 


The purpose ―integration‖ comprises aspects of data integration and service integration. 


Meta-information for data integration incorporates the description of data, its location, the mappings be-
tween different data representations, and data retrieval. 


Meta-information for service integration is needed to support composition and interoperability of ser-
vices. It comprises the description of the service interfaces and functionality. 


As an example for an integration requirement, a simulation service based on a flood forecast model and 
a database containing meteorological data could be imagined. It should be possible to use the data-
base as input for the simulation model and the model‘s output as input for any other integrated service. 


Service composition is the process of selecting, combining and executing of services in order to 
achieve a user objective; from the user point of view, the composition is a new service. 


A composition is based on a choreography, which defines the rules to communicate with each service 
participating in the composition in order to consume its functionality. Compositions of services can be 
distinguished by the time at which the composition is determined: proactive composition (determined at 
the design phase) and reactive composition (built dynamically at the time the new service is requested). 
Meta-information is needed for both patterns. 


Service interoperability means mutual usage of open service interfaces and protocols across institu-
tional boundaries. However, internal details of the organisation of an institution should not be made 
publicly visible. Therefore meta-information is required in order to describe the external behaviour of 
services such that no information about internal business processes is exposed. 


Service mediation resolves incompatibilities that arise when performing tasks concerned with the pur-
pose of discovery, invocation or orchestration of services. For instance, in a discovery scenario, queries 
(formulated by the requestor) and capabilities of services (formulated by the service provider) may be 
incompatible because they use different terminologies. Incompatibilities can arise on the data level 
and/or the process level; at the data level, mediation between different terminologies requires solving 
the problem of ontology integration. At the process level, mediation between heterogeneous communi-
cation patterns is necessary in order to resolve possible mismatches, e.g. by generation of dummy ac-
knowledgements. 


8.4.2.4 Purpose ―Interpretation‖ 


The purpose interpretation is concerned with the support of explanation and understanding of resources 
(data and services).  


In many cases resources can be interpreted only by investigation of vast amounts of implicitly ex-
pressed semantics. Thus, explicit descriptions of the semantics shall be added in order to make data 
and services self-explanatory and enforce their semantic integration. 


A real world example is given by a user needing some information about contaminated sites and their 
classification according to risk categories. Although he has no access to the database containing all the 
measurements of toxic substances, in some cases he might have to explain the origin of the category 
number. Therefore he needs the specific measurement values along with the corresponding critical val-
ues that caused this classification. 


8.4.2.5 Purpose ―User profiling‖ 


It is necessary to provide views on data and services and interaction procedures to support different 
types of users on a per-user or a per-task basis. 


Users and tasks will be described in a way that appropriate views on data and services can be provided 
for different users and tasks. 


The required meta-information relates to the way users are represented in an ORCHESTRA Application 
as subjects (see section 7.5.2). For example meta-information might be user information (user group, 
service provider, service/data integrator, administrator, etc.) and a particular language.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


65/180 


8.4.2.6 Purpose ―OSN Configuration and Management‖ 


Each OSN has to be monitored and administered.  


Meta-information for configuration management of the OSN comprises descriptions of the topology of 
services of the entire OSN, e.g. which services are available at which sites. 


Meta-information for the OSN monitoring comprises information on the actual load, service statistics as 
well as execution traces of services, which are important especially to document and trace execution of 
services which have been composed reactively.  


In order to be able to fulfil this task, all of the services within the OSN have to provide at least their self-
description as meta-information. 


Means for monitoring, configuration and administration of the OSN have to be provided in order to facili-
tate this task. 


8.4.2.7 Purpose ―Authentication, Authorisation, and Accounting (AAA)‖ 


The purpose ―accounting, authentication, and authorisation (AAA)‖ is concerned with meta-information 
needed for controlling access to computer resources, enforcing policies, auditing usage, and potentially 
providing the information necessary to bill for services and/or information. Therefore, AAA requires a 
special set of meta-information that is directly related to the authorisation paradigm and is of little to no 
use for anything else. This special set of meta-information makes up the authorisation context.  


An authorisation context is a set of information used by the Authorisation Service (see section 9.7.8) to 
determine the authorisation decision for a given request. The authorisation context can contain, for ex-
ample, the requesting principal(s), name of the invoked operation, etc. 


Authentication is a method for identifying the acting subject (representing users or software 
components in an ORCHESTRA Application) in an OSN. Authentication systems provide answers to 
the following questions: 


 Who is the subject ? 


 Is the subject really who he/she purports to be?  


Actual mechanisms used for the authentication can be as simple (and insecure) as a plain-text 
password challenging system or as complicated as the Kerberos system. All authentication systems 
rely on at least one of these three factors: 


 Something you know, such as a password or a personal identification number. This 
assumes that only the owner of the account knows the password or the personal 
identification number needed to access the account. 


 Something you have, such as a smart card, a token, or one end of a quantum key generator. 
This assumes that only the owner of the account has the necessary smart card or token 
needed to unlock the account, or that he/she is the only person able to access this end of a 
quantum key generator. 


 Something you are, such as fingerprint, voice, retina, or iris characteristics. 


The ORCHESTRA Architecture does not impose any limitations on the number and type of 
authentication systems used within OSNs. Unless such limitations are imposed on the implementation 
level, every service provider in a typical OSN will be free to use its own authentication system.  


Typical authentication-related meta-information includes a principal, which is used by the system for 
authorisation and accounting purposes and therefore should be uniquely assigned to a well-known 
subject, and some kind of information that is presumably available only to that subject that attempts to 
authenticate a principal (e.g. ‖password―). Independent of the authentication system, at least one 
centralised or distributed database with user identifiers must exist. In other words at least one OSI of an 
Authentication Service shall exist in an OSN that is classified as ―access-controlled‖ (see the discussion 
on OSN characteristics in section 11.1). Depending on the authentication system, this database will 
also contain shared secrets. Subjects must prove their authenticity by supplying the correct secret. 
Also, more sophisticated authentication-mechanisms (e.g. one-way hashes of a shared secret, actor‘s 
public key, a list of single-use keys, etc.) taking the place of the ―username-password mechanism‖ are 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


66/180 


imaginable.   


In security-critical applications, authentication has to take place before granting access to the requested 
service operations. As a complex (and perhaps extreme) example, an organisation may wish to 
implement an authentication mechanism involving a retina- and a fingerprint-scan as a pre-requisite for 
using their PCs, use quantum key encryption over a quantum channel to secure transmission channels 
and to assure the end-point‘s identity, restrict access to specific hosts, and finally use some more 
classical means of authentication before actually granting access to specific service. 


Authorisation protects resources by restricting usage of those resources to those principals that have 
been authorised to use them. The authorisation process is used to decide if that subject is allowed to 
make use of a specific resource. In order to identify those subjects the authorisation process makes use 
of the authentication process. 


Apart from a static authorisation list the authorisation-decision might also be based on certain dynamic 
restrictions like time or date constraints, maximum number of concurrent accesses or location-based 
restrictions (e.g.: no rights granted to remote accessing actors). The types of permission (operation 
permissions, time-slice permissions) actually supported depend on the implementation of the 
Authorisation Service (see section 9.7.8). 


Authorisation related meta-information may be as simple as a static authorisation list maintained on a 
central authorisation server, or as complex as a hierarchical set of dynamic rules involving position in 
an organisation, time or date constraints, maximum number of concurrent accesses or some other 
measure for service load, billing, or location based restrictions. Authorisation related meta-information is 
delivered via or referenced within the authorisation context.  


The authorisation context is passed to the authorisation service by the service requesting the 
authorisation decision. 


Note:  Authentication and authorisation are critical factors for joining OSNs. Whenever two OSNs 
are joined, a compromise will have to be made concerning the allowed access levels for actors 
authenticated by the ―other‖ OSN. In the case of the complex example described above, in-house 
security policy may completely prevent direct merging of ―their‖ OSN with any other network.  


Accounting is the process of gathering information about the usage of resources by subjects. This can, 
for example, include duration of usage or size of the retrieved resources. Accounting information can 
further be used to support billing, fair-use, planning and many other purposes. In that sense accounting 
information can be used by the authorisation process in order to provide a basis for the granting of 
usage rights. The requirements on the actual implementation define the necessary pieces of 
information and obviously the implemented logic inside the AAA-related and user management 
services. 


Meta-information related to accounting is usually a combination of the principal identifying a subject 
(e.g. the login-name), and some measure for resources utilisation, such as ‖amount of data downloaded 
from the service―, ‖time required to calculate the answer―, ―duration the resource was used during 
working hours‖, ‖tons of emitted CO2―, or ‖m


3
 of water used for irrigation―. Depending on the business 


model, accounting information may be connected to some kind of a group identifier (―organisation‖), or 
even be completely anonymous.  


Note: Due to a lack of user requirements on accounting, dedicated accounting services and meta-
information models are currently out of scope of the RM-OA.  


8.4.2.8 Purpose ―Quality control/management‖ 


The purpose ―quality control/management‖ is concerned with meta-information needed to enhance 
quality of information and services as well as to increase trust in information, data and services.  


Quality control/management is needed when certain criteria need to be fulfilled by data and/or services. 
Quality usually has different aspects depending on whether services or data are considered. Specifi-
cally, quality control is important to every actor in every OSN and highly relevant whenever data and 
services have to meet certain legal requirements. Therefore working with data that have no quality in-
formation may be in some cases just as bad as working with randomly generated data. 


Service quality in the ORCHESTRA sense has to deal with infrastructure properties. Examples of these 
are response time or availability of services. Another aspect that can be considered to be an attribute of 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


67/180 


service quality is the fee one has to pay to use the service. Quality regarding the output of services, 
whether it‘s back to the actor invoking the service, passed on to another service or stored in an internal 
data repository is considered to be the data quality of the service. This type of quality is important 
especially in the context of service chaining when accumulation of errors becomes an issue. A valid 
source of information for this can be found at (W3C 2003). 


Data quality becomes an issue when working with data. Quality may refer to many different aspects and 
only an open list can be given to characterise them in the context of data: 


 absolute and relative errors of measurement data 


 computational errors of data processing services 


 numerical issues 


 minimum and maximum degree of detail in the values of a data set on a specific service 


 sensitivity to error accumulation 


 refresh period of the data (if it‘s not just a repository for old data) 


Obviously the list of criteria for data quality can become quite long but this degree of detail is not always 
needed in order to classify the quality of data. The meta-information entries required depend on the par-
ticular requirements of the ORCHESTRA Application. 


Quality management also means trust management. These are tightly coupled. Trust becomes an issue 
whenever authenticated and authorized but unknown (or not well-known) parties join a network. When 
providing their data and services to the network they can and must apply meta-information regarding 
the quality of what they are exposing. But how can an actor be sure if this meta-information really 
represents the quality of the actual data and services? The actor‘s only choice is to either trust or dis-
trust the actor that attached the quality meta-information.  Besides deciding whether to trust an actor or 
not, degrees of trust can also exist. Many different information items can be considered important for 
trust relationships, including 


 Information about the actor: e.g.: name 


 Certificates the actor has been granted 


 The organisation that the actor represents 


Note 1: In order to trust an actor, that actor must be identified first, so a trust relationship relies on 
the authentication process. Trust relationships are not mandatory but are highly recommended to en-
sure the quality of a network. A network that does not foresee trust management can be seen as a net-
work where every actor is fully trusted by default. 


Note 2: For a discussion on trust in a service environment, see also (OASIS 2006). 


Examples for data/information-related quality meta-information: This depends on the data or information 
item itself. It is important that each of them has attached meta-information. For example a measure-
ment value within an air quality monitoring network can have attached meta-information about its verifi-
cation status (checked/unchecked) and validation status (valid/invalid). 


Examples for service-related quality meta-information: The most important type of service-related qual-
ity meta-information is the one concerning guaranteed availability of service and guaranteed response 
times. For example, a single server has far lower guaranteed availability than a redundant server farm, 
and a huge grid may be able to guarantee answer times (with constant data quality) practically inde-
pendent of load. Other important aspects of service-related quality meta-information include ―guaran-
teed availability of the service for next N years‖, ―versioning‖ (which implies availability of all data for 
long periods – possibly the whole service lifetime), and ―transaction safety‖.  


8.4.2.9 Purpose ―Transactions, Synchronization and Locking‖ 


The ORCHESTRA Architecture defines a set of services that are built with interoperability in mind. In 
order to use the ORCHESTRA Architecture to its full extent, different services need to be transparently 
combined into new ―(virtual) compound services‖. Using such service chains (combinations) to the full 
extent requires mechanisms and meta-information that support building transaction-secure composed 
operations on the OSN level. These mechanisms can be further separated into Transactions, Synchro-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


68/180 


nisation, and Locking. 


Transactions are needed when certain tasks that involve resources need to be carried out and it is im-
portant to ensure that the resources are not altered during this process. 


Synchronisation is needed to secure that data/information are in a consistent state. That means inter-
connected data have to be kept synchronous.  


Therefore, updating distributed data without transactions is dangerous in two ways:  


 First, distributed data will inevitably become ―out of sync‖ during the update procedure. Access-
ing the data while they are still ―out of sync‖, can lead to unpredictable outcomes. 


 Second, the update procedure may break during execution, leaving the data in an unsynchro-
nised state. Consequently, application programmers have to invest a considerable amount of 
work in checking the data consistency and assuring that the update is eventually completed. 


Neither of these problems occurs if all the changes are encapsulated within a single transaction. 


A transaction is a logical group of operations that succeeds or fails as a group. This means that either 
all tasks within a transaction are carried out or none are. That way a transaction appears to be atomic. 
A lock is a mechanism to (temporarily) restrict the access rights to a resource for certain actors. Locking 
is used to guarantee the atomicity of transactions. 


Note: Care must be taken when using a locking concept in order to avoid deadlocks. 


Examples of meta-information related to Transactions, Synchronization and Locking include ―start 
transaction‖, ―end transaction‖ and ―abandon transaction‖ signals, and various exceptions signaling that 
a service is unable to perform a transaction (e.g. transaction unsafe services), had to abandon a trans-
action because part of it did not work out (e.g. one service in the chain isn‘t transaction safe), or that a 
service is unable to respond to a request because it is currently busy with an transaction. 


In addition, each transaction/synchronization request to a transaction safe service produces a lock that 
is unique with respect to at least this service and thus also unique with respect to OSN (because ser-
vice has unique identifier with respect to OSN). In order to minimize problems with deadlocks, it may be 
advisable to assign an OSN-wide unique identifier to each transaction, maintain a globally accessible 
list of transactions and locks they are causing, and enforce an OSN-wide policy on maximal acceptable 
transaction times. 


8.4.3 Framework Specification 


The framework for ORCHESTRA Meta-Information Models (see Figure 16) is specified according to the 
general considerations for meta-information as described above. It distinguishes between 


 an ORCHESTRA Meta-Model (also used for meta-information) on the meta-level, 


 ORCHESTRA Application Schemas for Meta-information (OAS-MI) on the schema level, and 


 Meta-Information Bases on the feature level. 


The Meta-Information Base is a store for meta-information elements. The store might be persistent or 
transient, depending on the purpose of the meta-information usage. An example of a persistent store is 
a catalogue for discovery or navigational purposes. An example of a transient store is the usage of 
meta-information that is extracted on-the-fly in order to support mediation tasks. The Meta-Information 
Bases contain information that describes features in the form of an OFS according to a well-defined 
purpose (e.g. navigation, search). There may be several Meta-Information Bases in an OSN. 


The structure of these Meta-Information Bases is defined in dedicated ORCHESTRA Application 
Schemas for Meta-Information (OAS-MI) as a special variant of OAS applied to meta-information. As 
the Meta-Information Bases are generated according to some purpose, there may be different OAS-MIs 
for different purposes. ORCHESTRA does not specify one conceptual schema for meta-information 
models for all tasks. Instead, the ORCHESTRA Meta-Information Model consists of the set of all OAS-
MIs that are defined according to the purposes identified above.  


 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


69/180 


 


Figure 16: Framework for the ORCHESTRA Meta-Information Model 


Depending on the purpose, an OAS-MI may be related to an OAS through some relationships between 
the two models, e.g. the OAS-MI elements may be attribute types of feature types or they may be fea-
ture types themselves that are associated with other feature types. 


The meta-model for the OAS-MI is the OMM with dedicated statements on the role of attributes that are 
considered as meta-information for a particular purpose (see section 8.7.4). Thus, all rules for OAS also 
apply for OAS-MI.  


Dedicated rules for the definition of OAS-MI are defined in Annex B1 of the RM-OA. 


8.4.4 OMM Extensions for Meta-information Association Types 


In order to allow one OMM_FeatureType instance to serve as meta-information for another 
OMM_FeatureType instance another subclass, OMM_MetaInfoAssociationType, is added to 
OMM_AssociationType (see Figure 17). This means that in an OAS, classes marked as feature types 
can be associated with each other using instances of the OMM_MetaInfoAssociationType.  


Note 1: The list of subclasses is not complete in Figure 17 as new or refined classification schemes 
could be applied, e.g. different variants of aggregation. 


Note 2: This approach covers meta-information for Features, Feature Collections and Feature Types 
as all three terms can be subsumed under the term feature. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


70/180 


 


Figure 17: Subclasses of OMM_AssociationType 


8.5 Inclusion of the Source System Level 


8.5.1 Extension of the Information Model Framework 


The RM-OA specifies a service-oriented architecture that is dedicated to the integration of systems pro-
viding both information and services (see section 5.4.3). For this purpose, ORCHESTRA offers means 
and services for syntactic and semantic interoperability. Thus, the RM-OA specifies an architecture for 
a ―system of systems‖ or ―networked systems‖. These systems may already exist, whether implemented 
in older technologies (―legacy systems‖) or in more recent technologies, or they may already be built 
based on ORCHESTRA services. 


Regardless of their structure, their technology, their information or their services, these systems are 
called ―source systems‖ in the sequel. They provide the source of information and services to be inte-
grated into an OSN. 


Source systems are of a very heterogeneous nature with respect to their structure and content. Exam-
ples of source systems are relational or object-oriented databases, information systems, document ar-
chives, map servers, Web sites and sensors. As a consequence, the interfaces to access the informa-
tion contained in a source system or to call a service offered by a source system are very diverse. Al-
though they are sometimes based on individual de-facto or de-jure standards (e.g. SQL, JDBC/ODBC, 
CORBA, RMI, Web Services, .NET), there is no standard interface for the integration of source systems 
as a whole.   


Figure 18 illustrates the consequences for the information model framework when explicitly taking the 
source system level into account. 


The majority of source systems do not comply with the ISO, OGC or ORCHESTRA understanding of a 
feature, nor is their information model specified according to the respective feature models. In order to 
allow ORCHESTRA services to process this information, data and information of the source systems 
have to be converted into an OFS according to an OAS. Whether the resulting OFS is persistently 
stored or just maintained in a transient manner depends on the implementation architecture and the 
task to be fulfilled. The only requirement on source systems is that (possibly through some software 
adapter) they may offer their data and/or functions in a way that complies with the OMM. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


71/180 


 


Figure 18: Inclusion of the Source System Level into the 
ORCHESTRA Information Model Framework 


Furthermore, before ORCHESTRA services may access the information of the source systems, they 
have to be known in an OSN, either by means of an explicit registration step initiated by the source sys-
tems or by means of a discovery process initiated by OSN components. For this purpose, meta-
information about the source systems, their information and/or their services is required. 


This meta-information has to be extracted from the source systems, either by an explicit delivery proc-
ess initiated by the source systems or their providers, or automatically by some extraction (annotation) 
process of meta-information initiated by a software component in an OSN. In any case, the extraction of 
meta-information is guided by the respective OAS-MI specifically designed for this particular purpose. 


Note: The process for converting source system information into an OFS and the process for ex-
tracting meta-information about source systems for a particular purpose are independent processes. 
They may be performed in an isolated manner (e.g. just discovery based on provided meta-
information), subsequently (e.g. firstly discover the source system using the meta-information provided, 
and secondly access to the source system information via the OFS) or in parallel (e.g. offline transfor-
mation of a source system into an OMM-compliant information system). 


8.5.2 Scenario for Data Interchange related to ISO 19109 


ISO 19109 specifies two patterns for the interchange of information between systems to be supported: 


 Data interchange by transfer: this is the more traditional model where only the data along with 
the application schema describing its structure are exchanged between the two partners; 


 Data interchange by transaction: in this usage pattern, the communication protocol for querying 
or modifying data is also specified allowing systems to communicate directly.   


For the ORCHESTRA Architecture, being a service-oriented architecture, the data-interchange-by-
transaction pattern will be used. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


72/180 


 


Figure 19: Ad-hoc use of published feature sets and application schemas 


The descriptions in ISO 19109 can be read in a way that data interchange according to that Interna-
tional Standard requires agreement of all parties involved in the interchange over the application 
schema. Within the ORCHESTRA Architecture a typical usage scenario will be that a source system 
provider will publish its data (OFS) and the application schema describing it (OAS) without consulting 
most potential users of the data. If a potential user then discovers the OFS/OAS through catalogues, 
carries out an assessment of the usability of the feature set for his task and decides to use the data, 
this is then considered as an agreement (ex-post) over the application schema to be used in the data 
interchange, too. 


This scenario is illustrated in Figure 19 


8.6 Inclusion of the Semantic Level 


8.6.1 Ontologies 


The semantic level provides semantics to the information specified in the other levels, e.g. through ex-
plicit consideration of ontologies defined and shared in user communities. 


An ontology is an explicit, formal specification of a shared conceptualisation (Studer et al 1998). On-
tologies may be thought of as a formal representation of the knowledge associated with a particular 
subject area (domain) or task. Their ultimate purpose is to enable machine understanding, which in turn 
provides the potential for data and service interoperability.  


8.6.1.1 Ontology Classes 


Ontologies may be broadly classified as listed in Table 3 (ORCH-D2.3.5 2006). Domain and task on-
tologies capture knowledge at a level of abstraction free from implementation concerns – that is, they 
reflect the pure nature of the domain or task. The application and data ontologies are descriptions of in-
formation system implementations, and are only necessary if domain and task ontologies cannot be 
mapped directly to these implementations. Domain ontologies are intended to provide a source of pre-
defined concepts for use with task ontologies. Task ontologies will typically cross domains and there-
fore draw concepts from more than one domain ontology. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


73/180 


Ontology 
Class 


Definition 


Domain 
Ontology 


A formalisation of the knowledge in a subject area (domain) such as topography, 
ecology, biology, flooding, etc.  


Task Ontology A formalisation of the knowledge necessary to solve a specific problem or task but 
abstracted above the level of a specific situation or organisational context, for ex-
ample performing the task of monitoring fresh water quality. 


Application  
Ontology 


Contains knowledge for a specific application designed to complete a task in a 
specific situation and organisational setting, such as the task of monitoring water 
quality as performed by the Environment Agency.  Such ontologies will contain lit-
tle knowledge that is directly reusable by other organisations and serve to provide 
a semantic interface between the domain and task ontologies and the application. 


Data or Ser-
vice Ontology 


Describes a service or data source and may be seen as a special type of an appli-
cation ontology. 


Table 3: Ontology Classes (ORCH-D2.3.5 2006) 


Within the RM-OA, ontologies of these classes may be taken into account as follows: 


 Domain Ontologies may be used in order to provide a semantic reference for ORCHESTRA In-
formation Models and ORCHESTRA Meta-Information Models. 


 Task Ontologies may be used in the context of service chaining and workflow modelling and will 
be considered as part of the RM-OA Service Viewpoint specification. 


 Application and Data Ontologies may be used to support the integration of source systems. 
Here, available application or data ontologies are meta-information for the source systems. 
Thus, they will be considered as part of the RM-OA Information Viewpoint in the context of 


- the schema mapping between internal schemas of source systems and respective 
OAS, or 


- the process of converting data from source systems into OFS according to an OAS, or 


- the process of extracting meta-information from source systems. 


 Service Ontologies may also be used to support the integration of source systems with a par-
ticular focus on the discovery and mediated access to services provided by source systems. 
Here, service ontologies are meta-information for the services of source systems.  Thus, they 
will be considered as part of the RM-OA Information Viewpoint in the context of the process of 
extracting meta-information from source systems. Their usage for the service mediation will be 
specified as part of the RM-OA Service Viewpoint. 


Note 1: The RM-OA will start with the consideration of domain ontologies.  Domain ontologies are 
the most advanced ones in the research community of the Semantic Web. Furthermore, they play a ma-
jor role within the ORCHESTRA project (ORCH-D2.3.5 2006). 


Note 2: The current version of the RM-OA has its focus on the support of syntactic interoperability. 
Thus, this RM-OA version just positions domain ontologies in the framework for ORCHESTRA Informa-
tion Models. Version 3 of the RM-OA will provide more detailed specifications of how ontologies influ-
ence the RM-OA Information and Service Viewpoints. 


8.6.1.2 Conceptual and Logical Ontologies 


Ontologies are formal representations of the knowledge associated with a particular subject area (do-
main) or task, whose ultimate purpose is to enable machine understanding of the knowledge in a par-
ticular domain (ORCH-D2.3.5 2006).  Within the RM-OA, ontologies are considered in two appearances 
according to the following two development stages of ontologies:  


 The first stage is the construction of a conceptual ontology by the domain expert. A conceptual 
ontology is structured knowledge in a domain which a domain expert can understand. Its 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


74/180 


documentation includes the following: 
- A glossary of concepts, instances, relationships, their natural language definitions, as-


signed characteristics and values, and additional information assigned to the relation-
ships. 


- Sources of the documents used to create the content of the glossary. 
- Defined rules, assumptions and primitives used to express the definitions. 
- Concept networks and hierarchies (either in a diagrammatic format or in linear notation). 
- Relationship networks and hierarchies (either in a diagrammatic format or in linear nota-


tion). 
- Defined rules and assumptions regarding the networks or hierarchies. 


 The second stage is the transformation of the structured knowledge base into a machine-
readable logical ontology by an ontology expert. The resulting logical ontology is thus defined in 
a machine-readable notation like e.g. OWL. 


8.6.1.3 High-level Ontologies 


A high-level ontology could be expected to contain terms of a more abstract nature or coarser level of 
granularity that can be related (through subsumption relationships) to those concepts in other domain 
ontologies which capture knowledge at a finer level of granularity (ORCH-D2.3.5 2006). For example in 
the thematic context of risk management, a ―flood risk‖ domain ontology may include concepts like 
―flood risk map‖, ―risk of flood‖, and ―velocity measurements‖, and may need to use their super-ordinate,  
more generic terms, to effectively describe these concepts. The super-ordinate generic concepts are, 
however, often out of scope.  A high-level ontology serves the purpose of containing these generic 
terms which are common across several domains. A high-level ontology, which the ―flood risk‖ ontology 
could reuse, would contain concepts such as ―map‖, ―risk‖, and ―river data‖.   


Due to the generic nature of the RM-OA, those generic concepts of high-level ontologies that are not 
tied to a particular thematic domain have the highest relevance to be considered as basic information 
elements in the framework of ORCHESTRA information models (see section 8.4). 


8.6.2 Extension of the Information Model Framework for Domain Ontologies 


The extension of the information model framework after domain ontologies have been taken into ac-
count is illustrated in Figure 20. 


As mentioned above, the RM-OA distinguishes between conceptual and logical ontologies. This is re-
flected in the framework on the semantic level whereby the logical ontology is the result of a transfor-
mation process from the conceptual ontology. 


As the RM-OA specifies a generic ORCHESTRA Architecture, the information viewpoint is not tied to a 
specific domain ontology either on the conceptual or on the logical level. 


Note: The handling of the conceptual model and the transformation process to the logical ontology 
is out of scope of the RM-OA. The RM-OA Version 3 will discuss the aspects of semantic interoperabil-
ity based on machine-processable logical ontologies. 


Examples of relationships to the other levels of the specification framework are illustrated in Figure 20: 


ex 1. Generic concepts that are relevant across a multitude of domain ontologies (possibly col-
lected in form of a high-level ontology) are candidates for the specification of additional 
meta-classes in the OMM. Examples here are documents or maps. 


ex 2. An OAS-MI provides an application schema for meta-information for a particular purpose. 
Usually, the classes and their characteristics in the form of attributes and operations used in 
the application schema have no formally defined semantics. In order to support mediation 
tasks using the meta-information, the concepts in a domain ontology including their natural 
language definition (i.e. the glossary) could be referred to by the classes in the OAS-MI. 


ex 3. OAS may be generated from logical ontologies if these have a sufficient level of detail, e.g. if 
they include typed slot definitions that may be mapped to feature properties types. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


75/180 


  


 


Figure 20: Inclusion of the Semantic Level into the Information Model Framework 


8.7 The ORCHESTRA Meta-Model for Information 


8.7.1 Overview 


As mentioned above, the OMM is derived from the basic ideas of the ISO 19109 GFM, but it is not a 
true profile of it. In particular, the GFM requires that  


 all data quality attribute types are implemented using DQ_Element as specified by ISO 19115, 


 all ―GFM metadata‖ attribute types are implemented using ―metadata classes‖ as specified by 
ISO 19115, and 


 a ―GFM metadata element‖ has to be used as a GF_Metadata_AttributeType to carry ―meta-
data‖ about instances of feature types. 


Note: The term ―metadata‖ here refers to its meaning and usage in ISO 19109 and ISO 19115. 


While this may be true in a particular OAS, an OAS is not required to adhere to these rules. For in-
stance, ORCHESTRA application schemas for meta-information will have to support other standards 
and other information models. See section 8.4 for additional details. 


This is why the OMM is an evolution of the ISO 19109 GFM, taking into account additional, 
ORCHESTRA-specific requirements. After defining the data types to be used in the OMM and 
ORCHESTRA application schemas in section 8.7.2, the OMM is specified in two steps: 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


76/180 


 the OMM selects the classes and properties of the GFM that are relevant for ORCHESTRA 
(see sections 8.7.3 and 8.7.4) 


 the OMM adds additional meta-classes, namely for additional meta feature and attribute types 
(see sections 8.7.4 and 8.7.5). Note that the creation of these meta-classes is not strictly re-
quired, but shall clearly highlight and list the important information types required by 
ORCHESTRA applications.  


8.7.2 Data Types 


8.7.2.1 Introduction 


The following section defines the most fundamental data types available in the ORCHESTRA frame-
work. In order to achieve interoperability a common basis is made available and well-defined. 
ORCHESTRA Basic Data Types (and OA_Types) are part of such a basis.  


All data types used and defined in ORCHESTRA shall be built directly and/or indirectly (e.g. OA_Types) 
using Basic Data Types. This enables ORCHESTRA users to have only one definition for a single type 
instead of a multitude of definitions (e.g. every service developer and/or every application designer de-
fining its own types for equal purposes). ORCHESTRA basic data types relate and refer to definitions in 
already accepted standards (like ISO 191xx series) and therefore they are well-known in the software 
development community. 


8.7.2.2 Basic Data Types 


Basic Data Types have a standardised definition outside of ORCHESTRA documents (e.g. ISO 191xx 
series). The names of these types will not be prefixed and refer to standard types. They are defined in 
Table 4 with the related standard document being referred to in the Origin column. 


Note: Basic Data Types must not be confused with the UML stereotype called <<DataType>> (see 
section 8.8.6). 


8.7.2.3 OA_Types 


OA_Types are predefined types in the OMM which do not have a standardised definition outside of 
ORCHESTRA documents. They are composed of ORCHESTRA Basic Data Types and other already 
defined OA_Types. OA_Types might still be rather simple. 


8.7.2.4 User-defined types 


User-defined types are not predefined within the OMM. They usually refer to types defined for a specific 
application (e.g. in an OAS) and may only consist of well-known types. These well-known types are Ba-
sic Data Types, OA_Types and already specified User-defined types. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


77/180 


 


Type Names Origin Brief Description 


Real ISO/TS 19103 section 6.5.2.5 A signed real (floating point) number consist-
ing of a mantissa and an exponent. (not nec-
essarily the exact value as the common im-
plementation of a Real type uses base 2) 


Integer ISO/TS 19103 section 6.5.2.3 A signed integer number. Exact with no frac-
tional part. 


Decimal ISO/TS 19103 section 6.5.2.4 A number type that represents an exact value 
as a finite representation of a decimal number. 
(Unlike real, it can represent 1/10 without er-
ror) 


Binary  ISO19118 section A.5.2.1.14 Finite-sequence of arbitrary binary data.  


Any  ISO/TS 19103 The root of all classes. Often not an actual 
class in the implementation, it essentially is 
used where the target class of a member 
name is not known. 


CharacterString ISO/TS 19103 section 6.5.2.7 
Type representing a simple string. The whole 
string has a single specific encoding. This en-
coding is retrievable from the string. 


CountryCode As specified by ISO/TS 19139 List of country identifiers. 


LanguageCode As specified by ISO/TS 19139 List of language identifiers. 


CharacterSetCode ISO/TS 19103 section 6.5.2.7 List of character encodings. 


MD_Character 
SetCode 


As defined in ISO 19115 List of character encodings. 


PT_Locale As specified by ISO/TS 19139 
Type combining language, country and encod-
ing. 


Localised 
CharacterString 


As specified by ISO/TS 19139 
A CharacterString with the addition of a field 
specifying the language of the string. 


Enumeration ISO/TS 19103 section 6.5.4.2 
Defined and closed list of valid mnemonic 
identifiers. 


CodeList ISO/TS 19103 section 6.5.4.3 An open Enumeration. 


Boolean ISO/TS 19103 section 6.5.2.11 A value specifying TRUE or FALSE 


Date ISO/TS 19103 section 6.5.2.8 Type representing a date. 


Time ISO/TS 19103 section 6.5.2.9 Type representing a point in time. 


DateTime ISO/TS 19103 section 6.5.2.10 Type combining date and time. 


Set ISO/TS 19103 section 6.5.3.2 
Unordered finite collection of non duplicate 
objects. 


Bag ISO/TS 19103 section 6.5.3.3 
Unordered finite collection of possibly dupli-
cate objects. 


Sequence ISO/TS 19103 section 6.5.3.4 Ordered ‗bag-like‘ structure. 


Dictionary ISO/TS 19103 section 6.5.3.5 
Container for key-value pairs where the key 
and value types are not predefined. 


Table 4: Basic Data Types 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


78/180 


 


Figure 21: Basic Data Types 


8.7.3 OMM Basic Part 


The UML class diagrams in Figure 22 show the basic part of the OMM that principally specifies the rela-
tionship between OMM_FeatureTypes, OMM_PropertyTypes and OMM_AssociationTypes. It exactly 
corresponds to the main structure of the GFM as described in the section 7.3.3 (GFM main structure), 
section 7.3.4 (GF_FeatureType) and section 7.3.5 (GF_PropertyType) and illustrated in Figure 5 of the 
ISO 19109 GFM document. 


The meaning of the respective meta-classes prefixed by OMM_ is the same as the meaning of the 
meta-classes prefixed by GF_ in ISO 19109 GFM. 


The extension of the OMM with respect to the GFM relates to the extended understanding of what a 
feature type could be in ORCHESTRA as described section 8.2. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


79/180 


Note: The architectural principle of ―self-describing components‖ (see section 6.3.7) requires that 
there is a means to get the feature type specification for a given feature instance. This principle is indi-
rectly fulfilled through the capabilities (see section 9.2.5.2) of the service instance that makes the fea-
ture instance available.  


 


Figure 22: The basic part of the ORCHESTA Meta-model 


8.7.4 OMM Attribute Types 


The  ORCHESTRA Architecture uses the following categories of attribute types and their base class 
from the ISO 19100 series: 


 Spatial Geometry (ISO19107::GM_Object) 


 Spatial Topology (ISO19107::TP_Object) 


 Temporal Object (ISO19108::TM_Object) 


 Geographic Identifier (ISO19112::SI_LocationInstance) 


 Data Quality Information (ISO19115::DQ_Element) (see note 1 below) 


 Metadata (ISO19115::MD_Metadata) (see note 2 below) 


Note 1: The modelling of data quality information or meta-information in the form of attribute types as 
further specified in ISO 19115 is just one possibility for a meta-information model and the specification 
of meta-information in the context of an OAS. ORCHESTRA does support further types of meta-
information models depending on the particular purpose of the usage of the meta-information (see sec-
tion 8.4.1). 


Note 2: The OMM does not specify meta-information attributes as a prominent high-level attribute 
type category. Instead, the modelling of meta-information attribute types 
(OMM_MetaInfoAttributeTypes) as a meta-class that specialises the meta-class 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


80/180 


OMM_ThematicAttributeType means that a thematic attribute may use type definitions of ISO 19115 as 
data type values. See also Rule 1 in section 8.8.11 


The resulting schema is illustrated in UML in Figure 23. 


 


Figure 23: OMM Attribute types  


8.7.5 OMM Extensions to Feature Types 


8.7.5.1 Overview 


As will be defined in the rules below (see section 8.8), an ORCHESTRA Feature Type is defined by a 
UML class that is part of an OAS as an instance of the OMM meta-class ―feature type‖. Within an OAS, 
it has a stereotype ―FeatureType‖. 


Feature types are defined by an information modeller or, in some specific cases, on-the-fly by a 
software component of an ORCHESTRA Application as part of an OAS and represent ―abstractions of 
real-world phenomena perceived in the context of an ORCHESTRA Application‖. 


Based on the requirements of thematic domains, the OMM extends the OMM_FeatureType definition 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


81/180 


for additional categories of information types. As a result of an analysis of the requirements of the risk 
management thematic domain that took place in the ORCHESTRA project, the following eminent but 
generic information types have been identified: 


 Document Descriptor type (see section 8.7.5.2) 


 Coverage type (see section 0) 


Note: By intention, this list of predefined feature types is kept very restrictive in order not to move 
too much domain-specific information into the meta-model and thus to endanger reusability in different 
application domains. 


8.7.5.2 Document Descriptor Type 


Documents are resources that contain recorded information and can be treated as unit. As pre-defined 
ORCHESTRA feature type, a document is represented by a document descriptor that contains identifi-
cation information (such as name and document type) and a reference to one of more files (the docu-
ment store) if the document data is stored locally or a reference to a source system if the document 
data is stored remotely. 


An instance of OA_ThematicAttributeType may represent an attribute that carries document informa-
tion. The value-types of document attributes shall comply with the definition of an 
OA_DocumentDescriptor as defined below. 


 


 


Figure 24: Schema of the OMM extension “Document Type” 


Document types may be classified according to the MIME Media Types and include e.g. 


 Documents with page layout (e.g. PDF, MS-Word, MS-PowerPoint files, Web pages based on 
html) 


 Audio files 


 Video files 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


82/180 


 Image files 


 XML documents 


 tabular data in file format (e.g. an MS-Excel file) 


The document schema used in ORCHESTRA is specified in Figure 24. 


8.7.5.3 Coverage Type 


A coverage denotes a function from a spatial, temporal or spatiotemporal domain to an attribute range. 
A coverage associates a position within its domain to a record of values of defined data types. Thus, a 
coverage is a feature with multiple values for each attribute type, where each direct position within the 
geometric representation of the feature has a single value for each attribute type. Examples include a 
raster image, polygon overlay, or digital elevation matrix.  


The coverage model is defined by ISO 19123. 


The domain of a coverage is a set of geometric objects described in terms of direct positions, which are 
associated with a spatial or temporal coordinate reference system. Commonly used domains include 
point sets, grids, collections of closed rectangles, and other collections of geometric objects. The range 
of a coverage is a finite or a transfinite set of feature attribute values. 


Coverages can be discrete or continuous. A discrete coverage has a domain that consists of a finite 
collection of geometric objects and the direct positions contained in those geometric objects. A discrete 
coverage maps each geometric object to a single record of feature attribute values. A continuous cov-
erage has a domain that consists of a set of direct positions in a coordinate space, which it maps to 
value records. It then returns a distinct record of feature attribute values for any direct position within its 
domain. 


Note:  The term coverage may be misleading as it implicitly refers to a 2-dimensional data layer. 
The term field would be better as it refers to n-dimensional data. However, the term coverage is used in 
order to conform with ISO 19123. 


  


 


Figure 25: Schema of the OMM Extension “Coverage Type” 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


83/180 


8.8 Rules for ORCHESTRA Application Schemas 


8.8.1 General Approach 


The modelling process for OAS on the platform-neutral level corresponds to the description in ISO 
19109, section 8.1. This approach allows automatic derivation of platform-specific application schemas 
(e.g. GML Application Schemas according to ISO 19136 ) from the conceptual application schemas in a 
normative way. GML Application Schemas can be used to encode ORCHESTRA feature instances in 
XML. GML is tightly integrated with most OGC Web Service specifications, e.g. the Web Feature Ser-
vice. In addition, mapping to other platforms is possible from the conceptual UML model. 


Note: The relationship to the rules for application schemas as specified in ISO 19109, section 8, 
(conformance, changes and/or extensions) is explicitly indicated in respective notes. 


Rules: 


 
1) The data structures of the application shall be modelled in the OAS.  
 


Note: Rule conforming to ISO 19109, section 8.2.2, rule 1). 
 


2) An abstract specification of an OAS shall use UML 2.0 as its conceptual schema language fol-
lowing the rules of ISO/TS 19103 and ISO 19109. It shall be documented using class diagrams. 


 
Note: ISO/TS 19103. Geographic information - Conceptual schema language is still based 
on UML 1.3. A potential conflict will have to be resolved in dedicated rules. 
 


3) An OAS shall use the UML extensibility mechanisms ―stereotypes‖ and ―tagged values‖ as de-
scribed in annex D.8 of ISO/TS 19103. 


 
Note 1: A stereotype is a model element that is used to classify (or mark) other UML ele-
ments so that they in some respect behave as if they were instances of new virtual or pseudo 
meta-model classes whose form is based on existing base meta-model classes. Stereotypes 
augment the classification mechanisms on the basis of the built-in UML meta-model class hier-
archy. Therefore, names of new stereotypes must not clash with predefined meta-model ele-
ments or other stereotypes. See section 8.8.6 for the rules how to use stereotypes in an OAS. 


 
Note 2: A tagged value is a tag-value pair that can be used to add properties to any model 
element in UML, i.e. it can extend an arbitrary existing element in the UML meta-model or extend 
a stereotype. 


8.8.2 Rules for the Identification of an OAS 


Rules: 


1) The identification of each application schema shall include a name and a version. The inclusion 
of a version ensures that a supplier and a user agree on which version of the application schema 
describes the contents of a particular dataset. 


Note 1:  This rule conforms to ISO 19109, section 8.2.3, rule 2). 


Note 2: The agreement between supplier and user also covers the case where there is no 
explicit bilateral agreement, but where the user is able to discover and understand which ver-
sion(s) of an application schema are supported by the supplier. 


Note 3: It is recommended that the name of an OAS be globally unique (e.g. an URI) in order 
to enable unambiguous re-use of its elements in other OAS. 


2) In UML, an application schema shall be described within a PACKAGE, which shall be stereo-
typed with <<Application Schema>> and shall contain the tagged value ―OAS‖ carrying the name 
of the application schema and the tagged value ―version‖ carrying the version stated in the 
documentation of the PACKAGE.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


84/180 


Note 1:  This rule extends ISO 19109, section 8.2.3, rule 1). 


Note 2: An OAS may consist of several hierarchically ordered packages. In this case, the 
OAS name corresponds to the name of the top-level package. 


8.8.3 Rules for the Documentation of an OAS 


Rules: 


 
1) An OAS shall be documented. 


 
Note:   This rule conforms to ISO 19109, section 8.2.4, rule 1). 


 
2) The documentation of an OAS shall include a reference to the version of the RM-OA that has 


been used by setting the tagged value ―RM-OA‖ to the version number of the RM-OA document. 
 


3) The documentation of an OAS in UML may utilise the documentation facilities of the software 
tool that is used to create the application schema, if this information can be exported. 


 
Note:   This rule conforms to ISO 19109, section 8.2.4, rule 2).  


 
4) Documentation of the elements in the UML model shall be stored in tagged values ―documenta-


tion‖. 
 


5) If a CLASS or other UML component corresponds to information in a feature catalogue, the ref-
erence to the catalogue shall be documented. 


 
Note:  This rule conforms to ISO 19109, section 8.2.4, rule 3). 


 
6) Documentation of feature types in an OAS shall be in a catalogue with a structure derived from 


OMM, for instance in a catalogue in accordance with ISO 19110 
 


Note:  This rule conforms to ISO 19109, section 8.2.4, rule 4). 


8.8.4 Rule for the Integration of an OAS and other Schemas 


Rules: 


1) An OAS can be built up of several other application schemas. Each of these schemas can refer 
to standardised schemas. This organisation can be used to avoid the creation of large and com-
plex schemas (see ISO 19109, section 8.2.6). 


2) The dependency mechanism in UML shall be used to describe the integration of the OAS with 
other application schemas or other standard schemas that are required to form the complete 
definition of the data structure. 


Note:  This rule is derived from ISO 19109, section 8.2.5, rule 1). 


8.8.5 Rules for the Usage of Types in an OAS 


Rules: 


1) Basic Data Types as specified in section 8.7.2.2 and OA_Types as specified in section 8.7.2.3 
shall be used where applicable. 


2) Types defined in OA Services (see section 9.3.2) shall be prefixed by OA_. 


Note: An example is the OA_GetCapabilitiesRequest type defined in the ServiceCapabili-
ties interface type (see section 9.6.1). 


3) Types defined in OT Services (see section 9.3.3) shall be prefixed by OT_. 


4) An OAS designer is not enjoined to use prefixes for the specification of user-defined types (e.g. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


85/180 


in an OAS), however, OA_ and OT_ are excluded. 


8.8.6 Rules for the Usage of Stereotypes in an OAS 


Rules: 


1) Every class in an application schema must be stereotyped. The stereotype used must be defined 
either in the standard UML or the stereotypes defined within the OMM. If the stereotype has a 
name common to the names of those stereotypes already specified, the definition (meaning) has 
to be the same.  


 
Note: This facilitates the understanding of OAS and supports application development, 
e.g., to help decide whether a class is a feature type or not. 
 


2) Data types shall be modelled as UML classes with the stereotype <<DataType>>. 
 


Note: According to ISO/TS 19103 a <<DataType>> is a descriptor of a set of values that 
lack identity (independent existence and the possibility of side effects). The primary purpose of a 
DataType is thus to hold the abstract state of another class (e.g. a class representing a feature 
type) for transmittal, storage, encoding or persistent storage. An example in the OMM is the ag-
gregation of operation request parameters in one class (see section 9.2.8). 
 


3) Types shall be modelled as UML classes with the stereotype <<Type>>. 
 


Note 1: According to ISO/TS 19103, a <<Type>> is a stereotyped class used for specifica-
tion of a domain of instances (objects), together with the operations applicable to the objects. A 
type may have attributes and associations. 
 
Note 2: For the definition of the types and their classification see section 8.8.5. 
 


4) Enumerations shall be modelled as UML classes with the stereotype <<Enumeration>>. 
 


Note: See section 8.8.5 for the definition of an enumeration as a basic type in an OAS. 
 
5) Code lists shall be modelled as UML classes with stereotype <<CodeList>>. 


 
Note 1: According to ISO/TS 19103, a code list can be used to describe an open enumera-
tion (see rule 4 above). This means that it needs to be represented in such a way that it can be 
extended during system runtime. 
 
Note 2: See section 8.8.5 for the definition of an enumeration as basic type in an OAS. 


 
6) Interfaces shall be modelled as UML classes with stereotype<<Interface>>. 


 
Note: See the corresponding rule of the OMM-Service in section 9.2.6. 


 


8.8.7 Rules for the Specification of an OAS 


Rules: 
 


1) All classes used within an OAS for data transfer shall be instantiable. This implies that the inte-
grated class must not be stereotyped <<interface>>. 
 
Note:  This rule conforms to ISO 19109, section 8.2.2, rule 2). 


 
2) All package names used within an OAS shall be unique. 
 
3) Dependencies between packages must be modelled explicitly. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


86/180 


4) If a class is a specialization of another class, then this class shall have one of the stereotypes 
<<FeatureType>>, <<DataType>>, or <<Type>>. The class shall have zero or one supertype 
with the same stereotype and zero or more abstract supertypes of the stereotype <<Type>>. 


That is, disregarding abstract classes with stereotype <<Type>>, a generalization relationship 
may be specified only between two classes that are either: 


- both feature types (stereotype <<FeatureType>>), 
- both types with stereotype <<Type>>, or 
- both data types (stereotype <<DataType>>). 


For every abstract class <<Type>> all direct or indirect subtypes must be either 
- all classes with stereotypes <<FeatureType>>, <<Type>>, or 
- all classes with stereotypes <<DataType>> or <<Type>>, where all <<Type>> classes 


have to be abstract. 
 


All generalization relationships between classes shall have no stereotype. All generalization 
relationships with other stereotypes will be ignored. The discriminator property of the UML 
generalization shall be blank. 


 
5) OMM_FeatureType: An instance of OMM_FeatureType shall be implemented as a CLASS 


stereotyped with <<FeatureType>> except for Rule 6 (see OMM_AssociationType below). 
 


Note:  This rule extends ISO 19109, section 8.3.1, rule 1). 
 
6) OMM_AssociationType: An instance of OMM_AssociationType shall not be associated with any 


instances of OMM_PropertyType. It has the role of linkBetween in associations to those 
instances of OMM_FeatureType that are being implemented as CLASSes. 


 
Note 1:  This rule conforms to but restricts ISO 19109, section 8.3.1, rule 2).  
 
Note 2: This rule means that attributed associations between feature types  (i.e. associations 
with own properties) are not supported. 


 
7) OMM_AggregationType: An instance of OMM_AggregationType shall either be implemented as 


an AGGREGATION (empty diamond) or it shall be implemented as a COMPOSITION (filled 
diamond). Members of an aggregation can exist independently of the aggregate, and may be-
long to other aggregates. Members of a composite may not exist independently and may belong 
to only one composite. 
 
Note:  This rule conforms to ISO 19109, section 8.3.1, rule 3).  


 
8) OMM_AttributeType: An instance of OMM_AttributeType shall be implemented as an 


ATTRIBUTE, unless it is an attribute of an attribute (see rule 5) 
 


Note:  This rule conforms to ISO 19109, section 8.3.1, rule 4).  
 
9) attributeOfAttribute: An instance of OMM_AttributeType that acts in the role characterizedBy in 


an attributeOfAttribute association shall be instantiated as a class with a valid stereotype for 
classes (e.g., <<FeatureType>>). That class shall be used either as the data type of the 
OMM_AttributeType, or in an association with the class that contains the OMM_AttributeType.  
Attributes that act in the role characterizes shall be instantiated as attributes of the class that 
represents the attribute that acts in the role characterizedBy. 
 
Note 1:  This rule extends ISO 19109, section 8.3.1, rule 5). 
 
Note 2:  This means that a class stereotyped as <<FeatureType>> may be used as a data 
type of an attribute in a class definition 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


87/180 


10) OMM_Operation: An instance of OMM_Operation shall be implemented as an OPERATION of 
the class representing the feature type that it characterizes, which shall have ASSOCIATIONS to 
other CLASSES from which the operation needs ATTRIBUTE VALUES. 


 
Note 1:  This rule conforms to ISO 19109, section 8.3.1, rule 6). 
 
Note 2:  The relationship between an operation specified in a feature type and operations 
specified in interface types (i.e. the link to the OMM-Service meta-classes) will be investigated in 
a future version of the RM-OA. 


 
11) OMM_AssociationRole: An instance of OMM_AssociationRole shall be implemented as a role 


name at the appropriate end of the ASSOCIATION representing the OMM_AssociationType.  
 


Note: Rule conforming to ISO 19109, section 8.3.1, rule 7). 
 
12) OMM_InheritanceRelation: An instance of OMM_InheritanceRelation shall be represented by a 


UML GENERALIZATION relationship, with the following additional characteristics: If uniqueIn-
stance is .TRUE., the {disjoint} constraint shall be attached to the generalization relationship.  
 
Note:  This rule is derived from ISO 19109, section 8.3.1, rule 8). 


 
13) OMM_Constraint: Constraints may be stated in OCL or in plain language and attached to the 


CLASS, OPERATION or RELATIONSHIP that is constrained. A formal specification of con-
straints is required when automatic processing is intended. 


 
Note:  This rule extends ISO 19109, section 8.3.1, rule 9). 


8.8.8 Rules for Adding Information to a Standard Schema 


Rule: 


1) If it is necessary to extend or restrict a CLASS specified in a standard schema, a new CLASS 
shall be defined as a SUBTYPE of the CLASS in the standard schema, and ATTRIBUTEs shall 
be added to this CLASS to carry the additional information. 


Note 1:   This rule conforms to ISO 19109, section 8.4.2, rule 1). 


Note 2:  For practical reasons the new classes may be collected in a separate PACKAGE. 


8.8.9 Rules for restricted Use of Standard Schemas 


Rules: 


1) Specification of a restricted profile of a standard schema shall be described in a new UML pack-
age by copying the actual definitions (classes and relationships) from the standard schema. At-
tributes and operations within classes may be omitted. 


Note: This rule conforms to ISO 19109, section 8.4.3, rule 1). 


2) Reduction of a standard schema shall be in accordance of the conformance clause given for the 
actual standard. 


Note 1:  This rule conforms to ISO 19109, section 8.4.3, rule 2). 


Note 2:  The specifications of OMM extension types (see section 8.7.5) are handled like 
standard schemas. The rules to be considered for a possible reduction are specified in section 
8.8.15. 


8.8.10 Rules for Adding Information to an OAS 


Rule: 


1) If it is necessary to extend a CLASS specified in an OAS, a new CLASS shall be defined as a 
SUBTYPE of the CLASS in the standard schema, and ATTRIBUTEs shall be added to this 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


88/180 


CLASS to carry the additional information.  


8.8.11 Rules for Thematic Attributes 


Rule: 


1) A thematic attribute may reuse definitions from a package in the ISO 19115 without being con-
sidered as meta-information in the application schema.  


Note:  This rule conforms to the RM-OA approach to handle meta-information (see section 
8.4.1). Whether an attribute is to be considered as meta-information cannot be decided at design 
time. 


8.8.12 Rules for Temporal Attributes 


Rules: 


1) If a common representation of time across systems is required then it is recommended that any 
description of temporal aspects be in accordance with the specifications given by ISO 19108. 


Note:  This recommendation is still to be validated in the course of the ORCHESTRA specifica-
tion and implementation process, in particular w.r.t. to the usage of the basic data types ―date‖ 
and ―time‖ as specified in section 8.7.2.2. 


2) The usage of temporal attributes according to ISO 19108 in an OAS shall comply with the speci-
fications and rules of ISO 19109, section 8.6, if not otherwise specified in the RM-OA. 


Note:  This recommendation is still to be validated in the course of the ORCHESTRA speci-
fication and implementation process, in particular in the handling of time-series by the Map and 
Diagram Service (see section 9.7.2). 


8.8.13 Rules for Spatial Attributes 


Rules: 


1) The value domain of spatial attribute types shall be in accordance with the specifications given 
by ISO 19107, which provides conceptual schemas for describing the spatial characteristics of 
features and a set of spatial operators consistent with these schemas. ISO 19125-1 is a profile of 
19107 that is widely adopted (see the OGC simple feature specification). If in the process of 
specifying an OAS there is no explicit need to use other data types than those specified in ISO 
19125-1, then ISO 19125-1 shall be used. 


Note:  This rule extends ISO 19109, section 8.7, rule 1).  


2) The usage of spatial attributes according to ISO 19107 and ISO 19125-1 in an OAS shall comply 
with the specifications and rules of ISO 19109, section 8.7, if not specified otherwise in the RM-
OA. 


8.8.14 Rules for Spatial Referencing using Geographic Identifiers 


Rules: 


1) The value domain of attributes using spatial referencing by geographic identifiers shall be in ac-
cordance with the specifications given in ISO 19112. 


Note:  This rule conforms to ISO 19109, section 8.9, rule 1).  


2) The usage of attributes using spatial referencing by geographic identifiers according to ISO 
19112 in an OAS shall comply with the specifications and rules of ISO 19109, section 8.9, if not 
specified otherwise in the RM-OA. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


89/180 


8.8.15 Rules for Information Types extending the OMM 


8.8.15.1 Feature Types vs. Attribute Types 


Depending on the semantics, a particular piece of information may be considered either a feature (type) 
or a value of an attribute (type). When modelling, it is often a judgement call whether to model a particu-
lar type one way or the other.  


As a general rule, a feature type will be used if the concept is of particular importance for the applica-
tion, has an identity of its own and can be considered to be an "abstraction of a real world phenome-
non."  


On the other hand, a concept will be modelled as a data type of an attribute if the concept does not 
have an identity on its own (i.e. it is just a structured attribute) or if it is just an auxiliary concept and will 
only be used in the context of a feature (e.g. a geometry or topology object). 


 


8.8.15.2 Rules for Coverages 


Coverages are considered in the OMM as instances of ORCHESTRA feature types, see section 
8.7.5.2. Their schema is defined in ISO 19123. 


Rules: 


1) Any description of coverage information shall be in accordance with the specifications given by 
ISO 19123. 


2) A coverage type shall be defined as a coverage feature type which is the appropriate, most spe-
cialized type defined in ISO 19123 listed in rule 5 or a subtype of this type. 


3) The implementation of a coverage type in UML shall follow the rules (see ISO 19109 8.2.5) for 
referencing standardised schemas (see RM-OA, section 8.8.4, rule 2). 


4) A coverage type shall be represented in an application schema as a UML CLASS that repre-
sents a feature (see RM-OA, section 9.2.5.2) and which is derived directly or indirectly from one 
of the UML classes from rule 5. 


5) Valid coverage feature types which shall be applied are:: 


- Discrete coverages (CV_DiscreteCoverage) 


- Discrete point coverage (CV_DiscretePointCoverage) 


- Discrete grid point coverage (CV_DiscreteGridPointCoverage) 


- Discrete curve coverage (CV_DiscreteCurveCoverage) 


- Discrete surface coverage (CV_DiscreteSurfaceCoverage) 


- Discrete solid coverage (CV_DiscreteSolidCoverage) 


- Continuous coverages (CV_ContinuousCoverage) 


- Thiessen polygon coverage (CV_ThiessenPolygonCoverage) 


- Hexagonal grid coverage (CV_HexagonalGridCoverage) 


- TIN coverage (CV_TINCoverage) 


- Segmented curve coverage (CV_SegmentedCurveCoverage) 


- Continuous quadrilateral grid coverage (CV_ContinuousQuadrilateralGridCoverage) 


Note:  Whether all of these coverage types are required for most of the applications of the 
RM-OA or if they may be restricted is yet to be determined. 


8.8.15.3 Rules for Documents 


Documents are considered in the OMM as instances of ORCHESTRA feature types. Their schema is 
defined in section 8.7.5.2. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


90/180 


Rules: 


1) A document type shall be represented in an OAS as an attribute (an instance of 
OMM_ThematicAttributeType) of a UML CLASS that represents the feature, in which case the 
attribute shall take OA_DocumentDescriptor as defined in section 8.7.5.2 and Figure 24 or a 
subtype as the data type for its value. 


8.9 A Simple Example 


An extremely simplified model of an earthquake feature type is illustrated in Figure 26. In terms of the 
OMM, the feature type "XE_Earthquake" has the following own properties: 


 an optional thematic attribute type with the name "magnitude", the value is a numeric value be-
tween 0 and 10 (Richter scale); 


 an optional feature association role with the name "officialReport" to a document feature 
type(see section 8.7.5.2). 


Furthermore, by means of multiple inheritance according to the rules specified in section 8.8.7, the 
XE_Earthquake class inherits the following properties: 


 from the feature type ―Hazard‖: a spatial property type with the name "location", the value type is 
a spatial point (see ISO 19107). 


 from the feature type ―Hazard‖: a temporal property type with the name "occurredAt", the value 
type is a temporal instant (see ISO 19108). 


 from the type ―ObjectWithMetadata‖: an optional meta-information property type with the name 
―metadata‖; the value type is a metadata entity (see ISO 19115). 


 
 
cd OAS Example


«FeatureType»


XE_Earthquake


+ magnitude:  Real [0..1]


 


{magnitude > 0 and 


 


magnitude < 10}


«FeatureType»


OA Types::OA_DocumentDescriptor


+ name:  OA_GenericName [0..1]


+ description:  CharacterString [0..1]


+ mimeType:  OA_MimeType


+ resourceLocator:  OA_ResourceLocator


+ getMimeType() : OA_MimeType


+ getResourceLocator() : OA_ResourceLocator


«Type»


ObjectWithMetadata


+ metadata:  MD_Metadata [0..1]


«FeatureType»


Hazard


+ location:  GM_Point


+ occuredAt:  TM_Instant


+officialReport


0..1


 


 Figure 26: Earthquake example 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


91/180 


9 Service Viewpoint 


9.1 Overview 


The Service Viewpoint of the RM-OA specifies the specification framework for ORCHESTRA Services. 
This specification framework is provided by the definition of a Service Meta-Model as given in section 
9.2.  


Furthermore, the Service Viewpoint of the RM-OA provides abstract specifications for the generic 
ORCHESTRA Services that support the syntactic and semantic interoperability between ORCHESTRA 
Source Systems and between services and the development of ORCHESTRA Applications. This in-
cludes the management of an OSN as one particular application. 


In combination with the specification of the ORCHESTRA Information Viewpoint, this specification pro-
vides the ORCHESTRA Architecture. According to RM-OA principles, the abstract description of 
ORCHESTRA Services and the abstract specification of their interfaces include all properties of the 
services that may be specified in a platform-neutral way. Their mapping to specific service platforms 
(e.g. a W3C Web Services environment) is outside the scope of the RM-OA and is specified in 
ORCHESTRA Implementation Specifications. 


Section 9.2 provides a Service Meta-model (OMM-Service) as a complementary part of the OMM In-
formation Meta-model (OMM-Information). 


ORCHESTRA Services are functionally classified in section 9.3 


The RM-OA specifies the ORCHESTRA Services and their interfaces in two different ways: 


 A coarse abstract service description is given for each service in human-readable text format by 
using a service description framework, see section 9.4. 


 A refined abstract specification of the interfaces to be realised by the services is given in 
(ORCH-AbstrServ 2007) by using UML as the conceptual schema language. 


Note:  Whereas the OMM-Information is an evolution of the General Feature Model (GFM) of ISO 
19109 (see section 8.3), the ISO counterpart for the OMM-Service would be the UML model supplied in 
section 7.2 of ISO 19119 which is, however, not directly related to the GFM. Furthermore, it does not 
cover the problem of abstract and implementation specification of services. The meta-model approach of 
ORCHESTRA aims at a harmonised approach for both the information and the service viewpoint with 
direct interdependencies and rules about how to handle the problem of platform-neutral and platform-
specific service specifications and the mapping between them. A need for such an approach has recently 
been expressed by the Object Management Group (OMG) in their Request For Proposal 
for a ―Software Services Profile and Metamodel‖ (OMG 2006). 


9.2 The ORCHESTRA Meta-Model for Services 


9.2.1 Overview 


An ORCHESTRA Service is a service specified according to the rules of the ORCHESTRA Reference 
Model in an ORCHESTRA Service Specification. As with the Information Viewpoint of the RM-OA, 
these rules are provided by means of a Service Meta-Model as further part of the ORCHESTRA Meta-
Model (OMM).  


In the Information Viewpoint, the OMM has been defined as the common specification framework for all 
feature-based application schemas used within ORCHESTRA. It provides a meta-model and a set of 
associated rules that control the specification of an OAS. This part of the OMM is called OMM-
Information in the following. For the Service Viewpoint the schema level is extended by the concept of 
ORCHESTRA Service Types. The corresponding rules for their specification are defined in a respective 
extension of the OMM called OMM-Service in the following. 


The framework for ORCHESTRA Services is illustrated in Figure 27. It distinguishes between 


 the ORCHESTRA Meta-Model (OMM) on the meta-model level, 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


92/180 


 ORCHESTRA Service Specifications on the schema level, 


 ORCHESTRA Services on the service level and 


 the functionality provided by source systems on the source system level. 


 


 


Figure 27: Framework for ORCHESTRA Services 


ORCHESTRA Service Types are specified by defining their externally visible behaviour accessible 
through their service interfaces (see section 9.2.2.3). The service interfaces, including their information 
models, are expressed using the conceptual schema language UML in the first step (abstract specifica-
tion), and then mapped to a chosen platform in a second step (implementation specification). 


On the schema level, meta-information models are associated to ORCHESTRA Service Types in so-
called OAS-MI for Services according to the rules of the Information Viewpoint (OMM-Information) 
specified in section 8.7. These OAS-MI deliver the schema for the meta-information that is associated 
with service types in order to serve the various purposes (e.g. discovery of services) as outlined in sec-
tion 8.4.2.  


The service level is built by the set of ORCHESTRA Services and the meta-information base as the 
logical aggregation of the meta-information that describes the ORCHESTRA Services according to the 
various purposes. The meta-information base is structured according to the OAS-MI specified on the 
schema level. ORCHESTRA Services are instances of ORCHESTRA Service Types and have two dif-
ferent appearances:  


 as ORCHESTRA Service Components (OSC) when referring to the software component that 
implements the interfaces defined for the ORCHESTRA Service Types on the schema level, and 


 as ORCHESTRA Service Instances (OSI) when referring to deployed and running instances of 
OSCs in an OSN. 


In the Service Viewpoint, the source system level consists of the set of source systems whose function-
ality is to be integrated into an OSN. For this purpose, source system-specific service types have to be 
specified by the system integrator and instantiated as OSIs such that the functions of the source sys-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


93/180 


tems may be offered to ORCHESTRA Applications in an ORCHESTRA-compliant way. Note that there 
is no generic ORCHESTRA Service Type defined for this integration. Instead, the interface types as de-
fined in the RM-OA may be re-used. For a discussion about this integration process, see section 9.10.2. 


Furthermore, in order to fill the meta-information bases on the service level, descriptive information 
about the source systems‘ functionality is extracted (manually or semi-automatically) from the source 
systems. 


Note: RM-OA version 3 will extend the framework for ORCHESTRA Services by the inclusion of 
the semantic level.  


9.2.2 Service Types 


9.2.2.1 Overview 


According to ISO 19119, a service is defined as a distinct part of the functionality that is provided by an 
entity through interfaces. If such a service has been being defined according to the rules of the 
ORCHESTRA Reference Model, it is called ORCHESTRA Service. However, the design and internal 
behaviour of such entities is outside the scope of the ORCHESTRA Architecture. They are conceived 
and identified by a designer of an OSN and are called  


 ORCHESTRA Service Component when referring to the software component and  


 ORCHESTRA Service Instance when referring to an instance in an OSN that has been de-
ployed by a service provider with a dedicated identifier (see section 11.1.2), and whose opera-
tions may be called by a service consumer. 


Principally, the ORCHESTRA Architecture just deals with types of ORCHESTRA Services. 
ORCHESTRA Service Types (short: service types) are described on a platform-neutral level in abstract 
service descriptions which refer to specifications of the interfaces that together provide the externally 
visible behaviour of the service type. In the ideal case, through a service mapping process, such a ser-
vice type is mapping to respective implementation specifications for one or more given platforms. When 
implemented they result in ORCHESTRA Service Components and are later deployed as 
ORCHESTRA Service Instances in ORCHESTRA Service Networks.  


Note, however, that for convenience and readability reasons the RM-OA only distinguishes between 
ORCHESTRA Service Types, ORCHESTRA Service Components and ORCHESTRA Service In-
stances when only one is meant. Otherwise, the more general term ORCHESTRA Service is used. 


The conceptual schema for the specification of an ORCHESTRA Service Type is provided in the sub-
sequent sections and illustrated in Figure 28. The main ideas are as follows: 


 There is a 1:1 relationship between the abstract description of an ORCHESTRA Service Type 
and an ORCHESTRA Service Type. This means that each abstract service description exactly 
specifies one service type and vice versa.  


 There is a 1:n relationship between an ORCHESTRA Service Type and an implementation 
specification of an ORCHESTRA Service Type. This means that each implementation specifi-
cation of an ORCHESTRA Service exactly specifies one service type, and, for each service 
type there may be one or more corresponding implementation specifications.  


 As a consequence, there is a common list of ORCHESTRA Service Types for platform-neutral 
and platform-specific specifications. 


9.2.2.2 Platform Properties 


As a general guideline, the platform shall be conformant to the OASIS Reference Model for Service 
Oriented Architecture 1.0 (SOA-RM, 2006). Thus, when referring in the RM-OA to characteristics of the 
service platform, the following terms of (SOA-RM, 2006) are used. Note that they are only pre-fixed with 
SOA-RM in order to distinguish them from RM-OA terms: 


 SOA-RM Service: The means by which the needs of a consumer are brought together with the 
capabilities of a provider. 


 SOA-RM Capability: A real-world effect that a service provider is able to provide to a service 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


94/180 


consumer. 


 SOA-RM Action model: The characterization of the permissible actions that may be invoked 
against a service.  


Note: Interacting with a service involves performing transactions with the service.  Usually 
this is accomplished by sending and receiving messages. 


 SOA-RM Service Interface: The means by which the underlying capabilities of a service are ac-
cessed. 


 SOA-RM Information Model: The characterization of the information that is associated with the 
use of a service. Only information and data that are potentially exchanged with a service are 
generally included within that service's information model. The scope of the information model 
includes the format of information that is exchanged, the structural relationships with the ex-
changed information and also the definition of terms used. 


 SOA-RM Execution Context: The set of technical and business elements that form a path be-
tween those with needs and those with capabilities and that permit service providers and con-
sumers to interact. 


9.2.2.3 OMM_ServiceType 


The conceptual schema for the specification of ORCHESTRA Service Types is illustrated in Figure 28 
(see meta-class OMM_ServiceType). The structural refinement of service types in terms of interface 
types is given in Figure 29 (see meta-class OMM_InterfaceType).  


An ORCHESTRA Service Type is modelled by the meta-class OMM_ServiceType with the following 
properties: 


 name: Provides the name of the service type. This name shall indicate the intended behaviour 
of the service type and may be used in the identification of a service type by a human user. 


 abstractDesc: Association role providing a reference to the abstract description of the service 
type (see OMM_ServiceAbstractDesc).  


 implSpec: Association role providing the list of references to service implementation specifica-
tions (see OMM_ServiceImplSpec). A reference is provided through the name of the corre-
sponding implementation specification of the service type. 


 ifName: Association role providing the list of interface types (see OMM_InterfaceType) that are 
supported by the service type. Interface types may be optional, i.e. all their operations are con-
sidered to be marked as <<optional>> (see section 9.2.4.3 about the meaning of optional op-
erations). 


OA_ServiceType is an instance of the meta-class OMM_ServiceType. Rules for ORCHESTRA Service 
Types are provided in section 9.2.5.2. 


The functional classification of ORCHESTRA Service Types is described in section 9.3  


9.2.3 Structure of the ORCHESTRA Service Specification Process 


The structure of the specification process for ORCHESTRA Services is illustrated by the conceptual 
models specified in UML in Figure 28. According to the ORCHESTRA Reference Model as described in 
section 5.3, ORCHESTRA Service Types are specified on a platform-neutral and on a platform-specific 
level.  


The abstract specification level is represented by the meta-classes OMM_ServiceAbstractDesc and 
OMM_InterfaceAbstractSpec whereas the platform level is represented by the meta-classes 
OMM_ServiceImplSpec, OMM_ServiceMappingSpec and OMM_PlatformSpec. 


9.2.3.1 OMM_ServiceAbstractDesc 


OMM_ServiceAbstractDesc represents an abstract description of an ORCHESTRA Service Type that is 
platform-neutral (i.e. independent of a particular service platform) and may thus be mapped to several 
service platforms. It provides a summary description of the functionality that the service type offers to a 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


95/180 


calling client through its external interface. This description may be provided in different forms but in 
most cases comprises a human-readable text. An example for such a description is the service descrip-
tion framework used in the RM-OA, see section 9.4. However, the abstract description of a service is 
also considered to be meta-information about the service type. Thus, respective OAS-MI or parts of it 
may also be used as abstract service descriptions. See Annex A3 of the RM-OA for examples.  


OMM_ServiceAbstractDesc has the following properties: 


 serviceType: Association role providing the name of the service type that is being described.  


 description: Description of the purpose and functionality provided by the service type.. 


 ifSpec: Association role providing the list of abstract specifications of the interfaces 
(OMM_InterfaceAbstractSpec) that are supported by the service type that is described in the 
abstract description.  


9.2.3.2 OMM_InterfaceAbstractSpec 


OMM_InterfaceAbstractSpec represents an abstract specification of an interface type that is platform-
neutral (i.e. independent of a particular service platform). It comprises a collection of operations that to-
gether provide a self-contained set of functionality in the sense that its granularity is eligible to be re-
usable by other service types. 


OMM_InterfaceAbstractSpec has the following properties: 


 ifName: Association role providing the name of the interface type that is being specified.  


 spec: Specification of the purpose and functionality of the interface type. 


9.2.3.3 OMM_ServiceImplSpec 


OMM_ServiceImplSpec represents an implementation specification of an ORCHESTRA Service that is 
specified according to the rules of a particular service platform. 


 name: Name of  the implementation specification of the service type. 


 actionModel: Specification of the permissible actions against the service type, i.e. the SOA-RM 
Action Model of the service type. 


 abstractDesc: Association role providing the reference to the abstract service description upon 
which the implementation specification is based (see OMM_ServiceAbstractDesc). 


 platformSpec: Association role providing the specification of the (service) platform for which the 
implementation specification is valid (see OMM_PlatformSpec). 


 mappingSpec: Association role providing the reference to the specification of the service map-
ping that links the SOA-RM Action Model of the implementation specification to the operations 
of the abstract service interfaces (see OMM_ServiceMappingSpec). Such a mapping specifica-
tion is a mandatory part of the implementation specification of a service. 


As the ORCHESTRA Architecture provides the platform-neutral view, the OMM-Service only provides 
detailed rules for the abstract descriptions and interface specifications of ORCHESTRA Services (see 
sections 9.2.5.3 and 9.2.6). However, some general rules for implementation service specifications are 
given in section 9.2.11. 


9.2.3.4 OMM_ServiceMappingSpec 


When purely applying the architectural process of ORCHESTRA, there is a service mapping process 
between an abstract description and an implementation specification of an ORCHESTRA Service. This 
process is modelled by the meta-class OMM_ServiceMappingSpec with the properties: 


 spec: Specification of how to map from the abstract level to the platform.  


The service mapping process shall be carried out according to the rules given in section 9.2.9. Note 
that one abstract description of an ORCHESTRA Service Type may be mapped to several implementa-
tion specifications because 


 implementation specifications are platform-specific, i.e. for each platform there is a dedicated 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


96/180 


implementation specification of service types, or 


 the service mapping rules allow the specification of functional subsets or different concretisa-
tions of service types even for one platform. 


The service mapping process also determines if an operation that is specified for a particular service 
type is to be called in a synchronous or in an asynchronous interaction. This is handled as part of the 
rules specified in section 9.2.9. 


 


 


Figure 28: Specification Process for ORCHESTRA Services 


9.2.3.5 OMM_PlatformSpec 


The two-step mapping approach from the abstract to the implementation service specification requires 
that the (service) platform has been specified beforehand in a platform specification. This is modelled 
by the meta-class OMM_PlatformSpec in Figure 28. 


The OMM_PlatformSpec provides the following properties: 


 platformName: Name of the platform. In case of a standard platform, a reference shall be pro-
vided. 


 interfaceLanguage: Specification of the formal language that is used to define SOA-RM Service 
Interfaces. In case of a standard language, a reference shall be provided. 


 executionContext: Specification of the SOA-RM Execution Context. In case of a standard SOA-
RM Execution Context, a reference shall be provided. 


 interfaceMapping: Specification of how the interface operations on the abstract level are 
mapped to actions of the SOA-RM Execution Context. This specification shall cover the follow-
ing aspects: 


- principle handling of synchronous and the asynchronous interactions, 


- a description of the mechanisms by which ―call by value‖ vs. ―call by reference‖ action 
parameters are supported,  


- a description of if and how optional actions and optional action parameters are sup-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


97/180 


ported and what optionality means for this particular platform, 


- an implementation specification of the basic interface types as specified in section 9.6.1, 


- an implementation specification of the way the UAA concepts (see section 7.5) are real-
ised for the platform, e.g. how session information is handled in the interactions. 


 schemaLanguage: Specification of the schema language used to define SOA-RM Information 
Models. 


 schemaMapping: Specification of how to map from the abstract level specified in UML to the 
schema language used in the platform and vice-versa. 


 informationModelConstraints: Specification of the constraints on the SOA-RM Information 
Model, especially the constraints on the format of the messages that are required to accomplish 
the SOA-RM Action model. 


An example for a platform is the Web Service infrastructure as defined by the W3C specifications (e.g. 
WSDL, SOAP V1.2) together with further refinements of ORCHESTRA, e.g. the determination of GML 
3.2 as schema language and, if required, a specification of a GML schema profile. The corresponding 
platform mapping rules of how to map from UML to GML and vice versa are given in ISO 19136 Geog-
raphy Markup Language (GML). 


Rules for platform specifications are provided in section 9.2.10. 


9.2.4 Interface Types  


9.2.4.1 OMM_InterfaceType 


Each ORCHESTRA Service Type shall refer to one or more interface types and each abstract descrip-
tion of a service type shall refer to one or more specifications of interface types. Furthermore, each in-
terface type shall be specified in exactly one abstract specification of an interface. 


An interface type is defined as the set of operations that characterize the externally visible behaviour of 
an entity providing the service. The aggregation of operations in an interface type and the definition of 
interface types shall be for the purpose of software reusability. The specification of an interface type 
shall include a static portion that includes a definition of the operations. The specification of an interface 
type shall include a dynamic portion that includes any restrictions on the order of invocation of the op-
erations. 


An interface type is modelled by the meta-class OMM_InterfaceType with the following properties: 


 name: Provides the name of the service interface. 


 opName: Association role providing the list of operations (see OMM_OperationType) that are 
defined in the service interface. 


OA_Interface is an instance of the meta-class OMM_InterfaceType. The rules for specifying interface 
types according to the OMM are given in section 9.2.6.  


9.2.4.2 OMM_ InterfaceInheritanceRelation 


Interface types may be specialised by means of inheritance. Thus, generic interface types may be de-
fined and re-used or refined in other abstract interface specifications. This is modelled by the meta-
class OMM_InterfaceInheritanceRelation. 


OMM_InterfaceInheritanceRelation is the meta-class that describes a generic relationship between a 
more general interface type (supertype) and one specialised interface type (subtype). An interface type 
A being a subtype of another interface type B (that acts as supertype) supports all operations defined in 
B in addition to the operations defined in A. An interface type may inherit operations from more than 
one supertype (multiple inheritance). 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


98/180 


 


Figure 29: The Service Interface Part of the OMM 


OMM_InterfaceInheritanceRelation is defined with the following properties: 


 name: Name of the generalization/specialisation (optional). 


 description: Explanation of the generalization/specialisation to be provided in the abstract inter-
face specification. 


 Generalization: Association specifying that an interface type has the role of being a supertype 
in an inheritance relationship with another interface type. 


 Specialization: Association specifying that an interface type has the role of being a subtype in 
an inheritance relationship with another interface type. 


 supertype: The role of being the more generic interface type of one other or many other inter-
face types. 


 subtype: The role of being the more specific interface type of one other or other interface types. 


9.2.4.3 OMM_OperationType 


The conceptual model for operations is illustrated in Figure 30. An operation type is syntacticly defined 
through its signature that consists of the name of the operation and the request, result and exception 
parameters. Operations are modelled in the meta-class OMM_OperationType with the following proper-
ties: 


 name: Name of the operation type. 


 optional: Boolean value indicating if the operation may be omitted in the service mapping from 
the abstract to the implementation specification (optional = true) or if it shall be supported in the 
respective SOA_RM Action Model of the an implementation specification (optional = false), in 
the latter case either as a mandatory action or as an optional action. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


99/180 


 request: Association specifying that an operation type may have zero, one or more request pa-
rameter types (OMM_RequestParameterType). 


 result: Association specifying that an operation type may have zero or one result parameter 
types (OMM_ResultParameterType). 


 exception: Association specifying that an operation type may have one or more request excep-
tion parameter types (OMM_ExceptionParameterType). 


Rules for operation types are provided in section 9.2.7. 


All parameter types are specified as subtypes of OMM_AttributeTypes. Therefore the rules that are 
specified for attribute types as part of the Information Viewpoint in section 8.7 are also applied for pa-
rameter types. In fact, this means that the totality of the information exchanged in operation requests, 
results and exceptions is specified as an OAS. Specific rules for parameter types are provided in sec-
tion 9.2.8. 


9.2.4.4 OMM_RequestParameterType 


OMM_RequestParameterType is a meta-class representing a parameter to be provided as part of an 
operation request. It has the following properties: 


 name: Name of the request parameter type. 


 optional: Boolean value indicating if the request parameter may be omitted in the service map-
ping from the abstract to the implementation specification (optional = true) or if it shall be sup-
ported in the respective operation of the an implementation specification (optional = false), in 
the latter case either as a mandatory parameter or as an optional parameter. 


9.2.4.5 OMM_ResultParameterType 


OMM_RequestParameterType is a meta-class representing a parameter to be provided as part of an 
operation result if the processing of the operation has been successful. It has the following properties: 


 name: Name of the result parameter type. 


9.2.4.6 OMM_ExceptionParameterType 


OMM_ExceptionParameterType is a meta-class representing a parameter to be provided as part of an 
operation exception if the processing of the operation has not been successful. It has the following 
properties: 


 name: Name of the exception parameter type. 


9.2.4.7 OMM_OperationRequest 


OMM_OperationRequest is a meta-class representing the set of request parameters to be provided as 
part of an operation call. It has the following properties: 


 opName: Association role representing the name of the corresponding operation. 


 paraName: Association role referring to the set of request parameters required for the operation 
call. 


Note: The meta-class OMM_OperationRequest is required in order to model the case where all re-
quest parameters are modelled in one UML class with the individual request parameters being attrib-
utes of this class. This is, for example, required when the SynchronousInteraction (see section 9.6.2) or 
the AsynchronousInteraction (see section 9.6.3) interface types as specified in sections 9.6.1) are used. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


100/180 


 


Figure 30: Model of OMM Operations and Parameter Types 


9.2.5 Rules for ORCHESTRA Services 


9.2.5.1 General Approach 


The modelling process for ORCHESTRA Service Types shall obey the rules specified in the following 
sections. In this process, two cases are to be distinguished:  


1. ORCHESTRA Service Types that are in a first step specified on a platform-neutral level, i.e. in 
addition to the mandatory abstract service description there are abstract specifications of all of 
their interface types and then, in a second step, are mapped to one or more platforms as 
specified in corresponding implementation specifications. 


2. ORCHESTRA Service Types that are directly specified in an implementation specification 
without the delivery of abstract specifications of their SOA-RM Action Model in terms of ab-
stract interface types in addition to the mandatory ServiceCapabilities interface type. 


Note 1:  The implementation specification is dependent on the platform specification that contains the 
mapping rules from and to the abstract level. Thus, it is assured that an ORCHESTRA Service Type, 
even when just specified on a platform level, is compliant to the OMM. 


Note 2:  Whether it is possible to automatically derive from a given SOA-RM Action Model of an im-
plementation specification an abstract specification of a corresponding interface such that this distinc-
tion is not necessary will be investigated. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


101/180 


Rules: 


 
1) For all ORCHESTRA Service Types an abstract description (i.e. an instance of 


OMM_ServiceAbstractDesc) shall be provided. 
 
2) For all ORCHESTRA Service Types that are categorised as OA Services an abstract specifica-


tion of all of their interface types (i.e. an instance of OMM_InterfaceAbstractSpec) is mandatory. 
 
3) For all ORCHESTRA Service Types that are categorised as OT Services and thus are part of an 


OAA, an abstract specification of all of its interface types is optional. It is strongly recommended 
to provide abstract interface specifications if 


 
- it is envisaged to submit the service specification to a standardisation organisation that is not 


fixed to a particular service platform (e.g. ISO or OGC), 
- parts of the specified functionality of the service type are expected to be re-used by other 


service types, 
- the foreseen lifetime of the service specification is expected to be above the usual innovation 


cycle of IT service infrastructure technology (around 5-10 years), 
- it is envisaged to provide at least two different implementation specifications according to the 


same service requirements (e.g. several service profiles for the same platform or the same 
service profile for different platforms). 


9.2.5.2 Rules for ORCHESTRA Service Types 
 


Rules: 


 
1) An instance of OMM_ServiceType shall be implemented as a CLASS stereotyped as <<Ser-


viceType>> (see OA_ServiceType) that defines an ORCHESTRA Service Type as a realisation 
of one or more interfaces (OA_Interface). The name of the CLASS corresponds to the service 
type name and shall be unique for all applications of the ORCHESTRA Architecture. 


 
Note: Means how to assure the uniqueness of service type names will be discussed in a 
future version of the RM-OA. 


 
2) An instance of OMM_ServiceType shall at least realise the interface type ServiceCapabilities as 


specified in section 9.6.1). 


9.2.5.3 Rules for Abstract Descriptions of ORCHESTRA Services 


Rules: 
 
1) An instance of OMM_ServiceAbstractDesc shall be implemented as a CLASS stereotyped as 


<<Specification>> (see OA_ServiceAbstractDesc). It shall describe the purpose and scope of 
the service type in a human readable form and shall provide an overview about the interface 
types supported by the service type. If no other form is requested by a project environment, the 
RM-OA Service Description Framework as introduced in section 9.4 shall be used. 


 
2) An instance of OMM_ServiceAbstractDesc shall refer to one or more instances of 


OMM_InterfaceAbstractSpec. 
 
Note: The abstract description of an ORCHESTRA Service Type may also be combined with the 
abstract specification of the associated interface types (see section 9.2.6) in one ―abstract service 
specification‖. The service types that are described in the RM-OA Service Viewpoint are specified 
like that, see (ORCH-AbstrServ 2007).  


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


102/180 


9.2.6 Rules for the Specification of Interface Types 


Rules: 


  
1) An instance of OMM_InterfaceType shall be implemented as a CLASS stereotyped as <<Inter-


face>> (see OA_Interface) that defines the set of operations implemented as instances of 
OMM_Operation.  


 
2) An instance of OMM_InterfaceType shall be specified in UML 2.0. 


 
3) An instance of OMM_InterfaceType (acting in the role of a subtype) may only inherit operations 


from those instances of OMM_InterfaceTypes (acting in the role of supertypes) if these super-
types are marked by the tagged value <<supertype>. 


 
Note: The supertypes need not be specified in the same abstract specification (an instance 
of OMM_InterfaceAbstractSpec) as the subtype. 
 


4) An instance of OMM_InterfaceType shall be contained in exactly one abstract specification of an 
interface type (an instance of OMM_InterfaceAbstractSpec). 


 
5) An instance of OMM_InterfaceAbstractSpec shall be implemented as a CLASS stereotyped as 


<<Specification>> (see OA_InterfaceAbstractSpec). It shall provide an overview about the inter-
face type both in a human-readable form and in a formal specification (see rule 4) above). If no 
other form is requested by a project environment, the specification template applied in (ORCH-
AbstrServ 2007) shall be used. 


 
6) If an interface type contains stateful operations, i.e. if the service implementing the interface 


must maintain the value of a state attribute beyond the duration of the processing of an operation 
request, the interface specification shall contain a state diagram that describes the meaning of 
each state and the conditions for the transitions between the states. 


9.2.7 Rules for the Specification of Operation Types 


Rules: 


 
1) An instance of OMM_OperationType shall be implemented as OPERATION of a class stereo-


typed as <<Interface>> (see OA_Interface) with the following properties: 
 


- The associated request parameters of an operation type (see instances of 
OMM_RequestParameterType) shall be implemented as parameter(s) of the interface op-
erations. 


- The associated result parameters of an operation type (see instances of 
OMM_ResultParameterType) shall be implemented as return type of the interface opera-
tions. 


 
2) The set of request parameters of an operation type (i.e. instances of 


OMM_RequestParameterType) may be summarised in one instance of OMM_OperationRequest 
and implemented as a CLASS stereotyped as <<Type>>. This is at least required in the follow-
ing cases: 
- if the operation is to be called by means of the generic invoke operation of the Synchronous-


Interaction or AsynchronousInteraction interface type specified in section 9.6.1. See also the 
corresponding rules in section 9.2.9. 


- if one of the request parameters has to be specified as optional parameter (see rule 3) of 
section 9.2.8). 


 
3) If an instance of OMM_OperationType may be omitted in the mapping to the SOA-RM Action 


model (SOA-RM 2006) of an implementation specification of an ORCHESTRA Service, the cor-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


103/180 


responding operation shall be marked with a stereotype <<optional>> in the class stereotyped as 
<<Interface>>. 


 
Note: An instance of OMM_Operation that is not marked with a stereotype <<optional>> is 
considered to be a mandatory operation. This means it shall be mapped to a corresponding ac-
tion in the implementation specification. This is the default case. 
 


 


Figure 31: Specification of Exception Types 


9.2.8 Rules for the Specification of Parameter Types 


Rules: 
 


1) An instance of OMM_RequestParameterType representing one request parameter of an opera-
tion shall be implemented as a CLASS stereotyped as <<Type>> (see 
OA_OperationRequestParameter in Figure 30). 


 
2) An instance of the OMM_RequestParameterType shall obey the rules for the instances of 


OMM_AttributeTypes as specified in section 8.8.7.  
 


Note: This rule means that the data type of a request parameter is either a basic data type 
(see section 8.7.2.2) or a class with a valid stereotype (e.g., <<feature type>>). Note that this 
rule may cause implementation problems when applied to concrete service platforms. An 
example is the use of the latest GML version with the Web service development tools. In this 
case, exceptions from this rule must be expressed in the platfrom specification (see section 
10.6)  
 


3) If at least one instance of OMM_RequestParameterType as part of an operation type is to be 
specified as optional parameter, an instance of OMM_OperationRequest shall be implemented 
as a class stereotyped by <<DataType>> that contains all request parameters as ATTRIBUTE 
whereby the optional request parameters shall have the cardinality [0..1] or [0..n]. 


 
4) An instance of OMM_ResultParameterType representing a result parameter of an operation (i.e. 


a normal response) shall be implemented as a CLASS stereotyped as <<Type>> (see 
OA_OperationResultParameter in Figure 30). 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


104/180 


5) An instance of OMM_ResultParameterType shall obey the rules for the instances of 
OMM_AttributeTypes as specified in section 8.8.7. 


 
Note: This rule means that the data type of a result parameter is either a basic data type or 
a class with a valid stereotype (e.g., <<feature type>>). 
 


6) An instance of OMM_ExceptionParameterType representing an exception parameter of an op-
eration (i.e. a failure response) shall be implemented as a CLASS stereotyped as <<Type>> 
(see OA_OperationExceptionParameter in Figure 30). It shall be derived from the CLASS 
OA_AbstractException as specified in Figure 31. 


 
7) An instance of OMM_ExceptionParameterType shall re-use the exception types that are pre-


defined by the specification of the exception types in UML in (ORCH-AbstrServ 2007)) if the se-
mantics of these exception types fit the needs of the operation type. 


 
8) An instance of OMM_OperationType together with its related instances of 


OMM_RequestParameterType representing an operation with its request parameters shall be 
implemented by a CLASS stereotyped as <<DataType> (see OA_OperationRequest in Figure 
30). The operation request shall be sent either within a synchronous interaction, which is the de-
fault case, or within an asynchronous interaction.  


Note: The interfaces of a synchronous or asynchronous interaction are specified in the 
sections  9.6.2 and 9.6.3). Rules for their application are given in section 9.2.9. 


 
9) An instance of OMM_ResultParameterType representing an operation result parameter shall be 


implemented by a CLASS stereotyped as <<Type> (see OA_OperationResult in Figure 30). The 
operation result is received within a synchronous or asynchronous interaction depending on the 
interaction mode of the preceding operation request (see rule 8) above). 


 
10) An instance of OMM_ExceptionParameterType representing an operation exception parameter 


shall be implemented by a CLASS stereotyped as <<Type> (see OA_OperationFailure in Figure 
30). The operation exception is received within a synchronous or asynchronous interaction de-
pending on the interaction mode of the preceding operation request (see rule 8) above). 


 


9.2.9 Rules for the Service Mapping to a given Platform 


9.2.9.1 General Approach 


The process of the service mapping to a given platform is illustrated by the conceptual model in Figure 
32.  


Rules: 


 
1) For each service type that is considered to be available for a given platform an implementation 


specification for this platform according to rules of section 9.2.11 shall be available.  
 


2) The process of mapping an abstract specification to an implementation specification shall be 
documented in a service mapping specification, i.e. an instance of OMM_ServiceMappingSpec 
(see rule 4) below).  


 
3) The service mapping specification shall be a section in the ORCHESTRA Implementation Speci-


fication. Furthermore, 
- It shall define the mapping of each operation type and parameter type specified in ab-


stract interface specifications to the SOA-RM Action Model of the ORCHESTRA service 
on platform level. 


- The mapping shall comprise both the static part (signature) as well as the behaviour of 
the operation. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


105/180 


Note: See (ORCH-ImplServ 2006) of an example of such a service mapping specification 
for the ORCHESTRA Web Services platform. 


 
4) The service mapping specification shall consider the following cases: 


 
- Case 1: Service Profile, an instance of OMM_ServiceProfile, if the SOA-RM Action 


Model of the implementation specification comprises a subset of the interface operations 
specified in the abstract specification of an ORCHESTRA Service Type whereby the 
structure and the semantics of the interface operations and the SOA-RM Action Model 
are identical. Rules for a Service Profile are given in section 9.2.9.2. 


 
Note:  Other cases (such as ontology-based service mediation) may be considered in fu-
ture versions of the RM-OA, e.g. if the semantics of the interface operations on the abstract level 
and the SOA-RM Action Model on the platform level are similar but not identical.  


 


 


Figure 32: Structure of the Service Mapping in the OMM 


9.2.9.2 Rules for Service Profiles 


Rules: 


1) All operations of all interfaces that are not marked as ―optional‖ (see rule 3) of section 9.2.7) 
shall be mapped to an implementation specification. An operation shall be represented in the 
respective SOA-RM Action Model according to one of the following cases: 


- It is mapped to exactly one action invoked against a service specified in an implementa-
tion specification. The action invocation is performed in a synchronous interaction and 
shall be semantically identical to the operation call of the abstract specification. 


- It is mapped to the SOA-RM Action Model that provides the SynchronousInteraction or 
AsynchronousInteraction interface type for the given platform if the corresponding func-
tionality has been specified for this platform (see rule 2) of section 9.2.10). In this case, 
the following rules apply respectively for the chosen interaction mode. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


106/180 


2) For all operations of all interfaces that are marked as ―optional‖ (see rule 3) of section 9.2.7) the 
following cases are possible: 


- They may be omitted in the SOA-RM Action Model of the implementation specification. 
- They may be mapped to optional actions in the SOA-RM Action Model of the implemen-


tation specification. 
- They may be mapped to mandatory actions in the SOA-RM Action Model of the imple-


mentation specification. 


3) A parameter of an operation that is not marked as ―optional‖ in the abstract specification (see 
rule 3) of section 9.2.8) shall be syntacticly mapped to exactly one parameter of the action in-
vocation. The parameter semantics shall be identical. 


4) For all parameters of an operation that are marked as ―optional‖ (see rule 3) of section 9.2.8) 
the following cases are possible: 


- They may be omitted in the action of the implementation specification. 
- They may be set to a constant value for the action in the implementation specification. 
- They may be mapped to optional action parameters in the implementation specification. 
- They may be mapped to mandatory action parameters in the implementation specifica-


tion. 


Note 1: The meaning of the expression ―is semantically identical‖ is that the ―real-world effect‖ of an 
action (see OASIS RM-SOA, 2005) is identical.  


Note 2: It may turn out that ―semantically identical‖ mappings are not possible in all cases and a 
weaker definition is required. In this case, a further case in the service mapping rules will be introduced. 


9.2.10 Rules for Platform Specifications 


Rules: 


 
1) An instance of OMM_PlatformSpec shall be implemented as a CLASS stereotyped as <<Speci-


fication>> (see OA_PlatformSpec). It shall describe the basic properties of the platform as speci-
fied in section 9.2.3.5. 


 
Note: A more refined discussion of the platform properties is provided in the RM-OA Tech-
nology Viewpoint, see section 10. 


 
2) An instance of OMM_PlatformSpec shall contain or refer to implementation specifications of all 


mandatory basic interface types specified in section 9.6.1 for which a respective functionality 
shall be offered for this platform. The provision of an implementation specification of the Ser-
viceCapabilities interface type is mandatory. 


 
3) An instance of OMM_PlatformSpec shall observe the conformance guidelines given in section 4 


of (SOA-RM, 2006).  


4) The specification of the SOA-RM Information Model constraints for platform services shall in-
clude a specification of how the rules of the OMM Service Meta-model for request, result and 
exception parameters (see section 9.2.8) are fulfilled. This assures that the interactions between 
service providers and consumers are compliant to the OMM even in cases where the interfaces 
to ORCHESTRA  services are not first specified on an abstract level according to the OMM and 
then mapped to the SOA-RM action model of a particular platform.  


9.2.11 Rules for Implementation Specifications of ORCHESTRA Services 


Rules: 


 
1) An ORCHESTRA Implementation Specification of an ORCHESTRA Service Type, i.e. an in-


stance of OMM_ServiceImplSpec, shall be provided according to the rules of the chosen (ser-
vice) platform (see section 9.2.10).  


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


107/180 


2) An ORCHESTRA Implementation Specification of an ORCHESTRA Service Type shall be a 
document that is structured according to a template that fits the chosen platform and is part of an 
ORCHESTRA Implementation Specification for that platform.  


 
3) If the functionality of the ORCHESTRA Service Type has been specified in terms of abstract in-


terface types (i.e. instances of OMM_InterfaceAbstractSpec) in addition to the mandatory ser-
viceCapabilities interface type, there must be an instance of OMM_ServiceMappingSpec (see 
section 9.2.9) that specifies the mapping process from the abstract to the implementation speci-
fication. 


 


9.3 Functional Classification of ORCHESTRA Services 


9.3.1 Overview 


As part of the ORCHESTRA Architecture, ORCHESTRA Service Types are defined by the collection of 
the interface types that they support. As an interface type defines the externally visible behaviour, an 
ORCHESTRA Service Type is in fact defined by the functionality that it provides to the external world. 
The RM-OA classifies service types into service categories by discussing their functionality. The main 
service categories are ORCHESTRA Architecture Services (OA Services) and ORCHESTRA Thematic 
Services (OT Services): 


 An OA Service provides a generic, platform-neutral and application-domain independent func-
tionality. 


 An OT Service provides an application domain-specific functionality built on top and by usage of 
OA Services and/or other OT Services.  


Note 1: Here and in the following, the term ―usage‖ means that a service may call operations of an-
other service in order to provide the desired functionality. In this sense, the calling service depends on 
the other service. In the service specification it is stated if such a usage is mandatory or just recom-
mended. 


Note 2: The list of OA Services and OT Services as presented in the following section is the result of 
an intense analysis of the functional user requirements within the ORCHESTRA project.  


Note 3: The granularity for the services is oriented at the functional coherency of the service opera-
tions and the type of information (e.g. feature types, meta-information) that is managed by the service. 


9.3.2 OA Services 


OA Services are further classified into two sub-categories: 


 OA Info-Structure Service: These are OA Services that are required to operate an OSN in the 
sense that these services play an indispensable role in the operation of an OSN depending on 
its required characteristics (see section 11.1). An example of such a role may be that at least 
one OSI of such a service must exist in one OSN environment (e.g. for the Catalogue Service, 
see section 9.7.5). Other examples are the various access services which shall be used when a 
feature of the respective type is accessed in an OSN (e.g. a document shall be accessed by us-
age of the Document Access Service, see section 9.7.3).  


 OA Support Service: These are OA Services that support the provision of OA Info-Structure Ser-
vice functionality (as an implementation option) or facilitate the operation of an OSN, e.g. provid-
ing an added value by combining them with the usage of OA Info-Structure Services.  


These together comprise the generic information infrastructure (info-structure) of the RM-OA. The OA 
Services thus provide the functional basis for application domain-specific functionality. OA Services 
themselves do not address any specific thematic application domain, nor do they impose any structure 
on the OT Services. 


Note that OA Services may themselves use other OA Services. Furthermore, OT Services may use 
both OA Info-Structure Services and OA Support Services in order to fulfil a given functionality.  


This functional classification is illustrated in Figure 33. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


108/180 


 


Figure 33: Functional classification of ORCHESTRA Services 


Table 6 shows the current list of service types categorised as OA Services in alphabetic order within the 
sub-categories. Abstract specifications of these service types and its containing interface types are 
available in (ORCH-AbstrServ 2007). 


Basic functions that may, or even shall, be offered by all OA and OT Services (e.g. an operation to re-
trieve a self-description of a service) with well-defined interfaces are not categorised as OA or OT Ser-
vice itself. Such functions are listed in Table 5 and described as separate interface types in section 9.6. 
This approach follows the idea of the OMM-service (see section 7.2.3) that the ―interface‖ is the re-
usable unit of specification. Note that principally, all interface types that are specified in the context of a 
service type may also be re-used in other service type specifications. 


 


Interface Type Name Section 


Service Capabilities Interface 9.6.1 


Synchronous Interaction Interface 9.6.2 


Asynchronous Interaction Interface 9.6.3 


Transaction Interface 9.6.4 


Knowledge Base Interface 9.6.5 


Table 5: List of Basic Interface Types 


Note 1: The categorisation of an OA Service as either an OA Info-Structure service or an OA Sup-
port service is derived from the idea that essential characteristics of an OSN are discovery and access 
to resources residing in source systems, whereby access means read and/or write access, and, in addi-
tion, a possibility of monitoring the running services. The rationale for this selection is a compromise be-
tween, on the one hand, keeping the requirements for a service network to be ―OSN-compliant‖ as 
small as possible and, on the other hand, providing a powerful service infrastructure for a broad range 
of ORCHESTRA Applications. In this sense, support for transformations of any kind or automatic gen-
eration of meta-information is considered to be ―OA Support‖ as it is not required for all ORCHESTRA 
Applications running in a rather homogeneous environment. See a more refined discussion about OSN 
characteristics in section 11.1. 


Note 2: The column ―ISO 19119 Service Taxonomy‖ provides just a hint of the position of the OA 
Service in the ISO 19119 Service Taxonomy. Note that GeoModel/InfoManagement here stands for 
Geographic Model/Information Management Services. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


109/180 


 


Service Type Name Service 
Category 


ISO 19119 Service  
Taxonomy 


Section 


Authentication Service OA Info-Structure GeoModel/InfoManagement  9.7.9 


Authorisation Service OA Info-Structure GeoModel/InfoManagement 9.7.8 


Catalogue Service OA Info-Structure GeoModel/InfoManagement 9.7.5 


Document Access Service OA Info-Structure GeoModel/InfoManagement 9.7.3 


Feature Access Service OA Info-Structure GeoModel/InfoManagement 9.7.1 


Map and Diagram Service OA Info-Structure GeoModel/InfoManagement 9.7.2 


Name Service OA Info-Structure GeoModel/InfoManagement 9.7.6 


Sensor Access Service OA Info-Structure GeoModel/InfoManagement 9.7.4 


Service Monitoring Service OA Info-Structure GeoModel/InfoManagement 9.7.10 


User Management Service OA Info-Structure GeoModel/InfoManagement 9.7.7 


Annotation Service OA Support GeoModel/InfoManagement 9.8.3 


Coordinate Operation Service OA Support Geographic Processing Services 9.8.1 


Format Conversion Service OA Support GeoModel/InfoManagement 9.8.4 


Gazetteer Service OA Support GeoModel/InfoManagement 9.8.2 


Ontology Access Service OA Support GeoModel/InfoManagement 9.8.6 


Schema Mapping Service OA Support GeoModel/InfoManagement 9.8.5 


Service Chain Access Service OA Support Workflow/Task Management Services 9.8.8 


Thesaurus Access Service OA Support GeoModel/InfoManagement 9.8.7 


Table 6: List of OA Services 


9.3.3 OT Services 


OT Services provide application domain-specific functionality. However, both within and between differ-
ent application domains, high-level functions that have a generic nature may be identified. These ser-
vices are inside the scope of the RM-OA as a generic architecture and area defined as follows:  


 OT Support Service: generic service that facilitates the development or interactive composition 
of thematic functionality. 


The application domain of environmental risk management is taken as an informative example of fur-
ther sub-categories of OT Services, although outside the scope of the RM-OA. Here, the ORCHESTRA 
project provides dedicated OT Services according to the following structure:  


 OT Risk-neutral Service: service specific to the risk management domain that facilitates the 
development or interactive composition of risk-neutral risk management functionality. 


 OT Risk-specific Service: service specific to a specific risk management domain (e.g. earth-
quakes, forest fires, flood, systemic risks) that facilitates the development or interactive com-
position of risk-specific risk management functionality. 


All OT Services may use and combine the OA Services in order to fulfil their thematic function. As an 
example, the service sub-categories for the application domain of environmental risk management are 
illustrated in Figure 34.  


As an example, Table 7 shows the current list of OT Support Services for the application domain of En-
vironmental Risk Management. The column ―ISO 19119 Service Taxonomy‖ provides a hint of the posi-
tion of the OA Service in the ISO 19119 Service Taxonomy. 


A candidate list of required OT Services in the domain of risk management may be found in (ORCH-
D2.4.2 2005). 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


110/180 


 


Figure 34: Example of OT Service sub-categories for the 
application domain of Environmental Risk Management 


Note: The current list of OT Support Services is a result of functional user requirements. A subset 
of them (e.g. the Processing Service) is currently being specified on a detailed level. The orthers are 
kept for documentation and traceability purposes.  


 


Service Name Service  
Category 


ISO 19119 Service Taxonomy  Section 


Processing Service OT Support Geographic Processing Services 9.9.1 


Simulation Management 
Services 


OT Support Geographic Processing Services 9.9.2 


Calendar Service OT Support Workflow/Task Management Services 9.9.6 


Communication Service OT Support Workflow/Task Management Services 9.9.5 


Project Management Support 
Service 


OT Support Workflow/Task Management Services 9.9.4 


Reporting Service OT Support Workflow/Task Management Services 9.9.7 


Sensor Planning Service OT Support Workflow/Task Management Services 9.9.3 


Table 7: List of OT Support Services for Environmental Risk Management 


9.3.4 Human Interaction Components 


The ORCHESTRA Services as categorized above do not provide an interface to a human user but 
rather to a software component requesting an operation at the service interface. The provision of such 
user interfaces is to be provided by so-called Human Interaction Components. 


Human Interaction Components are software components that provide the (usually graphical) user in-
terface (GUI) of an OA Service or OT Service. As such, the specification of such components is outside 
the scope of the RM-OA, i.e. no service description will be provided.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


111/180 


9.4 Relationship of the ORCHESTRA Service Types to INSPIRE 


The ORCHESTRA Architecture follows an iterative design approach. The major iteration cycles that are 
currently foreseen are described in section 6.2.3. The focus of the current version 2 of the OA is to 
support syntactic interoperability, in particular but not exclusively for spatial services, such that the OA 
may contribute to the specification of the INSPIRE network services as outlined in section 6.2.2.3. 


The following table provides an overview of which of the ORCHESTRA Interface and Service Types 
may contribute to which INSPIRE network services. This linkage to the INSPIRE requirements is 
preliminary as the work of the INSPIRE drafting team for network services has not yet been finalised 
and a detailed definition on the INSPIRE Network Services is not yet available. 


 


INSPIRE 
Network 
Services 


ORCHESTRA Interface 
Type  


Specified in ORCHESTRA 
Service Type 


Comment 


Discovery 
Services 


CatalogueSearchInter-
face  


Catalogue Service  
(see section 9.7.5) 


The ORCHESTRA 
Catalogue Service is 
generic w.r.t. the usage of a 
specific meta-information 
model. The CS-W 2.0 ISO 
AP 19115/19119 as 
currently investigated by 
INSPIRE could be chosen 
as one example. 


Upload 
Services 


CataloguePublication 
and CatalogueCollection 
Interface 


Catalogue Service  
(see section 9.7.5) 


 


View 
Services 


MapService Map and Diagram Service 
(see section 9.7.2) 


INSPIRE just requires 
rendering in maps 


Download 
Services 


FeatureAccessService Feature Access Service (see 
section 9.7.1) 


To support the download of 
feature instances 


DocumentAccess   Document Access Service  
(see section 9.7.3) 


 


To support the download of 
predefined datasets 


Transforma
tion 
Services 


CoordinateOperation Coordinate Operation 
Service (see section 9.8.1) 


 


SchemaMapping 


SchemaMappingReposi-
tory 


 


Schema Mapping Service  
(see section 9.8.5) 


In case schema mapping 
remains in the scope of the 
INSPIRE Transformation 
Services. 


―Invoke 
spatial data 
services‖ 
services 


ProcessingService Processing Service  
(see section 9.9.1) 


OMM-Service (see section 
9.2) may provide input to 
the specification of the 
INSPIRE service reference 
model mentioned in the 
INSPIRE description 


 ServiceChainAc-
cessService 


Service Chain Access Ser-
vice (see section 9.8.8) 


 


Table 8: Possible Contribution of ORCHESTRA Service Types to INSPIRE Network Services 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


112/180 


9.5 Service and Interface Description Framework 


A coarse description of the ORCHESTRA Interfaces and Services is provided in a textual format ac-
cording to the following template. The detailed abstract specifications of the services are provided in 
(ORCH-AbstrServ 2007). These documents contain formal specification of the information objects that 
are referred to in the interface operations (e.g. parameter types). 


 


Name Name of the ORCHESTRA Service or Interface Type 


Convention: All individual words in the service type name are capitalized. 


Standard 
Specifications 


Reference to an abstract or a platform-specific service specification according to a 
standardisation organisation (e.g. ISO, CEN, W3C, OGC,…) or to important refer-
ence material that has been taken into account when describing the service, its in-
terfaces or operations. In case there is no adequate reference the field is set to ―no 
corresponding standard known‖ 


Description Human understandable description of the functionality provided by the 
ORCHESTRA service or interface. The end of a service description shall provide 
the following text: 


The <name> Service provides its functionality through the following interfaces: 


 Interface1:  human understandable description of the purpose of interface 1 


 … 


 InterfaceN: human understandable description of the purpose of interface N 


Note:         If an interface is re-used from another ORCHESTRA Service Type de-
scription, the name of this service type shall be indicated in brackets in the interface 
definition below. The description of the used interface operations shall be adapted 
to the context of the using service. 


Convention: All words in the interface name are written together in italics without a 
blank in between. The first letter of the first word and all other words are written in 
upper case letters. 


Interface Interface1 (from << Name of an ORCHESTRA Service> 


oper1 Human understandable description of the operation 1 of the interface. Only major 
input and output information shall be described, no individual request and result pa-
rameters. 


Note:          All words in the service operation name are written together in italics 
without a blank in between. The first letter of the first word is lower case, all other 
words upper case. 


…  


operN 
 (optional) 


Human understandable description of the operation n of the interface. Optional op-
erations are to be marked by suffix (optional) after the operation name. 


… 


Interface InterfaceN 


…  


Example  
usage 


Description of an example usage scenario of the service, e.g. by the combination of 
several operation calls of the service or in combination with another ORCHESTRA 
Service. 


Comments Description of current restrictions or possible extensions and enhancements in fu-
ture versions of the RM-OA. 


Table 9: Service Description Framework 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


113/180 


9.6 Basic Interface Descriptions 


9.6.1 Service Capabilities Interface 


 


Name Service Capabilities Interface 


Standard 
Specifications 


The getCapabilities operation of the Service Capabilities Interface is designed such 
that it is backward compatible with the concepts and definitions of the 
GetCapabilities operation as defined in  


 OGC 05-008c1 Web Services Common Specification V1.0 


The idea is that the usage of the meta-information schema defined in that OGC 
standard is just one possibility how the service capabilities may look like. 


Description The Service Capabilities Interface defines of a uniform way to get a self-description 
of an OSI by means of so-called capabilities. The capabilities form service meta-
information which can be used for various purposes like, for example, service dis-
covery and service invocation. 


This ServiceCapabilities interface is a mandatory interface and shall be imple-
mented by all ORCHESTRA Services. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the capabilities of an OSI. This operation takes into account 
that in addition to capabilities that are common to all ORCHESTRA Services (re-
ferred to as common capabilities) an ORCHESTRA Service may provide a specific 
set of capabilities (referred to as specific capabilities). Furthermore, this operation 
allows the capabilities to be delivered according to different service meta-
information schemas. The meta-information schema shall be structured according 
to the rules for ORCHESTRA application schemas defined in section 8.8. 


Example 
usage 


The Service Capabilities Interface contributes to a consistent description of the 
functionality provided by ORCHESTRA Services. Thus, it helps in developing ge-
neric applications and in defining a common framework for service discovery and 
access. 


Comments The contents of the service meta-information are defined as part of the specification 
of the OAS-MI for services in Annex B1 of the RM-OA. 


Furthermore, the abstract specification of the Service Capabilities interface (see 
(ORCH-AbstrServ 2007) also contains the specification of common exception types 
to be used by all other ORCHESTRA interface types. 


Table 10: Description of the Service Capabilities Interface 


9.6.2 Synchronous Interaction Interface 


 


Name Synchronous Interaction Interface 


Standard 
Specifications 


No corresponding standard known. 


Description The Synchronous Interaction Interface defines of a uniform way to request synchro-
nous execution of a service operation. Synchronous execution of an operation 
means that the client requests operation execution and then waits until the opera-
tion provider has finished operation execution and returns a response. Such a re-
sponse may either contain an operation result value (which also may be empty) or 
may be an indication of a failure which is modeled as exception. 


Interface SynchronousInteraction 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


114/180 


invoke Executes an operation synchronously and returns the operation response. 


Example 
usage 


The synchronous interaction interface may be used by generic software frameworks 
that support the integration of source systems into an OSN (see section 9.10.2). 


Comments none 


Table 11: Description of the Synchronous Interaction Interface 


9.6.3 Asynchronous Interaction Interface 


 


Name Synchronous Interaction Interface 


Standard 
Specifications 


The following WC3 standard provides transport-neutral mechanisms to address 
Web services and messages. 


 W3C Web Services Addressing V1.0 Core, http://www.w3.org/TR/ws-addr-core/ 


On the abstract, platform-independent level of the service specification, the usage 
of WS-Addressing is out of scope. However, it has to be taken into account for the 
implementation specification of the Asynchronous Interaction Interface. The 
concept of an Endpoint Reference (EPR) as defined by WS-Addressing can be 
used for the invokeAsync operation in order to specify the entity to which 
notifications are to be sent as a result of asynchronous operation execution. 


 OASIS Web Services Notification  
(http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wsn) 


OASIS WS-Notification is a family of related specifications that define a standard 
Web services approach to notification using a topic-based publish/subscribe 
pattern. A Web service (NotificationProducer) disseminates information 
(notifications) to a set of other Web services (NotificationConsumers) each of which 
has been subscribed to the producer previously. 


WS-Notification itself makes use of WS-Addressing as defined by W3C to indicate 
endpoint references. 


Description The Asynchronous Interaction Interface defines a uniform way to request asynchro-
nous execution of a service operation, e.g., for operations which are time-
consuming or deliver results periodically. Asynchronous execution of an operation 
means that the client requests operation execution but does not wait until the opera-
tion has finished. Instead, the client may execute other tasks while the operation is 
running. However, in most cases the client wants to be notified when the operation 
terminates in order to get its results. In addition, when executing an operation asyn-
chronously the client should be able to abort operation execution. 


Interface AsynchronousInteraction 


invokeAsync Starts asynchronous execution of an operation. The invokeAsync operation returns 
immediately with an identifier (invocation ID) representing the asynchronous execu-
tion. In order to receive notifications a reference to a callback interface can be pro-
vided. 


abort Aborts execution of a previously invoked asynchronous operation identified by its 
invocation ID. 


notify Passes a notification to the callback interface provider. 


Example 
usage 


The Asynchronous Interaction Interface may be used for processing service 
operations (e.g. geostatistical interpolations) that take a significant time to produce 
results.  


Comments The objective of the Asynchronous Interaction Interface  is to define a uniform way 
to request for asynchronous execution of a service operation. The interface can be 



http://www.w3.org/TR/ws-addr-core/

http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wsn





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


115/180 


implemented by a service in order to offer asynchronous execution of certain 
service operations. In contrast to WS-Notification, the interface does not claim to 
define a general publish/subscribe pattern. Both specifications are not directly 
related and are not comparable with respect to compatibility.  


The Asynchronous Interaction Interface comes along with a Notification Callback 
Interface which expresses the need to receive notifications in the context of 
asynchronous operation execution. A notification may signal the operation result or 
operation progress. This is a special case of notification in the sense of WS-
Notification: By invoking an operation asynchronously, the caller implicitly 
subscribes at the operation provider. When receiving the final notification from the 
operation provider, the receiver implicitly unsubscribes. From that point of view, this 
is a special case of the publish/subscribe pattern. 


Table 12: Description of the Asynchronous Interaction Interface 


9.6.4 Transaction Interface 


 


Name Transaction Interface 


Standard 
Specifications 


 OASIS Business Transaction Protocol (BTP) 1.0, Committee Specification 
(http://www.oasis-open.org/committees/download.php/ 
1184/2002-06-03.BTP_cttee_spec_1.0.pdf) 


Description The Transaction Interface supports to enclose a series of service operations in 
transactional brackets.  


In a system that supports multiple users, synchronization of access to resources 
must be assured. This is an especially important requirement in the context of 
changing resources (write access), otherwise the consistency of the state of the 
system and its data cannot be guaranteed.  


Obviously not all services need to support transactions but if they do care must be 
taken. In order to guarantee a great amount of flexibility, the TransactionInterface 
allows numerous different types of transactions, e.g. transactions that support the 
properties of atomicity, consistency, isolation, and durability (ACID), OASIS busi-
ness transactions that relax some of the ACID properties, operation batching, ‗best 
try‘ transactions and sub-transactions. 


Interface TransactionInterface 


createAcid 
Transaction 


Creates a new ACID transaction at the service 


create 
Business 


Transaction 


Creates a new business transaction at the service 


createSubAcid 
Transaction 


Creates a new sub ACID transaction at the service. 


createSub 
Business 


Transaction 


Creates a new sub business transaction at the service. 


setImplicit 
Commit 


Sets the implicit timeout action for the specified transaction. 


setRollback 
OnFailure 


Sets the default failure action for the specified transaction 


setLockOwner Sets the resource lock owner for resources allocated by this transaction. 


start Starts an existing transaction at the service 



http://www.oasis-open.org/committees/download.php/1184/2002-06-03.BTP_cttee_spec_1.0.pdf

http://www.oasis-open.org/committees/download.php/1184/2002-06-03.BTP_cttee_spec_1.0.pdf

http://www.oasis-open.org/committees/download.php/1184/2002-06-03.BTP_cttee_spec_1.0.pdf





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


116/180 


Transaction 


tryCommit Tries to commit the transaction without rolling back if the commit failed. 


commit 
Transaction 


Makes all changes made during the transaction permanent. Also releases all locks 
that have been acquired (if any) during the transaction. 


abort 
Transaction 


Revokes all chances made during the transaction 


suspend 
Transaction 


Suspends the transaction environment. All operations that are invoked at the ser-
vice are carried out outside the transaction environment. This does not free any ac-
quired locks. 


resume 
Transaction 


Set the specified transaction as the currently active transaction. This does not free 
any acquired locks. 


getActive 
Transaction 


Retrieves the transaction ID of the (most inner, if sub transactions are supported) 
currently active transaction. 


add 
Transactions 


Adds a number of transactions as children to the specified transaction. 


remove 
Transactions 


Removes a number of child-transactions from the specified transaction. 


Example 
usage 


The Transactional Interface may be used when a sequence a setFeatures operation 
calls has to be carried out in an atomic fashion. 


Comments none 


Table 13: Description of the Transaction Interface 


9.6.5 Knowledge Base Interface 


 


Name Knowledge Base Interface 


Standard 
Specifications 


 W3C RDF-Schema http://www.w3.org/TR/rdf-schema/ 


 W3C RDF/XML Syntax Specification (Revised)   
http://www.w3.org/TR/rdf-syntax-grammar/ 


 W3C SPARQL Query Language for RDF (Candidate Recommendation) 
http://www.w3.org/TR/rdf-sparql-query/ 


Description The Knowledge Base Interface provides access to a knowledge base in an OSN. 
The knowledge base can store identifiable units of knowledge, in the sequel re-
ferred to as ―models‖. A model has a uniform resource identifier (URI).  The Knowl-
edge Base Interface conveys query requests to models received via the OSN to the 
knowledge base‘s local processing engine and returns the results to the OSI that 
requested them.  


The Knowledge Base Interface abstracts from existing languages for knowledge 
representation and querying, but it assumes that some concepts are common to 
most of them: 


 Knowledge is represented as a graph, i.e. a number of nodes and edges. 


 The knowledge graph is divided into a number of sub-graphs, so called ―mod-
els‖.  


 Models are described by a number of basic elements constituting the model 
graph; these elements describe the nodes and the edges. Updates of a model 
can be performed by adding/deleting basic elements. 


RDF is an example for a standard which fulfils these assumptions. In RDF, for in-



http://www.w3.org/TR/rdf-schema/

http://www.w3.org/TR/rdf-syntax-grammar/

http://www.w3.org/TR/rdf-sparql-query/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


117/180 


stance, ―statements‖ are the basic elements.  


SPARQL is a query language for RDF models. The SPARQL Protocol uses WSDL 
2.0 to describe a means for conveying SPARQL queries to a SPARQL query proc-
essing service and returning the query results to the entity that requested them. 


The Knowledge Base Interface can partly be implemented by means of RDF stor-
age and SPARQL queries, but other implementations are possible. 


The Knowledge Base Interface provides operations to query and update models 
contained in the knowledge base. 


Queries are to be formulated in a query language that is compatible with the queried 
model. As opposed to the Feature Access Service, the result of such a request 
does not necessarily need to be a feature set: the service may deliver results of any 
format, from complete models down to boolean values. 


Update requests to a model contain the new elements, which are to be added to the 
model, and the elements to be deleted.  


Interface KnowledgeBase 


queryModel Submits a query to a model stored in the knowledge base. The model to which the 
request is to be sent is referenced by a URI. The query is formulated in a query lan-
guage which must be compatible with the knowledge representation model used by 
the knowledge base. The service conveys the request to the knowledge base, 
which executes the query and composes the result in the required result format (pa-
rameter resultFormat). If the resultFormat parameter is not present, the result is de-
livered in a default format. 


updateModel Submits an update request to a model stored in the knowledge base. The model to 
which the request is to be sent is referenced by a URI. The request contains the set 
of basic elements to be added and the set of elements to be deleted. The service 
conveys the request to the knowledge base, which executes the update request. 


Interface TransactionInterface 


 The operations of the TransactionInterface are used when a synchronised access to 
the knowledge base must be assured, especially in the case of the updateModel 
operation of the KnowledgeBase  interface. 


Example 
usage 


Pre-population and automatic population: 


In a scenario, the knowledge base can hold so-called ―named entity‖ definitions 
(e.g. mountains, rivers) and relationships between them. A named entity can be in-
serted into the knowledge base in two ways:  


 Pre-population – the named entities are imported or acquired otherwise from 
trusted sources. 


 Automatic discovery and population – the named entities are discovered in the 
process of automatic semantic annotation (or by usage of other knowledge dis-
covery and acquisition methods) and are then populated into the knowledge 
base by means of the updateModel operation.  


Comments The main difference between a knowledge base approach and conventional SQL 
databases is that a knowledge base is more flexible: models can be added or re-
moved during run time and there is no fixed database schema. A knowledge base 
can have a schema defined by means of ontology (e.g. RDF-Schema or OWL as 
schema of an RDF knowledge base), but it does not necessarily need one. 


In its current specification, the Knowledge Base interface provides means for model 
update, but it does not provide means for adding and removing complete models. It 
is assumed that these tasks are performed via local, non-ORCHESTRA interfaces 
of the knowledge base (e.g. import). Nevertheless, implementation should allow 
adding and removing new models dynamically at runtime. 



http://www.w3.org/TR/wsdl20/

http://www.w3.org/TR/wsdl20/

http://www.w3.org/TR/wsdl20/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


118/180 


Table 14: Description of the Knowledge Base Interface 


9.7 OA Info-Structure Service Descriptions 


9.7.1 Feature Access Service 


 


Name Feature Access Service 


Standard 
Specifications 


The functionality of the Feature Access Service is based on the WFS and WCS 
OGC implementation specifications:  


 OGC Web Feature Service (WFS) Implementation Specification (latest version 
V1.1, 04-094) 


 OGC Web Coverage Service (WCS) Implementation Specification (latest ver-
sion V1.1.0, 06-083r8) 


These specifications allows for retrieval of features and coverages, respectively. 
Coverages and features are considered as ORCHESTRA features at the abstract 
level, and thus one interface has been developed for the access to both types. The 
write functionalities of the WFS specifications (which basically consist of a 
transactional operation) have been transferred into three operations setFeatures, 
createFeatures, and deleteFeatures, as to follow the ORCHESTRA convention of 
operation functionality. Additionally, the objective was to put the ―write behaviour‖ of 
the WFS at the operation level in the interface. Currently, in the OGC WFS 
specification, the write type of a given operation (i.e., insert, update, or delete) is 
specified as a parameter to a more generic operation (transaction operation).  


The lock mechanism offered by the WFS getFeatureWithLock and lockFeature must 
be implemented using the transaction interface offered by ORCHESTRA (see 
section 9.6.1). This approach ensures the same transactional model throughout all 
services within ORCHESTRA where (serializable) transactions are required. Finally, 
the setFeatureTypes, createFeatureTypes, and deleteFeatureTypes operations 
have been specified in addition to the OGC specifications in order to provide an 
interface to manage feature types. This is currently not possible via implementations 
following the OGC specifications.  


As the Feature Access Service does not define a specific query language or 
encoding for features, it is up to the implementation specification to define these. 


Prominent standards which can be used for query languages are: 


 ISO/IEC 9075:1995  Information technology -- Database languages – SQL 


 OGC 04-095 Filter Encoding Implementation Specification V1.1 


A commonly used standard for the encoding of (especially geographic) features is: 


 ISO 19136  Geographic information -- Geography Markup Language (GML) 


GML is based on the XML standard, which can be used for encoding as well: 


 W3C - Extensible Markup Language (XML) 1.0 
(http://www.w3.org/TR/2006/REC-xml-20060816) 


Examples of commonly used encodings for coverage features are:  


 GeoTIFF (http://www.remotesensing.org/geotiff/geotiff. html) 


 HDF-EOS (http://www.hdfeos.org) 


 CF-NetCDF (http://www.cgd.ucar.edu/cms/eaton/cf-metadata) 


Description The Feature Access Service allows interoperable read and write access on feature 
instances available in an OSN. Furthermore, the Feature Access Service provides 



http://portal.opengeospatial.org/files/?artifact_id=12582

http://www.w3.org/TR/2006/REC-xml-20060816

http://www.remotesensing.org/geotiff/geotiff

http://www.hdfeos.org/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


119/180 


an interface that may be inherited by more specific access services (e.g., sensor 
access service) using interface inheritance. The Feature Access Service offers in-
formation about: 


 The feature types it is capable to provide.  


 The supported encoding(s) to transfer requested or submitted feature data. 


 The query language and mechanism for filtered feature access.  


Features provided by the Feature Access Service are instances of a certain feature 
type defined in an ORCHESTRA Application Schema (OAS), which again is an in-
stantiation of an OMM_FeatureType (see section 8.7.2). This means that the Fea-
ture Access Service only permits access to information which is represented 
through feature types according to the rules of the ORCHESTRA Meta-Model 
(OMM). Whether information is remodelled on-the-fly by a software component or 
whether the features are actually stored in a feature store is not crucial for the Fea-
ture Access Service. Seen from the interface, the feature representation is a black 
box and is not visible for clients.  


The Feature Access Service allows queries to select certain features based on their 
type, certain attribute values and their spatial and temporal extent. The selection 
statement is encoded using a query language that supports all these functionalities 
(e.g., SQL including spatio-temporal statements). By selecting and retrieving fea-
tures, access to their attributes and operations is provided. 


Any Feature Access Service (and its possible profiles or possible inheriting inter-
faces) may support the update of existing feature instances, the creation of new fea-
ture and the deletion of existing features, and hence, in this case, it should also be 
transactional. It can also allow the creation, updates, and deletions of feature types.  


Feature instances and feature types are identifiable by a Unique Identifier (UID) that 
is unique with respect to at least one OSN (section 11.1.2). If a Feature Access 
Service is used to create a new feature instance or feature types it will also create 
an appropriate UID for this feature type or instance. Additionally, it is important to 
emphasize the requirements for Authorisation and authentication in order to support 
creation, deletion, and modification of feature and feature types (see section 7.5). 


The Feature Access Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 FeatureAccessService: selection, creation, update and deletion of feature in-
stances and feature types. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the requestor about the common and specific capabilities of a Feature Ac-
cess Service instance. Examples of specific capabilities are the supported feature 
types, the encoding of feature type requests, the encoding of returned feature collec-
tions as well as the supported query language. 


Interface FeatureAccessService 


getFeature 
Types 


Gets a description (the schema) of given feature types serviced by an Feature Ac-
cess Service instance in a specific encoding based on a query. 


setFeature 
Types  


Updates existing Feature Types matching a given query. 


createFeature 
Types  


Creates new Feature Types based on feature type descriptions. 


deleteFeature 
Types  


Deletes existing Feature Types matching a given query. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


120/180 


getFeatures Retrieves features and their attributes matching a given query. 


setFeatures  Updates existing features matching a given query. 


createFeatures Creates new features based on a feature collection and a given query. 


deleteFeatures  Deletes existing features matching a given query. 


Example  
usage 


A client accessing this service wants to retrieve all feature instances of roads for a 
particular region. The Feature Access Service is passed a getFeatures request for 
the specified area and feature type. A response is generated containing all valid fea-
tures. The features may be modified and submitted to the Feature Access Service 
as an update transaction (via the setFeatures operation). 


Comments As the RM-OA, in accordance with ISO 19123, considers coverages as subtypes of 
features, the Feature Access Service can also be used to access coverages.  


Table 15: Description of the Feature Access Service 


9.7.2 Map and Diagram Service 


 


Name Map and Diagram Service 


Standard 
Specifications 


The Map and Diagram Service is a functional extension of the following standards: 


 ISO/DIS 19128:2005  - Geographic information -- Web Map Server Interface  


 OGC 06-042 Web Map Service (WMS) Implementation Specification  V1.3.0 


The extensions refer to the generation of diagrams, legends, the detailed layer de-
scriptions that are needed for fine-grained user-styling, and the management of 
layers and styles. 


When being mapped to a W3C Web Service platform, the Map and Diagram Ser-
vice supports the following standards: 


Data sent to the Map and Diagram Service may be structured according to: 


 ISO 19136  Geographic information -- Geography Markup Language (GML) 


An alternate data source may be a feature store that provides feature instances ac-
cording to: 


 OGC 04-094 Web Feature Service (WFS) Implementation Specification) V1.1 


The following standards are used for the symbology definition: 


 OGC 02-070 Styled Layer Descriptor (SLD) Implementation Specification V1.0 


 OGC 04-095 Filter Encoding Implementation Specification V1.1 


These are extended with symbolizers for diagrams. 


Description The Map and Diagram Service is a service that visualizes, symbolizes and enables 
geographic clients to interactively visualise geographic and statistical data. Its main 
task is to transforms geographic data (vector or raster) and/or numerical tabular 
data (e.g. census data, result of a statistical analysis) into a graphical representation 
using symbolization rules.  


The main output of this service is an image document, which can be either in raster 
(e.g. jpeg, png) or symbolized-vector format (e.g. SVG). The meaning of the image 
document (the output of this service) is a general reference map (visualization of 
geographic information), a diagram (visualization of statistical data) or a thematic 
map (visualization of the spatial distribution of one or more statistical data themes).  


This service enables the integration of extended Style Layer Descriptor (SLD) 



http://portal.opengeospatial.org/files/?artifact_id=14416

https://portal.opengeospatial.org/files/?artifact_id=1188





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


121/180 


documents, which allows the definition of symbologies and symbolization rules at 
the feature level and allows also the integration of user data and remotely available 
data from other OA Services like the Feature Access Service (see section 9.7.1) 


The Map and Diagram Service provides the functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 MapDiagramService:  This interface allows a client to request and receive 
maps, diagrams and, optionally, information about the visualized features 
according to specifications, as well as to put/remove data and styles on the 
server for visualization. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the capabilities of a Map and Diagram Service instance. Ex-
amples of specific capabilities are a document containing, among others, a list of 
supported operations and predefined data layers available on the server with the 
corresponding layer information. 


Interface MapDiagramService  


getMap Returns a map of spatially referenced geographic and thematic information as an 
image document with the characteristics specified by the client application. The 
characteristics of the output image are specified by the outputAttributes parameter 
(image format, width, height, transparency, etc…) as well as the mapAttributes pa-
rameter (list of layers and their corresponding styles, coordinate reference system, 
global bounding box). Optionally, the map parameters can be provided using an 
SLD document.  


getDiagram 
(optional) 


Returns a diagram representation of numerical data as an image document with the 
characteristics specified by the client application. The characteristics of the output 
image are specified by the outputAttributes parameter (image format, width, height, 
transparency, etc…) as well as the diagramAttributes parameter (list of tabular data 
layers and their corresponding styles – diagram type, diagram characteristics). Op-
tionally, the diagram parameters can be provided using an SLD document. This op-
eration expects that the data to be rendered is in tabular format. 


getLayerDe-
scription 


(optional) 


Returns a layer description document containing schema information for a layer: at-
tribute names, types, units, statistical information when applicable (like value 
ranges, max, min etc.). This information is needed by clients in order to create their 
own styles and symbolization rules based on attribute values. 


getLayerLeg-
end  
(optional) 


Returns a legend symbol (corresponding to a layer) as an image document with the 
characteristics specified by the client application. The characteristics of the output 
image are specified by the outputAttributes parameter (image format, width, height, 
transparency, etc…) as well as the styledLayer parameter (name of the layer for 
which the legend should be generated and its corresponding styles). If the styles 
corresponding to the layer are not available on the server, then the styles have to 
be defined and sent again by the client (optionally, also as a SLD document). 


getFeatureInfo 
(optional) 


 


Returns information about the features rendered in a certain point of a map or dia-
gram layer as a document. The request must specify the attributes of the query 
point (x and y coordinates of the point in the image coordinate system, the layer 
name, and the number of features for which is expected to receive information) as 
well as a copy of the request that generated the image. 


setLayer  
(optional) 


Stores a new data layer on the server if the format of the sent layer data is sup-
ported (the supported formats for data input are advertised in the service capabili-
ties). For this operation the following information must be defined: the layer (name, 
data, data format, minimum and maximum scale, etc…), the duration for which the 
layer will be stored and also if it will be visible or not for other users. The operation 
confirms the success of the request by sending back to the client a Boolean 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


122/180 


―TRUE‖. 


deleteLayer 
(optional) 


Removes an existing data layer from the server. The operation confirms the suc-
cess of the request by sending back to the client a Boolean ―TRUE‖. 


setStyle 
(optional) 


Stores a new style layer on the server. For this operation the style must be defined 
either by sending the symbology or by referencing a remotely available symbology. 
Furthermore, the duration for which the style will be stored and also if it will be visi-
ble or not for other users must be defined. The operation confirms the success of 
the request by sending back to the client a Boolean ―TRUE‖. 


deleteStyle 
(optional) 


Removes an existing style from the server. The operation confirms the success of 
the request by sending back to the client a Boolean ―TRUE‖. 


Example  
usage 


A requestor accessing this service wants to create a map that shows the spatial dis-
tribution of the forest fire hazard zones (classified by the susceptibility level) with dif-
ferent colours. On top of this layer the requestor is interested to have the road net-
work, the hydrological network, the urban areas and a diagram layer with bar charts 
showing the number of historical forest fire cases. The hazard zones and the his-
torical forest fire data are accessible by means of a Feature Access Service and 
other layers are available on the server. The requestor now invokes a getMap op-
eration by passing a styled layer descriptor document, which defines the location of 
the data and the symbolization corresponding for each layer. The response of the 
service will be a map provided in the requested format. 


Comments It is beyond of the scope of this service to provide a human interface like the geo-
graphic viewer in the human interaction services. On the other side, other map ser-
vice instances, a geographic viewer or even a Web browser could act as a client to 
this service. 


Table 16: Description of the Map and Diagram Service 


9.7.3 Document Access Service 


 


Name Document Access Service 


Standard 
Specifications 


no corresponding standard known 


Description The Document Access Service supports access to documents of any type (textual 
documents, images,). A document descriptor (see section 8.7.5.2) is regarded as a 
specific kind of a feature type, therefore the Document Access Service is a speciali-
sation of the Feature Access Service (see section 9.7.1) which inherits only feature-
specific operations. Operations that manipulate feature types are not supported by 
this service, since the only feature type this service supports is 
OA_DocumentDescriptor. 


Compared with the Feature Access Service this service enables the conversion of 
documents and it guarantees that the returned feature instances are of type 
OA_DocumentDescriptor. 


The Document Access Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 DocumentAccessService:  Selection, creation, update and deletion of docu-
ments. 


Interface ServiceCapabilities 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


123/180 


get 
 Capabilites 


Informs the client about the common and specific capabilities of a Document Ac-
cess Service OSI. Examples of specific capabilities: a) the specific capabilities in-
herited from the Feature Access Service, b) information about supported document-
encodings and MIME types. 


Interface DocumentAccess 


get 
Documents 


Returns and optionally converts documents. 


This operation is an extension of the getFeatures operation of the FeatureAc-
cessService interface. In addition to the getFeatures operation it supports the con-
version of a document. 


The getDocuments operation retrieves features of the feature type 
OA_DocumentDescriptor. A query can be specified to retrieve certain documents 
that meet specific requirements. 


create 
Documents 


Creates new documents of type OA_DocumentDescriptor. 


This method is an extension of the createFeatures operation of the FeatureAc-
cessService interface. Since this operation provides no additional functionality, the 
detailed abstract specification is omitted. 


set 
Documents 


Updates existing documents. 


This method is an extension of the setFeatures operation of the FeatureAccessSer-
vice interface. Since this operation provides no additional functionality, the detailed 
abstract specification is omitted. 


delete 
Documents 


Removes existing documents. A query identifies which document to be deleted. 


This method is an extension of the deleteFeatures operation of the FeatureAc-
cessService interface. Since this operation provides no additional functionality, the 
detailed abstract specification is omitted. 


Example  
usage 


After a search in a catalogue-service a found document can be retrieved by call of 
the getDocuments operation. 


Comments None. 


Table 17: Description of the Document Access Service 


9.7.4 Sensor Access Service 


 


Name Sensor Access Service 


Standard 
Specifications 


 OGC 06-009r1 – Sensor Observation Service Implementation Specification 
V0.1.5 (Request for Comments) 


 OGC 05-086r2 - Sensor Model Language (SensorML) Implementation Specifi-
cation V1.0 (Draft proposed version) 


Description This service provides a basic interface for accessing sensor data, configuring a 
sensor and publishing sensor data. While the configuration and data publishing in-
terfaces of the Sensor Access Service are optional, the ability to find a certain sen-
sor and retrieve its values is mandatory. The Sensor Access Service is strongly re-
lated to the OGC Sensor Observation Service and therefore provides similar func-
tionality. 


The Sensor Access Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 SensorAdministration: Allows the client to add or remove sensors at the ser-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


124/180 


vice and also change the descriptions of already existing sensors. 


 SensorConfiguration: Provides functionality that allows the client to configure 
a specified sensor (e.g.: adjust measurement range, position) 


 SensorData: Allows the client to query for sensors that provide a specific 
functionality/type of measurement and retrieve these measurements. 


Interface ServiceCapabilities 


getCapabilities Informs the client about the common and specific capabilities of a Sensor Access 
OSI. Examples of the specific capabilities are: 


 configurationSupported: Flag whether the SensorConfigurationInterface is 
implemented 


 administrationSupported: Flag whether the SensorAdministrationInterface is 
implemented 


 configurationCacheSupported: Flag whether the checkSensorConfiguration 
operation caches valid configurations. 


 cacheTimeout: Defines the duration of time after which a cached configura-
tion will be deleted and the associated OA_SensorConfigurationID is invalid 


Interface SensorAdministration 


addSensor Add a new sensor with its specified description to the services. 


updateSen-
sorDescription 


This operation can be used to change the description of an already existing sensor. 


removeSensor Removes the specified sensor from the service. 


setSensor 
Data 


Publishes new sensor data at the service so that clients may retrieve it through an 
invocation of the getSensorData operation. 


Interface SensorConfiguration 


getConfigu-
ratioSchema 


Retrieves the configuration schema of the specified sensor. The schema describes 
format, mandatory and optional parts of a valid sensor configuration. 


getSensor 
Configuration 


Retrieves the currently active configuration for the specified sensor. 


setSensor 
Configuration 


Sets the configuration for the specified sensor. 


Interface SensorData 


getSensor Retrieves a list of identifiers of those sensors that match the specified requirements. 
These requirements are formulated in a query language. The query language is in-
dicated in the service‘s capabilities. 


getSensor 
Data 


Retrieves actual data (real measured or calculated/simulated data) of the specified 
sensor. 


getSensor-
DataTypes 


This operation returns the schemas for the data types that can be retrieved at this 
service. 


Example 
usage 


A sensor administrator wants to publish ozone measurement values so that an envi-
ronmental authority can retrieve it and produce a report. 


Comments The Sensor Access Service is a very basic service that does not include planning of 
series of measurements or notifications. Notifications can be supported by imple-
menting the notify operation of the AsynchronousInteraction interface of the OA Ba-
sic Service on the client side (see section 9.6.1). 


Table 18: Description of the Sensor Access Service 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


125/180 


9.7.5 Catalogue Service 


 


Name Catalogue Service 


Standard 
Specifications 


The ORCHESTRA Catalogue Service has been derived from the approach how 
meta-information is being handled in the OA (see section 8.4). Thus, the following 
series of catalogue standards has been considered, but the goal has not been to 
specify a service that is exactly compliant to one of these services. However, the 
functionality of the following standards for basic search and publication is supported 
by the ORCHESTRA Catalogue service such that it may be mapped on correspond-
ing service implementations. In addition, the ORCHESTRA Catalogue Service 
additionally provides a navigation interface for navigation in the catalogue contennt 


 OASIS UDDI Version 3.0.2 Specification (http://uddi.org/pubs/uddi_v3.htm) 


 OGC 04-021-r3 Catalogue Service Implementation Specification  V2.0.1 (Class: 
Abstract Specification) 


 OGC 04-017r1 Catalogue Services – ebRIM (ISO/TS 15000-3) profile of 
CSW (CAT2 AP ebRIM) V0.9.1 (Class: Engineering Specification) 


 OGC 04-038r2 ISO19115/ISO19119 Application Profile for CSW 2.0 ((CAT2 AP 
ISO19115/19) ) V0.9.3 (Status: Best Practices) 


 OGC 06-079r2 EO Application Profile for CSW 2.0 (Status: Pending) 


 OGC 06-131 EO Extension Package for ebRIM (ISO/TS 15000-3) Profile of 
CSW 2.0 (Status: Discussion Paper) 


The ORCHESTRA Catalogue Service does not define a meta-information schema 
by itself. The intention of the ORCHESTRA Catalogue is to provide a flexible ser-
vice type which can be adapted to the particular purposes of the application envi-
ronment. 


Description The Catalogue Service supports the ability to publish, query and retrieve descriptive 
information (meta-information) for resources (i.e. data and services), meta-
information about ORCHESTRA Source Systems (just like meta-information for 
other ORCHESTRA services) and instances of feature types that are referred to by 
extensions of the OMM_FeatureType, such as documents, schemas, dictionaries, 
equations and models.  


The Catalogue Service is not tied to a particular schema of a meta-information 
standard (e.g. ISO 19115); instead it supports application schemas for meta-
information (OAS-MI) that are designed according to the rules of the OMM. Due to 
independence from a specific meta-information standard the catalogue can be used 
to store meta-information about services and data according to the meta-information 
schema used in the catalogue. Therefore a catalogue instance can be used as a 
data catalogue, service registry or both if multiple meta-information types are used 
in the catalogue instance. The multilinguality of the catalogue is dependent on the 
multilingual capabilities of the meta-information schema used inside the catalogue. 


Meta-information entries in catalogues represent resource characteristics that can 
be queried and presented for evaluation and further processing by both humans 
and software. The Catalogue Service supports the discovery of registered re-
sources within an information community and returns binding information that allows 
a user to locate and access the resource (e.g. an URI). 


The Catalogue Service provides its functionality through the following interfaces: 


 ServiceCapabilities:  Informs about the common and specific capabilities. 


 CatalogueSearchInterface: The interface for search provides a means for 
searching information in the catalogue. The client asks the catalogue capa-
bilities for the available catalogue entry types. Each entry type is associated 



http://uddi.org/pubs/uddi_v3.htm

http://portal.opengeospatial.org/files/?artifact_id=5929&version=2

https://portal.opengeospatial.org/files/?artifact_id=7048

https://portal.opengeospatial.org/files/?artifact_id=7048

https://portal.opengeospatial.org/files/?artifact_id=8305

https://portal.opengeospatial.org/files/?artifact_id=8305

https://portal.opengeospatial.org/files/?artifact_id=8305





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


126/180 


with a meta-information type and its corresponding query languages. With 
this information the client can query the catalogue entry type with the appro-
priate query language. 


 CataloguePublicationInterface: The interface for publication is responsible for 
including, updating and deleting meta-information in the catalogue. It is push-
ing information into the catalogue. It provides operations for filling the cata-
logue. The needed meta-information could be created with some kind of 
meta-information editor, in which the user is specifying the meta-information 
about resources to be registered in the catalogue, or it could be collected 
through the collection interface. 


 CatalogueCollectionInterface: The collection interface provides operations, 
which are helpful for the automatic update of catalogue content in difference 
to the publication interface, which just fills the catalogue with given content. It 
is pulling meta-information into the catalogue. The operations in this interface 
should be able to be triggered from the outside of the catalogue and it should 
be possible to define a periodic update from the catalogue content. 


 CatalogueNavigationInterface: With the means of this interface, the user is 
looking for meta-information records managed by the catalogue by navigat-
ing from node to node. The search is driven by the catalogue itself: no query 
is performed. Note that the implementation of this interface makes the Cata-
logue Service a stateful service. 


 AsynchronousInteraction (OA Basic Service): Definition of a uniform way to 
request asynchronous execution of a service operation, e.g., for operations 
which are time-consuming or deliver results periodically. This interface is 
used by the collectMetaInformationPeriodic operation of the CatalogueCol-
lectionInterface. 


Interface ServiceCapabilities 


getCapabilities Informs the requestor about the common and specific capabilities of a Catalogue 
Service instance. Examples of specific capabilities are the information about query 
languages, the statement if the catalogue service instance is the main catalogue of 
an OSN (the ―OSN Catalogue‖ as introduced in section 11.1.3) and the meta-
information types used in the Catalogue Service instance. 


Interface CatalogueSearchInterface 


search Returns a list of identifiers for corresponding features, given a request expressed in 
a given query language. 


getMeta 
Information 


Returns associated meta-information instances, given some identifiers of features 
managed by the catalogue as returned by a previous search operation call. 


getQuery 
Domain 


Returns the domain of values that are applicable to a property of the meta-
information type. This is used by catalogue clients. Using this operation by giving 
the parameters of interest, the client shall know what values (e.g. list of values, 
range of values) are allowed for a meta-information property.  


getMeta 
Information 


Type 


Returns the associated meta-information type, given a list of catalogue entry types 
managed by the catalogue. 


Interface CataloguePublicationInterface 


createMeta 
Information 


Pushes information into the catalogue. The task of this operation is to insert cata-
logue content into the catalogue. The operation receives the meta-information to be 
stored and returns information about the update of the catalogue. 


setMeta 
Information 


Updates the catalogue content. The operation receives the meta-information types 
to be stored and returns information about the update of the catalogue. 


deleteMeta Deletes catalogue content from the catalogue. The input is a constraint to identify 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


127/180 


Information the catalogue content, which needs to be deleted. The operation returns information 
about the update of the catalogue. 


Interface CatalogueCollectionInterface 


collectMeta 
Information 


Pulls meta-information into the catalogue. The operation receives one reference of 
a source of meta-information and a catalogue entry type. This catalogue entry type 
is the type in which the meta-information is going to be stored in the catalogue. The 
operation returns information about the update of the catalogue. 


collectMeta 
Information 


Periodic (op-
tional) 


Receives one reference of a source of meta-information, the catalogue entry type 
and the time interval between two collections and a date to stop the collect. The 
catalogue entry type is the type in which the meta-information is going to be stored 
into the catalogue. The operation is processed periodically according to the given 
intervals and stores the resulting meta-information into the catalogue. The operation 
should be called asynchronously using the AsynchronousInteraction interface. The 
operation returns information about the update of the catalogue. 


Interface CatalogueNavigationInterface 


getNaviga-
tionRoots 


Returns the catalogue entries that can be used to start navigation inside the cata-
logue. If none is returned, no navigation will be possible. 


getNaviga-
tionEdges 


Returns all relationships that start from this node to other ones given an existing 
node in the catalogue. Each relationship is annotated by the kind of relationship, 
which adds some semantic information (e.g. broader, narrower, similar) to the link. 


Interface AsynchronousInteraction 


invokeAsync Starts asynchronous execution of the collectMetaInformationPeriodic operation of 
the CatalogueCollectionInterface. The invokeAsync operation returns immediately 
with an identifier (invocation ID) representing the asynchronous execution.  


abort Aborts execution of the previously invoked asynchronous collectMetaInformationPe-
riodic operation identified by its invocation ID. 


notify Passes a notification to the callback interface provider of the CatalogueCollectionIn-
terface. 


Example  
usage 


A possible usage scenario of the catalogue is the usage of a catalogue for discover-
ing maps and displaying them in a map viewer. The following steps need to be ac-
complished for this scenario: 


1. The catalogue needs to be initialized with meta-information about the maps and 
a service capable of displaying the maps. The meta-information can be written 
into the catalogue using operation createMetaInformation. 


2. The user performes a search for available maps on the catalogue using the 
search and getMetaInformation operations. 


3. The user performes a search for an available map viewer, again using the 
search and getMetaInformation operations. 


4. The user displays the maps in the map viewer, using the retrieved meta-
information about the maps and the map viewer.  


Comments The abstract specification leaves the question of the meta-information creation 
open. It could be created by the user with the help of a meta-information editor or 
automatically either within the catalogue inside collectMetaInformation or with the 
usage of other means and services inside collectMetaInformation. 


The support of multi-linguality depends on the meta-information schema used in the 
catalogue. 


Meta-Information about data and services inside the scope of an OSN will be de-
scribed with the help of the service capabilities. 


Table 19: Description of the Catalogue Service 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


128/180 


 


9.7.6 Name Service 


 


Name Name Service 


Standard 
Specifications 


 IETF RFC 1034 Domain Names - Concepts and Facilities 


 IETF RFC 1035 Domain Names - Implementation and Specification 


Description The objective of the Name Service is to encapsulate the implemented naming policy 
for service instances in an OSN. It is responsible for creating globally unique OSI 
names using a defined naming policy, e.g. by mapping between OSI names and 
corresponding platform-specific service identifiers. If the naming policy requires ad-
ditional information to ensure uniqueness of names, e.g. an OSN name, then such 
information may be provided by configuration and shall be hidden at the service in-
terface. 


A central Name Service instance for all OSNs is not required. Instead, there may be 
multiple Name Service instances, and each one may use a different naming policy, 
as long as global uniqueness of created names is guaranteed. If multiple Name 
Service instances are available within an OSN, they shall be related, i.e. each one 
can be used for name resolving within the OSN. It is possible to share a Name Ser-
vice instance among multiple OSNs. Within an OSN that is based on multiple ser-
vice platforms, a Name Service instance is available for each service platform and 
shall be used for name resolving within that platform. 


The Name Service provides its functionality through the following interfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 NameCreationAndResolution:  provides operations to create names and to 
resolve names given a platform-specific identifier (PSI) or vice-versa. 


 NamingServiceLinkage: provides operations to support the linkage between 
several Name Service instances. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the common and specific capabilities of a Name Service in-
stance. An example of a specific capability is the naming policy that is applied in the 
Name Service instance. 


Interface NameCreationAndResolution 


registerService An OSI is made known to the Name Service. The OSI is specified by its platform-
specific service identifier (PSI). It is related to the current service platform, i.e. the 
platform on which the Name Service is based. The operation returns a globally 
unique name for the OSI according to the implemented naming policy. From that 
point on, name resolution is possible for that OSI name and PSI.  


If a PSI is not provided as input parameter, an OSI is registered which has not yet 
an assigned PSI. In that case, it is assumed that the Name Service itself assigns a 
PSI to the OSI This PSI can be retrieved later by means of the getPSI operation. 


getPSI Given an OSI name, the PSI of that OSI is returned if known to the Name Service. 
The PSI is used to access the OSI within the current service platform. It may there-
fore be a PSI of a service gateway, if the OSI is based on a different platform. 


getName Given the PSI of an OSI, the name of that OSI is returned if known to the Name 
Service. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


129/180 


 


Interface NamingServiceLinkage 


linkName 
Service 


This operation establishes a linkage between this Name Service instance and an-
other one which is specified by its PSI within the current service platform. The link-
age is used to allow for cascading name resolving. This means if this Name Service 
instance has no information to map an OSI name to a PSI, or vice versa, it can redi-
rect the request to all linked Name Service instances. 


unlinkName 
Service 


This operation removes a linkage between this Name Service instance and another 
one which is specified by its PSI within the current service platform. 


Example  
usage 


An instance of a Name Service is useful in the case of OSNs that span multiple ser-
vice platforms connected through an OSN gateway.  


Comments none 


Table 20: Description of the Name Service 


9.7.7 User Management Service 


 


Name User Management Service 


Standard 
Specifications 


 IETF RFC 2251 Lightweight Directory Access Protocol (LDAP) (v3) 


The LDAP RFC standards span from RFC 2251 to RFC 2256. The following RFC 
has been used as a template to define subject attributes in the ORCHESTRA User 
Management Service: 


 IETF RFC 2256 - A Summary of the X.500(96) User Schema for use with 
LDAPv3  


Description The User Management Service is used to create and maintain subjects including 
groups (of principals) as a special kind of subjects. In general, subjects represent 
entities that need to be authenticated. They are not authenticated themselves but 
rather represent a point of contact and management feature for authentication and 
authorisation purposes. A subject is decoupled from authentication. This decoupling 
is done by separating principals from subjects. A principal is an identity of a subject 
and is defined in an Authentication Service instance.  


Management of subjects includes the association to principals as well as storage of 
subject attributes. Group management includes definition of principal memberships. 


The User Management Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 UserManagementService: Management of subjects and group subjects. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the common and specific capabilities of a User Manage-
ment Service instance. Examples of  specific capabilities are structural information 
on subject attributes specialised with respect to the different types of subjects: 


 for human users, e.g. first name, surname as well as contact information 


 for groups, e.g. administrative contact. 


 for services, e.g. administrative contact. Additional pieces of information may 
be defined by a policy provided by the respective OSN. 


Interface UserManagementService 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


130/180 


createSubject Creates a subject. After a subject has been created, at least one principal has to be 
created and associated with the subject. 


deleteSubject Deletes a subject including the deletion of all associated principals and subject at-
tributes. 


updateSubject Updates the subject itself. Can be used to change subject related information, e.g. 
subject attributes. 


createGroup Creates a group. Groups contain principals, not subjects. After creation a group has 
no members. Since a group is a special subject, principals have to be added. These 
can be managed using the addPrincipalToSubject and removePrincipalFromSubject 
operations. Group principals represent the identities of the group not group mem-
bers. 


Group members can be managed using the operations addPrincipalToGroup and 
removePrincipalFromGroup. 


deleteGroup Deletes a group without deleting group member principals. Principals of the group 
are deleted if not specified otherwise. 


updateGroup Updates the group. Can be used to change group related information, e.g. group at-
tributes. In order to manage group memberships use the operations addPrincipal-
ToGroup and removePrincipalFromGroup. 


getGroups Retrieves an enumeration of existing groups. 


addPrincipal-
ToSubject 


Associates an existing principal to an existing subject. This operation can also be 
used for the assignment of principals to group subjects (not group members). 


removePrinci-
palFromSub-


ject 


Removes a prior assigned principal from a subject. This operation can also be used 
to remove principals from group subjects (not group members). 


getSubjects Enumerates all subjects of the current service instance. Use the operation get-
Groups to exclusively retrieve group subjects. There is no operation to retrieve an 
enumeration of non-group subjects. This can be done by simply removing group 
subjects from the result. 


removePrinci-
palFromGroup 


Removes the association between a given principal and a given group. The re-
moved principal is not deleted in the corresponding Authentication Service. 


addPrincipal-
ToGroup 


Associates an existing group with an existing principal. The principal may reside in 
another User Management Service instance. 


Example usage A group of users concerned with forest fires manages maps describing fire damage. 
Another group of users working on flood risk analysis would like to access the maps 
because they are relevant for their planning. Therefore, read access is granted to the 
flood analysis group for all maps and features contained in the map layers managed 
by the forest fire group.  


Comments none 


Table 21: Description of the User Management Service 


9.7.8 Authorisation Service 


 


Name Authorisation Service 


Standard 
Specifications 


The following standard describes the main ideas of role based authorisation 
systems: 


 Ferraiolo David F. et. al: Proposed NIST Standard for Role-Based Access Con-
trol, ACM Transactions on Information and System Security, Vol. 4, No. 3, Au-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


131/180 


gust 2001, Pages 224–274. http://csrc.nist.gov/rbac/rbacSTD-ACM.pdf 


The Authorisation Service implements the ideas of what is called ―Core Role-based 
Access Control (RBAC)‖ in the NIST standard as close as possible. 


A further source of inspiration has been the following RFC as it has many 
requirements in common with ORCHESTRA UAA: 


 IETF RFC 2704 The KeyNote Trust-Management System Version 2 (Septem-
ber 1999) http://www.ietf.org/rfc/rfc2704.txt?number=270 


Description The Authorisation Service gives a compliance value as response to a service re-
questing an authorisation decision for a given authorisation context. 


The Authorisation Service provides its functionality through the following interfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 AuthorisationService: Includes all operations which are common to all Au-
thorisation Service implementations regardless to their underlying paradigms. 


 XAuthorisationAdministration (where X could be e.g. Rbac or Principal): The 
administration interface is specific to the underlying paradigm, e.g. support-
ing role management and thus may vary for different Authorisation Service 
implementations. In the following a representative administration interface for 
a role based Authorisation Service is presented. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the common and specific capabilities of an Authorisation 
Service instance. Examples of specific capabilities are the supported authorisation 
paradigms (e.g. principal permissions, or role-based access control). These para-
digms are accompanied by specialised by dedicated administrative interfaces. 


Interface AuthorisationService 


authorise Requests an authorisation decision for a given authorisation context. An authorisa-
tion context is required as an input parameter. An authorisation context is a set of 
information used by the authorisation service to determine the authorisation deci-
sion for a given request. The authorisation context can contain, for example, the re-
questing principal(s), name of the invoked operation, etc.  


A compliance value representing the advice how to treat a certain service request is 
delivered as an output parameter.  


Authorisation contexts and compliance values need to be agreed upon between a 
service and its Authorisation Service. 


Interface Administration 


createRole Creates a new role. Newly created roles are empty. Neither permission nor princi-
pals are assigned, yet. 


deleteRole Deletes an existing role. Permission and principal assignments are deleted as well. 


getRoles Retrieves an enumeration of existing roles. 


updateRole Updates an existing role, e.g. description, etc. 


assign 
Permission 


ToRole 


Assigns permission to a certain role. Permission and role have to exist already. 


unassign 
Permission 
FromRole 


Removes permission from a certain role. 


assignRole 
ToPrincipal 


Assigns an existing role to an existing principal. This indirectly assigns permissions 
associated with the role to the principal. 



http://csrc.nist.gov/rbac/rbacSTD-ACM.pdf

http://www.ietf.org/rfc/rfc2704.txt?number=270





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


132/180 


unassignRole 
FromPrincipal 


Removes the given role from a certain principal. This indirectly removes permis-
sions associated with the role from the principal. 


Example us-
age 


For a Format Conversion Service it may be necessary to restrict access to certain 
principals. The service provider might use an Authorisation Service to assign these 
principals‘ permissions to perform conversions. This could be done with a service 
type independent Authorisation Service implementation supporting operation level 
authorisation. The authorisation context of such a service needs to include at least 
requesting principal(s) as well as the requested operation. 


An Authorisation Service implementation which is specific to Format Conversion 
Services might additionally restrict the size of files to be converted depending on the 
requesting principal. The authorisation context for such a scenario would need to 
include the size of the file to be processed. 


In the domain of Risk and Crisis Management, another example is the following: 
Access rights like read, write, access, execute services, compose services or fea-
ture collections, modify rights etc. are granted to principals of a Civil Protection 
Agency for all resources that relate to the responsibility domain of the agency. In 
case of a hazard event, read access rights are extended to all resources related to 
the hazard, independent of their organisational assignment. 


Comments none 


Table 22: Description of the Authorisation Service 


9.7.9 Authentication Service 


 


Name Authentication Service 


Standard 
Specifications 


The following RFC standards have been taken into consideration as individual 
authentication mechanisms. The abstract ORCHESTRA Authentication Service 
Specification is intended to be independent from authentication mechanisms. Its 
current implementation uses a non-encrypted username/password mechanism but 
could also integrate a Kerberos authentication mechanism as described in RFC 
4120. 


 


 IETF RFC 4120 - The Kerberos Network Authentication Service (V5) 


 IETF RFC 4158: Internet X.509 Public Key Infrastructure: Certification Path 
Building 


 IETF RFC 4210: Internet X.509 Public Key Infrastructure Certificate 
Management Protocols 


 IETF RFC 4211: Internet X.509 Public Key Infrastructure Certificate Request 
Message Format (CRMF) 


 IETF RFC 4325: Internet X.509 Public Key Infrastructure Authority Information 
Access Certificate Revocation List (CRL) Extension 


 IETF RFC 4386: Internet X.509 Public Key Infrastructure Repository Locator 
Service 


 IETF RFC 4387: Internet X.509 Public Key Infrastructure Operational Protocols: 
Certificate Store Access via HTTP 


Description The Authentication Service verifies genuineness of principals using a set of given 
credentials. The authentication mechanism, which means the way authentication is 
performed, is up to the service implementation. 


Which credentials an Authentication Service needs as well as the way they are 
passed is specific to the authentication mechanism used. 


Session information returned after a successful authentication can be used to in-
voke services demanding authenticated principals. A service might use this informa-







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


133/180 


tion to perform authorisation requests. 


The Authentication Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 AuthenticationService: Includes all operations which are common to all au-
thentication mechanisms. 


 UsernamePasswordMechanism: Contains operations which are specific to 
the authentication based on a username/password authentication mecha-
nism. This interface should specify credentials as well as the way they are 
passed.  


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the common and specific capabilities of an Authentication 
Service instance. Examples of specific capabilities are the supported authentication-
mechanisms (e.g. username-password authentication, public-key authentication). 


Interface AuthenticationService 


login Initiates the validation of a certain principal for given credentials. Credentials have 
to be passed using the AuthenticationMechanism interface before calling the login 
operation. This needs to be done within a transaction. As an output parameter, the 
session information that can be used to invoke services demanding authenticated 
principals is provided. 


addPrincipal Creates a new principal. The principal representation is specific to the authentica-
tion mechanism used. 


For a username/password authentication the principal contains at least a username. 


remove 
Principal 


Deletes an existing principal. Removal of principals should not be done without up-
dating corresponding User Management OSIs (see section 9.7.7) as well as updat-
ing services having permissions associated to the principal to be deleted. 


A solution to this could be the use of administration tools to keep track of consis-
tency. 


update 
Principal 


Updates an existing principal. The principal to be updated as well as information to 
be changed, e.g. new username, shall be provided as input. 


add 
Credentials 


Adds credentials to a certain principals. Credentials are specific to the authentica-
tion mechanism used. 


For a username/password authentication credentials is a password. 


Update 
Credentials 


Updates credentials for a certain principal. The principal (username) for whom the 
credentials (password) should be changed as well as changed credentials shall be 
provided as input. 


deactivate 
Principal 


Deactivates a principal without removing it. The principal, e.g. username to be deac-
tivated and additional information, e.g. a time period for deactivation, shall be pro-
vided as input. 


activate 
Principal 


Activates an existing principal. The principal, e.g. username to be activated and ad-
ditional information, e.g. a point of time for activation, shall be provided as input. 


Interface UsernamePasswordMechanism 


setUsername Used to pass the principal to be authenticated. In a username/password authentica-
tion the username represents the principal. 


setPassword Used to pass the credentials to verify authenticity. In a username/password authen-
tication the password represents credentials. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


134/180 


Example us-
age 


A Format Conversion Service demands authorisation based on principals. There-
fore each service requestor has to pass session information including at least one 
authenticated principal. 


In order to invoke a service a subject needs to authenticate a principal having ap-
propriate permissions. The resulting session information can be passed to the ser-
vice. The service uses – among others - the session information to build the au-
thorisation context which is passed to the Authorisation Service. 


Comments It is part of the characteritsics of an OSN to determine if user authentication is nec-
essary and if so, by using which authentication mechanism. 


Table 23: Description of the Authentication Service 


9.7.10 Service Monitoring Service 


 


Name Service Monitoring Service 


Standard 
Specifications 


 Web Notification Service 03-008r2 


Description The Service Monitoring Service provides an overview about ORCHESTRA Service 
Instances (OSIs) currently running within an OSN. 
OSIs can either be monitored using a push or pull model, that is, the status informa-
tion is actively retrieved from an OSI by a service (this could be any service but 
preferably the Service Monitoring Service) or they are sent to the Service Monitoring 
Service. 


There is also the possibility to register an alert service and bind information of a 
specific monitoring status to that alert service. That way every time such information 
is received the alert operation of the alert service will be invoked. 


The Service Monitoring Service provides the functionality through the following in-
terfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 ServiceMonitoringService: Implements a push model monitoring and alert 
service binding 


 Monitorable Interface: A service must implement this interface in order to use 
the pull model monitoring. 


 Alert Interface: Used when monitoring values of a certain status are provided. 
This can for example be used to contact the service administrator via email 
or Short Message Service. 


Interface ServiceCapabilities 


getCapabilities Informs the client about the common and specific capabilities of a Service Monitor-
ing Service instance. Examples for specific capabilities are the supported statistics 
about the usage of a service in an OSN. 


Interface ServiceMonitoringService 


putStatus Gives any service the possibility to send monitoring information to the monitoring 
service. 


getConfigura-
tion 


Retrieves the current configuration of the monitoring service. 


setConfigura-
tion 


Sets the current configuration of the monitoring service. This includes information 
such as which services should be monitored, the binding between status informa-
tion and alert services. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


135/180 


getConfigura-
tionSchema 


Retrieves the schema that describes the format of the configuration. 


getStatistics Retrieves statistical information about the monitored OSN or single services. These 
statistical values are features in order to enable easy usage with other feature proc-
essing services. 


Interface Monitorable 


getStatus Retrieves the status of a specific monitored property of the implementing service. 


getConfigura-
tion 


Retrieves the currently active configuration of the monitored service. 


setConfigura-
tion 


Sets the current configuration of the monitored service (e.g., interval that must be 
between getStatus calls in order to have new values available) 


getConfigura-
tionScheme 


Retrieves the schema that describes the format of the configuration. 


Interface Alert 


alert This operation does not have a predefined functionality. It can either be sending an 
email or a Short Message Service or do some other mandatory processing. 


Example 
usage 


A service provider has her FeatureAccessService monitored by the ServiceMonitor-
ingService. Whenever the hard disk usage exceeds 90% of the storage available a 
monitoring value of status CRITICAL is produced. This value is retrieved by the 
ServiceMonitoringService and since the status has been bound to an alert service, it 
is sent there invoking the alert operation. This OSI that implements the Alert Inter-
face then sends a ShortMessageService to the service operator who can react to 
this situation. 


Comments Since the concrete procedure of reaction to an alert is application and most likely 
company dependant the semantic meaning of the alert operation can‘t be given. In 
some cases a simple email or other message will be passed to a responsible per-
son, in other cases some complex automatic reaction will take place in case of an 
alert. 


Table 24: Description of the Service Monitoring Service 


9.8 OA Support Service Descriptions 


9.8.1 Coordinate Operation Service 


 


Name Coordinate Operation Service 


Standard 
Specifications 


 ISO 19107:2003 Geographic information -- Spatial schema  


 ISO 19111:2003 Geographic information -- Spatial referencing by coordinates 


 OGC 05-008c1 Web Services Common Specification V1.0 


 OGC 05-013 Web Coordinate Transformation Service (WCTS) draft Implemen-
tation Specification (Discussion Paper) 


Description The Coordinate Operation Service changes coordinates on features from one coor-
dinate reference system to another (based on a 1-1 relationship). This includes op-
erations on datum and projection. A Datum is used as a basis for defining a coordi-
nate reference system and it specifies how the coordinate system is related to the 
earth. Examples are WGS84 and NAD1950. A projection is a method for depicting 
3-dimensional data (the shape of the earth) in 2 dimensions. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


136/180 


There are two principal variants of coordinate operations: 


 Coordinate conversion: An operation on coordinates that does not include 
any change of Datum. Examples of a coordinate conversion are a map pro-
jection between projected coordinates and geographic coordinates, or 
change of units such as from radians to degrees or feet to meters. 


 Coordinate transformation. An operation on coordinates that usually in-
cludes a change of Datum. The parameters of a coordinate transformation 
are empirically derived from data containing the coordinates of a series of 
points in both coordinate reference systems. This operation introduces er-
rors, hence allowing derivation of error (or accuracy) estimates for the 
transformation. 


The Coordinate Operation Service provides its functionality through the following in-
terfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 CoordinateOperation: Request to change coordinates of features, either by a 
coordinate conversion or a coordinate transformation. 


Interface ServiceCapabilities from (OA Basic Service) 


get 
Capabilities 


Informs the client about the common and specific capabilities of Coordinate Opera-
tion Service instance. Examples of specific capabilities are the supported conver-
sions and transformations. 


Interface CoordinateOperation 


check 
Operation 


Reports if an operation between two Coordinate Reference Systems is supported 
by the service implementation and, if so, if it is a conversion or a transformation. 


convert 
Coordinates 


Convert coordinates without any change of Datum. 


transform 
Coordinates 


Transform coordinates usually including a change of Datum. 


Example 
usage 


Coordinate conversion: A user wants to convert coordinates from UTM Zone 33, 
Euref89 to Geographic coordinates, Euref89. 


Coordinate transformation: A user wants to change coordinates from UTM Zone 33, 
ED50 to Geographic coordinates, Euref89 


Comments none 


Table 25: Description of the Coordinate Operation Service 


9.8.2 Gazetteer Service 


 


Name Gazetteer Service   


Standard 
Specifications 


 ISO 19111:2003 Geographic information -- Spatial referencing by coordinates 


 ISO 19112:2003 Geographic information -- Spatial referencing by geographic 
identifiers 


 OGC 05-035r2 Gazetteer Service - Application Profile of the Web Feature Ser-
vice Implementation Specification V0.9.3 (Best Practices Paper) 


Description The Gazetteer Service allows a user to relate a geographic location instance 
fied by geographic names (e.g. city, lake, region, street) with an instance identified 
by coordinates (e.g. a point, line, polygon or sets of these). A client delivers geo-
graphic names or describes them indirectly by means of a query (e.g. all cities in 



http://portal.opengeospatial.org/files/?artifact_id=15529

http://portal.opengeospatial.org/files/?artifact_id=15529





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


137/180 


Bavaria) and receives geographic objects with their corresponding coordinates or 
vice versa. 


The Gazetteer Service usually provides this functionality by accessing a directory of 
geographic identifiers that describes location instances, called a gazetteer. The 
conceptual model of the gazetteer is taken from ISO 19112:2003. Here, location 
instances contain both geographic identifiers and the geographic positions.  


Access to the gazetteer is performed through operations of the 
vice interface (see section 9.7.1). Thus, by the selection of location instances using 
the query mechanisms of the Feature Access Service the relationship between 
names (indirect spatial reference) and coordinates (direct spatial reference) is 
ried out. For the purpose of gazetteer maintenance, the Gazetteer Service supports 
changes and updates of a gazetteer, too. A sequence of these operations may, if 
required, be secured by a transactional interface. 


The Gazetteer Service provides its functionality through the following interfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 FeatureAccessService: provides read and write access to a gazetteer. 


 TransactionInterface: Secures sequences of change requests to a gazetteer. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the capabilities of a Gazetteer Sesrvice instance. Examples 
of specific capabilities are the provider organisation, the version and the geographic 
scope of the gazetteer. 


Interface FeatureAccessService (from Feature Access Service) 


 The operations of the FeatureAccessService interface are used to access to the lo-
cation types and instances of a gazetteer. 


Interface TransactionInterface 


 The operations of the TransactionInterface are used when a synchronised access to 
the gazetteer must be assured, especially in the case of the setFeature, createFea-
ture and deleteFeature operations. 


Example us-
age 


 


The Gazetteer Service may be used to integrate information in a risk assessment 
process if one of the source information items is geo-referenced by a geographic 
identifier (e.g. a statistical result based on a departmental area) and another by a 
geographic coordinate (e.g. measurement values at monitoring locations). In this 
scenario, the Gazetteer Service helps to generate comparable information that may 
be commonly processed. 


Comments A future version may consider a combination of a gazetteer with a thesaurus. Thus, 
the Gazetteer Service may use the operations of the Thesaurus Access Service 
(see section 9.8.6) in order to support multi-lingual gazetteers and fuzzy queries 
based on synonyms, quasi-synonyms or related terms, like ―give me the coordi-
nates of the city by the riverside of the Rhine that is close to Wiesbaden‖. 


Further enhancements may cover distributed gazetteers, possibly across borders 
i.e. in combination with the gazetteer-thesaurus combination discussed above. 


Table 26: Description of the Gazetteer Service 


9.8.3 Annotation Service 


 


Name Annotation Service 


Standard 
Specifications 


 W3C OWL Web Ontology Language Overview http://www.w3.org/TR/owl-
features/ 



http://www.w3.org/TR/owl-features/

http://www.w3.org/TR/owl-features/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


138/180 


 W3C-Resource Description Language http://www.w3.org/RDF/ 


 W3C RDF-Schema http://www.w3.org/TR/rdf-schema/ 


Description The Annotation Service automatically generates specific meta-information from 
various sources and relates it to semantic descriptions. Semantic descriptions are to 
be specified as elements of an ontology (e.g. concepts, properties, instances). 
Sources to be annotated can contain unstructured information (e.g. documents, 
texts) or structured information (e.g. databases, applications).  


Annotations refer to the concepts of an ontology, which is specified in an ontology 
language such as OWL and RDF-Schema (a subset of OWL). The content of an 
annotation can be stored as a simple string. In order to provide references to con-
cepts, instances and relation types stored in either a knowledge repository or a data 
ontology, the RDF syntax can be used. 


The generation of annotations of unstructured sources is based on automatic Infor-
mation Extraction, by means of which named entities occurring in documents and 
texts can be identified and normalized by means of Natural Language Processing. 
The process of extracting information and its assignment to ontological elements is 
based on background knowledge held in a repository, the (pre-populated) knowl-
edge base. In an OSN, such a knowledge base is accessible by means of the 
Knowledge Base Interface (see section 9.6.5). In addition to named entity identifica-
tion, the service can automatically discover and formalize new knowledge by ana-
lyzing the texts. In a certain application scenario, this knowledge can be used to 
populate a knowledge base, from where it can be queried by means of query lan-
guages. 


The semantic annotation of documents and texts enables applications such as high-
lighting and document viewing. 


The Annotation Service can automatically generate meta-information for structured 
sources such as databases, applications, etc. As a pre-requisite of the annotation 
service, the structure and content of such a resource is to be transformed into a 
data ontology which is compliant with the ontology containing the semantic descrip-
tions. An annotation is a mapping of an element of this ontology to an element of 
the data ontology.  


The semantic annotation of databases and applications enables applications such 
as exploration of the database structure and content by means of ontology query 
languages, or interpretation of query results by means of domain knowledge. 


The Annotation Service provides its functionality through the following interfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 AnnotationService: For sources to be annotated (e.g. documents, data-
bases), an additional document - called a "semantic document" - is estab-
lished which contains the annotations. Another operation of the service al-
lows annotation of texts; here, the annotations are delivered directly in the 
operation result; a semantic document is not generated. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the common and specific capabilities of an Annotation Ser-
vice instance. Examples of specific capabilities are the supported annotation strate-
gies (identification, population of new knowledge etc.), a list of mime types of docu-
ments which can be annotated, and a list of supported data and domain ontology 
formats. 


Interface AnnotationService 



http://www.w3.org/RDF/

http://www.w3.org/TR/rdf-schema/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


139/180 


create 
Semantic 


Document 
 


In a first step prior to annotation, a ―semantic document‖ is associated with the base 
document. A semantic document contains the content of the base document, the 
annotations and links to the base document and the corresponding domain ontol-
ogy. After creation, a semantic document only contains the content of the base 
document; the annotations and the links are entered through the annotateDocument 
resp. annotateDataOntology operations. 


annotate 
Document 


Generates annotations for a given semantic document for an unstructured source. 
The generated annotations are inserted into the semantic document.  


annotateText Generates annotations for a given text ―on the fly‖, i.e. they are not stored in a se-
mantic document. 


annotateData 
Ontology 


Generates annotations for a given semantic document for a structured source. The 
semantic document has previously been generated from its data ontology by means 
of a createSemanticDocument operation. The generated annotations are inserted 
into the semantic document.  


Example 
usage 


Risk maps usually can display various thematic layers. The graphical representation 
in the risk map is explained in an attached legend. In many cases, the user needs 
more textual explanation about what the values in a legend exactly mean. With a 
growing number of layers and legends, a map can contain a considerable amount of 
attached text; new layers, legends and texts can be added dynamically. Moreover, 
the text itself could contain technical terms that make it difficult to read, or users 
might only be interested in getting further information on items occurring in the text.  


- In this scenario, the attached text could be processed in an annotateText operation, 
which automatically sets up links of the terms occurring in the text to elements (con-
cepts, instances) described in a domain ontology. The user can navigate to the re-
spective ontology element and start browsing the ontology, thus getting help for in-
terpretation of the text.  


Comments The service does not maintain the set of sources that are to be annotated; this func-
tionality is expected to be provided elsewhere. For instance, annotation could be 
performed on a regular basis by means of a background job triggered at times of 
low load. The job checks the set of sources for changes that have been performed 
since the last run. Documents which have been changed are annotated again and 
old annotations are deleted. 


Table 27: Description of the Annotation Service 


9.8.4 Format Conversion Service 


 


Name Format Conversion Service 


Standard 
Specifications 


The following language is used to select data formats: 


 MIME Media Types (http://www.iana.org/assignments/media-types/) 


Description The Format Conversion Service allows the conversion of data given in one format to 
the corresponding data given in another format. Each conversion between a pair of 
formats requires a conversion algorithm. 


The problem is how two organisations are able to exchange their data (e.g. docu-
ments) without caring about the format the other side uses. This is the reason why 
the Format Conversion Service is needed. It allows the conversion from one data 
format (in case of documents e.g. MS-Word, OpenDocument, pdf,) to another one 
in order to easily exchange data between different organisations. Data could be text 
based, like a word document or a pdf, or it could be binary data like JPEG or WMF. 


The Format Conversion Service provides its functionality through the following inter-
faces: 



http://www.iana.org/assignments/media-types/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


140/180 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 FormatConversion: Provides the conversion operations. 


Interface ServiceCapabilities 


get 
 Capabilites 


Informs the client about the common and specific capabilities of a Format Conver-
sion Service instance. Examples of specific capabilities are the supported source 
and target formats and the conversion functionality between these formats. 


Interface FormatConversion 


convert Performs the conversion given by input and output MIME type. 


Example  
usage 


A time series of measurement values is available as an MS-Excel sheet and shall 
be converted into an XML file for further processing in an RM application.  


Comments It will be possible to build chains of format conversions. Example: If the conversion 
functionality png2gif, gif2jp and jpg2pdf are available, the call convert(doc1, png, 
pdf) will directly convert form a png to a pdf format. 


Table 28: Description of the Format Conversion Service 


9.8.5 Schema Mapping Service 


 


Name Schema Mapping Service 


Standard 
Specifications 


No standard service specification currently exists, on which the functionality of the 
Schema Mapping Service could be based. 


Several standards exist, on which a language for describing a schema mapping can 
be based. However, as the Schema Mapping Service does not define a specific 
schema mapping language, it is up to the implementation specification to define 
these. Prominent (draft) standards which can be used for describing a schema 
mapping are: 


 W3C XSL Transformations (XSLT), version 1.0 (http://www.w3.org/TR/xslt/) 


 XQuery 1.0: An XML Query Language, W3C Recommendation 
(http://www.w3.org/XML/Query/) 


 W3C SPARQL Query Language for RDF, W3C Working Draft, 4 Oct 2006 
(http://www.w3.org/TR/rdf-sparql-query/) 


Description The Schema Mapping Service provides functionality that is related to the mapping 
of features from a source into a target schema. It provides this functionality through 
two interfaces. 


The main functionality of the SchemaMapping interface is to execute a schema 
mapping. A schema mapping is considered to be ―the definition of an automated 
transformation of each instance of a data structure A into an instance of a data 
structure B that preserves the intended meaning of the original information‖.  


The service takes a feature collection and a description of the mapping from the 
source to the target schema as input and returns the features in the target schema.  


A schema mapping is described by 


 an identifier that is unique to the Schema Mapping Service instance; 


 descriptions of the source and target feature types; 


 the schema mapping language used to describe the mapping; and 


 a reference to the actual mapping. 



http://www.w3.org/TR/xslt/

http://www.w3.org/XML/Query/

http://www.w3.org/TR/rdf-sparql-query/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


141/180 


The Schema Mapping Service can be used to (1) directly map from one application 
schema to another one, or (2) to map from an application schema to a common (or 
community) schema (or vice versa). The latter can be used to perform an indirect 
mapping between two application schemas through the community schema. 


The mapping of features might also require that several feature collections be com-
bined. In order to support this, an optional concatenation operation is also included 
in the interface. 


The description of the schema mapping is required as an input. It is outside the 
scope of the Schema Mapping Service to automatically derive a mapping between 
two application schemas. 


The SchemaMappingRepository interface supports repository functionality for map-
pings between source and target feature types. Service can also serve as a reposi-
tory for mappings between source and target feature types. For this, operations for 
the creation (registration), retrieval, updating and deletion of schema mapping de-
scriptions are foreseen.  


The Schema Mapping Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 SchemaMapping: Execution of schema mappings and concatenation of fea-
ture collections. 


 SchemaMappingRepository: Creation, deletion, update and selection of 
schema mappings. 


Interface ServiceCapabilities 


getCapabilities Informs the requestor about the common and specific capabilities of a Schema 
Mapping Service instance. Examples of specific capabilities are the supported 
schema mapping language (for the Schema Mapping interface) and a list of the 
mappings registered with the service (for the Schema Mapping Repository inter-
face). 


Interface SchemaMapping  


mapFeatures Maps a feature collection to a target schema. 


concat Concatenates several feature collections. 


Interface SchemaMappingRepository 


createMapping Registers a new mapping with this instance of the Schema Mapping Service. 


getMapping Returns a (list of) mapping(s) matching a given query. 


setMapping Updates a specific mapping. 


deleteMapping Deletes all mapping matching a given query. 


Example  
usage 


A client wants to transform a data source in a local schema into a common agreed 
global schema. The client submits a feature collection and mapping rules specifying 
how to map the features into the required feature type. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


142/180 


Comments The described interfaces can be used in service implementations in different ways: 


 A service that only implements the SchemaMapping interface can be used to 
map feature collections in arbitrary schemas to a target schema using a 
mapping description that is provided by the requester.  


 A service that implements both interfaces can be used in the same way. In 
this scenario, the requester does not necessarily have to provide the map-
ping description themselves but can query the Schema Mapping Service for 
an appropriate mapping description.  


 A service that implements the SchemaMappingRepository interface and an-
other interface for creating or accessing feature collections (e.g. the inter-
faces of the Feature Access Service or the Processing Service) can be used 
to provide the output feature collections in different schemas. 


Table 29: Description of the Schema Mapping Service 


9.8.6 Ontology Access Service 


 


Name Ontology Access Service 


Standard 
Specifications 


The Ontology Access Service currently supports the following ontology language: 


 W3C OWL Web Ontology Language http://www.w3.org/TR/owl-features/ 


Description The Ontology Access Service supports the read access to the specification of a 
logical ontology (see section 8.6.1.2) and to export or import a complete specifica-
tion of a logical ontology into an ontology store. It provides a high-level view to the 
content of the ontology, allowing the client to get information about the taxonomy 
(classes and properties) defined by any stored ontology and to extract TBox and 
ABox vocabulary statements for human/machine interpretation.  


The Ontology Access Service is independent of any ontology technology, like the 
ontology language (e.g. OWL). However, the current version of the Ontology 
Access Service ignores ontological classes that are implicitly defined by rules of 
description logics (and only the explicit taxonomy is considered).  


Some typical usages of this service are: 


 Getting a list of the ontologies this service is providing access to; 


 Storing, updating or deleting available ontology entries; 


 Retrieving  a partially or fully a stored ontology; 


 Getting high-level information about ontology, such as the list of con-
cepts or the list of supported properties for a given concept and TBox 
(optionally ABox) Vocabulary statements. 


The Ontology Access Service provides the functionality through the following inter-
faces: 


 ServiceCapabilities: Informs the client about the common and specific capa-
bilities of the Ontology Access Service. 


 OntologyAccess: Supports the storage, retrieval, and deletion of ontologies 
as well as providing a high-level view on ontologies.  


 KnowledgeBase: Optional interface providing operations to query and update 
models contained in the knowledge base (see section 9.6.5). 


 TransactionInterface: Optional interface providing update requests to a 
knowledge base in a transactional context (see section 9.6.4). 



http://www.w3.org/TR/owl-features/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


143/180 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the client about the common and specific capabilities of an Ontology Ac-
cess Service instance. Examples of specific capabilities are the names of the on-
tologies available at the servers and the supported ontologies (e.g. OWL). 


Examples of specific capabilities if the Knowledge Base Interface is being sup-
ported comprise: 


 The possible representation formats of query results which can be requested 
by clients. 


 The types of the models supported by the service that supports the Knowl-
edge Base Interface (e.g. references to standards such as RDF, RDFS, 
OWL). 


 The query languages that can be used in knowledge base queries. 


 The inferencing capabilities of the knowledge base applied when computing 
query results. 


Interface OntologyAccess 


parse 
Ontology 


Given an ontology or a part (selection) of an ontology, it returns the hierarchy of 
classes (concepts) and properties that are defined by this ontology (a high-level 
view of the ontology). The format of the result could be, for example basic XHTML 
(without CSS) that is suitable for both direct display or further machine processing. 


getTBox 
Vocabulary 


Given an ontology or a part (selection) of an ontology, it returns a list of TBox 
statements ready to be used for creating a Knowledge Base. 


getABox 
Vocabulary 


(optional) 


Given an ontology or a part (selection) of an ontology, this optional operation 
returns a list of ABox statements ready to be used for creating a Knowledge Base. 


setOntology Stores a new ontology in the ontology store, if the ontology format is supported. The 
operation confirms the success of the operation by sending back to the client a Boo-
lean ―TRUE‖. 


getOntology Retrieves an existing ontology or a part (selection) of an ontology from the ontology 
store. 


Delete 
Ontology 


Removes an existing ontology from the ontology store. The operation confirms the 
success of the operation by sending back to the client a Boolean ―TRUE‖. 


Example 
usage 


A party is having an ontology about forest fires and decides to share it with other 
parties. By invoking the setOntology operation, the ontology can be stored in the on-
tology store of the Ontology Access Service. The stored ontology can then be made 
accessible to other services. For example, using the updateModel operation of the 
the Knowledge Base Interface can use the ontology to expand the knowledge base 
with information about forest fires. 


Finally, if a client possesses an ontology and wants to present its structure directly 
on the Web, the parseOntology operation can be called giving the ontology as a pa-
rameter. The response is a high level-view of the ontology hierarchy, classes and 
properties that can be immediately displayed or it can be further processed.  


Additionally assuming that a client requires on ontology about forest fires and as-
suming that there are already some ontologies in the ontology store, a client shall 
call the parseOntology operation for each of the stored ontology in order to get a 
high-level view of the available ontologies and decide if one of the ontologies is 
adequate for the purpose. Then the client could retrieve the full ontology or only a 
part of the required forest fire ontology and pass it to other services for further proc-
essing tasks. 


Comments The following are out of the scope of the Ontology Access Service: 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


144/180 


 Creating ontologies – this service manages the storage and the access to 
ontologies, but doesn‘t provide any tool to create ontology structures. This is the 
purpose of dedicated tools (like Protégé) and methodologies (as the one 
defined in deliverable D2.3.2). 


 Inferencing – this is the responsibility of inferencign engine that may be 
attached to an implementation of the Ontology Access Service.  


 Remote editing of ontologies – it is assumed that the client, once it is getting the 
ontology from this service, will use specialized tools or API (like Protégé or Jena 
API) to deal with the ontology structure and editing. Calling operations on a 
remote service to work with ontologies doesn‘t seem reasonable in terms of 
architecture or usability. A high-level structure can however be provided for 
clients that do not need any details but just overall information about the 
ontology (using ―parseOntology operation‖). 


Table 30: Description of the Ontology Access Service 


9.8.7 Thesaurus Access Service 


 


Name Thesaurus Access Service 


Standard 
Specifications 


 ISO-2788 Documentation -- Guidelines for the establishment and development 
of monolingual thesauri 


 ISO 5964:1985 Documentation - Guidelines for the establishment and devel-
opment of multilingual thesauri.  


Description The Thesaurus Access Service supports read and write access to a thesaurus that 
may be multi-lingual. A thesaurus can be thought of as a synonym and antonym re-
pository for data vocabulary terminology (Pollock, Hodgson 2004).  As such, a the-
saurus is a variant of an ontology restricting the relations used to a priori relation-
ships between terms, e.g. questioning whether the meaning of two terms is similar, 
broader, or narrower. In a multi-lingual thesaurus these a priori relationships are not 
restricted to one natural language, e.g. a term A may be a synonym to term B even 
if term A is available in English and term B in French. 


The Thesaurus Access Service is a run time service that provides on-the-fly insight 
into data meaning by cross-referencing the included terms and providing a human 
readable description. In this capacity the Thesaurus Access Service provides cru-
cial links in the resolution of unknown data semantics for requestors that are at-
tempting to resolve new schema relationships in newly discovered models. 


The requestor may choose the language in which the terms requested shall be pro-
vided. 


The Thesaurus Access Service provides its functionality through the following inter-
faces: 


 ServiceCapabilities:  Informs about the common and specific capabilities. 


 ThesaurusAccessService: Includes the operations for the read and write ac-
cess to a thesaurus. 


Interface ServiceCapabilities 


get 
 Capabilites 


Informs the requestor about the common and specific capabilities of a Thesaurus 
Access Service instance. Examples of specific capabilities are the supported lan-
guages and relations. 


Note:   The reason to provide these capabilities is less to reflect the services logic 
capabilities than to reflect the available data. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


145/180 


Interface ThesaurusAccessService 


getScope Gets a note attached to a term to indicate its meaning within an indexing language 
(i.e. a controlled set of terms selected from natural language and used to represent, 
in summary form, the subjects of documents; see ISO 2788). 


getPreferred 
Term 


Gets the preferred term when a choice between synonyms or quasi-synonyms ex-
ists. 


getSynonyms Gets the synonyms of a given term in a given language. 


getAntonyms Gets the antonyms of a given term in a given language. 


getTopTerm 


 


Gets the broadest class to which the specific concept belongs; sometimes used in 
the alphabetical section of a thesaurus (e.g. The concept African elephant would re-
turn animal in case of a biological thesaurus) 


getBroader 
Term 


Gets a concept having a wider meaning than the given term has. 


getNarrower 
Terms 


Gets a concept with a more specific meaning than the given term has. 


getRelated 
Term 


Gets an associated term, but that term is not a synonym, a quasi-synonym, a 
broader term or a narrower term. 


setScope Sets a note attached to a term to indicate its meaning within an indexing language 


setPreferred 
Term 


Sets the preferred term for another term 


setSynonyms Sets a synonym for a term in a given language. 


setAntonyms Sets an antonym for a given term in a given language. 


setTopTerm Sets the broadest class to which a term belongs 


setBroader 
Term 


Sets a broader term for a term. 


setNarrower 
Terms 


Sets a narrower term for a term. 


setRelated 
Term 


Sets an associated term for a term; that associated term is neither a narrower nor a 
broader nor a top term, nor is it a synonym, quasi synonym or antonym. 


Example  
usage 


An end-user can use the Thesaurus Access Service to determine synonym terms, 
which can subsequently be used to broaden a search. 


Comments none 


Table 31: Description of the Thesaurus Access Service 


9.8.8 Service Chain Access Service 


 


Name Service Chain Access Service 


Standard 
Specifications 


The standards related to the Service Chain Access Service are the following: 


 ISO 19119:2005 Geographic information – Services 


 OASIS Web Services Business Process Execution Language (WS-BPEL) 
http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wsbpel 


 XLANG - web services for business process design. 
Satish Thatte, Microsoft, 2001. 



http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wsbpel





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


146/180 


 Web Services Flow Language (WSFL). Frank Leymann, IBM, 2001. 


 W3C Web Services Description Language (WSDL) 1.1 
(http://www.w3.org/TR/wsdl) 


ISO 19119 defines the term ―service chain‖ and in particular, the computational ap-
proach that is used in the Service Chain Access Service is based on the aggregate 
service pattern (opaque chaining). This is due to the fact that: i) current workflow 
engines support this approach, ii) the aggregate service pattern seems to be the 
more suitable one for the service oriented paradigm.  


WS-BPEL is the most credited language for expressing concrete service chains, 
others are XLANG and WSFL (WS-BPEL inherits all the main design constructs of 
both languages). Actually WS-BPEL is the only one which is continuously extended 
(now version 2.0 is available) and it is also the only one equipped with stable en-
gines able to execute the service chain. 


Since service engines supply the execution of aggregated services by means of a 
single service, the WSDL standard is used to describe the corresponding interface. 


During the design of concrete service chain descriptions it could be necessary (e.g. 
in the case of very complex service chains) to start by using higher level languages 
for services choreography and then move to concrete and executable languages 
(e.g. WS-BPEL). The most credited standard for choreography is: 


 W3C Web Service Choreography Description Language (WS-CDL) 1.0. 
http://www.w3.org/TR/ws-cdl-10/ 


Description The Service Chain Access Service supports the creation of an executable service 
instance based on an explicit description of a service chain. The chain can then be 
executed as a single service. However, the execution of the service is outside the 
scope of the Service Chain Access Service (see comment below). 


Based on the Reference Model of Open Distributed Processing (ISO/IEC 10746-1 
RM-ODP) definition of chain of actions, a service chain is defined in ISO 19119 as 
a sequence of services in which, for each adjacent pair of services, occurrence of 
the first action is necessary for the occurrence of the second action. 


For the scope of this specification, it is important to distinguish between the descrip-
tion of a service chain (i.e. a document in some workflow language, e.g. BPEL), a 
deployed instance of a chain (i.e. an executable piece of code), and the actual 
process of executing the chain. 


The service specification is based on the aggregate service pattern where services 
appear as a single service which handles all coordination of the individual services 
that are part of the chain. The createServiceChain operation supports a service pro-
vider in creating an executable instance of an aggregate service based on an ex-
plicit service chain description, and optionally registering that service instance with a 
catalogue service. 


The Service Chain Access Service provides its functionality through the following in-
terfaces: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 ServiceChainAccessService: Selection of service chain descriptions and crea-
tion and deletion of aggregate services based on such descriptions. 


Interface ServiceCapabilities 


get 
 Capabilites 


Informs the requestor about the common and specific capabilities of a Service 
Chain Access Service. An examples of a specific capability is the supported work-
flow language in which the service chain description can be specified 


Interface ServiceChainAccessService 



http://www.w3.org/TR/ws-cdl-10/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


147/180 


createService 
Chain 


Deploys the service chain instance (an aggregated service) specified in a workflow 
document  


getService 
Chain 


Gets a descriptor of the service chain which includes meta-information (id, address, 
description, and workflow language) and the workflow description itself. 


deleteService 
Chain 


Deletes a service chain instance. 


Example  
usage 


A client creates an aggregate service which can access features and perform 
schema transformations. This service can now be accessed as one single service 
from a client.  


Comments In a service implementation the Service Chain Access Service and Processing Ser-
vice interfaces can be combined. The workflow language can then be used to define 
combinations of several processing operations of this service instance. Thus, a 
combination of related processing operations can be executed with one call without 
having to send the same data repeatedly to the service. 


Table 32: Description of the Service Chain Access Service 


9.9 OT Support Services 


Note: Some of the OT Support Services do not (yet) comprise descriptions of the service opera-
tions as the functionality of these services still needs further discussion within the ORCHESTRA pro-
ject. The result of this discussion will include the list of OA Services and other OT Support Services that 
may be used by a given OT Support Service in order to provide its functionality according to the func-
tional classification of the ORCHESTRA Services (see section 9.3).  


9.9.1 Processing Service 


 


Name Processing Service 


Standard 
Specifications 


The functionality of the Processing Service is based on the WPS OGC draft imple-
mentation specifications: 


 OGC 05-007r4 Web Processing Service (WPS), version 0.4.0 (discussion pa-
per) 


The interface of the WPS is that of a general purpose Web Processing Service 
which provides client access to pre-programmed calculations and/or computation 
models operating on spatially referenced data. Access happens through one ge-
neric execute operation that initiates a process based on a number of input pa-
rameter values and an output definition. The WPS concept of a single execute op-
eration has been adopted as is for the Processing Service.   


The processing may occur on features which can then be encoded according to 
given standards (see the Feature Access Service in section 9.7.1).  


Description The Processing Service describes a common interface for services offering proc-
essing operations on spatial (vector as well as raster) and non-spatial data. Exam-
ples of processing operations are statistical or geospatial calculations, image proc-
essing and analysis or, in general, computer algebra operations. 


The Processing Service provides mechanisms to identify the data required by the 
calculation, initiate the calculation, and manage the output so that it can be ac-
cessed by the client.  


The Processing Service provides its functionality through the following interface: 


 ServiceCapabilities: Informs about the common and specific capabilities. 


 ProcessingService: provides the means to get information on and to invoke a 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


148/180 


specific processing operation. 


Interface ServiceCapabilities 


get 
Capabilities 


Informs the requestor about the common and specific capabilities of a Processing 
Service instance. Examples of specific capabilities are the supported processing op-
erations (name and abstract). 


Interface ProcessingService  


getProcess 
Description 


This operation allows a client to request and receive detailed information about one 
or more processing operation(s) that can be executed by an execute operation, in-
cluding the input parameters and formats, and the outputs. 


execute This operation allows a client to execute a specified processing operation imple-
mented by the Processing Service, using provided input parameter values and re-
turning the outputs produced. 


Example  
usage 


A client wants to create a buffer zone around a forest during a fire and calculate the 
total area that is included in the buffer. The client queries the Processing Service for 
a description of the buffer processing operation (including its input and output types) 
using the getProcessDescription operation and then calls the buffer processing op-
eration using the execute operation. The Processing Service returns the result of 
the buffer processing operation either directly or as a reference (that can be used by 
the client to access the result). 


Comments In order to avoid having to send the same data repeatedly to the same instance of 
a processing service to execute several related operations, it should be possible to 
invoke a combination of related processing operations with one call to the service. 
This can be achieved by a service instance that implements both the Processing 
Service and the Service Chain Access Service (SCAS) interface. Thus, a SCAS 
workflow language can be used to define combinations of processing operations. 
The optimisation of ―local‖ operation calls is an issue that should be addressed at 
the implementation level. 


For the implementation of GIS functionalities, several (Open Source) GIS libraries 
exists, both for vector and raster data processing: 


 GRASS  http://mpa.itc.it/markus/grass50progman/node98.html,   (including 
OGC-conformal (Open Geospatial Consortium) Simple Features for inter-
operability with other GIS) 


 Terralib http://www.terralib.org/  


 GeoTools http://www.geotools.org/display/GEOTOOLS/Overview  


 GMT http://gmt.soest.hawaii.edu/  


 Map window http://www.mapwindow.com/  


 OpenEV http://openev.sourceforge.net/  


 Jump http://www.jump-project.org/  


 STARS: Space-Time Analysis of Regional Systems, http://stars-
py.sourceforge.net/whatisstars.html  


For the implementation of statistical functionalities, many tools and libraries are 
available. The mathematical algorithms used by the service operations could be 
taken from existing libraries, e.g: 


 OCTAVE  http://www.gnu.org/software/octave/  (Free, Opensource) 


 Statistical analysis libraries such as R (http://www.r-project.org/) or Matlab 
(http://www.mathworks.com). 


 List of free software available at 
http://members.aol.com/johnp71/javasta2.html 



http://mpa.itc.it/markus/grass50progman/node98.html

http://www.terralib.org/

http://www.geotools.org/display/GEOTOOLS/Overview

http://gmt.soest.hawaii.edu/

http://www.mapwindow.com/

http://openev.sourceforge.net/

http://www.jump-project.org/

http://stars-py.sourceforge.net/whatisstars.html

http://stars-py.sourceforge.net/whatisstars.html

http://www.gnu.org/software/octave/

http://www.r-project.org/

http://www.mathworks.com/

http://members.aol.com/johnp71/javasta2.html





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


149/180 


 A complete Statistical Analysis Software Survey available at 
http://www.lionhrtpub.com/orms/surveys/sa/sa1.html  


 See http://mathworld.wolfram.com/ for terminology and operator explana-
tion 


 


An alternative architectural approach could be taken such that no Processing Ser-
vice interface is described on the abstract level. Instead, the OMM would contain 
detailed rules about how processing service interfaces may be described by service 
providers. These descriptions should then include a process description, the input 
and output of the service and binding information, i.e. all information that is currently 
described in the Processing Service‘s getProcessDescription operation.  


 


In both cases and for a common understanding of processing operations, (basic) 
operations should be grouped and described in an operation taxonomy to be refer-
enced in the service specific capabilities. Guidelines could be e.g. the Map Algebra 
operations (Tomlin 1990) or the Egenhofer Operators (Egenhofer 1989). 


Table 33: Description of the Processing Service 


9.9.2 Simulation Management Services 


 


Name Simulation Management Service 


Standard 
Specifications 


 OGC 05-007r4 Web Processing Service (WPS), version 0.4.0 (discussion pa-
per) 


Description The Simulation Management Service allows the user to discover, specify input for, 
and control execution of a variety of simulation models.   


A simulation could be anything from a simple service which combines two numbers 
to a large simulation based on complicated mathematical models predicting the 
weather. The Simulation Management Service allows the implementer to allow oth-
ers to discover, execute and control their model in a simple and generic fashion. 
The Simulation Management Service allows the model to initially support multiple 
simulations (which also could be derivatives of a particular model). The user can 
then ascertain the specifics of what the model requires to run (including additional 
input services and a description of the parameters required). The Simulation Man-
agement Service then provides the user the ability to execute and check on the 
models progress. They can also modify the currently executing model to dynami-
cally modify the scenario.   


The Simulation Management Service provides its functionality through the following 
interfaces: 


 ServiceCapabilities:  Informs about the common and specific capabilities. 


 AsynchronousInteraction: Exploits the OA Basic Service to provide a mecha-
nism to invoke a simulation and obtain an ID for the simulation such that 
subsequent modification and query requests for that simulation can be made. 


 ProcessingService: Provides the operation to call the simulation run. 


 SimulationManager: Provides the interface to describe in detail the inputs re-
quired to invoke a supported simulation, as well as its outputs. The interface 
also provides operations to modify, suspend or resume an executing simula-
tion, and to query its status. 


Interface ServiceCapabilities 



http://www.lionhrtpub.com/orms/surveys/sa/sa1.html

http://mathworld.wolfram.com/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


150/180 


getCapabilities Informs the requestor about the common and specific capabilities of a Simulation 
Management Service instance. Examples of specific capabilities are the abilities of 
the simulation manager to include the types and versions of simulations supported 
by the simulation service  


Interface AsynchronousInteraction 


invokeAsync Starts asynchronous execution of a simulation. The invokeAsync operation returns 
immediately with an identifier (invocation ID) representing the asynchronous execu-
tion. In order to receive notifications a reference to a callback interface can be pro-
vided.  


abort Aborts execution of a simulation identified by its invocation ID. 


notify Passes a notification to the callback interface provider (to be implemented by the 
SimMS client). 


Interface ProcessingService  


getProcess 
Description 


Requests and receives detailed information about one or more processing opera-
tion(s) that can be executed by an execute operation, including the input parame-
ters and formats, and the outputs. 


execute Executes a specified processing operation implemented by the Processing Service, 
using provided input parameter values and returning the outputs produced. 


Interface SimulationManager 


modify 
Process 


Applies a change to one or more simulation parameters during the execution of a 
simulation, to take effect from a defined point within the simulation. The simulation 
to be modified is identified by its invocation ID obtained by the invokeAsync opera-
tion.  


This operation also allows requests to the simulation state to be made to either sus-
pend or resume execution.  


query 
Process 


Queries the state of a simulation identified by its invocation ID, to determine infor-
mation such as whether the simulation has been suspended, is executing or has 
completed. As an option, this operation also provides the percentage complete. 


Example us-
age 


The caller wishes to execute a model.  


 Through getCapabilities the caller can discover what simulations can be exe-
cuted.  


 On choosing a particular simulation the caller can then invoke describeProcess 
which reveals the requirements of the simulation.  


 The simulation is then invoked by invokeAsync which will execute the simula-
tion. If the input to the simulation is ill-formed or invalid the execution will be 
aborted and the caller will have to re-specify.   


 The calling system can poll via queryProcess to find out the status of the simu-
lation.  


 The caller may make dynamic modifications of the active scenario via modi-
fyProcess (e.g. moving the position of a spill or adding extra wind). 


 When the simulation has completed, the SimMS returns the simulation results 
through the client‘s notify operation.  


Comments none 


Table 34: Description of the Simulation Management Service 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


151/180 


9.9.3 Sensor Planning Service 


 


Name Sensor Planning Service 


Standard 
Specifications 


 NASA/JPL Sensor Webs Project (http://sensorwebs.jpl.nasa.gov/). 


 OGC 05-086r2 - Sensor Model Language (SensorML) Implementation Specifi-
cation V1.0 (Draft proposed version) 


 OGC 05-089r3 – Sensor Planning Service Implementation Specification 
V0.0.30 (Request for Comments) 


Description Following the OGC Sensor Planning Service Discussion Paper:  


―The Sensor Planning Service is intended to provide a standard interface to collec-
tion assets (i.e., sensors, and other information gathering assets) and to the support 
systems that surround them. Not only must different kinds of assets with differing 
capabilities be supported, but also different kinds of request processing systems, 
which may or may not provide access to the different stages of planning, schedul-
ing, tasking, collection, processing, archiving, and distribution of requests and the 
resulting observation data and information that is the result of the requests. The 
Sensor Planning Service is designed to be flexible enough to handle such a wide 
variety of configurations.‖ 


Example us-
age 


A client wants to gather a satellite scene of a certain sensor for a certain region. 
The Sensor Planning Service offers the client a way to define the required parame-
ters and to set up the respective notification mechanisms. 


Comments The specification of this service shall be aligned to the ongoing specification work 
within the OGC working group dealing with ―Sensor Web Enablement‖. 


Table 35: Description of the Sensor Planning Service 


9.9.4 Project Management Support Service 


 


Name Project Management Support Service 


Standard 
Specifications 


 ISO 10006:2003 Quality management systems -- Guidelines for quality man-
agement in projects 


 ISO 10007:2003 Quality management systems -- Guidelines for configuration 
management 


 PMI Project Management Body of Knowledge (PMBOK) (http://www.pmi.org/) 


 Project Management XML Schema (PMXML) 
(http://xml.coverpages.org/projectManageSchema.html) 


 dotProject - the Open Source Project Management tool 
(http://www.dotproject.net/index.php) 


Description The Project Management Support Service supports the planning and performance 
of operations (projects) in a cooperative distributed environment in cases where a 
desktop project management tool is not sufficient. Its purpose is to specify a project 
based on definitions according to the following dimensions of project management: 


- the structure of a project into project elements, i.e. the division of a project into 
sub-projects, work packages and tasks, the identification of logical dependen-
cies between the project elements, the assignment of costs and priorities to the 
project elements and the identification of project results and partial results. 


- the structure of the resources, i.e. the identification of the type and number of 



http://sensorwebs.jpl.nasa.gov/

http://www.pmi.org/

http://xml.coverpages.org/projectManageSchema.html





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


152/180 


resources (human resources, organisation units, machines, tools, computation 
resources, network bandwidth, ORCHESTRA features, ORCHESTRA services, 
meeting resources…), their characteristics (e.g. competences in case of hu-
man resources), their relationships (e.g. tool is part of a machine, person be-
longs to a organisation unit) and their location. 


- the time horizon, structured into units of, for example, months, weeks, days, 
hours, minutes in accordance with the plan horizon and the level of plan detail. 
Time oriented attributes include start and end dates of project elements, the 
identification of milestones and delivery dates for project results, the time de-
pendencies between project results, the (estimated and actual) duration of pro-
ject elements and the availability of resources during a given plan horizon. 


- the spatial dimension describing the location and movement of resources and 
where the project elements are to be executed. 


This service comprises the operations in the following operation groups: 


- to specify the project according to the three dimensions illustrated above with a 
close interlink to resources in an OSN. 


- to support queries about a project, like e.g. ―Which resources are assigned to 
which task ?‖, ―What is the pre-requisite to deliver project result A ?‖, ―Which 
document is required to carry out task B ?‖ 


- to specify and optimise the allocation of resources to different tasks based on, 
for example, their importance, their order in which they must be undertaken 
and competition for the same resources. 


- to optimise the timely delivery and to calculate and optimise the cost of the pro-
ject results 


- to specify and evaluate project scenarios based on multi-criteria optimisations 


The Project Management Support Service provides the following capabilities: list of 
supported project management techniques and their options, list of supported op-
erations structured according to operation groups 


Example us-
age 


 


The service may be used in the risk management domain to support the develop-
ment and evaluation of emergency plans in case of a natural hazard in a given area, 
e.g. the evacuation of a settlement in case of a threatening forest fire. 


Comments The service operations are based upon known project management techniques 
such as Gantt diagrams, PERT (Program Evaluation and Review Technique), CPM 
(Critical Path Method), PSP (Project Structure Plans) or Critical Chain Method. The 
applicability of more recent techniques such as that of the Business Communication 
Engineering tool Communigram


®
 will be investigated 


(http://www.communigram.com/). 


Table 36: Description of the Project Management Support Service 


9.9.5 Communication Service 


 


Name Communication Service 


Standard 
Specifications 


 IETF 3261 SIP: Session Initiation Protocol, June 2002 


 ITU T.120 Data protocols for multimedia conferencing   


 ITU H.323 Packet-based multimedia communications systems   


 OGC 03-029 OWS Messaging Framework (OMF) V0.0.3 


Description The objective of the Communication Service is to provide harmonised access to di-



http://www.communigram.com/





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


153/180 


rect user-to-user communication means based on multi-media technologies and 
data exchange between users. Harmonised access is required as these services 
are most often associated with collaboration within a user community according to a 
common community objective (e.g. a project) which is not supported by the existing 
tools and standards in a common approach. The service will directly support users 
and provide them with the support to conduct interactive collaboration.  


Examples include: 
- Presence Awareness: ability to determine who is on line at a given instant 
- Chat: ability for multiple users to type text data onto their local device and 


the text can be seen by other chat session participants 
- Instant Messaging: combining Presence Awareness and Chat 
- Polling / Surveying: providing the ability for a user to request a vote from 


other collaboration participants 
- White boards: to interactively manipulate graphical objects with other users 
- Application Sharing / Desktop Sharing / File Sharing: provides users with 


the ability to control a shared application remaining running on the sharers 
computer (for example to allow multiple users to update a single document 
interactively) 


- Shared Storage: provides multiple users with a common place to upload 
and download files 


- File Transfer: to transfer a file to another user or set of users 
- Shared Calendars / Scheduling: provides a group of users with a common 


calendar that all may directly interact with 
- Teleconference (audio and/or video) 
- Audio and/or Video Broadcast 


The Communication Service indicates the following capabilities to the requestor: the 
interactive collaboration services supported together with the operations and op-
tions related to each of them. 


Example us-
age 


Usage through OA Services e.g. 


1. Building of user communities and assigning access rights or 


2. News registration and communication service 


Potential uses of collaborative communication services include, e-learning, workflow 
management, decision support, mission planning and logistics. 


Comments It is to be decided if parts, at least, of this service are better classified as Human In-
teraction Components than as Workflow/Task Management Services. The compo-
nent could be a community portal integrating different communication services like 
e-mail, newsgroups or Internet Relay Chat. 


Table 37: Description of the Communication Service 


9.9.6 Calendar Service 


 


Name Calendar Service 


Standard 
Specifications 


 ISO 8601: 2004 Data elements and interchange formats -- Information inter-
change -- Representation of dates and times 


 ISO 19108:2002 Geographic information - Temporal schema. 


Description The Calendar Service performs arithmetical date/time functions, comparisons and 
format conversions. As most information in thematic domains has a temporal di-
mension with a reference to a calendar date (e.g. a measurement value), there is a 
need to support calculations using these dates (e.g. for time series analysis in case 
of measurement series). 


The service provides operations to convert between different representations and 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


154/180 


the usual one using year, month, day, hour, minute and second, 
- to compare two dates and to perform simple arithmetical functions like add-


ing/subtracting a number of days or seconds and computing the difference 
between two dates, 


- to create a calendar for any month, past, present and future, for easy use 
with other services, 


- to perform calculations between dates, reducing time computations to sim-
ple arithmetic. 


The Calendar Service indicates the following capabilities to the requestor: list of op-
erations supported, including the parameters and their expected format 


Example us-
age 


To try to recreate history or project the future one might need to know just what day 
was the first Sunday of November 1963 or what day of the week May 12, 2034 will 
be. The service allows a client to enter a date, to specify a number of days to be 
added (to check a future date) or subtracted from (to check a past date) and to get 
the new date. Or, it allows a client to specify a pair of dates in order to calculate the 
number of days between these. 


Comments none 


Table 38: Description of the Calendar Service 


9.9.7 Reporting Service 


 


Name Reporting Service 


Standard 
Specifications 


 OASIS Open Document Format for Office Applications (OpenDocument) 
(http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=office) 


Description The Reporting Service supports the creation of reports using actual information from 
other services according to a given template. The process to create a report can be 
of very high complexity.  Thus, instead of providing a generic report generator, this 
service offers a wrapper interface to existing products and tools for report genera-
tion. While many report formats are imaginable, for practical reasons only standard-
ised formats are supported.  


Example us-
age 


The result of a seismic risk assessment has to be publicised regularly in a format 
that has been standardised by a civil protection agency. The Reporting Service 
supports this task by allowing a template to be provided once according to the re-
port standard and filling the template based on the actual data. 


Comments For reporting there might be more than one source for input data. For simple reports 
a configurable service may be provided, for special cases subclasses of this service 
can be created. 


Table 39: Description of the Reporting Service 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


155/180 


9.10 OA Service Interaction Patterns  


The combined usage of the OA Services and the ORCHESTRA Information Models is illustrated by 
means of OA Service interaction patterns. Note that these interaction patterns are informative and just 
provide examples. It is not claimed that this is the only way of using and combining the OA Services nor 
that this way is complete. 


The following OA service patterns are currently described: 


 Controlled user access to resources 


 Rights-managed user access to resources 


 Integration of source system data into an OSN 


 Registration of resources in a catalogue 


 Generation of meta-information 


 Semantic catalogue component 


9.10.1 Controlled User Access to Resources 


9.10.1.1 Overview 


The controlled user access to resources is described by an interaction pattern that involves the User 
Management, the Authorisation and the Authentication Service (UAA services). This pattern assumes 
the following context and OSN characteristics:  


 Two departments of one organisation are attached to the same OSN and share a common UAA 
policy (see section 11.1.5). 


 The OSN comprises OSIs of a Format Conversion Service, a Document Access Service and a 
Feature Access Service that use one User Management OSI, one Authentication OSI and one 
Authorisation OSI in the following way: 


- The Format Conversion OSI is owned by Department 1. The Feature Access OSI and 
the Document Access OSI belong to Department 2. 


- Department 1 and 2 have administrators ―admin 1‖ and ―admin2‖, respectively.  


- Each administrator is responsible for the services of his department. 


- Department 1 and 2 have employees ―user 1‖ and ―user 2‖, respectively. 


- The Authentication OSI implements a username/password authentication mechanism. 


- The Authorisation OSI implements a role based authorisation paradigm. 


9.10.1.2 Scenario ―UAA Setup‖ 


This scenario cannot be described in detail because the setup procedure of each service depends on 
its implementation. Nevertheless, we can describe in principle how such a setup could look. 


1. The Authentication OSI is set up. During the setup the first principal called root principal is 
created. The root principal can be authenticated and the resulting session information is used 
during the setup of the Authorisation and User Management OSIs. 


2. Each UAA service OSI has a simple built-in authorisation component which grants all available 
permissions to the root principal until the actual Authorisation OSI has been configured. 


3. The root principal creates the admin principals ―admin 1‖ and ―admin 2‖. 


4. The next step is to register the User Management and Authentication OSIs as well as the 
Feature Access, the Format Conversion and the Document Access OSIs in the Authorisation 
Service. How this is done is specific to the Authorisation Service implementation. 


5. After the Services have been registered the root principal creates admin permission for 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


156/180 


principals ―admin 1‖ and ―admin 2‖ for the corresponding services. 


6. For security reasons the root principal will be deactivated. 


From now on ―admin 1‖ and ―admin 2‖ are able to administer their services. 


9.10.1.3 Scenario ―Create new User‖ 


1. The human ―John Doe‖ behind ―user 1‖ has demanded a user account. 


2. Admin1 creates a principal ―user 1‖ in the Authentication OSI. 


3. Admin1 creates a subject with John Doe‘s personal information as subject attributes in the User 
Management OSI. 


4. Admin1 assigns principal ―user1‖ the newly created subject using the addPrincipaltoSubject() 
operation of the User Management OSI. 


User1 is now a valid system user but cannot access any service due to the lack of corresponding 
service permissions. 


9.10.1.4 Scenario ―Permission Assignment‖ 


1. ―User 1‖ has requested permissions to access the Format Conversion OSI. 


2. ―Admin 1‖ assigns an operation permissions for the convert operation of the Format Conversion 
Service to the principal ―user1‖. 


―User 1‖ is now able to able to invoke the Format Conversion Service. 


9.10.1.5 Scenario ―Service Request‖ 


1. ―User 1‖ wants to invoke operation convert against the Format Conversion OSI. 


2. In order to receive session information ―user 1‖ (the client software of ―user 1‖ respectively) uses 
the Authentication OSI to authenticate his ―user 1‖ principal using his password. 


3. ―User 1‖ attaches the session information to the convert operation of the Format Conversion 
Service. 


4. The Format Conversion OSI parses the session information and extracts the reference to the 
Authentication OSI of the authenticated principal(s). 


5. The Format Conversion OSI makes a request to the Authentication OSI to verify session 
information. Verification of session information is implementation specific and might use session 
keys, for example. 


6. The Format Conversion OSI creates an authorisation context and passes it to the authorise 
operation of the Authorisation Service. The structure of the authorisation context is known to the 
application and specific to the permission types supported by the Authorisation Service. For a 
operation permission type, for example, the operation context includes the name of the operation to 
be invoked. 


7. The Authorisation OSI receives the authorisation context. It checks whether the given principal 
(included in the authorisation context) has sufficient permission to invoke the requested operation. 
This is done within an implementation and permission type-specific decision process. Evaluating an 
operation permission means, for instance, to check whether the given operation may be invoked. 
An evaluation of a time coverage permission might require a comparison between the current 
timestamp and a time coverage given in the permission associated with the current principal. 


8. The Authorisation OSI returns a compliance value representing the authorisation decision. 


9. The Format Conversion OSI interprets the compliance value. It throws an 
OA_PermissionDeniedException for a negative compliance value and performs the operation for a 
positive one. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


157/180 


9.10.2 Rights-Managed User Access to Resources 


Rights-managed user access is an extension of the controlled user access described above. It is based 
on two different preconditions: 


 The user or the according user group needs access rights to the resource which are stored in 
the Authorisation service 


 The user needs to either recognise or explicitly agree to a license agreement including usage 
constraints, based on a Creative Commons


5
  approach.  


The OGC GeoDRM Reference Model (GeoDRM, 2006) defines a right as a ―permission to act that 
makes principal entitled to act with respect to all or part of a specified resource for a certain period of 
time‖, whereas a license is defined as a ―representation of grants that convey to principals the rights to 
use specified resources subject to specified conditions‖. 


An example of a Geo Rights Management implementation architecture based on the Authorisation 
Service (see section 9.7.8) and Authentication Service (see section 9.7.9) is shown in  


Figure 35. 


 


 


Figure 35: Service Interaction Pattern for Geo Rights Management 


This architecture assumes that there is a Web service X (e.g. an OSI or an OGC service instance) and 
an corresponding client, both not capable of providing GeoRM functionality. These two components are 
wrapped with proxy components on the client side (Client Proxy) as well as on the service side 
(Gatekeeper). 


The Gatekeeper adds a license code to the service capabilities of X. A license code may contain  


 usage restrictions (similar to Creative Commons), 


 preconditions (e. g. authentication required, license acceptance required, …) and/or  


 obligations (e. g. time-limited access, restricted number of requests, …).  


Service requests for the Web service X are first received by the Gatekeeper which checks if the pre-
conditions are fulfilled (e. g. if a valid identity or license token is provided) and if the requesting identity 
is permitted to perform that request, i.e. the request has to be covered by the license and must be al-


                                                      


5
 http://www.creative-commons.org 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


158/180 


lowed by the policies stored in the Authorisation Service.  


If this is the case, the Gatekeeper applies the obligations (if existent, e.g. by counting requests and 
blocking after the maximum number of requests is reached) and forwards the request to the service. 
The service then produces the requested result, which is conveyed back to the client.  


The Client Proxy is responsible for interpreting the license preconditions and obtaining the required 
tokens, either an identity or a license token.  


In order to get an identity token, the Client Proxy accesses the Authentication Service with the 
credentials of the principal that represents the user or the client software component (see section 
7.5.2). The Authentication Service checks the authenticity of the principal and returns the identity token 
(including an authentication statement) if the check has been successful. 


In order to get an identity token, the Client Proxy accesses the License Broker. The License broker 
returns a license token that conatins a reference to the original license stored in the License Manager.  


If the Gatekeeper receives a request including an identity or a license token, it delegates the policy 
decision to the Authorisation Service by calling an authorise operation. Furthermore, it obtains the 
license referenced in the license token from the license manager. If the authorisation process is 
successful and the license covers the current request, then the policy decision is set to ―permit‖. If there 
are any obligations included in this license they are transmitted to the Gatekeeper as well. Thus, the 
Gatekeeper is enabled to enforce the policy decision in its entirety. 


9.10.3 Integration of Source Systems into an OSN 


Source System Integration has been defined in section 7.6 as the process of transforming an External 
Source System into an ORCHESTRA Source System. Thus, it starts in a native (i.e. non-ORCHESTRA) 
environment and results in a running OSI that represents the access point to the data and functionality 
of an External Source System within an OSN. This OSI must be built according to the rules that are de-
fined in the ORCHESTRA Service Meta-model (OMM-Service as described in section 9.2). 


Integration of one or more External Source Systems into an OSN means creating (at least) one new 
OSI. This instance is created by defining and implementing an ORCHESTRA conformant interface re-
sulting in a service that is able to interact with the External Source System. For the description of this 
OA pattern, the resulting OSI is called Source System Integration Service in order to have a single 
name for the entirety of services of this kind. It is a surrogate name since Source System Integration 
Services needn‘t share any predefined interface type (apart from the mandatory ServiceCapabilities in-
terface described in section 9.6.1) that could be used as a name instead. 


Note: The name Source System Integration Service neither states that any specific interface is im-
plemented, nor does it create a new service type, since a Source System Integration Service might as 
well be just an implementation of the service type Feature Access Service. 


Starting on an abstract level, the integration process of source systems can be described in the follow-
ing steps: 


1. Check the available interfaces types of the defined ORCHESTRA Service Types and select (if 
any) the interfaces that are suitable to represent the External Source System. (e.g.: a database 
might be best represented through a FeatureAccessService interface as specified in section 
9.7.1). This step is not restricted to selecting only one interface type, therefore it‘s valid for a 
Source System Integration Service to realise multiple interface types as defined in abstract 
specifications.  
According to the OMM-Service, at least the ServiceCapabilities interface must be selected in 
this step. If the External Source System provides operations that the integrated ORCHESTRA 
Source System shall offer to the OSN, continue with step 2. If there aren‘t any further opera-
tions continue with step 3. 


2. If the collection of selected interface types does not completely fit a predefined ORCHESTRA 
Service Type, a new service type shall be defined. 


3. There are two possible ways to integrate any operations that the External Source System pro-
vides. One of these must be chosen as illustrated in Figure 36. 


a. Extend the Source System Integration Service‘s interface with a new operation for 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


159/180 


every operation of the External Source System that should be integrated (and therefore 
visible in the OSN). 


b. Implement the SynchronousInvocation interface (see section 9.6.2) and add the exter-
nal operations as possible parameters to the invoke() operation. 


4. Transform the native meta-information that will be needed within the OSN into ORCHESTRA 
meta-information according to the rules defined in Annex B1 of the RM-OA (or define such 
meta-information from scratch if it is not available yet). A non-exhaustive list of such meta-
information that would be the contents of the service capabilities (e.g.: provider information, in-
terface self-description…), the OAS, the feature type descriptions, ontologies, parameter 
types… 


cd operation integration


«interface»


ESS_native_IF


+ SSop1() : void


ESS : External 


Source System «OSI»


Source System Integration Service


+ ...()


+ invoke(OAS_OperationRequest) : OAS_OperationResponse


«OSI»


Source System Integration Service (integrated)


+ ...()


+ SSop1_OMM_conformant() : void


«provides»


 
Figure 36: Operation Integration (upper right: SSI step 2a, lower right: SSI step 2b) 


 


5. For a given platform, provide an implementation specification for the interface types of the 
Source System Integration Service.  


6. Develop an OSC that corresponds to the implementation specification. This can be done either 
by mapping the interface operations to the native interface operation of the External Source 
System or by implementing the functionality from scratch. 


7. Create and start an instance of the Source System Integration Service (a respective OSI) within 
the OSN. 


Note 1: These steps are the tasks a source system provider must perform in order to integrate his 
External Source System into an OSN when starting on abstract level. Of course, these steps can be 
supported by tools in order to result in a (semi-) automatic integration process. 


Note 2: A corresponding integration process could be defined when directly starting on platform-
specific level. 


Note 3: During all of those steps existing interface types of OA/OT-Services and also 
implementations of OA/OT-Services might be used to facilitate the tasks that need to be performed in 
the integration process (e.g.: a Schema Mapping Service might be used to transform a database 
schema into an OAS). But implementations of the OA/OT-Services are not required to support the 
integration process in any way, since this would mean that those services have to operate outside the 
specified boundaries of ORCHESTRA. 


Figure 37 shows the basic and common interfaces among all integrated source system integration ser-
vices. Since the type of the External Source System is unknown, it is impossible to know the interfaces 
needed for all possible External Source Systems. Therefore a generic and also extendable interface 
must be given as a base. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


160/180 


All that is predefined is the required service self-describing operation getCapabilities().  


cd Source System Integration Service


«interface»


ServiceCapabilities


+ getCapabilities(request :OAS_GetCapabilitiesRequest) : OAS_MI_CapabilitiesDocument


«interface»


SourceSystemIntegrationService


+ getCapabilities(request :OAS_GetCapabilitiesRequest) : OAS_MI_CapabilitiesDocument


 


Figure 37: Source System Integration Service 


In order to be able to support the wide heterogeneity of available External Source Systems, the Inter-
face of the Source System Integration Service can be extended as the integrator desires. This includes 
inheriting and implementing interfaces of predefined OT/OA-Services as described in the RM-OA as 
well as adding new operations unrelated to any predefined interface type. Of course the meta-
information, especially the interface description in the service capabilities, must reflect this. Thus, it con-
tains all operations that are available at the service, having in mind that there might not be a hand-
written specification of the service in case of a fully automated source system integration process.  


9.10.4 Generation of Meta-information 


Several OA Services provide the means for the generation of meta-information. Figure 38 outlines 
known methods for that purpose and assigns the respective OA Service to each method. 


 


Figure 38: Generation of resource meta-information 


Meta-information is generated for various types of resources, being feature or service instances, ac-
cording to a well-defined purpose (see section 8.4). The main criteria for the classification of methods 
are the distinction between manual and automatic (or semi-automatic) approaches.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


161/180 


Manual generation of meta-information is usually carried out by a human user, who inserts values into 
certain fields of meta-information of an input mask. On the one hand, meta-information may consist of 
simple attributes, such as keywords for discovery purposes, which can be used to find resources by 
applying a boolean match. The attributes may then be structured according to an application schema 
for meta-information (OAS-MI, see section 8.4). Concrete examples are meta-information standard 
such as Dublin Core or ISO 19115, or ISO 19119 in case of service meta-information. The Catalogue 
Service (see section 9.7.5) can be used for the publication of meta-information for discovery purposes. 
The publication can be performed manually using a GUI-based client component that accesses the 


CataloguePublicationInterface (see method  in Figure 38) or semi-automatically by means of the 


CatalogueCollectionInterface (see method  in Figure 38). These two alternatives are described in 


more details in section 0 below. 


A more advanced method for describing resources is to edit statements which can be added to a 
knowledge base by means of operations of the Knowledge Base Interface (see section 9.6.5), where 
they are stored as a knowledge graph. An implementation example of such a knowledge base is an 
RDF (Resource Description Framework) Triple Store. The statements describe the relationship from re-
sources to concepts of an ontology and their relationship to other resources as well. Thus, this kind of 
meta-information is on a semantic level, as it can be interpreted by an ontology. The Knowledge Base 


Interface (see section 9.6.5) allows a user to manually update the knowledge base (see method  in 


Figure 38).  


However, the OA also aims at supporting an automatic approach by means of the Annotation Service 
(see method  in Figure 38 and the service description in section 9.8.3). The Annotation Service identi-
fies named entities in texts and automatically establishes relationships between resources and con-
cepts and between resources among each other. The information in such a knowledge base can be ex-
plored by browsing the ontology using dedicated navigation tools or by formulating exact queries in an 
ontology query language. 


As a future possibility, currently not supported by an OA Service, is the possibility to enrich a meta-
information schema by references to concepts of an ontology, illustrated as method  in Figure 38. 


9.10.5 Registration of Resources in a Catalogue 


Registration means the creation of an associated meta-information entry of a resource (data or service) 
in a catalogue in order that a user in an OSN may discover the resource. The registration of the re-
sources can be achieved via the CataloguePublicationInterface and the CatalogueCollectionInterface of 
the Catalogue Service (see section 9.7.5), which provides means for including, updating and deleting 
catalogue entries. The CataloguePublicationInterface provides a push paradigm and the CatalogueCol-
lectionInterface provides a pull paradigm.  


 


Figure 39: Generation of meta-information entries (push paradigm) 


The meta-information in a catalogue is structured according to an OAS-MI that the catalogue is able to 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


162/180 


handle. The following figures illustrate an example in which an OAS-MI is structured according to the 
capabilities of ORCHESTRA services which need to be described in the catalogue. In this example, the 
meta-information is extracted from an OSI by calling the operation getCapabilities() contained as part of 
the ServiceCapabilities interface of any OSI. 


Now, the push paradigm is supported by the operations createMetaInformation() and setMetaInforma-


tion(). By calling these operations software components of ORCHESTRA Applications (see case  in 


Figure 39) or any OSI itself (see case  in Figure 39) can directly store meta-information in the cata-


logue.  


 


Figure 40: Generation of meta-information entries (pull paradigm) 


The pull paradigm is supported by the operations collectMetaInformation() and collectMetaInformation-
Periodic(). By calling these operations software components of ORCHESTRA Applications can trigger 


the catalogue to pull meta-information from an OSI (see case  in Figure 40) or an OSI itself can trig-


ger the catalogue to pull the meta-information (see case  in Figure 40). CollectMetaInformation() is 


used for a single pull, while collectMetaInformationPeriodic() is used for periodic updates of the re-
sources.  


9.10.6 Semantic Catalogue Component 


An OSC called ―Semantic Catalogue‖ may be built by combining various instances of the ORCHESTRA 
Catalogue Service (see section 9.7.5) and the Ontology Access Service (see section 9.8.6) in a service 
interaction pattern as illustrated in Figure 41. A Semantic Catalogue supports the ability to improve the 
search for resources by by exploiting the conceptual relations between concepts defined in an ontology. 
The ontology should represent (a subset of) the thematic domain of the user. 


On the front-end to a client application, the Semantic Catalogue provides an interface in form of the 
ORCHESTRA Catalogue Service and, on the back-end, it offers access to more than one catalogue 
service instances, possibly with different associated meta-information models, e.g. OGC Catalogue 
Services in the form of the ebRIM and ISO application profiles, any other non-OGC compliant catalogue 
service (e.g. UDDI in a Web service environment) or even an Intenet search engine. However, this 
structural diversity should be transparent to the user of the Semantic Catalogue component by means 
of cascaded catalogue OSIs. 


First, a query to the Semantic Catalogue is analysed in a semantic query processor that uses the On-
tology Access Service to expand the query according to related concepts in an ontology. It then gener-
ates individual queries and directs them to the appropriate meta-information sources. The response 
(result sets in the catalogue‘s own structure) is then assembled and structured by a semantic report 
generator and returned as query response to the client.  


Furthermore, there is the option to use the Annotation Service (see section 9.8.3) in order to annotate 
selected textual results against the ontology that has been used in the query expansion in order to as-
sess and interprete the results in the context of the thematic domain. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


163/180 


  


 


Figure 41: Example of a Semantic Catalogue 


9.10.7 Naming in Dynamic OSN Environments 


In the following, a usage of the Name Service (see section 9.7.6) in the case of dynamic OSN environ-
ments is described. Dynamic OSN environments are characterised by the fact that the assignment of 
OSIs to one or more OSNs may change during the lifetime of an OSI (e.g. due to a central OSN admin-
istrative decision or due to an autonomous decision of an OSI). 


Note: Version 3 of the RM-OA will investigate how an OSI knows about the used naming policy for 
its own name and its (current) membership in an OSN. 


In order to support a dynamic OSN environment, an interaction of Name Service instances is required. 
Consider the following cases:  


 An OSI is added to OSN A and is not already registered at any Name Service instance. In this 
case, the OSI can be registered at the Name Service instance of OSN A. The Name Service 
creates a globally unique name for the OSI and can then be used to resolve the name. 


 One or more OSIs are added to OSN A and these OSIs are already registered at a Name Ser-
vice instance of OSN B. As these OSIs already have names, the Name Service instance of 
OSN A is not used to create OSI names. Instead, a mechanism is needed to create a linkage 
between the Name Services instances of OSN A and OSN B. Such a mechanism is further de-
scribed below. 


 An OSI is removed from an OSN. If the OSI is not member of another OSN, it may be deregis-
tered from the Name Service instance of the OSN, which means that it will lose its name. How-
ever, it may also be useful to keep its name and registration in order to use the OSI in another 
OSN. 


 A new OSN is created and OSIs are added as described above. The new OSN may establish a 
new Name Service instance or may reuse an existing one of another OSN. 


 An OSN is removed which implies that all its OSIs are removed from that OSN. The Name Ser-
vice instance of the OSN may still be used by another OSN. 


The following figure illustrates a linkage between two Name Service instances. 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


164/180 


 


Figure 42: Linkage between Name Services 


 


The figure shows two OSNs which are initially separated. Each OSN has its own Name Service in-
stance indicated by A:NS and B:NS. Each OSI is registered at the Name Service instance of its OSN, 
indicated by the connecting lines. Now, B:osi2 from OSN B is in addition added to OSN A. 


As the added OSI is registered at B:NS, a linkage is established between A:NS and B:NS. The linkage 
is used for name resolution in the following way. In order to resolve a name within OSN A, A:NS is 
used. If A:NS is not able to resolve the name among its registered OSIs, it uses the linkage and directs 
the request to B:NS. Thus, cascading name resolution is performed. This allows the resolution of the 
name of B:osi2 using A:NS. 


Note that the linkage may be used in both directions for cascading name resolution. B:osi2 may use its 
original Name Service B:NS to resolve names within OSN A and OSN B. 


A:NS and B:NS may use different naming policies. 


To support linkage of Name Service instances, the Name Service has an additional interface called 
NameServiceLinkage that includes the following operations: 


linkNameService(PSI) 


This operation establishes a linkage between this Name Service instance and another one which is 
specified by its PSI within the current service platform. The linkage is used to allow for cascading 
name resolving. This means, if this Name Service instance has no information to map an OSI name 
to a PSI or vice versa, it can redirect the request to all linked Name Service instances. 


unlinkNameService(PSI) 


This operation removes a linkage between this Name Service instance and another one which is 
specified by its PSI within the current service platform. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


165/180 


10 Technology Viewpoint 


According to the ORCHESTRA Reference Model as introduced in section 5.3, the Technology View-
point specifies the technological choices of the service platform and its operational issues. Thus, when 
considering the design process of the ORCHESTRA Service Network, it contains the specification of 
the service platform and its characteristics upon which the ORCHESTRA Services and ORCHESTRA 
Application Schemas are to be mapped. 


The present RM-OA document, being a reference model for the design of ORCHESTRA Service Net-
work, only contains the guidelines and requirements for the platform specification. It comprises the fol-
lowing parts: 


 a specification of all properties that are required to be compliant with the SOA Reference Model 
of OASIS, 


 a specification of how the UAA mechanisms are intrinsically supported by the platform, 


 agreement on the usage of specific data formats (e.g. non-GML representation of coverages),  


 a specification of a bijective mapping of the platform-specific schema language from and to 
UML (both for information models and for service types) according to the OMM, 


 a specification of possible restrictions of the platform, e.g. to be considered in the service map-
ping process. 


10.1 Specification of Platform Properties 


Being a realisation of the OMM meta-class OMM_PlatformSpec (see section 9.2.2.2), a platform speci-
fication has to define the following set of properties, which are considered in the context of the OASIS 
Reference Model for Service Oriented Architecture 1.0 (SOA-RM, 2006). As an important example see 
the platform specification as part of (ORCH-ImplServ 2007) for the ―ORCHESTRA Web Services Plat-
form‖. 


1. RM-OA Version 


Version number of the RM-OA to which the platform specification refers to. 


2. Platform Name 
 
Name of the platform. In case of a standard platform, a reference shall be provided. 
 
Example: ―ORCHESTRA Web Services Platform‖ 


3. Interface Language 


Specification of the formal language used to define SOA-RM Service Interfaces. In case of a 
standard language, a reference shall be provided. 


Example: Web Services Description Language (WSDL) 


4. Execution Context 


Specification of the SOA-RM Execution Context. The Execution context is an agreement be-
tween service providers and consumers. It contains information that can include preferred pro-
tocols, semantics, policies and other conditions and assumptions that describe how a service 
can and may be used. This includes, for example, the specification of the transport and the se-
curity layer, the format of the messages exchanged between service providers and consumers, 
etc. In case of a standard SOA-RM Execution Context, a reference shall be provided. 


Example: SOAP 1.2 HTTP binding for message transport, WS-Security in conjunction with SLL 
shall be used if encryption of messages is required, etc. 


5. Schema Language 


Specification of the schema language used to define SOA-RM Information Models. The schema 
language defines the platform dependent encoding of a platform independent information 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


166/180 


model as specified by an ORCHESTRA Application Schema. 


Example: XML-Schema and a GML Profile based on the GML Simple Feature Profile. 


6. Schema Mapping 


Specification of how to map the abstract level (UML) to the schema language used for this par-
ticular platform. 


Example: XML-Schema/GML encoding rules for ORCHESTRA Application Schemas (ISO 
19136 Annex E and F + additional rules for non-GML types) 


7. Information Model Constraints 


Specification of the constraints on the SOA-RM Information Model, especially the constraints on 
the message format required to accomplish the SOA-RM Action model. 


Furthermore, in the following sections some specific aspects are discussed that have to be considered 
on a platform level in order to increase the level of interoperability. 


10.2 Selection of User Management, Authentication and Authorisation Mechanisms 


The RM-OA concept for User Management, Authentication and Authorisation (UAA) and the respective 
abstract specifications are by intention specified at a high level of abstraction in order to be able to cope 
with established UAA mechanisms for dedicated platforms. Thus, a platform specification has to define 
how the ORCHESTRA UAA concept can be realised for a specific platform. This includes an agreement 
on the authentication and authorisation mechanisms permitted within an OSN, the transport and han-
dling of session information among OSCs, the selection of a language for the expression of permissions 
and possibly the predefinition of common permissions and default subjects and principals. Some as-
pects of these definitions, especially the technical details, may not necessarily be part of the platform 
specifications but of the implementation specifications of the UAA services. 


Example: The Authentication Service implements a simple username/password mechanism, and the 
Authorisation Service a role-based access control (RBAC) system. Additional authentication and au-
thorisation mechanisms are not supported. Session information will be exchanged by means of a plat-
form specific protocol, for example inside the header of a SOAP message. 


10.3 Agreement on Data Formats 


A platform specification may also contain an agreement on the usage of (de-facto or de-jure) standard 
data formats (e.g. MIME types) and specific, often proprietary data formats to be exchanged between 
OSCs. 


Example: An agreement on well-known coverage representation formats (e.g. GeoTIFF, HDF) to repre-
sent coverage type information which is not encoded in GML. 


10.4 Definition of a Reversible Platform Mapping for Information Models 


Since an information model may also be modelled directly in a platform-specific schema language with-
out the need to follow the OMM approach of defining an OAS and applying platform specific mapping 
rules, the conformance of such information models to the OMM has to be ensured.  


It must be possible to generate the UML representation of a given information model, modelled in a 
platform specific schema language, to check compliance to the OMM. Therefore the definition of encod-
ing rules for the mapping of an OAS to a platform specific transfer format must not be ambiguous and 
has to be specified as a reversible mapping as part of the platform specification. 


A platform specification may also include an optional annex providing procedures and guidelines for 
how these mapping rules shall be applied. 


Examples:  


1) Usage of the reversible encoding rules from ISO 19136 Annex E and F for the platform "Web Ser-
vices" to map (ORCHESTRA) Application Schemas to GML.  


2) Provision of a table that maps basic UML data types (see section 8.7.2.2) to basic XML-Schema 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


167/180 


data types and vice versa (e.g. CharacterString  xsd:string). See also ISO 19136 Annex D. 


3) Guidelines for the usage of UML to GML Application Schema  tools. 


10.5 Definition of Procedures for the Mapping of Service Interfaces 


Procedures for the mapping of the platform-neutral service interfaces to a specific interface language 
may have to be defined. These procedures shall ensure that the mapping is in compliance with the 
rules of the ORCHESTRA Service Meta-Model (OMM-Service, see section 9.2). The procedures should 
be defined in an optional annex of the platform specification. The mapping itself shall be part of an im-
plementation specification. If this can be accomplished, such a mapping should be bi-directional and 
described in a machine readable way. 


Example: Description of how to transform XMI to WSDL using Enterprise Architect. 


Note 1: In cases where ORCHESTRA Services are directly specified on a platform level, compliance 
with the OMM-Service must be assured for interoperability reasons.  


Note 2: When mapping interfaces and exceptions to a service platform (e.g. Web Services), the 
relevant standards have to be considered, such as e.g. WS-I Basic Profile V1 (http://www.ws-
i.org/Profiles/BasicProfile-1.0-2004-04-16.html). It refers to a set of non-proprietary Web services 
specifications, like SOAP, WSDL etc., along with clarifications to and amplifications of those 
specifications in order to promote interoperability.  


10.6 Restrictions on certain Services 


A platform specification may further reduce the complexity or restrict the scope of certain services, if 
this is required to meet the main characteristics of the selected platform. 


Note that this complicates interoperability between different platforms. There should exist a bi-
directional mapping between an abstract and an implementation specification and this mapping should 
be described in a machine readable way. 


Example: A platform ―OGC Web Services‖ may permit the mapping of some OA Services to OGC ser-
vice interfaces by knowingly allowing a derivation from the abstract service interface specifications. 



http://www.ws-i.org/Profiles/BasicProfile-1.0-2004-04-16.html

http://www.ws-i.org/Profiles/BasicProfile-1.0-2004-04-16.html





 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


168/180 


11 Engineering Viewpoint 


According to the ORCHESTRA Reference Model as introduced in section 5.3, the Engineering View-
point specifies the mapping of the ORCHESTRA service specifications and information models to the 
chosen service platform and the specification of the characteristics of ORCHESTRA Service Networks. 


Thus, when considering the design process of the ORCHESTRA Service Network, the mapping proc-
ess itself belongs to the Engineering Viewpoint. It is documented in corresponding sections of the im-
plementation specifications, see (ORCH-ImplServ 2007).  


The present RM-OA document, being a reference model for the design of ORCHESTRA Service Net-
work, restricts the description of the Engineering Viewpoint to the discussion on OSN Characteristics. 


Note: The following sections in the RM-OA Engineering Viewpoint are preliminary ideas and need 
to be validated and formalised during the course of the ORCHESTRA project when further 
implementation experiences have been gained. Results of this validation will go into version 3 of the 
RM-OA. 


11.1 OSN Characteristics 


11.1.1 Policies 


An ORCHESTRA Service Network (OSN) is defined as a set of networked hardware components and 
ORCHESTRA Service Instances (OSIs) that interact according to defined policies in order to serve the 
objectives of ORCHESTRA Applications (see section 5.3.3). Thus, the basic units within an OSN for the 
provision of functions are the OSIs, whereas their interaction principles are determined and character-
ized by policy definitions. Instead of pre-determining a specific policy for all possible OSNs, the follow-
ing sections of the RM-OA only define policy elements and rules for the definition and the existence of 
policies for different OSN characteristics. Using this approach, the policies of an OSN may be set-up 
according to the given individual business and organisational needs and models.  


Note that this approach does not fix the model for policy enforcement, be it centralised or decentralised. 
Furthermore, it does not prescribe the time and the way that the policies are defined, be it (pre-) deter-
mined by a central authority or negotiated online between the participating parties. Thus, a wide spec-
trum may be covered, from a centrally-administered OSN with a high level of access control and a fixed 
and pre-defined list of OSIs up to an open and flexible OSN with dynamic registration and de-
registration of OSIs and a distributed administration. 


An OSN is characterized by adopting a harmonised approach for the following policies (non exhaustive 
list): 


 resource identification  


 resource discovery 


 OSN operation  


 UAA (User Management, Authorisation, Authentication) 


An OSN is defined by a specification of at least these policies. This OSN specification should  be ac-
cessible in one of the following forms: 


 in written form by the institution running the OSN 


 by querying the OSN catalogue in a centralised discovery policy (see section 11.1.3) or 


 by querying one of the catalogues in a decentralised discovery policy (see section 11.1.3). 


11.1.2 Resource Naming Policy 


The Resource Naming policy of an OSN deals with the question of how resources in OSN-like service 
instances and feature instances are identified. The uniqueness of resource identifiers in an OSN and 
across OSNs is further discussed in the section 11.3.  







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


169/180 


The Resource Naming policy is defined by the following elements: 


 name service: statement if a Name Service (see section 9.7.6) is used that is responsible for 
the provision of globally unique identifiers for OSIs and/or feature instances.  


 naming policy for service instances: specification of which naming policy is used for the iden-
tification of OSIs across platforms. Currently, the following approach has been identified (see 
section 11.3.1): 


- platform as namespace: The global uniqueness of OSIs is enforced by using the 
service platform as namespace, i.e. the platform-specific identifier of an OSI is used.  


 naming policy for feature instances: specification of which naming policy is used for the iden-
tification of feature instances. Currently, the following approach has been identified (see sec-
tion 11.3.2): 


- OSI as namespace: Each OSI that acts in the role of a Feature Access Service shall 
be responsible for managing a namespace of related feature instance identifiers. 


11.1.3 Resource Discovery Policy 


The Resource Discovery policy of an OSN deals with the registration of resources in an OSN. Registra-
tion means the creation of an associated meta-information entry for a resource in a catalogue in order 
that a user who is part of the information community of that catalogue may discover the resource (see 
section 0).  


The process of registration as well as the process of discovery is supported by operations specified in 
the Catalogue Service (see section 9.7.5). A resource may be registered in one or more catalogues. 


The meta-information about resources is defined in OAS-MI according to the rules of the OMM Informa-
tion Model. A resource may be the OSN itself, feature types and instances, service types and instances 
and UAA resources such as subjects (see section 7.5.2). 


The Resource Discovery Policy is defined by the following elements: 


 discovery policy: statement about the discovery policy used in the OSN. Possible alterna-
tives are: 


- centralised discovery: There is a distinguished Catalogue OSI (called OSN Cata-
logue) that serves as the ―entry point― to the OSN. 


Note: The presence of an OSN Catalogue does not exclude the existence of other 
instances of the Catalogue Service. 


- decentralised discovery: All instances of the Catalogue Service are equivalent. 


- no discovery: There is no Catalogue OSI. This means that the service interactions 
are not mediated through an instance of a Catalogue Service. 


Note: Whether a network of OSIs without a discovery capability based on a Cata-
logue OSI is a ―valid‖ OSN is under discussion. 


 definition of the catalogues used in the OSN 


- name of the OSN Catalogue 


- statement if the catalogue is the ―OSN Catalogue‖, i.e. the ―entry point‖ of an OSN 
(see above). 


- query language of the OSN Catalogue 


- ORCHESTRA Application Schema for Meta-information (OAS-MI) of the OSN Cata-
logue for the purpose of discovery 


- resource types that may be discovered through the OSN Catalogue  


 OSN 


 feature types 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


170/180 


 feature instances 


 service types 


 service instances 


 subjects 


 … others 


- ORCHESTRA Application Schema for Meta-information (OAS-MI) of the OSN Cata-
logue for the purpose of service invocation, i.e. the OAS-MI for the default service 
capabilities for all OSIs running in the OSN. 


Note: The default service capabilities usually correspond to the OAS-MI for service 
instance discovery (see above). However, this is not obligatory. 


11.1.4 OSN Operating Policy 


The OSN Management Policy is divided into three sub-policies which are described in the following 
sections: 


 OSN management policy 


 service management policy 


 network management policy 


11.1.4.1 OSN Management Policy 


The OSN Management Policy deals with the requirements concerning the management and the opera-
tion of an OSN. It is defined by the following elements: 


 general administrative information 


- name: globally unique name of an OSN.   


Note: An example for such a name is the name of the OSN Catalogue (see section 
11.1.3) if the name of the OSN Catalogue is globally unique. 


- description: human-readable textual information about the goals and purpose of the 
OSN. 


- OSN provider: Information about the community, institution or organisational unit 
operating the OSN in the sense of defining and enforcing the policies of the OSN. 


- administrators: Names and addresses of those persons who are responsible for the 
operation of the OSN. 


 Technical Information 


- platform:  reference to the platform specification upon which the OSN is based 


Note: Currently, an OSN may only run on top of one specified platform. 


- name and platform-specific identifier (OSI) of the ―OSN Catalogue‖ (if any, see sec-
tion 11.1.3) as the entry point to the OSN 


- requirements for all OSIs interacting in the OSN: 


 minimal required set of formats (see the acceptFormats parameter of the 
ServiceCapabilities interface as specified in section 9.6.1)  that every OSI 
has to support for the getCapabilities-operation  


 minimum required level of security to be provided by each OSN component 
(client or OSI). The security policy shall make statements (e.g. technologies 
or platform-specific mechanisms used) about the following topics: 


- encryption of communication  
 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


171/180 


Note: There are some limitations by law in some countries about 
the usage of encryption and some sort of communication technol-
ogy (e.g. France). 


- measures against intrusion, alteration, eavesdropping, non-
repudiation 


- applicable classifiers of the OSN (see section 11.2) 


- service registration: statement about whether a service can be registered at any 
time by any subject (open service registration) or whether the service registration is 
controlled (controlled service registration based on a resource discovery policy, see 
section 11.1.3).  


- list of mandatory services within the OSN, i.e. at least one OSI of this service type 
shall be operational in an OSN. This list may be derived from the type of OSN or 
listed explicitly. 


- list of additional services for whoch OSIs may be registered in at least one of the 
catalogues are allowed. The alternatives are: 


 any OSI of any service type is allowed 


 no OSIs other than the mandatory services are allowed 


 a specified number of OSIs of a specified list of service types are allowed 


11.1.4.2 Service Management Policy 


The Service Management Policy deals with the administrative requirements that OSIs of a specific ser-
vice type have to fulfil when interacting within a specific OSN. It is defined by the following elements: 


 service monitoring 


- list of service and network events to be monitored (e.g. just make calls to getCapa-
bilities() ) 


- list of OSIs to be monitored (e.g. all OSIs that are registered in the OSN catalogue) 
and supported statistics about the usage of services in an OSN (see Service Moni-
toring Service described in section 9.7.10)   


- list of conditions under which management notifications have to be generated 


 quality of service (both on the level of individual or all OSIs of a given service type or gener-
ally for all OSIs deployed in an OSN) 


- availability of service (e.g. work hours, 24x7, redundant) 


- maximum response time for service operations 


11.1.4.3 Network Management Policy 


The Network Management Policy deals with the management of the communication resources of the 
specified platform. For this part of the OSN Operating Policy, the RM-OA refers to the corresponding 
management standards that are specific for the chosen platform and underlying communication proto-
cols, e.g.  


 for protocols based on the Internet protocol stack (IETF RFC 1122 Requirements for Internet 
Hosts -- Communication Layers), these are the IETF recommendations related to RFC 2570 In-
troduction to Version 3 of the Internet-standard Network Management Framework. 


 for protocols based on ISO/OSI 7498-1 Open Systems Interconnection, these are the ISO 
standards related to ISO/OSI 7498-4 Management Framework. 


11.1.5 User Management, Authorisation and Authentication Policy 


The User Management, Authorisation and Authentication policy of an OSN is divided into the following 
sub-policies: 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


172/180 


 user management policy 


 authentication policy 


 authorisation policy 


There are many different concepts and technologies in the context of user management, authorisation 
and authentication. Often, these concepts and technologies cannot be applied independently from each 
other. Thus, it must be ensured that the policies are specified coherently.  


11.1.5.1 User Management Policy 


The User Management Policy deals with the way users are represented and made known (registered) 
in an OSN. It is defined by the following elements: 


 subject information: minimum information to be provided when specifying a subject. This corre-
sponds to a dedicated meta.information schema for the purpose of ―user profiling‖ (see section 
8.4.2.5). 


 dynamic registration of users: statement about whether dynamic registration (i.e. registration 
and de-registration of users at runtime)  is allowed or not. In case it is allowed the business 
process for dynamic registration shall be described for each of the following:  


- subjects (users, including ORCHESTRA Service Instances (OSIs)),  


- groups (group of subjects) 


A business process to register a new subject shall clarify responsibilities so that the liability for 
the registration of a new subject is explicitly expressed.  


 pre-defined subjects and groups: statement about whether the OSN requires the existence of 
specific pre-defined subjects and groups. 


11.1.5.2 Authentication Policy 


The Authentication Policy deals with the generation of session information. It is defined by the following 
elements: 


 set of allowed authentication mechanisms 


- default authentication mechanism 


- restrictions on the set of allowed authentication mechanisms 


 representation of principals: specification of how principals are represented in an OSN (op-
tional) 
 
Note:  Even though the set of allowed authentication mechanisms determines the possible 
presentations of principals. It may be required for clarity to explicitly specify the representations 
of principals. 


 single-sign-on or multiple authentication: statement whether single-sign-on and/or multiple au-
thentication is used. 


 treatment of session information: definition how session information is treated, either by a ses-
sion key or by a session envelope 


 session key validity: validity space for a ―session key‖ returned by the Authentication Service af-
ter a successful authentication has to be assured 


11.1.5.3 Authorisation Policy 


The Authorisation Policy deals with the way the access to resources in an OSN is controlled. It is de-
fined by the following elements: 


 set of allowed authorisation paradigms (e.g. role based access control, trust management) 


- default authorisation paradigm for the whole OSN, i.e. for all OSIs of the OSN 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


173/180 


- authorisation paradigms that shall be applied for OSIs of a given service type or for 
individual OSI 


 default permissions for pre-defined subjects and groups 


 policy enforcement: statement about whether the authorisation takes place on the service level 
and/or the data level. 


11.2 OSN Classifiers 


In order to characterise OSNs and to provide constraints upon them for their classification, the policies 
described above are structured into policy elements. Depending on the scope of OSN that is to be de-
signed a specification of these policy elements is either mandatory or optional.  


A preliminary list of classifiers that may be attached to OSNs is given in Table 40. The main ideas are 
as follows: 


 All OSNs shall use ―platform as namespace‖ for the naming policy of OSIs and ―OSI as name-
space‖ for the naming policy of feature instances. These two policy elements are explained in 
section 11.3. 


 


OSN Classi-
fiers 


Resource 
Naming  


Resource 
Discovery  


OSN Operating  UAA 


Primitive  Platform as name-
space for OSIs, OSIs 
as namespace for fea-
ture instances 


   


Mediated  dito OSN Catalogue   


Managed  dito  Service Monitoring  


Access-
controlled  


dito   Harmonised UAA 
approach 


Table 40: Minimum Policy Requirements according to OSN Classifiers 


 For a ―primitive OSN‖ there are no further constraints or rules, i.e. it may consist of an arbitrary 
network of OSIs as long as these OSIs have been designed according to the rules of the OMM. 
An example of a primitive OSN is a Web Mapping application for environmental information run 
by one institution that renders a fixed set of map layers based on a set of pre-defined OSIs 
whereby changes and extensions in this application are rare or even not expected. 


Note:  As primitive OSNs do not necessarily support means for resource discovery, they do 
not, as a whole, comply with the architectural requirement of ―self-describing components‖, see 
section 6.3.7. However, for ORCHESTRA Applications with low requirements on flexibility this 
may be a reasonable solution. Nevertheless, as ORCHESTRA aims at supporting environ-
ments that are ―designed for change‖, OSNs that are only classified as ―primitive‖ are usually 
not sufficient. 


 A ―mediated OSN‖ requires the usage of at least one catalogue OSI (called OSN catalogue) for 
the discovery of service and feature instances. An example of a mediated OSN is a Sensor 
Web application within or between institutions that shall be flexible enough in order to integrate 
a varying set of data source systems (e.g. databases with sensor-related information).and 
models. 


 A ―managed OSN‖ shall, out of the set of the policy elements for OSN Operation, at least sup-
port the policy element of ―service monitoring‖ (see section 11.1.4.2). This means that it shall be  
possible to monitor the execution characteristics of OSIs. An example is a geo-statistical ser-
vice that is offered to customers in a commercial environment such that the service provider 
needs to observe the availability of the running OSIs. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


174/180 


 An ―access-controlled OSN‖ shall support a harmonised approach for the UAA policy elements 
as described in section 11.1.5. Examples are all applications that need to restrict the access to 
services and/or data to end-users with a well-defined role (e.g. a risk manager). 


 Of course, several classifiers may be applicable to one OSN, e.g. there may be an OSN that is 
both mediated, managed and access-controlled. Such OSNs are capable of exploiting the full 
potential of the ORCHESTRA approach and respond to the architectural requirements stated in 
section 6.3.. 


11.3 Naming Policy Examples 


11.3.1 Platform as Namespace for OSIs 


In the following a naming policy approach for OSIs is presented wherein the assignment of a name to 
an OSI is independent of the membership of an OSI in an OSN. In particular, a unique OSN name and 
an OSN-related namespace are not required for this approach. 


According to the ORCHESTRA Architecture, an OSN is designed to be based on one or several service 
platforms. A service platform provides the basic communication and encoding mechanisms for the ser-
vice interactions (the service infrastructure). By definition, an OSI is the result of a platform-specific de-
ployment step making the OSI part of a certain platform domain. Thus, an OSI can be considered a 
service in the sense of the used service platform. 


One of the characteristics of a service platform is that a service is identified by means of a platform-
specific service identifier which is unique within the platform. The identifier is usually assigned when the 
service is deployed, i.e. entered into the platform. The service platform acts as a namespace for OSIs. 


Service Platform Examples: 


 Platform W3C Web Services: An OSI corresponds to a Web Service according to the W3C 
specifications. A Web Service is identified by a URI. A URI is a globally unique identifier for all 
Web Services. 


 Platform Java RMI: An OSI corresponds to a Java Object which is remotely accessible and pub-
lished in an RMI registry. The Java Object is identified by a URI (with an empty schema), i.e. a 
string of the form  


//<host>:<port>/<name> 


where <host> and <port> are used to locate the registry. <host> is a hostname (IP-Address or 
domain names according to DNS) and <port> is the host-specific port number. <name> is the 
published name of the Java Object which is unique within the registry. 


 Platform CORBA: An OSI corresponds to a CORBA Server Object. In CORBA objects can be 
uniquely identified by an IOR (Interoperable Object Reference). Another way is to use the ad-
dress of a Name Service and a name local to the Name Service in a similar way as for the Java 
RMI example. 


In the current RM-OA version, it is assumed that a given OSN is based on just one pre-selected service 
platform. Thus, the service identifier of that platform can directly be used to name the OSIs. As the ser-
vice identifier is unique within the platform and only one platform is used, the resulting OSI names are 
unique. 


RM-OA version 4 will consider an enhancement of this naming policy for the case that an OSN spans 
several platforms. 


11.3.2 Feature Access OSI as Namespace for Feature Instances 


In the following a naming policy approach for feature instances is presented wherein the assignment of 
a feature instance identifier is combined with the identifier of the Feature Access OSI that provides ac-
cess to the feature instance. 


Thus, a feature access OSI manages a namespace of feature identifiers. The feature identifiers pro-
vided by such an OSI are initially not unique within the whole OSN, but only unique among all features 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


175/180 


of that OSI. In general there may be multiple Feature Access OSIs in an OSN. In order to obtain unique 
identifiers, the name of the corresponding feature access OSI is added in order to get a unique identifier 
within an OSN. 


Figure 43 provides an example: Three feature access OSIs are backed by different source systems. 
OSI a and OSI b are part of one OSN, OSI b and OSI c are part of another OSN. All feature instances 
related to these OSIs have identifiers f1, f2, f3 which are unique for each OSI. By adding the OSI 
names, the resulting feature identifiers a:f1, b:f1, c:f1 etc. become unique within the OSNs. They are 
even globally unique because the OSI names are globally unique. 


This naming policy for the identification of feature instances is summarised as follows:   


Within an OSN, each OSI that acts in the role of a feature access service shall be responsible for man-
aging a namespace of related feature instance identifiers. Each such OSI shall assign identifiers to fea-
ture instances which are accessed using that OSI. Such an identifier shall be combined of two ele-
ments: 


 the OSI name 


 an OSI-specific identifier which unambiguously identifies the feature instance among all other 
feature instances of that OSI. 


Together these elements form a feature identifier which is unique within the OSN. 


Note: The naming policy just described only ensures the uniqueness of feature instances in an 
OSN regardless of their real-world phenomenon that they are representing. The situation in which two 
feature instances provide a (possibly) different view upon the same real-world phenomenon (e.g. a 
road) is a question of semantic identity that is to be solved on the semantic level of the information 
model framework (see Figure 20), possibly based on inferencing about an ontology and/or a knowledge 
base of the respective thematic domain. 


 


s 


Figure 43: Constructing feature identifiers by using OSI-related namespaces 


Constructing feature identifiers according to this rule has the following consequences: 


 As each OSI name is globally unique as described in the previous section, the feature identifier 
is also globally unique.  


 If the createFeature operation of the FeatureAccessService interface (see section 9.7.1) is used 
to create a new feature instance, the respective Feature Access OSI must assign a unique (i.e. 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


176/180 


not yet used) feature identifier to it. 


 The feature identifier can act as a locator for the feature. The OSI used to access that feature 
can be obtained from the feature identifier. A client requesting attributes of the feature can there-
fore direct its request to that OSI. In the same way as a uniform resource locator is used in the 
Web to locate a resource, a feature identifier is used to locate a feature instance within one or 
multiple OSNs. 


The way a feature access OSI assigns identifiers to its feature instances is not further specified. In or-
der to simplify the mapping between feature identifiers and the underlying feature information, certain 
feature type-dependent key attribute values may be used when constructing an identifier. However, this 
is very much source system dependent. 


A feature access OSI may also support version management of features, i.e. it may allow access to 
various former versions of a certain feature instance. The current version and former versions may exist 
at the same time. In principle the current version and each former version of a feature instance can be 
considered separate instances which are implicitly or explicitly associated with each other. All these in-
stances can be distinguished by their identifiers. The way versioning is reflected in the identifiers is not 
specified here. 


Note:  The principle of constructing a global identifier by combining an OSI name with an identifier 
which is unique within the context of that OSI can be used for identifying purposes wherever a globally 
unique identifier is needed. 


 


 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


177/180 


12 Conclusion 


The present RM-OA Revision 2.1 represents the understanding of the ORCHESTRA consortium about 
an open, generic and standards-based service-oriented architecture for distributed environmental and 
risk management applications after the third year of the project‘s runtime. Its focus is currently on 
syntactic interoperability whereby the upgrade towards the support of semantic interoperability has 
been prepared. 


The following sections provide a summary of the major deviations of the RM-OA Design Decisions from 
ISO and OGC standards (section 12.1) and a short summary of the items that are intended to be cov-
ered in the outstanding version 3 of the RM-OA.  


12.1 Summary of Deviations from Standards 


Note 1: Textual changes are underlined.  


Note 2: Deviations on the level of service types and abstract interface specifications are not listed 
here as most of the OGC and ISO service specifications are not provided on abstract level. 


12.1.1 RM-ODP Computational Viewpoint mapped  to RM-OA Service Viewpoint 


In order to highlight the fact that an ORCHESTRA deployment will have the nature of a loosely-coupled 
distributed system based on networked services rather than a distributed application based on compu-
tational objects, the ―computational viewpoint‖ will be referred to as ―service viewpoint‖ in 
ORCHESTRA. 


Rationale: section 5.2.2. 


12.1.2 The OpenGIS Service Architecture (ISO 19119:2005) 


In the ORCHESTRA Reference Model the distributed computing platform is referred to as the service 
infrastructure. However, the distinction between IT and GI services of ISO 19119:2005 is not applied for 
the ORCHESTRA service taxonomy because the ORCHESTRA Architecture (and thus the 
ORCHESTRA services) shall contain an integrated information model that covers thematic, temporal 
and spatial aspects. 


Rationale: section 5.4 


12.1.3 ISO 19101 Service Taxonomy 


Workflow/Task services are services for support of specific tasks or work-related activities conducted 
by humans or software components with a high degree of autonomy (agents). These services support 
use of resources and development of products involving a sequence of activities or steps that may be 
conducted by different persons. 


Processing services are services that perform computations. These computation might range from the 
performance of mathematical equations up to large-scale computations involving substantial amounts 
of data. 


Rationale: section 5.4.2 


12.1.4 ISO 19119:2005 Requirements for Platform-Neutrality 


As part of the engineering viewpoint, the ORCHESTRA platform-neutral models are mapped to a spe-
cific service infrastructure context. The resulting platform-specific service models may be defined in 
UML or in terms of the platform-specific language (e.g. WSDL). However, it is required that a descrip-
tion of their mapping to the corresponding platform-neutral models be maintained. This mapping shall 
show how the intentions of the platform-neutral specifications are met in the context of the service plat-
form. In order to support interoperability, the reverse mapping back to the concepts in the platform-
neutral model must be defined (instead of should be defined). 


Rationale: section 5.4.1 







 


Reference Model for the ORCHESTRA Architecture (RM-OA) V2 Rev. 2.1 


 
© 2007 ORCHESTRA Consortium (IST Integrated Project 511678) 


 


178/180 


12.1.5 ORCHESTRA as Simple Service Architecture according to ISO 19119:2005 


 Known service type


All ORCHESTRA service instances are of specific service types and the client may access the service 
type description prior to calling the service. In the ORCHESTRA Reference Model, a ―known service 
type‖ is a service type with an externally available description. 


Rationale: section 5.4.3 


Note:  The RM-OA version 3 will contain a more refined assessment if the ORCHESTRA Architec-
ture may be considered as a ―Simple Service Architecture‖ in the sense of ISO 19119 taking into ac-
count the latest developments about UAA and service chaining in the ORCHESTRA  project. 


12.1.6 The ORCHESTRA Definition of a Feature 


One basic concept of the RM-OA Information Viewpoint is the feature, where a feature is an abstraction 
of a real world phenomenon perceived in the context of an ORCHESTRA Application. The 
ORCHESTRA definition of features explicitly goes beyond geographic features. It includes tangible ob-
jects of the real world but also abstractions, concepts or software artifacts (e.g. documents, software 
components of IT systems) that may have a representation only in software systems. These features 
may, but need not, have spatial characteristics. The ORCHESTRA understanding of a ―real world‖ ex-
plicitly includes these hypothetical worlds or worlds of human thoughts.  


Rationale: section 8.2 


12.1.7 The ORCHESTRA Meta-Model (OMM) 


The OMM is derived from the basic ideas of the ISO 19109 GFM, but it is not a true profile of it. The 
OMM is an evolution of the ISO 19109 GFM, taking into account additional, ORCHESTRA-specific re-
quirements. In particular: 


 The OMM extends the GFM by aspects of services modelling (see the OMM Service Meta-
model (OMM-Service) in section 9.2). 


 The OMM does not mandate the usage of one particular meta-information model (e.g. ISO 
19115) as prescribed by the GFM. Instead, it gives the OSN designer the freedom to specify the 
meta-information models as required for the various purposes. It only mandates that an applica-
tion schema for meta-information (OAS-MI) be specified according to the rules of the OMM-
Information (see section 8.8). 


Rationale: section 8.7 


12.2 Evolution of the RM-OA 


It is envisaged to mainly tackle semantic extensions of the OA in future versions of the RM-OA. This 
may encompass the following aspects (this is a non-binding and non-exhaustive list): 


 Extension of the OMM-Service by including aspects of Semantic Web Services, e.g. semantic 
description of services (e.g. based on WSML, OWL-S or WSDL-S) as part of their meta-
information, usage of semantics in advanced versions of ORCHESTRA Service Types (con-
cerned sections: 9.2).  


 Usage and influence of ontologies for the RM-OA Information and Service Viewpoints (con-
cerned sections: 8.7, 9.2), e.g. comparision of the OMM and the OA services with the WSMO 
and the OWL-S framework. 


 Support of further cases (e.g. service mediation) in the service mapping specification in addition 
to the service profile (concerned section: 9.2.9), e.g. discussion how the WSMO concept of me-
diation could be re-used for this question. 







07-097/RM-OA V2 Rev 2.1 Meta-model Information and Service.eap
		Object_ID		Name		Scope		Stereotype		Containment		IsStatic		IsCollection		IsOrdered		AllowDuplicates		LowerBound		UpperBound		Container		Notes		Derived		ID		Pos		GenOption		Length		Precision		Scale		Const		Style		Classifier		Default		Type		ea_guid		StyleEx

		11		valueType		Public						0		0		0		0		1		1								1		0				0		0		0		0								TypeName		{62BFADE0-6AC1-4a33-A633-0AA7CEEBC0CE}		

		11		valueDomain		Public						0		0		0		0		1		1								2		1				0		0		0		0								CharacterString		{386D5D38-EA80-440a-8A95-C00F4484B6BD}		

		11		cardinality		Public						0		0		0		0		1		1								3		2				0		0		0		0								Multiplicity		{F49E4009-B1A0-40ed-8B2A-84F3D3816BD4}		

		18		name		Public						0		0		0		0		0		1								4		0				0		0		0		0								CharacterString		{393DF5C1-E929-496c-B52B-47817325E1B3}		volatile=0;

		18		description		Public						0		0		0		0		1		1								5		1				0		0		0		0								CharacterString		{2B93463C-2214-47bb-8E3B-6BEF3724DCC1}		

		18		uniqueInstance		Public						0		0		0		0		1		1								6		2				0		0		0		0								Boolean		{D9DAEBB8-BE2F-4e8d-B16F-ED0146007DBE}		volatile=0;

		19		valueType		Public						0		0		0		0		1		1								7		0				0		0		0		0								TypeName		{474793A4-FBB3-45a5-9097-B5DED0D1F022}		

		19		cardinality		Public						0		0		0		0		1		1								8		1				0		0		0		0								Multiplicity		{4F3B9417-3CAC-4acf-9493-3D97932A34A3}		

		21		signature		Public						0		0		0		0		1		1								9		0				0		0		0		0								CharacterString		{ED1A34FC-9851-4eba-A46E-45D1E5752123}		

		26		memberName		Public						0		0		0		0		1		1								10		0				0		0		0		0								LocalName		{EE164395-BEC0-42f6-81FC-99AAFEBD527E}		

		26		definition		Public						0		0		0		0		1		1								11		1				0		0		0		0								CharacterString		{D4DA74BF-80EC-467e-AC7D-1FE80879B7ED}		

		27		description		Public						0		0		0		0		1		1								12		0				0		0		0		0								CharacterString		{3C350947-0F99-4b8f-A2E1-14CCAD8F31C8}		

		28		typeName		Public				Not Specified		0		0		0		0		1		1				Name of the feature type. The name shall be unique within an application schema. TypeName is optional
only for GF_AssociationType.		0		13		0				0		0		0		0								LocalName		{2934ABC5-D92B-46df-B62A-6E15C653FC2F}		volatile=0;

		28		definition		Public				Not Specified		0		0		0		0		1		1				Definition that describes the feature type.		0		14		1				0		0		0		0								CharacterString		{42238225-1E6E-4d20-99DA-2E4B96D0F139}		volatile=0;

		28		isAbstract		Public						0		0		0		0		1		1								15		2				0		0		0		0						false		Boolean		{81120069-946F-47e2-805B-8922867E29DC}		

		32		spec		Public				Not Specified		0		0		0		0		1		1						0		16		0				0		0		0		0								CharacterString		{0F7FD9E9-4E05-4492-90A3-2348FCC45E41}		volatile=0;

		35		platformName		Public				Not Specified		0		0		0		0		1		1						0		17		0				0		0		0		0								CharacterString		{8AEDDAE4-2CFC-4853-8754-FC6225D3D869}		volatile=0;

		35		interfaceLanguage		Public				Not Specified		0		0		0		0		1		1						0		18		1				0		0		0		0								CharacterString		{B94135CA-3237-488e-A685-7ED5A3A32ABB}		volatile=0;

		35		executionContext		Public				Not Specified		0		0		0		0		1		1						0		19		3				0		0		0		0								CharacterString		{6A8BF87B-46B1-48e1-B50E-49160DB06FCC}		volatile=0;

		35		schemaLanguage		Public				Not Specified		0		0		0		0		1		1						0		20		4				0		0		0		0								CharacterString		{8BCA3F7D-3CF4-490e-81D5-881145910C5B}		volatile=0;

		35		schemaMapping		Public				Not Specified		0		0		0		0		1		1						0		21		5				0		0		0		0								CharacterString		{4351B1F2-3A6E-4b18-8F9D-C49C32E18AAA}		volatile=0;

		35		informationModelConstraints		Public				Not Specified		0		0		0		0		1		1						0		22		6				0		0		0		0								CharacterString		{74DFBBC8-0F22-4f37-BD6D-1583B89FD5FD}		volatile=0;

		37		name		Public				Not Specified		0		0		0		0		1		1						0		23		0				0		0		0		0								CharacterString		{DD8BD011-C999-4149-9389-EEA474BF5464}		volatile=0;

		38		name		Public				Not Specified		0		0		0		0		1		1						0		24		0				0		0		0		0								CharacterString		{43DBA972-8555-46db-A326-3FD18D3EF8E5}		volatile=0;

		38		spec		Public				Not Specified		0		0		0		0		1		1						0		25		1000				0		0		0		0								CharacterString		{FE1DB939-6C26-421a-B578-F0298BC9C4F1}		volatile=0;

		40		description		Public				Not Specified		0		0		0		0		1		1						0		26		1000				0		0		0		0								CharacterString		{9079F731-FB85-42ea-B1A3-F405B82D5EAD}		volatile=0;

		42		definition		Public				Not Specified		0		0		0		0		1		1						0		27		1000				0		0		0		0								CharacterString		{543C8A68-A6C1-4fd8-825D-823BECBD538D}		volatile=0;

		51		name		Public				Not Specified		0		0		0		0		1		1						0		28		0				0		0		0		0								CharacterString		{1E090E5C-26EF-4238-819B-0FE5C01E0EC9}		volatile=0;

		54		name		Public				Not Specified		0		0		0		0		1		1						0		29		0				0		0		0		0								CharacterString		{628CA13E-69FA-4d78-9D62-550982E103A3}		volatile=0;

		54		isSynchronous		Public				Not Specified		0		0		0		0		1		1						0		30		1				0		0		0		0						true		Boolean		{EEA2B5EA-6B23-4de0-9CF1-AC3FD2345E0C}		volatile=0;

		54		optional		Public				Not Specified		0		0		0		0		1		1						0		31		2				0		0		0		0						false		Boolean		{AECCF1EF-2F18-44e4-8C0B-E6015C121410}		volatile=0;

		59		description		Public				Not Specified		0		0		0		0		1		1						0		32		1000				0		0		0		0								CharacterString		{BA13FFCD-0DAA-445c-A2AE-9D0D7C28D195}		volatile=0;

		60		name		Public				Not Specified		0		0		0		0		1		1						0		33		0				0		0		0		0								CharacterString		{986ABE9B-A23B-47ee-9349-FEB7A683EB62}		volatile=0;

		60		actionModel		Public				Not Specified		0		0		0		0		1		1						0		34		1				0		0		0		0								CharacterString		{B9DC830B-7494-4a78-8DB0-4B2248F31632}		volatile=0;

		62		name		Public				Not Specified		0		0		0		0		1		1						0		35		0				0		0		0		0								CharacterString		{0C9E1BE0-C4C8-4728-91D5-295A3FB4E8DF}		volatile=0;

		62		optional		Public				Not Specified		0		0		0		0		1		1						0		36		1				0		0		0		0						false		Boolean		{E18922F2-017B-4d2c-A70E-60D4958C0C5D}		volatile=0;

		65		name		Public				Not Specified		0		0		0		0		1		1						0		37		1				0		0		0		0								CharacterString		{70BB3859-4159-4883-AFA0-93F97F16BF21}		volatile=0;

		70		name		Public				Not Specified		0		0		0		0		1		1						0		38		1000				0		0		0		0								CharacterString		{888C0512-D006-4a91-8ABE-7DCBD27ADBC5}		volatile=0;



		Object_ID		Constraint		AttName		Type		Notes		ID



		PropertyID		ElementID		Property		VALUE		NOTES		ea_guid



		AuthorName		Roles		Notes



		Cardinality

		*

		0

		0..*

		0..1

		1

		1..

		1..*



		CategoryID		Name		Type		NOTES



		Name		Organisation		Phone1		Phone2		Mobile		Fax		Email		Roles		Notes



		Complexity		NumericWeight

		Extreme		6

		High		4

		Low		2

		Medium		3

		V.High		5

		V.Low		1



		Connector_ID		Name		Direction		Notes		Connector_Type		SubType		SourceCard		SourceAccess		SourceElement		DestCard		DestAccess		DestElement		SourceRole		SourceRoleType		SourceRoleNote		SourceContainment		SourceIsAggregate		SourceIsOrdered		SourceQualifier		DestRole		DestRoleType		DestRoleNote		DestContainment		DestIsAggregate		DestIsOrdered		DestQualifier		Start_Object_ID		End_Object_ID		Top_Start_Label		Top_Mid_Label		Top_End_Label		Btm_Start_Label		Btm_Mid_Label		Btm_End_Label		Start_Edge		End_Edge		PtStartX		PtStartY		PtEndX		PtEndY		SeqNo		HeadStyle		LineStyle		RouteStyle		IsBold		LineColor		Stereotype		VirtualInheritance		LinkAccess		PDATA1		PDATA2		PDATA3		PDATA4		PDATA5		DiagramID		ea_guid		SourceConstraint		DestConstraint		SourceIsNavigable		DestIsNavigable		IsRoot		IsLeaf		IsSpec		SourceChangeable		DestChangeable		SourceTS		DestTS		StateFlags		ActionFlags		IsSignal		IsStimulus		DispatchAction		Target2		StyleEx		SourceStereotype		DestStereotype		SourceStyle		DestStyle		EventFlags

		2				Source -> Destination				Association						Public				0..*		Public												0		0				constrainedBy								0		0				28		27						+constrainedBy						0..*		0		0		0		0		0		0		0		0		0		2		0		0				0												 1060, 949, 702, 332,EDGE=3;		0		{EEA23DB4-1760-4eb7-BEA0-A30E2435C146}						false		false		false		false		false						instance		instance						false		false																

		3				Source -> Destination				Association						Public				0..*		Public												0		0				constrainedBy								0		0				26		27														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{1F249F82-E8B6-44a6-9424-40D70D194648}						false		false		false		false		false						instance		instance						false		false																

		4				Unspecified				Association				0..*		Public				1		Public				carrierOfCharacteristics								0		0												2		0				26		28														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{00E65F21-6463-4996-AADA-D5C6A75B9C49}						false		false		false		false		false						instance		instance						false		false																

		5				Unspecified				Association				1..*		Public				0..*		Public				includes								0		0				linkBetween								0		0				28		22		+includes				+linkBetween		1..*				0..*		0		0		0		0		0		0		0		0		0		2		0		0				0												 1336, 699, 1254, 54,SX=-4;SY=-31;EX=-4;EY=-6;		0		{F711E7B7-12DA-4f65-A742-49B037983DEA}						false		false		false		false		false						instance		instance						false		false																

		6				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				24		22														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{F4C0534C-339C-4e9d-9C2D-DD035D04D359}						false		true		false		false		false														false		false																

		7								Generalization		Tree				Public						Public												0		0												0		0				25		22														0		0		0		0		0		0		0		0		0		3		0		0				0												EDGE=1;SX=0;SY=0;		0		{98ECB1E8-3FEA-413b-9EFA-26BBB05FAFC6}						false		false		false		false		false														false		false																

		8								Generalization						Public						Public												0		0												0		0				22		28														0		0		0		0		0		0		0		0		0		2		0		0				0												 1336, 582, 1254, 54,SX=-1;SY=0;EX=-1;EY=0;		0		{4AA6C551-4197-4f4d-A076-A673C9E74C15}						false		false		false		false		false														false		false																

		9								Generalization		Tree				Public						Public												0		0												0		0				21		26														0		0		0		0		0		0		0		0		0		3		0		0				0												 360, 1524, 54, 252,SX=0;SY=0;		0		{9CBF4FEB-8E57-4253-94D8-F4B0A96AB097}						false		false		false		false		false														false		false																

		10				Destination -> Source				Association				1..*		Public						Public				roleName								0		0												2		0				19		22														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{DAD41B33-244A-4e71-B05E-D15895EE0E76}						false		false		false		false		false						instance		instance						false		false																

		11								Generalization		Tree				Public						Public												0		0												0		0				19		26														0		0		0		0		0		0		0		0		0		3		0		0				0												 2157, 1539, 54, 283,SX=0;SY=0;		0		{A5ED0647-281E-4264-8D5F-914970BA0258}						false		false		false		false		false														false		false																

		12		Generalization		Unspecified				Association				1		Public				0..*		Public				supertype						Unspecified		0		0										Unspecified		0		0				28		18		+supertype		Generalization				1						0		0		0		0		0		0		0		0		0		2		0		0				0												 991, 390, 988, 270,SX=22;SY=-20;EX=22;EY=-20;		0		{8B3D9E9D-E984-4867-B487-01EEB3F7460E}						false		false		false		false		false						instance		instance						false		false																

		13		Specialisation		Unspecified				Association				0..*		Public				1		Public										Unspecified		0		0				subtype						Unspecified		0		0				18		28				Specialisation		+subtype						1		0		0		0		0		0		0		0		0		0		2		0		0				0												 830, 345, 1310, 360,SX=-49;SY=36;EX=-37;EY=37;		0		{F71821BD-E367-494e-928E-8BE73FA2E7C9}						false		false		false		false		false						instance		instance						false		false																

		14				Source -> Destination				Generalization						Public						Public										Unspecified		0		0										Unspecified		0		0				17		29														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{EA0B2C41-1A70-46fb-91EE-22B4F59BC87C}						false		true		false		false		false														false		false																

		15								Generalization						Public						Public												0		0												0		0				23		16														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{739FB1BE-330E-4eb6-8C7D-E91E096C6BB0}						false		false		false		false		false														false		false																

		16								Generalization						Public						Public												0		0												0		0				15		16														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{0D7FA902-57FE-458c-92CB-0D8DD9E0C15D}						false		false		false		false		false														false		false																

		17				Source -> Destination				Generalization						Public						Public										Unspecified		0		0										Unspecified		0		0				14		28														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{0040E4F7-D9E7-4ab3-858F-EAFE32FD279D}						false		true		false		false		false														false		false																

		18								Generalization						Public						Public												0		0												0		0				13		16														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{33B55B47-9381-4f43-A4A2-42227FDCE7D5}						false		false		false		false		false														false		false																

		19								Generalization		Tree				Public						Public												0		0												0		0				12		11														0		0		0		0		0		0		0		0		0		3		0		0				0												 272, 1087, 54, 174,EDGE=1;SX=0;SY=0;		0		{FAA51575-3E01-4642-BE41-F22C9094B3E2}						false		false		false		false		false														false		false																

		20				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				29		11														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{ED72F3DE-6362-4106-801B-4EA539F3CEBC}						false		true		false		false		false														false		false																

		21								Generalization		Tree				Public						Public												0		0												0		0				20		11														0		0		0		0		0		0		0		0		0		3		0		0				0												 792, 1240, 54, 480,EDGE=1;SX=0;SY=0;		0		{DC6AD1F6-64BF-4eb7-832D-C7D5AEA0B91E}						false		false		false		false		false														false		false																

		22								Generalization		Tree				Public						Public												0		0												0		0				16		11														0		0		0		0		0		0		0		0		0		3		0		0				0												 2556, 1087, 54, 174,EDGE=1;SX=0;SY=0;		0		{81D08F5E-0B3F-4e6a-8E98-22E45B4DBF3D}						false		false		false		false		false														false		false																

		23								Generalization		Tree				Public						Public												0		0												0		0				11		26														0		0		0		0		0		0		0		0		0		3		0		0				0												 1137, 1522, 54, 249,SX=0;SY=0;		0		{44104FA2-6C8D-473f-9D1B-0F2CE4B86588}						false		false		false		false		false														false		false																

		24				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				10		28														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{DAE97A33-0232-459f-AB58-3A5336B7BB74}						false		true		false		false		false														false		false																

		25				Source -> Destination				Generalization						Public						Public										Unspecified		0		0										Unspecified		0		0				9		28														0		0		0		0		0		0		0		0		0		2		0		-1				0												EDGE=2;		0		{AFE29132-125E-4f85-87BD-698011D531FB}						false		true		false		false		false														false		false																

		26								Generalization		Tree				Public						Public												0		0												0		0				7		22														0		0		0		0		0		0		0		0		0		3		0		0				0												EDGE=1;SX=0;SY=0;		0		{F14D223A-88A4-4fd5-8459-120CF1826F24}						false		false		false		false		false														false		false																

		27				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				5		28														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{40C76331-0E11-47a2-A441-E51B0C0E3477}						false		true		false		false		false														false		false																

		28								Generalization						Public						Public												0		0												0		0				4		17														0		0		0		0		0		0		0		0		0		3		0		0				0														0		{07DBDBC9-A95F-4e69-B1B3-A5A097259E78}						false		false		false		false		false														false		false																

		29				Source -> Destination				Generalization						Public						Public										Unspecified		0		0										Unspecified		0		0				3		28														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{1B482929-54CD-4152-9CD6-A2A6858B5879}						false		true		false		false		false														false		false																

		30								Generalization		Tree				Public						Public												0		0												0		0				2		22														0		0		0		0		0		0		0		0		0		3		0		0				0												EDGE=1;SX=0;SY=0;		0		{A74300E0-6CD0-4140-9424-92B150481B3D}						false		false		false		false		false														false		false																

		31				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				71		70														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{26F7197B-3480-4363-B8EF-260B3CB69FD7}						false		true		false		false		false														false		false																

		33				Unspecified				Association				0..*		Public				1..*		Public										Unspecified		1		0				ifName						Unspecified		0		0				70		65														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{6482258B-B1CF-46c6-9BF8-D59BF2B0CBC7}						false		false		false		false		false														false		false																

		34				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				67		62														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{E161087B-3A96-4c26-938E-C21ACE669B24}						false		true		false		false		false														false		false																

		35				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				62		11														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{00B9A116-C43D-4443-A581-BF96EC9F8C19}						false		true		false		false		false														false		false																

		36				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				61		70														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{60ADE6C7-1476-4547-8D22-82D30614A3F5}						false		true		false		false		false														false		false																

		37				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				66		60														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{4890DF9D-81DA-4479-9481-6A257C41822A}						false		true		false		false		false														false		false																

		38				Unspecified				Association				0..*		Public				1		Public				implSpec						Unspecified		0		0				serviceType						Unspecified		0		0				60		70														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{939AB416-E5F7-4fe9-A602-7B4824ED35A8}						false		false		false		false		false														false		false																

		39		Specialization		Unspecified				Association				1		Public				0..*		Public				subtype						Unspecified		0		0										Unspecified		0		0				65		59				Specialization										0		0		0		0		0		0		0		0		0		2		0		-1				0														0		{5700A24C-E68F-45cc-A6BA-58FBAE54FF62}						false		false		false		false		false														false		false																

		40		Generalization		Unspecified				Association				0..*		Public				1		Public										Unspecified		0		0				supertype						Unspecified		0		0				59		65				Generalization										0		0		0		0		0		0		0		0		0		2		0		-1				0														0		{FC2043DF-99B3-4b81-BA38-FEA519ACC352}						false		false		false		false		false														false		false																

		41				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				55		70														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{F380D724-83BA-454c-B526-7F3CC864F972}						false		true		false		false		false														false		false																

		42		use		Source -> Destination				Association						Public						Public										Unspecified		0		0										Unspecified		0		0				55		61				use										0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{79C38908-CDB0-4a02-BA46-633489320D06}						false		false		false		false		false														false		false																

		43		request		Source -> Destination				Aggregation		Weak		0..*		Public						Public										Unspecified		0		0										Unspecified		1		0				62		54				request										0		0		0		0		0		0		0		0		0		2		0		-1				0														0		{A2187508-1023-4a1f-816B-DDD383054F44}						false		false		false		false		false														false		false																

		44				Destination -> Source				Association				0..*		Public				1		Public				opName						Unspecified		0		0										Unspecified		2		0				54		65														0		0		0		0		0		0		0		0		0		2		0		-1				0												EDGE=2;		0		{F60C4259-C3D5-452b-9480-C043865A7407}						false		false		false		false		false														false		false																

		45		use		Destination -> Source				Association						Public						Public										Unspecified		0		0										Unspecified		0		0				52		52				use										0		0		0		0		0		0		0		0		0		2		0		-1				0												SCME=1;SX=118;SY=-22;EX=118;EY=-22;		0		{EE4C2E29-9B5C-4e59-B867-6F666C898591}						false		false		false		false		false														false		false																

		46				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				52		61														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{29112EA0-1B57-4dc5-AA67-C82024C7BF79}						false		true		false		false		false														false		false																

		47				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				51		11														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{849746AE-E64E-409c-83DE-2AD9BA094299}						false		true		false		false		false														false		false																

		48		result		Source -> Destination				Aggregation		Weak		0..1		Public						Public										Unspecified		0		0										Unspecified		1		0				51		54				result										0		0		0		0		0		0		0		0		0		2		0		-1				0														0		{7DEFD582-057C-47bd-98A6-559B1052DDA0}						false		false		false		false		false														false		false																

		49				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				48		57														0		0		0		0		0		0		0		0		0		2		0		-1				0												EDGE=1;		0		{E9FDB1F9-2428-479c-B82D-A17809B6766B}						false		true		false		false		false														false		false																

		50				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				48		63														0		0		0		0		0		0		0		0		0		2		0		-1				0												EDGE=1;		0		{E8A25C09-E640-4a81-8839-3FA22AAC0C10}						false		true		false		false		false														false		false																

		51				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				48		69														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{43C7E678-C18E-46ce-B6A6-39EA3A5D336E}						false		true		false		false		false														false		false																

		53				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				47		51														0		0		0		0		0		0		0		0		0		2		0		-1				0												EDGE=1;		0		{B43C1E10-7C9E-42a1-91FA-5E0FDADC5C32}						false		true		false		false		false														false		false																

		54				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				48		45														0		0		0		0		0		0		0		0		0		2		0		-1				0												EDGE=1;		0		{D3B91968-6A79-41b8-9EA5-218B46BB4B50}						false		true		false		false		false														false		false																

		56				Source -> Destination				Realisation						Public						Public										Unspecified		0		0										Unspecified		0		0				71		43										�realise�				0		0		0		0		0		0		0		0		0		2		0		-1		realise		0												EDGE=1;		0		{C57104B4-6D55-43a3-8D7F-4B66B418BF7C}						false		true		false		false		false														false		false																

		57				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				43		65														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{E73F488B-6D25-40d8-A454-12A2D983A9FB}						false		true		false		false		false														false		false																

		58				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				43		62														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{B76B7BFD-793D-4394-B8F5-694EB045F4BB}						false		true		false		false		false														false		false																

		59				Source -> Destination				Generalization						Public						Public										Unspecified		0		0										Unspecified		0		0				43		43														0		0		0		0		0		0		0		0		0		2		0		-1				0												SCME=1;SX=77;SY=-36;EX=77;EY=-36;		0		{5C09C8D5-4657-471b-B1F6-CAD14D6CE02D}						false		true		false		false		false														false		false																

		60				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				41		40														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{DD0FE1D0-0153-4de8-8C59-38F0EFA68385}						false		true		false		false		false														false		false																

		61				Unspecified				Association				1		Public				1		Public				serviceType						Unspecified		0		0				abstractDesc						Unspecified		0		0				70		40														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{DB4488B1-EDB0-43db-B323-D8AB68EF25E7}						false		false		false		false		false														false		false																

		62		based on		Destination -> Source				Association		Class		1		Public				0..*		Public				abstractDesc						Unspecified		0		0										Unspecified		0		0				40		60				based on										0		0		0		0		0		0		0		0		0		3		0		-1				0				32								EDGE=2;		0		{8316EC74-3CFF-492a-AA76-8471E8E8A4B7}						false		false		false		false		false														false		false																

		63		use		Source -> Destination				Association						Public						Public										Unspecified		0		0										Unspecified		0		0				39		39				use										0		0		0		0		0		0		0		0		0		2		0		-1				0												SCME=1;SX=48;SY=-16;EX=48;EY=-16;		0		{E0D1BA42-80BC-4ab8-9FC4-3812DBB3984C}						false		false		false		false		false														false		false																

		64		use		Source -> Destination				Association						Public						Public										Unspecified		0		0										Unspecified		0		0				39		52				use										0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{D1D112B7-982C-4cb6-968D-5351342467CA}						false		false		false		false		false														false		false																

		65				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				39		61														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{A032BC0F-7179-4d0b-96A4-0EF3C678C0B8}						false		true		false		false		false														false		false																

		66				Source -> Destination				Association				0..*		Public				1..*		Public										Unspecified		0		0				ifSpec						Unspecified		0		0				40		38						+ifSpec		0..*				1..*		0		0		0		0		0		0		0		0		0		3		0		-1				0												EDGE=2;EX=0;EY=0;		0		{A5FB2885-704E-4e1a-B934-40ED79D24084}						false		false		false		false		false														false		false																

		67				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				46		38														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{8798FAE2-6A80-4826-97D5-92204E340543}						false		true		false		false		false														false		false																

		68				Unspecified				Association				1		Public				1		Public				ifSpec						Unspecified		0		0				ifName						Unspecified		0		0				38		65														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{F0A2D730-BCBB-471f-BC1A-95F6552AFFDE}						false		false		false		false		false														false		false																

		69				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				44		37														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{3742889C-0408-49c4-A68C-7E0A467C3C6F}						false		true		false		false		false														false		false																

		70				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				37		11														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{C2468BB6-11B7-4396-8BD4-1A02F255CA42}						false		true		false		false		false														false		false																

		71		exception		Source -> Destination				Aggregation		Weak		1..*		Public						Public										Unspecified		0		0										Unspecified		1		0				37		54				exception										0		0		0		0		0		0		0		0		0		2		0		-1				0												SX=52;SY=34;EX=52;EY=34;EDGE=1;		0		{41ACDBC5-60A9-4dcb-987A-BACE542BDC49}						false		false		false		false		false														false		false																

		72				Source -> Destination				Aggregation		Weak		0..*		Public						Public				paraName						Unspecified		0		0										Unspecified		1		0				62		36														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{FEBAEB84-A433-41f6-ACA1-76F9FBBB91EF}						false		false		false		false		false														false		false																

		73				Destination -> Source				Association				1		Public				1		Public				opName						Unspecified		0		0										Unspecified		0		0				54		36														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{02EFAC3F-CCF3-413e-BB74-8818655F3C99}						false		false		false		false		false														false		false																

		74				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				64		35														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{D36CFBF0-B454-454b-94C9-94DE0CB20605}						false		true		false		false		false														false		false																

		75				Destination -> Source				Aggregation		Strong		1		Public						Public										Unspecified		0		0										Unspecified		2		0				42		35														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{9A58118E-4296-4772-A899-002EE2C93A96}						false		false		false		false		false														false		false																

		76				Source -> Destination				Association						Public						Public										Unspecified		0		0				platformSpec						Unspecified		0		0				60		35														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{8FCAB873-4AD1-4058-90A6-EAB26DE98E49}						false		false		false		false		false														false		false																

		77				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				63		32														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{C86E1E2C-B077-4fca-87DC-1A05992B8C19}						false		true		false		false		false														false		false																

		78				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				45		32														0		0		0		0		0		0		0		0		0		3		0		-1				0												EDGE=1;SX=0;SY=0;		0		{C1D47D96-6A3C-4b42-9CB3-AD3F55ED2609}						false		true		false		false		false														false		false																

		79				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				48		32														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;		0		{932F881C-0877-454d-9949-BE7F9F2E4D6B}						false		true		false		false		false														false		false																

		80				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				56		32														0		0		0		0		0		0		0		0		0		3		0		-1				0												SX=0;SY=0;EX=1;EY=0;		0		{81D0BBDE-DE30-43ea-A503-A13F2E12B671}						false		true		false		false		false														false		false																

		81				Source -> Destination				Aggregation		Weak				Public				0..1		Public										Unspecified		2		0				mappingSpec						Unspecified		0		0				60		32														0		0		0		0		0		0		0		0		0		2		0		-1				0												EX=-52;EY=-32;		0		{4C4911EA-2171-411a-BBF2-8F8613EFB813}						false		false		false		false		false														false		false																

		82				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				69		32														0		0		0		0		0		0		0		0		0		3		0		-1				0												EDGE=4;SX=0;SY=0;		0		{3D45F1A6-D836-43f8-839B-B3492194A26A}						false		true		false		false		false														false		false																

		83				Source -> Destination				Generalization		Tree				Public						Public										Unspecified		0		0										Unspecified		0		0				57		32														0		0		0		0		0		0		0		0		0		3		0		-1				0												EDGE=1;SX=0;SY=0;		0		{23357026-CF30-4a15-ADFD-ED540A180EB4}						false		true		false		false		false														false		false																

		84				Source -> Destination				Association						Public						Public										Unspecified		0		0				platform						Unspecified		0		0				32		42														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{231FF501-C77C-4f96-ADC3-D8DA5DB1E7DD}						false		false		false		false		false														false		false																

		86				Source -> Destination				Dependency						Public						Public										Unspecified		0		0										Unspecified		0		0				31		51														0		0		0		0		0		0		0		0		0		3		0		-1				0														0		{278AB5A2-AD44-4e75-BA2B-8A4274CDDD69}						false		true		false		false		false														false		false																



		ConnectorID		Constraint		ConstraintType		Notes



		PropertyID		ElementID		Property		VALUE		NOTES		ea_guid



		Connector_Type		Description

		Aggregation		Aggregation

		Assembly		Assembly

		Association		Association

		Collaboration		Collaboration

		Connector		Composite Connector

		ControlFlow		ControlFlow

		Delegate		Delegate

		Dependency		Dependency

		Deployment		Deployment

		ERLink		ERLink

		Generalization		Generalization

		Instantiation		Instantiation

		InterruptFlow		InterruptFlow

		Manifest		Manifest

		Nesting		Nesting

		NoteLink		NoteLink

		ObjectFlow		ObjectFlow

		Package		Package

		Realisation		Realisation

		Sequence		Sequence

		StateFlow		StateFlow

		UseCase		UseCase

		CommunicationPath		CommunicationPath

		ProtocolConformance		ProtocolConformance

		ProtocolTransition		ProtocolTransition

		InformationFlow		InformationFlow



		ConstantName		ConstantValue

		CompanyName		Sparx Systems

		ECF_EC		1.4

		ECF_EWF		-0.03

		HoursPerUCP		20

		ProjectName		DOJ

		TCF_TC		0.6

		TCF_TWF		0.01



		Constraint		Description		Notes

		Invariant		A state the object must always be in		

		Post-condition		An ending state that must be met		

		Pre-condition		A starting state that must be met		

		Process		A process that must occur		



		Type		ProductName		DataType		Size		MaxLen		MaxPrec		MaxScale		DefaultLen		DefaultPrec		DefaultScale		User		PDATA1		PDATA2		PDATA3		PDATA4		HasLength		GenericType		DatatypeID

		DDL		Oracle		CHAR		1		2000		0		0		1		0		0		0												char		1

		DDL		Oracle		VARCHAR2		1		4000		0		0		50		0		0		0												varchar		2

		DDL		Oracle		VARCHAR		1		4000		0		0		50		0		0		0												varchar		3

		DDL		Oracle		NCHAR		1		2000		0		0		50		0		0		0												nchar		4

		DDL		Oracle		NVARCHAR		1		4000		0		0		50		0		0		0												nvarchar		5

		DDL		Oracle		FLOAT		1		126		0		0		126		0		0		0												float		6

		DDL		Oracle		NUMBER		2		0		38		0		0		8		2		0												number		7

		DDL		Oracle		DATE		0		0		0		0		0		0		0		0												datetime		8

		DDL		Oracle		ROWID		0		0		0		0		0		0		0		0												uniqueidentifier		9

		DDL		Oracle		RAW		0		0		0		0		0		0		0		0												binary		10

		DDL		Oracle		LONG RAW		0		0		0		0		0		0		0		0												binary		11

		DDL		Oracle		CLOB		0		0		0		0		0		0		0		0												text		12

		DDL		Oracle		LONG		0		0		0		0		0		0		0		0												long		13

		DDL		Oracle		CLOB		0		0		0				0		0		0		0														14

		DDL		Oracle		NCLOB		0		0		0		0		0		0		0		0												ntext		15

		DDL		Oracle		BLOB		0		0		0		0		0		0		0		0												blob		16

		DDL		Oracle		BFILE		0		0		0		0		0		0		0		0												blob		17

		DDL		SQLServer7		binary		1		8000		0		0		10		0		0		0												binary		18

		DDL		SQLServer7		bit		0		0		0		0		0		0		0		0												boolean		19

		DDL		SQLServer7		char		1		8000		0		0		1		0		0		0												char		20

		DDL		SQLServer7		datetime		0		0		0		0		0		0		0		0												DateTime		21

		DDL		SQLServer7		decimal		2		0		38		0		0		18		0		0												decimal		22

		DDL		SQLServer7		float		1		53		0		0		53		0		0		0												float		23

		DDL		SQLServer7		image		0		0		0		0		0		0		0		0												binary		24

		DDL		SQLServer7		int		0		0		0		0		0		0		0		0												integer		25

		DDL		SQLServer7		money		0		0		0		0		0		0		0		0												currency		26

		DDL		SQLServer7		nchar		1		4000		0		0		10		0		0		0												nchar		27

		DDL		SQLServer7		ntext		0		0		0		0		0		0		0		0												ntext		28

		DDL		SQLServer7		nvarchar		1		4000		0		0		50		0		0		0												nvarchar		29

		DDL		SQLServer7		numeric		2		0		38		0		0		18		0		0												numeric		30

		DDL		SQLServer7		real		0		0		0		0		0		0		0		0												real		31

		DDL		SQLServer7		smalldatetime		0		0		0		0		0		0		0		0												datetime		32

		DDL		SQLServer7		smallint		0		0		0		0		0		0		0		0												smallint		33

		DDL		SQLServer7		smallmoney		0		0		0		0		0		0		0		0												money		34

		DDL		SQLServer7		text		0		0		0		0		0		0		0		0												text		35

		DDL		SQLServer7		timestamp		0		0		0		0		0		0		0		0												timestamp		36

		DDL		SQLServer7		tinyint		0		0		0		0		0		0		0		0												tinyint		37

		DDL		SQLServer7		varchar		1		8000		0		0		50		0		0		0												varchar		38

		DDL		SQLServer7		varbinary		1		8000		0		0		50		0		0		0												varbinary		39

		DDL		SQLServer7		uniqueidentifier		0		0		0		0		0		0		0		0												uniqueidentifier		40

		DDL		MSAccess		Text		1		255		0		0		50		0		0		0												char		41

		DDL		MSAccess		Memo		0		65535		0		0		0		0		0		0												text		42

		DDL		MSAccess		DateTime		0		0		0		0		0		0		0		0												datetime		43

		DDL		MSAccess		Currency		2		0		15		0		0		15		4		0												currency		44

		DDL		MSAccess		Integer		0		0		0		0		0		0		0		0												integer		45

		DDL		MSAccess		Long		0		0		0		0		0		0		0		0												long		46

		DDL		MSAccess		Single		0		0		7		0		0		0		7		0												float		47

		DDL		MSAccess		Double		0		0		0		0		0		0		0		0												double		48

		DDL		MSAccess		Counter		0		0		0		0		0		0		0		0												counter		49

		DDL		MSAccess		YesNo		0		0		0		0		0		0		0		0												boolean		50

		Code		Visual Basic		Boolean		0		0		0				0		0		0		0												Boolean		51

		Code		Visual Basic		Byte		0		0		0				0		0		0		0												Byte		52

		Code		Visual Basic		Currency		0		0		0				0		0		0		0												Currency		53

		Code		Visual Basic		Date		0		0		0				0		0		0		0												DateTime		54

		Code		Visual Basic		Double		0		0		0				0		0		0		0												Double		55

		Code		Visual Basic		Integer		0		0		0				0		0		0		0												Integer		56

		Code		Visual Basic		Long		0		0		0				0		0		0		0												Long		57

		Code		Visual Basic		Object		0		0		0				0		0		0		0														58

		Code		Visual Basic		Single		0		0		0				0		0		0		0														59

		Code		Visual Basic		String		0		0		0				0		0		0		0												String		60

		Code		Visual Basic		Variant		0		0		0				0		0		0		0												Variant		61

		Code		C++		char		0		0		0				0		0		0		0												Char		62

		Code		C++		int		0		0		0				0		0		0		0												Integer		63

		Code		C++		short		0		0		0				0		0		0		0												Short		64

		Code		C++		long		0		0		0				0		0		0		0												Long		65

		Code		C++		float		0		0		0				0		0		0		0												Float		66

		Code		C++		double		0		0		0				0		0		0		0												Double		67

		Code		C++		void		0		0		0				0		0		0		0														68

		Code		C++		unsigned char		0		0		0				0		0		0		0														69

		Code		C++		unsigned int		0		0		0				0		0		0		0												Uint		70

		Code		C++		unsigned short		0		0		0				0		0		0		0														71

		Code		C++		unsigned long		0		0		0				0		0		0		0												Ulong		72

		Code		Java		byte		0		0		0				0		0		0		0												Byte		73

		Code		Java		char		0		0		0				0		0		0		0												Char		74

		Code		Java		int		0		0		0				0		0		0		0												Integer		75

		Code		Java		short		0		0		0				0		0		0		0												Short		76

		Code		Java		boolean		0		0		0				0		0		0		0												Boolean		77

		Code		Java		long		0		0		0				0		0		0		0												Long		78

		Code		Java		float		0		0		0				0		0		0		0												Float		79

		Code		Java		double		0		0		0				0		0		0		0												Double		80

		Code		Delphi		Boolean		0		0		0				0		0		0		0												Boolean		81

		Code		Delphi		Byte		0		0		0				0		0		0		0												Byte		82

		Code		Delphi		Cardinal		0		0		0				0		0		0		0														83

		Code		Delphi		Char		0		0		0				0		0		0		0												Char		84

		Code		Delphi		Currency		0		0		0				0		0		0		0												Currency		85

		Code		Delphi		Double		0		0		0				0		0		0		0												Double		86

		Code		Delphi		Extended		0		0		0				0		0		0		0														87

		Code		Delphi		Integer		0		0		0				0		0		0		0												Integer		88

		Code		Delphi		LongInt		0		0		0				0		0		0		0														89

		Code		Delphi		LongWord		0		0		0				0		0		0		0												Ulong		90

		Code		Delphi		Single		0		0		0				0		0		0		0														91

		Code		Delphi		ShortInt		0		0		0				0		0		0		0														92

		Code		Delphi		SmallInt		0		0		0				0		0		0		0														93

		Code		Delphi		String		0		0		0				0		0		0		0												String		94

		Code		Delphi		Real		0		0		0				0		0		0		0														95

		Code		Delphi		Variant		0		0		0				0		0		0		0												Variant		96

		Code		Delphi		Variant		0		0		0				0		0		0		0												Variant		97

		Code		Delphi		Word		0		0		0				0		0		0		0												Word		98

		Code		C#		void		0		0		0				0		0		0		0														99

		Code		C#		sbyte		0		0		0				0		0		0		0														100

		Code		C#		byte		0		0		0				0		0		0		0												Byte		101

		Code		C#		short		0		0		0				0		0		0		0												Short		102

		Code		C#		ushort		0		0		0				0		0		0		0												Ushort		103

		Code		C#		int		0		0		0				0		0		0		0												Integer		104

		Code		C#		uint		0		0		0				0		0		0		0												Uint		105

		Code		C#		long		0		0		0				0		0		0		0												Long		106

		Code		C#		ulong		0		0		0				0		0		0		0												Ulong		107

		Code		C#		char		0		0		0				0		0		0		0												Char		108

		Code		C#		float		0		0		0				0		0		0		0												Float		109

		Code		C#		double		0		0		0				0		0		0		0												Double		110

		Code		C#		bool		0		0		0				0		0		0		0												Boolean		111

		Code		C#		decimal		0		0		0				0		0		0		0												Float		112

		Code		VBNet		Integer		0		0		0		0		0		0		0		0												Integer		113

		Code		VBNet		String		0		0		0		0		0		0		0		0												String		114

		Code		VBNet		Short		0		0		0		0		0		0		0		0												Short		115

		Code		VBNet		Long		0		0		0		0		0		0		0		0												Long		116

		Code		VBNet		Char		0		0		0		0		0		0		0		0												Char		117

		Code		VBNet		Byte		0		0		0		0		0		0		0		0												Byte		118

		Code		VBNet		Boolean		0		0		0		0		0		0		0		0												Boolean		119

		Code		VBNet		Double		0		0		0		0		0		0		0		0												Double		120

		Code		VBNet		Date		0		0		0		0		0		0		0		0												Date		121

		Code		VBNet		Object		0		0		0		0		0		0		0		0														122

		Code		VBNet		Single		0		0		0		0		0		0		0		0												Single		123

		Code		VBNet		Datetime		0		0		0		0		0		0		0		0												DateTime		124

		Code		VBNet		Decimal		0		0		0		0		0		0		0		0														125

		DDL		DB2		BIGINT		0		0		0		0		0		0		0		0												bigint		126

		DDL		DB2		BLOB		1		2097152		0		0		0		0		0		0												blob		127

		DDL		DB2		CHARACTER		1		254		0		0		10		0		0		0												char		128

		DDL		DB2		CLOB		0		0		0		0		0		0		0		0												text		129

		DDL		DB2		DATE		0		0		0		0		0		0		0		0												date		130

		DDL		DB2		DECIMAL		2		31		31		0		0		5		0		0												decimal		131

		DDL		DB2		DOUBLE		0		0		0		0		0		0		0		0												double		132

		DDL		DB2		INTEGER		0		0		0		0		0		0		0		0												integer		133

		DDL		DB2		LONG VARCHAR		0		0		0		0		0		0		0		0												text		134

		DDL		DB2		REAL		0		0		0		0		0		0		0		0												real		135

		DDL		DB2		SMALINT		0						0								1														136

		DDL		DB2		TIME		0		0		0		0		0		0		0		0												time		137

		DDL		DB2		TIMESTAMP		0		0		0		0		0		0		0		0												timestamp		138

		DDL		DB2		VARCHAR		1		4000		0		0		10		0		0		0												varchar		139

		DDL		MySql		BIT		0		0		0		0		0		0		0		0												boolean		140

		DDL		MySql		BOOL		0		0		0		0		0		0		0		0												boolean		141

		DDL		MySql		TINYINT		0		0		0		0		0		0		0		0												tinyint		142

		DDL		MySql		SMALLINT		0		0		0		0		0		0		0		0												smallint		143

		DDL		MySql		INTEGER		0		0		0		0		0		0		0		0												integer		144

		DDL		MySql		MEDIUMINT		0		0		0		0		0		0		0		0												integer		145

		DDL		MySql		BIGINT		0		0		0		0		0		0		0		0												bigint		146

		DDL		MySql		FLOAT		1		24		0		0		0		0		0		0												float		147

		DDL		MySql		DOUBLE		2		0		53		0		0		10		2		0												double		148

		DDL		MySql		DOUBLE PRECISION		2		0		53		0		0		10		2		0												double		149

		DDL		MySql		REAL		2		0		53		0		0		10		2		0												real		150

		DDL		MySql		NUMERIC		2		0		53		0		0		10		2		0												numeric		151

		DDL		MySql		DECIMAL		2		0		24		0		0		10		0		0												decimal		152

		DDL		MySql		DATE		0		0		0		0		0		0		0		0												date		153

		DDL		MySql		DATETIME		0		0		0		0		0		0		0		0												datetime		154

		DDL		MySql		TIME		0		0		0		0		0		0		0		0												time		155

		DDL		MySql		TIMESTAMP		0		0		0		0		0		0		0		0												timestamp		156

		DDL		MySql		CHAR		1		255		0		0		10		0		0		0												char		157

		DDL		MySql		VARCHAR		1		255		0		0		50		0		0		0												varchar		158

		DDL		MySql		BLOB		0		0		0		0		0		0		0		0												blob		159

		DDL		MySql		TEXT		0		0		0		0		0		0		0		0												text		160

		DDL		SQL Server 2000		decimal		2		38		38		38		0		10		2		0												decimal		161

		DDL		SQL Server 2000		sql_variant		0		0		0		0		0		0		0		0												sqlvariant		162

		DDL		SQL Server 2000		numeric		2		38		38		38		0		10		2		0												numeric		163

		DDL		SQL Server 2000		varbinary		1		8000		0		0		50		0		0		0												varbinary		164

		DDL		SQL Server 2000		bit		0		0		0		0		0		0		0		0												boolean		165

		DDL		InterBase		nchar		1		32767		0		0		10		0		0		0												nchar		166

		DDL		InterBase		integer		0		0		0		0		10		0		0		0												integer		167

		DDL		InterBase		smallint		0		0		0		0		10		0		0		0												smallint		168

		DDL		MySql		NCHAR		1		255		0		0		10		0		0		0												nchar		169

		DDL		InterBase		timestamp		0		0		0		0		0		0		0		0												datetime		170

		DDL		PostgreSQL		real		1		53		0		0		53		0		0		0												double		171

		DDL		Sybase		binary		0		0		0		0		0		0		0		0												blob		172

		DDL		Sybase		smallint		0		0		0		0		0		0		0		0												smallint		173

		DDL		SQL Server 2000		char		1		8000		0		0		10		0		0		0												char		174

		DDL		SQL Server 2000		timestamp		0		0		0		0		0		0		0		0												timestamp		175

		DDL		Sybase		bigint		0		0		0		0		0		0		0		0												bigint		176

		DDL		Sybase		varchar		1		8000		0		0		50		0		0		0												varchar		177

		DDL		InterBase		double precision		0		0		0		0		0		0		0		0												double		178

		DDL		SQL Server 2000		binary		1		8000		0		0		10		0		0		0												Binary		179

		DDL		SQL Server 2000		image		0		0		0		0		0		0		0		0												blob		180

		DDL		SQL Server 2000		nvarchar		1		4000		0		0		50		0		0		0												nvarchar		181

		DDL		SQL Server 2000		smalldatetime		0		0		0		0		0		0		0		0												datetime		182

		DDL		PostgreSQL		numeric		2		0		38		38		0		10		2		0												numeric		183

		DDL		DB2		FLOAT		0		0		0		0		0		0		0		0												float		184

		DDL		PostgreSQL		integer		0		0		0		0		0		0		0		0												integer		185

		DDL		PostgreSQL		varchar		1		8000		0		0		50		0		0		0												varchar		186

		DDL		Sybase		double		0		53		0		0		0		0		0		0												double		187

		DDL		InterBase		blob sub_type 0		0		0		0		0		0		0		0		0												blob		188

		DDL		Sybase		numeric		2		38		38		38		0		10		2		0												numeric		189

		DDL		SQL Server 2000		money		0		0		0		0		0		19		4		0												currency		190

		DDL		SQL Server 2000		ntext		0		0		0		0		0		0		0		0												ntext		191

		DDL		SQL Server 2000		uniqueidentifier		0		0		0		0		0		0		0		0												guid		192

		DDL		Sybase		real		0		53		0		0		53		0		0		0												real		193

		DDL		Sybase		text		0		0		0		0		0		0		0		0												text		194

		DDL		PostgreSQL		bigint		0		0		0		0		0		0		0		0												bigint		195

		DDL		DB2		SMALLINT		0		0		0		0		0		0		0		0												smallint		196

		DDL		Sybase		char		1		8000		0		0		10		0		0		0												char		197

		DDL		Sybase		datetime		0		0		0		0		0		0		0		0												datetime		198

		DDL		MSAccess		OLEObject		0		0		0		0		0		0		0		0												blob		199

		DDL		Sybase		float		0		0		0		0		0		0		0		0												float		200

		DDL		SQL Server 2000		int		0		0		0		0		0		0		0		0												integer		201

		DDL		SQL Server 2000		datetime		0		0		0		0		0		0		0		0												datetime		203

		DDL		SQL Server 2000		float		0		53		0		0		53		0		0		0												float		204

		DDL		SQL Server 2000		nchar		1		4000		0		0		10		0		0		0												nchar		205

		DDL		Oracle		NVARCHAR2		1		4000		0		0		50		0		0		0												nvarchar		206

		DDL		Sybase		timestamp		0		0		0		0		0		0		0		0												timestamp		207

		DDL		Sybase		tinyint		0		0		0		0		0		0		0		0												tinyint		208

		DDL		InterBase		varchar		1		32767		0		0		50		0		0		0												varchar		209

		DDL		MSAccess		Byte		0		0		0		0		0		0		0		0												tinyint		210

		DDL		SQL Server 2000		real		0		53		0		0		53		0		0		0												double		211

		DDL		SQL Server 2000		text		0		0		0		0		0		0		0		0												text		212

		DDL		SQL Server 2000		tinyint		0		0		0		0		0		0		0		0												tinyint		213

		DDL		PostgreSQL		smallint		0		0		0		0		0		0		0		0												smallint		214

		DDL		PostgreSQL		number		0		0		0		0		0		0		0		0												currency		215

		DDL		SQL Server 2000		smallint		0		0		0		0		0		0		0		0												smallint		216

		DDL		SQL Server 2000		varchar		1		8000		0		0		50		0		0		0												varchar		217

		DDL		DB2		CHAR		1		254		0		0		10		0		0		0												char		218

		DDL		PostgreSQL		char		1		8000		0		0		10		0		0		0												char		219

		DDL		PostgreSQL		decimal		2		0		38		0		0		10		2		0												decimal		220

		DDL		PostgreSQL		text		0		0		0		0		0		0		0		0												text		221

		DDL		SQL Server 2000		bigint		0		0		0		0		0		0		0		0												bigint		222

		DDL		Sybase		integer		0		0		0		0		0		0		0		0												integer		223

		DDL		Sybase		money		0		0		0		0		0		0		0		0												currency		224

		DDL		Sybase		decimal		2		38		38		38		0		10		2		0												decimal		225

		DDL		SQL Server 2000		smallmoney		0		0		0		0		0		0		0		0												money		226

		DDL		InterBase		blob sub_type 1		0		0		0		0		0		0		0		0												text		227

		DDL		InterBase		char		1		32767		0		0		10		0		0		0												char		228

		DDL		MSAccess		Long Integer		0		0		0		0		0		0		0		0												bigint		229

		DDL		PostgreSQL		boolean		0		0		0		0		0		0		0		0												boolean		230

		DDL		PostgreSQL		timestamp		0		0		0		0		0		0		0		0												datetime		231

		DDL		MySql		NVARCHAR		1		255		0		0		50		0		0		0												nvarchar		232

		DDL		PostgreSQL		bytea		0		0		0		0		0		0		0		0												blob		233

		DDL		Sybase		bit		0		0		0		0		0		0		0		0												boolean		234

		DDL		InterBase		decimal		2		0		64		64		0		10		2		0												decimal		235

		Code		PHP		var		0						0								1												var		236

		Code		C#		string		0						0								1												String		237

		Code		C++		wchar_t		0						0								1												Char		238

		Code		C++		bool		0						0								1												Boolean		239



		Diagram_ID		Package_ID		ParentID		Diagram_Type		Name		Version		Author		ShowDetails		Notes		Stereotype		AttPub		AttPri		AttPro		Orientation		cx		cy		Scale		CreatedDate		ModifiedDate		HTMLPath		ShowForeign		ShowBorder		ShowPackageContents		PDATA		Locked		ea_guid		TPos		Swimlanes		StyleEx

		1		2		0		Logical		OMM core part		1.0		Thomas Uslaender		0						true		true		true		P		1000		1000		100		2004-05-11		2005-07-07				true		true		false		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=1;PPgs.cx=0;PPgs.cy=0;PSize=1;ShowIcons=1;SuppCN=1;HideProps=1;HideParents=1;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{A89BF95F-7BDE-4e21-95E4-AFFE10E35991}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		2		2		0		Logical		OMM attribute types		1.0		Thomas Uslaender		0						true		true		true		P		1000		1000		95		2004-05-11		2005-07-22				true		true		false		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=1;PPgs.cx=0;PPgs.cy=0;PSize=1;ShowIcons=1;SuppCN=1;HideProps=1;HideParents=1;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{6F8100C9-A247-4fe2-998B-7CEE2E930038}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		3		2		0		Logical		OMM Association Type		1.0		Thomas Uslaender		0						true		true		true		P		780		1134		100		2005-07-12		2005-07-12				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{E468660B-6952-473b-AD87-72E68045B8B3}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		4		3		0		Logical		Operations		1.0				0						true		true		true		L		1130		795		100		2006-02-24		2006-09-05				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{8071BFF3-57B1-4fde-A86E-7AB2F2B26143}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		5		3		0		Logical		Service Spec Mapping		1.0				0						true		true		true		P		803		1146		100		2006-02-24		2006-09-13				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{0A283D49-76ED-4856-9001-AD1B9B6B6DED}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		6		3		0		Logical		Basic SIO Model		1.0				0						true		true		true		L		1146		803		100		2006-02-27		2006-09-05				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{6202275E-C260-425c-AA2C-5BBB92797DC2}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		7		3		0		Logical		Service Spec		1.0				0						true		true		true		L		1130		795		100		2006-04-07		2007-07-10				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{77501FED-D37A-44be-81FC-23A755A998D4}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=1;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		8		3		0		Logical		ServiceFunctionalClassification		1.0				0						true		true		true		L		1130		795		100		2006-04-26		2006-04-26				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{7DAAC9B1-07E5-4c97-8583-732D345B541A}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;

		9		3		0		Logical		Service Spec Mapping only Profile		1.0				0						true		true		true		P		780		1134		100		2006-06-26		2006-06-26				true		true		true		HideRel=0;ShowTags=0;ShowReqs=0;ShowCons=0;OpParams=1;ShowSN=0;ScalePI=0;PPgs.cx=0;PPgs.cy=0;PSize=9;ShowIcons=1;SuppCN=0;HideProps=0;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideEStereo=0;FormName=;		false		{F890E801-5C60-4b8d-8871-ECBCF6C32540}				locked=false;orientation=0;width=0;inbar=false;names=false;color=0;bold=false;fcol=0;;cls=0;		ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;Layout=;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;TConnectorNotation=;TExplicitNavigability=0;AdvancedElementProps=1;AdvancedFeatureProps=1;AdvancedConnectorProps=1;ProfileData=;MDGDgm=;



		DiagramID		ConnectorID		Geometry		Style		Hidden		Path		Instance_ID

		1		12		 991, 390, 988, 270,SX=-90;SY=38;EX=-90;EY=38;EDGE=1;$LLB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=61:CY=15:OX=56:OY=-17:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=CX=80:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=5C6010E7;SOID=C753382F		false				1

		1		5		 1336, 699, 1254, 54,SX=-5;SY=-24;EX=-5;EY=1;EDGE=2;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=55:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=CX=73:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=8110FFF0;SOID=C753382F		false				2

		1		2		 1060, 949, 702, 332,EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=CX=82:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=A7DEA7FD;SOID=C753382F		false				3

		1		4		 414, 939, 54, 241,EDGE=1;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=123:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=3;EOID=C753382F;SOID=0203A23A		false				4

		1		3		 1063, 1182, 693, 54,EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=CX=82:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=3;EOID=A7DEA7FD;SOID=0203A23A		false				5

		1		8		 1336, 582, 1254, 54,SX=-8;SY=12;EX=-8;EY=12;EDGE=4;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=2;EOID=C753382F;SOID=8110FFF0		false				6

		1		13		 830, 345, 1310, 360,SX=2;SY=22;EX=14;EY=23;EDGE=4;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=CX=77:CY=15:OX=33:OY=-29:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=CX=52:CY=15:OX=-2:OY=-17:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=16:CY=15:OX=-31:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=C753382F;SOID=5C6010E7		false				7

		1		9		 360, 1524, 54, 252,SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=0203A23A;SOID=D6094730		false		95:-430;232:-430;		8

		1		11		 2157, 1539, 54, 283,SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=0203A23A;SOID=999DB783		false		660:-430;232:-430;		9

		1		10		 2333, 1194, 54, 973,EDGE=1;SX=39;SY=-1;EX=39;EY=-1;$LLB=CX=26:CY=15:OX=0:OY=-15:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=62:CY=15:OX=57:OY=-28:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=8110FFF0;SOID=999DB783		false				10

		1		23		 1137, 1522, 54, 249,SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=0203A23A;SOID=0D349335		false		382:-430;232:-430;		11

		2		28		 1798, 1523, 54, 434,EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=5D8A7E34;SOID=4CDAA2F2		false				12

		2		21		 792, 1240, 54, 480,EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=614858A3;SOID=3770511F		false		305:-284;352:-284;		13

		2		22		 2556, 1087, 54, 174,EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=614858A3;SOID=D8AFB2F5		false		124:-284;352:-284;		14

		2		19		 272, 1087, 54, 174,EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=614858A3;SOID=6C694FF3		false		460:-284;352:-284;		15

		2		20		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=614858A3;SOID=C3393DFE		false		715:-284;352:-284;		16

		2		23		 1089, 415, 54, 357,EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=D3C55FC4;SOID=614858A3		false		352:-138;361:-138;		17

		2		14		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C3393DFE;SOID=5D8A7E34		false				18

		3		7		EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C55A11BD;SOID=1D94A3CD		false		201:-215;484:-215;		19

		3		30		EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C55A11BD;SOID=EF07CC91		false		393:-215;484:-215;		20

		3		26		EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C55A11BD;SOID=CF2F80C8		false		562:-215;484:-215;		21

		3		6		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C55A11BD;SOID=331CBFB7		false		736:-215;484:-215;		22

		4		69		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=065A905E;SOID=6E2F80F6		false				23

		4		86		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=13CBC616;SOID=29ED3EDB		false				24

		4		73		SX=-51;SY=-10;EX=-11;EY=-2;EDGE=3;$LLB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=56:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=3;EOID=74783CDB;SOID=40749978		false				25

		4		72		EX=-6;EY=-34;EDGE=4;SX=21;SY=-34;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=65:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;		Mode=2;EOID=74783CDB;SOID=13CBC616		false				26

		4		43		EDGE=1;SX=9;SY=1;EX=9;EY=1;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=CX=44:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=2;EOID=40749978;SOID=13CBC616		false				27

		4		35		SX=0;SY=0;EX=-56;EY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=EB95E372;SOID=13CBC616		false		244:-315;387:-315;		28

		4		48		SX=80;SY=-5;EX=104;EY=-5;EDGE=1;$LLB=CX=28:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=CX=35:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=2;EOID=40749978;SOID=13CBC616		false				29

		4		47		SX=-38;SY=-5;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=EB95E372;SOID=13CBC616		false		424:-315;387:-315;		30

		4		34		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=13CBC616;SOID=946A17BC		false				31

		4		71		SX=62;SY=34;EX=62;EY=41;EDGE=1;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=CX=56:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=2;EOID=40749978;SOID=065A905E		false				32

		4		70		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=EB95E372;SOID=065A905E		false		679:-315;387:-315;		33

		5		62		EDGE=4;$LLB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=74:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=CX=53:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=3;EOID=20893383;SOID=CDD0CC42		false				34

		5		81		EX=-52;EY=-32;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=CX=82:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=28:CY=15:OX=-7:OY=1:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=6C2E4C3B;SOID=20893383		false				35

		5		83		EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=6C2E4C3B;SOID=01EFA0D8		false		362:-274;362:-274;		36

		6		39		SX=49;SY=-16;EX=49;EY=-16;EDGE=2;$LLB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=52:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=CX=78:CY=15:OX=-42:OY=49:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=118C0C18;SOID=5658D9A3		false				37

		6		44		EDGE=1;SX=-3;SY=17;EX=-76;EY=17;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=56:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=CX=16:CY=15:OX=-4:OY=-17:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=5658D9A3;SOID=203F98F0		false				38

		6		40		SX=30;SY=34;EX=30;EY=34;EDGE=4;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=CX=80:CY=15:OX=35:OY=-31:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=CX=61:CY=15:OX=62:OY=-14:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=16:CY=15:OX=-6:OY=1:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=5658D9A3;SOID=118C0C18		false				39

		6		56		EDGE=2;SX=-1;SY=-2;EX=-1;EY=-2;$LLB=;LLT=;LMT=;LMB=CX=53:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRT=;LRB=;		Mode=2;EOID=273C1EAD;SOID=BEEFAE78		false				40

		6		31		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=2154B810;SOID=BEEFAE78		false				41

		6		59		SCME=1;SX=172;SY=-59;EX=172;EY=-59;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=2;EOID=273C1EAD;SOID=273C1EAD		false				42

		6		57		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=5658D9A3;SOID=273C1EAD		false				43

		6		33		EDGE=2;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=;LMB=;LRT=CX=50:CY=15:OX=1:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=3;EOID=5658D9A3;SOID=2154B810		false				44

		7		67		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;IRHS=;ILHS=;		Mode=3;EOID=0655711F;SOID=C77C5FDF;		false				45

		7		68		EDGE=1;$LLB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=46:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=CX=50:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=16:CY=15:OX=-9:OY=-1:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=3;EOID=B0252CC8;SOID=0655711F;		false				46

		7		60		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;IRHS=;ILHS=;		Mode=3;EOID=E3DD2AFB;SOID=2F0047FD;		false				47

		7		37		SX=10;SY=3;EX=-2;EY=-1;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;IRHS=;ILHS=;		Mode=3;EOID=574CE529;SOID=D156B964;		false				48

		7		74		EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;IRHS=;ILHS=;		Mode=3;EOID=B2040C16;SOID=01C5D477;		false				49

		7		61		EDGE=2;SX=36;SY=10;EX=36;EY=10;$LLB=CX=16:CY=15:OX=3:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=72:CY=15:OX=0:OY=2:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=CX=74:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=2;EOID=E3DD2AFB;SOID=461146AC;		false				50

		7		33		EDGE=2;SX=0;SY=16;EX=0;EY=16;$LLB=CX=26:CY=15:OX=-20:OY=-28:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=;LMB=;LRT=CX=50:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=3;EOID=B0252CC8;SOID=461146AC;		false				51

		7		62		EDGE=4;$LLB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=74:CY=15:OX=-3:OY=-2:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=CX=53:CY=15:OX=-27:OY=-1:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=3;EOID=574CE529;SOID=E3DD2AFB;		false				52

		7		66		EDGE=2;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=;LMB=;LRT=CX=46:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=3;EOID=0655711F;SOID=E3DD2AFB;		false				53

		7		38		EDGE=1;SX=-49;SY=-8;EX=-55;EY=-8;$LLB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=CX=61:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=CX=72:CY=15:OX=1:OY=2:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=16:CY=15:OX=-4:OY=3:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=2;EOID=461146AC;SOID=574CE529;		false				54

		7		81		EX=-47;EY=-33;EDGE=3;SX=5;SY=-1;$LLB=;LLT=;LMT=;LMB=;LRT=CX=82:CY=15:OX=-3:OY=23:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=CX=28:CY=15:OX=-4:OY=-20:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;IRHS=;ILHS=;		Mode=2;EOID=BB33E20A;SOID=574CE529;		false				55

		7		76		EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=CX=79:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRB=;IRHS=;ILHS=;		Mode=2;EOID=B2040C16;SOID=574CE529;		false				56

		8		36		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=5936E849;SOID=8FCF081B		false		264:-282;451:-282;		57

		8		42		EDGE=4;$LLB=;LLT=;LMT=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=3;EOID=8FCF081B;SOID=8FCF081B		false				58

		8		41		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=5936E849;SOID=8FCF081B		false		654:-282;451:-282;		59

		8		65		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=8FCF081B;SOID=8FCF081B		false		141:-489;264:-489;		60

		8		64		EDGE=2;$LLB=;LLT=;LMT=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=3;EOID=8FCF081B;SOID=8FCF081B		false				61

		8		63		SCME=1;SX=-19;SY=-42;EX=-19;EY=-42;EDGE=4;$LLB=;LLT=;LMT=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=2;EOID=8FCF081B;SOID=8FCF081B		false				62

		8		46		SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=8FCF081B;SOID=8FCF081B		false		393:-489;264:-489;		63

		8		45		SCME=1;SX=234;SY=-27;EX=234;EY=-27;EDGE=2;$LLB=;LLT=;LMT=CX=26:CY=15:OX=12:OY=-3:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=;		Mode=2;EOID=8FCF081B;SOID=8FCF081B		false				64

		9		62		EDGE=4;$LLB=CX=28:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LLT=;LMT=CX=87:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=3;EOID=A94ADE62;SOID=8855B703		false				65

		9		81		EX=-52;EY=-32;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=CX=16:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;		Mode=2;EOID=C9B4A044;SOID=A94ADE62		false				66

		9		83		EDGE=1;SX=0;SY=0;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C9B4A044;SOID=38CE6392		false		188:-274;328:-274;		67

		9		80		SX=0;SY=0;EX=1;EY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;		Mode=3;EOID=C9B4A044;SOID=0A2416A4		false		468:-274;328:-274;		68



		Diagram_ID		Object_ID		RectTop		RectLeft		RectRight		RectBottom		Sequence		ObjectStyle		Instance_ID

		1		11		-464		278		486		-562		1		DUID=0D349335;LBL=;		1

		1		19		-473		579		741		-557		2		DUID=999DB783;LBL=;		2

		1		21		-471		4		186		-541		3		DUID=D6094730;LBL=;		3

		1		18		-15		417		609		-111		4		DUID=5C6010E7;LBL=;		4

		1		22		-152		587		733		-204		5		DUID=8110FFF0;LBL=;		5

		1		27		-302		433		593		-374		6		DUID=A7DEA7FD;LBL=;		6

		1		26		-296		138		326		-380		7		DUID=0203A23A;LBL=;		7

		1		28		-129		140		324		-227		8		DUID=C753382F;LBL=;		8

		2		6		-431		517		670		-485		1		DUID=02CD48A9;LBL=;		9

		2		17		-495		641		789		-565		2		DUID=5D8A7E34;LBL=;		10

		2		26		-16		283		439		-88		3		DUID=D3C55FC4;LBL=;		11

		2		11		-136		248		456		-234		4		DUID=614858A3;LBL=;		12

		2		29		-384		617		813		-419		5		DUID=C3393DFE;LBL=;		13

		2		12		-309		357		563		-342		6		DUID=6C694FF3;LBL=;		14

		2		16		-309		25		223		-344		7		DUID=D8AFB2F5;LBL=;		15

		2		20		-384		222		388		-419		8		DUID=3770511F;LBL=;		16

		2		4		-615		527		693		-667		9		DUID=4CDAA2F2;LBL=;		17

		3		24		-288		655		817		-358		1		DUID=331CBFB7;LBL=;		18

		3		7		-288		502		623		-358		2		DUID=CF2F80C8;LBL=;		19

		3		2		-288		316		470		-358		3		DUID=EF07CC91;LBL=;		20

		3		25		-288		119		284		-358		4		DUID=1D94A3CD;LBL=;		21

		3		22		-95		424		544		-165		5		DUID=C55A11BD;LBL=;		22

		4		44		-545		590		767		-615		1		DUID=6E2F80F6;		23

		4		31		-545		383		542		-615		2		DUID=29ED3EDB;		24

		4		36		-311		10		138		-381		3		DUID=74783CDB;		25

		4		37		-403		598		760		-473		7		DUID=065A905E;LBL=;		26

		4		67		-545		157		332		-615		8		DUID=946A17BC;LBL=;		27

		4		11		-165		301		473		-265		9		DUID=EB95E372;LBL=;		28

		4		51		-403		381		543		-473		10		DUID=13CBC616;LBL=;		29

		4		62		-402		139		349		-472		11		DUID=13CBC616;LBL=;		30

		4		54		-89		9		219		-174		12		DUID=40749978;LBL=;		31

		5		57		-325		294		430		-395		1		DUID=01EFA0D8;LBL=;		32

		5		60		-28		93		261		-98		2		DUID=20893383;LBL=;		33

		5		40		-27		463		623		-97		3		DUID=CDD0CC42;LBL=;		34

		5		32		-154		285		439		-224		4		DUID=6C2E4C3B;LBL=;		35

		6		70		-327		255		391		-397		1		DUID=2154B810;		36

		6		43		-578		491		633		-710		2		DUID=273C1EAD;LBL=;		37

		6		71		-578		242		404		-648		3		DUID=BEEFAE78;LBL=;		38

		6		59		-225		720		898		-295		4		DUID=118C0C18;LBL=;		39

		6		54		-458		669		879		-543		5		DUID=203F98F0;LBL=;		40

		6		65		-327		465		659		-397		6		DUID=5658D9A3;LBL=;		41

		7		46		-537		884		1029		-607		1		DUID=C77C5FDF;		42

		7		65		-71		875		1035		-141		2		LBL=;DUID=B0252CC8;		43

		7		38		-212		880		1029		-282		3		DUID=0655711F;		44

		7		41		-535		661		802		-605		4		DUID=2F0047FD;		45

		7		66		-538		335		456		-608		5		DUID=D156B964;		46

		7		64		-537		190		292		-607		6		DUID=01C5D477;		47

		7		70		-71		502		638		-141		7		DUID=461146AC;		48

		7		35		-327		120		364		-464		8		DUID=B2040C16;LBL=;		49

		7		32		-358		495		649		-428		9		DUID=BB33E20A;LBL=;		50

		7		60		-213		323		491		-283		10		DUID=574CE529;LBL=;		51

		7		40		-213		649		809		-283		11		DUID=E3DD2AFB;LBL=;		52

		8		52		-562		296		490		-632		1		DUID=8FCF081B;LBL=;		53

		8		39		-562		44		238		-632		2		DUID=8FCF081B;LBL=;		54

		8		55		-370		593		715		-440		3		DUID=8FCF081B;LBL=;		55

		8		61		-369		203		325		-439		4		DUID=8FCF081B;		56

		8		70		-162		383		519		-232		5		DUID=5936E849;LBL=;		57

		9		56		-320		423		513		-390		1		DUID=0A2416A4;		58

		9		57		-318		120		256		-388		2		DUID=38CE6392;LBL=;		59

		9		60		-27		80		205		-97		3		DUID=A94ADE62;LBL=;		60

		9		40		-26		451		596		-96		4		DUID=8855B703;LBL=;		61

		9		32		-154		251		405		-224		5		DUID=C9B4A044;LBL=;		62



		Diagram_Type		Name		Package_ID

		Activity		Activity		1

		Analysis		Analysis		1

		Collaboration		Collaboration		1

		Component		Component		1

		CompositeStructure		CompositeStructure		1

		Custom		Custom		1

		Deployment		Deployment		1

		InteractionOverview		InteractionOverview		1

		Logical		Logical View		1

		Object		Object		1

		Package		Package		1

		Sequence		Sequence		1

		Statechart		Statechart		1

		Timing		Timing		1

		Use Case		Use Case View		1



		DocID		DocName		Notes		Style		ElementID		ElementType		StrContent		BinContent		DocType		Author		Version		IsActive		Sequence		DocDate



		ECFID		Description		Weight		Value		Notes

		ECF01		Familiar with Rational Unified Process		1.5		4.0		

		ECF02		Application experience		0.5		3.0		

		ECF03		Object-oriented experience		1.0		4.0		

		ECF04		Lead analyst capability		0.5		4.0		

		ECF05		Motivation		1.0		3.0		

		ECF06		Stable requirements		2.0		4.0		

		ECF07		Part-time workers		-1.0		0.0		

		ECF08		Difficult programming language		-1.0		3.0		



		EffortType		Description		NumericWeight		Notes

		Analysis		Analyzing System		1.0		Analysis

		Coding		Developing code		1.0		Code writing

		Construction		Design and build system components		1.0		The construction phase is concerned with designing and building the components necessary to implement the system as specified.

		Design		Designing specifications		1.0		Process of developing system design

		Elaboration		Refine specification. Set up project		1.0		The elaboration phase is concerned with refining the system specification, setting up project infrastructure and agreeing on the body of work to be completed.

		Transition		Implementation, acceptance testing		1.0		The Transition phase revolves around the implementation of the project and the acceptance testing carried out by the end user



		FileID		AppliesTo		Category		Name		File		Notes		FileDate		FileSize



		AppliesTo		Option

		CMACRO		_AFX_NO_DEBUG_CRT;_AFX_NO_OCC_SUPPORT;_AFX_OLD_EXCEPTIONS;_AFX_PACKING;_AFXDLL;_DEBUG;_MSC_VER;_UNICODE;AFX_CDECL;AFX_COMDAT;AFX_DATA;AFX_DATADEF;AFX_NOVTABLE;AFXAPI;APICALL;BEGIN_INTERFACE_PART ^ END_INTERFACE_PART;BEGIN_PARAM_MAP ^ END_PARAM_MAP;CONTROLLER_API;DECLARE_DYNAMIC();DECLARE_DYNCREATE();DECLARE_INTERFACE_MAP();DECLARE_MESSAGE_MAP();defined();PASCAL;SWLAPI;WINAPI;

		class		nKill=0;nLang=1;sLang=Java;bConstructor=1;bConInline=0;sConScope=Public;bCpyConstructor=0;bCpyConInline=0;sCpyConScope=Public;bDestructor=1;bDesVirtual=1;bDesInline=0;sDesScope=Public;CHeader=.h;CBody=.cpp;JBody=.java;VBody=.cls;VBNetBody=.vb;sAssocName=m_$LinkClass;bGetSet=1;bGenInterfaces=1;JCol=Vector;CCol=[];VCol=Collection;bVMultiuse=1;bVPersist=0;bVDatabind=0;bVDatasource=0;bVGlobal=0;bVCreatable=1;bVExposed=0;sMTS=0;sCRefType=*;sCGetPrefix=Get;sCSetPrefix=Set;sJGetPrefix=get;sJSetPrefix=set;sCSGetPrefix=Get;sCSSetPrefix=Set;sVVersion=6.0;CSBody=.cs;DBody=.pas;bJInnerClasses=1;sJCollection=;sCodePage=;sPHPBody=.php;sPHPVersion=;sPHPGetPrefix=get;sPHPSetPrefix=set;ASBody=.as;PyBody=.py;CPPVersion=;ASVersion=2.0;ANSICHeader=.h;ANSICBody=.c;



		Term		Type		Meaning		GlossaryID

		Accounting Periods		Business		A defined period of time whereby performance  reports may be extracted. (normally 4 week periods).		1

		Association		Technical		A relationship between two or more entities. Implies a connection of some type - for example one entity uses the services of another, or one entity is connected to another over a network link.		2

		Class		Technical		A logical entity encapsulating data and behavior. A class is a template for an object - the class is the design, the object the runtime instance.		3

		Component Model		Technical		The component model provides a detailed view of the various hardware and software components that make up the proposed system. It shows both where these components reside and how they inter-relate with other components. Component requirements detail what responsibilities a component has to supply functionality or behavior within the system.		4

		Customer		Business		A person or a company that requests An entity to transport goods on their behalf.		5

		Deployment Architecture		Technical		A view of the proposed hardware that will make up the new system, together with the physical components that will execute on that hardware. Includes specifications for machine, operating system, network links, backup units &etc.		6

		Deployment Model		Technical		A model of the system as it will be physically deployed		7

		Extends Relationship		Technical		A relationship between two use cases in which one use case 'extends' the behavior of another. Typically this represents optional behavior in a use case scenario - for example a user may optionally request a list or report at some point in a performing a business use case. 		8

		Includes Relationship		Technical		A relationship between two use cases in which one use case 'includes' the behavior. This is indicated where there a specific business use cases which are used from many other places - for example updating a train record may be part of many larger business processes.		9

		Use Case		Technical		 A Use Case represents a discrete unit of interaction between a user (human or machine) and the system. A Use Case is a single unit of meaningful work; for example creating a train, modifying a train and creating orders are all Use Cases.
Each Use Case has a description which describes the functionality that will be built in the proposed system. A Use Case may 'include' another Use Case's functionality or 'extend' another Use Case with its own behavior.
Use Cases are typically related to 'actors'. An actor is a human or machine entity that interacts with the system to perform meaningful work.		10



		Type		Template

		UseCaseDiagram		<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
<title>Untitled</title>
</head>

<body>
<i>Enterprise Architect</i>
<hr width="100%" size="1">
<br>
<table cellspacing="2" cellpadding="2" border="1" width="100%">
<tr>
    <td bgColor="silver" width=200>Use Case Report:</td>
    <td><b>#NAME#</b></td>
</tr>
<tr>
    <td bgColor="silver"> Author:</td>
    <td> #AUTHOR# </td>
</tr>
<tr>
    <td bgColor="silver">  Date Prepared:</td>
    <td> #DATE# </td>
</tr>
<tr>
    <td bgColor="silver"> Comments:</td>
    <td> #COMMENT# </td>
</tr>
</table>
<P>&nbsp;</P>

<table align="center" cellspacing="2" cellpadding="2" border="1" frame="box">
<tr>
    <td><IMG alt="" border=0 src="#IMAGE#" ></td>
</tr>
</table>
</body>
</html>

		ObjectDetail		<br>
<table width="100%" cellspacing="2" cellpadding="2" border="1" frame="box">
<tr>
    <td>
		<table align="center" width="100%" cellspacing="1" cellpadding="1" border=0>
		<tr><td  colspan=3  align="center" bgcolor="silver"><b>#ObjectDetail#</b></td></tr>
		<tr>
    		<td width=200 bgcolor="Silver">#ITEM#</td>
    		<td width = 100 bgcolor="silver">#TYPE# &nbsp;</td>
			<td bgcolor="silver">#NOTE# &nbsp;</td>
		</tr>
		#ROWS#
		</table>
	</td>
</tr>
</table>

<br>

		Diagram		<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head><title>Enterprise Achitect Diagram Template</title></head>
<body bgcolor="#E4DFFF">
<i>#PROJECT#</i>
<hr width="100%" size="1">
<br>
<table cellspacing="2" cellpadding="2" border="1" width="100%">
<tr>
    <td bgColor="Gray" width=180><font color="White">#REPORT#:</font></td>
    <td colSpan=3 bgcolor="#FCFDCE"><b>#NAME# &nbsp;</b></td>
</tr>
<tr>
    <td bgColor="Gray" > <font color="White">Package:</font></td>
    <td colSpan=3 bgcolor="#FCFDCE">#PACKAGE# &nbsp;</td>
</tr>
<tr>
    <td bgColor="Gray"> <font color="White">Author:</font></td>
    <td width=200 bgcolor="#FCFDCE"> #AUTHOR# &nbsp;</td>
    <TD bgColor="Gray"><font color="White">Date:</font></TD>
    <TD bgcolor="#FCFDCE">#DATE#</TD>
</tr>
<tr>
    <td bgColor="Gray"> <font color="White">Comments:</font></td>
    <td bgcolor="#FCFDCE" colSpan=3> #COMMENT# &nbsp;</td>
</tr>
</table>
<P>&nbsp;</P>
<table align="center" cellspacing="2" cellpadding="2" border="1" frame="box">
<tr>
    <td><IMG USEMAP="#DiagramImageMap" alt="" border=0 src="#IMAGE#" #IMAGESIZE# ></td>
</tr>
</table>
<br>
<hr width="100%" size="1">
<div align="center"><h2>Entity List</h2></div>
<hr width="100%" size="1">
<br>
#ENTITIES#
<br>
<hr width="100%" size="1">
<div align="center"><h2>End of Report</h2></div>
<hr width="100%" size="1">
</body>
<map name="DiagramImageMap">
#IMAGEMAP#	
	<AREA SHAPE="DEFAULT" NOHREF>
</map>
</html>

		Object		<table align="center" width="70%" cellspacing="2" cellpadding="2" border=1>
<tr>
    <td width=150 bgcolor="#BED3C2">Type:</td>
    <td><b><font size="+1">#TYPE#</font></b> &nbsp;</td>
</tr>
<tr>
    <td width=150 bgcolor="#BED3C2">Stereotype:</td>
    <td><b><font size="+1">#STEREO#</font></b> &nbsp;</td>
</tr>
<tr>
    <td width=150 bgcolor="#BED3C2">Author:</td>
    <td>#AUTHOR# &nbsp;</td>
</tr>
<tr>
    <td bgcolor="#BED3C2">Date:</td>
    <td>#DATE# &nbsp;</td>
</tr>
<tr>
    <td bgcolor="#BED3C2">Package:</td>
    <td>#PACKAGE# &nbsp;</td>
</tr>
<tr>
    <td bgcolor="#BED3C2">Notes:</td>
    <td>#NOTE# &nbsp;</td>
</tr>
</table>
<br>

		ObjectDetailLine		<table>
	<tr>
    		<td width=200 >#ITEM#</td>
    		<td width = 100 >#TYPE# &nbsp;</td>
			<td >#NOTE# &nbsp;</td>
	</tr>
	</table>

		UCMetricsRow		<TR>
    <TD width="223">#NAME#</TD>
    <TD width="54">#TYPE#</TD>
    <TD width="84">#COMPLEX#</TD>
    <TD width="175">#PACKAGE#</TD>
  </TR>

		UCMetrics		<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>Untitled</title>
</head>
<body bgcolor="#FFFFCC">
<P>
<i>Enterprise Architect : Use Case Metrics Report</i> 
</P>
<hr width="100%" size="1">
<br>
<H1>Use Case Metrics</H1>
<P></P>
<table cellspacing="2" cellpadding="2" border="1" width="562">
<tr>
    <td bgColor="silver" width=256><b><font size="4">Use Case : Root Package</font></b></td>
    <td width="256"><font size="4"><b>#NAME#</b></font></td>
</tr>
  <TR>
    <TD bgColor=#c0c0c0 width="256"><b><font size="4">Date Prepared:</font></b></TD>
    <TD width="256"><font size="4"><b>#DATE#</b></font> </TD></TR>
  <TR>
    <TD bgColor=#c0c0c0 width="256"><b><font size="4">Unique Use Case Points</font></b></TD>
    <TD width="256"><font size="4"><b>#UUCP#</b></font></TD></TR>
<tr>
    <td bgColor="silver" width="256">  <b><font size="4">Total Package Estimate (hours)</font></b></td>
    <td width="256"> <font size="4"><b> #ESTIMATE#</b></font> </td>
</tr>

</table>
<P>&nbsp;</P>
<H2>Estimate Summary</H2>
<P>
<TABLE border="1" width="563">
  
  <TR>
    <TD width="178" bgcolor="#C0C0C0"><STRONG><FONT size=4>Use Case Points (UCP) = </FONT></STRONG></TD>
    <TD width="365"><FONT size=4>#UCPCALC#</FONT></TD>
    <TD width="112"><FONT size=4>#UCPRESULT#</FONT></TD></TR>
  <TR>
    <TD width="178" bgcolor="#C0C0C0"><STRONG><FONT size=4>Work Effort (hours) = </FONT></STRONG></TD>
    <TD width="365"><FONT size=4>#EFFORTCALC#</FONT></TD>
    <TD width="112"><FONT size=4>#EFFORT#</FONT></TD></TR></TABLE>
<P>&nbsp;</P>
<hr>
<h2>View</h2>
<P><a href="#TCF Summary">Technical Complexity Summary</a></P>
<P><a href="#ECF Summary">Environmental Factors Summary</a></P>
<P><a href="#Unique UC">Unique Use Cases and Actors</a></P>
<P><a href="#TCF Detail">Technical Complexity Details</a></P>
<P><a href="#TCF Detail">Environmental Factors Detail&nbsp;</a></P>
<hr>
<P>&nbsp;</P>
<H3><a name="TCF Summary"></a>Technical Complexity Factors</H3>
<P>
<TABLE border="1" width="561">
  
  <TR>
    <TD bgColor=#000080 width="446"><font color="#FFFFFF">Factor</font></TD>
    <TD width="126" bgColor="#000080"><font color="#FFFFFF">Weight</font></TD></TR>
  
  <TR>
    <TD bgColor=#008080 width="446"><font color="#FFFFFF">Unadjusted TCF Value (UTV)</font></TD>
    <TD width="126">#UTV#</TD></TR>
  <TR>
    <TD width="446" bgColor="#008080"><font color="#FFFFFF">TCF Weight Factor (TWF)</font></TD>
    <TD width="126">#TWF#</TD></TR>
  <TR>
    <TD width="446" bgColor="#008080"><font color="#FFFFFF">TCF Constant (TC)</font></TD>
    <TD width="126">#TC#</TD></TR>
  <TR>
    <TD width="446" bgColor="#008080"><font color="#FFFFFF">Technical Complexity Factor (TCF) = TC + (TWF*UTV)</font>  </TD>
    <TD width="126">#TCF#</TD></TR></TABLE>
<P>&nbsp;</P>
<H3><a name="ECF Summary"></a>Environmental Factors</H3>
<P>
<TABLE border="1" width="561">
  
  <TR>
    <TD bgColor=#000080 width="428"><font color="#FFFFFF">Factor</font></TD>
    <TD width="127" bgColor="#000080"><font color="#FFFFFF">Weight</font></TD></TR>
  
  <TR>
    <TD bgColor=#008080 width="428"><font color="#FFFFFF">Unadjusted ECF Value (UEV)</font></TD>
    <TD width="127">#UEV#</TD></TR>
  <TR>
    <TD bgColor="#008080" width="428"><font color="#FFFFFF">ECF Weight Factor (EWF)</font></TD>
    <TD width="127">#EWF#</TD></TR>
  <TR>
    <TD bgColor="#008080" width="428"><font color="#FFFFFF">ECF Constant (EC)</font></TD>
    <TD width="127">#EC#</TD></TR>
  <TR>
    <TD bgColor="#008080" width="428"><font color="#FFFFFF">Environmental Complexity Factor (ECF) =
      EC + (EWF*UEV)</font> </TD>
    <TD width="127">#ECF#</TD></TR></TABLE>
<P>&nbsp;</P>
<H3><a name="Unique UC"></a>Unique Use Cases and Actors</H3>
<P>
<TABLE border="1" width="564">
  
  <TR>
    <TD bgColor=#000080 width="223"><font color="#FFFFFF">Name</font></TD>
    <TD width="54" bgColor="#000080"><font color="#FFFFFF">Type</font></TD>
    <TD width="84" bgColor="#000080"><font color="#FFFFFF">Complexity</font></TD>
    <TD width="175" bgColor="#000080"><font color="#FFFFFF">Package</font></TD></TR>
    #UUCAA#  
  </TABLE>
<P>&nbsp;</P>
<P>&nbsp;</P>

<H3><a name="TCF Detail"></a>Technical Complexity Factors</H3>
<TABLE border="1" width="564">
#TCFDATA# 
</TABLE>
<P>&nbsp;</P>
<P>&nbsp;</P>

<H3><a name="ECF Detail"></a>Environmental Complexity Factors</H3>
<TABLE border="1" width="564">
#ECFDATA# 
</TABLE>
<P>&nbsp;</P>
<P>&nbsp;</P>


</body>
</html>

		UCMetricsCF		<TR>
  	<TD bgColor=#000080 width="123"><font color="#FFFFFF">#CFID_TITLE#</font></TD>
    <TD bgColor=#000080 width="323"><font color="#FFFFFF">#CFID_NAME#</font></TD>
    <TD width="54" bgColor="#000080"><font color="#FFFFFF">#CFID_WEIGHT#</font></TD>
    <TD width="84" bgColor="#000080"><font color="#FFFFFF">#CFID_VALUE#</font></TD>
    <TD width="175" bgColor="#000080"><font color="#FFFFFF">#CFID_EXVALUE#</font></TD>
    </TR>



		ImageID		Name		Type		Image



		Type

		Requirement

		UseCase

		Component



		Issue		IssueDate		Owner		Status		Notes		Resolver		DateResolved		Resolution		IssueID		Category		Priority		Severity		IssueType



		ListID		Category		Name		NVal		Notes

		{58E32D5B-522E-4bca-AFDE-04776B9AC3B9}		ConstStatusType		Proposed				

		{F8D9BD43-39A2-4d96-80CE-B3E0994E5865}		ConstStatusType		Mandatory				

		{ADD328AF-E9CE-4cb5-9F01-BFB6BC7E52A8}		ConstStatusType		Approved				

		{628ABB12-E0E2-49f7-8952-A87AB1B3D140}		ConstStatusType		Validated				

		{14CAA898-8EAE-47fc-A9BA-367853ED1BE6}		ConstStatusType		Build				

		{AD9D0739-A1DB-4aea-B2B0-BC71F59401B4}		ConstStatusType		Implemented				



		MaintType		Description		NumericWeight		Notes



		Object_ID		Name		Scope		Type



		Metric		Description		NumericWeight		Notes

		Breakage		Convergence, rework, software scrap		1.0		Reworked SLOC per change. 

		Change		Change control, stability		1.0		Change requests, 

		Cost		Budget, cost, expenditure		1.0		Cost per day, percentage expended.

		Progress		Iteration, planning, actuals		1.0		Measures such as function points, SLOC, scenarios, test cases.

		Team		Staffing, team dynamics		1.0		Resource turnover



		Object_ID		Object_Type		Diagram_ID		Name		Alias		Author		Version		Note		Package_ID		Stereotype		NType		Complexity		Effort		Style		Backcolor		BorderStyle		BorderWidth		Fontcolor		Bordercolor		CreatedDate		ModifiedDate		Status		Abstract		Tagged		PDATA1		PDATA2		PDATA3		PDATA4		PDATA5		Concurrency		Visibility		Persistence		Cardinality		GenType		GenFile		Header1		Header2		Phase		Scope		GenOption		GenLinks		Classifier		ea_guid		ParentID		RunState		Classifier_guid		TPos		IsRoot		IsLeaf		IsSpec		IsActive		StateFlags		PackageFlags		Multiplicity		StyleEx		ActionFlags		EventFlags

		1		Package		0		OMM Information								Copyright � 2007, ORCHESTRA Consortium

The ORCHESTRA Consortium (http://www.eu-orchestra.org/contact.shtml) grants third parties the right to use and distribute all or parts of this document, provided that the ORCHESTRA project and the document are properly referenced.

THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
		1				0		1		0				-1		0		-1		-1		-1		2007-07-10		2007-07-11		Proposed		0		0		2																		Java								1.0		Public						0		{868DD455-516F-4733-8DD3-9EE990A2681F}		0						1		false		false		false		false												

		2		Class		0		OMM_SpatialAssociationType						1.0				2		Metaclass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{001AB757-F72D-47d2-92EB-9CA4EA15E0A1}		0								false		false		false		false												LNK=383c;

		3		Class		0		OMM_DocumentType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-06		2006-05-21		Proposed		0		0								0												Java								1.0		Public						0		{0809440E-51E3-4a78-B8CA-89939627FDA9}		0								false		false		false		false												LNK=4df5;

		4		Class		0		OMM_QualityAttributeType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{0EFEF0CD-6D5D-4625-B508-5A67E854F737}		0								false		false		false		false												LNK=f22d;

		5		Class		0		OMM_SchemaDescriptorType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-07		2006-05-21		Proposed		0		0								0												Java								1.0		Public						0		{195CE92E-94BD-4ea6-AD65-861A42D0CCC9}		0								false		false		false		false												LNK=08db;

		6		Note		0								1.0		a thematic attribute may use type definitions of ISO 19115		2				1		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-06		2006-05-21		Proposed		0		0								idref1=14;												<none>								1.0		Public						0		{1B355B39-FAB6-4cf4-97EC-CD4D9601F7B8}		0								false		false		false		false												

		7		Class		0		OMM_AggregationType						1.0				2		Metaclass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{1B5DD48A-99FB-415b-81E2-366C1118918B}		0								false		false		false		false												LNK=402c;

		8		Class		0		OMM_FeatureType				D�sir�e Hilbring		1.0				2				0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-11-21		2006-05-21		Proposed		0		0								0												<none>								1.0		Public						0		{20D9A9D1-262B-47ac-89A2-E31B5B2AAF58}		0								false		false		false		false												LNK=9009;

		9		Class		0		OMM_SourceSystemType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-06		2006-05-21		Proposed		0		0								0												Java								1.0		Public						0		{23261424-BC61-498a-B482-79943FD75049}		0								false		false		false		false												LNK=3b59;

		10		Class		0		OMM_SchemaEntryType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-07		2006-05-21		Proposed		0		0								0																				1.0		Public						0		{35E0DBD1-6326-4942-B8EA-3498B8232ED3}		0								false		false		false		false												LNK=128f;

		11		Class		0		OMM_AttributeType						1.0		feature attribute
 characteristic of a feature

NOTE: A feature attribute has a name, a data type, and a value domain associated to it.  A feature attribute for a feature instance also has an attribute value taken from the value domain.  
EXAMPLE: A feature attribute named 'color' may have an attribute value 'green' which belongs to the data type 'text'.  A feature attribute named 'length' may have an attribute value '82.4' which belongs to the data type 'real'.
[Victoria Terminology Harmonization Meeting]		2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{38ABEECF-9083-4974-8562-758BBEEB7DAA}		0								false		false		false		false												LNK=66c8;

		12		Class		0		OMM_LocationAttributeType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{49DACFA1-02C0-47b1-B5A6-F13A24D6F13C}		0								false		false		false		false												LNK=b6d5;

		13		Class		0		OMM_EventType						1.0		A temporal attribute that describes an action that takes place at an instant.  		2		Metaclass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{4C80416C-4ED9-4d5f-89AD-7CABD773FB07}		0								false		false		false		false												

		14		Class		0		OMM_CoverageType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-06		2006-05-21		Proposed		0		0								0												Java								1.0		Public						0		{53F90673-7F38-4748-8BE1-01F6E638BF77}		0								false		false		false		false												LNK=b16a;

		15		Class		0		OMM_CycleType						1.0		The interval at which an event or state recurs.  		2		Metaclass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{64AD3D3F-FAD7-4a69-97EC-F5E597413308}		0								false		false		false		false												

		16		Class		0		OMM_TemporalAttributeType						1.0		An attribute that takes a value in the temporal domain.  		2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{651D203C-AC4E-42ea-978F-BAA7CC24EC0B}		0								false		false		false		false												LNK=d008;

		17		Class		0		OMM_MetaInfoAttributeType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{68321C32-5EFB-464a-BDD8-44E3B5151B74}		0								false		false		false		false												LNK=54e9;

		18		Class		0		OMM_InheritanceRelation						1.0				2				0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{73AEA82A-77EC-456b-8886-21CBDBC3AD3B}		0								false		false		false		false												ATT=3813;LNK=6cdd;

		19		Class		0		OMM_AssociationRole						1.0				2		MetaClass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{73C0C5DC-DD86-40f3-B838-D5048EF4017B}		0								false		false		false		false												LNK=aa5a;

		20		Class		0		OMM_SpatialAttributeType						1.0				2		MetaClass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-07-24		Proposed		0		0								0																						Public						0		{7591D9F4-29AA-4750-A5C3-180ADB3F9113}		0								false		false		false		false												LNK=58f2;

		21		Class		0		OMM_Operation						1.0		feature operation or class operation
operation associated to a particular class or set of classes of feature		2		MetaClass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{89772E02-3965-4995-9872-B4F9A392CFAC}		0								false		false		false		false												LNK=e193;

		22		Class		0		OMM_AssociationType						1.0				2		MetaClass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{8DEA478C-8359-4566-8C05-72FF70D4C32E}		0								false		false		false		false												LNK=4a4d;

		23		Class		0		OMM_StateType						1.0		A temporal attribute that describes a condition that persists for a period.  		2		Metaclass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21				0		0								0																						Public						0		{8F2576F5-5215-44cb-8540-262AF694A8FE}		0								false		false		false		false												

		24		Class		0		OMM_MetaInfoAssociationType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2005-07-12		2006-05-21		Proposed		0		0								0												Java								1.0		Public						0		{AD600C01-3A97-4d5c-BB00-089E4D474EE7}		0								false		false		false		false												LNK=4a3e;

		25		Class		0		OMM_TemporalAssociationType						1.0				2		Metaclass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{B6E5A039-1892-44b2-AC39-76C16BAD23F7}		0								false		false		false		false												LNK=2f72;

		26		Class		0		OMM_PropertyType						1.0				2		MetaClass		0		2		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-07-28		Proposed		0		0								0																						Public						0		{B7604E7F-2F65-45bb-A2FB-6CFD0A61BCCF}		0								false		false		false		false												LNK=19be;

		27		Class		0		OMM_Constraint						1.0				2		DataObject		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{B98A0CCA-FDE2-42ba-97BA-7A3CF2C3EF5D}		0								false		false		false		false												LNK=0f1d;

		28		Class		0		OMM_FeatureType						1.0		feature: abstraction of real world phenomena 
NOTE: A feature may occur as a type or an instance. Feature type or feature instance should be used when only one is meant.
[Victoria Terminology Harmonization Meeting]

This class describes how a feature class shall be constructed in an Application Schema. In accordance with the conformance clause of the standard, instances of this class are instanciated as feature classes in an Application Schema		2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{D61BAAA7-2B9E-4d6a-B4AB-222DF6A56496}		0								false		false		false		false												ATT=1c08;LNK=bdb5;

		29		Class		0		OMM_ThematicAttributeType						1.0				2		MetaClass		0		1		0		Locked=false;		-1		0		-1		-1		-1		2004-05-11		2006-05-21		Proposed		0		0								0																						Public						0		{F18302A4-CB84-4cf8-8F91-D54A5D537D34}		0								false		false		false		false												LNK=5353;

		30		Package		0		OMM Service								Copyright � 2007, ORCHESTRA Consortium

The ORCHESTRA Consortium (http://www.eu-orchestra.org/contact.shtml) grants third parties the right to use and distribute all or parts of this document, provided that the ORCHESTRA project and the document are properly referenced.

THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
		1				0		1		0				-1		0		-1		-1		-1		2007-07-10		2007-07-11		Proposed		0		0		3																		Java								1.0		Public						0		{34C1316E-85A1-419e-98F0-196F86DDC315}		0						2		false		false		false		false												

		31		Class		0		OA_OperationResultParameter						1.0				3		Type		0		1		0				-1		0		-1		-1		-1		2006-04-13		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{05851E2C-4345-479f-B369-34836BD36C27}		0								false		false		false		false												LNK=2805;

		32		Class		0		OMM_ServiceMappingSpec						1.0				3		MetaClass		17		1		0				-1		0		-1		-1		-1		2006-02-24		2006-09-01		Proposed		0		0								62												Java								1.0		Public						0		{064AC959-B2E3-4791-865F-EAB3F027C0D0}		0								false		false		false		false												ATT=31bd;LNK=df7f;

		33		Class		0		OAS_ServiceDescriptor						1.0				3		type		0		1		0				-1		0		-1		-1		-1		2006-02-10		2006-02-10		Proposed		0		0								0												Java								1.0		Public						0		{1C80BCF0-2A5F-4eef-A330-5CB34A15BFBD}		0								false		false		false		false												LNK=ff1f;

		34		Class		0		OMM_OT_Support_ServiceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-26		2006-04-26		Proposed		0		0								0												Java								1.0		Public						0		{1C8DE820-2536-4a8b-ADAF-29EB463F68D5}		0								false		false		false		false												

		35		Class		0		OMM_PlatformSpec						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-07		2006-09-01		Proposed		0		0								0												Java								1.0		Public						0		{259C255D-F318-42c3-8924-D6848F284C06}		0								false		false		false		false												LNK=e86f;ATT=5071;

		36		Class		0		OMM_OperationRequest						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-09-05		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{32C4F133-F6BE-4892-AC88-C55EF7AE356A}		0								false		false		false		false												LNK=31a9;

		37		Class		0		OMM_ExceptionParameterType				Thomas Usl�nder		1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-10		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{37DEB374-8F98-4761-A8F1-5176BB16CCC7}		0								false		false		false		false												ATT=865f;LNK=4724;

		38		Class		0		OMM_InterfaceAbstractSpec						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-08-31		2006-09-01		Proposed		0		0								0												Java								1.0		Public						0		{41D4CBA5-6501-4195-9C68-EDDF03DB23EF}		0								false		false		false		false												ATT=a8a3;LNK=a4d6;

		39		Class		0		OMM_OA_Info-Structure_ServiceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-26		2006-04-26		Proposed		0		0								0												Java								1.0		Public						0		{49107904-5F30-4e4c-AC3E-624AE4999165}		0								false		false		false		false												LNK=fc00;

		40		Class		0		OMM_ServiceAbstractDesc						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-09-01		Proposed		0		0								0												Java								1.0		Public						0		{496E2D6A-4507-492e-9257-5A4CC4E1AA3C}		0								false		false		false		false												ATT=ce4b;LNK=68e6;

		41		Class		0		OA_ServiceAbstractDesc						1.0				3		Specification		0		1		0				-1		0		-1		-1		-1		2006-09-01		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{4BC6349C-1DCD-4d20-AE16-FB5EEE69BAA4}		0								false		false		false		false												LNK=ffa2;

		42		Class		0		OMM_PlatformMappingSpec						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-07		2006-04-10		Proposed		0		0								0												Java								1.0		Public						0		{4D87D740-9556-4ab1-8339-21F92AFFF71C}		0								false		false		false		false												ATT=2d7b;LNK=862f;

		43		Class		0		OA_Interface						1.0				3		Interface		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{64E6A017-3485-49fd-950F-7341584AE171}		0								false		false		false		false												OPN=d78a;LNK=d5c0;

		44		Class		0		OA_OperationExceptionParameter						1.0				3		Type		0		1		0				-1		0		-1		-1		-1		2006-04-13		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{7425D644-1924-4935-BEE6-2CE8CF1F412F}		0								false		false		false		false												LNK=0cdb;

		45		Class		0		OMM_ServiceComposition						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-08-01		Proposed		0		0								0												Java								1.0		Public						0		{78763E24-5566-436c-95A2-B6CA66D34D1B}		0								false		false		false		false												LNK=e25a;

		46		Class		0		OA_InterfaceAbstractSpec						1.0				3		Specification		0		1		0				-1		0		-1		-1		-1		2006-09-01		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{7C7F2DDF-9912-4e4f-A098-0D1194A38F3A}		0								false		false		false		false												LNK=9128;

		47		Class		0		OAS_OperationResultParameter						1.0				3		type		0		1		0				-1		0		-1		-1		-1		2006-04-10		2006-04-10		Proposed		0		0								0												Java								1.0		Public						0		{828F377A-8A7F-4648-BB4F-2DC8FCA3098D}		0								false		false		false		false												LNK=9852;

		48		Class		0		OMM_ComplexServiceMapping						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-27		2006-08-01		Proposed		0		0								0												Java								1.0		Public						0		{8327BB88-0E26-4e70-94A6-6C1EDA7E8437}		0								false		false		false		false												LNK=5afd;

		49		Class		0		OT_Service						1.0				3		ServiceType		0		1		0				-1		0		-1		-1		-1		2006-02-09		2006-02-10		Proposed		0		0								0												Java								1.0		Public						0		{8F68C644-9C8F-4aa9-9134-BA8233D68FB0}		0								false		false		false		false												LNK=4c1d;

		50		Class		0		OA_Service						1.0				3		ServiceType		0		1		0				-1		0		-1		-1		-1		2006-02-09		2006-02-10		Proposed		0		0								0												Java								1.0		Public						0		{950A4AA3-15FB-4913-8259-95BE03BDF060}		0								false		false		false		false												LNK=3598;

		51		Class		0		OMM_ResultParameterType				Thomas Usl�nder		1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-04-10		Proposed		0		0								0												Java								1.0		Public						0		{9B22E9CE-D516-4d05-AC19-1B08BDD5E337}		0								false		false		false		false												ATT=291c;LNK=0118;

		52		Class		0		OMM_OA_Support_ServiceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-26		2006-04-26		Proposed		0		0								0												Java								1.0		Public						0		{9B857191-2941-4de9-9892-E436C5706998}		0								false		false		false		false												LNK=fc10;

		53		Class		0		OMM_GenericInvocation						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-09-07		2006-09-07		Proposed		0		0								0												Java								1.0		Public						0		{9FB940FC-A2CA-48b8-A513-1241F5865209}		0								false		false		false		false												

		54		Class		0		OMM_OperationType				Thomas Usl�nder		1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-09		2006-04-13		Proposed		0		0								0												Java								1.0		Public						0		{B312DC0A-FBC8-4135-9CCD-17B964A0DA3E}		0								false		false		false		false												ATT=78cc;LNK=75f4;

		55		Class		0		OMM_OT_ServiceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-26		2006-04-26		Proposed		0		0								0												Java								1.0		Public						0		{B97A4AC8-60F7-4d10-8473-A31E43C7F636}		0								false		false		false		false												LNK=ec92;

		56		Class		0		OMM_xxx						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-06-26		2006-06-26		Proposed		0		0								0												Java								1.0		Public						0		{B985221A-41E9-4ced-A8ED-8809A65D1B59}		0								false		false		false		false												LNK=3619;

		57		Class		0		OMM_ServiceProfile						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-08-01		Proposed		0		0								0												Java								1.0		Public						0		{BA8570FE-87FF-48b8-979F-31AED6567FF9}		0								false		false		false		false												LNK=ad40;

		58		Class		0		ServiceCapabilities						1.0				3		interface		0		1		0				-1		0		-1		-1		-1		2006-08-01		2006-08-01		Proposed		0		0								0												Java								1.0		Public						0		{C1AB87F0-7D9A-49a3-B7F2-A63DC398FB39}		0								false		false		false		false												

		59		Class		0		OMM_InterfaceInheritanceRelation						1.0				3				0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-02-24		Proposed		0		0								0												Java								1.0		Public						0		{C6AD0876-DD21-43d5-BDB9-E5449FCF679E}		0								false		false		false		false												ATT=f56a;LNK=e079;

		60		Class		0		OMM_ServiceImplSpec						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-09-01		Proposed		0		0								0												Java								1.0		Public						0		{CDD77DD6-7A46-44ba-AAE2-355890FA5B93}		0								false		false		false		false												ATT=17c5;LNK=df7f;

		61		Class		0		OMM_OA_ServiceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-26		2006-04-26		Proposed		0		0								0												Java								1.0		Public						0		{CFFDE4D7-9D14-40a4-A2BA-07FE1D4C8A37}		0								false		false		false		false												LNK=eca2;

		62		Class		0		OMM_RequestParameterType				Thomas Usl�nder		1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-04-10		Proposed		0		0								0												Java								1.0		Public						0		{DBF42D37-A45C-4574-944A-EAD69F28AD75}		0								false		false		false		false												ATT=f07d;LNK=31a9;

		63		Class		0		OMM_ServiceEquivalentSpec						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-02-28		Proposed		0		0								0												Java								1.0		Public						0		{DDADFD5A-6F7E-4f1d-8FD4-912D5BEFB636}		0								false		false		false		false												LNK=c675;

		64		Class		0		OA_PlatformSpec						1.0				3		Specification		0		1		0				-1		0		-1		-1		-1		2006-09-01		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{DEE77D36-D4A0-4312-AF0E-FE083D29300C}		0								false		false		false		false												LNK=7cf3;

		65		Class		0		OMM_InterfaceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-09		2006-02-27		Proposed		0		0								0												Java								1.0		Public						0		{DF83880B-366F-4d54-9E29-95157E9A7056}		0								false		false		false		false												OPN=189d;ATT=bca5;LNK=9cd5;

		66		Class		0		OA_ServiceImplSpec						1.0				3		Specification		0		1		0				-1		0		-1		-1		-1		2006-09-01		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{E5191F83-D483-44db-AA73-E7089E642CE6}		0								false		false		false		false												LNK=f273;

		67		Class		0		OA_OperationRequestParameter				Thomas Usl�nder		1.0				3		Type		0		1		0				-1		0		-1		-1		-1		2006-04-10		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{E580D204-CD05-498a-BAA9-C91C70974332}		0								false		false		false		false												LNK=1aa6;

		68		Class		0		Class1						1.0				3				0		1		0				-1		0		-1		-1		-1		2006-09-08		2006-09-08		Proposed		1		0								0												Java								1.0		Public						0		{EB82D5D7-8617-4e27-B4CE-DA202DE89344}		0								false		false		false		false												

		69		Class		0		OMM_ServiceEnhancement						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-08-01		2006-08-01		Proposed		0		0								0												Java								1.0		Public						0		{EDF6279D-6917-48bd-B385-D2EDB74E0EF8}		0								false		false		false		false												LNK=5afd;

		70		Class		0		OMM_ServiceType						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-04-26		2006-04-26		Proposed		0		0								0												Java								1.0		Public						0		{EE589C15-4C7E-408b-A3C5-4B81DAB66676}		0								false		false		false		false												ATT=8516;LNK=a9ab;

		71		Class		0		OA_ServiceType						1.0				3		ServiceType		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-09-05		Proposed		0		0								0												Java								1.0		Public						0		{FBCED484-CBED-402a-B464-57B17E7BE19A}		0								false		false		false		false												LNK=10a6;

		72		Class		0		OMM_FailureParameter						1.0				3		MetaClass		0		1		0				-1		0		-1		-1		-1		2006-02-24		2006-02-27		Proposed		0		0								0												Java								1.0		Public						0		{FF8AC022-3009-4d5b-BD4C-03A51C1A85D1}		0								false		false		false		false												LNK=4af8;



		Object_ID		Constraint		ConstraintType		Weight		Notes		Status



		Object_ID		Effort		EffortType		EValue		Notes



		Object_ID		FileName		Type		Note		FileSize		FileDate



		Object_ID		Metric		MetricType		EValue		Notes



		Object_ID		Problem		ProblemType		DateReported		Status		ProblemNotes		ReportedBy		ResolvedBy		DateResolved		Version		ResolverNotes		Priority		Severity



		PropertyID		Object_ID		Property		Value		Notes		ea_guid

		1		2		persistence		persistent				{488EC773-A8C9-40e3-B903-69C8B89BEDF7}

		2		4		persistence		persistent				{CAE3076C-D35F-4f8c-82C1-FB4889DAEB56}

		3		7		persistence		persistent				{8329B90E-E2FD-449c-AB1A-FB71433BC512}

		4		11		persistence		persistent				{0C485BDE-DA9D-4e13-A94F-AAFB2BE8ECDE}

		5		12		persistence		persistent				{E9D6C864-BE38-4411-A73D-A6EA36092D20}

		6		13		documentation		A temporal attribute that describes an action that takes place at an instant.				{32D4D39E-2F1E-4744-8B10-1967F54D3ECC}

		7		13		persistence		persistent				{9344BFF8-E438-435b-81E6-E95DB46E4D30}

		8		15		documentation		The interval at which an event or state recurs.				{EC1C32E0-5B4A-499a-A719-A8C9C8A3FD1F}

		9		15		persistence		persistent				{9FA72EB3-3F5C-463c-80B0-89D7DE56260A}

		10		16		documentation		An attribute that takes a value in the temporal domain.				{B5999BCD-E06B-409d-84C6-3A603C548F4B}

		11		16		persistence		persistent				{EFDBB024-9F75-48c5-8D51-D2B51C9FA94D}

		12		17		persistence		persistent				{0ADC06AF-4167-4f2f-8289-152A41997943}

		13		18		persistence		persistent				{7588F5E8-FA52-4dff-9A24-5131411A2868}

		14		19		persistence		persistent				{18293FBB-74DF-432f-B7CB-32FE37A457BE}

		15		20		persistence		persistent				{A098A27B-F734-48e0-8E39-8F0AF94D6E50}

		16		21		persistence		persistent				{7111B218-E4BF-4d51-ADDF-4785A80A6339}

		17		22		persistence		persistent				{FD13B0A3-AEEB-4349-A5E2-A589C27063AC}

		18		23		documentation		A temporal attribute that describes a condition that persists for a period.				{2113CF24-215A-4a7e-B044-99B096F9D548}

		19		23		persistence		persistent				{5F71AC65-3BCA-412f-8ED0-123F03B29523}

		20		25		persistence		persistent				{786ED77C-40A3-4012-9219-40AC19623F7F}

		21		26		persistence		persistent				{BBB7F34F-6B83-445d-9D0A-6CB0487536BC}

		22		27		persistence		persistent				{3D255610-DF07-44b7-8E34-EEBD1EE7FA41}

		23		28		persistence		persistent				{03FFB688-5178-4c69-BDC0-C7EFCD326A54}

		24		29		persistence		persistent				{A63FA166-A3F8-4159-8418-90013FC93E18}

		25		58		mandatory						{F412BB39-E14A-47b8-BA99-5BBEB078A047}



		ReqID		Object_ID		Requirement		ReqType		Status		Notes		Stability		Difficulty		Priority		LastUpdate



		Object_ID		Resource		Role		Time		Notes		PercentComplete		DateStart		DateEnd		History		ExpectedHours		ActualHours



		Object_ID		Risk		RiskType		EValue		Notes



		Object_ID		Scenario		ScenarioType		EValue		Notes		XMLContent		ea_guid



		Object_ID		Test		TestClass		TestType		Notes		InputData		AcceptanceCriteria		Status		DateRun		Results		RunBy		CheckBy



		Object_ID		TRX		TRXType		Weight		Notes



		Object_Type		Description		DesignObject		ImageID

		ExecutionEnvironment		ExecutionEnvironment		true		8

		Device		Device		true		8

		MergeNode		MergeNode		true		8

		Region		Region		true		8

		DataStore		DataStore		true		8

		CentralBufferNode		CentralBufferNode		true		8

		Comment		Comment		true		8

		ProtocolStateMachine		ProtocolStateMachine		true		8

		Enumeration		Enumeration		true		8

		InformationItem		InformationItem		true		8

		Action		Action		true		8

		ActionPin		ActionPin		true		8

		Activity		Activity		false		21

		ActivityParameter		ActivityParameter		true		8

		ActivityPartition		ActivityPartition		true		8

		ActivityRegion		ActivityRegion		true		8

		Actor		Actor		false		6

		Artifact		UML Artifact		true		8

		Association		Association		false		0

		Boundary		Boundary		false		0

		Change		Change		true		19

		Class		Class		true		5

		Collaboration		Collaboration		false		7

		CollaborationOccurrence		CollaborationOccurrence		true		8

		Component		Component		true		10

		Constraint		Constraint		true		8

		Decision		Decision		false		0

		DeploymentSpecification		DeploymentSpecification		true		8

		DiagramFrame		DiagramFrame		true		8

		Entity		Entity		false		5

		EntryPoint		UML Entry Point		true		8

		Event		Event		false		0

		ExceptionHandler		ExceptionHandler		true		8

		ExitPoint		UML Exit Point		true		8

		ExpansionNode		UML Expansion Node		true		8

		ExpansionRegion		ExpansionRegion		true		8

		Feature		Feature		true		8

		GUIElement		User interface object		true		16

		Interaction		Interaction		true		8

		InteractionFragment		InteractionFragment		true		8

		InteractionOccurrence		InteractionOccurrence		true		8

		InteractionState		InteractionState		true		8

		Interface		Interface		false		8

		InterruptibleActivityRegion		InterruptibleActivityRegion		true		8

		Issue		Issue		true		19

		Label		Label		false		0

		LoopNode		LoopNode		true		8

		MessageEndpoint		MessageEndpoint		true		8

		Node		Node		true		9

		Note		Note		false		0

		Object		Object		false		5

		ObjectNode		ObjectNode		true		8

		Package		Package		true		4

		Parameter		UML Activity Parameter		true		8

		Part		Part		true		8

		Port		UML Port		true		8

		ProvidedInterface		ProvidedInterface		true		8

		Report		System report		true		17

		RequiredInterface		RequiredInterface		true		8

		Requirement		Requirement		true		19

		Screen		Interface Screen		true		11

		Sequence		Sequence		false		0

		Signal		Signal		true		8

		State		State Chart Object		true		20

		StateMachine		StateMachine		true		8

		StateNode		Start End State		false		59

		Synchronization		Synchronization		false		0

		Text		Text		false		0

		TimeLine		TimeLine		true		8

		Trigger		Trigger		true		8

		UMLDiagram		UML Diagram		true		8

		UseCase		UseCase		false		7

		User		User		false		0



		ObjectType		ComplexityWeight

		Actor		1.0

		UseCase		5.0



		OperationID		Object_ID		Name		Scope		Type		ReturnArray		Stereotype		IsStatic		Concurrency		Notes		Behaviour		Abstract		GenOption		Synchronized		Pos		Const		Style		Pure		Throws		Classifier		Code		IsRoot		IsLeaf		IsQuery		StateFlags		ea_guid		StyleEx

		1		43		op1		Public		Any		0				0		Sequential										0		0		0				false								false		false		false				{61EEB823-D4B1-47c6-A736-9084F1EA1E86}		

		2		43		op2		Public		Any		0				0		Sequential										0		1		0				false								false		false		false				{10E619F6-7E20-41bb-A54B-FB8DD8F97814}		

		3		43		op3		Public		void		0		optional		0		Sequential										0		2		0				false								false		false		false				{A68078A9-FDB0-49ae-AAE7-316315E9B337}		



		OperationID		Name		Type		Default		Notes		Pos		Const		Style		Kind		Classifier		ea_guid		StyleEx

		1		para1		Any						0		false				in				{41F07C4B-1257-457e-AB25-070683814E7A}		

		2		para1		Any						0		false				in				{30D0F9E6-18CE-4cd9-BA3F-4D22964EEE87}		

		3		para1		Any						0		false				in				{3001BBDD-648F-4a64-90E9-99050D99E6C2}		



		OperationID		PostCondition		Type		Notes



		OperationID		PreCondition		Type		Notes



		PropertyID		ElementID		Property		VALUE		NOTES		ea_guid



		Package_ID		Name		Parent_ID		CreatedDate		ModifiedDate		Notes		ea_guid		XMLPath		IsControlled		LastLoadDate		LastSaveDate		Version		Protected		PkgOwner		UMLVersion		UseDTD		LogXML		CodePath		Namespace		TPos		PackageFlags		BatchSave		BatchLoad

		1		RM-OA		0								{E5282CFB-275D-4bb2-8AE0-24FAF74F728D}				false								false						false		false												

		2		OMM Information		1		2005-07-07		2005-07-07		Copyright � 2007, ORCHESTRA Consortium

The ORCHESTRA Consortium (http://www.eu-orchestra.org/contact.shtml) grants third parties the right to use and distribute all or parts of this document, provided that the ORCHESTRA project and the document are properly referenced.

THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
		{868DD455-516F-4733-8DD3-9EE990A2681F}				false		2005-08-01		2005-08-01				false						false		false						1		CRC=d92f2052;		0		0

		3		OMM Service		1		2005-07-13		2005-07-13		Copyright � 2007, ORCHESTRA Consortium

The ORCHESTRA Consortium (http://www.eu-orchestra.org/contact.shtml) grants third parties the right to use and distribute all or parts of this document, provided that the ORCHESTRA project and the document are properly referenced.

THIS DOCUMENT IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS DOCUMENT, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
		{34C1316E-85A1-419e-98F0-196F86DDC315}				false		2006-02-10		2006-02-10				false						false		false						2		CRC=659b9342;		0		0



		PaletteID		Name		Type



		PaletteID		ItemID



		PhaseID		PhaseName		PhaseNotes		PhaseStyle		StartDate		EndDate		PhaseContent



		Datatype		Description

		boolean		true/false

		char		character

		double		double

		int		integer

		long		long number

		string		character string

		xml		XML Data



		ProblemType		Description		NumericWeight		Notes

		HW		Hardware related		1.0		

		Network		Network problems		1.0		Network issues

		Perform		Performance		1.5		Performance related problems

		SW		Software		2.0		Software related issues

		User		User caused problem		1.0		Problems caused by user



		Role		Description		Notes

		Application Analyst		Define and model the application structure		

		Business Analyst		Model business processes		

		C++ Programmer		Programming in Visual C++		

		Developer		Application development		

		Java Programmer		Java programming		

		Project Manager		Manage schedule		Manage the project schedule 

		Solution Architect		Lead Technical and Project Architect		Define and communicate application architecture

		Use Case Modeller		Use Case modelling 		

		VB Programmer		Visual Basic Programming		



		Property		Description		Notes

		Datafield		Database field		

		Role		Person role 		Used in entities

		Software		Software component		



		Requirement		Description		NumericWeight		Notes

		Display		System will display in a specified format		1.0		Information will be displayed in a particular way

		Functional		Functional Requirement		1.0		Comments here

		Performance		Performance based requirement		1.0		The system must meet some performance criteria

		Printing		System printing requirement		1.0		The system will allow the user(s) to print out some artifact as required by the specification. 

		Report		The system will roduce a report		1.0		The system will have the facility to produce a report as required

		Testing		Testing requirement		1.6		Testing requirement

		Validate		Validate a particular rule		1.0		The system will validate a specific rule as supplied in the business requirements



		Name		Organisation		Phone1		Phone2		Mobile		Fax		Email		Roles		Notes



		Risk		Description		NumericWeight		Notes



		ConnectorID		Constraint		ConnectorEnd		ConstraintType		Notes



		Type		Template

		H3		\pard\plain \s3\sb240\sa60\keepn\widctlpar\outlinelevel2\adjustright \f1\ul\cgrid {#TEXT# \par}
\pard\plain \widctlpar\adjustright \fs20\cgrid

		H2		\pard\plain \s2\sb240\sa60\keepn\widctlpar\outlinelevel1\adjustright \b\i\f1\cgrid {#TEXT# \par}
\pard\plain \widctlpar\adjustright \fs20\cgrid {\par}

		DocHeader2		{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
{\f149\froman\fcharset238\fprq2 Times New Roman CE;}{\f150\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f152\froman\fcharset161\fprq2 Times New Roman Greek;}{\f153\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f154\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f155\fswiss\fcharset238\fprq2 Arial CE;}{\f156\fswiss\fcharset204\fprq2 Arial Cyr;}{\f158\fswiss\fcharset161\fprq2 Arial Greek;}{\f159\fswiss\fcharset162\fprq2 Arial Tur;}
{\f160\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;
\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\i\f1\cgrid \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\widctlpar\adjustright \f1\ul\cgrid 
\sbasedon0 \snext0 heading 3;}{\s15\sb120\sa120\widctlpar\adjustright \b\fs20\cgrid \sbasedon0 \snext0 caption;}{\*\cs10 \additive Default Paragraph Font;}}

{\*\listtable{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360
\jclisttab\tx360 }{\listname ;}\listid1869176857}}{\*\listoverridetable{\listoverride\listid1869176857\listoverridecount0\ls1}}

{\info{\author gsparks}{\operator gsparks}{\creatim\yr2000\mo3\dy29\hr21\min45}{\revtim\yr2000\mo3\dy29\hr22\min14}{\version11}{\edmins2}{\nofpages1}{\nofwords0}{\nofchars0}
{\*\company Sparx Systems}{\nofcharsws0}{\vern113}} \margl1080\margr1080\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}

		Figure		\pard\plain \s15\sb120\sa120#INDENT#\widctlpar\adjustright \b\fs20\cgrid {Figure }{\field\flddirty{\*\fldinst { SEQ Figure \\* ARABIC }}{\fldrslt {\lang1024 1}}}{ : #FIGURE#
\par }

		GIF		{\field{\*\fldinst { INCLUDEPICTURE "Images\\\\#PICTURE#" \\* MERGEFORMAT \\d }}{\fldrslt {\lang1024 }}}{ \par }

		Object2		{\i Type:}{\tab\tab #TYPE# \par \i Status:}
{\tab \tab #STATUS# \par 
\i Package:}{\tab #PACKAGE#\par \i Details:} {\tab\tab #DETAILS#}
{\par\par #NOTE#}{\par }

		ListItem		\pard \fi-360\li1080\nowidctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls3\adjustright {#TEXT#
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}

		MethodHDR		\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx2844\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx5796\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard\plain \widctlpar\intbl\adjustright \fs20\cgrid {Method\cell Type
\cell Notes\cell }
\pard \widctlpar\intbl\adjustright {\row }

		Object		{\i\b #TYPE#: }{ #NOTE#} {\par }

		Object_old		{\i\b #TYPE# Description \par }
{ #NOTE#}{\par }

		AttributeRow		\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx2844\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx5796\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard \widctlpar\intbl\adjustright 
{ #ATTRIBUTE# \cell #TYPE# \cell #NOTES# \cell }\pard \widctlpar\intbl\adjustright {\row }

		ListItem2		\pard \fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls1\adjustright {#TEXT# \par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}

		Requires		{#REQUIREMENT#. #NOTES#  }

		MethodRow		\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx2844\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx5796\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard \widctlpar\intbl\adjustright 
{ #METHOD# \cell #TYPE# \cell #SCOPE# \cell }\pard \widctlpar\intbl\adjustright {\row }

		AttributeHdr		\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \trbrdrh\brdrs\brdrw10 \trbrdrv\brdrs\brdrw10 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx2844\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb
\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx5796\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb \cellx8748\pard\plain \widctlpar\intbl\adjustright \fs20\cgrid {Attribute\cell Type
\cell Notes\cell }
\pard \widctlpar\intbl\adjustright {\row }

		BlankLine		\pard\plain \widctlpar\adjustright \fs20\cgrid {\par }

		TableEnd		\pard \widctlpar\adjustright {\par }

		DocHeader1		{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
{\f149\froman\fcharset238\fprq2 Times New Roman CE;}{\f150\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f152\froman\fcharset161\fprq2 Times New Roman Greek;}{\f153\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f154\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f155\fswiss\fcharset238\fprq2 Arial CE;}{\f156\fswiss\fcharset204\fprq2 Arial Cyr;}{\f158\fswiss\fcharset161\fprq2 Arial Greek;}{\f159\fswiss\fcharset162\fprq2 Arial Tur;}
{\f160\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;
\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\i\f1\cgrid \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\widctlpar\adjustright \f1\cgrid 
\sbasedon0 \snext0 heading 3;}{\s15\sb120\sa120\widctlpar\adjustright \b\fs20\cgrid \sbasedon0 \snext0 caption;}{\*\cs10 \additive Default Paragraph Font;}}

{\*\listtable{\list\listtemplateid67698689
\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1114859770}{\list\listtemplateid67698699\listsimple
{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3880 ?;}{\levelnumbers;}\f14\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1693338663}{\list\listtemplateid67698689\listsimple{\listlevel
\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1869176857}}{\*\listoverridetable{\listoverride\listid1869176857
\listoverridecount0\ls1}{\listoverride\listid1693338663\listoverridecount0\ls2}{\listoverride\listid1114859770\listoverridecount0\ls3}}


{\info{\author gsparks}{\operator gsparks}{\creatim\yr2000\mo3\dy29\hr21\min45}{\revtim\yr2000\mo3\dy29\hr22\min14}{\version11}{\edmins2}{\nofpages1}{\nofwords0}{\nofchars0}
{\*\company Sparx Systems}{\nofcharsws0}{\vern113}}\margl1080\margr1080\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}

		Normal		\pard\plain \widctlpar\adjustright \fs20\cgrid {#TEXT# \par}

		H1		\pard\plain \s1\sb240\sa60\keepn\widctlpar\outlinelevel0\adjustright \b\f1\fs28\kerning28\cgrid{#TEXT#\par }
\pard\plain \widctlpar\adjustright \fs20\cgrid {\par}

		DocHeader		{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f47\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Arial Bold Italic;}{\f125\froman\fcharset238\fprq2 Times New Roman CE;}{\f126\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f128\froman\fcharset161\fprq2 Times New Roman Greek;}{\f129\froman\fcharset162\fprq2 Times New Roman Tur;}{\f130\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f131\fswiss\fcharset238\fprq2 Arial CE;}{\f132\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f134\fswiss\fcharset161\fprq2 Arial Greek;}{\f135\fswiss\fcharset162\fprq2 Arial Tur;}{\f136\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\i\f47\fs28\cf9\cgrid \sbasedon0 \snext0 
heading 2;}{\s3\sb240\sa60\keepn\widctlpar\adjustright \f1\cgrid \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\sb120\sa120\widctlpar\adjustright \b\fs20\cgrid \sbasedon0 \snext0 caption;}}{\*\listtable
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1114859770}
{\list\listtemplateid67698699\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3880 ?;}{\levelnumbers;}\f0\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1693338663}
{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname ;}\listid1869176857}}
{\*\listoverridetable{\listoverride\listid1869176857\listoverridecount0\ls1}{\listoverride\listid1693338663\listoverridecount0\ls2}{\listoverride\listid1114859770\listoverridecount0\ls3}}{\info{\title Class Model}{\author gsparks}
{\operator Geoffrey Sparks}{\creatim\yr2000\mo9\dy29\hr16\min21}{\revtim\yr2000\mo9\dy29\hr16\min21}{\version2}{\edmins1}{\nofpages4}{\nofwords370}{\nofchars2110}{\*\company Sparx Systems}{\nofcharsws2591}{\vern113}}\margl1080\margr1080 
\widowctrl\ftnbj\aenddoc\hyphcaps0\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}

		H2_New		\pard\plain \s2\sb240\sa60\keepn\widctlpar\outlinelevel1\adjustright \b\i\f47\fs28\cf9\cgrid{#TEXT# \par}
\pard\plain \widctlpar\adjustright \fs20\cgrid {\par}



		TemplateID		RootPackage		Filename		Details		ProcessChildren		ShowDiagrams		Heading		Requirements		Associations		Scenarios		ChildDiagrams		Attributes		Methods		ImageType		Paging		Intro		Resources		Constraints		Tagged		ShowTag		ShowAlias		PDATA1		PDATA2		PDATA3		PDATA4

		Architecture Model		0		C:\TEMP\Architecture.RTF		true		true		true		Architecture		true		true		true		true		true		true		0		true		The system architecture model defines the overall hardware/software architecture used to implement the system. 		false		false		false		false		false								

		Class Model		0		C:\Temp\ClassModel.RTF		true		true		true		Class Model		true		true		true		true		true		true		0		true		The logical model is made up of the Domain Model - a high level model of business objects and relationships between objects suitable for analysing the business process, and the class model - a rigorous model of classes and their inter-relationships, suitable for building a software product.		true		true		true		false		false								

		Component Model		0		C:\Temp\Component.RTF		true		true		true		Component Model		true		true		true		true		true		true		0		true		The component model provides a detailed view of the various hardware and software components that make up the proposed system. It shows both where these components reside and how they inter-relate with other components. Component requirements detail what responsibilities a component has to supply functionality or behaviour within the system.
		false		false		false		true		true								

		Deployment		0		C:\Temp\Deployment.RTF		true		true		true		Deployment Architecture		true		true		true		true		true		true		0		true		The Deployment View provides a detailed model of the way components will be deployed across the system infrastructure. It details network capabilities, server specifications, hardware requirements and other information related to deploying the proposed system.		false		false		false		false		false								

		Development Products		0		C:\Temp\DevelopProducts.RTF		true		true		true		Development Environment		true		true		true		true		true		true		0		true		The Development Environment model provides a detailed view of the various hardware and software components that are involved in the development of the application. It shows both where these components reside and how they inter-relate with other components. Component requirements detail what responsibilities a component has to supply functionality or behaviour within the system.
		true		true		true		false		false								

		DRP		0		C:\temp\DRP.RTF		true		true		true		DRP		true		true		true		true		true		true		0		true		The DRP model provides an overview of the proposed Disaster Recovery Procedures for the FMS application.
		true		true		true		false		false								

		Dynamic Model		0		C:\Temp\DM.RTF		true		true		true		Dynamic Model		true		true		true		true		true		true		0		true		The Dynamic Model provides a view of business processes that impact the proposed system. It shows how actors carry out high level business tasks to meet business demands. Business processes that will be performed by the proposed system will be ultimately implemented by the Use Cases detailed in the Use Case model.		true		true		true		false		false								

		Interviews		0		D:\vblocal\projects\FMS\docs\interviews.RTF		true		true		true		Interviews		true		true		true		true		true		true		0		true				false		false		false		false		false								

		Release Management		0		C:\Temp\ReleaseMan.RTF		true		true		true		Release Management		true		true		true		true		true		true		0		true		The Release Management model provides a detailed view of the various hardware and software components that are involved in the management of software versions released into the proposed production environment. It shows both where these components reside and how they inter-relate with other components. Component requirements detail what responsibilities a component has to supply functionality or behaviour within the system.
		true		true		true		false		false								

		Use Case Model		0		C:\TEMP\Use Case Model.RTF		true		true		true		Use Case Model		true		true		true		true		true		true		0		true		The Use Case Model describes the proposed functionality of the new system. A Use Case represents a discrete unit of interaction between a user (human or machine) and the system. A Use Case is a single unit of meaningful work; for example creating a train, modifying a train and creating orders are all Use Cases.
Each Use Case has a description which describes the functionality that will be built in the proposed system. A Use Case may 'include' another Use Case's functionality or 'extend' another Use Case with its own behaviour.
Use Cases are typically related to 'actors'. An actor is a human or machine entity that interacts with the system to perform meaningful work.		false		false		false		false		false								



		RuleID		RuleName		RuleType		RuleActive		ErrorMsg		Flags		RuleOCL		Notes		RuleXML



		ScenarioType		Description		NumericWeight		Notes

		Alternate		Alternate pathway		1.0		Path of execution that includes exceptional conditions.

		Basic Path		Basic execution path		1.0		The standard execution path with no exceptions

		Simple		Standard scenario		1.0		Used to describe ordinary usage



		ScriptID		ScriptCategory		ScriptName		ScriptAuthor		Notes		Script



		GroupID		GroupName		Description



		GroupID		PermissionID



		UserID		GroupID		EntityType		EntityID		Timestamp		LockType



		PermissionID		PermissionName



		Property		Value



		UserID		UserLogin		FirstName		Surname		Department		Password



		UserID		GroupID



		UserID		PermissionID



		SnapshotID		SeriesID		Position		SnapshotName		Notes		Style		ElementID		ElementType		StrContent		BinContent1		BinContent2



		Status		Description

		Proposed		Item has been proposed

		Approved		Item is approved

		Mandatory		Required

		Validated		Approved and Checked

		Implemented		Finished



		Stereotype		AppliesTo		Description		MFEnabled		MFPath		Metafile		Style		ea_guid		VisualType

		process		activity		A classifier whose instances represent a flow		false								{F4F16F4B-C297-4394-B781-7E5F3AEFC2F7}		

		subscribe		association		Source class will be notified when an event occurs in target		false								{55AED629-508F-4718-A23A-96AFBACE9104}		

		column		AttribTable		A column attribute for a table		false								{02A608B4-ED23-4b60-97FC-200C4EF28DC5}		

		case worker		business class		A worker who directly interacts with actors outside the system		false								{E0BE2E22-D8A6-4226-A264-06A659E14ACB}		

		entity		business class		Passive class accessed and manipulated by workers		false								{25D249FB-CE0B-4ad7-9E5D-8058FDB9A841}		

		internal worker		business class		A worker that interacts with other workers and entities inside the system.		false								{BD4F78EC-74D7-4bce-B8C0-BF842D1FB78A}		

		worker		business class		An abstraction of a human that works within the system.		false								{366DF0A4-D33D-4289-B509-CB011195186C}		

		object system		business model		Contains business process objects, work units, organization units and relationships		false								{CC7E5E75-0E03-409d-B61E-48E13D5ABFDD}		

		organization unit		business model		Subsystem corresponding to an organizational unit of the actual business		false								{CA0FFB6B-7443-4d57-ACEF-301E0514DC0A}		

		work unit		business model		Subsystem with one or more entities		false								{BBE14857-B1FE-42b7-94BB-E13F88B9DA86}		

		asp page		class		A Microsoft active server page		false								{F5D1ED1B-CD00-4d13-882B-313777CDF70D}		

		boundary		class		Specifies an element that is at the system boundary (e.g.. User Interface)		false								{C7D7CE55-9D1D-4312-8DF9-E80A67AB9BA4}		

		client page		class		A class that represents a client based web page		false								{195A5B0C-27D7-422a-81E0-2B8F650A9C9F}		

		clientscript		class		A collection of client-side scripts		false								{57142AFC-3547-4f04-877B-F8CCC71735DD}		

		control		class		Specifies an element that controls the work and lifetimes of other objects		false								{E6B6F58A-A13D-4a04-9756-1AE0043A029C}		

		entity		class		Specifies a persistent element mainly concerned with managing its own state		false								{2C0B74F4-9EE7-4a4e-8F6A-4471A2F67C56}		

		enumeration		class		Specifies an enumerated type		false								{530B2BDB-9786-4352-ADD7-309BCB5A2F42}		

		exception		class		An event may be thrown or caught by operation		false								{7757533A-EBB7-4ac1-946F-B83712F97DF5}		

		form		class		A class that represents a html form		false								{A664AD0F-764F-4737-AB5B-9FCE6B599F39}		

		frameset		class		A class that represents a html frame set		false								{8E0703A0-B895-43eb-8831-887459F4F4C9}		

		implementationClass		class		Implementation of a class in some programming language		false								{483E16B3-58AE-482a-8A62-C20B5DAD1212}		

		interface		class		A collection of operations that specify a service of a class or component		false								{1687A0E9-3214-4094-8D5D-0C7959967229}		

		jsp page		class		A java server page		false								{D819FD3E-10B7-44c8-AEFE-F7E5FC914AAD}		

		model document		class		Set a class as an RTF "Model Document"		false						Fill=-1;Border=-1;Font=-1;		{38760C75-30AC-428e-BA9A-2EC1154F0071}		

		powertype		class		A classifier whose objects are all children of a given parent		false								{3E975BD8-552F-4bd2-B9DA-6A17AC7D2C54}		

		process		class		A classifier whose instances represent a flow		false								{AF943E2E-5FFA-41c2-BB96-B5286ADD7893}		

		script library		class		A library of subroutines/functions for web pages		false								{E7CAC20A-FECD-4246-8563-7A2D3E68D93F}		

		server page		class		A class that represents a server based web page		false								{618BB63C-CB32-43e1-8201-CFF97E2D0514}		

		servlet		class		A java servlet component		false								{7F17DFA7-53A6-40c7-AF86-94121488677E}		

		signal		class		Specifies an asynchronous stimulus communicated amongst instances		false								{C9C19D6B-C7B4-4f05-BB63-038D09904380}		

		stereotype		class		The classifier is a stereotype that may be applied to other elements		false								{CE10ED1E-B8F2-471d-B83E-25328BE24F65}		

		table		class		A class that represents a database table		false								{B94443AC-7842-4c68-AA20-25741C0064FE}		

		target		class		A class that represents a target		false								{2B221FC9-E098-4537-969B-43F7F0639AA2}		

		thread		class		A classifier whose instances represent a lightweight flow of control		false								{C1EABDA0-7B65-43d1-A0EB-ABF395D54145}		

		type		class		An abstract class specifying the structure but not implementation of a set of objects		false								{EEB9245E-3970-45ff-85A6-BB440CAC4690}		

		utility		class		A class whose attributes and operations are all class-scoped		false								{BA25B5DE-709F-48d7-BB44-C3CC0FD945A3}		

		web page		class		A html web page		false								{B5D76865-4127-41bb-A2DC-10C116ED117F}		

		metaclass		classifier		A classifier whose objects are all classes		false								{1C397409-6CD2-4160-B569-DA9AC42F0A94}		

		requirement		comment		Specifies a desired feature, property or behavior of system		false								{B1FAB9AB-146B-4a06-8A3B-867A8057C0F5}		

		responsibility		comment		Specifies a contract by or an obligation of a class		false								{998DC98F-60E1-4c3a-B665-B78B3D434978}		

		document		component		The component represents a document		false								{145E4256-6B70-474a-AEEA-A27AB1187C2F}		

		executable		component		A component may be executed on a node		false								{11F0005F-4F8D-4f66-BA29-99047F0F07D4}		

		file		component		Component represents a document containing source code		false								{98B64C2A-642C-4b55-B8A4-B4451D6DD15E}		

		library		component		Static or dynamic object library		false								{5FB7E872-6ABA-4a9e-A4CD-D2C6DE09F9BB}		

		table		component		A component that represents a database table		false								{ED839C90-E90A-4efd-A20D-88BE027095BA}		

		invariant		constraint		Constrain must always hold for associated element		false								{43A0B002-1FDE-431c-A440-5B3177D93A21}		

		postcondition		constraint		A constraint must hold after the invocation of an element		false								{E2EFA0DB-5A06-4c66-AB1E-85E1DA331423}		

		precondition		constraint		A constraint that must hold before an element is invoked		false								{3A2F5ABA-E5CC-4426-8EA6-C1A986AF90EE}		

		access		dependency		Public contents of target are accessible to namespace of source		false								{81B8179E-1806-4cdd-BED4-B79D44F33468}		

		bind		dependency		Source instantiates target template using given parameters		false								{E57884C1-71AC-4526-A092-44B8A9127EBD}		

		call		dependency		Source invokes the target		false								{043B400F-4248-440a-B855-03A1571B6692}		

		derive		dependency		Source may be computed from target		false								{38579652-585B-4e3b-B132-4DDE9BEF0AC2}		

		friend		dependency		Source is given special visibility of target		false								{3B8298DA-EC6A-4693-97D7-2EC4E6A64AD1}		

		import		dependency		Public contents of target are imported into source namespace		false								{41908E0C-1753-418b-A08F-6A6E456A1638}		

		instanceOf		dependency		The source object is an instance of the target		false								{F5B4BFD2-F6C4-4dca-9383-99DD96A668A6}		

		instantiate		dependency		Operations on the source class create instances of the target class		false								{4BA8560D-76EF-45fe-A3D2-07A5AED2A456}		

		powertype		dependency		A classifier whose objects are all children of a given parent		false								{8B61854F-B0DE-4a89-A547-0FA4FEFD7AD8}		

		refine		dependency		Source is at a finer degree of abstraction than source		false								{E387D6A4-3BC2-4d28-AED7-450616468609}		

		send		dependency		The source sends the target an event		false								{6FBDF2EB-30BA-475c-9302-21048BE74841}		

		trace		dependency		The target is an historical ancestor of source		false								{39F1F105-5E7A-43cf-9F5C-F0E64F95CFD1}		

		use		dependency		The semantics of the source depend on the public part of the target		false								{E5E743A1-5093-4c03-9025-57DFBC59F30C}		

		implementation		generalization		Child inherits implementation of parent but does not support its interfaces		false								{16E2060A-5D6C-426a-9B56-56169469BD10}		

		button		GUIElement		A button GUI element		false								{D751E72B-B817-40a7-910D-4BCB0E851B8A}		

		checkbox		GUIElement		A checkbox GUI element		false								{DB923831-B3AC-440b-8B06-3A8A347BF4BC}		

		combobox		GUIElement		A combo box GUI element		false								{CFE4C8E4-6E32-4c2b-927D-BD9568EDC2E3}		

		date		GUIElement		A GUI element for date entry		false								{B32F2DF1-F118-42da-8BF0-3A4EA8D658B5}		

		dialog		GUIElement		A GUI screen		false								{D112484C-5853-482f-B73C-76920E8C3630}		

		dropdown		GUIElement		A GUI element that forces user selection		false								{A7203000-B6E5-4288-A3A6-BEEED6DBBC62}		

		form		GUIElement		A GUI screen		false								{A871C506-2D2D-486e-B8BE-F990CF0E9974}		

		hline		GUIElement				false						Fill=-1;Border=-1;Font=-1;		{F33AEDCA-9387-4cdc-9C6D-0C33BF33E0F1}		

		list		GUIElement		A List of Information		false								{6DE41C46-E002-45ac-BE45-AA0D14F21E77}		

		listview		GUIElement		A stand list view control		false								{11B921CF-7CE5-4b66-AF6F-C87B1634C16E}		

		panel		GUIElement		A GUI element for grouping other controls		false								{655BD35B-826D-4bb0-AB92-D737AABCA973}		

		radio		GUIElement		A radio button GUI element		false								{780F59C2-1504-487f-AEBC-710537B1D78D}		

		report		GUIElement		A List of Information with an expandable text field		false								{18E2DEDD-0314-401d-A916-871B9FC1699A}		

		tab		GUIElement		A tab control GUI element		false								{B703246F-E697-447f-8893-0049F19A6621}		

		textbox		GUIElement		A GUI element for user text entry		false								{542C248C-9D2C-4cef-8861-B993DE7F9206}		

		time		GUIElement		A GUI element for time entry		false								{126D46FA-E420-4a96-B420-D73E92C05A69}		

		treelist		GUIElement		A List of Information with a tree structure		false								{E4B765A1-6FF8-4071-86BB-4919C00FDDD2}		

		vline		GUIElement				false						Fill=-1;Border=-1;Font=-1;		{62EE032E-3DEC-4975-BC6B-D5D418C8F8E3}		

		global		link end		Corresponding object is visible because of enclosing scope		false								{B0D1ED9C-8106-4970-BC25-12F36D464F2B}		

		local		link end		The corresponding object is visible in local scope		false								{10F8D5C0-CEF9-4bdc-AD42-E98B58049D34}		

		parameter		link end		The corresponding element is visible because it is a parameter		false								{4D74DBB4-F632-4d3a-AC76-8E079E3B1F9A}		

		self		link end		The corresponding object is visible because it is the dispatcher		false								{BCA4940F-D55D-446b-80D6-6DEFEC24A1C3}		

		become		message		Target is same as source but later in time		false								{0265B875-5F0F-4af9-97E7-A5748E92E5AA}		

		copy		message		Target is exact but independent copy of source		false								{45F55315-7497-422e-AC09-EF92BCCCC860}		

		create		message		Target is created by event or message		false								{13F650FF-9816-4177-9543-66C205C770E8}		

		destroy		message		Target is destroyed by event or message		false								{11B0C2AB-E561-4777-91D1-19DFEDA3085D}		

		analysis system		model		Contains analysis classes - entities, boundaries and control elements		false								{EF7D49CC-AB80-4c1f-9EAA-CDAC6E9B60FC}		

		design system		model		Contains design elements		false								{FA9C6658-1E4F-42c3-BEC4-0B71B997C9F2}		

		implementation system		model		Contains implementation subsystems and/or components and relationships		false								{1DCDA66B-9C95-41d3-9802-107E10874CDF}		

		use case system		model		Specifies the services offered to the users		false								{22976FE7-510D-4dc7-AFF2-1B5DEC9435C0}		

		cd-rom		node		A class that represents a CDRom drive		false								{AF5A78D5-2A86-4766-9B94-515BDB8CE706}		

		cdrom		node		A class that represents a CDRom drive		false								{CA9C2AA2-DFD0-4bef-A254-C3E66948DFBA}		

		computer		node		A class that represents a computer		false								{3F6964A8-41EF-486c-B2B3-D4A7B480FD03}		

		disk array		node		A class that represents a disk array		false								{93AC8FC0-8CC5-4f49-9CF2-FFC8CC85A17F}		

		pc		node		A class that represents a personal computer		false								{D5CD6CD7-A76E-4865-BF6A-5115E5FE0248}		

		pc client		node		A class that represents a clients PC		false								{6E63B33A-3E78-4f69-8EFD-CFD43B93B576}		

		pc server		node		A class that represents a PC server		false								{EEEBA987-1378-49c6-993B-8EF6A10D9E89}		

		secure		node		A class that represents aet		false								{6C64A5E2-30BB-49a7-8360-E1B8DED6D61F}		

		server		node		A class that represents a server		false								{28E620FA-2C05-4bd5-8D85-FD92078B46E7}		

		storage		node		A class that represents a storage device		false								{24D86C85-49CE-4424-B2D5-A3FB460BCFA9}		

		unix server		node		A class that represents a Unix server		false								{45660F7E-87E4-4130-9996-3003E533A55A}		

		user pc		node		A class that represents a users PC		false								{616F94B5-9771-460a-BC29-392DD51AAFBA}		

		check		OpTable		A Check constraint to enforce domain integrity		false								{C348A09D-751A-4ea1-BB9F-C57C49D28099}		

		FK		OpTable		A Foreign Key		false								{5D99D942-A998-4a3b-94FF-46BA6EAA3FEA}		

		index		OpTable		An index of one or more columns		false								{0B476B59-E027-4b7b-B76D-C05C0B49CA28}		

		PK		OpTable		A Primary Key		false								{E8574133-99E0-4a67-BCBE-1FFEC1E3E0B0}		

		proc		OpTable		A stored procedure		false								{6ABC4A76-9EE5-4e86-8542-C4E24E809AD5}		

		trigger		OpTable		A trigger which executes automatically when an UPDATE, INSERT, or DELETE statement is issued		false								{D6B1A2BA-08AA-4775-93FA-55343BFB82B4}		

		unique		OpTable		A Unique constraint to enforce the integrity of a database automatically		false								{77CE3BEF-0ADE-4eb4-BFC0-EAF238921132}		

		facade		package		Package is a view of another concrete package		false								{E4BA98EB-99CE-4045-9B4B-D0A03713361A}		

		framework		package		Package consists mainly of patterns		false								{B6A99021-14B9-4dab-979D-AA1331DFA779}		

		model		package		A semantically closed abstraction of a system		false								{701F2AAA-BEFD-4420-885D-5F9BAB3A6AD9}		

		stub		package		A package serves as a proxy for the public contents of another package		false								{A8094554-92C0-4a2c-B136-478FA934EB4D}		

		subsystem		package		A grouping of elements that constitute a specification of behavior offered by other contained elements		false								{9F76E6DB-671C-4f5f-B9F4-96A1B3AE33B5}		

		system		package		A package representing the entire system being modeled		false								{2526F6D8-DCBA-46bf-8B1D-2610BF12C98F}		

		communicate		uses		Communication between actor and use case		false								{19CCFF91-BC1E-4ed5-AF94-6EE5E361755C}		

		extend		uses		Target use case extends the source at a given extension point		false								{D3F925EB-C6EB-45f9-94D3-59E82BBDDB38}		

		include		uses		Source use case explicitly includes the behavior of target		false								{2AC1B294-E77F-4810-A9A0-96F7FD2EFF1C}		

		DataObject		Class		DataObject		false								{E2EB3FF1-15D4-43fb-AB18-872225E97C58}		

		MetaClass		AssociationClass		MetaClass		false								{8BD35E7F-3D53-4812-BC07-2E5816EA75BF}		

		Specification		Class		Specification		false								{578A1534-4B5F-4b52-9224-36F0B90CF907}		

		ServiceType		Class		ServiceType		false								{5CEDB611-E248-42bf-A6B6-D85491FE975D}		

		optional		Operation		optional		false								{EAB6CCB3-7791-48e2-981E-1DA67E66DAC9}		

		realise		Realisation		realise		false								{FC47FB56-67FA-4ac0-85A8-0FCF4E1C94DC}		



		PropertyID		ElementID		BaseClass		TagValue		Notes



		TaskID		Name		TaskType		NOTES		Priority		Status		Owner		StartDate		EndDate		Phase		History		Percent		TotalTime		ActualTime		AssignedTo



		TCFID		Description		Weight		Value		Notes

		TCF01		Distributed System		2.0		5.0		

		TCF02		Response or throughput performance objectives		1.0		4.0		

		TCF03		End user efficiency (online)		1.0		2.0		

		TCF04		Complex internal processing		1.0		4.0		

		TCF05		Code must be re-usable		1.0		2.0		

		TCF06		Easy to install		0.5		5.0		

		TCF07		Easy to use		0.5		3.0		

		TCF08		Portable		2.0		3.0		

		TCF09		Easy to change		1.0		3.0		

		TCF10		Concurrent		1.0		2.0		

		TCF11		Includ special security features		1.0		2.0		

		TCF12		Provide direct access for third parties		1.0		5.0		

		TCF13		Special user training faciities are required		1.0		3.0		



		TemplateID		TemplateType		TemplateName		Notes		Style		Template



		TestClass		Description



		PlanID		Category		Name		Author		Notes		TestPlan



		TestType		Description		NumericWeight		Notes

		Load		Performance under load		1.0		Stress testing

		Regression		Regression Testing		1.0		Regression

		Standard		Simple Test procedure		1.0		Used to test basic path



		Description		NumericWeight		Notes		TRX		TRX_ID		Style



		PatternID		PatternCategory		PatternName		Style		Notes		PatternXML		Version

		1		GoF Behavioral Patterns		Chain of Responsibility				This pattern avoids coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. It chains the receiving objects and passes the request along the chain until an object handles it.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:07:38">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9">
			<UML:Namespace.ownedElement>
				<UML:Class name="Client" xmi.id="EAID_9D88A674_6F29_4194_9F5A_5F77213FF369" visibility="public" namespace="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class initiates the request to a ConcreteHandler object on the chain."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:54:32"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 14:57:41"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Chain of Responsibility"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_B5641F35_78F7_4474_9718_455CDF54303D" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_9D88A674_6F29_4194_9F5A_5F77213FF369">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Handler" xmi.id="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F" visibility="public" namespace="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an interface for handling requests and optionally implements the successor link."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:54:46"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 15:00:02"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Chain of Responsibility"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="HandleRequest" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0E4F0CF8-11DF-40ec-B126-B5AFD2615E34}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_2E278A4F_B0F6_40f6_BD17_965BFCB48176" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="successor" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_F0364A8F_99EB_49fb_ABF4_035D2A46EDD0" supertype="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F" xmi.id="EAID_2203186F_2953_4688_ABCF_EFF5411E978C" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_0256FFF8_3E4E_4746_A1DB_9574F6CD8609" supertype="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F" xmi.id="EAID_874D7A1F_3865_4e61_9734_37D7909DE1C1" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteHandler1" xmi.id="EAID_0256FFF8_3E4E_4746_A1DB_9574F6CD8609" visibility="public" namespace="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) handles requests it is responsible for, (b) can access its successor, and (c) if it can handle the request, does so, else it forwards it to its successor."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:55:23"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 14:59:09"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Chain of Responsibility"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="HandleRequest" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0E4F0CF8-11DF-40ec-B126-B5AFD2615E34}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteHandler2" xmi.id="EAID_F0364A8F_99EB_49fb_ABF4_035D2A46EDD0" visibility="public" namespace="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) handles requests it is responsible for, (b) can access its successor, and (c) if it can handle the request, does so, else it forwards it to its successor."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:55:42"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 14:59:12"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Chain of Responsibility"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="HandleRequest" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0E4F0CF8-11DF-40ec-B126-B5AFD2615E34}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Chain of Responsibility" xmi.id="EAID_68624FEA_8FF4_4d6e_8092_960EE4548E3F" diagramType="ClassDiagram" owner="EAPK_68624FEA_8FF4_4d6e_8092_960EE4548E3F" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern avoids coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. It chains the receiving objects and passes the request along the chain until an object handles it."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:09"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-16 15:00:00"/>
				<UML:TaggedValue tag="package" value="EAPK_DF217EE6_91ED_4c73_9AF0_97AFC029E8A9"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=383;Top=205;Right=488;Bottom=275;imgL=273;imgT=158;imgR=378;imgB=228;" subject="EAID_F0364A8F_99EB_49fb_ABF4_035D2A46EDD0" seqno="1" style="DUID=E99CB93F;LBL=;"/>
				<UML:DiagramElement geometry="Left=179;Top=205;Right=284;Bottom=275;imgL=69;imgT=158;imgR=174;imgB=228;" subject="EAID_0256FFF8_3E4E_4746_A1DB_9574F6CD8609" seqno="2" style="DUID=BED62BCC;LBL=;"/>
				<UML:DiagramElement geometry="Left=280;Top=64;Right=386;Bottom=134;imgL=170;imgT=17;imgR=276;imgB=87;" subject="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F" seqno="3" style="DUID=4A9AF6CF;LBL=;"/>
				<UML:DiagramElement geometry="Left=120;Top=78;Right=210;Bottom=109;imgL=10;imgT=31;imgR=100;imgB=62;" subject="EAID_9D88A674_6F29_4194_9F5A_5F77213FF369" seqno="4" style="DUID=74FE4719;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_B5641F35_78F7_4474_9718_455CDF54303D" style="Mode=2;EOID=4A9AF6CF;SOID=74FE4719;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=2;$LLB=;LLT=CX=56:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_2E278A4F_B0F6_40f6_BD17_965BFCB48176" style="Mode=3;EOID=4A9AF6CF;SOID=4A9AF6CF;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=231:-184$333:-184$;" subject="EAID_874D7A1F_3865_4e61_9734_37D7909DE1C1" style="Mode=3;EOID=4A9AF6CF;SOID=BED62BCC;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=435:-184$333:-184$;" subject="EAID_2203186F_2953_4688_ABCF_EFF5411E978C" style="Mode=3;EOID=4A9AF6CF;SOID=E99CB93F;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_9D88A674_6F29_4194_9F5A_5F77213FF369" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F" name="Handler" UMLType="Class"/>
		<EAStub xmi.id="EAID_F0364A8F_99EB_49fb_ABF4_035D2A46EDD0" name="ConcreteHandler2" UMLType="Class"/>
		<EAStub xmi.id="EAID_0256FFF8_3E4E_4746_A1DB_9574F6CD8609" name="ConcreteHandler1" UMLType="Class"/>
		<UMLPattern name="Chain of Responsibility" category="GoF Behavioral Patterns" version="2.0" notes="This pattern avoids coupling the sender of a request to its receiver by giving more than one object a chance to handle the request. It chains the receiving objects and passes the request along the chain until an object handles it.">
			<UMLPattern.PromptList>
				<Element name="ConcreteHandler2:Class" guid="EAID_F0364A8F_99EB_49fb_ABF4_035D2A46EDD0" id="148" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) handles requests it is responsible for, (b) can access its successor, and (c) if it can handle the request, does so, else it forwards it to its successor.">
						<![CDATA[This class (a) handles requests it is responsible for, (b) can access its successor, and (c) if it can handle the request, does so, else it forwards it to its successor.]]>
					</Comment>
				</Element>
				<Element name="ConcreteHandler1:Class" guid="EAID_0256FFF8_3E4E_4746_A1DB_9574F6CD8609" id="147" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) handles requests it is responsible for, (b) can access its successor, and (c) if it can handle the request, does so, else it forwards it to its successor.">
						<![CDATA[This class (a) handles requests it is responsible for, (b) can access its successor, and (c) if it can handle the request, does so, else it forwards it to its successor.]]>
					</Comment>
				</Element>
				<Element name="Handler:Class" guid="EAID_716003C9_DF24_4b78_8C30_D049CD7CEC5F" id="146" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an interface for handling requests and optionally implements the successor link.">
						<![CDATA[This class defines an interface for handling requests and optionally implements the successor link.]]>
					</Comment>
				</Element>
				<Element name="Client:Class" guid="EAID_9D88A674_6F29_4194_9F5A_5F77213FF369" id="145" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class initiates the request to a ConcreteHandler object on the chain.">
						<![CDATA[This class initiates the request to a ConcreteHandler object on the chain.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="10912" cy="6740">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 bgBkAGwAZQBSAGUAcQB1AGUAcwB0ACgAKQCtugcAAAAGAAAABgAAAAYAAAADAAAABgAAAAcA AAAGAAAABgAAAAYAAAAGAAAABAAAAAMAAAADAAAAAwAAABgAAAAMAAAAAAAAACcAAAAYAAAA CAAAAAAAAADAv8AAAAAAACUAAAAMAAAACAAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAMC/ wAAlAAAADAAAAAcAAAArAAAAGAAAAIIBAAAw////6gEAAOv+//8lAAAADAAAAAIAAAAoAAAA DAAAAAgAAAAlAAAADAAAAAMAAAAoAAAADAAAAAcAAAArAAAAGAAAAH8BAAAz////5wEAAO7+ //8lAAAADAAAAAUAAABUAAAArAAAABkBAACnAAAAcQEAALIAAAABAAAAAADhQQCQ4sGHAQAA Kv///xAAAABMAAAAAAAAAAAAAAAAAAAA//////////9sAAAAQwBvAG4AYwByAGUAdABlAEgA YQBuAGQAbABlAHIAMgAHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAcAAAAGAAAA BgAAAAYAAAADAAAABgAAAAQAAAAGAAAAJQAAAAwAAAABAAAAGwAAABAAAAB/AQAAGP///zYA AAAQAAAA5wEAABj///8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAA WAAAABYBAADBAAAAHwEAAM0AAAABAAAAAADhQQCQ4sGEAQAAEP///wIAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAKwAgAAYAAAADAAAAVAAAAKgAAAAnAQAAwQAAAHUBAADNAAAA AQAAAAAA4UEAkOLBlQEAABD///8PAAAATAAAAAAAAAAAAAAAAAAAAP//////////bAAAAEgA YQBuAGQAbABlAFIAZQBxAHUAZQBzAHQAKAApAK26BwAAAAYAAAAGAAAABgAAAAMAAAAGAAAA BwAAAAYAAAAGAAAABgAAAAYAAAAEAAAAAwAAAAMAAAADAAAAGAAAAAwAAAAAAAAAJgAAABwA AAAHAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABwAAABsAAAAQAAAA0gAAAKP///82AAAA EAAAAPUAAACj////NgAAABAAAAD1AAAAo////zYAAAAQAAAAGAEAAKP///8bAAAAEAAAABgB AACj////GwAAABAAAAAYAQAAo////zYAAAAQAAAACgEAAJ7///8bAAAAEAAAABgBAACj//// NgAAABAAAAAKAQAAqf///xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkA AAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABwAAACYAAAAcAAAABwAAAAAAAAABAAAA AAAAAAAAAAAlAAAADAAAAAcAAAAbAAAAEAAAAIIBAAC2////NgAAABAAAACgAQAAtv///zYA AAAQAAAAoAEAAKf///82AAAAEAAAAIIBAACn////GwAAABAAAACCAQAAp////xsAAAAQAAAA ggEAAKf///82AAAAEAAAAJEBAACt////GwAAABAAAACCAQAAp////zYAAAAQAAAAkQEAAKH/ //8SAAAADAAAAAIAAAAZAAAADAAAAP///wBSAAAAcAEAAAgAAAD2////AAAAAAAAAAAAAAAA AAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFICYAAAQG0FkXwI6xIA2OYSAAAAAACs3hIA +CchEDBxJRD/////+NwSAO8pIRAdAAAAAAAAAAEAAABQAAAAIP4SA1zblXwAAFICrNuVfAgA AAAAAFICAABSAiD+EgMk3QAAEc2WfAAAEgAAAAAA8N0SABjukHzIapJ8AAD//75qknytaJJ8 AABSAmAAAEBtBZF8COsSANjmEgAAAAAARN0SAJHWQl8AAAEACOsSALzcEgAAAAAAsN0SAAAA kHxwBZF8QAAAAChdBgNc25V8cF0GA6zblXwAAAAAAAAAAAAAUgIoXQYDZHYACAAAAADY5hIA AAAAADrZoAFkdgAIAAAAACUAAAAMAAAACAAAAFQAAACIAAAAHAEAAA0AAABKAQAAGQAAAAEA AAAAAOFBAJDiwYoBAADE////CgAAAEwAAAAAAAAAAAAAAAAAAAD//////////2AAAAAtAHMA dQBjAGMAZQBzAHMAbwByAAMAAAAEAAAABgAAAAUAAAAFAAAABgAAAAQAAAAEAAAABgAAAAMA AAAlAAAADAAAAAEAAAAoAAAADAAAAAgAAAASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAcAAAAmAAAAHAAAAAcAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAHAAAAGwAAABAAAADnAAAAM////zYAAAAQAAAA5wAAAEj///82AAAAEAAAAE0BAABI//// NgAAABAAAABNAQAAev///xsAAAAQAAAATQEAAHr///9WAAAAKAAAANoAAABXAAAA5QAAAGYA AAADAAAAUwFr/0gBa/9NAXr/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAA GQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAHAAAAJgAAABwAAAAHAAAAAAAAAAEA AAAAAAAAAAAAACUAAAAMAAAABwAAABsAAAAQAAAAswEAADP///82AAAAEAAAALMBAABI//// NgAAABAAAABNAQAASP///zYAAAAQAAAATQEAAHr///8bAAAAEAAAAE0BAAB6////VgAAACgA AADaAAAAVwAAAOUAAABmAAAAAwAAAFMBa/9IAWv/TQF6/xIAAAAMAAAAAgAAABkAAAAMAAAA ////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABwAAACUA AAAMAAAADQAAgCgAAAAMAAAAAQAAACgAAAAMAAAABQAAACUAAAAMAAAAAAAAgCgAAAAMAAAA AgAAACUAAAAMAAAABwAAgCgAAAAMAAAAAwAAAA4AAAAUAAAAAAAAABAAAAAUAAAA</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		2		GoF Behavioral Patterns		Command				This pattern encapsulates a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:07:59">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE">
			<UML:Namespace.ownedElement>
				<UML:Class name="Client" xmi.id="EAID_A18A0A43_B558_4c0e_BE80_0560F8361F8F" visibility="public" namespace="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class creates a ConcreteCommand object and sets its receiver."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:59:18"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 09:14:03"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Command"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Dependency client="EAID_A18A0A43_B558_4c0e_BE80_0560F8361F8F" supplier="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26" xmi.id="EAID_15014B9A_6369_4682_BEA7_E8EF807CB327" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=-21;SY=2;"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Association xmi.id="EAID_4A3D82B7_87EB_4ab8_8F72_8FE4B7351AD6" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=10;SY=-4;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_A18A0A43_B558_4c0e_BE80_0560F8361F8F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_28D89C8D_1897_4775_B038_C3405061054F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Invoker" xmi.id="EAID_5DE0E399_4CB4_4b75_9846_717ADF677A7C" visibility="public" namespace="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class asks the command to carry out the request."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:59:28"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 09:14:22"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Command"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_3E33CC09_D7C4_4021_9CF9_8172AF7914EA" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_5DE0E399_4CB4_4b75_9846_717ADF677A7C">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_F57C30AC_D747_4e03_B03E_AF2DFCC17B76">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Command" xmi.id="EAID_F57C30AC_D747_4e03_B03E_AF2DFCC17B76" visibility="public" namespace="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface for executing an operation."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 10:59:56"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 09:12:45"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Command"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Execute" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1E49C1B5-8643-4c1c-BAF6-3472710C3586}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26" supertype="EAID_F57C30AC_D747_4e03_B03E_AF2DFCC17B76" xmi.id="EAID_097FBA2A_1D18_483b_8982_0C196D57930C" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="Receiver" xmi.id="EAID_28D89C8D_1897_4775_B038_C3405061054F" visibility="public" namespace="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class knows how to perform the operations associated with carrying out a request."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:01:18"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 09:14:55"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Command"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Action" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{F63E21F5-9878-46cc-8B81-BF61EF69FDA4}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_CF580AC6_DB2E_4bb0_89C7_F200F3B4FF25" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="receiver" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_28D89C8D_1897_4775_B038_C3405061054F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="ConcreteCommand" xmi.id="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26" visibility="public" namespace="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines a binding between a Receiver object and an action, and (b) implements Execute by invoking the corresponding operation(s) on Receiver."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:01:45"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 09:13:41"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Command"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="state" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{71EFDEFA-3FC8-402b-83F3-B3EEC7EFFEDD}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="Execute" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="receiver-&gt;Action();"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1E49C1B5-8643-4c1c-BAF6-3472710C3586}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Command" xmi.id="EAID_EEFD1F8B_B6DE_485d_ADAF_AE1B0F321F10" diagramType="ClassDiagram" owner="EAPK_EEFD1F8B_B6DE_485d_ADAF_AE1B0F321F10" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern encapsulates a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:11"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 09:15:04"/>
				<UML:TaggedValue tag="package" value="EAPK_23E1F3AE_2BE3_4d60_9DD0_24F433C1A4EE"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=360;Top=251;Right=477;Bottom=339;imgL=313;imgT=192;imgR=430;imgB=280;" subject="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26" seqno="1" style="DUID=9B561386;LBL=;"/>
				<UML:DiagramElement geometry="Left=146;Top=211;Right=236;Bottom=281;imgL=99;imgT=152;imgR=189;imgB=222;" subject="EAID_28D89C8D_1897_4775_B038_C3405061054F" seqno="2" style="DUID=065A8996;LBL=;"/>
				<UML:DiagramElement geometry="Left=368;Top=69;Right=458;Bottom=139;imgL=321;imgT=10;imgR=411;imgB=80;" subject="EAID_F57C30AC_D747_4e03_B03E_AF2DFCC17B76" seqno="3" style="DUID=25AD74EB;LBL=;"/>
				<UML:DiagramElement geometry="Left=204;Top=89;Right=294;Bottom=118;imgL=157;imgT=30;imgR=247;imgB=59;" subject="EAID_5DE0E399_4CB4_4b75_9846_717ADF677A7C" seqno="4" style="DUID=ECF4B2CA;LBL=;"/>
				<UML:DiagramElement geometry="Left=57;Top=91;Right=147;Bottom=119;imgL=10;imgT=32;imgR=100;imgB=60;" subject="EAID_A18A0A43_B558_4c0e_BE80_0560F8361F8F" seqno="5" style="DUID=CC0ED9DF;LBL=;"/>
				<UML:DiagramElement geometry="SX=10;SY=-4;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=111:-245$;" subject="EAID_4A3D82B7_87EB_4ab8_8F72_8FE4B7351AD6" style="Mode=3;EOID=065A8996;SOID=CC0ED9DF;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=-21;SY=2;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=80:-295$;" subject="EAID_15014B9A_6369_4682_BEA7_E8EF807CB327" style="Mode=3;EOID=9B561386;SOID=CC0ED9DF;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_3E33CC09_D7C4_4021_9CF9_8172AF7914EA" style="Mode=3;EOID=25AD74EB;SOID=ECF4B2CA;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_097FBA2A_1D18_483b_8982_0C196D57930C" style="Mode=2;EOID=25AD74EB;SOID=9B561386;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=4;$LLB=;LLT=CX=50:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_CF580AC6_DB2E_4bb0_89C7_F200F3B4FF25" style="Mode=2;EOID=065A8996;SOID=9B561386;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_A18A0A43_B558_4c0e_BE80_0560F8361F8F" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26" name="ConcreteCommand" UMLType="Class"/>
		<EAStub xmi.id="EAID_28D89C8D_1897_4775_B038_C3405061054F" name="Receiver" UMLType="Class"/>
		<EAStub xmi.id="EAID_5DE0E399_4CB4_4b75_9846_717ADF677A7C" name="Invoker" UMLType="Class"/>
		<EAStub xmi.id="EAID_F57C30AC_D747_4e03_B03E_AF2DFCC17B76" name="Command" UMLType="Class"/>
		<UMLPattern name="Command" category="GoF Behavioral Patterns" version="2.0" notes="This pattern encapsulates a request as an object, thereby letting you parameterize clients with different requests, queue or log requests, and support undoable operations.">
			<UMLPattern.PromptList>
				<Element name="ConcreteCommand:Class" guid="EAID_3EBFE28D_2B02_47b4_8E50_DEED00A32D26" id="144" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines a binding between a Receiver object and an action, and (b) implements Execute by invoking the corresponding operation(s) on Receiver.">
						<![CDATA[This class (a) defines a binding between a Receiver object and an action, and (b) implements Execute by invoking the corresponding operation(s) on Receiver.]]>
					</Comment>
				</Element>
				<Element name="Receiver:Class" guid="EAID_28D89C8D_1897_4775_B038_C3405061054F" id="143" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class knows how to perform the operations associated with carrying out a request.">
						<![CDATA[This class knows how to perform the operations associated with carrying out a request.]]>
					</Comment>
				</Element>
				<Element name="Command:Class" guid="EAID_F57C30AC_D747_4e03_B03E_AF2DFCC17B76" id="142" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface for executing an operation.">
						<![CDATA[This class declares an interface for executing an operation.]]>
					</Comment>
				</Element>
				<Element name="Invoker:Class" guid="EAID_5DE0E399_4CB4_4b75_9846_717ADF677A7C" id="141" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class asks the command to carry out the request.">
						<![CDATA[This class asks the command to carry out the request.]]>
					</Comment>
				</Element>
				<Element name="Client:Class" guid="EAID_A18A0A43_B558_4c0e_BE80_0560F8361F8F" id="140" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class creates a ConcreteCommand object and sets its receiver.">
						<![CDATA[This class creates a ConcreteCommand object and sets its receiver.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="12375" cy="8212">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 CAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1wAAABSAGUAYwBlAGkAdgBlAHIABwAAAAYA AAAGAAAABgAAAAMAAAAHAAAABgAAAAQAAAAlAAAADAAAAAEAAAAbAAAAEAAAAJIAAAAS//// NgAAABAAAADrAAAAEv///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQA AABYAAAAaAAAALsAAABxAAAAxwAAAAEAAAAAAOFBAJDiwZcAAAAK////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAAfAAAAHkAAAC7AAAAnQAAAMcA AAABAAAAAADhQQCQ4sGoAAAACv///wgAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAA QQBjAHQAaQBvAG4AKAApAAcAAAAFAAAAAwAAAAMAAAAGAAAABgAAAAMAAAADAAAAGAAAAAwA AAAAAAAAJwAAABgAAAAIAAAAAAAAAMC/wAAAAAAAJQAAAAwAAAAIAAAAJgAAABwAAAAHAAAA AAAAAAEAAAAAAAAAwL/AACUAAAAMAAAABwAAACsAAAAYAAAAawEAAAL////fAQAAq/7//yUA AAAMAAAAAgAAACgAAAAMAAAACAAAACUAAAAMAAAAAwAAACgAAAAMAAAABwAAACsAAAAYAAAA aAEAAAX////cAQAArv7//yUAAAAMAAAABQAAAFQAAACoAAAARQEAAMkAAACiAQAA1AAAAAEA AAAAAOFBAJDiwXQBAAD8/v//DwAAAEwAAAAAAAAAAAAAAAAAAAD//////////2wAAABDAG8A bgBjAHIAZQB0AGUAQwBvAG0AbQBhAG4AZACtugcAAAAGAAAABgAAAAYAAAAEAAAABgAAAAMA AAAGAAAABwAAAAYAAAAJAAAACQAAAAYAAAAGAAAABgAAACUAAAAMAAAAAQAAABsAAAAQAAAA aAEAAOr+//82AAAAEAAAANwBAADq/v//GAAAAAwAAACLAAAAVAAAAFgAAAA+AQAA3wAAAEQB AADrAAAAAQAAAAAA4UEAkOLBbQEAAOb+//8CAAAATAAAAAAAAAAAAAAAAAAAAP////////// UAAAAC0AIAADAAAAAwAAAFQAAAB8AAAATwEAAN8AAABuAQAA6wAAAAEAAAAAAOFBAJDiwX4B AADm/v//CAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1wAAABzAHQAYQB0AGUAOgAgACAA BAAAAAMAAAAGAAAAAwAAAAYAAAADAAAAAwAAAAMAAAAYAAAADAAAAAAAAAAbAAAAEAAAAGgB AADQ/v//NgAAABAAAADcAQAA0P7//xgAAAAMAAAAAEBAAFQAAABYAAAAPgEAAPkAAABHAQAA BQEAAAEAAAAAAOFBAJDiwW0BAADM/v//AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AA AAArACAABgAAAAMAAABUAAAAhAAAAE8BAAD5AAAAewEAAAUBAAABAAAAAADhQQCQ4sF+AQAA zP7//wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAARQB4AGUAYwB1AHQAZQAoACkA rboHAAAABQAAAAYAAAAFAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAYAAAADAAAAICAgAAeAAAA GAAAAIUBAAC//v//3QEAAK3+//9LAAAAEAAAAAAAAAAFAAAAFgAAAAwAAAABAAAAEgAAAAwA AAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFB AJDiwYUBAAC//v//AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26VQAAABYA AAAMAAAAAAAAAFQAAAB8AAAAVgEAAAYBAAB7AQAAEgEAAAEAAAAAAOFBAJDiwYUBAAC//v// CAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1wAAAByAGUAYwBlAGkAdgBlAHIAAwAAAAYA AAAFAAAABgAAAAMAAAAFAAAABgAAAAMAAABUAAAAVAAAAHsBAAAGAQAAfgEAABIBAAABAAAA AADhQQCQ4sGqAQAAv/7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAALQCtugMA AABUAAAAVAAAAH4BAAAGAQAAhAEAABIBAAABAAAAAADhQQCQ4sGtAQAAv/7//wEAAABMAAAA AAAAAAAAAAAAAAAA//////////9QAAAAPgCtugYAAABUAAAAcAAAAIQBAAAGAQAAogEAABIB AAABAAAAAADhQQCQ4sGzAQAAv/7//wYAAABMAAAAAAAAAAAAAAAAAAAA//////////9YAAAA QQBjAHQAaQBvAG4ABwAAAAUAAAADAAAAAwAAAAYAAAAGAAAAVAAAAFgAAACiAQAABgEAAKgB AAASAQAAAQAAAAAA4UEAkOLB0QEAAL/+//8CAAAATAAAAAAAAAAAAAAAAAAAAP////////// UAAAACgAKQADAAAAAwAAAFQAAABUAAAAqAEAAAYBAACrAQAAEgEAAAEAAAAAAOFBAJDiwdcB AAC//v//AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAA7AK26AwAAABsAAAAQAAAA 3AEAAND+//8WAAAADAAAAAAAAAAYAAAADAAAAABAQAAYAAAADAAAAAAAAAAmAAAAHAAAAAcA AAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAHAAAAGwAAABAAAABvAAAAif///zYAAAAQAAAA bwAAAAv///82AAAAEAAAAJIAAAAL////GwAAABAAAACSAAAAC////xsAAAAQAAAAkgAAAAv/ //82AAAAEAAAAIQAAAAG////GwAAABAAAACSAAAAC////zYAAAAQAAAAhAAAABH///8SAAAA DAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMA AAAoAAAADAAAAAcAAAAmAAAAHAAAAAcAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAHAAAA GwAAABAAAABQAAAAif///zYAAAAQAAAAUAAAAIb///8bAAAAEAAAAFAAAACD////NgAAABAA AABQAAAAgP///xsAAAAQAAAAUAAAAH3///82AAAAEAAAAFAAAAB6////GwAAABAAAABQAAAA d////zYAAAAQAAAAUAAAAHT///8bAAAAEAAAAFAAAABx////NgAAABAAAABQAAAAbv///xsA AAAQAAAAUAAAAGv///82AAAAEAAAAFAAAABo////GwAAABAAAABQAAAAZf///zYAAAAQAAAA UAAAAGL///8bAAAAEAAAAFAAAABf////NgAAABAAAABQAAAAXP///xsAAAAQAAAAUAAAAFn/ //82AAAAEAAAAFAAAABW////GwAAABAAAABQAAAAU////zYAAAAQAAAAUAAAAFD///8bAAAA EAAAAFAAAABN////NgAAABAAAABQAAAASv///xsAAAAQAAAAUAAAAEf///82AAAAEAAAAFAA AABE////GwAAABAAAABQAAAAQf///zYAAAAQAAAAUAAAAD7///8bAAAAEAAAAFAAAAA7//// NgAAABAAAABQAAAAOP///xsAAAAQAAAAUAAAADX///82AAAAEAAAAFAAAAAy////GwAAABAA AABQAAAAL////zYAAAAQAAAAUAAAACz///8bAAAAEAAAAFAAAAAp////NgAAABAAAABQAAAA Jv///xsAAAAQAAAAUAAAACP///82AAAAEAAAAFAAAAAg////GwAAABAAAABQAAAAHf///zYA AAAQAAAAUAAAABr///8bAAAAEAAAAFAAAAAX////NgAAABAAAABQAAAAFP///xsAAAAQAAAA UAAAABH///82AAAAEAAAAFAAAAAO////GwAAABAAAABQAAAAC////zYAAAAQAAAAUAAAAAj/ //8bAAAAEAAAAFAAAAAF////NgAAABAAAABQAAAAAv///xsAAAAQAAAAUAAAAP/+//82AAAA EAAAAFAAAAD8/v//GwAAABAAAABQAAAA+f7//zYAAAAQAAAAUAAAAPb+//8bAAAAEAAAAFAA AADz/v//NgAAABAAAABQAAAA8P7//xsAAAAQAAAAUAAAAO3+//82AAAAEAAAAFAAAADq/v// GwAAABAAAABQAAAA5/7//zYAAAAQAAAAUAAAAOT+//8bAAAAEAAAAFAAAADh/v//NgAAABAA AABQAAAA3v7//xsAAAAQAAAAUAAAANv+//82AAAAEAAAAFAAAADZ/v//NgAAABAAAABRAAAA 2f7//xsAAAAQAAAAVAAAANn+//82AAAAEAAAAFcAAADZ/v//GwAAABAAAABaAAAA2f7//zYA AAAQAAAAXQAAANn+//8bAAAAEAAAAGAAAADZ/v//NgAAABAAAABjAAAA2f7//xsAAAAQAAAA ZgAAANn+//82AAAAEAAAAGkAAADZ/v//GwAAABAAAABsAAAA2f7//zYAAAAQAAAAbwAAANn+ //8bAAAAEAAAAHIAAADZ/v//NgAAABAAAAB1AAAA2f7//xsAAAAQAAAAeAAAANn+//82AAAA EAAAAHsAAADZ/v//GwAAABAAAAB+AAAA2f7//zYAAAAQAAAAgQAAANn+//8bAAAAEAAAAIQA AADZ/v//NgAAABAAAACHAAAA2f7//xsAAAAQAAAAigAAANn+//82AAAAEAAAAI0AAADZ/v// GwAAABAAAACQAAAA2f7//zYAAAAQAAAAkwAAANn+//8bAAAAEAAAAJYAAADZ/v//NgAAABAA AACZAAAA2f7//xsAAAAQAAAAnAAAANn+//82AAAAEAAAAJ8AAADZ/v//GwAAABAAAACiAAAA 2f7//zYAAAAQAAAApQAAANn+//8bAAAAEAAAAKgAAADZ/v//NgAAABAAAACrAAAA2f7//xsA AAAQAAAArgAAANn+//82AAAAEAAAALEAAADZ/v//GwAAABAAAAC0AAAA2f7//zYAAAAQAAAA twAAANn+//8bAAAAEAAAALoAAADZ/v//NgAAABAAAAC9AAAA2f7//xsAAAAQAAAAwAAAANn+ //82AAAAEAAAAMMAAADZ/v//GwAAABAAAADGAAAA2f7//zYAAAAQAAAAyQAAANn+//8bAAAA EAAAAMwAAADZ/v//NgAAABAAAADPAAAA2f7//xsAAAAQAAAA0gAAANn+//82AAAAEAAAANUA AADZ/v//GwAAABAAAADYAAAA2f7//zYAAAAQAAAA2wAAANn+//8bAAAAEAAAAN4AAADZ/v// NgAAABAAAADhAAAA2f7//xsAAAAQAAAA5AAAANn+//82AAAAEAAAAOcAAADZ/v//GwAAABAA AADqAAAA2f7//zYAAAAQAAAA7QAAANn+//8bAAAAEAAAAPAAAADZ/v//NgAAABAAAADzAAAA 2f7//xsAAAAQAAAA9gAAANn+//82AAAAEAAAAPkAAADZ/v//GwAAABAAAAD8AAAA2f7//zYA AAAQAAAA/wAAANn+//8bAAAAEAAAAAIBAADZ/v//NgAAABAAAAAFAQAA2f7//xsAAAAQAAAA CAEAANn+//82AAAAEAAAAAsBAADZ/v//GwAAABAAAAAOAQAA2f7//zYAAAAQAAAAEQEAANn+ //8bAAAAEAAAABQBAADZ/v//NgAAABAAAAAXAQAA2f7//xsAAAAQAAAAGgEAANn+//82AAAA EAAAAB0BAADZ/v//GwAAABAAAAAgAQAA2f7//zYAAAAQAAAAIwEAANn+//8bAAAAEAAAACYB AADZ/v//NgAAABAAAAApAQAA2f7//xsAAAAQAAAALAEAANn+//82AAAAEAAAAC8BAADZ/v// GwAAABAAAAAyAQAA2f7//zYAAAAQAAAANQEAANn+//8bAAAAEAAAADgBAADZ/v//NgAAABAA AAA7AQAA2f7//xsAAAAQAAAAPgEAANn+//82AAAAEAAAAEEBAADZ/v//GwAAABAAAABEAQAA 2f7//zYAAAAQAAAARwEAANn+//8bAAAAEAAAAEoBAADZ/v//NgAAABAAAABNAQAA2f7//xsA AAAQAAAAUAEAANn+//82AAAAEAAAAFMBAADZ/v//GwAAABAAAABWAQAA2f7//zYAAAAQAAAA WQEAANn+//8bAAAAEAAAAFwBAADZ/v//NgAAABAAAABfAQAA2f7//xsAAAAQAAAAYgEAANn+ //82AAAAEAAAAGUBAADZ/v//GwAAABAAAABoAQAA2f7//xsAAAAQAAAAaAEAANn+//8bAAAA EAAAAGgBAADZ/v//NgAAABAAAABaAQAA1f7//xsAAAAQAAAAaAEAANn+//82AAAAEAAAAFoB AADe/v//EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8A JQAAAAwAAAADAAAAKAAAAAwAAAAHAAAAJgAAABwAAAAHAAAAAAAAAAEAAAAAAAAAAAAAACUA AAAMAAAABwAAABsAAAAQAAAAJgEAAJn///82AAAAEAAAAHABAACZ////VgAAACwAAAD3AAAA KAAAAAsBAAAwAAAABAAAADABnf8mAZn/LwGV/zoBmf8bAAAAEAAAAHABAACZ////GwAAABAA AABwAQAAmf///zYAAAAQAAAAYgEAAJT///8bAAAAEAAAAHABAACZ////NgAAABAAAABiAQAA n////xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUA AAAMAAAAAwAAACgAAAAMAAAABwAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAAAAAAAlAAAA DAAAAAcAAAAbAAAAEAAAAJ0BAAAF////NgAAABAAAACdAQAAPf///zYAAAAQAAAAnQEAAD3/ //82AAAAEAAAAJ0BAAB1////GwAAABAAAACdAQAAdf///1YAAAAoAAAAaQEAAFAAAAB0AQAA XwAAAAMAAACjAWb/mAFm/50Bdf8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAcAAAAmAAAAHAAAAAcAAAAAAAAA AQAAAAAAAAAAAAAAJQAAAAwAAAAHAAAAGwAAABAAAABoAQAA9v7//zYAAAAQAAAAKgEAAPb+ //82AAAAEAAAACoBAAD2/v//NgAAABAAAADsAAAA9v7//xsAAAAQAAAA7AAAAPb+//8bAAAA EAAAAOwAAAD2/v//NgAAABAAAAD7AAAA/P7//xsAAAAQAAAA7AAAAPb+//82AAAAEAAAAPsA AADw/v//EgAAAAwAAAACAAAAGQAAAAwAAAD///8AUgAAAHABAAAIAAAA9v///wAAAAAAAAAA AAAAAAAAAAAAAAABAAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAA rN4SAPgnIRAwcSUQ//////jcEgDvKSEQHQAAAAAAAAABAAAAUAAAALBVBwNc25V8AABSAqzb lXwIAAAAAABSAgAAUgKwVQcDJN0AABHNlnwAABIAAAAAAPDdEgAY7pB8yGqSfAAA//++apJ8 rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAETdEgCR1kJfAAABAAjrEgC83BIAAAAAALDd EgAAAJB8cAWRfEAAAAB46REDXNuVfMDpEQOs25V8AAAAAAAAAAAAAFICeOkRA2R2AAgAAAAA 2OYSAAAAAAA62aABZHYACAAAAAAlAAAADAAAAAgAAABUAAAAhAAAAA4BAAC9AAAANgEAAMkA AAABAAAAAADhQQCQ4sE9AQAACP///wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAA LQByAGUAYwBlAGkAdgBlAHIArboDAAAAAwAAAAYAAAAFAAAABgAAAAMAAAAFAAAABgAAAAMA AAAlAAAADAAAAAEAAAAoAAAADAAAAAgAAAASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAcAAAAlAAAADAAAAA0AAIAoAAAADAAAAAEAAAAoAAAADAAAAAUA AAAlAAAADAAAAAAAAIAoAAAADAAAAAIAAAAlAAAADAAAAAcAAIAoAAAADAAAAAMAAAAOAAAA FAAAAAAAAAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		3		GoF Behavioral Patterns		Interpreter				This pattern, given a language, defines a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:08:22">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_928A21EC_E238_4be5_869C_4F0867D7470F">
			<UML:Namespace.ownedElement>
				<UML:Class name="Context" xmi.id="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E" visibility="public" namespace="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class contains information that's global to the interpreter."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:06:05"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:07:51"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Interpreter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_E15C72E5_39CA_4ca8_8E34_50304BA43C75" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=-4;SY=-2;EX=-4;EY=-2;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_655957ED_4D5E_49df_A385_56C21DA91A99">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Client" xmi.id="EAID_655957ED_4D5E_49df_A385_56C21DA91A99" visibility="public" namespace="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) builds, or is given, an abstract syntax tree representing a particular sentence in the language that the grammar defines, and (b) invokes the Interpret operation."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:06:24"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:07:26"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Interpreter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_B1D14024_64A1_4c63_B9FC_7ACDACDAA5E0" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=-8;EX=0;EY=-8;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_655957ED_4D5E_49df_A385_56C21DA91A99">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="AbstractExpression" xmi.id="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925" visibility="public" namespace="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an abstract Interpret operation that is common to all nodes in the abstract syntax tree."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:06:39"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:05:13"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Interpreter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Interpret" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{2AC46F04-B5B8-451a-ABB8-D355AB382B28}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-B5B8-451a-ABB8-D355AB382B28}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="Context" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Context"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E"/>
										<UML:TaggedValue tag="ea_guid" value="{9D864699-1555-4d10-9B12-D48DF896E5CD}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_82C6B969_3CCD_419d_9574_FD82FA1F3D72" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=61;SY=-15;EX=46;EY=18;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_E1ED9034_45DF_48ac_B01C_004D25621680">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" multiplicity="1..*" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_27BC5A55_6F33_4174_B12B_D685B614D87C" supertype="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925" xmi.id="EAID_9E92FB97_0A3C_4a28_94B7_7A43D78A369B" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_E1ED9034_45DF_48ac_B01C_004D25621680" supertype="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925" xmi.id="EAID_FC302345_BF0A_48cb_A00B_42EC3A1EA648" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="TerminalExpression" xmi.id="EAID_27BC5A55_6F33_4174_B12B_D685B614D87C" visibility="public" namespace="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This classThis class implements an Interpret operation associated with terminal symbols in the grammar."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:11:27"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:12:01"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Interpreter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Interpret" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{2AC46F04-B5B8-451a-ABB8-D355AB382B28}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-B5B8-451a-ABB8-D355AB382B28}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="Context" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Context"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E"/>
										<UML:TaggedValue tag="ea_guid" value="{9D864699-1555-4d10-9B12-D48DF896E5CD}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="NonTerminalExpression" xmi.id="EAID_E1ED9034_45DF_48ac_B01C_004D25621680" visibility="public" namespace="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class maintains instance variables of type AbstractExpression for each symbol in a rule, and implements an Interpret operation for nonterminal symbols in the grammar."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:11:43"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:10:54"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Interpreter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Interpret" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{2AC46F04-B5B8-451a-ABB8-D355AB382B28}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-B5B8-451a-ABB8-D355AB382B28}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="Context" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Context"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E"/>
										<UML:TaggedValue tag="ea_guid" value="{9D864699-1555-4d10-9B12-D48DF896E5CD}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Interpreter" xmi.id="EAID_D4466B3F_C11F_4a57_AA0C_B5325290D515" diagramType="ClassDiagram" owner="EAPK_D4466B3F_C11F_4a57_AA0C_B5325290D515" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern, given a language, defines a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:14"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 11:12:04"/>
				<UML:TaggedValue tag="package" value="EAPK_928A21EC_E238_4be5_869C_4F0867D7470F"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=304;Top=269;Right=429;Bottom=339;imgL=229;imgT=229;imgR=354;imgB=299;" subject="EAID_E1ED9034_45DF_48ac_B01C_004D25621680" seqno="1" style="DUID=E66126DD;LBL=;"/>
				<UML:DiagramElement geometry="Left=161;Top=270;Right=267;Bottom=340;imgL=86;imgT=230;imgR=192;imgB=300;" subject="EAID_27BC5A55_6F33_4174_B12B_D685B614D87C" seqno="2" style="DUID=61D99248;LBL=;"/>
				<UML:DiagramElement geometry="Left=240;Top=131;Right=345;Bottom=201;imgL=165;imgT=91;imgR=270;imgB=161;" subject="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925" seqno="3" style="DUID=45DF8B95;LBL=;"/>
				<UML:DiagramElement geometry="Left=85;Top=146;Right=175;Bottom=175;imgL=10;imgT=106;imgR=100;imgB=135;" subject="EAID_655957ED_4D5E_49df_A385_56C21DA91A99" seqno="4" style="DUID=6DDEE666;LBL=;"/>
				<UML:DiagramElement geometry="Left=235;Top=50;Right=325;Bottom=79;imgL=160;imgT=10;imgR=250;imgB=39;" subject="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E" seqno="5" style="DUID=44D7CC83;LBL=;"/>
				<UML:DiagramElement geometry="SX=-4;SY=-2;EX=-4;EY=-2;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=208:-160$208:-66$;" subject="EAID_E15C72E5_39CA_4ca8_8E34_50304BA43C75" style="Mode=3;EOID=44D7CC83;SOID=6DDEE666;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=-8;EX=0;EY=-8;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_B1D14024_64A1_4c63_B9FC_7ACDACDAA5E0" style="Mode=2;EOID=45DF8B95;SOID=6DDEE666;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=214:-251$292:-251$;" subject="EAID_9E92FB97_0A3C_4a28_94B7_7A43D78A369B" style="Mode=3;EOID=45DF8B95;SOID=61D99248;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=366:-251$292:-251$;" subject="EAID_FC302345_BF0A_48cb_A00B_42EC3A1EA648" style="Mode=3;EOID=45DF8B95;SOID=E66126DD;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=61;SY=-15;EX=46;EY=18;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;Path=475:-318$475:-147$;" subject="EAID_82C6B969_3CCD_419d_9574_FD82FA1F3D72" style="Mode=3;EOID=45DF8B95;SOID=E66126DD;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_655957ED_4D5E_49df_A385_56C21DA91A99" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E" name="Context" UMLType="Class"/>
		<EAStub xmi.id="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925" name="AbstractExpression" UMLType="Class"/>
		<EAStub xmi.id="EAID_E1ED9034_45DF_48ac_B01C_004D25621680" name="NonTerminalExpression" UMLType="Class"/>
		<EAStub xmi.id="EAID_27BC5A55_6F33_4174_B12B_D685B614D87C" name="TerminalExpression" UMLType="Class"/>
		<UMLPattern name="Interpreter" category="GoF Behavioral Patterns" version="2.0" notes="This pattern, given a language, defines a representation for its grammar along with an interpreter that uses the representation to interpret sentences in the language.">
			<UMLPattern.PromptList>
				<Element name="NonTerminalExpression:Class" guid="EAID_E1ED9034_45DF_48ac_B01C_004D25621680" id="139" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class maintains instance variables of type AbstractExpression for each symbol in a rule, and implements an Interpret operation for nonterminal symbols in the grammar.">
						<![CDATA[This class maintains instance variables of type AbstractExpression for each symbol in a rule, and implements an Interpret operation for nonterminal symbols in the grammar.]]>
					</Comment>
				</Element>
				<Element name="TerminalExpression:Class" guid="EAID_27BC5A55_6F33_4174_B12B_D685B614D87C" id="138" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This classThis class implements an Interpret operation associated with terminal symbols in the grammar.">
						<![CDATA[This classThis class implements an Interpret operation associated with terminal symbols in the grammar.]]>
					</Comment>
				</Element>
				<Element name="AbstractExpression:Class" guid="EAID_B3488DB1_78CA_42c1_B159_B00CDFF3B925" id="137" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an abstract Interpret operation that is common to all nodes in the abstract syntax tree.">
						<![CDATA[This class declares an abstract Interpret operation that is common to all nodes in the abstract syntax tree.]]>
					</Comment>
				</Element>
				<Element name="Client:Class" guid="EAID_655957ED_4D5E_49df_A385_56C21DA91A99" id="136" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) builds, or is given, an abstract syntax tree representing a particular sentence in the language that the grammar defines, and (b) invokes the Interpret operation.">
						<![CDATA[This class (a) builds, or is given, an abstract syntax tree representing a particular sentence in the language that the grammar defines, and (b) invokes the Interpret operation.]]>
					</Comment>
				</Element>
				<Element name="Context:Class" guid="EAID_3CAA3D98_C604_4281_A211_EE0ACD75E53E" id="135" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class contains information that's global to the interpreter.">
						<![CDATA[This class contains information that's global to the interpreter.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="11671" cy="8779">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 bwBuAK26BwAAAAYAAAAGAAAABQAAAAYAAAAEAAAACQAAAAMAAAAGAAAABgAAAAMAAAAHAAAA BgAAAAYAAAAEAAAABgAAAAYAAAAGAAAAAwAAAAYAAAAGAAAAJQAAAAwAAAABAAAAGwAAABAA AAAwAQAA2P7//zYAAAAQAAAArAEAANj+//8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAA DAAAAABAQABUAAAAWAAAAOoAAAAIAQAA8wAAABQBAAABAAAAAADhQQCQ4sE1AQAA0P7//wIA AABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKwAgAAYAAAADAAAAVAAAALgAAAD7AAAA CAEAAEwBAAAUAQAAAQAAAAAA4UEAkOLBRgEAAND+//8SAAAATAAAAAAAAAAAAAAAAAAAAP// ////////cAAAAEkAbgB0AGUAcgBwAHIAZQB0ACgAQwBvAG4AdABlAHgAdAApAAMAAAAGAAAA AwAAAAYAAAADAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAHAAAABgAAAAYAAAADAAAABgAAAAUA AAADAAAAAwAAABgAAAAMAAAAAAAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAAAAAAAlAAAA DAAAAAcAAAAbAAAAEAAAAK8AAABg////NgAAABAAAADQAAAAYP///zYAAAAQAAAA0AAAAL7/ //82AAAAEAAAAOsAAAC+////GwAAABAAAADrAAAAvv///xsAAAAQAAAA6wAAAL7///82AAAA EAAAAN0AAAC5////GwAAABAAAADrAAAAvv///zYAAAAQAAAA3QAAAMT///8SAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAA DAAAAAcAAAAmAAAAHAAAAAcAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAHAAAAGwAAABAA AACvAAAAWP///zYAAAAQAAAA0AAAAFj///82AAAAEAAAANAAAABY////NgAAABAAAADwAAAA WP///xsAAAAQAAAA8AAAAFj///8bAAAAEAAAAPAAAABY////NgAAABAAAADiAAAAU////xsA AAAQAAAA8AAAAFj///82AAAAEAAAAOIAAABe////EgAAAAwAAAACAAAAGQAAAAwAAAD///8A EgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAHAAAAJgAAABwA AAAHAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABwAAABsAAAAQAAAA1gAAAPL+//82AAAA EAAAANYAAAAF////NgAAABAAAAAkAQAABf///zYAAAAQAAAAJAEAADf///8bAAAAEAAAACQB AAA3////VgAAACgAAADUAAAAoQAAAN8AAACwAAAAAwAAACoBKP8fASj/JAE3/xIAAAAMAAAA AgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgA AAAMAAAABwAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAcAAAAbAAAA EAAAAG4BAADz/v//NgAAABAAAABuAQAABf///zYAAAAQAAAAJAEAAAX///82AAAAEAAAACQB AAA3////GwAAABAAAAAkAQAAN////1YAAAAoAAAA1AAAAKEAAADfAAAAsAAAAAMAAAAqASj/ HwEo/yQBN/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wAlAAAADAAAAAMAAAAoAAAADAAAAAcAAAAmAAAAHAAAAAcAAAAAAAAAAQAAAAAAAAAAAAAA JQAAAAwAAAAHAAAAGwAAABAAAACtAQAAwv7//zYAAAAQAAAA2wEAAML+//82AAAAEAAAANsB AABt////NgAAABAAAABZAQAAbf///1YAAAAsAAAAYgEAABIBAAB2AQAAGgEAAAQAAAC3Acb+ rQHC/rYBvv7BAcL+GwAAABAAAABZAQAAbf///xsAAAAQAAAAWQEAAG3///82AAAAEAAAAGgB AABz////GwAAABAAAABZAQAAbf///zYAAAAQAAAAaAEAAGf///8SAAAADAAAAAIAAAAZAAAA DAAAAP///wBSAAAAcAEAAAgAAAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkA QQBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAknwAAFICYAAAQG0FkXwI6xIA2OYSAAAAAACs3hIA+CchEDBxJRD/////+NwSAO8p IRAdAAAAAAAAAAEAAABQAAAAEE4TA1zblXwAAFICrNuVfAgAAAAAAFICAABSAhBOEwMk3QAA Ec2WfAAAEgAAAAAA8N0SABjukHzIapJ8AAD//75qknytaJJ8AABSAmAAAEBtBZF8COsSANjm EgAAAAAARN0SAJHWQl8AAAEACOsSALzcEgAAAAAAsN0SAAAAkHxwBZF8QAAAANDsEQNc25V8 GO0RA6zblXwAAAAAAAAAAAAAUgLQ7BEDZHYACAAAAADY5hIAAAAAADrZoAFkdgAIAAAAACUA AAAMAAAACAAAAFQAAABkAAAAEQEAAHAAAAAhAQAAfAAAAAEAAAAAAOFBAJDiwVwBAABo//// BAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1QAAAAxAC4ALgAqAAYAAAADAAAAAwAAAAQA AAAlAAAADAAAAAEAAAAoAAAADAAAAAgAAAASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAcAAAAlAAAADAAAAA0AAIAoAAAADAAAAAEAAAAoAAAADAAAAAUA AAAlAAAADAAAAAAAAIAoAAAADAAAAAIAAAAlAAAADAAAAAcAAIAoAAAADAAAAAMAAAAOAAAA FAAAAAAAAAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		4		GoF Behavioral Patterns		Iterator				This pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:08:44">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7">
			<UML:Namespace.ownedElement>
				<UML:Class name="Aggregate" xmi.id="EAID_12FBCE55_6CCF_45d4_897A_CA21815BF272" visibility="public" namespace="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an interface for creating an Iterator object."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:15:43"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:48:47"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Iterator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="CreateIterator" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1496D672-A9EA-4c2d-90BB-AED49082EBA0}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446" supertype="EAID_12FBCE55_6CCF_45d4_897A_CA21815BF272" xmi.id="EAID_895FCE9F_386A_448c_8657_A890311B66FA" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteAggregate" xmi.id="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446" visibility="public" namespace="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the Iterator creation interface to return an instance of the proper ConcreteIterator."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:16:22"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:48:24"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Iterator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="CreateIterator" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="return new ConcretIterator(this)"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1496D672-A9EA-4c2d-90BB-AED49082EBA0}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Dependency client="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446" supplier="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150" xmi.id="EAID_EE34045A_E2D6_4efc_918B_2829A4CE3B3D" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Association xmi.id="EAID_D06425FC_0C34_43c2_AA22_E8B567CFE9A0" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=2;SY=-16;EX=2;EY=-16;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Iterator" xmi.id="EAID_BCEA0940_F05F_4d1b_91F6_FC33381B09AB" visibility="public" namespace="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an interface for accessing and traversing elements."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:17:29"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:46:21"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Iterator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="First" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{58A9ACC7-EF00-4238-BFFB-7963BA2581A0}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="Next" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0D8B2E9A-D715-4d4e-B0D6-9CDE25D44486}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="IsDone" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{9317D3CD-250C-4f50-B928-3F90BD834FB3}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="CurrentItem" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="3"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{BEF94FB4-7828-41fc-BE64-9F211EB6985F}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150" supertype="EAID_BCEA0940_F05F_4d1b_91F6_FC33381B09AB" xmi.id="EAID_A07B0F3C_C05B_407b_A1F7_EDBEA35B2FF6" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteIterator" xmi.id="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150" visibility="public" namespace="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements the Iterator interface and (b) keeps track of the current position in the traversal of the aggregate."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:18:32"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:46:59"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Iterator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Iterator" xmi.id="EAID_D8B97F7F_6BC3_4b06_A5EC_B26B9796F0E7" diagramType="ClassDiagram" owner="EAPK_D8B97F7F_6BC3_4b06_A5EC_B26B9796F0E7" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:16"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 11:50:04"/>
				<UML:TaggedValue tag="package" value="EAPK_AEB3D8FA_A962_451a_9D44_5E0E7CDBA5E7"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=327;Top=231;Right=417;Bottom=301;imgL=226;imgT=157;imgR=316;imgB=227;" subject="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150" seqno="1" style="DUID=52E168E8;LBL=;"/>
				<UML:DiagramElement geometry="Left=325;Top=84;Right=415;Bottom=175;imgL=224;imgT=10;imgR=314;imgB=101;" subject="EAID_BCEA0940_F05F_4d1b_91F6_FC33381B09AB" seqno="2" style="DUID=79B88A1C;LBL=;"/>
				<UML:DiagramElement geometry="Left=111;Top=230;Right=241;Bottom=309;imgL=10;imgT=156;imgR=140;imgB=235;" subject="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446" seqno="3" style="DUID=A6156713;LBL=;"/>
				<UML:DiagramElement geometry="Left=127;Top=87;Right=223;Bottom=157;imgL=26;imgT=13;imgR=122;imgB=83;" subject="EAID_12FBCE55_6CCF_45d4_897A_CA21815BF272" seqno="4" style="DUID=A834931D;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_895FCE9F_386A_448c_8657_A890311B66FA" style="Mode=2;EOID=A834931D;SOID=A6156713;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_EE34045A_E2D6_4efc_918B_2829A4CE3B3D" style="Mode=2;EOID=52E168E8;SOID=A6156713;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=2;SY=-16;EX=2;EY=-16;EDGE=4;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_D06425FC_0C34_43c2_AA22_E8B567CFE9A0" style="Mode=2;EOID=A6156713;SOID=52E168E8;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_A07B0F3C_C05B_407b_A1F7_EDBEA35B2FF6" style="Mode=2;EOID=79B88A1C;SOID=52E168E8;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446" name="ConcreteAggregate" UMLType="Class"/>
		<EAStub xmi.id="EAID_12FBCE55_6CCF_45d4_897A_CA21815BF272" name="Aggregate" UMLType="Class"/>
		<EAStub xmi.id="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150" name="ConcreteIterator" UMLType="Class"/>
		<EAStub xmi.id="EAID_BCEA0940_F05F_4d1b_91F6_FC33381B09AB" name="Iterator" UMLType="Class"/>
		<UMLPattern name="Iterator" category="GoF Behavioral Patterns" version="2.0" notes="This pattern provides a way to access the elements of an aggregate object sequentially without exposing its underlying representation.">
			<UMLPattern.PromptList>
				<Element name="ConcreteIterator:Class" guid="EAID_E1FC322C_D7F9_477f_91E4_C010D24EA150" id="134" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements the Iterator interface and (b) keeps track of the current position in the traversal of the aggregate.">
						<![CDATA[This class (a) implements the Iterator interface and (b) keeps track of the current position in the traversal of the aggregate.]]>
					</Comment>
				</Element>
				<Element name="Iterator:Class" guid="EAID_BCEA0940_F05F_4d1b_91F6_FC33381B09AB" id="133" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an interface for accessing and traversing elements.">
						<![CDATA[This class defines an interface for accessing and traversing elements.]]>
					</Comment>
				</Element>
				<Element name="ConcreteAggregate:Class" guid="EAID_71250FDB_2952_4e47_AE8C_B30C7793C446" id="132" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the Iterator creation interface to return an instance of the proper ConcreteIterator.">
						<![CDATA[This class implements the Iterator creation interface to return an instance of the proper ConcreteIterator.]]>
					</Comment>
				</Element>
				<Element name="Aggregate:Class" guid="EAID_12FBCE55_6CCF_45d4_897A_CA21815BF272" id="131" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an interface for creating an Iterator object.">
						<![CDATA[This class defines an interface for creating an Iterator object.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="9168" cy="6938">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 AAAMAAAABQAAAFQAAAB8AAAA+wAAABMAAAAeAQAAHQAAAAEAAAAAAOFBAJDiwWABAACj//// CAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1wAAABJAHQAZQByAGEAdABvAHIAAwAAAAMA AAAGAAAABAAAAAYAAAADAAAABgAAAAQAAAAlAAAADAAAAAEAAAAbAAAAEAAAAEUBAACR//// NgAAABAAAACeAQAAkf///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQA AABYAAAA5QAAAC0AAADuAAAAOQAAAAEAAAAAAOFBAJDiwUoBAACJ////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAAAlAAAADAAAAAQAAABUAAAAeAAAAPYA AAAtAAAAEAEAADkAAAABAAAAAADhQQCQ4sFbAQAAif///wcAAABMAAAAAAAAAAAAAAAAAAAA //////////9cAAAARgBpAHIAcwB0ACgAKQCtugYAAAADAAAAAwAAAAUAAAADAAAAAwAAAAMA AAAlAAAADAAAAAEAAAAlAAAADAAAAAEAAABUAAAAWAAAAOUAAAA6AAAA7gAAAEYAAAABAAAA AADhQQCQ4sFKAQAAfP///wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKwAgAAYA AAADAAAAJQAAAAwAAAAEAAAAVAAAAHAAAAD2AAAAOgAAABEBAABGAAAAAQAAAAAA4UEAkOLB WwEAAHz///8GAAAATAAAAAAAAAAAAAAAAAAAAP//////////WAAAAE4AZQB4AHQAKAApAAcA AAAGAAAABQAAAAMAAAADAAAAAwAAACUAAAAMAAAAAQAAACUAAAAMAAAAAQAAAFQAAABYAAAA 5QAAAEcAAADuAAAAUwAAAAEAAAAAAOFBAJDiwUoBAABv////AgAAAEwAAAAAAAAAAAAAAAAA AAD//////////1AAAAArACAABgAAAAMAAAAlAAAADAAAAAQAAABUAAAAfAAAAPYAAABHAAAA HAEAAFMAAAABAAAAAADhQQCQ4sFbAQAAb////wgAAABMAAAAAAAAAAAAAAAAAAAA//////// //9cAAAASQBzAEQAbwBuAGUAKAApAAIAAAAFAAAABwAAAAYAAAAGAAAABgAAAAMAAAADAAAA JQAAAAwAAAABAAAAJQAAAAwAAAABAAAAVAAAAFgAAADlAAAAVAAAAO4AAABgAAAAAQAAAAAA 4UEAkOLBSgEAAGL///8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAA AwAAACUAAAAMAAAABAAAAFQAAACcAAAA9gAAAFQAAAAwAQAAYAAAAAEAAAAAAOFBAJDiwVsB AABi////DQAAAEwAAAAAAAAAAAAAAAAAAAD//////////2gAAABDAHUAcgByAGUAbgB0AEkA dABlAG0AKAApAK26BwAAAAYAAAADAAAAAwAAAAYAAAAGAAAAAwAAAAIAAAADAAAABgAAAAcA AAADAAAAAwAAACUAAAAMAAAAAQAAACUAAAAMAAAAAQAAABgAAAAMAAAAAAAAACcAAAAYAAAA CAAAAAAAAADAv8AAAAAAACUAAAAMAAAACAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAMC/ wAAlAAAADAAAAAYAAAArAAAAGAAAAEoBAAAW////owEAANH+//8lAAAADAAAAAIAAAAoAAAA DAAAAAgAAAAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAArAAAAGAAAAEcBAAAZ////oAEAANT+ //8lAAAADAAAAAcAAABUAAAArAAAAOcAAACmAAAANgEAALEAAAABAAAAAADhQQCQ4sFMAQAA EP///xAAAABMAAAAAAAAAAAAAAAAAAAA//////////9sAAAAQwBvAG4AYwByAGUAdABlAEkA dABlAHIAYQB0AG8AcgAHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAMAAAADAAAA BgAAAAQAAAAGAAAAAwAAAAYAAAAEAAAAJQAAAAwAAAABAAAAGwAAABAAAABHAQAA/v7//zYA AAAQAAAAoAEAAP7+//8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQAAYAAAA DAAAAAAAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAA AACvAAAAGv///zYAAAAQAAAArwAAAD////82AAAAEAAAAK8AAAA/////NgAAABAAAACvAAAA Y////xsAAAAQAAAArwAAAGP///9WAAAAKAAAAEUAAABTAAAAUAAAAGIAAAADAAAAtQBU/6oA VP+vAGP/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8A JQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUA AAAMAAAABgAAABsAAAAQAAAA8QAAAPb+//82AAAAEAAAAPQAAAD2/v//GwAAABAAAAD3AAAA 9v7//zYAAAAQAAAA+gAAAPb+//8bAAAAEAAAAP0AAAD2/v//NgAAABAAAAAAAQAA9v7//xsA AAAQAAAAAwEAAPb+//82AAAAEAAAAAYBAAD2/v//GwAAABAAAAAJAQAA9v7//zYAAAAQAAAA DAEAAPb+//8bAAAAEAAAAA8BAAD2/v//NgAAABAAAAASAQAA9v7//xsAAAAQAAAAFQEAAPb+ //82AAAAEAAAABgBAAD2/v//GwAAABAAAAAbAQAA9v7//zYAAAAQAAAAHAEAAPb+//82AAAA EAAAABwBAAD2/v//NgAAABAAAAAeAQAA9v7//xsAAAAQAAAAIQEAAPb+//82AAAAEAAAACQB AAD2/v//GwAAABAAAAAnAQAA9v7//zYAAAAQAAAAKgEAAPb+//8bAAAAEAAAAC0BAAD2/v// NgAAABAAAAAwAQAA9v7//xsAAAAQAAAAMwEAAPb+//82AAAAEAAAADYBAAD2/v//GwAAABAA AAA5AQAA9v7//zYAAAAQAAAAPAEAAPb+//8bAAAAEAAAAD8BAAD2/v//NgAAABAAAABCAQAA 9v7//xsAAAAQAAAARQEAAPb+//82AAAAEAAAAEcBAAD2/v//GwAAABAAAABHAQAA9v7//xsA AAAQAAAARwEAAPb+//82AAAAEAAAADkBAADy/v//GwAAABAAAABHAQAA9v7//zYAAAAQAAAA OQEAAPv+//8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAA JQAAAAwAAAAGAAAAGwAAABAAAABHAQAA5v7//zYAAAAQAAAAHAEAAOb+//82AAAAEAAAABwB AADm/v//NgAAABAAAADxAAAA5v7//xsAAAAQAAAA8QAAAOb+//8bAAAAEAAAAPEAAADm/v// NgAAABAAAAAAAQAA7P7//xsAAAAQAAAA8QAAAOb+//82AAAAEAAAAAABAADg/v//EgAAAAwA AAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAA KAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsA AAAQAAAAcwEAABn///82AAAAEAAAAHMBAAA1////NgAAABAAAABzAQAANf///zYAAAAQAAAA cwEAAFH///8bAAAAEAAAAHMBAABR////VgAAACgAAAAJAQAAZQAAABQBAAB0AAAAAwAAAHkB Qv9uAUL/cwFR/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA ////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACUAAAAMAAAADQAAgCgAAAAMAAAAAQAAACgA AAAMAAAABwAAACUAAAAMAAAAAAAAgCgAAAAMAAAAAgAAACUAAAAMAAAABwAAgCgAAAAMAAAA AwAAAA4AAAAUAAAAAAAAABAAAAAUAAAA</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		5		GoF Behavioral Patterns		Mediator				This pattern defines an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:09:04">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_33FC10D4_D590_445b_A7D6_538D446F2ECD">
			<UML:Namespace.ownedElement>
				<UML:Class name="Mediator" xmi.id="EAID_05A0993D_2C3E_4f9f_9857_E357AC29A149" visibility="public" namespace="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an interface for communicating with Colleague objects."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:20:36"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:53:08"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Mediator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Generalization subtype="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20" supertype="EAID_05A0993D_2C3E_4f9f_9857_E357AC29A149" xmi.id="EAID_5FCC99ED_E641_487c_8DC5_8C989543DEFE" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_BF1CAE68_57AB_4110_B09C_515F7575095C" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-mediator"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="mediator" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_05A0993D_2C3E_4f9f_9857_E357AC29A149">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Colleague" xmi.id="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6" visibility="public" namespace="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:20:52"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:52:44"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Mediator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Generalization subtype="EAID_D2F3DB22_5FC9_4abc_97D0_F7481020A377" supertype="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6" xmi.id="EAID_6F295956_AAB0_446b_8313_552D9DA101F3" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_B3554D1F_E6F2_489c_882D_D7F49DD9ADE8" supertype="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6" xmi.id="EAID_D79F56FE_D529_4039_ADBD_34795AB05F0C" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteMediator" xmi.id="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20" visibility="public" namespace="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements co-operative behaviour by co-ordinating Colleague objects. It also knows and maintains its colleagues."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:21:13"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:53:51"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Mediator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_0579C213_75C4_4582_B6C0_0DEF71349874" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="EX=10;EY=-1;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_B3554D1F_E6F2_489c_882D_D7F49DD9ADE8">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Association xmi.id="EAID_E83AEA66_0E73_4b26_A9AB_77AA6B528643" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_D2F3DB22_5FC9_4abc_97D0_F7481020A377">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="ConcreteColleague1" xmi.id="EAID_D2F3DB22_5FC9_4abc_97D0_F7481020A377" visibility="public" namespace="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:21:44"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:52:46"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Mediator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="ConcreteColleague2" xmi.id="EAID_B3554D1F_E6F2_489c_882D_D7F49DD9ADE8" visibility="public" namespace="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:22:02"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 11:52:48"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Mediator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Mediator" xmi.id="EAID_769E976F_F4A6_49e0_A860_2E1FD84B973F" diagramType="ClassDiagram" owner="EAPK_769E976F_F4A6_49e0_A860_2E1FD84B973F" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern defines an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:18"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 11:54:00"/>
				<UML:TaggedValue tag="package" value="EAPK_33FC10D4_D590_445b_A7D6_538D446F2ECD"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=392;Top=227;Right=499;Bottom=255;imgL=294;imgT=160;imgR=401;imgB=188;" subject="EAID_B3554D1F_E6F2_489c_882D_D7F49DD9ADE8" seqno="1" style="DUID=4B861325;LBL=;"/>
				<UML:DiagramElement geometry="Left=246;Top=227;Right=353;Bottom=255;imgL=148;imgT=160;imgR=255;imgB=188;" subject="EAID_D2F3DB22_5FC9_4abc_97D0_F7481020A377" seqno="2" style="DUID=338EF088;LBL=;"/>
				<UML:DiagramElement geometry="Left=108;Top=227;Right=198;Bottom=255;imgL=10;imgT=160;imgR=100;imgB=188;" subject="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20" seqno="3" style="DUID=D216107B;LBL=;"/>
				<UML:DiagramElement geometry="Left=311;Top=84;Right=401;Bottom=112;imgL=213;imgT=17;imgR=303;imgB=45;" subject="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6" seqno="4" style="DUID=FAFB1C51;LBL=;"/>
				<UML:DiagramElement geometry="Left=112;Top=84;Right=202;Bottom=112;imgL=14;imgT=17;imgR=104;imgB=45;" subject="EAID_05A0993D_2C3E_4f9f_9857_E357AC29A149" seqno="5" style="DUID=E6B162AF;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_5FCC99ED_E641_487c_8DC5_8C989543DEFE" style="Mode=2;EOID=E6B162AF;SOID=D216107B;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=4;$LLB=;LLT=CX=55:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_BF1CAE68_57AB_4110_B09C_515F7575095C" style="Mode=2;EOID=E6B162AF;SOID=FAFB1C51;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=299:-162$356:-162$;" subject="EAID_6F295956_AAB0_446b_8313_552D9DA101F3" style="Mode=3;EOID=FAFB1C51;SOID=338EF088;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=445:-162$356:-162$;" subject="EAID_D79F56FE_D529_4039_ADBD_34795AB05F0C" style="Mode=3;EOID=FAFB1C51;SOID=4B861325;Hidden=0;"/>
				<UML:DiagramElement geometry="EX=10;EY=-1;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=152:-305$370:-305$370:-239$;" subject="EAID_0579C213_75C4_4582_B6C0_0DEF71349874" style="Mode=3;EOID=4B861325;SOID=D216107B;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_E83AEA66_0E73_4b26_A9AB_77AA6B528643" style="Mode=2;EOID=338EF088;SOID=D216107B;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20" name="ConcreteMediator" UMLType="Class"/>
		<EAStub xmi.id="EAID_05A0993D_2C3E_4f9f_9857_E357AC29A149" name="Mediator" UMLType="Class"/>
		<EAStub xmi.id="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6" name="Colleague" UMLType="Class"/>
		<EAStub xmi.id="EAID_D2F3DB22_5FC9_4abc_97D0_F7481020A377" name="ConcreteColleague1" UMLType="Class"/>
		<EAStub xmi.id="EAID_B3554D1F_E6F2_489c_882D_D7F49DD9ADE8" name="ConcreteColleague2" UMLType="Class"/>
		<UMLPattern name="Mediator" category="GoF Behavioral Patterns" version="2.0" notes="This pattern defines an object that encapsulates how a set of objects interact. Mediator promotes loose coupling by keeping objects from referring to each other explicitly, and it lets you vary their interaction independently.">
			<UMLPattern.PromptList>
				<Element name="ConcreteColleague2:Class" guid="EAID_B3554D1F_E6F2_489c_882D_D7F49DD9ADE8" id="130" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague.">
						<![CDATA[Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague.]]>
					</Comment>
				</Element>
				<Element name="ConcreteColleague1:Class" guid="EAID_D2F3DB22_5FC9_4abc_97D0_F7481020A377" id="129" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague.">
						<![CDATA[Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague.]]>
					</Comment>
				</Element>
				<Element name="ConcreteMediator:Class" guid="EAID_CB8DCAC7_8FEE_4b47_BCE3_D610EAF54F20" id="128" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements co-operative behaviour by co-ordinating Colleague objects. It also knows and maintains its colleagues.">
						<![CDATA[This class implements co-operative behaviour by co-ordinating Colleague objects. It also knows and maintains its colleagues.]]>
					</Comment>
				</Element>
				<Element name="Colleague:Class" guid="EAID_B428F3FE_D837_479a_B595_E460B15DA8B6" id="127" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague.">
						<![CDATA[Each colleague class knows its mediator object and communicates with its mediator whenever it would have otherwise communicated with another colleague.]]>
					</Comment>
				</Element>
				<Element name="Mediator:Class" guid="EAID_05A0993D_2C3E_4f9f_9857_E357AC29A149" id="126" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an interface for communicating with Colleague objects.">
						<![CDATA[This class defines an interface for communicating with Colleague objects.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="11559" cy="7165">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 AACEAAAApQAAAA0AAADSAAAAGQAAAAEAAAAAAOFBAJDiwQcBAACw////CQAAAEwAAAAAAAAA AAAAAAAAAAD//////////2AAAAAtAG0AZQBkAGkAYQB0AG8AcgCtugMAAAAJAAAABgAAAAYA AAADAAAABgAAAAMAAAAGAAAAAwAAACUAAAAMAAAAAQAAACgAAAAMAAAABwAAABIAAAAMAAAA AQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAA AAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAACsBAAAd////NgAAABAAAAArAQAA Xv///zYAAAAQAAAAZAEAAF7///82AAAAEAAAAGQBAACQ////GwAAABAAAABkAQAAkP///1YA AAAoAAAA/QAAAC0AAAAIAQAAPAAAAAMAAABqAYH/XwGB/2QBkP8SAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYA AAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAAC9AQAA Hf///zYAAAAQAAAAvQEAAF7///82AAAAEAAAAGQBAABe////NgAAABAAAABkAQAAkP///xsA AAAQAAAAZAEAAJD///9WAAAAKAAAAP0AAAAtAAAACAEAADwAAAADAAAAagGB/18Bgf9kAZD/ EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwA AAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAA BgAAABsAAAAQAAAAmAAAAAH///82AAAAEAAAAJgAAADP/v//NgAAABAAAAByAQAAz/7//zYA AAAQAAAAcgEAABH///82AAAAEAAAAIgBAAAR////GwAAABAAAACIAQAAEf///xsAAAAQAAAA iAEAABH///82AAAAEAAAAHoBAAAM////GwAAABAAAACIAQAAEf///zYAAAAQAAAAegEAABf/ //8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAGAAAAGwAAABAAAADGAAAAD////zYAAAAQAAAA3gAAAA////82AAAAEAAAAN4AAAAP//// NgAAABAAAAD2AAAAD////xsAAAAQAAAA9gAAAA////8bAAAAEAAAAPYAAAAP////NgAAABAA AADoAAAACv///xsAAAAQAAAA9gAAAA////82AAAAEAAAAOgAAAAV////EgAAAAwAAAACAAAA GQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwA AAAGAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAAAAACA KAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAADgAAABQAAAAAAAAAEAAAABQA AAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		6		GoF Behavioral Patterns		Memento				This pattern, without violating encapsulation, captures and externalizes an object's internal state so that the object can be restored to this state later.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:09:23">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_243C62D2_41C5_4b5f_B2A8_B98AD755CB62">
			<UML:Namespace.ownedElement>
				<UML:Class name="Originator" xmi.id="EAID_449B5CFA_6AC9_44ba_B50B_4D75EA7C8249" visibility="public" namespace="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class creates a memento containing a snapshot of its current internal state and uses the memento to restore its internal state."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:26:02"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:25:22"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Memento"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="state" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{34F0F95A-E47A-406b-95CA-F8047B374B99}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="SetMemento" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="state = m-&gt;GetState()"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E7604449-2234-4e70-92FF-F85D3B31D586}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-2234-4e70-92FF-F85D3B31D586}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="m" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Memento"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63"/>
										<UML:TaggedValue tag="ea_guid" value="{C058E211-160F-418c-878A-FCB4B833B715}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="CreateMemento" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Memento"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="return new Memento(state)"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{3528887A-68BE-42a8-AF4A-1D121EB7A5EA}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid1"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Memento"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-68BE-42a8-AF4A-1D121EB7A5EA}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Dependency client="EAID_449B5CFA_6AC9_44ba_B50B_4D75EA7C8249" supplier="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63" xmi.id="EAID_37A67429_EFB5_434b_87D2_5EB5D957A0B3" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Class name="Memento" xmi.id="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63" visibility="public" namespace="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class stores internal state of the Originator object and protects against access by objects other than the originator."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:26:32"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:25:22"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Memento"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="state" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{583DDC87-8E54-4911-960B-A95F269D6B12}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="GetState" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{8B69AA2D-B512-4f6c-A318-C8822422686C}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="SetState" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{DC8DD463-41D5-468a-B69D-28A67F833644}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_6A13BD98_9A8A_48dd_8B35_ABE44A008D52" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-memento"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="memento" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_89CE082E_23AC_437e_A8C8_D49D3E5C88A7">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Caretaker" xmi.id="EAID_89CE082E_23AC_437e_A8C8_D49D3E5C88A7" visibility="public" namespace="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class is responsible for the memento's safekeeping while never operating on or examining the contents of a memento."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:28:43"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:25:22"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Memento"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Memento" xmi.id="EAID_61212544_28B2_4140_9E30_9FD46939F6CB" diagramType="ClassDiagram" owner="EAPK_61212544_28B2_4140_9E30_9FD46939F6CB" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern, without violating encapsulation, captures and externalizes an object's internal state so that the object can be restored to this state later."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:21"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 13:25:22"/>
				<UML:TaggedValue tag="package" value="EAPK_243C62D2_41C5_4b5f_B2A8_B98AD755CB62"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=430;Top=92;Right=520;Bottom=121;imgL=407;imgT=59;imgR=497;imgB=88;" subject="EAID_89CE082E_23AC_437e_A8C8_D49D3E5C88A7" seqno="1" style="DUID=DEB74B6A;LBL=;"/>
				<UML:DiagramElement geometry="Left=268;Top=62;Right=358;Bottom=150;imgL=245;imgT=29;imgR=335;imgB=117;" subject="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63" seqno="2" style="DUID=5706ECDC;LBL=;"/>
				<UML:DiagramElement geometry="Left=33;Top=43;Right=196;Bottom=170;imgL=10;imgT=10;imgR=173;imgB=137;" subject="EAID_449B5CFA_6AC9_44ba_B50B_4D75EA7C8249" seqno="3" style="DUID=AF850BC7;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_37A67429_EFB5_434b_87D2_5EB5D957A0B3" style="Mode=2;EOID=5706ECDC;SOID=AF850BC7;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=4;$LLB=;LLT=CX=58:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_6A13BD98_9A8A_48dd_8B35_ABE44A008D52" style="Mode=2;EOID=5706ECDC;SOID=DEB74B6A;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_449B5CFA_6AC9_44ba_B50B_4D75EA7C8249" name="Originator" UMLType="Class"/>
		<EAStub xmi.id="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63" name="Memento" UMLType="Class"/>
		<EAStub xmi.id="EAID_89CE082E_23AC_437e_A8C8_D49D3E5C88A7" name="Caretaker" UMLType="Class"/>
		<UMLPattern name="Memento" category="GoF Behavioral Patterns" version="2.0" notes="This pattern, without violating encapsulation, captures and externalizes an object's internal state so that the object can be restored to this state later.">
			<UMLPattern.PromptList>
				<Element name="Caretaker:Class" guid="EAID_89CE082E_23AC_437e_A8C8_D49D3E5C88A7" id="125" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class is responsible for the memento's safekeeping while never operating on or examining the contents of a memento.">
						<![CDATA[This class is responsible for the memento's safekeeping while never operating on or examining the contents of a memento.]]>
					</Comment>
				</Element>
				<Element name="Memento:Class" guid="EAID_2C54DE96_9776_47a9_B3D9_5B2FEB2CEB63" id="124" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class stores internal state of the Originator object and protects against access by objects other than the originator.">
						<![CDATA[This class stores internal state of the Originator object and protects against access by objects other than the originator.]]>
					</Comment>
				</Element>
				<Element name="Originator:Class" guid="EAID_449B5CFA_6AC9_44ba_B50B_4D75EA7C8249" id="123" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class creates a memento containing a snapshot of its current internal state and uses the memento to restore its internal state.">
						<![CDATA[This class creates a memento containing a snapshot of its current internal state and uses the memento to restore its internal state.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="14259" cy="4163">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 VAAAAFgAAAAPAAAAQwAAABgAAABPAAAAAQAAAAAA4UEAkOLBJgAAAJz///8CAAAATAAAAAAA AAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAADAAAAAIAAAAEMAAACQAAAA TwAAAAEAAAAAAOFBAJDiwTcAAACc////EwAAAEwAAAAAAAAAAAAAAAAAAAD//////////3QA AABTAGUAdABNAGUAbQBlAG4AdABvACgATQBlAG0AZQBuAHQAbwApAK26BwAAAAYAAAADAAAA CQAAAAYAAAAJAAAABgAAAAYAAAADAAAABgAAAAMAAAAJAAAABgAAAAkAAAAGAAAABgAAAAMA AAAGAAAAAwAAABgAAAAMAAAAgICAAB4AAAAYAAAAPgAAAI/////EAAAAVv///0sAAAAQAAAA AAAAAAUAAAAWAAAADAAAAAEAAAASAAAADAAAAAEAAAAbAAAAEAAAAAAAAAAAAAAAVAAAAFQA AAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLBPgAAAI////8BAAAATAAAABQAAAAAAAAA AAAAAAAAAAAAAAAAUAAAAAMArbpkAAAAFgAAAAwAAAAAAAAAVAAAAHAAAAAnAAAAUAAAAEAA AABcAAAAAQAAAAAA4UEAkOLBPgAAAI////8GAAAATAAAAAAAAAAAAAAAAAAAAP////////// WAAAAHMAdABhAHQAZQAgAAQAAAADAAAABgAAAAMAAAAGAAAAAwAAAFQAAABYAAAAQAAAAFAA AABJAAAAXAAAAAEAAAAAAOFBAJDiwVcAAACP////AgAAAEwAAAAAAAAAAAAAAAAAAAD///// /////1AAAAA9ACAABgAAAAMAAABUAAAAVAAAAEkAAABQAAAAUgAAAFwAAAABAAAAAADhQQCQ 4sFgAAAAj////wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAbQCtugkAAABUAAAA VAAAAFIAAABQAAAAVQAAAFwAAAABAAAAAADhQQCQ4sFpAAAAj////wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAALQCtugMAAABUAAAAVAAAAFUAAABQAAAAWwAAAFwAAAABAAAA AADhQQCQ4sFsAAAAj////wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAPgCtugYA AABUAAAAfAAAAFsAAABQAAAAhQAAAFwAAAABAAAAAADhQQCQ4sFyAAAAj////wgAAABMAAAA AAAAAAAAAAAAAAAA//////////9cAAAARwBlAHQAUwB0AGEAdABlAAgAAAAGAAAAAwAAAAcA AAADAAAABgAAAAMAAAAGAAAAVAAAAFgAAACFAAAAUAAAAIsAAABcAAAAAQAAAAAA4UEAkOLB nAAAAI////8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACgAKQADAAAAAwAAABsA AAAQAAAAwwAAAKD///8WAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAAA8AAABdAAAA GAAAAGkAAAABAAAAAADhQQCQ4sEmAAAAgv///wIAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAAKwAgAAYAAAADAAAAVAAAAOQAAAAgAAAAXQAAAKgAAABpAAAAAQAAAAAA4UEAkOLB NwAAAIL///8ZAAAATAAAAAAAAAAAAAAAAAAAAP//////////gAAAAEMAcgBlAGEAdABlAE0A ZQBtAGUAbgB0AG8AKAApACAAOgAgAE0AZQBtAGUAbgB0AG8ArboHAAAAAwAAAAYAAAAGAAAA AwAAAAYAAAAJAAAABgAAAAkAAAAGAAAABgAAAAMAAAAGAAAAAwAAAAMAAAADAAAAAwAAAAMA AAAJAAAABgAAAAkAAAAGAAAABgAAAAMAAAAGAAAAGAAAAAwAAACAgIAAHgAAABgAAAA+AAAA df///8QAAABW////SwAAABAAAAAAAAAABQAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsA AAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sE+AAAA df///wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtun0AAAAWAAAADAAAAAAA AABUAAAAuAAAACcAAABqAAAAiAAAAHYAAAABAAAAAADhQQCQ4sE+AAAAdf///xIAAABMAAAA AAAAAAAAAAAAAAAA//////////9wAAAAcgBlAHQAdQByAG4AIABuAGUAdwAgAE0AZQBtAGUA bgB0AG8AAwAAAAYAAAADAAAABgAAAAMAAAAGAAAAAwAAAAYAAAAGAAAABwAAAAMAAAAJAAAA BgAAAAkAAAAGAAAABgAAAAMAAAAGAAAAVAAAAFQAAACIAAAAagAAAIsAAAB2AAAAAQAAAAAA 4UEAkOLBnwAAAHX///8BAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACgArboDAAAA VAAAAGwAAACLAAAAagAAAKEAAAB2AAAAAQAAAAAA4UEAkOLBogAAAHX///8FAAAATAAAAAAA AAAAAAAAAAAAAP//////////WAAAAHMAdABhAHQAZQCtugQAAAADAAAABgAAAAMAAAAGAAAA VAAAAFQAAAChAAAAagAAAKQAAAB2AAAAAQAAAAAA4UEAkOLBuAAAAHX///8BAAAATAAAAAAA AAAAAAAAAAAAAP//////////UAAAACkArboDAAAAGwAAABAAAADDAAAAoP///xYAAAAMAAAA AAAAABgAAAAMAAAAAEBAABgAAAAMAAAAAAAAACcAAAAYAAAABAAAAAAAAADAv8AAAAAAACUA AAAMAAAABAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAYAAAArAAAA GAAAAA8BAAC/////aAEAAGj///8lAAAADAAAAAIAAAAoAAAADAAAAAQAAAAlAAAADAAAAAMA AAAoAAAADAAAAAYAAAArAAAAGAAAAAwBAADC////ZQEAAGv///8lAAAADAAAAAUAAABUAAAA eAAAAAsBAAAmAAAAOAEAADEAAAABAAAAAADhQQCQ4sEiAQAAuf///wcAAABMAAAAAAAAAAAA AAAAAAAA//////////9cAAAATQBlAG0AZQBuAHQAbwCtugkAAAAGAAAACQAAAAYAAAAGAAAA AwAAAAYAAAAlAAAADAAAAAEAAAAbAAAAEAAAAAwBAACn////NgAAABAAAABlAQAAp////xgA AAAMAAAAiwAAAFQAAABYAAAA+gAAADwAAAAAAQAASAAAAAEAAAAAAOFBAJDiwREBAACj//// AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAAtACAAAwAAAAMAAABUAAAAfAAAAAsB AAA8AAAAKgEAAEgAAAABAAAAAADhQQCQ4sEiAQAAo////wgAAABMAAAAAAAAAAAAAAAAAAAA //////////9cAAAAcwB0AGEAdABlADoAIAAgAAQAAAADAAAABgAAAAMAAAAGAAAAAwAAAAMA AAADAAAAGAAAAAwAAAAAAAAAGwAAABAAAAAMAQAAjf///zYAAAAQAAAAZQEAAI3///8YAAAA DAAAAABAQABUAAAAWAAAAPoAAABWAAAAAwEAAGIAAAABAAAAAADhQQCQ4sERAQAAif///wIA AABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKwAgAAYAAAADAAAAVAAAAIgAAAALAQAA VgAAADsBAABiAAAAAQAAAAAA4UEAkOLBIgEAAIn///8KAAAATAAAAAAAAAAAAAAAAAAAAP// ////////YAAAAEcAZQB0AFMAdABhAHQAZQAoACkACAAAAAYAAAADAAAABwAAAAMAAAAGAAAA AwAAAAYAAAADAAAAAwAAAFQAAABYAAAA+gAAAGMAAAADAQAAbwAAAAEAAAAAAOFBAJDiwREB AAB8////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAA iAAAAAsBAABjAAAAOgEAAG8AAAABAAAAAADhQQCQ4sEiAQAAfP///woAAABMAAAAAAAAAAAA AAAAAAAA//////////9gAAAAUwBlAHQAUwB0AGEAdABlACgAKQAHAAAABgAAAAMAAAAHAAAA AwAAAAYAAAADAAAABgAAAAMAAAADAAAAGAAAAAwAAAAAAAAAJwAAABgAAAAGAAAAAAAAAMC/ wAAAAAAAJQAAAAwAAAAGAAAAJgAAABwAAAAEAAAAAAAAAAEAAAAAAAAAwL/AACUAAAAMAAAA BAAAACsAAAAYAAAAsQEAAKH///8KAgAAhf///yUAAAAMAAAAAgAAACgAAAAMAAAABgAAACUA AAAMAAAAAwAAACgAAAAMAAAABAAAACsAAAAYAAAArgEAAKT///8HAgAAiP///yUAAAAMAAAA BQAAAFQAAACEAAAArAEAAEQAAADcAQAATwAAAAEAAAAAAOFBAJDiwcMBAACb////CQAAAEwA AAAAAAAAAAAAAAAAAAD//////////2AAAABDAGEAcgBlAHQAYQBrAGUAcgCtugcAAAAGAAAA BAAAAAYAAAADAAAABgAAAAYAAAAGAAAABAAAACUAAAAMAAAAAQAAABgAAAAMAAAAiwAAABgA AAAMAAAAAAAAABgAAAAMAAAAAEBAABgAAAAMAAAAAAAAACYAAAAcAAAABAAAAAAAAAABAAAA AAAAAAAAAAAlAAAADAAAAAQAAAAbAAAAEAAAAMQAAACW////NgAAABAAAADHAAAAlv///xsA AAAQAAAAygAAAJb///82AAAAEAAAAM0AAACW////GwAAABAAAADQAAAAlv///zYAAAAQAAAA 0wAAAJb///8bAAAAEAAAANYAAACW////NgAAABAAAADZAAAAlv///xsAAAAQAAAA3AAAAJb/ //82AAAAEAAAAN8AAACW////GwAAABAAAADiAAAAlv///zYAAAAQAAAA5QAAAJb///8bAAAA EAAAAOgAAACW////NgAAABAAAADoAAAAlv///zYAAAAQAAAA6wAAAJb///8bAAAAEAAAAO4A AACW////NgAAABAAAADxAAAAlv///xsAAAAQAAAA9AAAAJb///82AAAAEAAAAPcAAACW//// GwAAABAAAAD6AAAAlv///zYAAAAQAAAA/QAAAJb///8bAAAAEAAAAAABAACW////NgAAABAA AAADAQAAlv///xsAAAAQAAAABgEAAJb///82AAAAEAAAAAkBAACW////GwAAABAAAAAMAQAA lv///xsAAAAQAAAADAEAAJb///8bAAAAEAAAAAwBAACW////NgAAABAAAAD+AAAAkv///xsA AAAQAAAADAEAAJb///82AAAAEAAAAP4AAACb////EgAAAAwAAAACAAAAGQAAAAwAAAD///8A EgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAEAAAAJgAAABwA AAAEAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABAAAABsAAAAQAAAArgEAAJb///82AAAA EAAAAIoBAACW////NgAAABAAAACKAQAAlv///zYAAAAQAAAAZgEAAJb///9WAAAALAAAAIMB AABEAAAAlwEAAE4AAAAEAAAApAGR/64Blv+kAZv/mgGW/xsAAAAQAAAAZgEAAJb///8bAAAA EAAAAGYBAACW////NgAAABAAAAB1AQAAnP///xsAAAAQAAAAZgEAAJb///82AAAAEAAAAHUB AACQ////EgAAAAwAAAACAAAAGQAAAAwAAAD///8AUgAAAHABAAAGAAAA9v///wAAAAAAAAAA AAAAAAAAAAAAAAABAAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAA rN4SAPgnIRAwcSUQ//////jcEgDvKSEQHQAAAAAAAAABAAAAUAAAALhJCgNc25V8AABSAqzb lXwIAAAAAABSAgAAUgK4SQoDJN0AABHNlnwAABIAAAAAAPDdEgAY7pB8yGqSfAAA//++apJ8 rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAETdEgCR1kJfAAABAAjrEgC83BIAAAAAALDd EgAAAJB8cAWRfEAAAAAoXQYDXNuVfHBdBgOs25V8AAAAAAAAAAAAAFICKF0GA2R2AAgAAAAA 2OYSAAAAAAA62aABZHYACAAAAAAlAAAADAAAAAYAAABUAAAAfAAAAFABAAA3AAAAgAEAAEMA AAABAAAAAADhQQCQ4sFnAQAAqP///wgAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAA LQBtAGUAbQBlAG4AdABvAAMAAAAJAAAABgAAAAkAAAAGAAAABgAAAAMAAAAGAAAAJQAAAAwA AAABAAAAKAAAAAwAAAAGAAAAEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAA KAAAAAwAAAAEAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwAAAAFAAAAJQAAAAwA AAAAAACAKAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAADgAAABQAAAAAAAAA EAAAABQAAAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		7		GoF Behavioral Patterns		Observer				This pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:09:42">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_C995416F_78DF_45ae_9AC3_92F0EA6BDB32">
			<UML:Namespace.ownedElement>
				<UML:Class name="Subject" xmi.id="EAID_C5CB97A9_75AF_4b40_8B83_18B6BDDE1AFB" visibility="public" namespace="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class knows its observers and provides an interface for attaching and detaching Observer objects."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:30:46"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:27:49"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Observer"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Attach" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{20CBA9B5-386C-42b2-A37C-8B89689FD76C}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-386C-42b2-A37C-8B89689FD76C}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="o" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Observer"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5"/>
										<UML:TaggedValue tag="ea_guid" value="{0B0BE79B-1A9D-4937-A898-ECD113CD8E37}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="Detach" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Observer"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{D57D0F54-3038-4d71-88D2-3744ECD572B2}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid1"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Observer"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-3038-4d71-88D2-3744ECD572B2}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="o" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Observer"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5"/>
										<UML:TaggedValue tag="ea_guid" value="{0DE000C3-E854-4a3f-ADFF-5BBBA902119F}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="Notify" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Observer"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="for all o in observers {
  o-&gt;Update()
}"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{F5E7EF5E-B7F7-4d1d-B566-B7822E47AE90}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid1"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Observer"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-B7F7-4d1d-B566-B7822E47AE90}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_580E6A3A_8041_40be_8338_A11B423022AE" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-observers"/>
						<UML:TaggedValue tag="rb" value="1..*"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="observers" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_C5CB97A9_75AF_4b40_8B83_18B6BDDE1AFB">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" multiplicity="1..*" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_87256083_B513_4da9_9039_EA3D6A16377C" supertype="EAID_C5CB97A9_75AF_4b40_8B83_18B6BDDE1AFB" xmi.id="EAID_9E997524_71A5_41f8_848D_503FEC07647E" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="Observer" xmi.id="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5" visibility="public" namespace="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an updating interface for objects that should be notified of changes in a subject."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:31:10"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:28:18"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Observer"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Update" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{BDE3C01E-A574-4ba3-BC3C-BBC404836F61}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_3B9EC506_0982_4139_9C7B_125F25E98ADE" supertype="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5" xmi.id="EAID_49CB9000_5B88_4df6_AEF5_A64499474A40" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteSubject" xmi.id="EAID_87256083_B513_4da9_9039_EA3D6A16377C" visibility="public" namespace="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class stores the state of interest to ConcreteObserver objects and sends notification to its observers when its state changes."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:33:37"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:29:03"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Observer"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="subjectState" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{4A22AD54-816F-4171-A7C9-F34DC819AB3C}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="GetState" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="return subjectState"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{9C3D6653-35DE-4f83-A1C7-B9EF6C6B9CE7}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="SetState" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{5B5ED5B4-638A-4bba-88EC-6D8FC72317F4}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_D01353A8_9394_427d_AF24_1D9BC554F661" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-subject"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="subject" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_3B9EC506_0982_4139_9C7B_125F25E98ADE">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_87256083_B513_4da9_9039_EA3D6A16377C">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="ConcreteObserver" xmi.id="EAID_3B9EC506_0982_4139_9C7B_125F25E98ADE" visibility="public" namespace="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class maintains a reference to a ConcreteSubject object, stores state that should stay consistent with the subject's and implements the Observer updating interface to keep its state consistent with the subject's."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:34:49"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:30:02"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Observer"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="observerState" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{91D42AB6-9DCD-4d43-B62A-7A720B405F20}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="Update" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="observerState = subject-&gt;GetState()"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{BDE3C01E-A574-4ba3-BC3C-BBC404836F61}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Observer" xmi.id="EAID_9531E972_D1C8_42c2_A226_E57ED2CC6DE8" diagramType="ClassDiagram" owner="EAPK_9531E972_D1C8_42c2_A226_E57ED2CC6DE8" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:25"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 13:26:47"/>
				<UML:TaggedValue tag="package" value="EAPK_C995416F_78DF_45ae_9AC3_92F0EA6BDB32"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=333;Top=257;Right=463;Bottom=358;imgL=236;imgT=205;imgR=366;imgB=306;" subject="EAID_3B9EC506_0982_4139_9C7B_125F25E98ADE" seqno="1" style="DUID=F0706F89;LBL=;"/>
				<UML:DiagramElement geometry="Left=140;Top=250;Right=230;Bottom=364;imgL=43;imgT=198;imgR=133;imgB=312;" subject="EAID_87256083_B513_4da9_9039_EA3D6A16377C" seqno="2" style="DUID=37504CBA;LBL=;"/>
				<UML:DiagramElement geometry="Left=350;Top=92;Right=446;Bottom=162;imgL=253;imgT=40;imgR=349;imgB=110;" subject="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5" seqno="3" style="DUID=16B37174;LBL=;"/>
				<UML:DiagramElement geometry="Left=107;Top=62;Right=263;Bottom=192;imgL=10;imgT=10;imgR=166;imgB=140;" subject="EAID_C5CB97A9_75AF_4b40_8B83_18B6BDDE1AFB" seqno="4" style="DUID=3CDF2181;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=CX=56:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;Path=;" subject="EAID_580E6A3A_8041_40be_8338_A11B423022AE" style="Mode=2;EOID=16B37174;SOID=3CDF2181;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_9E997524_71A5_41f8_848D_503FEC07647E" style="Mode=2;EOID=3CDF2181;SOID=37504CBA;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_49CB9000_5B88_4df6_AEF5_A64499474A40" style="Mode=2;EOID=16B37174;SOID=F0706F89;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=4;$LLB=;LLT=CX=46:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_D01353A8_9394_427d_AF24_1D9BC554F661" style="Mode=2;EOID=37504CBA;SOID=F0706F89;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_C5CB97A9_75AF_4b40_8B83_18B6BDDE1AFB" name="Subject" UMLType="Class"/>
		<EAStub xmi.id="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5" name="Observer" UMLType="Class"/>
		<EAStub xmi.id="EAID_87256083_B513_4da9_9039_EA3D6A16377C" name="ConcreteSubject" UMLType="Class"/>
		<EAStub xmi.id="EAID_3B9EC506_0982_4139_9C7B_125F25E98ADE" name="ConcreteObserver" UMLType="Class"/>
		<UMLPattern name="Observer" category="GoF Behavioral Patterns" version="2.0" notes="This pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.">
			<UMLPattern.PromptList>
				<Element name="ConcreteObserver:Class" guid="EAID_3B9EC506_0982_4139_9C7B_125F25E98ADE" id="122" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class maintains a reference to a ConcreteSubject object, stores state that should stay consistent with the subject's and implements the Observer updating interface to keep its state consistent with the subject's.">
						<![CDATA[This class maintains a reference to a ConcreteSubject object, stores state that should stay consistent with the subject's and implements the Observer updating interface to keep its state consistent with the subject's.]]>
					</Comment>
				</Element>
				<Element name="ConcreteSubject:Class" guid="EAID_87256083_B513_4da9_9039_EA3D6A16377C" id="121" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class stores the state of interest to ConcreteObserver objects and sends notification to its observers when its state changes.">
						<![CDATA[This class stores the state of interest to ConcreteObserver objects and sends notification to its observers when its state changes.]]>
					</Comment>
				</Element>
				<Element name="Observer:Class" guid="EAID_38478E88_A11D_4ae6_B966_939B31EA82A5" id="120" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an updating interface for objects that should be notified of changes in a subject.">
						<![CDATA[This class defines an updating interface for objects that should be notified of changes in a subject.]]>
					</Comment>
				</Element>
				<Element name="Subject:Class" guid="EAID_C5CB97A9_75AF_4b40_8B83_18B6BDDE1AFB" id="119" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class knows its observers and provides an interface for attaching and detaching Observer objects.">
						<![CDATA[This class knows its observers and provides an interface for attaching and detaching Observer objects.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="10575" cy="9119">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 AAAAAOFBAJDiwYgAAAB4////FwAAAEwAAAAAAAAAAAAAAAAAAAD//////////3wAAABmAG8A cgAgAGEAbABsACAAbwAgAGkAbgAgAG8AYgBzAGUAcgB2AGUAcgBzACAArboDAAAABgAAAAMA AAADAAAABgAAAAMAAAADAAAAAwAAAAYAAAADAAAAAwAAAAYAAAADAAAABgAAAAYAAAAEAAAA BgAAAAMAAAAFAAAABgAAAAMAAAAEAAAAAwAAAFQAAABUAAAAiAAAAFQAAACLAAAAYAAAAAEA AAAAAOFBAJDiwekAAAB4////AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAB7AK26 AwAAABsAAAAQAAAABgEAAKf///8WAAAADAAAAAAAAAAWAAAADAAAAAEAAAASAAAADAAAAAEA AAAbAAAAEAAAAAAAAAAAAAAAVAAAAFQAAAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLB iAAAAGv///8BAAAATAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMArbo9AAAAFgAAAAwA AAAAAAAAVAAAAGAAAAAnAAAAYQAAADMAAABtAAAAAQAAAAAA4UEAkOLBiAAAAGv///8DAAAA TAAAAAAAAAAAAAAAAAAAAP//////////VAAAACAAIABvAK26AwAAAAMAAAAGAAAAVAAAAFQA AAAzAAAAYQAAADYAAABtAAAAAQAAAAAA4UEAkOLBlAAAAGv///8BAAAATAAAAAAAAAAAAAAA AAAAAP//////////UAAAAC0ArboDAAAAVAAAAFQAAAA2AAAAYQAAADwAAABtAAAAAQAAAAAA 4UEAkOLBlwAAAGv///8BAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAAD4ArboGAAAA VAAAAHAAAAA8AAAAYQAAAF4AAABtAAAAAQAAAAAA4UEAkOLBnQAAAGv///8GAAAATAAAAAAA AAAAAAAAAAAAAP//////////WAAAAFUAcABkAGEAdABlAAcAAAAGAAAABgAAAAYAAAADAAAA BgAAAFQAAABYAAAAXgAAAGEAAABkAAAAbQAAAAEAAAAAAOFBAJDiwb8AAABr////AgAAAEwA AAAAAAAAAAAAAAAAAAD//////////1AAAAAoACkAAwAAAAMAAAAbAAAAEAAAAAYBAACn//// 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 AAAAACUAAAAMAAAABwAAAFQAAACoAAAALwAAAM8AAACBAAAA2gAAAAEAAAAAAOFBAJDiwZAA AAD9/v//DwAAAEwAAAAAAAAAAAAAAAAAAAD//////////2wAAABDAG8AbgBjAHIAZQB0AGUA UwB1AGIAagBlAGMAdACtugcAAAAGAAAABgAAAAYAAAAEAAAABgAAAAMAAAAGAAAABwAAAAYA AAAGAAAABAAAAAYAAAAGAAAAAwAAACUAAAAMAAAAAQAAABsAAAAQAAAAjAAAAOv+//82AAAA EAAAAOUAAADr/v//GAAAAAwAAACLAAAAVAAAAFgAAAAwAAAA5QAAADYAAADxAAAAAQAAAAAA 4UEAkOLBkQAAAOf+//8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAAC0AIAADAAAA AwAAAFQAAACoAAAAQQAAAOUAAACEAAAA8QAAAAEAAAAAAOFBAJDiwaIAAADn/v//DwAAAEwA AAAAAAAAAAAAAAAAAAD//////////2wAAABzAHUAYgBqAGUAYwB0AFMAdABhAHQAZQA6ACAA IACtugQAAAAGAAAABgAAAAMAAAAGAAAABQAAAAMAAAAHAAAAAwAAAAYAAAADAAAABgAAAAMA AAADAAAAAwAAABgAAAAMAAAAAAAAABsAAAAQAAAAjAAAANH+//82AAAAEAAAAOUAAADR/v// GAAAAAwAAAAAQEAAVAAAAFgAAAAwAAAA/wAAADkAAAALAQAAAQAAAAAA4UEAkOLBkQAAAM3+ //8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAACIAAAA QQAAAP8AAABxAAAACwEAAAEAAAAAAOFBAJDiwaIAAADN/v//CgAAAEwAAAAAAAAAAAAAAAAA AAD//////////2AAAABHAGUAdABTAHQAYQB0AGUAKAApAAgAAAAGAAAAAwAAAAcAAAADAAAA BgAAAAMAAAAGAAAAAwAAAAMAAAAYAAAADAAAAICAgAAeAAAAGAAAAKkAAADA/v//5gAAAJT+ //9LAAAAEAAAAAAAAAAFAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAA AAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFBAJDiwakAAADA/v//AQAAAEwA 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 AAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26TAAAABYAAAAMAAAAAAAAAFQAAACgAAAA CQEAABMBAABMAQAAHwEAAAEAAAAAAOFBAJDiwWoBAAC5/v//DgAAAEwAAAAAAAAAAAAAAAAA AAD//////////2gAAABvAGIAcwBlAHIAdgBlAHIAUwB0AGEAdABlACAABgAAAAYAAAAEAAAA BgAAAAMAAAAFAAAABgAAAAMAAAAHAAAAAwAAAAYAAAADAAAABgAAAAMAAABUAAAAWAAAAEwB AAATAQAAVQEAAB8BAAABAAAAAADhQQCQ4sGtAQAAuf7//wIAAABMAAAAAAAAAAAAAAAAAAAA //////////9QAAAAPQAgAAYAAAADAAAAGwAAABAAAADOAQAAyv7//xYAAAAMAAAAAAAAABYA AAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA //////////8BAAAAAADhQQCQ4sFqAQAArP7//wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAA AABQAAAAAwCtuloAAAAWAAAADAAAAAAAAABUAAAAeAAAAAkBAAAgAQAAKgEAACwBAAABAAAA AADhQQCQ4sFqAQAArP7//wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAAcwB1AGIA agBlAGMAdACtugQAAAAGAAAABgAAAAMAAAAGAAAABQAAAAMAAABUAAAAVAAAACoBAAAgAQAA LQEAACwBAAABAAAAAADhQQCQ4sGLAQAArP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAALQCtugMAAABUAAAAVAAAAC0BAAAgAQAAMwEAACwBAAABAAAAAADhQQCQ4sGOAQAA rP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAPgCtugYAAABUAAAAfAAAADMB AAAgAQAAXQEAACwBAAABAAAAAADhQQCQ4sGUAQAArP7//wgAAABMAAAAAAAAAAAAAAAAAAAA //////////9cAAAARwBlAHQAUwB0AGEAdABlAAgAAAAGAAAAAwAAAAcAAAADAAAABgAAAAMA AAAGAAAAVAAAAFgAAABdAQAAIAEAAGMBAAAsAQAAAQAAAAAA4UEAkOLBvgEAAKz+//8CAAAA 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</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		8		GoF Behavioral Patterns		State				This pattern allows an object to change its behaviour when its internal state changes. The object will appear to change its class.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:10:01">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7">
			<UML:Namespace.ownedElement>
				<UML:Class name="Context" xmi.id="EAID_CFD6217D_EE1D_4123_B5E9_11567AB668E8" visibility="public" namespace="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the interface of interest to clients and maintains an instance of a ConcreteState subclass that defines the current state."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:38:28"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:46:13"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="State"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Request" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="state-&gt;Handle()"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{4C8804C9-1BF4-493f-8504-C099BD42C682}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_3C1B3060_F090_490b_93E4_886BE1BC7ABE" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="state" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_CFD6217D_EE1D_4123_B5E9_11567AB668E8">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="State" xmi.id="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328" visibility="public" namespace="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an interface for encapsulating the behaviour associated with a particular state of the Context."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:38:53"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:55:41"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="State"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Handle" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E892A420-C6E8-4ace-8675-F937D5FCDCDC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_F2287E42_8C61_4c95_9C50_504739B329A9" supertype="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328" xmi.id="EAID_0DFD567F_EC56_4524_97B0_7C340D7FF93A" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_44B52311_1457_4496_A42D_D44F182B3FE5" supertype="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328" xmi.id="EAID_D6B0FD18_911C_42c1_BF86_A83E5E0019BA" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteStateA" xmi.id="EAID_44B52311_1457_4496_A42D_D44F182B3FE5" visibility="public" namespace="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This subclass implements a behaviour associated with a state of the Context."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:40:08"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:45:31"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="State"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Handle" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E892A420-C6E8-4ace-8675-F937D5FCDCDC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteStateB" xmi.id="EAID_F2287E42_8C61_4c95_9C50_504739B329A9" visibility="public" namespace="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This subclass implements a behaviour associated with a state of the Context."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:40:43"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:45:33"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="State"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Handle" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E892A420-C6E8-4ace-8675-F937D5FCDCDC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="State" xmi.id="EAID_5B26F2F7_151C_4782_981E_D54A43301A6F" diagramType="ClassDiagram" owner="EAPK_5B26F2F7_151C_4782_981E_D54A43301A6F" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern allows an object to change its behaviour when its internal state changes. The object will appear to change its class."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:27"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 13:44:48"/>
				<UML:TaggedValue tag="package" value="EAPK_5BDB12DB_BD8F_4666_81BD_0074F1F6ADE7"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=415;Top=227;Right=505;Bottom=297;imgL=322;imgT=158;imgR=412;imgB=228;" subject="EAID_F2287E42_8C61_4c95_9C50_504739B329A9" seqno="1" style="DUID=3689690E;LBL=;"/>
				<UML:DiagramElement geometry="Left=245;Top=227;Right=335;Bottom=297;imgL=152;imgT=158;imgR=242;imgB=228;" subject="EAID_44B52311_1457_4496_A42D_D44F182B3FE5" seqno="2" style="DUID=F46EE00B;LBL=;"/>
				<UML:DiagramElement geometry="Left=333;Top=82;Right=423;Bottom=152;imgL=240;imgT=13;imgR=330;imgB=83;" subject="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328" seqno="3" style="DUID=0985AF74;LBL=;"/>
				<UML:DiagramElement geometry="Left=103;Top=79;Right=209;Bottom=149;imgL=10;imgT=10;imgR=116;imgB=80;" subject="EAID_CFD6217D_EE1D_4123_B5E9_11567AB668E8" seqno="4" style="DUID=F2A30D0C;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=CX=35:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_3C1B3060_F090_490b_93E4_886BE1BC7ABE" style="Mode=2;EOID=0985AF74;SOID=F2A30D0C;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=290:-202$378:-202$;" subject="EAID_D6B0FD18_911C_42c1_BF86_A83E5E0019BA" style="Mode=3;EOID=0985AF74;SOID=F46EE00B;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=460:-202$378:-202$;" subject="EAID_0DFD567F_EC56_4524_97B0_7C340D7FF93A" style="Mode=3;EOID=0985AF74;SOID=3689690E;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_CFD6217D_EE1D_4123_B5E9_11567AB668E8" name="Context" UMLType="Class"/>
		<EAStub xmi.id="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328" name="State" UMLType="Class"/>
		<EAStub xmi.id="EAID_F2287E42_8C61_4c95_9C50_504739B329A9" name="ConcreteStateB" UMLType="Class"/>
		<EAStub xmi.id="EAID_44B52311_1457_4496_A42D_D44F182B3FE5" name="ConcreteStateA" UMLType="Class"/>
		<UMLPattern name="State" category="GoF Behavioral Patterns" version="2.0" notes="This pattern allows an object to change its behaviour when its internal state changes. The object will appear to change its class.">
			<UMLPattern.PromptList>
				<Element name="ConcreteStateB:Class" guid="EAID_F2287E42_8C61_4c95_9C50_504739B329A9" id="118" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This subclass implements a behaviour associated with a state of the Context.">
						<![CDATA[This subclass implements a behaviour associated with a state of the Context.]]>
					</Comment>
				</Element>
				<Element name="ConcreteStateA:Class" guid="EAID_44B52311_1457_4496_A42D_D44F182B3FE5" id="117" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This subclass implements a behaviour associated with a state of the Context.">
						<![CDATA[This subclass implements a behaviour associated with a state of the Context.]]>
					</Comment>
				</Element>
				<Element name="State:Class" guid="EAID_867CF39E_613A_4a15_ABE4_7E95FF1B0328" id="116" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an interface for encapsulating the behaviour associated with a particular state of the Context.">
						<![CDATA[This class defines an interface for encapsulating the behaviour associated with a particular state of the Context.]]>
					</Comment>
				</Element>
				<Element name="Context:Class" guid="EAID_CFD6217D_EE1D_4123_B5E9_11567AB668E8" id="115" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the interface of interest to clients and maintains an instance of a ConcreteState subclass that defines the current state.">
						<![CDATA[This class defines the interface of interest to clients and maintains an instance of a ConcreteState subclass that defines the current state.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="11868" cy="6740">AQAAAGwAAAAKAAAACgAAAJ4BAADmAAAAAAAAAAAAAABcLgAAVBoAACBFTUYAAAEA0BkAAMQA AAAJAAAAAAAAAAAAAAAAAAAAAAUAAAAEAABoAQAAIgEAAAAAAAAAAAAAAAAAAEB+BQDQbAQA EQAAAAwAAAAIAAAACQAAABAAAAABAAAA/////woAAAAQAAAAXQAAALv///9SAAAAcAEAAAEA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAY7pB8yGqSfP// //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAADAwAkDXNuVfAAAUgKs25V8CAAAAAAAUgIAAFICwMAJAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknz/////vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAGO6QfHAFkXxAAAAAEGsLA1zb lXxYawsDrNuVfAAAAAAAAAAAAABSAhBrCwNkdgAIAAAAACUAAAAMAAAAAQAAACcAAAAYAAAA AgAAAAAAAAD88uMAAAAAACUAAAAMAAAAAgAAACYAAAAcAAAAAwAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAMAAAASAAAADAAAAAEAAAAhAAAACAAAABgAAAAMAAAAAAAAACYAAAAcAAAA BAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAQAAAASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAiAAAADAAAAP////8oAAAADAAAAAQAAAAnAAAA GAAAAAQAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAUAAAAAAAAAAQAAAAAA AADAv8AAJQAAAAwAAAAFAAAAOQAAAAwAAAACAAAAKwAAABgAAABqAAAArv///9MAAABp//// JQAAAAwAAAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAFAAAAKwAAABgA AABnAAAAsf///9AAAABs////UgAAAHABAAAFAAAA9v///wAAAAAAAAAAAAAAALwCAAAAAAAB AAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAArN4SAAAAAAAAAAAA //////jcEgDvKSEQHQAAAAAAUgKU3BIAUAAAAODeEgAY7pB88AaRfP/////rBpF8DN8gEAAA UgJgAABAMAAAAAjrEgDY5hIAAAAAAPDdEgAY3xIAXyshEAAAEgD4JyEQCOsSAOMtIRCIuAkD zQAAAAgAAAAI6xIA2OYSAAAAAAAsAAAAAAAAAMdjCQBouAkDxLUgEIBHJhAAABIAhCohEAkA AAB7KiEQCOsSANjmEgAAAAAAiLgJAwAAAAAAAFICdOESAPgnIRAwcSUQ/////3jfEgDvKSEQ ZHYACAAAAAAlAAAADAAAAAUAAABUAAAAeAAAACwAAAATAAAAUQAAAB4AAAABAAAAAADhQQCQ 4sGJAAAAqP///wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAAQwBvAG4AdABlAHgA dACtugcAAAAGAAAABgAAAAMAAAAGAAAABgAAAAMAAAAlAAAADAAAAAEAAAAbAAAAEAAAAGcA AACW////NgAAABAAAADQAAAAlv///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAA AEBAAFQAAABYAAAADwAAAC0AAAAYAAAAOQAAAAEAAAAAAOFBAJDiwWwAAACO////AgAAAEwA AAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAAhAAAACAAAAAtAAAA TAAAADkAAAABAAAAAADhQQCQ4sF9AAAAjv///wkAAABMAAAAAAAAAAAAAAAAAAAA//////// //9gAAAAUgBlAHEAdQBlAHMAdAAoACkArboHAAAABgAAAAYAAAAGAAAABgAAAAQAAAADAAAA AwAAAAMAAAAYAAAADAAAAICAgAAeAAAAGAAAAIQAAACB////0QAAAGv///9LAAAAEAAAAAAA AAAFAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAA AAAAAAAAAAD//////////wEAAAAAAOFBAJDiwYQAAACB////AQAAAEwAAAAUAAAAAAAAAAAA AAAAAAAAAAAAAFAAAAADAK26RwAAABYAAAAMAAAAAAAAAFQAAABsAAAAJwAAADoAAAA9AAAA RgAAAAEAAAAAAOFBAJDiwYQAAACB////BQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1gA AABzAHQAYQB0AGUArboEAAAAAwAAAAYAAAADAAAABgAAAFQAAABUAAAAPQAAADoAAABAAAAA RgAAAAEAAAAAAOFBAJDiwZoAAACB////AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AA AAAtAK26AwAAAFQAAABUAAAAQAAAADoAAABGAAAARgAAAAEAAAAAAOFBAJDiwZ0AAACB//// AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAA+AK26BgAAAFQAAABwAAAARgAAADoA AABoAAAARgAAAAEAAAAAAOFBAJDiwaMAAACB////BgAAAEwAAAAAAAAAAAAAAAAAAAD///// /////1gAAABIAGEAbgBkAGwAZQAHAAAABgAAAAYAAAAGAAAAAwAAAAYAAABUAAAAWAAAAGgA AAA6AAAAbgAAAEYAAAABAAAAAADhQQCQ4sHFAAAAgf///wIAAABMAAAAAAAAAAAAAAAAAAAA //////////9QAAAAKAApAAMAAAADAAAAGwAAABAAAADQAAAAlv///xYAAAAMAAAAAAAAABgA AAAMAAAAAEBAABgAAAAMAAAAAAAAACcAAAAYAAAABAAAAAAAAADAv8AAAAAAACUAAAAMAAAA BAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAYAAAArAAAAGAAAAFAB AACr////qQEAAGb///8lAAAADAAAAAIAAAAoAAAADAAAAAQAAAAlAAAADAAAAAMAAAAoAAAA DAAAAAYAAAArAAAAGAAAAE0BAACu////pgEAAGn///9SAAAAcAEAAAYAAAD2////AAAAAAAA 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 AADAv8AAAAAAACUAAAAMAAAACAAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAMC/wAAlAAAA DAAAAAcAAAArAAAAGAAAAKIBAAAa////+wEAANX+//8lAAAADAAAAAIAAAAoAAAADAAAAAgA AAAlAAAADAAAAAMAAAAoAAAADAAAAAcAAAArAAAAGAAAAJ8BAAAd////+AEAANj+//8lAAAA DAAAAAUAAABUAAAAoAAAAEkBAACnAAAAlQEAALIAAAABAAAAAADhQQCQ4sGmAQAAFP///w4A AABMAAAAAAAAAAAAAAAAAAAA//////////9oAAAAQwBvAG4AYwByAGUAdABlAFMAdABhAHQA ZQBCAAcAAAAGAAAABgAAAAYAAAAEAAAABgAAAAMAAAAGAAAABwAAAAMAAAAGAAAAAwAAAAYA AAAHAAAAJQAAAAwAAAABAAAAGwAAABAAAACfAQAAAv///zYAAAAQAAAA+AEAAAL///8YAAAA DAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAAEcBAADBAAAAUAEAAM0A AAABAAAAAADhQQCQ4sGkAQAA+v7//wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA KwAgAAYAAAADAAAAVAAAAHwAAABYAQAAwQAAAIABAADNAAAAAQAAAAAA4UEAkOLBtQEAAPr+ //8IAAAATAAAAAAAAAAAAAAAAAAAAP//////////XAAAAEgAYQBuAGQAbABlACgAKQAHAAAA BgAAAAYAAAAGAAAAAwAAAAYAAAADAAAAAwAAABgAAAAMAAAAAAAAACYAAAAcAAAABwAAAAAA AAABAAAAAAAAAAAAAAAlAAAADAAAAAcAAAAbAAAAEAAAANEAAACN////NgAAABAAAAAPAQAA jf///zYAAAAQAAAADwEAAI3///82AAAAEAAAAE0BAACN////VgAAACwAAAB0AAAAKgAAAIgA AAAyAAAABAAAANsAkf/RAI3/2gCJ/+UAjf8bAAAAEAAAAE0BAACN////GwAAABAAAABNAQAA jf///zYAAAAQAAAAPwEAAIj///8bAAAAEAAAAE0BAACN////NgAAABAAAAA/AQAAk////xIA AAAMAAAAAgAAABkAAAAMAAAA////AFIAAABwAQAACAAAAPb///8AAAAAAAAAAAAAAAAAAAAA AAAAAQAAAABBAFIASQBBAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAACSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQ MHElEP/////43BIA7ykhEB0AAAAAAAAAAQAAAFAAAADAwAkDXNuVfAAAUgKs25V8CAAAAAAA UgIAAFICwMAJAyTdAAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknwAAP//vmqSfK1oknwAAFIC YAAAQG0FkXwI6xIA2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAAACQfHAF kXxAAAAAEGsLA1zblXxYawsDrNuVfAAAAAAAAAAAAABSAhBrCwNkdgAIAAAAANjmEgAAAAAA OtmgAWR2AAgAAAAAJQAAAAwAAAAIAAAAVAAAAHAAAACLAAAAHAAAAKQAAAAoAAAAAQAAAAAA 4UEAkOLB6AAAAJ////8GAAAATAAAAAAAAAAAAAAAAAAAAP//////////WAAAAC0AcwB0AGEA dABlAAMAAAAEAAAAAwAAAAYAAAADAAAABgAAACUAAAAMAAAAAQAAACgAAAAMAAAACAAAABIA AAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABwAAACYAAAAcAAAA BwAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAcAAAAbAAAAEAAAACIBAAAd////NgAAABAA AAAiAQAANv///zYAAAAQAAAAegEAADb///82AAAAEAAAAHoBAABo////GwAAABAAAAB6AQAA aP///1YAAAAoAAAAGAEAAFMAAAAjAQAAYgAAAAMAAACAAVn/dQFZ/3oBaP8SAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAA DAAAAAcAAAAmAAAAHAAAAAcAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAHAAAAGwAAABAA AADMAQAAHf///zYAAAAQAAAAzAEAADb///82AAAAEAAAAHoBAAA2////NgAAABAAAAB6AQAA aP///xsAAAAQAAAAegEAAGj///9WAAAAKAAAABgBAABTAAAAIwEAAGIAAAADAAAAgAFZ/3UB Wf96AWj/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8A JQAAAAwAAAADAAAAKAAAAAwAAAAHAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwA AAAFAAAAJQAAAAwAAAAAAACAKAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAA DgAAABQAAAAAAAAAEAAAABQAAAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		9		GoF Behavioral Patterns		Strategy				This pattern defines a family of algorithms, encapsulates each one and makes them interchangeable. It lets the algorithm vary independently from clients that use it.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:10:20">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_27261893_7637_4fbb_BD5A_A902B285D9B9">
			<UML:Namespace.ownedElement>
				<UML:Class name="Context" xmi.id="EAID_5B4C17AA_C65C_4bd2_900C_84D4A2494355" visibility="public" namespace="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class is configured with a ConcreteStrategy object, maintains a reference to a Strategy object and may define an interface that lets Strategy access its data."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:42:38"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:59:48"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Strategy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="ContextInterface" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{5B2B93F5-7F58-41dc-97AA-39FD7D399F00}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_03929BE7_7E51_4fdc_8202_778744D4D00E" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="+strategy"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" name="strategy" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_5B4C17AA_C65C_4bd2_900C_84D4A2494355">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Strategy" xmi.id="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" visibility="public" namespace="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:43:04"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:58:21"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Strategy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="AlgorithmInterface" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{813C0967-8893-4de7-B35D-A578609A33BC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_CA741C68_934C_4c16_9002_693A3C6E6A0C" supertype="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" xmi.id="EAID_5E69A5E3_F71F_4e73_8359_1D520DFB6E1B" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_A851AE1D_5302_4b08_9838_D77169E31A04" supertype="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" xmi.id="EAID_6F1DC21F_4A86_4b9b_9FFE_58C0D0FC1F8E" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_516B9909_4710_4c7a_A2E8_B2FE47C669AE" supertype="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" xmi.id="EAID_E8B63AFF_C670_456d_A857_28C9A04199D7" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteStrategyA" xmi.id="EAID_516B9909_4710_4c7a_A2E8_B2FE47C669AE" visibility="public" namespace="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the algorithm using the Strategy interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:44:02"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:58:44"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Strategy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="AlgorithmInterface" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{813C0967-8893-4de7-B35D-A578609A33BC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteStrategyB" xmi.id="EAID_A851AE1D_5302_4b08_9838_D77169E31A04" visibility="public" namespace="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the algorithm using the Strategy interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:44:24"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:58:47"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Strategy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="AlgorithmInterface" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{813C0967-8893-4de7-B35D-A578609A33BC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteStrategyC" xmi.id="EAID_CA741C68_934C_4c16_9002_693A3C6E6A0C" visibility="public" namespace="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the algorithm using the Strategy interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:44:41"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 13:58:48"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Strategy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="AlgorithmInterface" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{813C0967-8893-4de7-B35D-A578609A33BC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Strategy" xmi.id="EAID_AE1902FC_CE66_41c7_BB73_383C0416F6F2" diagramType="ClassDiagram" owner="EAPK_AE1902FC_CE66_41c7_BB73_383C0416F6F2" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern defines a family of algorithms, encapsulates each one and makes them interchangeable. It lets the algorithm vary independently from clients that use it."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:30"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 13:59:56"/>
				<UML:TaggedValue tag="package" value="EAPK_27261893_7637_4fbb_BD5A_A902B285D9B9"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=413;Top=226;Right=533;Bottom=296;imgL=374;imgT=158;imgR=494;imgB=228;" subject="EAID_CA741C68_934C_4c16_9002_693A3C6E6A0C" seqno="1" style="DUID=21C48C8A;LBL=;"/>
				<UML:DiagramElement geometry="Left=249;Top=226;Right=369;Bottom=296;imgL=210;imgT=158;imgR=330;imgB=228;" subject="EAID_A851AE1D_5302_4b08_9838_D77169E31A04" seqno="2" style="DUID=FC5FD0C4;LBL=;"/>
				<UML:DiagramElement geometry="Left=85;Top=226;Right=205;Bottom=296;imgL=46;imgT=158;imgR=166;imgB=228;" subject="EAID_516B9909_4710_4c7a_A2E8_B2FE47C669AE" seqno="3" style="DUID=54B78F54;LBL=;"/>
				<UML:DiagramElement geometry="Left=293;Top=78;Right=410;Bottom=148;imgL=254;imgT=10;imgR=371;imgB=80;" subject="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" seqno="4" style="DUID=89141A17;LBL=;"/>
				<UML:DiagramElement geometry="Left=49;Top=83;Right=159;Bottom=153;imgL=10;imgT=15;imgR=120;imgB=85;" subject="EAID_5B4C17AA_C65C_4bd2_900C_84D4A2494355" seqno="5" style="DUID=A69A61B2;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=CX=52:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_03929BE7_7E51_4fdc_8202_778744D4D00E" style="Mode=2;EOID=89141A17;SOID=A69A61B2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=145:-198$351:-198$;" subject="EAID_E8B63AFF_C670_456d_A857_28C9A04199D7" style="Mode=3;EOID=89141A17;SOID=54B78F54;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=473:-198$351:-198$;" subject="EAID_5E69A5E3_F71F_4e73_8359_1D520DFB6E1B" style="Mode=3;EOID=89141A17;SOID=21C48C8A;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=309:-198$351:-198$;" subject="EAID_6F1DC21F_4A86_4b9b_9FFE_58C0D0FC1F8E" style="Mode=3;EOID=89141A17;SOID=FC5FD0C4;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_5B4C17AA_C65C_4bd2_900C_84D4A2494355" name="Context" UMLType="Class"/>
		<EAStub xmi.id="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" name="Strategy" UMLType="Class"/>
		<EAStub xmi.id="EAID_CA741C68_934C_4c16_9002_693A3C6E6A0C" name="ConcreteStrategyC" UMLType="Class"/>
		<EAStub xmi.id="EAID_A851AE1D_5302_4b08_9838_D77169E31A04" name="ConcreteStrategyB" UMLType="Class"/>
		<EAStub xmi.id="EAID_516B9909_4710_4c7a_A2E8_B2FE47C669AE" name="ConcreteStrategyA" UMLType="Class"/>
		<UMLPattern name="Strategy" category="GoF Behavioral Patterns" version="2.0" notes="This pattern defines a family of algorithms, encapsulates each one and makes them interchangeable. It lets the algorithm vary independently from clients that use it.">
			<UMLPattern.PromptList>
				<Element name="ConcreteStrategyC:Class" guid="EAID_CA741C68_934C_4c16_9002_693A3C6E6A0C" id="114" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the algorithm using the Strategy interface.">
						<![CDATA[This class implements the algorithm using the Strategy interface.]]>
					</Comment>
				</Element>
				<Element name="ConcreteStrategyB:Class" guid="EAID_A851AE1D_5302_4b08_9838_D77169E31A04" id="113" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the algorithm using the Strategy interface.">
						<![CDATA[This class implements the algorithm using the Strategy interface.]]>
					</Comment>
				</Element>
				<Element name="ConcreteStrategyA:Class" guid="EAID_516B9909_4710_4c7a_A2E8_B2FE47C669AE" id="112" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the algorithm using the Strategy interface.">
						<![CDATA[This class implements the algorithm using the Strategy interface.]]>
					</Comment>
				</Element>
				<Element name="Strategy:Class" guid="EAID_E7ACB538_6E12_496e_AC2C_1A4AFE07E865" id="111" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy.">
						<![CDATA[This class declares an interface common to all supported algorithms. Context uses this interface to call the algorithm defined by a ConcreteStrategy.]]>
					</Comment>
				</Element>
				<Element name="Context:Class" guid="EAID_5B4C17AA_C65C_4bd2_900C_84D4A2494355" id="110" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class is configured with a ConcreteStrategy object, maintains a reference to a Strategy object and may define an interface that lets Strategy access its data.">
						<![CDATA[This class is configured with a ConcreteStrategy object, maintains a reference to a Strategy object and may define an interface that lets Strategy access its data.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="14175" cy="6740">AQAAAGwAAAAKAAAACgAAAPABAADmAAAAAAAAAAAAAABfNwAAVBoAACBFTUYAAAEAZBwAANsA AAAJAAAAAAAAAAAAAAAAAAAAAAUAAAAEAABoAQAAIgEAAAAAAAAAAAAAAAAAAEB+BQDQbAQA EQAAAAwAAAAIAAAACQAAABAAAAABAAAA/////woAAAAQAAAAJwAAALz///9SAAAAcAEAAAEA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAY7pB8yGqSfP// //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAADoaQwDXNuVfAAAUgKs25V8CAAAAAAAUgIAAFIC6GkMAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknz/////vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAGO6QfHAFkXxAAAAA4HoJA1zb lXwoewkDrNuVfAAAAAAAAAAAAABSAuB6CQNkdgAIAAAAACUAAAAMAAAAAQAAACcAAAAYAAAA AgAAAAAAAAD88uMAAAAAACUAAAAMAAAAAgAAACYAAAAcAAAAAwAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAMAAAASAAAADAAAAAEAAAAhAAAACAAAABgAAAAMAAAAAAAAACYAAAAcAAAA BAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAQAAAASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wAlAAAADAAAAAMAAAAiAAAADAAAAP////8oAAAADAAAAAQAAAAnAAAAGAAAAAQA AAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAUAAAAAAAAAAQAAAAAAAADAv8AA JQAAAAwAAAAFAAAAOQAAAAwAAAACAAAAKwAAABgAAAA0AAAAqv///6EAAABl////JQAAAAwA AAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAFAAAAKwAAABgAAAAxAAAA rf///54AAABo////UgAAAHABAAAFAAAA9v///wAAAAAAAAAAAAAAALwCAAAAAAABAAAAAEEA UgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAArN4SAAAAAAAAAAAA//////jc EgDvKSEQHQAAAAAAUgKU3BIAUAAAAODeEgAY7pB88AaRfP/////rBpF8DN8gEAAAUgJgAABA MAAAAAjrEgDY5hIAAAAAAPDdEgAY3xIAXyshEAAAEgD4JyEQCOsSAOMtIRAIewkDzQAAAAgA AAAI6xIA2OYSAAAAAAAsAAAAAAAAAEG5CQDoegkDxLUgEIBHJhAAABIAhCohEAkAAAB7KiEQ COsSANjmEgAAAAAACHsJAwAAAAAAAFICdOESAPgnIRAwcSUQ/////3jfEgDvKSEQZHYACAAA AAAlAAAADAAAAAUAAABUAAAAeAAAAC4AAAAYAAAAUwAAACMAAAABAAAAAADhQQCQ4sFVAAAA pP///wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAAQwBvAG4AdABlAHgAdACtugcA AAAGAAAABgAAAAMAAAAGAAAABgAAAAMAAAAlAAAADAAAAAEAAAAbAAAAEAAAADEAAACS//// NgAAABAAAACeAAAAkv///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQA AABYAAAADwAAADIAAAAYAAAAPgAAAAEAAAAAAOFBAJDiwTYAAACK////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAAuAAAACAAAAAyAAAAcwAAAD4A AAABAAAAAADhQQCQ4sFHAAAAiv///xIAAABMAAAAAAAAAAAAAAAAAAAA//////////9wAAAA QwBvAG4AdABlAHgAdABJAG4AdABlAHIAZgBhAGMAZQAoACkABwAAAAYAAAAGAAAAAwAAAAYA AAAFAAAAAwAAAAMAAAAGAAAAAwAAAAYAAAADAAAAAwAAAAYAAAAFAAAABgAAAAMAAAADAAAA GAAAAAwAAAAAAAAAJwAAABgAAAAEAAAAAAAAAMC/wAAAAAAAJQAAAAwAAAAEAAAAJgAAABwA AAAGAAAAAAAAAAEAAAAAAAAAwL/AACUAAAAMAAAABgAAACsAAAAYAAAAKAEAAK////+cAQAA av///yUAAAAMAAAAAgAAACgAAAAMAAAABAAAACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACsA AAAYAAAAJQEAALL///+ZAQAAbf///1IAAABwAQAABgAAAPb///8AAAAAAAAAAAAAAAC8AgAA AQAAAQAAAABBAFIASQBBAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAACSfAAAUgJgAABAbQWRfAjrEgDY5hIAMAAAAHAqCQMAAAAA AAAAAKzblXwIAAAAAABSAgAAAAIAAFIClNwSABHNlnzg3hIAGO6QfPAGkXz/////6waRfAzf IBAAAFICYAAAQDAAAAAI6xIA2OYSAAAAAADA3hIAGN8SAF8rIRAAABIA+CchEAjrEgDjLSEQ mCoJA80AAAAIAAAACOsSANjmEgAAAAAALAAAAAAAAABDuQkAeCoJA8S1IBCARyYQAAASAIQq IRAJAAAAeyohEAjrEgDY5hIAAAAAAJgqCQP4JyEQeG8lEHThEgD4JyEQMHElEP////943xIA 7ykhEGR2AAgAAAAAJQAAAAwAAAAGAAAAVAAAAHwAAAAkAQAAEwAAAE0BAAAdAAAAAQAAAAAA 4UEAkOLBSwEAAKn///8IAAAATAAAAAAAAAAAAAAAAAAAAP//////////XAAAAFMAdAByAGEA dABlAGcAeQAHAAAAAwAAAAQAAAAGAAAAAwAAAAYAAAAGAAAABgAAACUAAAAMAAAAAQAAABsA AAAQAAAAJQEAAJf///82AAAAEAAAAJkBAACX////GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAA GAAAAAwAAAAAQEAAVAAAAFgAAAADAQAALQAAAAwBAAA5AAAAAQAAAAAA4UEAkOLBKgEAAI// //8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFIAAABwAQAA BAAAAPb///8AAAAAAAAAAAAAAAAAAAAAAQAAAQAAAABBAFIASQBBAEwAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSfAAAUgJgAABA bQWRfAjrEgDY5hIAMAAAALhjCwMAAAAAAAAAAKzblXwIAAAAAABSAgAAAAIAAFIClNwSABHN lnzg3hIAGO6QfPAGkXz/////6waRfAzfIBAAAFICYAAAQDAAAAAI6xIA2OYSAAAAAADA3hIA GN8SAF8rIRAAABIA+CchEAjrEgDjLSEQ4GMLA80AAAAIAAAACOsSANjmEgAAAAAALAAAAAAA AABCuQkAwGMLA8S1IBCARyYQAAASAIQqIRAJAAAAeyohEAjrEgDY5hIAAAAAAOBjCwP4JyEQ eG8lEHThEgD4JyEQMHElEP////943xIA7ykhEGR2AAgAAAAAJQAAAAwAAAAEAAAAVAAAAMQA AAAUAQAALQAAAG4BAAA5AAAAAQAAAAAA4UEAkOLBOwEAAI////8UAAAATAAAAAAAAAAAAAAA AAAAAP//////////dAAAAEEAbABnAG8AcgBpAHQAaABtAEkAbgB0AGUAcgBmAGEAYwBlACgA KQAHAAAAAwAAAAYAAAAGAAAAAwAAAAMAAAADAAAABgAAAAcAAAACAAAABgAAAAMAAAAGAAAA AwAAAAMAAAAGAAAABQAAAAYAAAADAAAAAwAAACUAAAAMAAAAAQAAACUAAAAMAAAAAQAAABgA AAAMAAAAAAAAACcAAAAYAAAABwAAAAAAAADAv8AAAAAAACUAAAAMAAAABwAAACYAAAAcAAAA CAAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAgAAAArAAAAGAAAAFgAAAAb////zwAAANb+ //8lAAAADAAAAAIAAAAoAAAADAAAAAcAAAAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAArAAAA GAAAAFUAAAAe////zAAAANn+//8lAAAADAAAAAUAAABUAAAAtAAAADwAAACnAAAAlwAAALIA AAABAAAAAADhQQCQ4sFjAAAAFf///xEAAABMAAAAAAAAAAAAAAAAAAAA//////////9wAAAA QwBvAG4AYwByAGUAdABlAFMAdAByAGEAdABlAGcAeQBBAK26BwAAAAYAAAAGAAAABgAAAAQA AAAGAAAAAwAAAAYAAAAHAAAAAwAAAAQAAAAGAAAAAwAAAAYAAAAGAAAABQAAAAcAAAAlAAAA DAAAAAEAAAAbAAAAEAAAAFUAAAAD////NgAAABAAAADMAAAAA////xgAAAAMAAAAiwAAABgA AAAMAAAAAAAAABgAAAAMAAAAAEBAAFQAAABYAAAAMwAAAMEAAAA8AAAAzQAAAAEAAAAAAOFB AJDiwVoAAAD7/v//AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMA AABUAAAAxAAAAEQAAADBAAAAoQAAAM0AAAABAAAAAADhQQCQ4sFrAAAA+/7//xQAAABMAAAA AAAAAAAAAAAAAAAA//////////90AAAAQQBsAGcAbwByAGkAdABoAG0ASQBuAHQAZQByAGYA YQBjAGUAKAApAAcAAAADAAAABgAAAAYAAAADAAAAAwAAAAMAAAAGAAAACQAAAAMAAAAGAAAA AwAAAAYAAAADAAAAAwAAAAYAAAAFAAAABgAAAAMAAAADAAAAGAAAAAwAAAAAAAAAJwAAABgA AAAIAAAAAAAAAMC/wAAAAAAAJQAAAAwAAAAIAAAAJgAAABwAAAAHAAAAAAAAAAEAAAAAAAAA wL/AACUAAAAMAAAABwAAACsAAAAYAAAA/AAAABv///9zAQAA1v7//yUAAAAMAAAAAgAAACgA AAAMAAAACAAAACUAAAAMAAAAAwAAACgAAAAMAAAABwAAACsAAAAYAAAA+QAAAB7///9wAQAA 2f7//yUAAAAMAAAABQAAAFQAAAC0AAAA4AAAAKcAAAA7AQAAsgAAAAEAAAAAAOFBAJDiwQcB AAAV////EQAAAEwAAAAAAAAAAAAAAAAAAAD//////////3AAAABDAG8AbgBjAHIAZQB0AGUA UwB0AHIAYQB0AGUAZwB5AEIArboHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAcA AAADAAAABAAAAAYAAAADAAAABgAAAAYAAAAFAAAABwAAACUAAAAMAAAAAQAAABsAAAAQAAAA +QAAAAP///82AAAAEAAAAHABAAAD////GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAAGAAAAAwA AAAAQEAAVAAAAFgAAADXAAAAwQAAAOAAAADNAAAAAQAAAAAA4UEAkOLB/gAAAPv+//8CAAAA TAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAADEAAAA6AAAAMEA AABFAQAAzQAAAAEAAAAAAOFBAJDiwQ8BAAD7/v//FAAAAEwAAAAAAAAAAAAAAAAAAAD///// /////3QAAABBAGwAZwBvAHIAaQB0AGgAbQBJAG4AdABlAHIAZgBhAGMAZQAoACkABwAAAAMA AAAGAAAABgAAAAMAAAADAAAAAwAAAAYAAAAJAAAAAwAAAAYAAAADAAAABgAAAAMAAAADAAAA BgAAAAUAAAAGAAAAAwAAAAMAAAAYAAAADAAAAAAAAAAnAAAAGAAAAAcAAAAAAAAAwL/AAAAA AAAlAAAADAAAAAcAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAIAAAA KwAAABgAAACgAQAAG////xcCAADW/v//JQAAAAwAAAACAAAAKAAAAAwAAAAHAAAAJQAAAAwA AAADAAAAKAAAAAwAAAAIAAAAKwAAABgAAACdAQAAHv///xQCAADZ/v//JQAAAAwAAAAFAAAA VAAAALQAAACEAQAApwAAAN8BAACyAAAAAQAAAAAA4UEAkOLBqwEAABX///8RAAAATAAAAAAA AAAAAAAAAAAAAP//////////cAAAAEMAbwBuAGMAcgBlAHQAZQBTAHQAcgBhAHQAZQBnAHkA QwCtugcAAAAGAAAABgAAAAYAAAAEAAAABgAAAAMAAAAGAAAABwAAAAMAAAAEAAAABgAAAAMA AAAGAAAABgAAAAUAAAAHAAAAJQAAAAwAAAABAAAAGwAAABAAAACdAQAAA////zYAAAAQAAAA FAIAAAP///8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAAHsB AADBAAAAhAEAAM0AAAABAAAAAADhQQCQ4sGiAQAA+/7//wIAAABMAAAAAAAAAAAAAAAAAAAA //////////9QAAAAKwAgAAYAAAADAAAAVAAAAMQAAACMAQAAwQAAAOkBAADNAAAAAQAAAAAA 4UEAkOLBswEAAPv+//8UAAAATAAAAAAAAAAAAAAAAAAAAP//////////dAAAAEEAbABnAG8A cgBpAHQAaABtAEkAbgB0AGUAcgBmAGEAYwBlACgAKQAHAAAAAwAAAAYAAAAGAAAAAwAAAAMA AAADAAAABgAAAAkAAAADAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAGAAAABQAAAAYAAAADAAAA AwAAABgAAAAMAAAAAAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAgA AAAbAAAAEAAAAJ8AAACN////NgAAABAAAADiAAAAjf///zYAAAAQAAAA4gAAAI3///82AAAA EAAAACUBAACN////VgAAACwAAAB4AAAAKwAAAIwAAAAzAAAABAAAAKkAkf+fAI3/qACJ/7MA jf8bAAAAEAAAACUBAACN////GwAAABAAAAAlAQAAjf///zYAAAAQAAAAFwEAAIj///8bAAAA EAAAACUBAACN////NgAAABAAAAAXAQAAk////xIAAAAMAAAAAgAAABkAAAAMAAAA////AFIA AABwAQAABwAAAPb///8AAAAAAAAAAAAAAAAAAAAAAAAAAQAAAABBAFIASQBBAEwAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSfAAA UgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA7ykhEB0AAAAAAAAA AQAAAFAAAADoaQwDXNuVfAAAUgKs25V8CAAAAAAAUgIAAFIC6GkMAyTdAAARzZZ8AAASAAAA AADw3RIAGO6QfMhqknwAAP//vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA2OYSAAAAAABE3RIA kdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAAACQfHAFkXxAAAAA4HoJA1zblXwoewkDrNuVfAAA AAAAAAAAAABSAuB6CQNkdgAIAAAAANjmEgAAAAAAOtmgAWR2AAgAAAAAJQAAAAwAAAAHAAAA VAAAAIQAAACPAAAAHQAAALkAAAApAAAAAQAAAAAA4UEAkOLBtgAAAJ////8JAAAATAAAAAAA AAAAAAAAAAAAAP//////////YAAAACsAcwB0AHIAYQB0AGUAZwB5AK26BgAAAAQAAAADAAAA AwAAAAYAAAADAAAABgAAAAYAAAAFAAAAJQAAAAwAAAABAAAAKAAAAAwAAAAHAAAAEgAAAAwA AAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAIAAAAJgAAABwAAAAIAAAA AAAAAAEAAAAAAAAAAAAAACUAAAAMAAAACAAAABsAAAAQAAAAkQAAAB7///82AAAAEAAAAJEA AAA6////NgAAABAAAABfAQAAOv///zYAAAAQAAAAXwEAAGz///8bAAAAEAAAAF8BAABs//// VgAAACgAAAAzAQAAUAAAAD4BAABfAAAAAwAAAGUBXf9aAV3/XwFs/xIAAAAMAAAAAgAAABkA AAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAA CAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAgAAAAbAAAAEAAAANkB AAAe////NgAAABAAAADZAQAAOv///zYAAAAQAAAAXwEAADr///82AAAAEAAAAF8BAABs//// GwAAABAAAABfAQAAbP///1YAAAAoAAAAMwEAAFAAAAA+AQAAXwAAAAMAAABlAV3/WgFd/18B bP8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAgAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAIAAAAGwAAABAAAAA1AQAAHv///zYAAAAQAAAANQEAADr///82AAAAEAAAAF8BAAA6//// NgAAABAAAABfAQAAbP///xsAAAAQAAAAXwEAAGz///9WAAAAKAAAADMBAABQAAAAPgEAAF8A AAADAAAAZQFd/1oBXf9fAWz/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAA GQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAIAAAAJQAAAAwAAAANAACAKAAAAAwA AAABAAAAKAAAAAwAAAAFAAAAJQAAAAwAAAAAAACAKAAAAAwAAAACAAAAJQAAAAwAAAAHAACA KAAAAAwAAAADAAAADgAAABQAAAAAAAAAEAAAABQAAAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		10		GoF Behavioral Patterns		Template Method				This pattern defines the skeleton of an algorithm in an operation, deferring some steps to subclasses. It lets subclasses redefine certain steps of an algorithm without changing the algorithm's structure.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:11:42">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_B78DD254_83D5_40a1_B894_7C40563A8896">
			<UML:Namespace.ownedElement>
				<UML:Class name="AbstractClass" xmi.id="EAID_90ED299E_F85E_40ef_8489_9097D84F1628" visibility="public" namespace="EAPK_B78DD254_83D5_40a1_B894_7C40563A8896" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm, and (b) implements a template method defining the skeleton of an algorithm."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_B78DD254_83D5_40a1_B894_7C40563A8896"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:46:39"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:03:44"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Template Method"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="TemplateMethod" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="...
PrimitiveOperation1()
...
PrimitiveOperation2()
..."/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{20BC015D-FDBF-4ad9-BE7B-011034DB1906}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="PrimitiveOperation1" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{74D40027-7ACF-482a-9CF0-11A7A63C6FBC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="PrimitiveOperation2" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1AD999B8-1401-436c-A6FB-7CF793F904EF}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_F106C581_D0BA_4c6d_8350_0A22D6059C7E" supertype="EAID_90ED299E_F85E_40ef_8489_9097D84F1628" xmi.id="EAID_F6E04984_1330_4712_B489_5CAC18AE78D9" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteClass" xmi.id="EAID_F106C581_D0BA_4c6d_8350_0A22D6059C7E" visibility="public" namespace="EAPK_B78DD254_83D5_40a1_B894_7C40563A8896" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the primitive operations to carry out subclass-specific steps of the algorithm."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_B78DD254_83D5_40a1_B894_7C40563A8896"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:50:04"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:04:14"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Template Method"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="PrimitiveOperation1" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{74D40027-7ACF-482a-9CF0-11A7A63C6FBC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="PrimitiveOperation2" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1AD999B8-1401-436c-A6FB-7CF793F904EF}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Template Method" xmi.id="EAID_B944C0A9_CADB_49ae_960A_EADE65FAF60A" diagramType="ClassDiagram" owner="EAPK_B944C0A9_CADB_49ae_960A_EADE65FAF60A" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern defines the skeleton of an algorithm in an operation, deferring some steps to subclasses. It lets subclasses redefine certain steps of an algorithm without changing the algorithm's structure."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:33"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 14:04:13"/>
				<UML:TaggedValue tag="package" value="EAPK_B78DD254_83D5_40a1_B894_7C40563A8896"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=114;Top=270;Right=242;Bottom=340;imgL=23;imgT=206;imgR=151;imgB=276;" subject="EAID_F106C581_D0BA_4c6d_8350_0A22D6059C7E" seqno="1" style="DUID=887E5B59;LBL=;"/>
				<UML:DiagramElement geometry="Left=101;Top=74;Right=255;Bottom=217;imgL=10;imgT=10;imgR=164;imgB=153;" subject="EAID_90ED299E_F85E_40ef_8489_9097D84F1628" seqno="2" style="DUID=4FCD32EC;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_F6E04984_1330_4712_B489_5CAC18AE78D9" style="Mode=2;EOID=4FCD32EC;SOID=887E5B59;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_F106C581_D0BA_4c6d_8350_0A22D6059C7E" name="ConcreteClass" UMLType="Class"/>
		<EAStub xmi.id="EAID_90ED299E_F85E_40ef_8489_9097D84F1628" name="AbstractClass" UMLType="Class"/>
		<UMLPattern name="Template Method" category="GoF Behavioral Patterns" version="2.0" notes="This pattern defines the skeleton of an algorithm in an operation, deferring some steps to subclasses. It lets subclasses redefine certain steps of an algorithm without changing the algorithm's structure.">
			<UMLPattern.PromptList>
				<Element name="ConcreteClass:Class" guid="EAID_F106C581_D0BA_4c6d_8350_0A22D6059C7E" id="109" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the primitive operations to carry out subclass-specific steps of the algorithm.">
						<![CDATA[This class implements the primitive operations to carry out subclass-specific steps of the algorithm.]]>
					</Comment>
				</Element>
				<Element name="AbstractClass:Class" guid="EAID_90ED299E_F85E_40ef_8489_9097D84F1628" id="108" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm, and (b) implements a template method defining the skeleton of an algorithm.">
						<![CDATA[This class (a) defines abstract primitive operations that concrete subclasses define to implement steps of an algorithm, and (b) implements a template method defining the skeleton of an algorithm.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="4893" cy="8099">AQAAAGwAAAAKAAAACgAAAKYAAAAWAQAAAAAAAAAAAAAdEwAAox8AACBFTUYAAAEAQBkAAJYA AAAIAAAAAAAAAAAAAAAAAAAAAAUAAAAEAABoAQAAIgEAAAAAAAAAAAAAAAAAAEB+BQDQbAQA EQAAAAwAAAAIAAAACQAAABAAAAABAAAA/////woAAAAQAAAAWwAAAMD///9SAAAAcAEAAAEA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAY7pB8yGqSfP// //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAADYsQ0DXNuVfAAAUgKs25V8CAAAAAAAUgIAAFIC2LENAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknz/////vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAGO6QfHAFkXxAAAAAgLENA1zb lXzIsQ0DrNuVfAAAAAAAAAAAAABSAoCxDQNkdgAIAAAAACUAAAAMAAAAAQAAACcAAAAYAAAA AgAAAAAAAAD88uMAAAAAACUAAAAMAAAAAgAAACYAAAAcAAAAAwAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAMAAAASAAAADAAAAAEAAAAhAAAACAAAABgAAAAMAAAAAAAAACYAAAAcAAAA BAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAQAAAASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAiAAAADAAAAP////8oAAAA DAAAAAQAAAAnAAAAGAAAAAQAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAUA AAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAFAAAAOQAAAAwAAAACAAAAKwAAABgAAABoAAAA s////wEBAAAl////JQAAAAwAAAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwA AAAFAAAAKwAAABgAAABlAAAAtv////4AAAAo////UgAAAHABAAAFAAAA9v///wAAAAAAAAAA AAAAALwCAAABAAABAAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAwAAAA +EETAwAAAAAAAAAArNuVfAgAAAAAAFICAAAAAgAAUgKU3BIAEc2WfODeEgAY7pB88AaRfP// ///rBpF8DN8gEAAAUgJgAABAMAAAAAjrEgDY5hIAAAAAAMDeEgAY3xIAXyshEAAAEgD4JyEQ COsSAOMtIRAgQhMDzQAAAAgAAAAI6xIA2OYSAAAAAAAsAAAAAAAAAH4bCgAAQhMDxLUgEIBH JhAAABIAhCohEAkAAAB7KiEQCOsSANjmEgAAAAAAIEITA/gnIRB4byUQdOESAPgnIRAwcSUQ /////3jfEgDvKSEQZHYACAAAAAAlAAAADAAAAAUAAABUAAAAnAAAADQAAAATAAAAeQAAAB0A AAABAAAAAADhQQCQ4sGPAAAArf///w0AAABMAAAAAAAAAAAAAAAAAAAA//////////9oAAAA QQBiAHMAdAByAGEAYwB0AEMAbABhAHMAcwCtugcAAAAGAAAABgAAAAMAAAAEAAAABgAAAAYA AAADAAAABwAAAAMAAAAGAAAABgAAAAYAAAAlAAAADAAAAAEAAAAbAAAAEAAAAGUAAACb//// NgAAABAAAAD+AAAAm////xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQA AABYAAAADwAAAC0AAAAYAAAAOQAAAAEAAAAAAOFBAJDiwWoAAACT////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAArAAAACAAAAAtAAAAeAAAADkA AAABAAAAAADhQQCQ4sF7AAAAk////xAAAABMAAAAAAAAAAAAAAAAAAAA//////////9sAAAA VABlAG0AcABsAGEAdABlAE0AZQB0AGgAbwBkACgAKQAHAAAABgAAAAkAAAAGAAAAAwAAAAYA AAADAAAABgAAAAkAAAAGAAAAAwAAAAYAAAAGAAAABgAAAAMAAAADAAAAGAAAAAwAAACAgIAA HgAAABgAAACCAAAAhv////8AAAAn////SwAAABAAAAAAAAAABQAAABYAAAAMAAAAAQAAABIA AAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAA AADhQQCQ4sGCAAAAhv///wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtugkA AAAWAAAADAAAAAAAAABUAAAAYAAAACcAAAA6AAAAMAAAAEYAAAABAAAAAADhQQCQ4sGCAAAA hv///wMAAABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAALgAuAC4ArboDAAAAAwAAAAMA AAAbAAAAEAAAAP4AAACb////FgAAAAwAAAAAAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAA GwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFBAJDiwYIA AAB5////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26ZQAAABYAAAAMAAAA AAAAAFQAAAC4AAAAJwAAAEcAAACAAAAAUwAAAAEAAAAAAOFBAJDiwYIAAAB5////EgAAAEwA AAAAAAAAAAAAAAAAAAD//////////3AAAABQAHIAaQBtAGkAdABpAHYAZQBPAHAAZQByAGEA dABpAG8AbgAHAAAAAwAAAAMAAAAJAAAAAwAAAAMAAAADAAAABQAAAAYAAAAIAAAABgAAAAYA AAADAAAABgAAAAMAAAADAAAABgAAAAYAAABUAAAAVAAAAIAAAABHAAAAhgAAAFMAAAABAAAA AADhQQCQ4sHbAAAAef///wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAMQCtugYA AABUAAAAWAAAAIYAAABHAAAAjAAAAFMAAAABAAAAAADhQQCQ4sHhAAAAef///wIAAABMAAAA AAAAAAAAAAAAAAAA//////////9QAAAAKAApAAMAAAADAAAAGwAAABAAAAD+AAAAm////xYA AAAMAAAAAAAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAA VAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sGCAAAAbP///wEAAABMAAAAFAAAAAAA AAAAAAAAAAAAAAAAAABQAAAAAwCtugkAAAAWAAAADAAAAAAAAABUAAAAYAAAACcAAABUAAAA MAAAAGAAAAABAAAAAADhQQCQ4sGCAAAAbP///wMAAABMAAAAAAAAAAAAAAAAAAAA//////// //9UAAAALgAuAC4ArboDAAAAAwAAAAMAAAAbAAAAEAAAAP4AAACb////FgAAAAwAAAAAAAAA FgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAA AAD//////////wEAAAAAAOFBAJDiwYIAAABf////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAA AAAAAFAAAAADAK26ZQAAABYAAAAMAAAAAAAAAFQAAAC4AAAAJwAAAGEAAACAAAAAbQAAAAEA AAAAAOFBAJDiwYIAAABf////EgAAAEwAAAAAAAAAAAAAAAAAAAD//////////3AAAABQAHIA aQBtAGkAdABpAHYAZQBPAHAAZQByAGEAdABpAG8AbgAHAAAAAwAAAAMAAAAJAAAAAwAAAAMA AAADAAAABQAAAAYAAAAIAAAABgAAAAYAAAADAAAABgAAAAMAAAADAAAABgAAAAYAAABUAAAA VAAAAIAAAABhAAAAhgAAAG0AAAABAAAAAADhQQCQ4sHbAAAAX////wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAMgCtugYAAABUAAAAWAAAAIYAAABhAAAAjAAAAG0AAAABAAAA AADhQQCQ4sHhAAAAX////wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKAApAAMA AAADAAAAGwAAABAAAAD+AAAAm////xYAAAAMAAAAAAAAABYAAAAMAAAAAQAAABIAAAAMAAAA AQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ 4sGCAAAAUv///wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtugkAAAAWAAAA DAAAAAAAAABUAAAAYAAAACcAAABuAAAAMAAAAHoAAAABAAAAAADhQQCQ4sGCAAAAUv///wMA AABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAALgAuAC4ArboDAAAAAwAAAAMAAAAbAAAA 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</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		11		GoF Behavioral Patterns		Visitor				This pattern represents an operation to be performed on the elements of an object structure. It lets you define a new operation without changing the classes of the elements on which it operates.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:12:03">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F">
			<UML:Namespace.ownedElement>
				<UML:Class name="ObjectStructure" xmi.id="EAID_CCA3AA92_E5CA_4cff_BA51_13BB5C69D75B" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class can enumerate its elements, may provide a high-level interface to allow the visitor to visit its elements and may either be a composite or a collection such as a list or a set."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:51:29"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:24:08"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_C16FBF35_F014_4feb_AC11_4A2B9B604408" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_CCA3AA92_E5CA_4cff_BA51_13BB5C69D75B">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" multiplicity="1..*" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Element" xmi.id="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an Accept operation that takes a visitor as an argument."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:51:44"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:22:35"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Accept" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{C7236D95-35CE-49fb-91CF-670C085C52B0}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-35CE-49fb-91CF-670C085C52B0}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="v" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Visitor"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0"/>
										<UML:TaggedValue tag="ea_guid" value="{0CC98431-86B8-4427-AF70-46C9605414AF}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40" supertype="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F" xmi.id="EAID_26E3A4AC_D4F6_4f4f_83AE_69C889551CC6" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F" supertype="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F" xmi.id="EAID_7EB66512_2FD1_4f70_BF0C_EDC9FDFFF823" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteElementA" xmi.id="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements an Accept operation that takes a Visitor as an argument."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:53:48"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:23:04"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Accept" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="v-&gt;VisitConcreteElementA(this)"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{C7236D95-35CE-49fb-91CF-670C085C52B0}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-35CE-49fb-91CF-670C085C52B0}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="v" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Visitor"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0"/>
										<UML:TaggedValue tag="ea_guid" value="{0CC98431-86B8-4427-AF70-46C9605414AF}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteElementB" xmi.id="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements an Accept operation that takes a Visitor as an argument."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2003-09-07 11:54:08"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:23:07"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Accept" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="v-&gt;VisitConcreteElementB(this)"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{C7236D95-35CE-49fb-91CF-670C085C52B0}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-35CE-49fb-91CF-670C085C52B0}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="v" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Visitor"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0"/>
										<UML:TaggedValue tag="ea_guid" value="{0CC98431-86B8-4427-AF70-46C9605414AF}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="Visitor" xmi.id="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares a Visit operation for each class of ConcreteElement in the object structure. The operation's name and signature identifies the class that sends the Visit request to the visitor. That lets the visitor determine the concrete class of the element being visited. Then the visitor can access the element directly through its particular interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2004-12-17 14:08:00"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:19:34"/>
						<UML:TaggedValue tag="gentype" value="Java"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="VisitConcreteElementA" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{606B56CA-E76B-46e1-9693-69A731A638DE}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-E76B-46e1-9693-69A731A638DE}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="a" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="ConcreteElementA"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40"/>
										<UML:TaggedValue tag="ea_guid" value="{70939CCE-46E5-47be-BC08-6B6C00B2FACE}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="VisitConcreteElementB" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{FBCC675C-5E96-4e5d-BE95-F6A10110D81F}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-5E96-4e5d-BE95-F6A10110D81F}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="b" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="ConcreteElementB"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F"/>
										<UML:TaggedValue tag="ea_guid" value="{65D8A802-097E-4076-8453-8B2156E59E07}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_2B4D4E30_7F5C_4f88_B74E_DBF88F21D103" supertype="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0" xmi.id="EAID_1EAF68C4_5A31_4c1e_A0A6_C9298F3C2B18" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="-1"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="true"/>
						<UML:TaggedValue tag="$ea_xref_property" value="$XREFPROP=$XID={3E78FA16-F179-4243-9A7C-4BD3E890C072}$XID;$NAM=CustomProperties$NAM;$TYP=connector property$TYP;$VIS=Public$VIS;$DES=@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;$DES;$CLT={1EAF68C4-5A31-4c1e-A0A6-C9298F3C2B18}$CLT;$SUP=&lt;none&gt;$SUP;$ENDXREF;"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_1A2B705C_348C_443a_8235_64C3B8A52600" supertype="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0" xmi.id="EAID_4C730D12_C030_4ec1_AB62_48A0BA787A1E" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="-1"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="true"/>
						<UML:TaggedValue tag="$ea_xref_property" value="$XREFPROP=$XID={4317B207-5346-46ea-8B8E-04CAAD19E4AD}$XID;$NAM=CustomProperties$NAM;$TYP=connector property$TYP;$VIS=Public$VIS;$DES=@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;$DES;$CLT={4C730D12-C030-4ec1-AB62-48A0BA787A1E}$CLT;$SUP=&lt;none&gt;$SUP;$ENDXREF;"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteVisitor1" xmi.id="EAID_1A2B705C_348C_443a_8235_64C3B8A52600" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements each operation declared by Visitor. Each operation implements a fragment of the algorithm defined for the corresponding class of object in the structure. ConcreteVisitor provides the context for the algorithm and stores its local state. This state often accumulates results during the traversal of the structure."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2004-12-17 14:14:21"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:21:15"/>
						<UML:TaggedValue tag="gentype" value="Java"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="VisitConcreteElementA" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{892989BD-00B4-48ef-BC03-C2DAF0D96DC8}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-00B4-48ef-BC03-C2DAF0D96DC8}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="a" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="ConcreteElementA"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40"/>
										<UML:TaggedValue tag="ea_guid" value="{70939CCE-46E5-47be-BC08-6B6C00B2FACE}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="VisitConcreteElementB" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{2DA558A1-2A50-4ac0-815F-0B174563B0E2}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-2A50-4ac0-815F-0B174563B0E2}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="b" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="ConcreteElementB"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F"/>
										<UML:TaggedValue tag="ea_guid" value="{65D8A802-097E-4076-8453-8B2156E59E07}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteVisitor2" xmi.id="EAID_2B4D4E30_7F5C_4f88_B74E_DBF88F21D103" visibility="public" namespace="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements each operation declared by Visitor. Each operation implements a fragment of the algorithm defined for the corresponding class of object in the structure. ConcreteVisitor provides the context for the algorithm and stores its local state. This state often accumulates results during the traversal of the structure."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
						<UML:TaggedValue tag="date_created" value="2004-12-17 14:15:04"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 14:21:26"/>
						<UML:TaggedValue tag="gentype" value="Java"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Visitor"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="VisitConcreteElementA" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E382FDC1-324F-4b10-AE89-7863545C18E8}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-324F-4b10-AE89-7863545C18E8}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="a" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="ConcreteElementA"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40"/>
										<UML:TaggedValue tag="ea_guid" value="{70939CCE-46E5-47be-BC08-6B6C00B2FACE}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="VisitConcreteElementB" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{9C72444F-A7A6-4545-AA8B-6E58C2E5CEF7}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-A7A6-4545-AA8B-6E58C2E5CEF7}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="b" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="ConcreteElementB"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F"/>
										<UML:TaggedValue tag="ea_guid" value="{65D8A802-097E-4076-8453-8B2156E59E07}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Visitor" xmi.id="EAID_3E1A911A_535F_4cb0_AB5B_0771B2C8D278" diagramType="ClassDiagram" owner="EAPK_3E1A911A_535F_4cb0_AB5B_0771B2C8D278" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern represents an operation to be performed on the elements of an object structure. It lets you define a new operation without changing the classes of the elements on which it operates."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:36"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-17 14:24:07"/>
				<UML:TaggedValue tag="package" value="EAPK_3F21E770_E6F2_4006_9E32_D7B7A7BEEA8F"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=349;Top=174;Right=580;Bottom=244;imgL=317;imgT=156;imgR=548;imgB=226;" subject="EAID_2B4D4E30_7F5C_4f88_B74E_DBF88F21D103" seqno="1" style="DUID=EE7FC05D;LBL=;"/>
				<UML:DiagramElement geometry="Left=42;Top=173;Right=273;Bottom=243;imgL=10;imgT=155;imgR=241;imgB=225;" subject="EAID_1A2B705C_348C_443a_8235_64C3B8A52600" seqno="2" style="DUID=89071AF2;LBL=;"/>
				<UML:DiagramElement geometry="Left=186;Top=28;Right=435;Bottom=98;imgL=154;imgT=10;imgR=403;imgB=80;" subject="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0" seqno="3" style="DUID=C482D394;LBL=;"/>
				<UML:DiagramElement geometry="Left=312;Top=444;Right=499;Bottom=514;imgL=280;imgT=426;imgR=467;imgB=496;" subject="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F" seqno="4" style="DUID=0198662C;LBL=;"/>
				<UML:DiagramElement geometry="Left=68;Top=444;Right=257;Bottom=514;imgL=36;imgT=426;imgR=225;imgB=496;" subject="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40" seqno="5" style="DUID=C5350D06;LBL=;"/>
				<UML:DiagramElement geometry="Left=227;Top=305;Right=347;Bottom=375;imgL=195;imgT=287;imgR=315;imgB=357;" subject="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F" seqno="6" style="DUID=F0442A2F;LBL=;"/>
				<UML:DiagramElement geometry="Left=56;Top=313;Right=146;Bottom=341;imgL=24;imgT=295;imgR=114;imgB=323;" subject="EAID_CCA3AA92_E5CA_4cff_BA51_13BB5C69D75B" seqno="7" style="DUID=7FE08963;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=464:-148$310:-148$;" subject="EAID_1EAF68C4_5A31_4c1e_A0A6_C9298F3C2B18" style="Mode=3;EOID=C482D394;SOID=EE7FC05D;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=157:-148$310:-148$;" subject="EAID_4C730D12_C030_4ec1_AB62_48A0BA787A1E" style="Mode=3;EOID=C482D394;SOID=89071AF2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;Path=;" subject="EAID_C16FBF35_F014_4feb_AC11_4A2B9B604408" style="Mode=2;EOID=F0442A2F;SOID=7FE08963;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=405:-425$287:-425$;" subject="EAID_7EB66512_2FD1_4f70_BF0C_EDC9FDFFF823" style="Mode=3;EOID=F0442A2F;SOID=0198662C;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=162:-425$287:-425$;" subject="EAID_26E3A4AC_D4F6_4f4f_83AE_69C889551CC6" style="Mode=3;EOID=F0442A2F;SOID=C5350D06;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_CCA3AA92_E5CA_4cff_BA51_13BB5C69D75B" name="ObjectStructure" UMLType="Class"/>
		<EAStub xmi.id="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F" name="Element" UMLType="Class"/>
		<EAStub xmi.id="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40" name="ConcreteElementA" UMLType="Class"/>
		<EAStub xmi.id="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F" name="ConcreteElementB" UMLType="Class"/>
		<EAStub xmi.id="EAID_2B4D4E30_7F5C_4f88_B74E_DBF88F21D103" name="ConcreteVisitor2" UMLType="Class"/>
		<EAStub xmi.id="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0" name="Visitor" UMLType="Class"/>
		<EAStub xmi.id="EAID_1A2B705C_348C_443a_8235_64C3B8A52600" name="ConcreteVisitor1" UMLType="Class"/>
		<UMLPattern name="Visitor" category="GoF Behavioral Patterns" version="2.0" notes="This pattern represents an operation to be performed on the elements of an object structure. It lets you define a new operation without changing the classes of the elements on which it operates.">
			<UMLPattern.PromptList>
				<Element name="ConcreteVisitor2:Class" guid="EAID_2B4D4E30_7F5C_4f88_B74E_DBF88F21D103" id="204" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements each operation declared by Visitor. Each operation implements a fragment of the algorithm defined for the corresponding class of object in the structure. ConcreteVisitor provides the context for the algorithm and stores its local state. This state often accumulates results during the traversal of the structure.">
						<![CDATA[This class implements each operation declared by Visitor. Each operation implements a fragment of the algorithm defined for the corresponding class of object in the structure. ConcreteVisitor provides the context for the algorithm and stores its local state. This state often accumulates results during the traversal of the structure.]]>
					</Comment>
				</Element>
				<Element name="ConcreteVisitor1:Class" guid="EAID_1A2B705C_348C_443a_8235_64C3B8A52600" id="203" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements each operation declared by Visitor. Each operation implements a fragment of the algorithm defined for the corresponding class of object in the structure. ConcreteVisitor provides the context for the algorithm and stores its local state. This state often accumulates results during the traversal of the structure.">
						<![CDATA[This class implements each operation declared by Visitor. Each operation implements a fragment of the algorithm defined for the corresponding class of object in the structure. ConcreteVisitor provides the context for the algorithm and stores its local state. This state often accumulates results during the traversal of the structure.]]>
					</Comment>
				</Element>
				<Element name="Visitor:Class" guid="EAID_870406BF_3CD6_4909_BC52_27A0BEF737C0" id="202" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares a Visit operation for each class of ConcreteElement in the object structure. The operation's name and signature identifies the class that sends the Visit request to the visitor. That lets the visitor determine the concrete class of the element being visited. Then the visitor can access the element directly through its particular interface.">
						<![CDATA[This class declares a Visit operation for each class of ConcreteElement in the object structure. The operation's name and signature identifies the class that sends the Visit request to the visitor. That lets the visitor determine the concrete class of the element being visited. Then the visitor can access the element directly through its particular interface.]]>
					</Comment>
				</Element>
				<Element name="ConcreteElementB:Class" guid="EAID_59E285EF_2212_4e07_AC13_FC9C5735591F" id="107" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements an Accept operation that takes a Visitor as an argument.">
						<![CDATA[This class implements an Accept operation that takes a Visitor as an argument.]]>
					</Comment>
				</Element>
				<Element name="ConcreteElementA:Class" guid="EAID_A4B497C9_391D_4342_BD80_E6DDD81FBD40" id="106" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements an Accept operation that takes a Visitor as an argument.">
						<![CDATA[This class implements an Accept operation that takes a Visitor as an argument.]]>
					</Comment>
				</Element>
				<Element name="Element:Class" guid="EAID_E0A43F82_87CB_487a_9C6A_514761F6576F" id="105" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an Accept operation that takes a visitor as an argument.">
						<![CDATA[This class defines an Accept operation that takes a visitor as an argument.]]>
					</Comment>
				</Element>
				<Element name="ObjectStructure:Class" guid="EAID_CCA3AA92_E5CA_4cff_BA51_13BB5C69D75B" id="104" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class can enumerate its elements, may provide a high-level interface to allow the visitor to visit its elements and may either be a composite or a collection such as a list or a set.">
						<![CDATA[This class can enumerate its elements, may provide a high-level interface to allow the visitor to visit its elements and may either be a composite or a collection such as a list or a set.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="15693" cy="14330">AQAAAGwAAAAKAAAACgAAACYCAADyAQAAAAAAAAAAAABNPQAA+jcAACBFTUYAAAEACC8AAEIB AAAJAAAAAAAAAAAAAAAAAAAAAAUAAAAEAABoAQAAIgEAAAAAAAAAAAAAAAAAAEB+BQDQbAQA EQAAAAwAAAAIAAAACQAAABAAAAABAAAA/////woAAAAQAAAAIAAAAO7///9SAAAAcAEAAAEA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAY7pB8yGqSfP// //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAAAAIQ4DXNuVfAAAUgKs25V8CAAAAAAAUgIAAFICACEOAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknz/////vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAGO6QfHAFkXxAAAAAsB8PA1zb lXz4Hw8DrNuVfAAAAAAAAAAAAABSArAfDwNkdgAIAAAAACUAAAAMAAAAAQAAACcAAAAYAAAA AgAAAAAAAAD88uMAAAAAACUAAAAMAAAAAgAAACYAAAAcAAAAAwAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAMAAAASAAAADAAAAAEAAAAhAAAACAAAABgAAAAMAAAAAAAAACYAAAAcAAAA BAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAQAAAASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wAlAAAADAAAAAMAAAAiAAAADAAAAP////8oAAAADAAAAAQAAAAnAAAAGAAAAAQAAAAAAAAA wL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAUAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwA AAAFAAAAOQAAAAwAAAACAAAAKwAAABgAAAA7AAAAxP7//5QAAACp/v//JQAAAAwAAAACAAAA KAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAFAAAAKwAAABgAAAA4AAAAx/7//5EA AACs/v//UgAAAHABAAAFAAAA9v///wAAAAAAAAAAAAAAALwCAAAAAAABAAAAAEEAUgBJAEEA TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAArN4SAAAAAAAAAAAA//////jcEgDvKSEQ HQAAAAAAUgKU3BIAUAAAAODeEgAY7pB88AaRfP/////rBpF8DN8gEAAAUgJgAABAMAAAAAjr EgDY5hIAAAAAAPDdEgAY3xIAXyshEAAAEgD4JyEQCOsSAOMtIRAQew8DzQAAAAgAAAAI6xIA 2OYSAAAAAAAsAAAAAAAAAEWFCgDweg8DxLUgEIBHJhAAABIAhCohEAkAAAB7KiEQCOsSANjm EgAAAAAAEHsPAwAAAAAAAFICdOESAPgnIRAwcSUQ/////3jfEgDvKSEQZHYACAAAAAAlAAAA DAAAAAUAAABUAAAAqAAAAB4AAAAwAQAAbAAAADsBAAABAAAAAADhQQCQ4sE+AAAAvv7//w8A AABMAAAAAAAAAAAAAAAAAAAA//////////9sAAAATwBiAGoAZQBjAHQAUwB0AHIAdQBjAHQA dQByAGUArboIAAAABgAAAAQAAAAGAAAABgAAAAMAAAAHAAAAAwAAAAQAAAAGAAAABgAAAAMA AAAGAAAABAAAAAYAAAAlAAAADAAAAAEAAAAYAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAA DAAAAABAQAAYAAAADAAAAAAAAAAnAAAAGAAAAAQAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAQA AAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAGAAAAKwAAABgAAADmAAAA zP7//10BAACH/v//JQAAAAwAAAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwA AAAGAAAAKwAAABgAAADjAAAAz/7//1oBAACK/v//UgAAAHABAAAGAAAA9v///wAAAAAAAAAA AAAAALwCAAABAAABAAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAwAAAA cL8LAwAAAAAAAAAArNuVfAgAAAAAAFICAAAAAgAAUgKU3BIAEc2WfODeEgAY7pB88AaRfP// ///rBpF8DN8gEAAAUgJgAABAMAAAAAjrEgDY5hIAAAAAAMDeEgAY3xIAXyshEAAAEgD4JyEQ COsSAOMtIRDYHw8DzQAAAAgAAAAI6xIA2OYSAAAAAAAsAAAAAAAAAEeFCgC4Hw8DxLUgEIBH JhAAABIAhCohEAkAAAB7KiEQCOsSANjmEgAAAAAA2B8PA/gnIRB4byUQdOESAPgnIRAwcSUQ /////3jfEgDvKSEQZHYACAAAAAAlAAAADAAAAAYAAABUAAAAeAAAAOsAAAAoAQAAEwEAADIB AAABAAAAAADhQQCQ4sELAQAAxv7//wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAA RQBsAGUAbQBlAG4AdACtugcAAAADAAAABgAAAAkAAAAGAAAABgAAAAMAAAAlAAAADAAAAAEA AAAbAAAAEAAAAOMAAAC0/v//NgAAABAAAABaAQAAtP7//xgAAAAMAAAAiwAAABgAAAAMAAAA AAAAABgAAAAMAAAAAEBAAFQAAABYAAAAyAAAAEIBAADRAAAATgEAAAEAAAAAAOFBAJDiwegA AACs/v//AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABSAAAA cAEAAAQAAAD2////AAAAAAAAAAAAAAAAAAAAAAEAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFIC YAAAQG0FkXwI6xIA2OYSADAAAADgvgsDAAAAAAAAAACs25V8CAAAAAAAUgIAAAACAABSApTc EgARzZZ84N4SABjukHzwBpF8/////+sGkXwM3yAQAABSAmAAAEAwAAAACOsSANjmEgAAAAAA wN4SABjfEgBfKyEQAAASAPgnIRAI6xIA4y0hEAi/CwPNAAAACAAAAAjrEgDY5hIAAAAAACwA AAAAAAAARoUKAOi+CwPEtSAQgEcmEAAAEgCEKiEQCQAAAHsqIRAI6xIA2OYSAAAAAAAIvwsD +CchEHhvJRB04RIA+CchEDBxJRD/////eN8SAO8pIRBkdgAIAAAAACUAAAAMAAAABAAAAFQA AACoAAAA2QAAAEIBAAAdAQAATgEAAAEAAAAAAOFBAJDiwfkAAACs/v//DwAAAEwAAAAAAAAA AAAAAAAAAAD//////////2wAAABBAGMAYwBlAHAAdAAoAFYAaQBzAGkAdABvAHIAKQCtugcA AAAFAAAABQAAAAYAAAAGAAAAAwAAAAMAAAAHAAAAAwAAAAUAAAADAAAAAwAAAAYAAAADAAAA AwAAACUAAAAMAAAAAQAAACUAAAAMAAAAAQAAABgAAAAMAAAAAAAAACcAAAAYAAAABwAAAAAA AADAv8AAAAAAACUAAAAMAAAABwAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAMC/wAAlAAAA DAAAAAgAAAArAAAAGAAAAEcAAABB/v//AwEAAPz9//8lAAAADAAAAAIAAAAoAAAADAAAAAcA AAAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAArAAAAGAAAAEQAAABE/v//AAEAAP/9//8lAAAA DAAAAAUAAABUAAAArAAAAFUAAACzAQAAsAAAAL4BAAABAAAAAADhQQCQ4sF1AAAAO/7//xAA AABMAAAAAAAAAAAAAAAAAAAA//////////9sAAAAQwBvAG4AYwByAGUAdABlAEUAbABlAG0A ZQBuAHQAQQAHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAcAAAADAAAABgAAAAkA AAAGAAAABgAAAAMAAAAHAAAAJQAAAAwAAAABAAAAGwAAABAAAABEAAAAKf7//zYAAAAQAAAA AAEAACn+//8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAACkA AADNAQAAMgAAANkBAAABAAAAAADhQQCQ4sFJAAAAIf7//wIAAABMAAAAAAAAAAAAAAAAAAAA //////////9QAAAAKwAgAAYAAAADAAAAVAAAAKgAAAA6AAAAzQEAAH0AAADZAQAAAQAAAAAA 4UEAkOLBWgAAACH+//8PAAAATAAAAAAAAAAAAAAAAAAAAP//////////bAAAAEEAYwBjAGUA cAB0ACgAVgBpAHMAaQB0AG8AcgApAK26BwAAAAUAAAAFAAAABgAAAAYAAAADAAAAAwAAAAcA AAADAAAABAAAAAMAAAADAAAABgAAAAMAAAADAAAAGAAAAAwAAACAgIAAHgAAABgAAABhAAAA FP7//wEBAAD+/f//SwAAABAAAAAAAAAABQAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsA AAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sFhAAAA FP7//wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtupEAAAAWAAAADAAAAAAA AABUAAAAVAAAAEEAAADaAQAARgAAAOYBAAABAAAAAADhQQCQ4sFhAAAAFP7//wEAAABMAAAA AAAAAAAAAAAAAAAA//////////9QAAAAdgCtugUAAABUAAAAVAAAAEYAAADaAQAASQAAAOYB AAABAAAAAADhQQCQ4sFmAAAAFP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA LQCtugMAAABUAAAAVAAAAEkAAADaAQAATwAAAOYBAAABAAAAAADhQQCQ4sFpAAAAFP7//wEA AABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAPgCtugYAAABUAAAAzAAAAE8AAADaAQAA vAAAAOYBAAABAAAAAADhQQCQ4sFvAAAAFP7//xUAAABMAAAAAAAAAAAAAAAAAAAA//////// //94AAAAVgBpAHMAaQB0AEMAbwBuAGMAcgBlAHQAZQBFAGwAZQBtAGUAbgB0AEEArboHAAAA AwAAAAQAAAADAAAAAwAAAAcAAAAGAAAABgAAAAUAAAADAAAABgAAAAMAAAAGAAAABwAAAAMA AAAGAAAACQAAAAYAAAAGAAAAAwAAAAcAAABUAAAAVAAAALwAAADaAQAAvwAAAOYBAAABAAAA AADhQQCQ4sHcAAAAFP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKACtugMA AABUAAAAZAAAAL8AAADaAQAAzwAAAOYBAAABAAAAAADhQQCQ4sHfAAAAFP7//wQAAABMAAAA AAAAAAAAAAAAAAAA//////////9UAAAAdABoAGkAcwADAAAABgAAAAMAAAAEAAAAVAAAAFQA AADPAAAA2gEAANIAAADmAQAAAQAAAAAA4UEAkOLB7wAAABT+//8BAAAATAAAAAAAAAAAAAAA AAAAAP//////////UAAAACkArboDAAAAGwAAABAAAAAAAQAAKf7//xYAAAAMAAAAAAAAABgA AAAMAAAAAEBAABgAAAAMAAAAAAAAACcAAAAYAAAACAAAAAAAAADAv8AAAAAAACUAAAAMAAAA CAAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAcAAAArAAAAGAAAADsB AABB/v//9QEAAPz9//8lAAAADAAAAAIAAAAoAAAADAAAAAgAAAAlAAAADAAAAAMAAAAoAAAA DAAAAAcAAAArAAAAGAAAADgBAABE/v//8gEAAP/9//8lAAAADAAAAAUAAABUAAAArAAAAEgB AACzAQAAowEAAL4BAAABAAAAAADhQQCQ4sFoAQAAO/7//xAAAABMAAAAAAAAAAAAAAAAAAAA //////////9sAAAAQwBvAG4AYwByAGUAdABlAEUAbABlAG0AZQBuAHQAQgAHAAAABgAAAAYA AAAGAAAABAAAAAYAAAADAAAABgAAAAcAAAADAAAABgAAAAkAAAAGAAAABgAAAAMAAAAHAAAA JQAAAAwAAAABAAAAGwAAABAAAAA4AQAAKf7//zYAAAAQAAAA8gEAACn+//8YAAAADAAAAIsA AAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAAB0BAADNAQAAJgEAANkBAAABAAAA AADhQQCQ4sE9AQAAIf7//wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKwAgAAYA AAADAAAAVAAAAKgAAAAuAQAAzQEAAHEBAADZAQAAAQAAAAAA4UEAkOLBTgEAACH+//8PAAAA TAAAAAAAAAAAAAAAAAAAAP//////////bAAAAEEAYwBjAGUAcAB0ACgAVgBpAHMAaQB0AG8A cgApAK26BwAAAAUAAAAFAAAABgAAAAYAAAADAAAAAwAAAAcAAAADAAAABAAAAAMAAAADAAAA BgAAAAMAAAADAAAAGAAAAAwAAACAgIAAHgAAABgAAABVAQAAFP7///MBAAD+/f//SwAAABAA AAAAAAAABQAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAA VAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sFVAQAAFP7//wEAAABMAAAAFAAAAAAA AAAAAAAAAAAAAAAAAABQAAAAAwCtupEAAAAWAAAADAAAAAAAAABUAAAAVAAAADUBAADaAQAA OgEAAOYBAAABAAAAAADhQQCQ4sFVAQAAFP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAAdgCtugUAAABUAAAAVAAAADoBAADaAQAAPQEAAOYBAAABAAAAAADhQQCQ4sFaAQAA FP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAALQCtugMAAABUAAAAVAAAAD0B AADaAQAAQwEAAOYBAAABAAAAAADhQQCQ4sFdAQAAFP7//wEAAABMAAAAAAAAAAAAAAAAAAAA //////////9QAAAAPgCtugYAAABUAAAAzAAAAEMBAADaAQAAsAEAAOYBAAABAAAAAADhQQCQ 4sFjAQAAFP7//xUAAABMAAAAAAAAAAAAAAAAAAAA//////////94AAAAVgBpAHMAaQB0AEMA bwBuAGMAcgBlAHQAZQBFAGwAZQBtAGUAbgB0AEIArboHAAAAAwAAAAQAAAADAAAAAwAAAAcA AAAGAAAABgAAAAUAAAADAAAABgAAAAMAAAAGAAAABwAAAAMAAAAGAAAACQAAAAYAAAAGAAAA AwAAAAcAAABUAAAAVAAAALABAADaAQAAswEAAOYBAAABAAAAAADhQQCQ4sHQAQAAFP7//wEA AABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKACtugMAAABUAAAAZAAAALMBAADaAQAA wwEAAOYBAAABAAAAAADhQQCQ4sHTAQAAFP7//wQAAABMAAAAAAAAAAAAAAAAAAAA//////// //9UAAAAdABoAGkAcwADAAAABgAAAAMAAAAEAAAAVAAAAFQAAADDAQAA2gEAAMYBAADmAQAA AQAAAAAA4UEAkOLB4wEAABT+//8BAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACkA rboDAAAAGwAAABAAAADyAQAAKf7//xYAAAAMAAAAAAAAABgAAAAMAAAAAEBAABgAAAAMAAAA AAAAACcAAAAYAAAABwAAAAAAAADAv8AAAAAAACUAAAAMAAAABwAAACYAAAAcAAAACAAAAAAA AAABAAAAAAAAAMC/wAAlAAAADAAAAAgAAAArAAAAGAAAAL0AAADh////tQEAAJz///8lAAAA DAAAAAIAAAAoAAAADAAAAAcAAAAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAArAAAAGAAAALoA AADk////sgEAAJ////8lAAAADAAAAAYAAABUAAAAeAAAAAYBAAATAAAAJgEAAB0AAAABAAAA AADhQQCQ4sEmAQAA2////wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAAVgBpAHMA aQB0AG8AcgCtugcAAAADAAAABgAAAAMAAAADAAAABgAAAAQAAAAlAAAADAAAAAEAAAAbAAAA EAAAALoAAADJ////NgAAABAAAACyAQAAyf///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgA AAAMAAAAAEBAAFQAAABYAAAAnwAAAC0AAACoAAAAOQAAAAEAAAAAAOFBAJDiwb8AAADB//// AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAAAlAAAADAAAAAQA AABUAAAAOAEAALAAAAAtAAAAeQEAADkAAAABAAAAAADhQQCQ4sHQAAAAwf///ycAAABMAAAA AAAAAAAAAAAAAAAA//////////+cAAAAVgBpAHMAaQB0AEMAbwBuAGMAcgBlAHQAZQBFAGwA ZQBtAGUAbgB0AEEAKABDAG8AbgBjAHIAZQB0AGUARQBsAGUAbQBlAG4AdABBACkArboHAAAA AwAAAAUAAAADAAAAAwAAAAcAAAAGAAAABgAAAAUAAAADAAAABgAAAAMAAAAGAAAABwAAAAMA AAAGAAAABwAAAAYAAAAGAAAAAwAAAAcAAAADAAAABwAAAAYAAAAGAAAABQAAAAMAAAAGAAAA AwAAAAYAAAAHAAAAAwAAAAYAAAAHAAAABgAAAAYAAAADAAAABwAAAAMAAAAlAAAADAAAAAEA AAAlAAAADAAAAAEAAABUAAAAWAAAAJ8AAAA6AAAAqAAAAEYAAAABAAAAAADhQQCQ4sG/AAAA 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 AAAHAAAABgAAAAYAAAAFAAAAAwAAAAYAAAADAAAABgAAAAcAAAADAAAABgAAAAkAAAAGAAAA BgAAAAMAAAAHAAAAAwAAAAcAAAAGAAAABgAAAAUAAAADAAAABgAAAAMAAAAGAAAABwAAAAMA AAAGAAAACQAAAAYAAAAGAAAAAwAAAAcAAAADAAAAGAAAAAwAAAAAAAAAJgAAABwAAAAIAAAA AAAAAAEAAAAAAAAAAAAAACUAAAAMAAAACAAAABsAAAAQAAAA0AEAAFL///82AAAAEAAAANAB AABs////NgAAABAAAAA2AQAAbP///zYAAAAQAAAANgEAAJ7///8bAAAAEAAAADYBAACe//// VgAAACgAAAARAQAAUAAAABwBAABfAAAAAwAAADwBj/8xAY//NgGe/xIAAAAMAAAAAgAAABkA AAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAA CAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAgAAAAbAAAAEAAAAJ0A AABT////NgAAABAAAACdAAAAbP///zYAAAAQAAAANgEAAGz///82AAAAEAAAADYBAACe//// GwAAABAAAAA2AQAAnv///1YAAAAoAAAAEQEAAFAAAAAcAQAAXwAAAAMAAAA8AY//MQGP/zYB nv8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAgAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAIAAAAGwAAABAAAACSAAAAuf7//zYAAAAQAAAAuwAAALn+//82AAAAEAAAALsAAAC5/v// NgAAABAAAADjAAAAuf7//xsAAAAQAAAA4wAAALn+//8bAAAAEAAAAOMAAAC5/v//NgAAABAA AADVAAAAtP7//xsAAAAQAAAA4wAAALn+//82AAAAEAAAANUAAAC//v//EgAAAAwAAAACAAAA GQAAAAwAAAD///8AUgAAAHABAAAHAAAA9v///wAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAEEA UgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAArN4SAPgnIRAwcSUQ//////jc EgDvKSEQHQAAAAAAAAABAAAAUAAAAAAhDgNc25V8AABSAqzblXwIAAAAAABSAgAAUgIAIQ4D JN0AABHNlnwAABIAAAAAAPDdEgAY7pB8yGqSfAAA//++apJ8rWiSfAAAUgJgAABAbQWRfAjr EgDY5hIAAAAAAETdEgCR1kJfAAABAAjrEgC83BIAAAAAALDdEgAAAJB8cAWRfEAAAACwHw8D XNuVfPgfDwOs25V8AAAAAAAAAAAAAFICsB8PA2R2AAgAAAAA2OYSAAAAAAA62aABZHYACAAA AAAlAAAADAAAAAcAAABUAAAAZAAAALAAAAA6AQAAwAAAAEYBAAABAAAAAADhQQCQ4sHQAAAA tP7//wQAAABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAAMQAuAC4AKgAGAAAAAwAAAAMA AAAEAAAAJQAAAAwAAAABAAAAKAAAAAwAAAAHAAAAEgAAAAwAAAABAAAAGQAAAAwAAAD///8A JQAAAAwAAAADAAAAKAAAAAwAAAAIAAAAJgAAABwAAAAIAAAAAAAAAAEAAAAAAAAAAAAAACUA AAAMAAAACAAAABsAAAAQAAAAlQEAAET+//82AAAAEAAAAJUBAABX/v//NgAAABAAAAAfAQAA V/7//zYAAAAQAAAAHwEAAIn+//8bAAAAEAAAAB8BAACJ/v//VgAAACgAAAD6AAAAZQEAAAUB AAB0AQAAAwAAACUBev4aAXr+HwGJ/hIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAA AQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAACAAAACYAAAAcAAAACAAAAAAA AAABAAAAAAAAAAAAAAAlAAAADAAAAAgAAAAbAAAAEAAAAKIAAABE/v//NgAAABAAAACiAAAA V/7//zYAAAAQAAAAHwEAAFf+//82AAAAEAAAAB8BAACJ/v//GwAAABAAAAAfAQAAif7//1YA AAAoAAAA+gAAAGUBAAAFAQAAdAEAAAMAAAAlAXr+GgF6/h8Bif4SAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAgA AAAlAAAADAAAAA0AAIAoAAAADAAAAAEAAAAoAAAADAAAAAUAAAAlAAAADAAAAAAAAIAoAAAA DAAAAAIAAAAlAAAADAAAAAcAAIAoAAAADAAAAAMAAAAOAAAAFAAAAAAAAAAQAAAAFAAA AA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		12		GoF Creational Patterns		Abstract Factory				This pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:00:26">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_08674DF5_F407_492c_8F63_42503B072A65">
			<UML:Namespace.ownedElement>
				<UML:Class name="AbstractFactory" xmi.id="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface for operations that create abstract product objects."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:02:31"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:48:14"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="CreateProductA" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{91278168-D1F4-4446-B40B-D3D82D2D80A8}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="CreateProductB" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1521797C-AE1A-4d2c-A482-EF9261E7D98E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_112745E4_2545_42be_890C_895EE238EDB4" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_4EEDFE90_89B1_4824_8386_C042EF3D5F2B" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_4F772849_6987_49dd_9725_1FE0F3B453F8" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_656CE3B1_25A3_4c93_8FBD_42E896EA90A4" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_88B64E74_8FF9_4eef_A5BE_3E25D16E04DE" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_9715C8B6_6EA4_4f90_A1D1_BB156C1818FF" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_9F011842_590C_4ce7_98F3_E7A960569084" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_A7EC22EB_BB9D_494b_A70F_3B9D368FD385" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" supertype="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" xmi.id="EAID_AB68F8E8_8E1C_4370_9334_61E6C0FB9AC0" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteFactory1" xmi.id="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the operations to create concrete product objects."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:03:43"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:48:58"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="CreateProductA" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{91278168-D1F4-4446-B40B-D3D82D2D80A8}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="CreateProductB" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1521797C-AE1A-4d2c-A482-EF9261E7D98E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Dependency client="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" supplier="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" xmi.id="EAID_9681FD2D_F494_4563_AC5B_2BD62DFD233D" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=2;SY=20;EX=34;EY=-2;"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Dependency client="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" supplier="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" xmi.id="EAID_A36DC7AE_8674_4bfb_ABE3_C37AB924A904" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=1;SY=-33;EX=-33;EY=-13;"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Class name="ConcreteFactory2" xmi.id="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the operations to create concrete product objects."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:04:07"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:49:05"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="CreateProductA" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{91278168-D1F4-4446-B40B-D3D82D2D80A8}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="CreateProductB" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1521797C-AE1A-4d2c-A482-EF9261E7D98E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Dependency client="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" supplier="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" xmi.id="EAID_82C2EC4C_9952_47c9_B995_79229F9416D4" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=-9;SY=-6;EX=-9;EY=1;"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Dependency client="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" supplier="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" xmi.id="EAID_F06BB7DD_1B25_4486_896E_21356EDA75BC" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=3;SY=-4;EX=-10;EY=4;"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Class name="AbstractProductA" xmi.id="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface for a type of product object."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:05:00"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:49:34"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Generalization subtype="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_156AD9A6_E8AB_4806_8D50_F88A36736E8F" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_23A826FC_9B45_4e9f_8F31_3107119E65D1" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_2FC1B0E3_046C_4395_9EAB_FA8D91E52545" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_410D0C6F_BB70_4e8e_BB22_4C46F04D07CC" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_67F14891_60DB_44ed_800B_3765D3EB1B96" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_89D35B0A_6665_43b5_89B8_A65CA9FFFF86" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_BCD0AC5E_38BF_41ac_9E51_C0F87EE4B603" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=2;SY=-4;EX=2;EY=-3;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_CF9DDF5E_0C16_4511_B36A_503BDA283FA1" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" supertype="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" xmi.id="EAID_FB61DD62_835F_4b71_87D9_4254FFE315B2" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ProductA2" xmi.id="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:05:53"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:51:12"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="ProductA1" xmi.id="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:06:08"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:51:15"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="AbstractProductB" xmi.id="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface for a type of product object."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:06:57"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:49:39"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Generalization subtype="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_0E4BCE17_C069_4e1e_A8DB_4F2E8AE3FFD8" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_1022486D_ACC5_4521_8628_1E8EADEE4592" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_15631861_1C0D_44c4_B9BE_B6F59CB59772" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=2;SY=1;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_5E4594FC_2DCE_43cd_BEDE_5E4477AAA8F4" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_880E44A7_25FF_4cc5_80B9_624C081175C7" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_A88A2B65_6F64_435a_8FB4_A8B005E64615" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_E85F118A_90B1_426d_A073_92BEECC3DC2F" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_EFFBF6FD_5F27_4a8a_9FCC_81A82BDF886E" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" supertype="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" xmi.id="EAID_FE2D77C3_DA35_47b0_B0E4_CD05F085A809" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ProductB2" xmi.id="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:07:13"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:51:19"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="ProductB1" xmi.id="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:07:27"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:51:22"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="Client" xmi.id="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860" visibility="public" namespace="EAPK_08674DF5_F407_492c_8F63_42503B072A65" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class uses only interfaces declared by AbstractFactory and AbstractProduct classes."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:39:42"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:52:11"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Abstract Factory"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Abstract Factory" xmi.id="EAID_592F8858_A010_480c_9F89_2B001AB622F4" diagramType="ClassDiagram" owner="EAPK_592F8858_A010_480c_9F89_2B001AB622F4" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:35"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-14 16:47:14"/>
				<UML:TaggedValue tag="package" value="EAPK_08674DF5_F407_492c_8F63_42503B072A65"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=626;Top=21;Right=716;Bottom=51;imgL=602;imgT=20;imgR=692;imgB=50;" subject="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860" seqno="1" style="DUID=33281F20;LBL=;"/>
				<UML:DiagramElement geometry="Left=515;Top=326;Right=605;Bottom=355;imgL=491;imgT=325;imgR=581;imgB=354;" subject="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" seqno="2" style="DUID=94ED63A2;LBL=;"/>
				<UML:DiagramElement geometry="Left=373;Top=326;Right=463;Bottom=354;imgL=349;imgT=325;imgR=439;imgB=353;" subject="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" seqno="3" style="DUID=53922762;LBL=;"/>
				<UML:DiagramElement geometry="Left=444;Top=221;Right=544;Bottom=249;imgL=420;imgT=220;imgR=520;imgB=248;" subject="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" seqno="4" style="DUID=3727A504;LBL=;"/>
				<UML:DiagramElement geometry="Left=515;Top=154;Right=605;Bottom=183;imgL=491;imgT=153;imgR=581;imgB=182;" subject="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" seqno="5" style="DUID=7EB82B50;LBL=;"/>
				<UML:DiagramElement geometry="Left=376;Top=154;Right=466;Bottom=183;imgL=352;imgT=153;imgR=442;imgB=182;" subject="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" seqno="6" style="DUID=BC34F9C5;LBL=;"/>
				<UML:DiagramElement geometry="Left=444;Top=53;Right=544;Bottom=81;imgL=420;imgT=52;imgR=520;imgB=80;" subject="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" seqno="7" style="DUID=FD6E35F8;LBL=;"/>
				<UML:DiagramElement geometry="Left=196;Top=205;Right=304;Bottom=272;imgL=172;imgT=204;imgR=280;imgB=271;" subject="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" seqno="8" style="DUID=101BBE14;LBL=;"/>
				<UML:DiagramElement geometry="Left=34;Top=205;Right=145;Bottom=274;imgL=10;imgT=204;imgR=121;imgB=273;" subject="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" seqno="9" style="DUID=7C9F16D2;LBL=;"/>
				<UML:DiagramElement geometry="Left=132;Top=11;Right=255;Bottom=77;imgL=108;imgT=10;imgR=231;imgB=76;" subject="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" seqno="10" style="DUID=A62D514A;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=421:-131$494:-131$;" subject="EAID_23A826FC_9B45_4e9f_8F31_3107119E65D1" style="Mode=3;EOID=FD6E35F8;SOID=BC34F9C5;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=2;SY=1;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=673:-234$;" subject="EAID_15631861_1C0D_44c4_B9BE_B6F59CB59772" style="Mode=3;EOID=3727A504;SOID=33281F20;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=418:-299$494:-299$;" subject="EAID_EFFBF6FD_5F27_4a8a_9FCC_81A82BDF886E" style="Mode=3;EOID=3727A504;SOID=53922762;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-299$494:-299$;" subject="EAID_FE2D77C3_DA35_47b0_B0E4_CD05F085A809" style="Mode=3;EOID=3727A504;SOID=94ED63A2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-299$494:-299$;" subject="EAID_880E44A7_25FF_4cc5_80B9_624C081175C7" style="Mode=3;EOID=3727A504;SOID=94ED63A2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=418:-299$494:-299$;" subject="EAID_E85F118A_90B1_426d_A073_92BEECC3DC2F" style="Mode=3;EOID=3727A504;SOID=53922762;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-299$494:-299$;" subject="EAID_1022486D_ACC5_4521_8628_1E8EADEE4592" style="Mode=3;EOID=3727A504;SOID=94ED63A2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-299$494:-299$;" subject="EAID_5E4594FC_2DCE_43cd_BEDE_5E4477AAA8F4" style="Mode=3;EOID=3727A504;SOID=94ED63A2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=418:-299$494:-299$;" subject="EAID_A88A2B65_6F64_435a_8FB4_A8B005E64615" style="Mode=3;EOID=3727A504;SOID=53922762;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-131$494:-131$;" subject="EAID_156AD9A6_E8AB_4806_8D50_F88A36736E8F" style="Mode=3;EOID=FD6E35F8;SOID=7EB82B50;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-131$494:-131$;" subject="EAID_67F14891_60DB_44ed_800B_3765D3EB1B96" style="Mode=3;EOID=FD6E35F8;SOID=7EB82B50;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=421:-131$494:-131$;" subject="EAID_410D0C6F_BB70_4e8e_BB22_4C46F04D07CC" style="Mode=3;EOID=FD6E35F8;SOID=BC34F9C5;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=421:-131$494:-131$;" subject="EAID_89D35B0A_6665_43b5_89B8_A65CA9FFFF86" style="Mode=3;EOID=FD6E35F8;SOID=BC34F9C5;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=421:-131$494:-131$;" subject="EAID_FB61DD62_835F_4b71_87D9_4254FFE315B2" style="Mode=3;EOID=FD6E35F8;SOID=BC34F9C5;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=418:-299$494:-299$;" subject="EAID_0E4BCE17_C069_4e1e_A8DB_4F2E8AE3FFD8" style="Mode=3;EOID=3727A504;SOID=53922762;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=250:-127$193:-127$;" subject="EAID_AB68F8E8_8E1C_4370_9334_61E6C0FB9AC0" style="Mode=3;EOID=A62D514A;SOID=101BBE14;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=250:-127$193:-127$;" subject="EAID_112745E4_2545_42be_890C_895EE238EDB4" style="Mode=3;EOID=A62D514A;SOID=101BBE14;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=89:-127$193:-127$;" subject="EAID_4EEDFE90_89B1_4824_8386_C042EF3D5F2B" style="Mode=3;EOID=A62D514A;SOID=7C9F16D2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=250:-127$193:-127$;" subject="EAID_9715C8B6_6EA4_4f90_A1D1_BB156C1818FF" style="Mode=3;EOID=A62D514A;SOID=101BBE14;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=89:-127$193:-127$;" subject="EAID_88B64E74_8FF9_4eef_A5BE_3E25D16E04DE" style="Mode=3;EOID=A62D514A;SOID=7C9F16D2;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=4;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_656CE3B1_25A3_4c93_8FBD_42E896EA90A4" style="Mode=2;EOID=A62D514A;SOID=33281F20;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-131$494:-131$;" subject="EAID_CF9DDF5E_0C16_4511_B36A_503BDA283FA1" style="Mode=3;EOID=FD6E35F8;SOID=7EB82B50;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=250:-127$193:-127$;" subject="EAID_4F772849_6987_49dd_9725_1FE0F3B453F8" style="Mode=3;EOID=A62D514A;SOID=101BBE14;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=560:-131$494:-131$;" subject="EAID_2FC1B0E3_046C_4395_9EAB_FA8D91E52545" style="Mode=3;EOID=FD6E35F8;SOID=7EB82B50;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=2;SY=20;EX=34;EY=-2;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=90:-385$629:-385$629:-341$;" subject="EAID_9681FD2D_F494_4563_AC5B_2BD62DFD233D" style="Mode=3;EOID=94ED63A2;SOID=7C9F16D2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=1;SY=-33;EX=-33;EY=-13;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=90:-385$629:-385$629:-175$;" subject="EAID_A36DC7AE_8674_4bfb_ABE3_C37AB924A904" style="Mode=3;EOID=7EB82B50;SOID=7C9F16D2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=3;SY=-4;EX=-10;EY=4;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=351:-242$351:-336$;" subject="EAID_F06BB7DD_1B25_4486_896E_21356EDA75BC" style="Mode=3;EOID=53922762;SOID=101BBE14;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=-9;SY=-6;EX=-9;EY=1;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=351:-242$351:-254$351:-229$351:-229$351:-167$;" subject="EAID_82C2EC4C_9952_47c9_B995_79229F9416D4" style="Mode=3;EOID=BC34F9C5;SOID=101BBE14;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=2;SY=-4;EX=2;EY=-3;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=673:-70$;" subject="EAID_BCD0AC5E_38BF_41ac_9E51_C0F87EE4B603" style="Mode=3;EOID=FD6E35F8;SOID=33281F20;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=89:-127$193:-127$;" subject="EAID_A7EC22EB_BB9D_494b_A70F_3B9D368FD385" style="Mode=3;EOID=A62D514A;SOID=7C9F16D2;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=89:-127$193:-127$;" subject="EAID_9F011842_590C_4ce7_98F3_E7A960569084" style="Mode=3;EOID=A62D514A;SOID=7C9F16D2;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" name="ConcreteFactory2" UMLType="Class"/>
		<EAStub xmi.id="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" name="AbstractFactory" UMLType="Class"/>
		<EAStub xmi.id="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" name="ConcreteFactory1" UMLType="Class"/>
		<EAStub xmi.id="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" name="ProductB1" UMLType="Class"/>
		<EAStub xmi.id="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" name="ProductA1" UMLType="Class"/>
		<EAStub xmi.id="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" name="ProductA2" UMLType="Class"/>
		<EAStub xmi.id="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" name="ProductB2" UMLType="Class"/>
		<EAStub xmi.id="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" name="AbstractProductA" UMLType="Class"/>
		<EAStub xmi.id="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" name="AbstractProductB" UMLType="Class"/>
		<UMLPattern name="Abstract Factory" category="GoF Creational Patterns" version="2.0" notes="This pattern provides an interface for creating families of related or dependent objects without specifying their concrete classes.">
			<UMLPattern.PromptList>
				<Element name="Client:Class" guid="EAID_3ED84B06_9AD9_4c57_85E8_492776FC5860" id="201" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class uses only interfaces declared by AbstractFactory and AbstractProduct classes.">
						<![CDATA[This class uses only interfaces declared by AbstractFactory and AbstractProduct classes.]]>
					</Comment>
				</Element>
				<Element name="ProductB1:Class" guid="EAID_B0271CFC_1437_4a19_9CC0_4B993E91E95A" id="200" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.">
						<![CDATA[This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.]]>
					</Comment>
				</Element>
				<Element name="ProductB2:Class" guid="EAID_F7A1EAFF_2F06_4fc7_B44F_F8422F43BD9E" id="199" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.">
						<![CDATA[This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.]]>
					</Comment>
				</Element>
				<Element name="AbstractProductB:Class" guid="EAID_9C0D438D_FBC9_4bb2_B2AF_5F98C6EDD2A2" id="198" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface for a type of product object.">
						<![CDATA[This class declares an interface for a type of product object.]]>
					</Comment>
				</Element>
				<Element name="ProductA1:Class" guid="EAID_633A6BD9_4516_4e8f_8D38_B96AD0C67C5A" id="197" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.">
						<![CDATA[This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.]]>
					</Comment>
				</Element>
				<Element name="ProductA2:Class" guid="EAID_F6E0B62D_EA0D_4377_BE3A_619CDAF1871D" id="196" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.">
						<![CDATA[This class (a) defines a product object to be created by the corresponding concrete factory, and (b) implements the AbstractProduct interface.]]>
					</Comment>
				</Element>
				<Element name="AbstractProductA:Class" guid="EAID_F520D598_4FCB_4c7a_A0CF_3DF918BFAE0A" id="195" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface for a type of product object.">
						<![CDATA[This class declares an interface for a type of product object.]]>
					</Comment>
				</Element>
				<Element name="ConcreteFactory2:Class" guid="EAID_E98CC5B5_A549_4b04_AAC0_6575339DE900" id="194" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the operations to create concrete product objects.">
						<![CDATA[This class implements the operations to create concrete product objects.]]>
					</Comment>
				</Element>
				<Element name="ConcreteFactory1:Class" guid="EAID_3C9882F4_5830_4f58_9440_47DF6B4BE22C" id="193" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the operations to create concrete product objects.">
						<![CDATA[This class implements the operations to create concrete product objects.]]>
					</Comment>
				</Element>
				<Element name="AbstractFactory:Class" guid="EAID_2CBF681D_9AFD_4b37_A848_59E78C9924F0" id="192" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface for operations that create abstract product objects.">
						<![CDATA[This class declares an interface for operations that create abstract product objects.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="19743" cy="11299">AQAAAGwAAAAKAAAACgAAALYCAACAAQAAAAAAAAAAAAAfTQAAIywAACBFTUYAAAEAEGgAAKAF AAAJAAAAAAAAAAAAAAAAAAAAAAUAAAAEAABoAQAAIgEAAAAAAAAAAAAAAAAAAEB+BQDQbAQA EQAAAAwAAAAIAAAACQAAABAAAAABAAAA/////woAAAAQAAAAGAAAAP////9SAAAAcAEAAAEA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAY7pB8yGqSfP// //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAABItgoDXNuVfAAAUgKs25V8CAAAAAAAUgIAAFICSLYKAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknz/////vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAGO6QfHAFkXxAAAAAWPMKA1zb lXyg8woDrNuVfAAAAAAAAAAAAABSAljzCgNkdgAIAAAAACUAAAAMAAAAAQAAACcAAAAYAAAA AgAAAAAAAAD88uMAAAAAACUAAAAMAAAAAgAAACYAAAAcAAAAAwAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAMAAAASAAAADAAAAAEAAAAhAAAACAAAABgAAAAMAAAAAAAAACYAAAAcAAAA BAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAQAAAASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAA DAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAA DAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAA DAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wAlAAAADAAAAAMAAAAiAAAADAAAAP////8oAAAADAAAAAQAAAAnAAAAGAAAAAQA AAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAUAAAAAAAAAAQAAAAAAAADAv8AA JQAAAAwAAAAFAAAAOQAAAAwAAAACAAAAKwAAABgAAACHAAAA8v///wEBAACx////JQAAAAwA AAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAFAAAAKwAAABgAAACEAAAA 9f////4AAAC0////UgAAAHABAAAFAAAA9v///wAAAAAAAAAAAAAAALwCAAABAAABAAAAAEEA UgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAwAAAAWK8KAwAAAAAAAAAArNuVfAgA AAAAAFICAAAAAgAAUgKU3BIAEc2WfODeEgAY7pB88AaRfP/////rBpF8DN8gEAAAUgJgAABA MAAAAAjrEgDY5hIAAAAAAMDeEgAY3xIAXyshEAAAEgD4JyEQCOsSAOMtIRAQqwoDzQAAAAgA AAAI6xIA2OYSAAAAAAAsAAAAAAAAABXDAQDwqgoDxLUgEIBHJhAAABIAhCohEAkAAAB7KiEQ COsSANjmEgAAAAAAEKsKA/gnIRB4byUQdOESAPgnIRAwcSUQ/////3jfEgDvKSEQZHYACAAA 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 AAAAAAAAAAAAAAAAAAD//////////2wAAABDAG8AbgBjAHIAZQB0AGUARgBhAGMAdABvAHIA eQAxAAcAAAAGAAAABgAAAAYAAAAEAAAABgAAAAMAAAAGAAAABgAAAAYAAAAGAAAAAwAAAAYA AAAEAAAABQAAAAYAAAAlAAAADAAAAAEAAAAbAAAAEAAAACIAAAAY////NgAAABAAAACQAAAA GP///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQAAABYAAAADwAAAO8A AAAYAAAA+wAAAAEAAAAAAOFBAJDiwScAAAAQ////AgAAAEwAAAAAAAAAAAAAAAAAAAD///// /////1AAAAArACAABgAAAAMAAABUAAAArAAAACAAAADvAAAAcAAAAPsAAAABAAAAAADhQQCQ 4sE4AAAAEP///xAAAABMAAAAAAAAAAAAAAAAAAAA//////////9sAAAAQwByAGUAYQB0AGUA UAByAG8AZAB1AGMAdABBACgAKQAHAAAAAwAAAAYAAAAGAAAAAwAAAAYAAAAHAAAAAwAAAAYA AAAGAAAABgAAAAUAAAADAAAABwAAAAMAAAADAAAAVAAAAFgAAAAPAAAA/AAAABgAAAAIAQAA AQAAAAAA4UEAkOLBJwAAAAP///8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsA IAAGAAAAAwAAAFQAAACsAAAAIAAAAPwAAABwAAAACAEAAAEAAAAAAOFBAJDiwTgAAAAD//// EAAAAEwAAAAAAAAAAAAAAAAAAAD//////////2wAAABDAHIAZQBhAHQAZQBQAHIAbwBkAHUA YwB0AEIAKAApAAcAAAADAAAABgAAAAYAAAADAAAABgAAAAcAAAADAAAABgAAAAYAAAAGAAAA BQAAAAMAAAAHAAAAAwAAAAMAAAAYAAAADAAAAAAAAAAnAAAAGAAAAAYAAAAAAAAAwL/AAAAA AAAlAAAADAAAAAYAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAIAAAA KwAAABgAAADHAAAAMP///zIBAADu/v//JQAAAAwAAAACAAAAKAAAAAwAAAAGAAAAJQAAAAwA AAADAAAAKAAAAAwAAAAIAAAAKwAAABgAAADEAAAAM////y8BAADx/v//JQAAAAwAAAAHAAAA VAAAAKwAAAC3AAAA1QAAAA0BAADgAAAAAQAAAAAA4UEAkOLBzwAAACr///8QAAAATAAAAAAA AAAAAAAAAAAAAP//////////bAAAAEMAbwBuAGMAcgBlAHQAZQBGAGEAYwB0AG8AcgB5ADIA BwAAAAYAAAAGAAAABgAAAAQAAAAGAAAAAwAAAAYAAAAGAAAABgAAAAYAAAADAAAABgAAAAQA AAAFAAAABgAAACUAAAAMAAAAAQAAABsAAAAQAAAAxAAAABj///82AAAAEAAAAC8BAAAY//// GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAAGAAAAAwAAAAAQEAAVAAAAFgAAACxAAAA7wAAALoA AAD7AAAAAQAAAAAA4UEAkOLByQAAABD///8CAAAATAAAAAAAAAAAAAAAAAAAAP////////// UAAAACsAIAAGAAAAAwAAAFQAAACsAAAAwgAAAO8AAAASAQAA+wAAAAEAAAAAAOFBAJDiwdoA AAAQ////EAAAAEwAAAAAAAAAAAAAAAAAAAD//////////2wAAABDAHIAZQBhAHQAZQBQAHIA bwBkAHUAYwB0AEEAKAApAAcAAAADAAAABgAAAAYAAAADAAAABgAAAAcAAAADAAAABgAAAAYA AAAGAAAABQAAAAMAAAAHAAAAAwAAAAMAAABUAAAAWAAAALEAAAD8AAAAugAAAAgBAAABAAAA AADhQQCQ4sHJAAAAA////wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAKwAgAAYA AAADAAAAVAAAAKwAAADCAAAA/AAAABIBAAAIAQAAAQAAAAAA4UEAkOLB2gAAAAP///8QAAAA TAAAAAAAAAAAAAAAAAAAAP//////////bAAAAEMAcgBlAGEAdABlAFAAcgBvAGQAdQBjAHQA QgAoACkABwAAAAMAAAAGAAAABgAAAAMAAAAGAAAABwAAAAMAAAAGAAAABgAAAAYAAAAFAAAA AwAAAAcAAAADAAAAAwAAABgAAAAMAAAAAAAAACcAAAAYAAAACAAAAAAAAADAv8AAAAAAACUA AAAMAAAACAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAYAAAArAAAA GAAAAL8BAADI////IgIAAK3///8lAAAADAAAAAIAAAAoAAAADAAAAAgAAAAlAAAADAAAAAMA AAAoAAAADAAAAAYAAAArAAAAGAAAALwBAADL////HwIAALD///8lAAAADAAAAAUAAABUAAAA rAAAAKsBAAA9AAAAAQIAAEcAAAABAAAAAADhQQCQ4sHDAQAAwv///xAAAABMAAAAAAAAAAAA AAAAAAAA//////////9sAAAAQQBiAHMAdAByAGEAYwB0AFAAcgBvAGQAdQBjAHQAQQAHAAAA BgAAAAYAAAADAAAABAAAAAYAAAAGAAAAAwAAAAcAAAAEAAAABgAAAAYAAAAGAAAABgAAAAMA AAAHAAAAJQAAAAwAAAABAAAAGAAAAAwAAACLAAAAGAAAAAwAAAAAAAAAGAAAAAwAAAAAQEAA GAAAAAwAAAAAAAAAJwAAABgAAAAGAAAAAAAAAMC/wAAAAAAAJQAAAAwAAAAGAAAAJgAAABwA AAAIAAAAAAAAAAEAAAAAAAAAwL/AACUAAAAMAAAACAAAACsAAAAYAAAAewEAAGP////UAQAA R////yUAAAAMAAAAAgAAACgAAAAMAAAABgAAACUAAAAMAAAAAwAAACgAAAAMAAAACAAAACsA AAAYAAAAeAEAAGb////RAQAASv///yUAAAAMAAAABwAAAFQAAACEAAAAcwEAAKIAAACmAQAA rQAAAAEAAAAAAOFBAJDiwYsBAABd////CQAAAEwAAAAAAAAAAAAAAAAAAAD//////////2AA AABQAHIAbwBkAHUAYwB0AEEAMgCtugcAAAAEAAAABgAAAAYAAAAGAAAABgAAAAMAAAAHAAAA BgAAACUAAAAMAAAAAQAAABgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAABgA AAAMAAAAAAAAACcAAAAYAAAACAAAAAAAAADAv8AAAAAAACUAAAAMAAAACAAAACYAAAAcAAAA BgAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAYAAAArAAAAGAAAAAYCAABj////XwIAAEf/ //8lAAAADAAAAAIAAAAoAAAADAAAAAgAAAAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAArAAAA GAAAAAMCAABm////XAIAAEr///8lAAAADAAAAAcAAABUAAAAhAAAAP4BAACiAAAAMQIAAK0A AAABAAAAAADhQQCQ4sEWAgAAXf///wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAA 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 GQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEA AAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAoQIAAM3///82AAAAEAAAAKECAAAW//// NgAAABAAAAAgAgAAFv///xsAAAAQAAAAIAIAABb///8bAAAAEAAAACACAAAW////NgAAABAA AAAvAgAAHP///xsAAAAQAAAAIAIAABb///82AAAAEAAAAC8CAAAQ////EgAAAAwAAAACAAAA GQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwA AAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAA ogEAALr+//82AAAAEAAAAKIBAADV/v//NgAAABAAAADuAQAA1f7//zYAAAAQAAAA7gEAAAf/ //8bAAAAEAAAAO4BAAAH////VgAAACgAAADRAQAA+AAAANwBAAAHAQAAAwAAAPQB+P7pAfj+ 7gEH/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUA AAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAA DAAAAAYAAAAbAAAAEAAAADACAAC6/v//NgAAABAAAAAwAgAA1f7//zYAAAAQAAAA7gEAANX+ //82AAAAEAAAAO4BAAAH////GwAAABAAAADuAQAAB////1YAAAAoAAAA0QEAAPgAAADcAQAA BwEAAAMAAAD0Afj+6QH4/u4BB/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAA AQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAAAwAgAAuv7//zYAAAAQAAAAMAIAANX+ //82AAAAEAAAAO4BAADV/v//NgAAABAAAADuAQAAB////xsAAAAQAAAA7gEAAAf///9WAAAA KAAAANEBAAD4AAAA3AEAAAcBAAADAAAA9AH4/ukB+P7uAQf/EgAAAAwAAAACAAAAGQAAAAwA AAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAA JgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAogEAALr+ //82AAAAEAAAAKIBAADV/v//NgAAABAAAADuAQAA1f7//zYAAAAQAAAA7gEAAAf///8bAAAA EAAAAO4BAAAH////VgAAACgAAADRAQAA+AAAANwBAAAHAQAAAwAAAPQB+P7pAfj+7gEH/xIA AAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAA AwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYA AAAbAAAAEAAAADACAAC6/v//NgAAABAAAAAwAgAA1f7//zYAAAAQAAAA7gEAANX+//82AAAA EAAAAO4BAAAH////GwAAABAAAADuAQAAB////1YAAAAoAAAA0QEAAPgAAADcAQAABwEAAAMA AAD0Afj+6QH4/u4BB/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAA AAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAAAwAgAAuv7//zYAAAAQAAAAMAIAANX+//82AAAA EAAAAO4BAADV/v//NgAAABAAAADuAQAAB////xsAAAAQAAAA7gEAAAf///9WAAAAKAAAANEB AAD4AAAA3AEAAAcBAAADAAAA9AH4/ukB+P7uAQf/EgAAAAwAAAACAAAAGQAAAAwAAAD///8A EgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwA AAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAogEAALr+//82AAAA EAAAAKIBAADV/v//NgAAABAAAADuAQAA1f7//zYAAAAQAAAA7gEAAAf///8bAAAAEAAAAO4B AAAH////VgAAACgAAADRAQAA+AAAANwBAAAHAQAAAwAAAPQB+P7pAfj+7gEH/xIAAAAMAAAA AgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgA AAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAA EAAAADACAABm////NgAAABAAAAAwAgAAff///zYAAAAQAAAA7gEAAH3///82AAAAEAAAAO4B AACv////GwAAABAAAADuAQAAr////1YAAAAoAAAA0QEAAFAAAADcAQAAXwAAAAMAAAD0AaD/ 6QGg/+4Br/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAA JQAAAAwAAAAGAAAAGwAAABAAAAAwAgAAZv///zYAAAAQAAAAMAIAAH3///82AAAAEAAAAO4B AAB9////NgAAABAAAADuAQAAr////xsAAAAQAAAA7gEAAK////9WAAAAKAAAANEBAABQAAAA 3AEAAF8AAAADAAAA9AGg/+kBoP/uAa//EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwA AAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAA AAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAApQEAAGb///82AAAAEAAAAKUB AAB9////NgAAABAAAADuAQAAff///zYAAAAQAAAA7gEAAK////8bAAAAEAAAAO4BAACv//// VgAAACgAAADRAQAAUAAAANwBAABfAAAAAwAAAPQBoP/pAaD/7gGv/xIAAAAMAAAAAgAAABkA AAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAA BgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAKUB AABm////NgAAABAAAAClAQAAff///zYAAAAQAAAA7gEAAH3///82AAAAEAAAAO4BAACv//// GwAAABAAAADuAQAAr////1YAAAAoAAAA0QEAAFAAAADcAQAAXwAAAAMAAAD0AaD/6QGg/+4B r/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAGAAAAGwAAABAAAAClAQAAZv///zYAAAAQAAAApQEAAH3///82AAAAEAAAAO4BAAB9//// NgAAABAAAADuAQAAr////xsAAAAQAAAA7gEAAK////9WAAAAKAAAANEBAABQAAAA3AEAAF8A AAADAAAA9AGg/+kBoP/uAa//EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAA GQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEA AAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAogEAALr+//82AAAAEAAAAKIBAADV/v// NgAAABAAAADuAQAA1f7//zYAAAAQAAAA7gEAAAf///8bAAAAEAAAAO4BAAAH////VgAAACgA AADRAQAA+AAAANwBAAAHAQAAAwAAAPQB+P7pAfj+7gEH/xIAAAAMAAAAAgAAABkAAAAMAAAA ////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYA AAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAPoAAAAz//// NgAAABAAAAD6AAAAgf///zYAAAAQAAAAwQAAAIH///82AAAAEAAAAMEAAACz////GwAAABAA AADBAAAAs////1YAAAAoAAAApAAAAEwAAACvAAAAWwAAAAMAAADHAKT/vACk/8EAs/8SAAAA DAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMA AAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAA GwAAABAAAAD6AAAAM////zYAAAAQAAAA+gAAAIH///82AAAAEAAAAMEAAACB////NgAAABAA AADBAAAAs////xsAAAAQAAAAwQAAALP///9WAAAAKAAAAKQAAABMAAAArwAAAFsAAAADAAAA xwCk/7wApP/BALP/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwA AAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAA AAAAACUAAAAMAAAABgAAABsAAAAQAAAAWQAAADP///82AAAAEAAAAFkAAACB////NgAAABAA AADBAAAAgf///zYAAAAQAAAAwQAAALP///8bAAAAEAAAAMEAAACz////VgAAACgAAACkAAAA TAAAAK8AAABbAAAAAwAAAMcApP+8AKT/wQCz/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIA AAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAA BgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAPoAAAAz////NgAAABAA AAD6AAAAgf///zYAAAAQAAAAwQAAAIH///82AAAAEAAAAMEAAACz////GwAAABAAAADBAAAA s////1YAAAAoAAAApAAAAEwAAACvAAAAWwAAAAMAAADHAKT/vACk/8EAs/8SAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAA DAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAA AABZAAAAM////zYAAAAQAAAAWQAAAIH///82AAAAEAAAAMEAAACB////NgAAABAAAADBAAAA s////xsAAAAQAAAAwQAAALP///9WAAAAKAAAAKQAAABMAAAArwAAAFsAAAADAAAAxwCk/7wA pP/BALP/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8A JQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUA AAAMAAAABgAAABsAAAAQAAAAcgIAANz///82AAAAEAAAALkBAADc////NgAAABAAAAC5AQAA 3P///zYAAAAQAAAA/wAAANz///8bAAAAEAAAAP8AAADc////GwAAABAAAAD/AAAA3P///zYA AAAQAAAADgEAAOL///8bAAAAEAAAAP8AAADc////NgAAABAAAAAOAQAA1v///xIAAAAMAAAA AgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgA AAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAA EAAAADACAABm////NgAAABAAAAAwAgAAff///zYAAAAQAAAA7gEAAH3///82AAAAEAAAAO4B AACv////GwAAABAAAADuAQAAr////1YAAAAoAAAA0QEAAFAAAADcAQAAXwAAAAMAAAD0AaD/ 6QGg/+4Br/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAA JQAAAAwAAAAGAAAAGwAAABAAAAD6AAAAM////zYAAAAQAAAA+gAAAIH///82AAAAEAAAAMEA AACB////NgAAABAAAADBAAAAs////xsAAAAQAAAAwQAAALP///9WAAAAKAAAAKQAAABMAAAA rwAAAFsAAAADAAAAxwCk/7wApP/BALP/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwA AAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAA AAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAMAIAAGb///82AAAAEAAAADAC AAB9////NgAAABAAAADuAQAAff///zYAAAAQAAAA7gEAAK////8bAAAAEAAAAO4BAACv//// VgAAACgAAADRAQAAUAAAANwBAABfAAAAAwAAAPQBoP/pAaD/7gGv/xIAAAAMAAAAAgAAABkA AAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAA BgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAFoA AADu/v//NgAAABAAAABaAAAA6/7//xsAAAAQAAAAWgAAAOj+//82AAAAEAAAAFoAAADl/v// GwAAABAAAABaAAAA4v7//zYAAAAQAAAAWgAAAN/+//8bAAAAEAAAAFoAAADc/v//NgAAABAA AABaAAAA2f7//xsAAAAQAAAAWgAAANb+//82AAAAEAAAAFoAAADT/v//GwAAABAAAABaAAAA 0P7//zYAAAAQAAAAWgAAAM3+//8bAAAAEAAAAFoAAADK/v//NgAAABAAAABaAAAAx/7//xsA AAAQAAAAWgAAAMT+//82AAAAEAAAAFoAAADB/v//GwAAABAAAABaAAAAvv7//zYAAAAQAAAA WgAAALv+//8bAAAAEAAAAFoAAAC4/v//NgAAABAAAABaAAAAtf7//xsAAAAQAAAAWgAAALL+ //82AAAAEAAAAFoAAACv/v//GwAAABAAAABaAAAArP7//zYAAAAQAAAAWgAAAKn+//8bAAAA EAAAAFoAAACm/v//NgAAABAAAABaAAAAo/7//xsAAAAQAAAAWgAAAKD+//82AAAAEAAAAFoA AACd/v//GwAAABAAAABaAAAAmv7//zYAAAAQAAAAWgAAAJf+//8bAAAAEAAAAFoAAACU/v// NgAAABAAAABaAAAAkf7//xsAAAAQAAAAWgAAAI7+//82AAAAEAAAAFoAAACL/v//GwAAABAA AABaAAAAiP7//zYAAAAQAAAAWgAAAIX+//8bAAAAEAAAAFoAAACC/v//NgAAABAAAABaAAAA f/7//xsAAAAQAAAAXQAAAH/+//82AAAAEAAAAGAAAAB//v//GwAAABAAAABjAAAAf/7//zYA AAAQAAAAZgAAAH/+//8bAAAAEAAAAGkAAAB//v//NgAAABAAAABsAAAAf/7//xsAAAAQAAAA bwAAAH/+//82AAAAEAAAAHIAAAB//v//GwAAABAAAAB1AAAAf/7//zYAAAAQAAAAeAAAAH/+ //8bAAAAEAAAAHsAAAB//v//NgAAABAAAAB+AAAAf/7//xsAAAAQAAAAgQAAAH/+//82AAAA EAAAAIQAAAB//v//GwAAABAAAACHAAAAf/7//zYAAAAQAAAAigAAAH/+//8bAAAAEAAAAI0A AAB//v//NgAAABAAAACQAAAAf/7//xsAAAAQAAAAkwAAAH/+//82AAAAEAAAAJYAAAB//v// GwAAABAAAACZAAAAf/7//zYAAAAQAAAAnAAAAH/+//8bAAAAEAAAAJ8AAAB//v//NgAAABAA AACiAAAAf/7//xsAAAAQAAAApQAAAH/+//82AAAAEAAAAKgAAAB//v//GwAAABAAAACrAAAA f/7//zYAAAAQAAAArgAAAH/+//8bAAAAEAAAALEAAAB//v//NgAAABAAAAC0AAAAf/7//xsA AAAQAAAAtwAAAH/+//82AAAAEAAAALoAAAB//v//GwAAABAAAAC9AAAAf/7//zYAAAAQAAAA wAAAAH/+//8bAAAAEAAAAMMAAAB//v//NgAAABAAAADGAAAAf/7//xsAAAAQAAAAyQAAAH/+ //82AAAAEAAAAMwAAAB//v//GwAAABAAAADPAAAAf/7//zYAAAAQAAAA0gAAAH/+//8bAAAA EAAAANUAAAB//v//NgAAABAAAADYAAAAf/7//xsAAAAQAAAA2wAAAH/+//82AAAAEAAAAN4A AAB//v//GwAAABAAAADhAAAAf/7//zYAAAAQAAAA5AAAAH/+//8bAAAAEAAAAOcAAAB//v// NgAAABAAAADqAAAAf/7//xsAAAAQAAAA7QAAAH/+//82AAAAEAAAAPAAAAB//v//GwAAABAA AADzAAAAf/7//zYAAAAQAAAA9gAAAH/+//8bAAAAEAAAAPkAAAB//v//NgAAABAAAAD8AAAA f/7//xsAAAAQAAAA/wAAAH/+//82AAAAEAAAAAIBAAB//v//GwAAABAAAAAFAQAAf/7//zYA AAAQAAAACAEAAH/+//8bAAAAEAAAAAsBAAB//v//NgAAABAAAAAOAQAAf/7//xsAAAAQAAAA EQEAAH/+//82AAAAEAAAABQBAAB//v//GwAAABAAAAAXAQAAf/7//zYAAAAQAAAAGgEAAH/+ //8bAAAAEAAAAB0BAAB//v//NgAAABAAAAAgAQAAf/7//xsAAAAQAAAAIwEAAH/+//82AAAA EAAAACYBAAB//v//GwAAABAAAAApAQAAf/7//zYAAAAQAAAALAEAAH/+//8bAAAAEAAAAC8B AAB//v//NgAAABAAAAAyAQAAf/7//xsAAAAQAAAANQEAAH/+//82AAAAEAAAADgBAAB//v// GwAAABAAAAA7AQAAf/7//zYAAAAQAAAAPgEAAH/+//8bAAAAEAAAAEEBAAB//v//NgAAABAA AABEAQAAf/7//xsAAAAQAAAARwEAAH/+//82AAAAEAAAAEoBAAB//v//GwAAABAAAABNAQAA f/7//zYAAAAQAAAAUAEAAH/+//8bAAAAEAAAAFMBAAB//v//NgAAABAAAABWAQAAf/7//xsA AAAQAAAAWQEAAH/+//82AAAAEAAAAFwBAAB//v//GwAAABAAAABfAQAAf/7//zYAAAAQAAAA YgEAAH/+//8bAAAAEAAAAGUBAAB//v//NgAAABAAAABoAQAAf/7//xsAAAAQAAAAawEAAH/+ //82AAAAEAAAAG4BAAB//v//GwAAABAAAABxAQAAf/7//zYAAAAQAAAAdAEAAH/+//8bAAAA EAAAAHcBAAB//v//NgAAABAAAAB6AQAAf/7//xsAAAAQAAAAfQEAAH/+//82AAAAEAAAAIAB AAB//v//GwAAABAAAACDAQAAf/7//zYAAAAQAAAAhgEAAH/+//8bAAAAEAAAAIkBAAB//v// NgAAABAAAACMAQAAf/7//xsAAAAQAAAAjwEAAH/+//82AAAAEAAAAJIBAAB//v//GwAAABAA AACVAQAAf/7//zYAAAAQAAAAmAEAAH/+//8bAAAAEAAAAJsBAAB//v//NgAAABAAAACeAQAA f/7//xsAAAAQAAAAoQEAAH/+//82AAAAEAAAAKQBAAB//v//GwAAABAAAACnAQAAf/7//zYA AAAQAAAAqgEAAH/+//8bAAAAEAAAAK0BAAB//v//NgAAABAAAACwAQAAf/7//xsAAAAQAAAA swEAAH/+//82AAAAEAAAALYBAAB//v//GwAAABAAAAC5AQAAf/7//zYAAAAQAAAAvAEAAH/+ //8bAAAAEAAAAL8BAAB//v//NgAAABAAAADCAQAAf/7//xsAAAAQAAAAxQEAAH/+//82AAAA EAAAAMgBAAB//v//GwAAABAAAADLAQAAf/7//zYAAAAQAAAAzgEAAH/+//8bAAAAEAAAANEB AAB//v//NgAAABAAAADUAQAAf/7//xsAAAAQAAAA1wEAAH/+//82AAAAEAAAANoBAAB//v// GwAAABAAAADdAQAAf/7//zYAAAAQAAAA4AEAAH/+//8bAAAAEAAAAOMBAAB//v//NgAAABAA AADmAQAAf/7//xsAAAAQAAAA6QEAAH/+//82AAAAEAAAAOwBAAB//v//GwAAABAAAADvAQAA f/7//zYAAAAQAAAA8gEAAH/+//8bAAAAEAAAAPUBAAB//v//NgAAABAAAAD4AQAAf/7//xsA AAAQAAAA+wEAAH/+//82AAAAEAAAAP4BAAB//v//GwAAABAAAAABAgAAf/7//zYAAAAQAAAA BAIAAH/+//8bAAAAEAAAAAcCAAB//v//NgAAABAAAAAKAgAAf/7//xsAAAAQAAAADQIAAH/+ //82AAAAEAAAABACAAB//v//GwAAABAAAAATAgAAf/7//zYAAAAQAAAAFgIAAH/+//8bAAAA EAAAABkCAAB//v//NgAAABAAAAAcAgAAf/7//xsAAAAQAAAAHwIAAH/+//82AAAAEAAAACIC AAB//v//GwAAABAAAAAlAgAAf/7//zYAAAAQAAAAKAIAAH/+//8bAAAAEAAAACsCAAB//v// NgAAABAAAAAuAgAAf/7//xsAAAAQAAAAMQIAAH/+//82AAAAEAAAADQCAAB//v//GwAAABAA AAA3AgAAf/7//zYAAAAQAAAAOgIAAH/+//8bAAAAEAAAAD0CAAB//v//NgAAABAAAABAAgAA f/7//xsAAAAQAAAAQwIAAH/+//82AAAAEAAAAEYCAAB//v//GwAAABAAAABJAgAAf/7//zYA AAAQAAAATAIAAH/+//8bAAAAEAAAAE8CAAB//v//NgAAABAAAABSAgAAf/7//xsAAAAQAAAA VQIAAH/+//82AAAAEAAAAFgCAAB//v//GwAAABAAAABbAgAAf/7//zYAAAAQAAAAXgIAAH/+ //8bAAAAEAAAAGECAAB//v//NgAAABAAAABkAgAAf/7//xsAAAAQAAAAZwIAAH/+//82AAAA EAAAAGoCAAB//v//GwAAABAAAABtAgAAf/7//zYAAAAQAAAAcAIAAH/+//8bAAAAEAAAAHMC AAB//v//NgAAABAAAAB1AgAAf/7//zYAAAAQAAAAdQIAAID+//8bAAAAEAAAAHUCAACD/v// NgAAABAAAAB1AgAAhv7//xsAAAAQAAAAdQIAAIn+//82AAAAEAAAAHUCAACM/v//GwAAABAA AAB1AgAAj/7//zYAAAAQAAAAdQIAAJL+//8bAAAAEAAAAHUCAACV/v//NgAAABAAAAB1AgAA mP7//xsAAAAQAAAAdQIAAJv+//82AAAAEAAAAHUCAACe/v//GwAAABAAAAB1AgAAof7//zYA AAAQAAAAdQIAAKT+//8bAAAAEAAAAHUCAACn/v//NgAAABAAAAB1AgAAqv7//xsAAAAQAAAA cwIAAKv+//82AAAAEAAAAHACAACr/v//GwAAABAAAABtAgAAq/7//zYAAAAQAAAAagIAAKv+ //8bAAAAEAAAAGcCAACr/v//NgAAABAAAABkAgAAq/7//xsAAAAQAAAAYQIAAKv+//82AAAA EAAAAF4CAACr/v//GwAAABAAAABdAgAAq/7//xsAAAAQAAAAXQIAAKv+//82AAAAEAAAAGwC AACw/v//GwAAABAAAABdAgAAq/7//zYAAAAQAAAAbAIAAKb+//8SAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYA AAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAABaAAAA 7v7//zYAAAAQAAAAWgAAAOv+//8bAAAAEAAAAFoAAADo/v//NgAAABAAAABaAAAA5f7//xsA AAAQAAAAWgAAAOL+//82AAAAEAAAAFoAAADf/v//GwAAABAAAABaAAAA3P7//zYAAAAQAAAA WgAAANn+//8bAAAAEAAAAFoAAADW/v//NgAAABAAAABaAAAA0/7//xsAAAAQAAAAWgAAAND+ //82AAAAEAAAAFoAAADN/v//GwAAABAAAABaAAAAyv7//zYAAAAQAAAAWgAAAMf+//8bAAAA EAAAAFoAAADE/v//NgAAABAAAABaAAAAwf7//xsAAAAQAAAAWgAAAL7+//82AAAAEAAAAFoA AAC7/v//GwAAABAAAABaAAAAuP7//zYAAAAQAAAAWgAAALX+//8bAAAAEAAAAFoAAACy/v// NgAAABAAAABaAAAAr/7//xsAAAAQAAAAWgAAAKz+//82AAAAEAAAAFoAAACp/v//GwAAABAA AABaAAAApv7//zYAAAAQAAAAWgAAAKP+//8bAAAAEAAAAFoAAACg/v//NgAAABAAAABaAAAA nf7//xsAAAAQAAAAWgAAAJr+//82AAAAEAAAAFoAAACX/v//GwAAABAAAABaAAAAlP7//zYA AAAQAAAAWgAAAJH+//8bAAAAEAAAAFoAAACO/v//NgAAABAAAABaAAAAi/7//xsAAAAQAAAA WgAAAIj+//82AAAAEAAAAFoAAACF/v//GwAAABAAAABaAAAAgv7//zYAAAAQAAAAWgAAAH/+ //8bAAAAEAAAAF0AAAB//v//NgAAABAAAABgAAAAf/7//xsAAAAQAAAAYwAAAH/+//82AAAA EAAAAGYAAAB//v//GwAAABAAAABpAAAAf/7//zYAAAAQAAAAbAAAAH/+//8bAAAAEAAAAG8A AAB//v//NgAAABAAAAByAAAAf/7//xsAAAAQAAAAdQAAAH/+//82AAAAEAAAAHgAAAB//v// GwAAABAAAAB7AAAAf/7//zYAAAAQAAAAfgAAAH/+//8bAAAAEAAAAIEAAAB//v//NgAAABAA AACEAAAAf/7//xsAAAAQAAAAhwAAAH/+//82AAAAEAAAAIoAAAB//v//GwAAABAAAACNAAAA f/7//zYAAAAQAAAAkAAAAH/+//8bAAAAEAAAAJMAAAB//v//NgAAABAAAACWAAAAf/7//xsA AAAQAAAAmQAAAH/+//82AAAAEAAAAJwAAAB//v//GwAAABAAAACfAAAAf/7//zYAAAAQAAAA ogAAAH/+//8bAAAAEAAAAKUAAAB//v//NgAAABAAAACoAAAAf/7//xsAAAAQAAAAqwAAAH/+ //82AAAAEAAAAK4AAAB//v//GwAAABAAAACxAAAAf/7//zYAAAAQAAAAtAAAAH/+//8bAAAA EAAAALcAAAB//v//NgAAABAAAAC6AAAAf/7//xsAAAAQAAAAvQAAAH/+//82AAAAEAAAAMAA AAB//v//GwAAABAAAADDAAAAf/7//zYAAAAQAAAAxgAAAH/+//8bAAAAEAAAAMkAAAB//v// NgAAABAAAADMAAAAf/7//xsAAAAQAAAAzwAAAH/+//82AAAAEAAAANIAAAB//v//GwAAABAA AADVAAAAf/7//zYAAAAQAAAA2AAAAH/+//8bAAAAEAAAANsAAAB//v//NgAAABAAAADeAAAA f/7//xsAAAAQAAAA4QAAAH/+//82AAAAEAAAAOQAAAB//v//GwAAABAAAADnAAAAf/7//zYA AAAQAAAA6gAAAH/+//8bAAAAEAAAAO0AAAB//v//NgAAABAAAADwAAAAf/7//xsAAAAQAAAA 8wAAAH/+//82AAAAEAAAAPYAAAB//v//GwAAABAAAAD5AAAAf/7//zYAAAAQAAAA/AAAAH/+ //8bAAAAEAAAAP8AAAB//v//NgAAABAAAAACAQAAf/7//xsAAAAQAAAABQEAAH/+//82AAAA EAAAAAgBAAB//v//GwAAABAAAAALAQAAf/7//zYAAAAQAAAADgEAAH/+//8bAAAAEAAAABEB AAB//v//NgAAABAAAAAUAQAAf/7//xsAAAAQAAAAFwEAAH/+//82AAAAEAAAABoBAAB//v// GwAAABAAAAAdAQAAf/7//zYAAAAQAAAAIAEAAH/+//8bAAAAEAAAACMBAAB//v//NgAAABAA AAAmAQAAf/7//xsAAAAQAAAAKQEAAH/+//82AAAAEAAAACwBAAB//v//GwAAABAAAAAvAQAA f/7//zYAAAAQAAAAMgEAAH/+//8bAAAAEAAAADUBAAB//v//NgAAABAAAAA4AQAAf/7//xsA AAAQAAAAOwEAAH/+//82AAAAEAAAAD4BAAB//v//GwAAABAAAABBAQAAf/7//zYAAAAQAAAA RAEAAH/+//8bAAAAEAAAAEcBAAB//v//NgAAABAAAABKAQAAf/7//xsAAAAQAAAATQEAAH/+ //82AAAAEAAAAFABAAB//v//GwAAABAAAABTAQAAf/7//zYAAAAQAAAAVgEAAH/+//8bAAAA EAAAAFkBAAB//v//NgAAABAAAABcAQAAf/7//xsAAAAQAAAAXwEAAH/+//82AAAAEAAAAGIB AAB//v//GwAAABAAAABlAQAAf/7//zYAAAAQAAAAaAEAAH/+//8bAAAAEAAAAGsBAAB//v// NgAAABAAAABuAQAAf/7//xsAAAAQAAAAcQEAAH/+//82AAAAEAAAAHQBAAB//v//GwAAABAA AAB3AQAAf/7//zYAAAAQAAAAegEAAH/+//8bAAAAEAAAAH0BAAB//v//NgAAABAAAACAAQAA f/7//xsAAAAQAAAAgwEAAH/+//82AAAAEAAAAIYBAAB//v//GwAAABAAAACJAQAAf/7//zYA AAAQAAAAjAEAAH/+//8bAAAAEAAAAI8BAAB//v//NgAAABAAAACSAQAAf/7//xsAAAAQAAAA lQEAAH/+//82AAAAEAAAAJgBAAB//v//GwAAABAAAACbAQAAf/7//zYAAAAQAAAAngEAAH/+ //8bAAAAEAAAAKEBAAB//v//NgAAABAAAACkAQAAf/7//xsAAAAQAAAApwEAAH/+//82AAAA EAAAAKoBAAB//v//GwAAABAAAACtAQAAf/7//zYAAAAQAAAAsAEAAH/+//8bAAAAEAAAALMB AAB//v//NgAAABAAAAC2AQAAf/7//xsAAAAQAAAAuQEAAH/+//82AAAAEAAAALwBAAB//v// GwAAABAAAAC/AQAAf/7//zYAAAAQAAAAwgEAAH/+//8bAAAAEAAAAMUBAAB//v//NgAAABAA AADIAQAAf/7//xsAAAAQAAAAywEAAH/+//82AAAAEAAAAM4BAAB//v//GwAAABAAAADRAQAA f/7//zYAAAAQAAAA1AEAAH/+//8bAAAAEAAAANcBAAB//v//NgAAABAAAADaAQAAf/7//xsA AAAQAAAA3QEAAH/+//82AAAAEAAAAOABAAB//v//GwAAABAAAADjAQAAf/7//zYAAAAQAAAA 5gEAAH/+//8bAAAAEAAAAOkBAAB//v//NgAAABAAAADsAQAAf/7//xsAAAAQAAAA7wEAAH/+ //82AAAAEAAAAPIBAAB//v//GwAAABAAAAD1AQAAf/7//zYAAAAQAAAA+AEAAH/+//8bAAAA EAAAAPsBAAB//v//NgAAABAAAAD+AQAAf/7//xsAAAAQAAAAAQIAAH/+//82AAAAEAAAAAQC AAB//v//GwAAABAAAAAHAgAAf/7//zYAAAAQAAAACgIAAH/+//8bAAAAEAAAAA0CAAB//v// NgAAABAAAAAQAgAAf/7//xsAAAAQAAAAEwIAAH/+//82AAAAEAAAABYCAAB//v//GwAAABAA AAAZAgAAf/7//zYAAAAQAAAAHAIAAH/+//8bAAAAEAAAAB8CAAB//v//NgAAABAAAAAiAgAA f/7//xsAAAAQAAAAJQIAAH/+//82AAAAEAAAACgCAAB//v//GwAAABAAAAArAgAAf/7//zYA AAAQAAAALgIAAH/+//8bAAAAEAAAADECAAB//v//NgAAABAAAAA0AgAAf/7//xsAAAAQAAAA NwIAAH/+//82AAAAEAAAADoCAAB//v//GwAAABAAAAA9AgAAf/7//zYAAAAQAAAAQAIAAH/+ //8bAAAAEAAAAEMCAAB//v//NgAAABAAAABGAgAAf/7//xsAAAAQAAAASQIAAH/+//82AAAA EAAAAEwCAAB//v//GwAAABAAAABPAgAAf/7//zYAAAAQAAAAUgIAAH/+//8bAAAAEAAAAFUC AAB//v//NgAAABAAAABYAgAAf/7//xsAAAAQAAAAWwIAAH/+//82AAAAEAAAAF4CAAB//v// GwAAABAAAABhAgAAf/7//zYAAAAQAAAAZAIAAH/+//8bAAAAEAAAAGcCAAB//v//NgAAABAA AABqAgAAf/7//xsAAAAQAAAAbQIAAH/+//82AAAAEAAAAHACAAB//v//GwAAABAAAABzAgAA f/7//zYAAAAQAAAAdQIAAH/+//82AAAAEAAAAHUCAACA/v//GwAAABAAAAB1AgAAg/7//zYA AAAQAAAAdQIAAIb+//8bAAAAEAAAAHUCAACJ/v//NgAAABAAAAB1AgAAjP7//xsAAAAQAAAA dQIAAI/+//82AAAAEAAAAHUCAACS/v//GwAAABAAAAB1AgAAlf7//zYAAAAQAAAAdQIAAJj+ //8bAAAAEAAAAHUCAACb/v//NgAAABAAAAB1AgAAnv7//xsAAAAQAAAAdQIAAKH+//82AAAA EAAAAHUCAACk/v//GwAAABAAAAB1AgAAp/7//zYAAAAQAAAAdQIAAKr+//8bAAAAEAAAAHUC AACt/v//NgAAABAAAAB1AgAAsP7//xsAAAAQAAAAdQIAALP+//82AAAAEAAAAHUCAAC2/v// GwAAABAAAAB1AgAAuf7//zYAAAAQAAAAdQIAALz+//8bAAAAEAAAAHUCAAC//v//NgAAABAA AAB1AgAAwv7//xsAAAAQAAAAdQIAAMX+//82AAAAEAAAAHUCAADI/v//GwAAABAAAAB1AgAA y/7//zYAAAAQAAAAdQIAAM7+//8bAAAAEAAAAHUCAADR/v//NgAAABAAAAB1AgAA1P7//xsA AAAQAAAAdQIAANf+//82AAAAEAAAAHUCAADa/v//GwAAABAAAAB1AgAA3f7//zYAAAAQAAAA dQIAAOD+//8bAAAAEAAAAHUCAADj/v//NgAAABAAAAB1AgAA5v7//xsAAAAQAAAAdQIAAOn+ //82AAAAEAAAAHUCAADs/v//GwAAABAAAAB1AgAA7/7//zYAAAAQAAAAdQIAAPL+//8bAAAA EAAAAHUCAAD1/v//NgAAABAAAAB1AgAA+P7//xsAAAAQAAAAdQIAAPv+//82AAAAEAAAAHUC AAD+/v//GwAAABAAAAB1AgAAAf///zYAAAAQAAAAdQIAAAT///8bAAAAEAAAAHUCAAAH//// NgAAABAAAAB1AgAACv///xsAAAAQAAAAdQIAAA3///82AAAAEAAAAHUCAAAQ////GwAAABAA AAB1AgAAE////zYAAAAQAAAAdQIAABb///8bAAAAEAAAAHUCAAAZ////NgAAABAAAAB1AgAA HP///xsAAAAQAAAAdQIAAB////82AAAAEAAAAHUCAAAi////GwAAABAAAAB1AgAAJf///zYA AAAQAAAAdQIAACj///8bAAAAEAAAAHUCAAAr////NgAAABAAAAB1AgAALv///xsAAAAQAAAA dQIAADH///82AAAAEAAAAHUCAAA0////GwAAABAAAAB1AgAAN////zYAAAAQAAAAdQIAADr/ //8bAAAAEAAAAHUCAAA9////NgAAABAAAAB1AgAAQP///xsAAAAQAAAAdQIAAEP///82AAAA EAAAAHUCAABG////GwAAABAAAAB1AgAASf///zYAAAAQAAAAdQIAAEz///8bAAAAEAAAAHUC AABP////NgAAABAAAAB1AgAAUf///zYAAAAQAAAAdAIAAFH///8bAAAAEAAAAHECAABR//// NgAAABAAAABuAgAAUf///xsAAAAQAAAAawIAAFH///82AAAAEAAAAGgCAABR////GwAAABAA AABlAgAAUf///zYAAAAQAAAAYgIAAFH///8bAAAAEAAAAF8CAABR////NgAAABAAAABdAgAA UP///xsAAAAQAAAAXQIAAFD///8bAAAAEAAAAF0CAABQ////NgAAABAAAABsAgAAVv///xsA AAAQAAAAXQIAAFD///82AAAAEAAAAGwCAABM////EgAAAAwAAAACAAAAGQAAAAwAAAD///8A EgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJgAAABwA AAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAMAEAAA7///82AAAA EAAAADMBAAAO////GwAAABAAAAA2AQAADv///zYAAAAQAAAAOQEAAA7///8bAAAAEAAAADwB AAAO////NgAAABAAAAA/AQAADv///xsAAAAQAAAAQgEAAA7///82AAAAEAAAAEUBAAAO//// GwAAABAAAABIAQAADv///zYAAAAQAAAASwEAAA7///8bAAAAEAAAAE4BAAAO////NgAAABAA AABRAQAADv///xsAAAAQAAAAVAEAAA7///82AAAAEAAAAFcBAAAO////GwAAABAAAABaAQAA Dv///zYAAAAQAAAAXQEAAA7///8bAAAAEAAAAF8BAAAN////NgAAABAAAABfAQAACv///xsA AAAQAAAAXwEAAAf///82AAAAEAAAAF8BAAAE////GwAAABAAAABfAQAAAf///zYAAAAQAAAA XwEAAP7+//8bAAAAEAAAAF8BAAD7/v//NgAAABAAAABfAQAA+P7//xsAAAAQAAAAXwEAAPX+ //82AAAAEAAAAF8BAADy/v//GwAAABAAAABfAQAA7/7//zYAAAAQAAAAXwEAAOz+//8bAAAA EAAAAF8BAADp/v//NgAAABAAAABfAQAA5v7//xsAAAAQAAAAXwEAAOP+//82AAAAEAAAAF8B AADg/v//GwAAABAAAABfAQAA3f7//zYAAAAQAAAAXwEAANr+//8bAAAAEAAAAF8BAADX/v// NgAAABAAAABfAQAA1P7//xsAAAAQAAAAXwEAANH+//82AAAAEAAAAF8BAADO/v//GwAAABAA AABfAQAAy/7//zYAAAAQAAAAXwEAAMj+//8bAAAAEAAAAF8BAADF/v//NgAAABAAAABfAQAA wv7//xsAAAAQAAAAXwEAAL/+//82AAAAEAAAAF8BAAC8/v//GwAAABAAAABfAQAAuf7//zYA AAAQAAAAXwEAALb+//8bAAAAEAAAAF8BAACz/v//NgAAABAAAABfAQAAsP7//xsAAAAQAAAA YgEAALD+//82AAAAEAAAAGUBAACw/v//GwAAABAAAABoAQAAsP7//zYAAAAQAAAAawEAALD+ //8bAAAAEAAAAG4BAACw/v//NgAAABAAAABxAQAAsP7//xsAAAAQAAAAdAEAALD+//82AAAA EAAAAHUBAACw/v//GwAAABAAAAB1AQAAsP7//xsAAAAQAAAAdQEAALD+//82AAAAEAAAAGcB AACs/v//GwAAABAAAAB1AQAAsP7//zYAAAAQAAAAZwEAALX+//8SAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYA AAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAAAwAQAA Dv///zYAAAAQAAAAMwEAAA7///8bAAAAEAAAADYBAAAO////NgAAABAAAAA5AQAADv///xsA AAAQAAAAPAEAAA7///82AAAAEAAAAD8BAAAO////GwAAABAAAABCAQAADv///zYAAAAQAAAA RQEAAA7///8bAAAAEAAAAEgBAAAO////NgAAABAAAABLAQAADv///xsAAAAQAAAATgEAAA7/ //82AAAAEAAAAFEBAAAO////GwAAABAAAABUAQAADv///zYAAAAQAAAAVwEAAA7///8bAAAA EAAAAFoBAAAO////NgAAABAAAABdAQAADv///xsAAAAQAAAAXwEAAA3///82AAAAEAAAAF8B AAAK////GwAAABAAAABfAQAAB////zYAAAAQAAAAXwEAAAT///8bAAAAEAAAAF8BAAAD//// NgAAABAAAABfAQAABv///xsAAAAQAAAAXwEAAAn///82AAAAEAAAAF8BAAAM////GwAAABAA AABfAQAAD////zYAAAAQAAAAXwEAABL///8bAAAAEAAAAF8BAAAV////NgAAABAAAABfAQAA GP///xsAAAAQAAAAXwEAABv///82AAAAEAAAAF8BAAAb////NgAAABAAAABfAQAAHv///xsA AAAQAAAAXwEAACH///82AAAAEAAAAF8BAAAk////GwAAABAAAABfAQAAJ////zYAAAAQAAAA XwEAACr///8bAAAAEAAAAF8BAAAt////NgAAABAAAABfAQAAMP///xsAAAAQAAAAXwEAADP/ //82AAAAEAAAAF8BAAA2////GwAAABAAAABfAQAAOf///zYAAAAQAAAAXwEAADz///8bAAAA EAAAAF8BAAA/////NgAAABAAAABfAQAAQv///xsAAAAQAAAAXwEAAEX///82AAAAEAAAAF8B AABI////GwAAABAAAABfAQAAS////zYAAAAQAAAAXwEAAE7///8bAAAAEAAAAF8BAABR//// NgAAABAAAABfAQAAVP///xsAAAAQAAAAXwEAAFf///82AAAAEAAAAF8BAABZ////NgAAABAA AABgAQAAWf///xsAAAAQAAAAYwEAAFn///82AAAAEAAAAGYBAABZ////GwAAABAAAABpAQAA Wf///zYAAAAQAAAAbAEAAFn///8bAAAAEAAAAG8BAABZ////NgAAABAAAAByAQAAWf///xsA AAAQAAAAdQEAAFn///82AAAAEAAAAHgBAABZ////GwAAABAAAAB4AQAAWf///xsAAAAQAAAA eAEAAFn///82AAAAEAAAAGoBAABV////GwAAABAAAAB4AQAAWf///zYAAAAQAAAAagEAAF7/ //8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAGAAAAGwAAABAAAAChAgAAzf///zYAAAAQAAAAoQIAALr///82AAAAEAAAACACAAC6//// GwAAABAAAAAgAgAAuv///xsAAAAQAAAAIAIAALr///82AAAAEAAAAC8CAADA////GwAAABAA AAAgAgAAuv///zYAAAAQAAAALwIAALT///8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYA AAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAABZAAAAM////zYAAAAQAAAA WQAAAIH///82AAAAEAAAAMEAAACB////NgAAABAAAADBAAAAs////xsAAAAQAAAAwQAAALP/ //9WAAAAKAAAAKQAAABMAAAArwAAAFsAAAADAAAAxwCk/7wApP/BALP/EgAAAAwAAAACAAAA GQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwA AAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAA WQAAADP///82AAAAEAAAAFkAAACB////NgAAABAAAADBAAAAgf///zYAAAAQAAAAwQAAALP/ //8bAAAAEAAAAMEAAACz////VgAAACgAAACkAAAATAAAAK8AAABbAAAAAwAAAMcApP+8AKT/ wQCz/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUA AAAMAAAAAwAAACgAAAAMAAAABgAAACUAAAAMAAAADQAAgCgAAAAMAAAAAQAAACgAAAAMAAAA BwAAACUAAAAMAAAAAAAAgCgAAAAMAAAAAgAAACUAAAAMAAAABwAAgCgAAAAMAAAAAwAAAA4A AAAUAAAAAAAAABAAAAAUAAAA</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		13		GoF Creational Patterns		Builder				This pattern separates the construction of a complex object from its representation so that the same construction process can create different representations.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:00:54">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_6FEA86FA_984B_456e_B909_30A12BD7429B">
			<UML:Namespace.ownedElement>
				<UML:Class name="Director" xmi.id="EAID_F74FEFB7_37CD_481e_B218_557CD83C8FD1" visibility="public" namespace="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class constructs an object using the Builder interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:46:10"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:53:31"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Builder"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Construct" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="for all objects in structure {
     builder-&gt;BuildPart()
}"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{A2043B08-1F08-4d85-93F8-5D2AE85291C3}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_DA9DE981_28A2_4662_872D_14DACB930A67" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-builder"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="builder" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_F74FEFB7_37CD_481e_B218_557CD83C8FD1">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_BDA5C1BE_CBE6_4443_92A7_8E63BB297599">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Builder" xmi.id="EAID_BDA5C1BE_CBE6_4443_92A7_8E63BB297599" visibility="public" namespace="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class specifies an abstract interface for creating parts of a Product object."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:46:54"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:52:54"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Builder"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="BuildPart" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{DC1CCD67-94B2-4f53-84E9-2FA8B32A44A5}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_C2933154_428B_4b5e_A859_435CA324FB19" supertype="EAID_BDA5C1BE_CBE6_4443_92A7_8E63BB297599" xmi.id="EAID_6E5369BC_7697_47b3_98D1_B8A4754041FA" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteBuilder" xmi.id="EAID_C2933154_428B_4b5e_A859_435CA324FB19" visibility="public" namespace="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) constructs and assembles parts of the product by implementing the Builder interface, (b) defines and keeps track of the representation it creates, and (c) provides an interface for retrieving the product."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:47:39"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:53:24"/>
						<UML:TaggedValue tag="gentype" value="C++"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Builder"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="BuildPart" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{DC1CCD67-94B2-4f53-84E9-2FA8B32A44A5}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="GetResult" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="void"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{67C3BD4E-86A4-46f4-AFFB-3135324B0A14}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="void"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-86A4-46f4-AFFB-3135324B0A14}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Dependency client="EAID_C2933154_428B_4b5e_A859_435CA324FB19" supplier="EAID_0C3116B8_941B_4e96_950B_2096050B2114" xmi.id="EAID_E376F934_2B6B_4033_95E8_FB168C30DD7A" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Class name="Product" xmi.id="EAID_0C3116B8_941B_4e96_950B_2096050B2114" visibility="public" namespace="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) represents the complex object under construction. ConcreteBuilder builds the product's internal representation and defines the process by which it's assembled, and (b) includes classes that define the constituent parts, including interfaces for assembling the parts into the final result."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 16:47:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-14 16:53:53"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Builder"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Builder" xmi.id="EAID_3D367568_4FCA_4f9b_9F1A_0BE047E5E24A" diagramType="ClassDiagram" owner="EAPK_3D367568_4FCA_4f9b_9F1A_0BE047E5E24A" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern separates the construction of a complex object from its representation so that the same construction process can create different representations."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 10:23:22"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-14 16:54:04"/>
				<UML:TaggedValue tag="package" value="EAPK_6FEA86FA_984B_456e_B909_30A12BD7429B"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=395;Top=207;Right=485;Bottom=238;imgL=389;imgT=159;imgR=479;imgB=190;" subject="EAID_0C3116B8_941B_4e96_950B_2096050B2114" seqno="1" style="DUID=FC89B253;LBL=;"/>
				<UML:DiagramElement geometry="Left=236;Top=205;Right=344;Bottom=275;imgL=230;imgT=157;imgR=338;imgB=227;" subject="EAID_C2933154_428B_4b5e_A859_435CA324FB19" seqno="2" style="DUID=7D0C8823;LBL=;"/>
				<UML:DiagramElement geometry="Left=236;Top=84;Right=326;Bottom=154;imgL=230;imgT=36;imgR=320;imgB=106;" subject="EAID_BDA5C1BE_CBE6_4443_92A7_8E63BB297599" seqno="3" style="DUID=E7DB7B2B;LBL=;"/>
				<UML:DiagramElement geometry="Left=16;Top=58;Right=159;Bottom=184;imgL=10;imgT=10;imgR=153;imgB=136;" subject="EAID_F74FEFB7_37CD_481e_B218_557CD83C8FD1" seqno="4" style="DUID=39839D73;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=2;$LLB=;LLT=CX=46:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_DA9DE981_28A2_4662_872D_14DACB930A67" style="Mode=2;EOID=E7DB7B2B;SOID=39839D73;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_6E5369BC_7697_47b3_98D1_B8A4754041FA" style="Mode=2;EOID=E7DB7B2B;SOID=7D0C8823;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_E376F934_2B6B_4033_95E8_FB168C30DD7A" style="Mode=2;EOID=FC89B253;SOID=7D0C8823;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_F74FEFB7_37CD_481e_B218_557CD83C8FD1" name="Director" UMLType="Class"/>
		<EAStub xmi.id="EAID_BDA5C1BE_CBE6_4443_92A7_8E63BB297599" name="Builder" UMLType="Class"/>
		<EAStub xmi.id="EAID_C2933154_428B_4b5e_A859_435CA324FB19" name="ConcreteBuilder" UMLType="Class"/>
		<EAStub xmi.id="EAID_0C3116B8_941B_4e96_950B_2096050B2114" name="Product" UMLType="Class"/>
		<UMLPattern name="Builder" category="GoF Creational Patterns" version="2.0" notes="This pattern separates the construction of a complex object from its representation so that the same construction process can create different representations.">
			<UMLPattern.PromptList>
				<Element name="Product:Class" guid="EAID_0C3116B8_941B_4e96_950B_2096050B2114" id="64" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) represents the complex object under construction. ConcreteBuilder builds the product's internal representation and defines the process by which it's assembled, and (b) includes classes that define the constituent parts, including interfaces for assembling the parts into the final result.">
						<![CDATA[This class (a) represents the complex object under construction. ConcreteBuilder builds the product's internal representation and defines the process by which it's assembled, and (b) includes classes that define the constituent parts, including interfaces for assembling the parts into the final result.]]>
					</Comment>
				</Element>
				<Element name="ConcreteBuilder:Class" guid="EAID_C2933154_428B_4b5e_A859_435CA324FB19" id="63" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) constructs and assembles parts of the product by implementing the Builder interface, (b) defines and keeps track of the representation it creates, and (c) provides an interface for retrieving the product.">
						<![CDATA[This class (a) constructs and assembles parts of the product by implementing the Builder interface, (b) defines and keeps track of the representation it creates, and (c) provides an interface for retrieving the product.]]>
					</Comment>
				</Element>
				<Element name="Builder:Class" guid="EAID_BDA5C1BE_CBE6_4443_92A7_8E63BB297599" id="62" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class specifies an abstract interface for creating parts of a Product object.">
						<![CDATA[This class specifies an abstract interface for creating parts of a Product object.]]>
					</Comment>
				</Element>
				<Element name="Director:Class" guid="EAID_F74FEFB7_37CD_481e_B218_557CD83C8FD1" id="61" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class constructs an object using the Builder interface.">
						<![CDATA[This class constructs an object using the Builder interface.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="13753" cy="6711">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 AwAAAAYAAAAFAAAAAwAAAAMAAAADAAAAGAAAAAwAAACAgIAAHgAAABgAAAAtAAAAlv///58A AABI////SwAAABAAAAAAAAAABQAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAA AAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sEtAAAAlv///wEA AABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtuk4AAAAWAAAADAAAAAAAAABUAAAA wAAAACcAAAA6AAAAdQAAAEYAAAABAAAAAADhQQCQ4sEtAAAAlv///xMAAABMAAAAAAAAAAAA AAAAAAAA//////////90AAAAZgBvAHIAIABhAGwAbAAgAG8AYgBqAGUAYwB0AHMAIABpAG4A IACtugMAAAAGAAAAAwAAAAMAAAAGAAAAAwAAAAMAAAADAAAABgAAAAYAAAADAAAABgAAAAUA AAADAAAABAAAAAMAAAADAAAABgAAAAMAAAAbAAAAEAAAAJ4AAACr////FgAAAAwAAAAAAAAA FgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAA AAD//////////wEAAAAAAOFBAJDiwS0AAACJ////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAA AAAAAFAAAAADAK26LQAAABYAAAAMAAAAAAAAAFQAAACIAAAAJwAAAEcAAABRAAAAUwAAAAEA AAAAAOFBAJDiwS0AAACJ////CgAAAEwAAAAAAAAAAAAAAAAAAAD//////////2AAAABzAHQA cgB1AGMAdAB1AHIAZQAgAAQAAAADAAAAAwAAAAYAAAAFAAAAAwAAAAYAAAADAAAABgAAAAMA AABUAAAAVAAAAFEAAABHAAAAVAAAAFMAAAABAAAAAADhQQCQ4sFXAAAAif///wEAAABMAAAA AAAAAAAAAAAAAAAA//////////9QAAAAewCtugMAAAAbAAAAEAAAAJ4AAACr////FgAAAAwA AAAAAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAA AAAAAAAAAAD//////////wEAAAAAAOFBAJDiwS0AAAB8////AQAAAEwAAAAUAAAAAAAAAAAA AAAAAAAAAAAAAFAAAAADAK26awAAABYAAAAMAAAAAAAAAFQAAACUAAAAJwAAAFQAAABXAAAA YAAAAAEAAAAAAOFBAJDiwS0AAAB8////DAAAAEwAAAAAAAAAAAAAAAAAAAD//////////2QA AAAgACAAIAAgACAAYgB1AGkAbABkAGUAcgADAAAAAwAAAAMAAAADAAAAAwAAAAYAAAAGAAAA AwAAAAMAAAAGAAAABgAAAAMAAABUAAAAVAAAAFcAAABUAAAAWgAAAGAAAAABAAAAAADhQQCQ 4sFdAAAAfP///wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAALQCtugMAAABUAAAA VAAAAFoAAABUAAAAYAAAAGAAAAABAAAAAADhQQCQ4sFgAAAAfP///wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAPgCtugYAAABUAAAAhAAAAGAAAABUAAAAjAAAAGAAAAABAAAA AADhQQCQ4sFmAAAAfP///wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAAQgB1AGkA bABkAFAAYQByAHQArboHAAAABgAAAAMAAAADAAAABgAAAAcAAAAGAAAAAwAAAAMAAABUAAAA WAAAAIwAAABUAAAAkgAAAGAAAAABAAAAAADhQQCQ4sGSAAAAfP///wIAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAKAApAAMAAAADAAAAGwAAABAAAACeAAAAq////xYAAAAMAAAA AAAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAA AAAAAAAA//////////8BAAAAAADhQQCQ4sEtAAAAb////wEAAABMAAAAFAAAAAAAAAAAAAAA AAAAAAAAAABQAAAAAwCtugMAAAAWAAAADAAAAAAAAABUAAAAVAAAACcAAABhAAAAKgAAAG0A AAABAAAAAADhQQCQ4sEtAAAAb////wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA fQCtugMAAAAbAAAAEAAAAJ4AAACr////FgAAAAwAAAAAAAAAGAAAAAwAAAAAQEAAGAAAAAwA AAAAAAAAJwAAABgAAAAEAAAAAAAAAMC/wAAAAAAAJQAAAAwAAAAEAAAAJgAAABwAAAAGAAAA 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 //82AAAAEAAAAMYAAACJ////NgAAABAAAADGAAAAif///zYAAAAQAAAA7AAAAIn///9WAAAA LAAAAJkAAABDAAAArQAAAEsAAAAEAAAAqQCN/58Aif+oAIX/swCJ/xsAAAAQAAAA7AAAAIn/ //8bAAAAEAAAAOwAAACJ////NgAAABAAAADeAAAAhP///xsAAAAQAAAA7AAAAIn///82AAAA EAAAAN4AAACP////EgAAAAwAAAACAAAAGQAAAAwAAAD///8AUgAAAHABAAAIAAAA9v///wAA AAAAAAAAAAAAAAAAAAAAAAABAAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjm EgAAAAAArN4SAPgnIRAwcSUQ//////jcEgDvKSEQHQAAAAAAAAABAAAAUAAAAHi0CwNc25V8 AABSAqzblXwIAAAAAABSAgAAUgJ4tAsDJN0AABHNlnwAABIAAAAAAPDdEgAY7pB8yGqSfAAA //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAETdEgCR1kJfAAABAAjrEgC83BIA AAAAALDdEgAAAJB8cAWRfEAAAACICwsDXNuVfNALCwOs25V8AAAAAAAAAAAAAFICiAsLA2R2 AAgAAAAA2OYSAAAAAAA62aABZHYACAAAAAAlAAAADAAAAAgAAABUAAAAfAAAALAAAAA1AAAA 1AAAAEEAAAABAAAAAADhQQCQ4sG2AAAAm////wgAAABMAAAAAAAAAAAAAAAAAAAA//////// //9cAAAALQBiAHUAaQBsAGQAZQByAAMAAAAGAAAABgAAAAMAAAADAAAABgAAAAYAAAADAAAA JQAAAAwAAAABAAAAKAAAAAwAAAAIAAAAEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwA AAADAAAAKAAAAAwAAAAHAAAAJgAAABwAAAAHAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAA BwAAABsAAAAQAAAAGQEAADP///82AAAAEAAAABkBAABN////NgAAABAAAAAZAQAATf///zYA AAAQAAAAGQEAAGb///8bAAAAEAAAABkBAABm////VgAAACgAAAAOAQAAagAAABkBAAB5AAAA AwAAAB8BV/8UAVf/GQFm/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkA AAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABwAAACYAAAAcAAAABwAAAAAAAAABAAAA AAAAAAAAAAAlAAAADAAAAAcAAAAbAAAAEAAAAFgBAAAi////NgAAABAAAABbAQAAIv///xsA AAAQAAAAXgEAACL///82AAAAEAAAAGEBAAAi////GwAAABAAAABkAQAAIv///zYAAAAQAAAA ZwEAACL///8bAAAAEAAAAGoBAAAi////NgAAABAAAABtAQAAIv///xsAAAAQAAAAcAEAACL/ //82AAAAEAAAAHIBAAAi////NgAAABAAAAByAQAAIv///zYAAAAQAAAAcwEAACL///8bAAAA EAAAAHYBAAAi////NgAAABAAAAB5AQAAIv///xsAAAAQAAAAfAEAACL///82AAAAEAAAAH8B AAAi////GwAAABAAAACCAQAAIv///zYAAAAQAAAAhQEAACL///8bAAAAEAAAAIgBAAAi//// NgAAABAAAACLAQAAIv///xsAAAAQAAAAiwEAACL///8bAAAAEAAAAIsBAAAi////NgAAABAA AAB9AQAAHv///xsAAAAQAAAAiwEAACL///82AAAAEAAAAH0BAAAn////EgAAAAwAAAACAAAA GQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwA AAAHAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwAAAAFAAAAJQAAAAwAAAAAAACA KAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAADgAAABQAAAAAAAAAEAAAABQA AAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		14		GoF Creational Patterns		Factory Method				This pattern defines an interface for creating an object, but lets subclasses decide which class to instantiate. It lets a class defer instantiation to subclasses.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:18:20">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E">
			<UML:Namespace.ownedElement>
				<UML:Class name="Product" xmi.id="EAID_21764BEE_68B6_4e57_A107_21C931F67900" visibility="public" namespace="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the interface of objects the factory method creates."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:27:51"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 13:55:14"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Factory Method"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Generalization subtype="EAID_1D4E1A09_A36A_413b_8870_A2447D14122F" supertype="EAID_21764BEE_68B6_4e57_A107_21C931F67900" xmi.id="EAID_FC20FED8_B6C4_4041_AB53_A524363B5ABD" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteProduct" xmi.id="EAID_1D4E1A09_A36A_413b_8870_A2447D14122F" visibility="public" namespace="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the Product interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:28:01"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 13:52:51"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Factory Method"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Dependency client="EAID_77ED1DBF_5BFE_4a90_87B4_CA081A27B4D7" supplier="EAID_1D4E1A09_A36A_413b_8870_A2447D14122F" xmi.id="EAID_D19C849B_696E_4ce8_9139_190BF5EC1937" visibility="public">
					<UML:ModelElement.stereotype>
						<UML:Stereotype name="instantiate"/>
					</UML:ModelElement.stereotype>
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Dependency"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="stereotype" value="instantiate"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Dependency>
				<UML:Class name="Creator" xmi.id="EAID_047DFC9B_568E_4d1b_A9D8_14B5CE958556" visibility="public" namespace="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) declares the factory method, which returns an object of type Product. Creator may also define a default implementation of the factory method that returns a default ConcreteProduct object, and (b) may call the factory method to create a Product object."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:28:25"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 13:54:46"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Factory Method"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="FactoryMethod" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{C46BD329-9A64-4005-89D3-598D81DA032E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="AnOperation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{4B6DC7F8-7C5F-4e2d-B717-F663B70A434D}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_77ED1DBF_5BFE_4a90_87B4_CA081A27B4D7" supertype="EAID_047DFC9B_568E_4d1b_A9D8_14B5CE958556" xmi.id="EAID_00A6A20D_94BD_4e9d_AA94_9A0283E29CD2" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteCreator" xmi.id="EAID_77ED1DBF_5BFE_4a90_87B4_CA081A27B4D7" visibility="public" namespace="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class overrides the factory method to return an instance of a ConcreteProduct."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:30:09"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 15:17:48"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Factory Method"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="FactoryMethod" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="return new ConcreteProduct"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{C46BD329-9A64-4005-89D3-598D81DA032E}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Factory Method" xmi.id="EAID_67BD35E1_145E_42c5_83EC_067B9BFE3EF4" diagramType="ClassDiagram" owner="EAPK_67BD35E1_145E_42c5_83EC_067B9BFE3EF4" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern defines an interface for creating an object, but lets subclasses decide which class to instantiate. It lets a class defer instantiation to subclasses."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:39"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 13:55:38"/>
				<UML:TaggedValue tag="package" value="EAPK_A6D1CDDB_1CF5_4e07_9F83_FA5B4DC3705E"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=243;Top=187;Right=380;Bottom=266;imgL=191;imgT=134;imgR=328;imgB=213;" subject="EAID_77ED1DBF_5BFE_4a90_87B4_CA081A27B4D7" seqno="1" style="DUID=94352A2C;LBL=;"/>
				<UML:DiagramElement geometry="Left=243;Top=63;Right=345;Bottom=133;imgL=191;imgT=10;imgR=293;imgB=80;" subject="EAID_047DFC9B_568E_4d1b_A9D8_14B5CE958556" seqno="2" style="DUID=7833676D;LBL=;"/>
				<UML:DiagramElement geometry="Left=63;Top=191;Right=153;Bottom=261;imgL=11;imgT=138;imgR=101;imgB=208;" subject="EAID_1D4E1A09_A36A_413b_8870_A2447D14122F" seqno="3" style="DUID=B7476DC9;LBL=;"/>
				<UML:DiagramElement geometry="Left=62;Top=65;Right=152;Bottom=135;imgL=10;imgT=12;imgR=100;imgB=82;" subject="EAID_21764BEE_68B6_4e57_A107_21C931F67900" seqno="4" style="DUID=0BBE828B;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_FC20FED8_B6C4_4041_AB53_A524363B5ABD" style="Mode=2;EOID=0BBE828B;SOID=B7476DC9;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=4;$LLB=;LLT=;LMT=;LMB=CX=71:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LRT=;LRB=;Path=;" subject="EAID_D19C849B_696E_4ce8_9139_190BF5EC1937" style="Mode=3;EOID=B7476DC9;SOID=94352A2C;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_00A6A20D_94BD_4e9d_AA94_9A0283E29CD2" style="Mode=2;EOID=7833676D;SOID=94352A2C;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_1D4E1A09_A36A_413b_8870_A2447D14122F" name="ConcreteProduct" UMLType="Class"/>
		<EAStub xmi.id="EAID_21764BEE_68B6_4e57_A107_21C931F67900" name="Product" UMLType="Class"/>
		<EAStub xmi.id="EAID_77ED1DBF_5BFE_4a90_87B4_CA081A27B4D7" name="ConcreteCreator" UMLType="Class"/>
		<EAStub xmi.id="EAID_047DFC9B_568E_4d1b_A9D8_14B5CE958556" name="Creator" UMLType="Class"/>
		<UMLPattern name="Factory Method" category="GoF Creational Patterns" version="2.0" notes="This pattern defines an interface for creating an object, but lets subclasses decide which class to instantiate. It lets a class defer instantiation to subclasses.">
			<UMLPattern.PromptList>
				<Element name="ConcreteCreator:Class" guid="EAID_77ED1DBF_5BFE_4a90_87B4_CA081A27B4D7" id="191" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class overrides the factory method to return an instance of a ConcreteProduct.">
						<![CDATA[This class overrides the factory method to return an instance of a ConcreteProduct.]]>
					</Comment>
				</Element>
				<Element name="Creator:Class" guid="EAID_047DFC9B_568E_4d1b_A9D8_14B5CE958556" id="190" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) declares the factory method, which returns an object of type Product. Creator may also define a default implementation of the factory method that returns a default ConcreteProduct object, and (b) may call the factory method to create a Product object.">
						<![CDATA[This class (a) declares the factory method, which returns an object of type Product. Creator may also define a default implementation of the factory method that returns a default ConcreteProduct object, and (b) may call the factory method to create a Product object.]]>
					</Comment>
				</Element>
				<Element name="ConcreteProduct:Class" guid="EAID_1D4E1A09_A36A_413b_8870_A2447D14122F" id="189" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the Product interface.">
						<![CDATA[This class implements the Product interface.]]>
					</Comment>
				</Element>
				<Element name="Product:Class" guid="EAID_21764BEE_68B6_4e57_A107_21C931F67900" id="188" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the interface of objects the factory method creates.">
						<![CDATA[This class defines the interface of objects the factory method creates.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="9506" cy="6315">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 aQBvAG4AKAApAK26BwAAAAYAAAAIAAAABgAAAAYAAAADAAAABgAAAAMAAAADAAAABgAAAAYA AAADAAAAAwAAABgAAAAMAAAAAAAAACcAAAAYAAAABAAAAAAAAADAv8AAAAAAACUAAAAMAAAA BAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAgAAAArAAAAGAAAAPYA AABC////fgEAAPT+//8lAAAADAAAAAIAAAAoAAAADAAAAAQAAAAlAAAADAAAAAMAAAAoAAAA DAAAAAgAAAArAAAAGAAAAPMAAABF////ewEAAPf+//8lAAAADAAAAAYAAABUAAAAqAAAANsA AACPAAAAKwEAAJoAAAABAAAAAADhQQCQ4sEPAQAAPP///w8AAABMAAAAAAAAAAAAAAAAAAAA //////////9sAAAAQwBvAG4AYwByAGUAdABlAEMAcgBlAGEAdABvAHIArboHAAAABgAAAAYA AAAGAAAABAAAAAYAAAADAAAABgAAAAcAAAAEAAAABgAAAAYAAAADAAAABgAAAAQAAAAlAAAA DAAAAAEAAAAbAAAAEAAAAPMAAAAq////NgAAABAAAAB7AQAAKv///xgAAAAMAAAAiwAAABgA AAAMAAAAAAAAABgAAAAMAAAAAEBAAFQAAABYAAAAxAAAAKkAAADNAAAAtQAAAAEAAAAAAOFB AJDiwfgAAAAi////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMA AABUAAAAqAAAANUAAACpAAAAIQEAALUAAAABAAAAAADhQQCQ4sEJAQAAIv///w8AAABMAAAA AAAAAAAAAAAAAAAA//////////9sAAAARgBhAGMAdABvAHIAeQBNAGUAdABoAG8AZAAoACkA rboGAAAABgAAAAUAAAADAAAABgAAAAMAAAAFAAAACQAAAAYAAAADAAAABgAAAAYAAAAGAAAA AwAAAAMAAAAYAAAADAAAAICAgAAeAAAAGAAAABABAAAV////fAEAAPb+//9LAAAAEAAAAAAA AAAFAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAA AAAAAAAAAAD//////////wEAAAAAAOFBAJDiwRABAAAV////AQAAAEwAAAAUAAAAAAAAAAAA AAAAAAAAAAAAAFAAAAADAK26NAAAABYAAAAMAAAAAAAAAFQAAACQAAAA3AAAALYAAAAQAQAA wgAAAAEAAAAAAOFBAJDiwRABAAAV////CwAAAEwAAAAAAAAAAAAAAAAAAAD//////////2QA AAByAGUAdAB1AHIAbgAgAG4AZQB3ACAArboDAAAABgAAAAMAAAAGAAAAAwAAAAYAAAADAAAA BgAAAAYAAAAHAAAAAwAAABsAAAAQAAAAewEAACr///8WAAAADAAAAAAAAAAWAAAADAAAAAEA AAASAAAADAAAAAEAAAAbAAAAEAAAAAAAAAAAAAAAVAAAAFQAAAAAAAAAAAAAAP////////// AQAAAAAA4UEAkOLBEAEAAAj///8BAAAATAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMA rbpOAAAAFgAAAAwAAAAAAAAAVAAAAKgAAADcAAAAwwAAACoBAADPAAAAAQAAAAAA4UEAkOLB EAEAAAj///8PAAAATAAAAAAAAAAAAAAAAAAAAP//////////bAAAAEMAbwBuAGMAcgBlAHQA ZQBQAHIAbwBkAHUAYwB0AK26BwAAAAYAAAAGAAAABQAAAAMAAAAGAAAAAwAAAAYAAAAHAAAA AwAAAAYAAAAGAAAABgAAAAUAAAADAAAAGwAAABAAAAB7AQAAKv///xYAAAAMAAAAAAAAABgA AAAMAAAAAEBAABgAAAAMAAAAAAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAAAAAAAlAAAA DAAAAAgAAAAbAAAAEAAAAGsAAABB////NgAAABAAAABrAAAAXf///zYAAAAQAAAAawAAAF3/ //82AAAAEAAAAGsAAAB5////GwAAABAAAABrAAAAef///1YAAAAoAAAAMgAAAFIAAAA9AAAA YQAAAAMAAABxAGr/ZgBq/2sAef8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAAmAAAAHAAAAAgAAAAAAAAA AQAAAAAAAAAAAAAAJQAAAAwAAAAIAAAAGwAAABAAAADzAAAAHv///zYAAAAQAAAA8AAAAB7/ //8bAAAAEAAAAO0AAAAe////NgAAABAAAADqAAAAHv///xsAAAAQAAAA5wAAAB7///82AAAA EAAAAOQAAAAe////GwAAABAAAADhAAAAHv///zYAAAAQAAAA3gAAAB7///8bAAAAEAAAANsA AAAe////NgAAABAAAADYAAAAHv///xsAAAAQAAAA1QAAAB7///82AAAAEAAAANIAAAAe//// GwAAABAAAADPAAAAHv///zYAAAAQAAAAzAAAAB7///8bAAAAEAAAAMkAAAAe////NgAAABAA AADGAAAAHv///xsAAAAQAAAAwwAAAB7///82AAAAEAAAAMAAAAAe////GwAAABAAAAC9AAAA Hv///zYAAAAQAAAAugAAAB7///8bAAAAEAAAALcAAAAe////NgAAABAAAAC0AAAAHv///xsA AAAQAAAAsQAAAB7///82AAAAEAAAAK4AAAAe////GwAAABAAAACrAAAAHv///zYAAAAQAAAA qAAAAB7///8bAAAAEAAAAKUAAAAe////NgAAABAAAACiAAAAHv///xsAAAAQAAAAnwAAAB7/ //82AAAAEAAAAJwAAAAe////GwAAABAAAACZAAAAHv///xsAAAAQAAAAmQAAAB7///8bAAAA EAAAAJkAAAAe////NgAAABAAAACoAAAAI////xsAAAAQAAAAmQAAAB7///82AAAAEAAAAKgA AAAZ////EgAAAAwAAAACAAAAGQAAAAwAAAD///8AUgAAAHABAAAEAAAA9v///wAAAAAAAAAA AAAAAAAAAAAAAAABAAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAA rN4SAPgnIRAwcSUQ//////jcEgDvKSEQHQAAAAAAAAABAAAAUAAAABDcEwNc25V8AABSAqzb lXwIAAAAAABSAgAAUgIQ3BMDJN0AABHNlnwAABIAAAAAAPDdEgAY7pB8yGqSfAAA//++apJ8 rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAETdEgCR1kJfAAABAAjrEgC83BIAAAAAALDd EgAAAJB8cAWRfEAAAABA/QwDXNuVfIj9DAOs25V8AAAAAAAAAAAAAFICQP0MA2R2AAgAAAAA 2OYSAAAAAAA62aABZHYACAAAAAAlAAAADAAAAAQAAABUAAAAnAAAAHQAAACwAAAAsQAAALwA AAABAAAAAADhQQCQ4sGoAAAAG////w0AAABMAAAAAAAAAAAAAAAAAAAA//////////9oAAAA qwBpAG4AcwB0AGEAbgB0AGkAYQB0AGUAuwCtugYAAAADAAAABgAAAAQAAAADAAAABgAAAAYA AAADAAAAAwAAAAYAAAADAAAABgAAAAYAAAAlAAAADAAAAAEAAAAoAAAADAAAAAQAAAASAAAA DAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAAmAAAAHAAAAAgA AAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAIAAAAGwAAABAAAAAmAQAARf///zYAAAAQAAAA JgEAAGD///82AAAAEAAAACYBAABg////NgAAABAAAAAmAQAAe////xsAAAAQAAAAJgEAAHv/ //9WAAAAKAAAAO0AAABQAAAA+AAAAF8AAAADAAAALAFs/yEBbP8mAXv/EgAAAAwAAAACAAAA GQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwA AAAIAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwAAAAGAAAAJQAAAAwAAAAAAACA KAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAADgAAABQAAAAAAAAAEAAAABQA AAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		15		GoF Creational Patterns		Prototype				This pattern specifies the kinds of objects to create using a prototypical instance, and creates new objects by copying this prototype.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:01:36">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_22F78353_157B_4c0d_9D59_957EFC4C73B4">
			<UML:Namespace.ownedElement>
				<UML:Class name="Prototype" xmi.id="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C" visibility="public" namespace="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface for cloning itself."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:44:09"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 14:16:50"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Prototype"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Clone" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E55A17DE-4208-4f7e-84F3-2FEC85C6ED28}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_697ABF47_D612_4c88_8196_84DB0634BC80" supertype="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C" xmi.id="EAID_38980313_CA70_4610_9EFB_4D474CD57B01" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_72809566_FAD0_466c_BBE9_49A094E5AC33" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="prototype" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_60670D68_75A2_4bf7_A360_46C795877A73">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_878F14B3_33A4_4df9_B4B0_619053589436" supertype="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C" xmi.id="EAID_B696E61F_34E4_49b4_A3B2_081261BA9AA3" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcretePrototype1" xmi.id="EAID_697ABF47_D612_4c88_8196_84DB0634BC80" visibility="public" namespace="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements an operation for cloning itself."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:44:50"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 14:16:05"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Prototype"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Clone" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="return copy of self"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E55A17DE-4208-4f7e-84F3-2FEC85C6ED28}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcretePrototype2" xmi.id="EAID_878F14B3_33A4_4df9_B4B0_619053589436" visibility="public" namespace="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements an operation for cloning itself."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:45:09"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 14:16:15"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Prototype"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Clone" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="return copy of self"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{E55A17DE-4208-4f7e-84F3-2FEC85C6ED28}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="Client" xmi.id="EAID_60670D68_75A2_4bf7_A360_46C795877A73" visibility="public" namespace="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class creates a new object by asking a prototype to clone itself."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:37:01"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 14:15:41"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Prototype"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="p = prototype-&gt;Clone()"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{47B085B9-F3DF-449d-BCC9-94FDF5ED5746}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Prototype" xmi.id="EAID_BB6B1C3D_798F_4535_89F7_1201598F606C" diagramType="ClassDiagram" owner="EAPK_BB6B1C3D_798F_4535_89F7_1201598F606C" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern specifies the kinds of objects to create using a prototypical instance, and creates new objects by copying this prototype."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:42"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 14:19:13"/>
				<UML:TaggedValue tag="package" value="EAPK_22F78353_157B_4c0d_9D59_957EFC4C73B4"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=49;Top=49;Right=139;Bottom=128;imgL=10;imgT=10;imgR=100;imgB=89;" subject="EAID_60670D68_75A2_4bf7_A360_46C795877A73" seqno="1" style="DUID=2D08C37E;LBL=;"/>
				<UML:DiagramElement geometry="Left=326;Top=194;Right=430;Bottom=273;imgL=287;imgT=155;imgR=391;imgB=234;" subject="EAID_878F14B3_33A4_4df9_B4B0_619053589436" seqno="2" style="DUID=941C1B35;LBL=;"/>
				<UML:DiagramElement geometry="Left=151;Top=192;Right=255;Bottom=271;imgL=112;imgT=153;imgR=216;imgB=232;" subject="EAID_697ABF47_D612_4c88_8196_84DB0634BC80" seqno="3" style="DUID=2EF40268;LBL=;"/>
				<UML:DiagramElement geometry="Left=223;Top=51;Right=313;Bottom=121;imgL=184;imgT=12;imgR=274;imgB=82;" subject="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C" seqno="4" style="DUID=821A1E93;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=378:-171$268:-171$;" subject="EAID_B696E61F_34E4_49b4_A3B2_081261BA9AA3" style="Mode=3;EOID=821A1E93;SOID=941C1B35;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=CX=57:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_72809566_FAD0_466c_BBE9_49A094E5AC33" style="Mode=2;EOID=821A1E93;SOID=2D08C37E;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=203:-171$268:-171$;" subject="EAID_38980313_CA70_4610_9EFB_4D474CD57B01" style="Mode=3;EOID=821A1E93;SOID=2EF40268;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_697ABF47_D612_4c88_8196_84DB0634BC80" name="ConcretePrototype1" UMLType="Class"/>
		<EAStub xmi.id="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C" name="Prototype" UMLType="Class"/>
		<EAStub xmi.id="EAID_60670D68_75A2_4bf7_A360_46C795877A73" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_878F14B3_33A4_4df9_B4B0_619053589436" name="ConcretePrototype2" UMLType="Class"/>
		<UMLPattern name="Prototype" category="GoF Creational Patterns" version="2.0" notes="This pattern specifies the kinds of objects to create using a prototypical instance, and creates new objects by copying this prototype.">
			<UMLPattern.PromptList>
				<Element name="Client:Class" guid="EAID_60670D68_75A2_4bf7_A360_46C795877A73" id="187" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class creates a new object by asking a prototype to clone itself.">
						<![CDATA[This class creates a new object by asking a prototype to clone itself.]]>
					</Comment>
				</Element>
				<Element name="ConcretePrototype2:Class" guid="EAID_878F14B3_33A4_4df9_B4B0_619053589436" id="186" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements an operation for cloning itself.">
						<![CDATA[This class implements an operation for cloning itself.]]>
					</Comment>
				</Element>
				<Element name="ConcretePrototype1:Class" guid="EAID_697ABF47_D612_4c88_8196_84DB0634BC80" id="185" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements an operation for cloning itself.">
						<![CDATA[This class implements an operation for cloning itself.]]>
					</Comment>
				</Element>
				<Element name="Prototype:Class" guid="EAID_FE1A0378_04E6_4027_B762_DE02252BE56C" id="184" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface for cloning itself.">
						<![CDATA[This class declares an interface for cloning itself.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="11278" cy="6910">AQAAAGwAAAAKAAAACgAAAIkBAADsAAAAAAAAAAAAAAAOLAAA/hoAACBFTUYAAAEAjCAAAPQA AAAJAAAAAAAAAAAAAAAAAAAAAAUAAAAEAABoAQAAIgEAAAAAAAAAAAAAAAAAAEB+BQDQbAQA EQAAAAwAAAAIAAAACQAAABAAAAABAAAA/////woAAAAQAAAAJwAAANn///9SAAAAcAEAAAEA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAY7pB8yGqSfP// //++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAADwaQ0DXNuVfAAAUgKs25V8CAAAAAAAUgIAAFIC8GkNAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknz/////vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAGO6QfHAFkXxAAAAAYJsMA1zb lXyomwwDrNuVfAAAAAAAAAAAAABSAmCbDANkdgAIAAAAACUAAAAMAAAAAQAAACcAAAAYAAAA AgAAAAAAAAD88uMAAAAAACUAAAAMAAAAAgAAACYAAAAcAAAAAwAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAMAAAASAAAADAAAAAEAAAAhAAAACAAAABgAAAAMAAAAAAAAACYAAAAcAAAA BAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAQAAAASAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAA DAAAAAEAAAAZAAAADAAAAP///wASAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAiAAAADAAAAP////8oAAAADAAAAAQAAAAnAAAA GAAAAAQAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAUAAAAAAAAAAQAAAAAA AADAv8AAJQAAAAwAAAAFAAAAOQAAAAwAAAACAAAAKwAAABgAAADiAAAAyv///zsBAACF//// JQAAAAwAAAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAFAAAAKwAAABgA AADfAAAAzf///zgBAACI////UgAAAHABAAAFAAAA9v///wAAAAAAAAAAAAAAALwCAAABAAAB AAAAAEEAUgBJAEEATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAwAAAAEAQMAwAAAAAAAAAA rNuVfAgAAAAAAFICAAAAAgAAUgKU3BIAEc2WfODeEgAY7pB88AaRfP/////rBpF8DN8gEAAA UgJgAABAMAAAAAjrEgDY5hIAAAAAAMDeEgAY3xIAXyshEAAAEgD4JyEQCOsSAOMtIRA4BAwD zQAAAAgAAAAI6xIA2OYSAAAAAAAsAAAAAAAAAALpAgAYBAwDxLUgEIBHJhAAABIAhCohEAkA AAB7KiEQCOsSANjmEgAAAAAAOAQMA/gnIRB4byUQdOESAPgnIRAwcSUQ/////3jfEgDvKSEQ ZHYACAAAAAAlAAAADAAAAAUAAABUAAAAhAAAAM0AAAAVAAAA/AAAAB8AAAABAAAAAADhQQCQ 4sH0AAAAxP///wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAAUAByAG8AdABvAHQA eQBwAGUArboHAAAABAAAAAYAAAADAAAABgAAAAMAAAAGAAAABgAAAAYAAAAlAAAADAAAAAEA AAAbAAAAEAAAAN8AAACy////NgAAABAAAAA4AQAAsv///xgAAAAMAAAAiwAAABgAAAAMAAAA AAAAABgAAAAMAAAAAEBAAFQAAABYAAAAvQAAAC8AAADGAAAAOwAAAAEAAAAAAOFBAJDiweQA AACq////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABSAAAA cAEAAAQAAAD2////AAAAAAAAAAAAAAAAAAAAAAEAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFIC YAAAQG0FkXwI6xIA2OYSADAAAADIZQoDAAAAAAAAAACs25V8CAAAAAAAUgIAAAACAABSApTc EgARzZZ84N4SABjukHzwBpF8/////+sGkXwM3yAQAABSAmAAAEAwAAAACOsSANjmEgAAAAAA wN4SABjfEgBfKyEQAAASAPgnIRAI6xIA4y0hEPBlCgPNAAAACAAAAAjrEgDY5hIAAAAAACwA AAAAAAAAAekCANBlCgPEtSAQgEcmEAAAEgCEKiEQCQAAAHsqIRAI6xIA2OYSAAAAAADwZQoD +CchEHhvJRB04RIA+CchEDBxJRD/////eN8SAO8pIRBkdgAIAAAAACUAAAAMAAAABAAAAFQA AAB4AAAAzgAAAC8AAADwAAAAOwAAAAEAAAAAAOFBAJDiwfUAAACq////BwAAAEwAAAAAAAAA AAAAAAAAAAD//////////1wAAABDAGwAbwBuAGUAKAApAK26BwAAAAMAAAAGAAAABgAAAAYA AAADAAAAAwAAACUAAAAMAAAAAQAAACUAAAAMAAAAAQAAABgAAAAMAAAAAAAAACcAAAAYAAAA BgAAAAAAAADAv8AAAAAAACUAAAAMAAAABgAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAMC/ wAAlAAAADAAAAAcAAAArAAAAGAAAAJoAAAA9////AQEAAO/+//8lAAAADAAAAAIAAAAoAAAA DAAAAAYAAAAlAAAADAAAAAMAAAAoAAAADAAAAAcAAAArAAAAGAAAAJcAAABA/////gAAAPL+ //9SAAAAcAEAAAcAAAD2////AAAAAAAAAAAAAAAAvAIAAAAAAAEAAAAAQQBSAEkAQQBMAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA knwAAFICYAAAQG0FkXwI6xIA2OYSAAAAAACs3hIAAAAAAAAAAAD/////+NwSAO8pIRAdAAAA AABSApTcEgBQAAAA4N4SABjukHzwBpF8/////+sGkXwM3yAQAABSAmAAAEAwAAAACOsSANjm EgAAAAAA8N0SABjfEgBfKyEQAAASAPgnIRAI6xIA4y0hEIibDAPNAAAACAAAAAjrEgDY5hIA AAAAACwAAAAAAAAAAOkCAGibDAPEtSAQgEcmEAAAEgCEKiEQCQAAAHsqIRAI6xIA2OYSAAAA AACImwwDAAAAAAAAUgJ04RIA+CchEDBxJRD/////eN8SAO8pIRBkdgAIAAAAACUAAAAMAAAA BwAAAFQAAAC4AAAAdAAAAKIAAADUAAAArQAAAAEAAAAAAOFBAJDiwZsAAAA3////EgAAAEwA AAAAAAAAAAAAAAAAAAD//////////3AAAABDAG8AbgBjAHIAZQB0AGUAUAByAG8AdABvAHQA eQBwAGUAMQAHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAcAAAAEAAAABgAAAAMA AAAGAAAAAwAAAAUAAAAGAAAABgAAAAYAAAAlAAAADAAAAAEAAAAbAAAAEAAAAJcAAAAl//// NgAAABAAAAD+AAAAJf///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQA AABYAAAAdQAAALwAAAB+AAAAyAAAAAEAAAAAAOFBAJDiwZwAAAAd////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAAeAAAAIYAAAC8AAAAqAAAAMgA AAABAAAAAADhQQCQ4sGtAAAAHf///wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAA QwBsAG8AbgBlACgAKQCtugcAAAADAAAABgAAAAYAAAAGAAAAAwAAAAMAAAAYAAAADAAAAICA gAAeAAAAGAAAALQAAAAQ/////wAAAPH+//9LAAAAEAAAAAAAAAAFAAAAFgAAAAwAAAABAAAA EgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEA AAAAAOFBAJDiwbQAAAAQ////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26 QwAAABYAAAAMAAAAAAAAAFQAAACoAAAAjQAAAMkAAADQAAAA1QAAAAEAAAAAAOFBAJDiwbQA AAAQ////DwAAAEwAAAAAAAAAAAAAAAAAAAD//////////2wAAAByAGUAdAB1AHIAbgAgAGMA bwBwAHkAIABvAGYAIACtugMAAAAGAAAAAwAAAAYAAAADAAAABgAAAAMAAAAFAAAABgAAAAYA AAAFAAAAAwAAAAYAAAADAAAAAwAAABsAAAAQAAAA/gAAACX///8WAAAADAAAAAAAAAAWAAAA DAAAAAEAAAASAAAADAAAAAEAAAAbAAAAEAAAAAAAAAAAAAAAVAAAAFQAAAAAAAAAAAAAAP// ////////AQAAAAAA4UEAkOLBtAAAAAP///8BAAAATAAAABQAAAAAAAAAAAAAAAAAAAAAAAAA UAAAAAMArboQAAAAFgAAAAwAAAAAAAAAVAAAAGQAAACNAAAA1gAAAJ0AAADiAAAAAQAAAAAA 4UEAkOLBtAAAAAP///8EAAAATAAAAAAAAAAAAAAAAAAAAP//////////VAAAAHMAZQBsAGYA BAAAAAYAAAADAAAAAwAAABsAAAAQAAAA/gAAACX///8WAAAADAAAAAAAAAAYAAAADAAAAABA QAAYAAAADAAAAAAAAAAnAAAAGAAAAAYAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAYAAAAmAAAA HAAAAAgAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAIAAAAKwAAABgAAABJAQAAO////7AB AADt/v//JQAAAAwAAAACAAAAKAAAAAwAAAAGAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAIAAAA KwAAABgAAABGAQAAPv///60BAADw/v//JQAAAAwAAAAHAAAAVAAAALgAAAAjAQAApAAAAIMB AACvAAAAAQAAAAAA4UEAkOLBSgEAADX///8SAAAATAAAAAAAAAAAAAAAAAAAAP////////// cAAAAEMAbwBuAGMAcgBlAHQAZQBQAHIAbwB0AG8AdAB5AHAAZQAyAAcAAAAGAAAABgAAAAYA AAAEAAAABgAAAAMAAAAGAAAABwAAAAQAAAAGAAAAAwAAAAYAAAADAAAABQAAAAYAAAAGAAAA BgAAACUAAAAMAAAAAQAAABsAAAAQAAAARgEAACP///82AAAAEAAAAK0BAAAj////GAAAAAwA AACLAAAAGAAAAAwAAAAAAAAAGAAAAAwAAAAAQEAAVAAAAFgAAAAkAQAAvgAAAC0BAADKAAAA AQAAAAAA4UEAkOLBSwEAABv///8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsA IAAGAAAAAwAAAFQAAAB4AAAANQEAAL4AAABXAQAAygAAAAEAAAAAAOFBAJDiwVwBAAAb//// BwAAAEwAAAAAAAAAAAAAAAAAAAD//////////1wAAABDAGwAbwBuAGUAKAApAK26BwAAAAMA AAAGAAAABgAAAAYAAAADAAAAAwAAABgAAAAMAAAAgICAAB4AAAAYAAAAYwEAAA7///+uAQAA 7/7//0sAAAAQAAAAAAAAAAUAAAAWAAAADAAAAAEAAAASAAAADAAAAAEAAAAbAAAAEAAAAAAA AAAAAAAAVAAAAFQAAAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLBYwEAAA7///8BAAAA TAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMArbpDAAAAFgAAAAwAAAAAAAAAVAAAAKgA AAA8AQAAywAAAH8BAADXAAAAAQAAAAAA4UEAkOLBYwEAAA7///8PAAAATAAAAAAAAAAAAAAA AAAAAP//////////bAAAAHIAZQB0AHUAcgBuACAAYwBvAHAAeQAgAG8AZgAgAK26AwAAAAYA AAADAAAABgAAAAMAAAAGAAAAAwAAAAUAAAAGAAAABgAAAAUAAAADAAAABgAAAAMAAAADAAAA GwAAABAAAACtAQAAI////xYAAAAMAAAAAAAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsA AAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sFjAQAA Af///wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtuhAAAAAWAAAADAAAAAAA AABUAAAAZAAAADwBAADYAAAATAEAAOQAAAABAAAAAADhQQCQ4sFjAQAAAf///wQAAABMAAAA AAAAAAAAAAAAAAAA//////////9UAAAAcwBlAGwAZgAEAAAABgAAAAMAAAADAAAAGwAAABAA AACtAQAAI////xYAAAAMAAAAAAAAABgAAAAMAAAAAEBAABgAAAAMAAAAAAAAACcAAAAYAAAA CAAAAAAAAADAv8AAAAAAACUAAAAMAAAACAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAMC/ wAAlAAAADAAAAAYAAAArAAAAGAAAADQAAADM////jQAAAH7///8lAAAADAAAAAIAAAAoAAAA DAAAAAgAAAAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAArAAAAGAAAADEAAADP////igAAAIH/ //8lAAAADAAAAAcAAABUAAAAcAAAACkAAAATAAAARQAAAB4AAAABAAAAAADhQQCQ4sFQAAAA xv///wYAAABMAAAAAAAAAAAAAAAAAAAA//////////9YAAAAQwBsAGkAZQBuAHQABwAAAAMA AAADAAAABgAAAAYAAAADAAAAJQAAAAwAAAABAAAAGwAAABAAAAAxAAAAtP///zYAAAAQAAAA igAAALT///8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAAA8A AAAtAAAAGAAAADkAAAABAAAAAADhQQCQ4sE2AAAArP///wIAAABMAAAAAAAAAAAAAAAAAAAA //////////9QAAAAKwAgAAYAAAADAAAAVAAAAJAAAAAgAAAALQAAAFUAAAA5AAAAAQAAAAAA 4UEAkOLBRwAAAKz///8LAAAATAAAAAAAAAAAAAAAAAAAAP//////////ZAAAAE8AcABlAHIA YQB0AGkAbwBuACgAKQCtuggAAAAGAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAGAAAABgAAAAMA AAADAAAAGAAAAAwAAACAgIAAHgAAABgAAABOAAAAn////4sAAACA////SwAAABAAAAAAAAAA BQAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAA AAAAAAAA//////////8BAAAAAADhQQCQ4sFOAAAAn////wEAAABMAAAAFAAAAAAAAAAAAAAA AAAAAAAAAABQAAAAAwCtuhIAAAAWAAAADAAAAAAAAABUAAAAWAAAACcAAAA6AAAAMAAAAEYA AAABAAAAAADhQQCQ4sFOAAAAn////wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA cAAgAAYAAAADAAAAVAAAAFgAAAAwAAAAOgAAADkAAABGAAAAAQAAAAAA4UEAkOLBVwAAAJ// //8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAAD0AIAAGAAAAAwAAABsAAAAQAAAA igAAALT///8WAAAADAAAAAAAAAAWAAAADAAAAAEAAAASAAAADAAAAAEAAAAbAAAAEAAAAAAA AAAAAAAAVAAAAFQAAAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLBTgAAAJL///8BAAAA TAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMArbpXAAAAFgAAAAwAAAAAAAAAVAAAAIQA AAAnAAAARwAAAFMAAABTAAAAAQAAAAAA4UEAkOLBTgAAAJL///8JAAAATAAAAAAAAAAAAAAA AAAAAP//////////YAAAAHAAcgBvAHQAbwB0AHkAcABlAK26BgAAAAMAAAAGAAAAAwAAAAYA AAADAAAABQAAAAYAAAAGAAAAVAAAAFQAAABTAAAARwAAAFYAAABTAAAAAQAAAAAA4UEAkOLB egAAAJL///8BAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAAC0ArboDAAAAVAAAAFQA AABWAAAARwAAAFwAAABTAAAAAQAAAAAA4UEAkOLBfQAAAJL///8BAAAATAAAAAAAAAAAAAAA AAAAAP//////////UAAAAD4ArboGAAAAVAAAAGwAAABcAAAARwAAAHgAAABTAAAAAQAAAAAA 4UEAkOLBgwAAAJL///8FAAAATAAAAAAAAAAAAAAAAAAAAP//////////WAAAAEMAbABvAG4A ZQCtugcAAAADAAAABgAAAAYAAAAGAAAAVAAAAFgAAAB4AAAARwAAAH4AAABTAAAAAQAAAAAA 4UEAkOLBnwAAAJL///8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACgAKQADAAAA AwAAABsAAAAQAAAAigAAALT///8WAAAADAAAAAAAAAAYAAAADAAAAABAQAAYAAAADAAAAAAA AAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAAB6AQAA Pv///zYAAAAQAAAAegEAAFX///82AAAAEAAAAAwBAABV////NgAAABAAAAAMAQAAh////xsA AAAQAAAADAEAAIf///9WAAAAKAAAAOAAAABSAAAA6wAAAGEAAAADAAAAEgF4/wcBeP8MAYf/ EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwA AAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAA BgAAABsAAAAQAAAAiwAAAKr///82AAAAEAAAALUAAACq////NgAAABAAAAC1AAAAqv///zYA AAAQAAAA3wAAAKr///8bAAAAEAAAAN8AAACq////GwAAABAAAADfAAAAqv///zYAAAAQAAAA 0QAAAKX///8bAAAAEAAAAN8AAACq////NgAAABAAAADRAAAAsP///xIAAAAMAAAAAgAAABkA AAAMAAAA////AFIAAABwAQAACAAAAPb///8AAAAAAAAAAAAAAAAAAAAAAAAAAQAAAABBAFIA SQBBAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAACSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAADwaQ0DXNuVfAAAUgKs25V8CAAAAAAAUgIAAFIC8GkNAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknwAAP//vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAAACQfHAFkXxAAAAAYJsMA1zb lXyomwwDrNuVfAAAAAAAAAAAAABSAmCbDANkdgAIAAAAANjmEgAAAAAAOtmgAWR2AAgAAAAA JQAAAAwAAAAIAAAAVAAAAIgAAABnAAAAHQAAAJYAAAApAAAAAQAAAAAA4UEAkOLBjgAAALz/ //8KAAAATAAAAAAAAAAAAAAAAAAAAP//////////YAAAAC0AcAByAG8AdABvAHQAeQBwAGUA AwAAAAYAAAADAAAABgAAAAMAAAAGAAAAAwAAAAUAAAAGAAAABgAAACUAAAAMAAAAAQAAACgA AAAMAAAACAAAABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAA BgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAMsA AABA////NgAAABAAAADLAAAAVf///zYAAAAQAAAADAEAAFX///82AAAAEAAAAAwBAACH//// GwAAABAAAAAMAQAAh////1YAAAAoAAAA4AAAAFIAAADrAAAAYQAAAAMAAAASAXj/BwF4/wwB h/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAA DAAAAAMAAAAoAAAADAAAAAYAAAAlAAAADAAAAA0AAIAoAAAADAAAAAEAAAAoAAAADAAAAAcA AAAlAAAADAAAAAAAAIAoAAAADAAAAAIAAAAlAAAADAAAAAcAAIAoAAAADAAAAAMAAAAOAAAA FAAAAAAAAAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		16		GoF Creational Patterns		Singleton				This pattern ensures a class only has one instance, and provides a global point of access to it.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:01:58">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_2E52F1E9_479A_4f58_A113_6C53DCF8F964">
			<UML:Namespace.ownedElement>
				<UML:Class name="Singleton" xmi.id="EAID_F14C55C7_079F_45a2_A8B7_D6609CBF0211" visibility="public" namespace="EAPK_2E52F1E9_479A_4f58_A113_6C53DCF8F964" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines an Instance operation that lets clients access its unique instance, and (b) may be responsible for creating its own unique instance."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_2E52F1E9_479A_4f58_A113_6C53DCF8F964"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 21:47:37"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 14:19:05"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Singleton"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="uniqueInstance" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="static" value="1"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1290EA6F-C24E-4edd-B5B0-8E8EED321025}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Attribute name="singletonData" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{6B839472-B917-462d-9614-135473073760}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="Instance" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="static" value="1"/>
								<UML:TaggedValue tag="behaviour" value="return uniqueInstance"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{6CD31BDA-2E24-452f-B2FD-8868A9D5DA7E}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="SingletonOperation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{A90AC898-3D9C-4668-84E6-0A69A7DCAAF7}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="GetSingletonData" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{6E94A3A2-BD82-42f7-982F-5E1FDB7F104C}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Singleton" xmi.id="EAID_6EF44D1E_358D_4641_9DF9_DB1ED4A120EE" diagramType="ClassDiagram" owner="EAPK_6EF44D1E_358D_4641_9DF9_DB1ED4A120EE" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern ensures a class only has one instance, and provides a global point of access to it."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:45"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 14:19:11"/>
				<UML:TaggedValue tag="package" value="EAPK_2E52F1E9_479A_4f58_A113_6C53DCF8F964"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=139;Top=72;Right=305;Bottom=212;imgL=10;imgT=10;imgR=176;imgB=150;" subject="EAID_F14C55C7_079F_45a2_A8B7_D6609CBF0211" seqno="1" style="DUID=4E353F1D;LBL=;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<UMLPattern name="Singleton" category="GoF Creational Patterns" version="2.0" notes="This pattern ensures a class only has one instance, and provides a global point of access to it.">
			<UMLPattern.PromptList>
				<Element name="Singleton:Class" guid="EAID_F14C55C7_079F_45a2_A8B7_D6609CBF0211" id="183" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines an Instance operation that lets clients access its unique instance, and (b) may be responsible for creating its own unique instance.">
						<![CDATA[This class (a) defines an Instance operation that lets clients access its unique instance, and (b) may be responsible for creating its own unique instance.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="5231" cy="4531">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 WAAAAA8AAAA2AAAAFQAAAEIAAAABAAAAAADhQQCQ4sGQAAAAjP///wIAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAALQAgAAMAAAADAAAAVAAAAKwAAAAgAAAANgAAAGoAAABCAAAA AQAAAAAA4UEAkOLBoQAAAIz///8QAAAATAAAAAAAAAAAAAAAAAAAAP//////////bAAAAHMA aQBuAGcAbABlAHQAbwBuAEQAYQB0AGEAOgAgACAABAAAAAMAAAAGAAAABgAAAAMAAAAGAAAA AwAAAAYAAAAGAAAABwAAAAYAAAADAAAABgAAAAMAAAADAAAAAwAAABgAAAAMAAAAAAAAABsA AAAQAAAAiwAAAHb///82AAAAEAAAADABAAB2////GAAAAAwAAAAAQEAAVAAAAFgAAAAPAAAA UAAAABgAAABcAAAAAQAAAAAA4UEAkOLBkAAAAHL///8CAAAATAAAAAAAAAAAAAAAAAAAAP// ////////UAAAACsAIAAGAAAAAwAAAFQAAACIAAAAIAAAAFAAAABNAAAAXAAAAAEAAAAAAOFB AJDiwaEAAABy////CgAAAEwAAAAAAAAAAAAAAAAAAAD//////////2AAAABJAG4AcwB0AGEA bgBjAGUAKAApAAMAAAAGAAAABAAAAAMAAAAGAAAABgAAAAUAAAAGAAAAAwAAAAMAAAAmAAAA HAAAAAQAAAAAAAAAAQAAAAAAAAAAQEAAJQAAAAwAAAAEAAAAGwAAABAAAAChAAAAZv///zYA AAAQAAAAzgAAAGb///8lAAAADAAAAAMAAAAoAAAADAAAAAQAAAAYAAAADAAAAICAgAAeAAAA GAAAAKgAAABl////MQEAACz///9LAAAAEAAAAAAAAAAFAAAAFgAAAAwAAAABAAAAEgAAAAwA AAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFB AJDiwagAAABl////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26ZgAAABYA AAAMAAAAAAAAAFQAAADMAAAAJwAAAF0AAACNAAAAaQAAAAEAAAAAAOFBAJDiwagAAABl//// FQAAAEwAAAAAAAAAAAAAAAAAAAD//////////3gAAAByAGUAdAB1AHIAbgAgAHUAbgBpAHEA dQBlAEkAbgBzAHQAYQBuAGMAZQCtugMAAAAGAAAAAwAAAAYAAAADAAAABgAAAAMAAAAGAAAA BgAAAAMAAAAGAAAABgAAAAYAAAADAAAABgAAAAQAAAADAAAABgAAAAYAAAAFAAAABgAAABsA AAAQAAAAzgAAAGb///8WAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAAA8AAABqAAAA GAAAAHYAAAABAAAAAADhQQCQ4sGQAAAAWP///wIAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAAKwAgAAYAAAADAAAAVAAAAMQAAAAgAAAAagAAAIMAAAB2AAAAAQAAAAAA4UEAkOLB oQAAAFj///8UAAAATAAAAAAAAAAAAAAAAAAAAP//////////dAAAAFMAaQBuAGcAbABlAHQA bwBuAE8AcABlAHIAYQB0AGkAbwBuACgAKQAHAAAAAwAAAAYAAAAGAAAAAwAAAAYAAAADAAAA BgAAAAYAAAAIAAAABgAAAAYAAAADAAAABgAAAAMAAAADAAAABgAAAAYAAAADAAAAAwAAAFQA AABYAAAADwAAAHcAAAAYAAAAgwAAAAEAAAAAAOFBAJDiwZAAAABL////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAAuAAAACAAAAB3AAAAewAAAIMA AAABAAAAAADhQQCQ4sGhAAAAS////xIAAABMAAAAAAAAAAAAAAAAAAAA//////////9wAAAA RwBlAHQAUwBpAG4AZwBsAGUAdABvAG4ARABhAHQAYQAoACkACAAAAAYAAAADAAAABwAAAAMA AAAGAAAABgAAAAMAAAAGAAAAAwAAAAYAAAAGAAAABwAAAAYAAAADAAAABgAAAAMAAAADAAAA GAAAAAwAAAAAAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwAAAAFAAAAJQAAAAwA AAAAAACAKAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAADgAAABQAAAAAAAAA EAAAABQAAAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		17		GoF Structural Patterns		Bridge				This pattern decouples an abstraction from its implementation so that the two can vary independently.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:02:54">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7">
			<UML:Namespace.ownedElement>
				<UML:Class name="Abstraction" xmi.id="EAID_A4144352_64B5_4e3d_9218_7815357C5D49" visibility="public" namespace="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines the abstraction's interface, and (b) maintains a reference to an object of type Implementor."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:07:36"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:24:40"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Bridge"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="imp-&gt;Operation();"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{B4C5DFB8-5A9F-4678-A09D-280D78DCE89D}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_C4975C2B_FDA2_48e4_A555_D889F8E681F5" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="EX=0;EY=0;SX=0;SY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-imp"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="imp" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_A4144352_64B5_4e3d_9218_7815357C5D49">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_1BF3BDF7_42BD_4423_AB8B_6CE7EB82DDEF" supertype="EAID_A4144352_64B5_4e3d_9218_7815357C5D49" xmi.id="EAID_D25D3CEC_480B_484c_82B2_1EF7383FB807" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="Implementor" xmi.id="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338" visibility="public" namespace="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the interface for implementation classes."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:08:22"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:26:11"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Bridge"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="OperationImp" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{5A37479B-AC0D-4eee-9616-2131B637D86D}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_5F3BCA3A_C320_4c5a_A36D_10C2F04DA716" supertype="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338" xmi.id="EAID_D02391F8_6E82_4757_870A_7E136BAC0D89" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_97628CB2_D902_4f70_8C71_DE65738B79A7" supertype="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338" xmi.id="EAID_EC9DF913_8466_431f_9E9B_2529E2889E5A" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="RefinedAbstraction" xmi.id="EAID_1BF3BDF7_42BD_4423_AB8B_6CE7EB82DDEF" visibility="public" namespace="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class extends the interface defined by Abstraction."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:09:08"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:26:35"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Bridge"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="ConcreteImplementorA" xmi.id="EAID_5F3BCA3A_C320_4c5a_A36D_10C2F04DA716" visibility="public" namespace="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the Implementor interface and defines its concrete implementation."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:09:52"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:25:18"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Bridge"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="OperationImp" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{5A37479B-AC0D-4eee-9616-2131B637D86D}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteImplementorB" xmi.id="EAID_97628CB2_D902_4f70_8C71_DE65738B79A7" visibility="public" namespace="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the Implementor interface and defines its concrete implementation."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:10:07"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:25:21"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Bridge"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="OperationImp" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{5A37479B-AC0D-4eee-9616-2131B637D86D}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Bridge" xmi.id="EAID_5E4CF72C_E2D3_40de_8F1F_0A98DE7CB519" diagramType="ClassDiagram" owner="EAPK_5E4CF72C_E2D3_40de_8F1F_0A98DE7CB519" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern decouples an abstraction from its implementation so that the two can vary independently."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:50"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 15:26:38"/>
				<UML:TaggedValue tag="package" value="EAPK_2DEA04A7_82F8_4a9b_BAA2_9B4E07BEF8B7"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=322;Top=263;Right=442;Bottom=333;imgL=263;imgT=193;imgR=383;imgB=263;" subject="EAID_97628CB2_D902_4f70_8C71_DE65738B79A7" seqno="1" style="DUID=92E5B480;LBL=;"/>
				<UML:DiagramElement geometry="Left=142;Top=262;Right=262;Bottom=332;imgL=83;imgT=192;imgR=203;imgB=262;" subject="EAID_5F3BCA3A_C320_4c5a_A36D_10C2F04DA716" seqno="2" style="DUID=EFFA0797;LBL=;"/>
				<UML:DiagramElement geometry="Left=77;Top=208;Right=178;Bottom=236;imgL=18;imgT=138;imgR=119;imgB=166;" subject="EAID_1BF3BDF7_42BD_4423_AB8B_6CE7EB82DDEF" seqno="3" style="DUID=E2BB7E1D;LBL=;"/>
				<UML:DiagramElement geometry="Left=255;Top=80;Right=353;Bottom=150;imgL=196;imgT=10;imgR=294;imgB=80;" subject="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338" seqno="4" style="DUID=A30FDEB7;LBL=;"/>
				<UML:DiagramElement geometry="Left=69;Top=83;Right=189;Bottom=153;imgL=10;imgT=13;imgR=130;imgB=83;" subject="EAID_A4144352_64B5_4e3d_9218_7815357C5D49" seqno="5" style="DUID=DCF2F881;LBL=;"/>
				<UML:DiagramElement geometry="EX=0;EY=0;SX=0;SY=0;EDGE=2;$LLB=;LLT=CX=31:CY=15:OX=-16:OY=-4:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_C4975C2B_FDA2_48e4_A555_D889F8E681F5" style="Mode=2;EOID=A30FDEB7;SOID=DCF2F881;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_D25D3CEC_480B_484c_82B2_1EF7383FB807" style="Mode=2;EOID=DCF2F881;SOID=E2BB7E1D;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=382:-200$304:-200$;" subject="EAID_EC9DF913_8466_431f_9E9B_2529E2889E5A" style="Mode=3;EOID=A30FDEB7;SOID=92E5B480;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=202:-200$304:-200$;" subject="EAID_D02391F8_6E82_4757_870A_7E136BAC0D89" style="Mode=3;EOID=A30FDEB7;SOID=EFFA0797;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_A4144352_64B5_4e3d_9218_7815357C5D49" name="Abstraction" UMLType="Class"/>
		<EAStub xmi.id="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338" name="Implementor" UMLType="Class"/>
		<EAStub xmi.id="EAID_1BF3BDF7_42BD_4423_AB8B_6CE7EB82DDEF" name="RefinedAbstraction" UMLType="Class"/>
		<EAStub xmi.id="EAID_5F3BCA3A_C320_4c5a_A36D_10C2F04DA716" name="ConcreteImplementorA" UMLType="Class"/>
		<EAStub xmi.id="EAID_97628CB2_D902_4f70_8C71_DE65738B79A7" name="ConcreteImplementorB" UMLType="Class"/>
		<UMLPattern name="Bridge" category="GoF Structural Patterns" version="2.0" notes="This pattern decouples an abstraction from its implementation so that the two can vary independently.">
			<UMLPattern.PromptList>
				<Element name="ConcreteImplementorB:Class" guid="EAID_97628CB2_D902_4f70_8C71_DE65738B79A7" id="178" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the Implementor interface and defines its concrete implementation.">
						<![CDATA[This class implements the Implementor interface and defines its concrete implementation.]]>
					</Comment>
				</Element>
				<Element name="ConcreteImplementorA:Class" guid="EAID_5F3BCA3A_C320_4c5a_A36D_10C2F04DA716" id="177" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the Implementor interface and defines its concrete implementation.">
						<![CDATA[This class implements the Implementor interface and defines its concrete implementation.]]>
					</Comment>
				</Element>
				<Element name="RefinedAbstraction:Class" guid="EAID_1BF3BDF7_42BD_4423_AB8B_6CE7EB82DDEF" id="176" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class extends the interface defined by Abstraction.">
						<![CDATA[This class extends the interface defined by Abstraction.]]>
					</Comment>
				</Element>
				<Element name="Implementor:Class" guid="EAID_A817FF63_EA11_4bab_89D6_51E85E0F3338" id="175" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the interface for implementation classes.">
						<![CDATA[This class defines the interface for implementation classes.]]>
					</Comment>
				</Element>
				<Element name="Abstraction:Class" guid="EAID_A4144352_64B5_4e3d_9218_7815357C5D49" id="174" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines the abstraction's interface, and (b) maintains a reference to an object of type Implementor.">
						<![CDATA[This class (a) defines the abstraction's interface, and (b) maintains a reference to an object of type Implementor.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="11053" cy="7731">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 AAAAAAAAAAAAAAAA//////////9kAAAATwBwAGUAcgBhAHQAaQBvAG4AKAApAK26CAAAAAYA AAAGAAAAAwAAAAYAAAADAAAAAwAAAAYAAAAGAAAAAwAAAAMAAAAYAAAADAAAAICAgAAeAAAA GAAAAGIAAAB9////vQAAAGf///9LAAAAEAAAAAAAAAAFAAAAFgAAAAwAAAABAAAAEgAAAAwA AAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFB AJDiwWIAAAB9////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26UwAAABYA AAAMAAAAAAAAAFQAAABgAAAAJwAAAD0AAAA5AAAASQAAAAEAAAAAAOFBAJDiwWIAAAB9//// AwAAAEwAAAAAAAAAAAAAAAAAAAD//////////1QAAABpAG0AcACtugMAAAAJAAAABgAAAFQA AABUAAAAOQAAAD0AAAA8AAAASQAAAAEAAAAAAOFBAJDiwXQAAAB9////AQAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAAtAK26AwAAAFQAAABUAAAAPAAAAD0AAABCAAAASQAAAAEA AAAAAOFBAJDiwXcAAAB9////AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAA+AK26 BgAAAFQAAACEAAAAQgAAAD0AAABxAAAASQAAAAEAAAAAAOFBAJDiwX0AAAB9////CQAAAEwA AAAAAAAAAAAAAAAAAAD//////////2AAAABPAHAAZQByAGEAdABpAG8AbgCtuggAAAAGAAAA BgAAAAMAAAAGAAAAAwAAAAMAAAAGAAAABgAAAFQAAABYAAAAcQAAAD0AAAB3AAAASQAAAAEA AAAAAOFBAJDiwawAAAB9////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAAoACkA AwAAAAMAAABUAAAAVAAAAHcAAAA9AAAAegAAAEkAAAABAAAAAADhQQCQ4sGyAAAAff///wEA AABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAOwCtugMAAAAbAAAAEAAAALwAAACS//// FgAAAAwAAAAAAAAAGAAAAAwAAAAAQEAAGAAAAAwAAAAAAAAAJwAAABgAAAAEAAAAAAAAAMC/ wAAAAAAAJQAAAAwAAAAEAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAwL/AACUAAAAMAAAA BgAAACsAAAAYAAAAAgEAAK3///9jAQAAaP///yUAAAAMAAAAAgAAACgAAAAMAAAABAAAACUA AAAMAAAAAwAAACgAAAAMAAAABgAAACsAAAAYAAAA/wAAALD///9gAQAAa////yUAAAAMAAAA BQAAAFQAAACQAAAA1gAAABMAAAATAQAAHQAAAAEAAAAAAOFBAJDiwREBAACn////CwAAAEwA AAAAAAAAAAAAAAAAAAD//////////2QAAABJAG0AcABsAGUAbQBlAG4AdABvAHIArboDAAAA CQAAAAYAAAADAAAABgAAAAkAAAAGAAAABgAAAAMAAAAGAAAABAAAACUAAAAMAAAAAQAAABsA AAAQAAAA/wAAAJX///82AAAAEAAAAGABAACV////GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAA GAAAAAwAAAAAQEAAVAAAAFgAAADJAAAALQAAANIAAAA5AAAAAQAAAAAA4UEAkOLBBAEAAI3/ //8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFIAAABwAQAA BgAAAPb///8AAAAAAAAAAAAAAAAAAAAAAQAAAQAAAABBAFIASQBBAEwAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSfAAAUgJgAABA bQWRfAjrEgDY5hIAMAAAAPASDgMAAAAAAAAAAKzblXwIAAAAAABSAgAAAAIAAFIClNwSABHN lnzg3hIAGO6QfPAGkXz/////6waRfAzfIBAAAFICYAAAQDAAAAAI6xIA2OYSAAAAAADA3hIA GN8SAF8rIRAAABIA+CchEAjrEgDjLSEQGBMOA80AAAAIAAAACOsSANjmEgAAAAAALAAAAAAA AAD/qwMA+BIOA8S1IBCARyYQAAASAIQqIRAJAAAAeyohEAjrEgDY5hIAAAAAABgTDgP4JyEQ eG8lEHThEgD4JyEQMHElEP////943xIA7ykhEGR2AAgAAAAAJQAAAAwAAAAGAAAAVAAAAKAA AADaAAAALQAAAB4BAAA5AAAAAQAAAAAA4UEAkOLBFQEAAI3///8OAAAATAAAAAAAAAAAAAAA AAAAAP//////////aAAAAE8AcABlAHIAYQB0AGkAbwBuAEkAbQBwACgAKQAIAAAABgAAAAYA AAADAAAABgAAAAMAAAADAAAABgAAAAYAAAACAAAABwAAAAYAAAADAAAAAwAAACUAAAAMAAAA AQAAACUAAAAMAAAAAQAAABgAAAAMAAAAAAAAACcAAAAYAAAABAAAAAAAAADAv8AAAAAAACUA AAAMAAAABAAAACYAAAAcAAAABwAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAcAAAArAAAA GAAAAFAAAAAt////tAAAABL///8lAAAADAAAAAIAAAAoAAAADAAAAAQAAAAlAAAADAAAAAMA AAAoAAAADAAAAAcAAAArAAAAGAAAAE0AAAAw////sQAAABX///9SAAAAcAEAAAcAAAD2//// AAAAAAAAAAAAAAAAvAIAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAACs3hIAAAAAAAAAAAD/////+NwSAO8pIRAdAAAAAABSApTcEgBQAAAA4N4SABju kHzwBpF8/////+sGkXwM3yAQAABSAmAAAEAwAAAACOsSANjmEgAAAAAA8N0SABjfEgBfKyEQ AAASAPgnIRAI6xIA4y0hENiODgPNAAAACAAAAAjrEgDY5hIAAAAAACwAAAAAAAAA/qsDALiO DgPEtSAQgEcmEAAAEgCEKiEQCQAAAHsqIRAI6xIA2OYSAAAAAADYjg4DAAAAAAAAUgJ04RIA +CchEDBxJRD/////eN8SAO8pIRBkdgAIAAAAACUAAAAMAAAABwAAAFQAAAC4AAAAFgAAAJMA AABzAAAAngAAAAEAAAAAAOFBAJDiwVEAAAAn////EgAAAEwAAAAAAAAAAAAAAAAAAAD///// /////3AAAABSAGUAZgBpAG4AZQBkAEEAYgBzAHQAcgBhAGMAdABpAG8AbgAHAAAABgAAAAMA AAADAAAABgAAAAYAAAAGAAAABwAAAAYAAAAGAAAAAwAAAAQAAAAGAAAABgAAAAMAAAADAAAA BgAAAAYAAAAlAAAADAAAAAEAAAAYAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABA QAAYAAAADAAAAAAAAAAnAAAAGAAAAAQAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAA HAAAAAgAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAIAAAAKwAAABgAAACRAAAA9/7//wgB AACy/v//JQAAAAwAAAACAAAAKAAAAAwAAAAEAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAIAAAA KwAAABgAAACOAAAA+v7//wUBAAC1/v//JQAAAAwAAAAHAAAAVAAAAMQAAABXAAAAyQAAAMcA AADUAAAAAQAAAAAA4UEAkOLBkgAAAPH+//8UAAAATAAAAAAAAAAAAAAAAAAAAP////////// dAAAAEMAbwBuAGMAcgBlAHQAZQBJAG0AcABsAGUAbQBlAG4AdABvAHIAQQAHAAAABgAAAAYA AAAGAAAABAAAAAYAAAADAAAABgAAAAMAAAAJAAAABgAAAAMAAAAGAAAACQAAAAYAAAAGAAAA AwAAAAYAAAAEAAAABwAAACUAAAAMAAAAAQAAABsAAAAQAAAAjgAAAN/+//82AAAAEAAAAAUB AADf/v//GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAAGAAAAAwAAAAAQEAAVAAAAFgAAABYAAAA 4wAAAGEAAADvAAAAAQAAAAAA4UEAkOLBkwAAANf+//8CAAAATAAAAAAAAAAAAAAAAAAAAP// ////////UAAAACsAIAAGAAAAAwAAAFQAAACgAAAAaQAAAOMAAACwAAAA7wAAAAEAAAAAAOFB AJDiwaQAAADX/v//DgAAAEwAAAAAAAAAAAAAAAAAAAD//////////2gAAABPAHAAZQByAGEA dABpAG8AbgBJAG0AcAAoACkACAAAAAYAAAAGAAAAAwAAAAYAAAADAAAAAwAAAAYAAAAGAAAA AwAAAAkAAAAGAAAAAwAAAAMAAAAYAAAADAAAAAAAAAAnAAAAGAAAAAgAAAAAAAAAwL/AAAAA AAAlAAAADAAAAAgAAAAmAAAAHAAAAAQAAAAAAAAAAQAAAAAAAADAv8AAJQAAAAwAAAAEAAAA KwAAABgAAABFAQAA9v7//7wBAACx/v//JQAAAAwAAAACAAAAKAAAAAwAAAAIAAAAJQAAAAwA AAADAAAAKAAAAAwAAAAEAAAAKwAAABgAAABCAQAA+f7//7kBAAC0/v//JQAAAAwAAAAHAAAA VAAAAMQAAAALAQAAygAAAHsBAADVAAAAAQAAAAAA4UEAkOLBRgEAAPD+//8UAAAATAAAAAAA AAAAAAAAAAAAAP//////////dAAAAEMAbwBuAGMAcgBlAHQAZQBJAG0AcABsAGUAbQBlAG4A dABvAHIAQgAHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAMAAAAJAAAABgAAAAMA AAAGAAAACQAAAAYAAAAGAAAAAwAAAAYAAAAEAAAABwAAACUAAAAMAAAAAQAAABsAAAAQAAAA QgEAAN7+//82AAAAEAAAALkBAADe/v//GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAAGAAAAAwA AAAAQEAAVAAAAFgAAAAMAQAA5AAAABUBAADwAAAAAQAAAAAA4UEAkOLBRwEAANb+//8CAAAA TAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAACgAAAAHQEAAOQA AABkAQAA8AAAAAEAAAAAAOFBAJDiwVgBAADW/v//DgAAAEwAAAAAAAAAAAAAAAAAAAD///// /////2gAAABPAHAAZQByAGEAdABpAG8AbgBJAG0AcAAoACkACAAAAAYAAAAGAAAAAwAAAAYA AAADAAAAAwAAAAYAAAAGAAAAAwAAAAkAAAAGAAAAAwAAAAMAAAAYAAAADAAAAAAAAAAmAAAA HAAAAAQAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAEAAAAGwAAABAAAAC9AAAAjP///zYA AAAQAAAA3gAAAIz///82AAAAEAAAAN4AAACM////NgAAABAAAAD/AAAAjP///1YAAAAsAAAA ggAAACoAAACWAAAAMgAAAAQAAADHAJD/vQCM/8YAiP/RAIz/GwAAABAAAAD/AAAAjP///xsA AAAQAAAA/wAAAIz///82AAAAEAAAAPEAAACH////GwAAABAAAAD/AAAAjP///zYAAAAQAAAA 8QAAAJL///8SAAAADAAAAAIAAAAZAAAADAAAAP///wBSAAAAcAEAAAgAAAD2////AAAAAAAA AAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFICYAAAQG0FkXwI6xIA2OYSAAAA AACs3hIA+CchEDBxJRD/////+NwSAO8pIRAdAAAAAAAAAAEAAABQAAAAULIPA1zblXwAAFIC rNuVfAgAAAAAAFICAABSAlCyDwMk3QAAEc2WfAAAEgAAAAAA8N0SABjukHzIapJ8AAD//75q knytaJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAARN0SAJHWQl8AAAEACOsSALzcEgAAAAAA sN0SAAAAkHxwBZF8QAAAALCODgNc25V8+I4OA6zblXwAAAAAAAAAAAAAUgKwjg4DZHYACAAA AADY5hIAAAAAADrZoAFkdgAIAAAAACUAAAAMAAAACAAAAFQAAABkAAAAiQAAABgAAACeAAAA JAAAAAEAAAAAAOFBAJDiwcQAAACi////BAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1QA AAAtAGkAbQBwAAMAAAADAAAACQAAAAYAAAAlAAAADAAAAAEAAAAoAAAADAAAAAgAAAASAAAA DAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAQAAAAmAAAAHAAAAAQA AAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAEAAAAGwAAABAAAAB/AAAAMP///zYAAAAQAAAA fwAAAEz///82AAAAEAAAAH8AAABM////NgAAABAAAAB/AAAAZ////xsAAAAQAAAAfwAAAGf/ //9WAAAAKAAAAD8AAABTAAAASgAAAGIAAAADAAAAhQBY/3oAWP9/AGf/EgAAAAwAAAACAAAA GQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwA AAAEAAAAJgAAABwAAAAEAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABAAAABsAAAAQAAAA fgEAAPn+//82AAAAEAAAAH4BAAA4////NgAAABAAAAAwAQAAOP///zYAAAAQAAAAMAEAAGr/ //8bAAAAEAAAADABAABq////VgAAACgAAADwAAAAUAAAAPsAAABfAAAAAwAAADYBW/8rAVv/ MAFq/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUA AAAMAAAAAwAAACgAAAAMAAAABAAAACYAAAAcAAAABAAAAAAAAAABAAAAAAAAAAAAAAAlAAAA DAAAAAQAAAAbAAAAEAAAAMoAAAD6/v//NgAAABAAAADKAAAAOP///zYAAAAQAAAAMAEAADj/ //82AAAAEAAAADABAABq////GwAAABAAAAAwAQAAav///1YAAAAoAAAA8AAAAFAAAAD7AAAA XwAAAAMAAAA2AVv/KwFb/zABav8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAQAAAAlAAAADAAAAA0AAIAoAAAA DAAAAAEAAAAoAAAADAAAAAcAAAAlAAAADAAAAAAAAIAoAAAADAAAAAIAAAAlAAAADAAAAAcA AIAoAAAADAAAAAMAAAAOAAAAFAAAAAAAAAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		18		GoF Structural Patterns		Composite				This pattern composes objects into tree structures to represent part-whole hierarchies. It lets clients treat individual objects and compositions of objects uniformly.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:03:18">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC">
			<UML:Namespace.ownedElement>
				<UML:Class name="Component" xmi.id="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D" visibility="public" namespace="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) declares the interface for objects in the composition, (b) implements default behaviour for the interface common to all classes, as appropriate, (c) declares an interface for accessing and managing its child components, and (d) optionally defines an interface for accessing a component's parent in the recursive structure and implements it if that's appropriate."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:15:30"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:08:44"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Composite"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{A07B400D-49C4-4a26-B297-E626A6D00D46}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="Add" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Component"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1AEE6CEC-1B78-42a1-BE37-D6B344E85DD1}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Component"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-1B78-42a1-BE37-D6B344E85DD1}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="Remove" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Component"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{4570DDBB-C39B-4f39-AA57-9864549ACFE7}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Component"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-C39B-4f39-AA57-9864549ACFE7}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="GetChild" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Component"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="3"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{62A98449-894B-4df3-A76B-C5F2E508B6FD}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Component"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-894B-4df3-A76B-C5F2E508B6FD}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_29296B2B_E443_4e1c_8E3C_0061EF672884" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_0E3A65B9_F394_4ceb_A2F5_0E56FEE60F83">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_5006A438_9360_4885_B899_21E0FC62F8CE" supertype="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D" xmi.id="EAID_34A9B926_8181_4a98_BDAF_698FAEEA2717" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_AC77FAD6_276B_4720_9C10_CA81A7A7BE5B" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=78;SY=17;EX=67;EY=17;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="children" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_5006A438_9360_4885_B899_21E0FC62F8CE">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" multiplicity="1..*" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_A069F749_8BF7_4329_8858_4C7DCC9421FD" supertype="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D" xmi.id="EAID_CDE90BFC_432B_4a43_9496_986F9F4066BF" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="Client" xmi.id="EAID_0E3A65B9_F394_4ceb_A2F5_0E56FEE60F83" visibility="public" namespace="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class manipulates objects in the composition through the Component interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:28:32"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:06:23"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Composite"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="Leaf" xmi.id="EAID_A069F749_8BF7_4329_8858_4C7DCC9421FD" visibility="public" namespace="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) represents leaf objects in the composition, and (b) defines behaviour for primitive objects in the composition."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:29:59"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:11:14"/>
						<UML:TaggedValue tag="gentype" value="C++"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Composite"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{A07B400D-49C4-4a26-B297-E626A6D00D46}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="Composite" xmi.id="EAID_5006A438_9360_4885_B899_21E0FC62F8CE" visibility="public" namespace="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) defines behaviour for components having children, (b) stores child components, and (c) implements child-related operations in the Component interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:30:24"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:09:52"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Composite"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="forall g in children
   g.Operation();"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{A07B400D-49C4-4a26-B297-E626A6D00D46}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="Add" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Component"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{1AEE6CEC-1B78-42a1-BE37-D6B344E85DD1}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Component"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-1B78-42a1-BE37-D6B344E85DD1}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="Remove" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Component"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="2"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{4570DDBB-C39B-4f39-AA57-9864549ACFE7}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Component"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="classifier" value="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-C39B-4f39-AA57-9864549ACFE7}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
						<UML:Operation name="GetChild" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="type" value="Component"/>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="3"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{62A98449-894B-4df3-A76B-C5F2E508B6FD}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="Component"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-894B-4df3-A76B-C5F2E508B6FD}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Composite" xmi.id="EAID_6D68B5ED_BFC7_4589_AB32_0C2E8BCCC3DD" diagramType="ClassDiagram" owner="EAPK_6D68B5ED_BFC7_4589_AB32_0C2E8BCCC3DD" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern composes objects into tree structures to represent part-whole hierarchies. It lets clients treat individual objects and compositions of objects uniformly."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:53"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 16:11:23"/>
				<UML:TaggedValue tag="package" value="EAPK_0FF163BD_2587_4d61_A9B4_27DACC7CD5AC"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=195;Top=233;Right=354;Bottom=351;imgL=190;imgT=173;imgR=349;imgB=291;" subject="EAID_5006A438_9360_4885_B899_21E0FC62F8CE" seqno="1" style="DUID=C27D42A6;LBL=;"/>
				<UML:DiagramElement geometry="Left=49;Top=233;Right=139;Bottom=303;imgL=44;imgT=173;imgR=134;imgB=243;" subject="EAID_A069F749_8BF7_4329_8858_4C7DCC9421FD" seqno="2" style="DUID=7766D97F;LBL=;"/>
				<UML:DiagramElement geometry="Left=15;Top=102;Right=105;Bottom=130;imgL=10;imgT=42;imgR=100;imgB=70;" subject="EAID_0E3A65B9_F394_4ceb_A2F5_0E56FEE60F83" seqno="3" style="DUID=48D01CFB;LBL=;"/>
				<UML:DiagramElement geometry="Left=147;Top=70;Right=283;Bottom=161;imgL=142;imgT=10;imgR=278;imgB=101;" subject="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D" seqno="4" style="DUID=65AAF005;LBL=;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_29296B2B_E443_4e1c_8E3C_0061EF672884" style="Mode=3;EOID=65AAF005;SOID=48D01CFB;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=78;SY=17;EX=67;EY=17;EDGE=2;$LLB=;LLT=CX=51:CY=15:OX=-7:OY=23:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;Path=411:-275$411:-98$;" subject="EAID_AC77FAD6_276B_4720_9C10_CA81A7A7BE5B" style="Mode=3;EOID=65AAF005;SOID=C27D42A6;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=274:-211$215:-211$;" subject="EAID_34A9B926_8181_4a98_BDAF_698FAEEA2717" style="Mode=3;EOID=65AAF005;SOID=C27D42A6;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=94:-211$215:-211$;" subject="EAID_CDE90BFC_432B_4a43_9496_986F9F4066BF" style="Mode=3;EOID=65AAF005;SOID=7766D97F;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_0E3A65B9_F394_4ceb_A2F5_0E56FEE60F83" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D" name="Component" UMLType="Class"/>
		<EAStub xmi.id="EAID_5006A438_9360_4885_B899_21E0FC62F8CE" name="Composite" UMLType="Class"/>
		<EAStub xmi.id="EAID_A069F749_8BF7_4329_8858_4C7DCC9421FD" name="Leaf" UMLType="Class"/>
		<UMLPattern name="Composite" category="GoF Structural Patterns" version="2.0" notes="This pattern composes objects into tree structures to represent part-whole hierarchies. It lets clients treat individual objects and compositions of objects uniformly.">
			<UMLPattern.PromptList>
				<Element name="Composite:Class" guid="EAID_5006A438_9360_4885_B899_21E0FC62F8CE" id="173" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) defines behaviour for components having children, (b) stores child components, and (c) implements child-related operations in the Component interface.">
						<![CDATA[This class (a) defines behaviour for components having children, (b) stores child components, and (c) implements child-related operations in the Component interface.]]>
					</Comment>
				</Element>
				<Element name="Leaf:Class" guid="EAID_A069F749_8BF7_4329_8858_4C7DCC9421FD" id="172" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) represents leaf objects in the composition, and (b) defines behaviour for primitive objects in the composition.">
						<![CDATA[This class (a) represents leaf objects in the composition, and (b) defines behaviour for primitive objects in the composition.]]>
					</Comment>
				</Element>
				<Element name="Client:Class" guid="EAID_0E3A65B9_F394_4ceb_A2F5_0E56FEE60F83" id="171" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class manipulates objects in the composition through the Component interface.">
						<![CDATA[This class manipulates objects in the composition through the Component interface.]]>
					</Comment>
				</Element>
				<Element name="Component:Class" guid="EAID_9E9222C4_74C7_4b86_800B_FB861DE0969D" id="170" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) declares the interface for objects in the composition, (b) implements default behaviour for the interface common to all classes, as appropriate, (c) declares an interface for accessing and managing its child components, and (d) optionally defines an interface for accessing a component's parent in the recursive structure and implements it if that's appropriate.">
						<![CDATA[This class (a) declares the interface for objects in the composition, (b) implements default behaviour for the interface common to all classes, as appropriate, (c) declares an interface for accessing and managing its child components, and (d) optionally defines an interface for accessing a component's parent in the recursive structure and implements it if that's appropriate.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="11840" cy="8524">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 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFICYAAAQG0F kXwI6xIA2OYSADAAAAAoYA8DAAAAAAAAAACs25V8CAAAAAAAUgIAAAACAABSApTcEgARzZZ8 4N4SABjukHzwBpF8/////+sGkXwM3yAQAABSAmAAAEAwAAAACOsSANjmEgAAAAAAwN4SABjf EgBfKyEQAAASAPgnIRAI6xIA4y0hEFBgDwPNAAAACAAAAAjrEgDY5hIAAAAAACwAAAAAAAAA 9zcEADBgDwPEtSAQgEcmEAAAEgCEKiEQCQAAAHsqIRAI6xIA2OYSAAAAAABQYA8D+CchEHhv JRB04RIA+CchEDBxJRD/////eN8SAO8pIRBkdgAIAAAAACUAAAAMAAAABAAAAFQAAACQAAAA pAAAAC0AAADZAAAAOQAAAAEAAAAAAOFBAJDiwakAAACX////CwAAAEwAAAAAAAAAAAAAAAAA AAD//////////2QAAABPAHAAZQByAGEAdABpAG8AbgAoACkArboIAAAABgAAAAYAAAADAAAA BgAAAAMAAAADAAAABgAAAAYAAAADAAAAAwAAACUAAAAMAAAAAQAAACUAAAAMAAAAAQAAAFQA AABYAAAAkwAAADoAAACcAAAARgAAAAEAAAAAAOFBAJDiwZgAAACK////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAAAlAAAADAAAAAQAAABUAAAAtAAAAKQA AAA6AAAA+wAAAEYAAAABAAAAAADhQQCQ4sGpAAAAiv///xEAAABMAAAAAAAAAAAAAAAAAAAA //////////9wAAAAQQBkAGQAKAApACAAOgAgAEMAbwBtAHAAbwBuAGUAbgB0AK26BwAAAAYA AAAGAAAAAwAAAAMAAAADAAAAAwAAAAMAAAAHAAAABgAAAAcAAAAGAAAABgAAAAYAAAAGAAAA BgAAAAMAAAAlAAAADAAAAAEAAAAlAAAADAAAAAEAAABUAAAAWAAAAJMAAABHAAAAnAAAAFMA AAABAAAAAADhQQCQ4sGYAAAAff///wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA KwAgAAYAAAADAAAAVAAAAMQAAACkAAAARwAAABEBAABTAAAAAQAAAAAA4UEAkOLBqQAAAH3/ //8UAAAATAAAAAAAAAAAAAAAAAAAAP//////////dAAAAFIAZQBtAG8AdgBlACgAKQAgADoA IABDAG8AbQBwAG8AbgBlAG4AdAAHAAAABgAAAAkAAAAGAAAABQAAAAYAAAADAAAAAwAAAAMA AAADAAAAAwAAAAcAAAAGAAAACQAAAAYAAAAGAAAABgAAAAYAAAAGAAAAAwAAAFQAAABYAAAA kwAAAFQAAACcAAAAYAAAAAEAAAAAAOFBAJDiwZgAAABw////AgAAAEwAAAAAAAAAAAAAAAAA AAD//////////1AAAAArACAABgAAAAMAAABUAAAA0AAAAKQAAABUAAAAFAEAAGAAAAABAAAA AADhQQCQ4sGpAAAAcP///xYAAABMAAAAAAAAAAAAAAAAAAAA//////////94AAAARwBlAHQA QwBoAGkAbABkACgAKQAgADoAIABDAG8AbQBwAG8AbgBlAG4AdAAIAAAABgAAAAMAAAAHAAAA BgAAAAMAAAADAAAABgAAAAMAAAADAAAAAwAAAAMAAAADAAAABwAAAAYAAAAJAAAABgAAAAYA AAAGAAAABgAAAAYAAAADAAAAGAAAAAwAAAAAAAAAJwAAABgAAAAGAAAAAAAAAMC/wAAAAAAA JQAAAAwAAAAGAAAAJgAAABwAAAAHAAAAAAAAAAEAAAAAAAAAwL/AACUAAAAMAAAABwAAACsA AAAYAAAAEgAAAJf///9rAAAAfP///yUAAAAMAAAAAgAAACgAAAAMAAAABgAAACUAAAAMAAAA AwAAACgAAAAMAAAABwAAACsAAAAYAAAADwAAAJr///9oAAAAf////1IAAABwAQAABwAAAPb/ //8AAAAAAAAAAAAAAAC8AgAAAAAAAQAAAABBAFIASQBBAEwAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACSfAAAUgJgAABAbQWRfAjr EgDY5hIAAAAAAKzeEgAAAAAAAAAAAP/////43BIA7ykhEB0AAAAAAFIClNwSAFAAAADg3hIA GO6QfPAGkXz/////6waRfAzfIBAAAFICYAAAQDAAAAAI6xIA2OYSAAAAAADw3RIAGN8SAF8r IRAAABIA+CchEAjrEgDjLSEQGGMQA80AAAAIAAAACOsSANjmEgAAAAAALAAAAAAAAAD2NwQA +GIQA8S1IBCARyYQAAASAIQqIRAJAAAAeyohEAjrEgDY5hIAAAAAABhjEAMAAAAAAABSAnTh EgD4JyEQMHElEP////943xIA7ykhEGR2AAgAAAAAJQAAAAwAAAAHAAAAVAAAAHAAAAApAAAA MwAAAEUAAAA+AAAAAQAAAAAA4UEAkOLBLgAAAJH///8GAAAATAAAAAAAAAAAAAAAAAAAAP// ////////WAAAAEMAbABpAGUAbgB0AAcAAAADAAAAAwAAAAYAAAAGAAAAAwAAACUAAAAMAAAA AQAAABgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAABgAAAAMAAAAAAAAACcA AAAYAAAABgAAAAAAAADAv8AAAAAAACUAAAAMAAAABgAAACYAAAAcAAAACAAAAAAAAAABAAAA AAAAAMC/wAAlAAAADAAAAAgAAAArAAAAGAAAADQAAAAU////jQAAAM/+//8lAAAADAAAAAIA AAAoAAAADAAAAAYAAAAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAArAAAAGAAAADEAAAAX//// igAAANL+//8lAAAADAAAAAcAAABUAAAAZAAAAE4AAAC2AAAAYwAAAMEAAAABAAAAAADhQQCQ 4sFTAAAADv///wQAAABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAATABlAGEAZgAGAAAA BgAAAAYAAAADAAAAJQAAAAwAAAABAAAAGwAAABAAAAAxAAAA/P7//zYAAAAQAAAAigAAAPz+ //8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAAWAAAADEAAADQAAAA OgAAANwAAAABAAAAAADhQQCQ4sE2AAAA9P7//wIAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAAKwAgAAYAAAADAAAAJQAAAAwAAAAEAAAAVAAAAJAAAABCAAAA0AAAAHcAAADcAAAA AQAAAAAA4UEAkOLBRwAAAPT+//8LAAAATAAAAAAAAAAAAAAAAAAAAP//////////ZAAAAE8A cABlAHIAYQB0AGkAbwBuACgAKQCtuggAAAAGAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAGAAAA BgAAAAMAAAADAAAAJQAAAAwAAAABAAAAJQAAAAwAAAABAAAAGAAAAAwAAAAAAAAAJwAAABgA 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 AAAAAAAAAAAAAAAAAAD//////////3AAAABBAGQAZAAoACkAIAA6ACAAQwBvAG0AcABvAG4A ZQBuAHQArboHAAAABgAAAAYAAAADAAAAAwAAAAMAAAADAAAAAwAAAAcAAAAGAAAACQAAAAYA AAAGAAAABgAAAAYAAAAGAAAAAwAAAFQAAABYAAAAwwAAAAQBAADMAAAAEAEAAAEAAAAAAOFB AJDiwcgAAADA/v//AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMA AABUAAAAxAAAANQAAAAEAQAAQQEAABABAAABAAAAAADhQQCQ4sHZAAAAwP7//xQAAABMAAAA AAAAAAAAAAAAAAAA//////////90AAAAUgBlAG0AbwB2AGUAKAApACAAOgAgAEMAbwBtAHAA bwBuAGUAbgB0AAcAAAAGAAAACQAAAAYAAAAFAAAABgAAAAMAAAADAAAAAwAAAAMAAAADAAAA BwAAAAYAAAAJAAAABgAAAAYAAAAGAAAABgAAAAYAAAADAAAAVAAAAFgAAADDAAAAEQEAAMwA AAAdAQAAAQAAAAAA4UEAkOLByAAAALP+//8CAAAATAAAAAAAAAAAAAAAAAAAAP////////// UAAAACsAIAAGAAAAAwAAAFQAAADQAAAA1AAAABEBAABEAQAAHQEAAAEAAAAAAOFBAJDiwdkA AACz/v//FgAAAEwAAAAAAAAAAAAAAAAAAAD//////////3gAAABHAGUAdABDAGgAaQBsAGQA KAApACAAOgAgAEMAbwBtAHAAbwBuAGUAbgB0AAgAAAAGAAAAAwAAAAcAAAAGAAAAAwAAAAMA AAAGAAAAAwAAAAMAAAADAAAAAwAAAAMAAAAHAAAABgAAAAkAAAAGAAAABgAAAAYAAAAGAAAA BgAAAAMAAAAYAAAADAAAAAAAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwA AAAGAAAAGwAAABAAAABpAAAAjf///zYAAAAQAAAAkwAAAI3///8bAAAAEAAAAJMAAACN//// GwAAABAAAACTAAAAjf///zYAAAAQAAAAhQAAAIj///8bAAAAEAAAAJMAAACN////NgAAABAA AACFAAAAk////xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA ////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAA AAAlAAAADAAAAAYAAAAbAAAAEAAAAGIBAADt/v//NgAAABAAAACbAQAA7f7//zYAAAAQAAAA mwEAAJ7///82AAAAEAAAABsBAACe////VgAAACwAAABdAQAA0wAAAHEBAADbAAAABAAAAGwB 8f5iAe3+awHp/nYB7f4bAAAAEAAAABsBAACe////GwAAABAAAAAbAQAAnv///zYAAAAQAAAA KgEAAKT///8bAAAAEAAAABsBAACe////NgAAABAAAAAqAQAAmP///xIAAAAMAAAAAgAAABkA AAAMAAAA////AFIAAABwAQAACAAAAPb///8AAAAAAAAAAAAAAAAAAAAAAAAAAQAAAABBAFIA SQBBAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAACSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAAAQFBEDXNuVfAAAUgKs25V8CAAAAAAAUgIAAFICEBQRAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknwAAP//vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAAACQfHAFkXxAAAAA8GIQA1zb lXw4YxADrNuVfAAAAAAAAAAAAABSAvBiEANkdgAIAAAAANjmEgAAAAAAOtmgAWR2AAgAAAAA JQAAAAwAAAAIAAAAVAAAAIQAAABtAQAA3AAAAJYBAADoAAAAAQAAAAAA4UEAkOLBcgEAAOj+ //8JAAAATAAAAAAAAAAAAAAAAAAAAP//////////YAAAAC0AYwBoAGkAbABkAHIAZQBuAK26 AwAAAAUAAAAGAAAAAwAAAAMAAAAGAAAAAwAAAAYAAAAGAAAAJQAAAAwAAAABAAAAKAAAAAwA AAAIAAAAUgAAAHABAAAIAAAA9v///wAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAEEAUgBJAEEA TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAArN4SAPgnIRAwcSUQ//////jcEgDvKSEQ HQAAAAAAAAABAAAAUAAAABAUEQNc25V8AABSAqzblXwIAAAAAABSAgAAUgIQFBEDJN0AABHN lnwAABIAAAAAAPDdEgAY7pB8yGqSfAAA//++apJ8rWiSfAAAUgJgAABAbQWRfAjrEgDY5hIA AAAAAETdEgCR1kJfAAABAAjrEgC83BIAAAAAALDdEgAAAJB8cAWRfEAAAADwYhADXNuVfDhj EAOs25V8AAAAAAAAAAAAAFIC8GIQA2R2AAgAAAAA2OYSAAAAAAA62aABZHYACAAAAAAlAAAA DAAAAAgAAABUAAAAZAAAABkBAAArAAAAKQEAADcAAAABAAAAAADhQQCQ4sEeAQAAmf///wQA AABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAAMQAuAC4AKgAGAAAAAwAAAAMAAAAEAAAA JQAAAAwAAAABAAAAKAAAAAwAAAAIAAAAEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwA AAADAAAAKAAAAAwAAAAGAAAAJgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAA BgAAABsAAAAQAAAAEgEAABf///82AAAAEAAAABIBAAAt////NgAAABAAAADXAAAALf///zYA AAAQAAAA1wAAAF////8bAAAAEAAAANcAAABf////VgAAACgAAADNAAAAZQAAANgAAAB0AAAA AwAAAN0AUP/SAFD/1wBf/xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkA AAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAA AAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAF4AAAAX////NgAAABAAAABeAAAALf///zYA AAAQAAAA1wAAAC3///82AAAAEAAAANcAAABf////GwAAABAAAADXAAAAX////1YAAAAoAAAA zQAAAGUAAADYAAAAdAAAAAMAAADdAFD/0gBQ/9cAX/8SAAAADAAAAAIAAAAZAAAADAAAAP// /wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAlAAAA DAAAAA0AAIAoAAAADAAAAAEAAAAoAAAADAAAAAcAAAAlAAAADAAAAAAAAIAoAAAADAAAAAIA AAAlAAAADAAAAAcAAIAoAAAADAAAAAMAAAAOAAAAFAAAAAAAAAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		19		GoF Structural Patterns		Decorator				This pattern attaches additional responsibilities to an object dynamically providing a flexible alternative to subclassing for extending functionality.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:03:40">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_43405F13_2563_4289_9985_FD3062B50395">
			<UML:Namespace.ownedElement>
				<UML:Class name="Component" xmi.id="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD" visibility="public" namespace="EAPK_43405F13_2563_4289_9985_FD3062B50395" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the interface for objects that can have responsibilities added to them dynamically."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_43405F13_2563_4289_9985_FD3062B50395"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:35:21"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:52:41"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Decorator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{94CC64A7-6B46-440e-B712-36855561AD3E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" supertype="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD" xmi.id="EAID_67DAF88E_21F0_4430_B98E_4A5B15539190" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_182F1B76_4D1D_4fae_9417_867E631D3E98" supertype="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD" xmi.id="EAID_7BB52571_BA43_42bc_AF50_9C555AC2FD52" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Association xmi.id="EAID_F4D583B8_A5D0_497b_8B94_68990EF97E5C" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="component" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="ConcreteComponent" xmi.id="EAID_182F1B76_4D1D_4fae_9417_867E631D3E98" visibility="public" namespace="EAPK_43405F13_2563_4289_9985_FD3062B50395" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an object to which additional responsibilites can be attached."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_43405F13_2563_4289_9985_FD3062B50395"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:35:48"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:53:10"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Decorator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{94CC64A7-6B46-440e-B712-36855561AD3E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="Decorator" xmi.id="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" visibility="public" namespace="EAPK_43405F13_2563_4289_9985_FD3062B50395" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class maintains a reference to a Component object and defines an interface that conforms to Component's interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_43405F13_2563_4289_9985_FD3062B50395"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:36:01"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:53:53"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Decorator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="component-&gt;Operation()"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{94CC64A7-6B46-440e-B712-36855561AD3E}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_34F98D81_7655_4ea4_98A2_313B5044E603" supertype="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" xmi.id="EAID_25DB7E45_44D7_4068_8517_7B67CABE183C" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_C090CE18_DD2E_4c64_AA24_9756D67DB512" supertype="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" xmi.id="EAID_6B8D651F_9D6E_451a_82AE_247CDEE3B5AC" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteDecoratorA" xmi.id="EAID_C090CE18_DD2E_4c64_AA24_9756D67DB512" visibility="public" namespace="EAPK_43405F13_2563_4289_9985_FD3062B50395" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class adds responsibilities to the component."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_43405F13_2563_4289_9985_FD3062B50395"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:38:02"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:54:21"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Decorator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="addedState" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{3AA9BF24-B49E-44ed-9E2F-5CFA13E391D4}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{94CC64A7-6B46-440e-B712-36855561AD3E}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="ConcreteDecoratorB" xmi.id="EAID_34F98D81_7655_4ea4_98A2_313B5044E603" visibility="public" namespace="EAPK_43405F13_2563_4289_9985_FD3062B50395" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class adds responsibilities to the component."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_43405F13_2563_4289_9985_FD3062B50395"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:38:18"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 16:54:30"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Decorator"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="Decorator::Operation();
AddedBehavior();"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{94CC64A7-6B46-440e-B712-36855561AD3E}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
						<UML:Operation name="AddedBehavior" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="1"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{FBF5D114-7EF8-40bd-9259-493EE35C45CC}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Decorator" xmi.id="EAID_404CB75E_2847_45aa_B1A2_41405CF8CACB" diagramType="ClassDiagram" owner="EAPK_404CB75E_2847_45aa_B1A2_41405CF8CACB" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern attaches additional responsibilities to an object dynamically providing a flexible alternative to subclassing for extending functionality."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:55"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 16:54:33"/>
				<UML:TaggedValue tag="package" value="EAPK_43405F13_2563_4289_9985_FD3062B50395"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=264;Top=319;Right=429;Bottom=411;imgL=258;imgT=291;imgR=423;imgB=383;" subject="EAID_34F98D81_7655_4ea4_98A2_313B5044E603" seqno="1" style="DUID=4105484D;LBL=;"/>
				<UML:DiagramElement geometry="Left=80;Top=319;Right=187;Bottom=389;imgL=74;imgT=291;imgR=181;imgB=361;" subject="EAID_C090CE18_DD2E_4c64_AA24_9756D67DB512" seqno="2" style="DUID=37BB32B6;LBL=;"/>
				<UML:DiagramElement geometry="Left=165;Top=184;Right=255;Bottom=254;imgL=159;imgT=156;imgR=249;imgB=226;" subject="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" seqno="3" style="DUID=5740DA98;LBL=;"/>
				<UML:DiagramElement geometry="Left=16;Top=180;Right=123;Bottom=250;imgL=10;imgT=152;imgR=117;imgB=222;" subject="EAID_182F1B76_4D1D_4fae_9417_867E631D3E98" seqno="4" style="DUID=BAA45341;LBL=;"/>
				<UML:DiagramElement geometry="Left=89;Top=38;Right=179;Bottom=108;imgL=83;imgT=10;imgR=173;imgB=80;" subject="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD" seqno="5" style="DUID=B2C7F605;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=69:-158$134:-158$;" subject="EAID_7BB52571_BA43_42bc_AF50_9C555AC2FD52" style="Mode=3;EOID=B2C7F605;SOID=BAA45341;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=CX=66:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=292:-217$292:-73$;" subject="EAID_F4D583B8_A5D0_497b_8B94_68990EF97E5C" style="Mode=3;EOID=B2C7F605;SOID=5740DA98;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=210:-158$134:-158$;" subject="EAID_67DAF88E_21F0_4430_B98E_4A5B15539190" style="Mode=3;EOID=B2C7F605;SOID=5740DA98;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=133:-304$210:-304$;" subject="EAID_6B8D651F_9D6E_451a_82AE_247CDEE3B5AC" style="Mode=3;EOID=5740DA98;SOID=37BB32B6;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=346:-304$210:-304$;" subject="EAID_25DB7E45_44D7_4068_8517_7B67CABE183C" style="Mode=3;EOID=5740DA98;SOID=4105484D;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" name="Decorator" UMLType="Class"/>
		<EAStub xmi.id="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD" name="Component" UMLType="Class"/>
		<EAStub xmi.id="EAID_182F1B76_4D1D_4fae_9417_867E631D3E98" name="ConcreteComponent" UMLType="Class"/>
		<EAStub xmi.id="EAID_34F98D81_7655_4ea4_98A2_313B5044E603" name="ConcreteDecoratorB" UMLType="Class"/>
		<EAStub xmi.id="EAID_C090CE18_DD2E_4c64_AA24_9756D67DB512" name="ConcreteDecoratorA" UMLType="Class"/>
		<UMLPattern name="Decorator" category="GoF Structural Patterns" version="2.0" notes="This pattern attaches additional responsibilities to an object dynamically providing a flexible alternative to subclassing for extending functionality.">
			<UMLPattern.PromptList>
				<Element name="ConcreteDecoratorB:Class" guid="EAID_34F98D81_7655_4ea4_98A2_313B5044E603" id="169" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class adds responsibilities to the component.">
						<![CDATA[This class adds responsibilities to the component.]]>
					</Comment>
				</Element>
				<Element name="ConcreteDecoratorA:Class" guid="EAID_C090CE18_DD2E_4c64_AA24_9756D67DB512" id="168" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class adds responsibilities to the component.">
						<![CDATA[This class adds responsibilities to the component.]]>
					</Comment>
				</Element>
				<Element name="Decorator:Class" guid="EAID_4DB3CEAA_0E33_4be2_B953_BFF93EBAF9E7" id="167" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class maintains a reference to a Component object and defines an interface that conforms to Component's interface.">
						<![CDATA[This class maintains a reference to a Component object and defines an interface that conforms to Component's interface.]]>
					</Comment>
				</Element>
				<Element name="ConcreteComponent:Class" guid="EAID_182F1B76_4D1D_4fae_9417_867E631D3E98" id="166" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an object to which additional responsibilites can be attached.">
						<![CDATA[This class defines an object to which additional responsibilites can be attached.]]>
					</Comment>
				</Element>
				<Element name="Component:Class" guid="EAID_417A0C25_824B_47ac_9080_9AB2213EAFDD" id="165" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the interface for objects that can have responsibilities added to them dynamically.">
						<![CDATA[This class defines the interface for objects that can have responsibilities added to them dynamically.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="12178" cy="11129">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 AEAwAAAACOsSANjmEgAAAAAA8N0SABjfEgBfKyEQAAASAPgnIRAI6xIA4y0hEACYEQPNAAAA CAAAAAjrEgDY5hIAAAAAACwAAAAAAAAA+50EAOCXEQPEtSAQgEcmEAAAEgCEKiEQCQAAAHsq IRAI6xIA2OYSAAAAAAAAmBEDAAAAAAAAUgJ04RIA+CchEDBxJRD/////eN8SAO8pIRBkdgAI AAAAACUAAAAMAAAABwAAAFQAAAC0AAAADgAAAKEAAABxAAAArAAAAAEAAAAAAOFBAJDiwRQA AABD////EQAAAEwAAAAAAAAAAAAAAAAAAAD//////////3AAAABDAG8AbgBjAHIAZQB0AGUA QwBvAG0AcABvAG4AZQBuAHQArboHAAAABgAAAAYAAAAGAAAABAAAAAYAAAADAAAABgAAAAcA AAAGAAAACQAAAAYAAAAGAAAABgAAAAYAAAAGAAAAAwAAACUAAAAMAAAAAQAAABsAAAAQAAAA EAAAADH///82AAAAEAAAAHoAAAAx////GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAAGAAAAAwA AAAAQEAAVAAAAFgAAAAPAAAAuwAAABgAAADHAAAAAQAAAAAA4UEAkOLBFQAAACn///8CAAAA TAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAACQAAAAIAAAALsA AABVAAAAxwAAAAEAAAAAAOFBAJDiwSYAAAAp////CwAAAEwAAAAAAAAAAAAAAAAAAAD///// /////2QAAABPAHAAZQByAGEAdABpAG8AbgAoACkArboIAAAABgAAAAYAAAADAAAABgAAAAMA AAADAAAABgAAAAYAAAADAAAAAwAAABgAAAAMAAAAAAAAACcAAAAYAAAABgAAAAAAAADAv8AA AAAAACUAAAAMAAAABgAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAgA AAArAAAAGAAAAKgAAABF////AQEAAAD///8lAAAADAAAAAIAAAAoAAAADAAAAAYAAAAlAAAA DAAAAAMAAAAoAAAADAAAAAgAAAArAAAAGAAAAKUAAABI/////gAAAAP///8lAAAADAAAAAUA AABUAAAAhAAAALQAAAClAAAA5AAAAK8AAAABAAAAAADhQQCQ4sG6AAAAP////wkAAABMAAAA AAAAAAAAAAAAAAAA//////////9gAAAARABlAGMAbwByAGEAdABvAHIArboHAAAABgAAAAYA AAAGAAAABAAAAAYAAAADAAAABgAAAAQAAAAlAAAADAAAAAEAAAAbAAAAEAAAAKUAAAAt//// NgAAABAAAAD+AAAALf///xgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQA AABYAAAApAAAAL8AAACtAAAAywAAAAEAAAAAAOFBAJDiwaoAAAAl////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAArACAABgAAAAMAAABUAAAAkAAAALUAAAC/AAAA6gAAAMsA AAABAAAAAADhQQCQ4sG7AAAAJf///wsAAABMAAAAAAAAAAAAAAAAAAAA//////////9kAAAA TwBwAGUAcgBhAHQAaQBvAG4AKAApAK26CAAAAAYAAAAGAAAAAwAAAAYAAAADAAAAAwAAAAYA AAAGAAAAAwAAAAMAAAAYAAAADAAAAICAgAAeAAAAGAAAAMIAAAAY/////wAAAAL///9LAAAA EAAAAAAAAAAFAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQA AABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFBAJDiwcIAAAAY////AQAAAEwAAAAUAAAA AAAAAAAAAAAAAAAAAAAAAFAAAAADAK26cwAAABYAAAAMAAAAAAAAAFQAAACEAAAAvAAAAMwA AADxAAAA2AAAAAEAAAAAAOFBAJDiwcIAAAAY////CQAAAEwAAAAAAAAAAAAAAAAAAAD///// /////2AAAABjAG8AbQBwAG8AbgBlAG4AdACtugUAAAAGAAAACQAAAAYAAAAGAAAABgAAAAYA AAAGAAAAAwAAAFQAAABUAAAA8QAAAMwAAAD0AAAA2AAAAAEAAAAAAOFBAJDiwfcAAAAY//// AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAAtAK26AwAAAFQAAABUAAAA9AAAAMwA AAD6AAAA2AAAAAEAAAAAAOFBAJDiwfoAAAAY////AQAAAEwAAAAAAAAAAAAAAAAAAAD///// /////1AAAAA+AK26BgAAAFQAAACEAAAA+gAAAMwAAAApAQAA2AAAAAEAAAAAAOFBAJDiwQAB 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 rboIAAAABgAAAAYAAAADAAAABgAAAAMAAAADAAAABgAAAAYAAAADAAAAAwAAABgAAAAMAAAA gICAAB4AAAAYAAAAJQEAAJH+//+tAQAAZf7//0sAAAAQAAAAAAAAAAUAAAAWAAAADAAAAAEA AAASAAAADAAAAAEAAAAbAAAAEAAAAAAAAAAAAAAAVAAAAFQAAAAAAAAAAAAAAP////////// AQAAAAAA4UEAkOLBJQEAAJH+//8BAAAATAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMA rbprAAAAFgAAAAwAAAAAAAAAVAAAAIQAAAAfAQAAUwEAAEwBAABfAQAAAQAAAAAA4UEAkOLB JQEAAJH+//8JAAAATAAAAAAAAAAAAAAAAAAAAP//////////YAAAAEQAZQBjAG8AcgBhAHQA bwByAK26BwAAAAYAAAAFAAAABgAAAAMAAAAGAAAAAwAAAAYAAAADAAAAVAAAAFgAAABMAQAA UwEAAFIBAABfAQAAAQAAAAAA4UEAkOLBUgEAAJH+//8CAAAATAAAAAAAAAAAAAAAAAAAAP// ////////UAAAADoAOgADAAAAAwAAAFQAAACEAAAAUgEAAFMBAACBAQAAXwEAAAEAAAAAAOFB AJDiwVgBAACR/v//CQAAAEwAAAAAAAAAAAAAAAAAAAD//////////2AAAABPAHAAZQByAGEA dABpAG8AbgCtuggAAAAGAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAGAAAABgAAAFQAAABYAAAA gQEAAFMBAACHAQAAXwEAAAEAAAAAAOFBAJDiwYcBAACR/v//AgAAAEwAAAAAAAAAAAAAAAAA AAD//////////1AAAAAoACkAAwAAAAMAAABUAAAAVAAAAIcBAABTAQAAigEAAF8BAAABAAAA AADhQQCQ4sGNAQAAkf7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAOwCtugMA AAAbAAAAEAAAAKwBAACm/v//FgAAAAwAAAAAAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAA GwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFBAJDiwSUB AACE/v//AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26UgAAABYAAAAMAAAA AAAAAFQAAACcAAAAHwEAAGABAABoAQAAbAEAAAEAAAAAAOFBAJDiwSUBAACE/v//DQAAAEwA AAAAAAAAAAAAAAAAAAD//////////2gAAABBAGQAZABlAGQAQgBlAGgAYQB2AGkAbwByAK26 BwAAAAYAAAAGAAAABgAAAAYAAAAHAAAABgAAAAYAAAAGAAAABQAAAAMAAAAGAAAAAwAAAFQA AABYAAAAaAEAAGABAABuAQAAbAEAAAEAAAAAAOFBAJDiwW4BAACE/v//AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAAoACkAAwAAAAMAAABUAAAAVAAAAG4BAABgAQAAcQEAAGwB AAABAAAAAADhQQCQ4sF0AQAAhP7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA OwCtugMAAAAbAAAAEAAAAKwBAACm/v//FgAAAAwAAAAAAAAAGAAAAAwAAAAAQEAAVAAAAFgA AAAHAQAAbQEAABABAAB5AQAAAQAAAAAA4UEAkOLBDQEAAHf+//8CAAAATAAAAAAAAAAAAAAA AAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAACoAAAAGAEAAG0BAABnAQAAeQEAAAEA AAAAAOFBAJDiwR4BAAB3/v//DwAAAEwAAAAAAAAAAAAAAAAAAAD//////////2wAAABBAGQA ZABlAGQAQgBlAGgAYQB2AGkAbwByACgAKQCtugcAAAAGAAAABgAAAAYAAAAGAAAABwAAAAYA AAAGAAAABgAAAAUAAAADAAAABgAAAAMAAAADAAAAAwAAABgAAAAMAAAAAAAAACYAAAAcAAAA CAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAgAAAAbAAAAEAAAAEUAAABM////NgAAABAA AABFAAAAYv///zYAAAAQAAAAhgAAAGL///82AAAAEAAAAIYAAACU////GwAAABAAAACGAAAA lP///1YAAAAoAAAAewAAAFAAAACGAAAAXwAAAAMAAACMAIX/gQCF/4YAlP8SAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAA DAAAAAgAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAIAAAAGwAAABAA AAD/AAAAJ////zYAAAAQAAAAJAEAACf///82AAAAEAAAACQBAAC3////NgAAABAAAACzAAAA t////1YAAAAsAAAA+QAAALkAAAANAQAAwQAAAAQAAAAJASv//wAn/wgBI/8TASf/GwAAABAA AACzAAAAt////xsAAAAQAAAAswAAALf///82AAAAEAAAAMIAAAC9////GwAAABAAAACzAAAA t////zYAAAAQAAAAwgAAALH///8SAAAADAAAAAIAAAAZAAAADAAAAP///wBSAAAAcAEAAAYA AAD2////AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFICYAAAQG0F kXwI6xIA2OYSAAAAAACs3hIA+CchEDBxJRD/////+NwSAO8pIRAdAAAAAAAAAAEAAABQAAAA 2JcRA1zblXwAAFICrNuVfAgAAAAAAFICAABSAtiXEQMk3QAAEc2WfAAAEgAAAAAA8N0SABju kHzIapJ8AAD//75qknytaJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAARN0SAJHWQl8AAAEA COsSALzcEgAAAAAAsN0SAAAAkHxwBZF8QAAAAJB+EANc25V82H4QA6zblXwAAAAAAAAAAAAA UgKQfhADZHYACAAAAADY5hIAAAAAADrZoAFkdgAIAAAAACUAAAAMAAAABgAAAFQAAACIAAAA EAEAAKsAAABIAQAAtwAAAAEAAAAAAOFBAJDiwRYBAAA5////CgAAAEwAAAAAAAAAAAAAAAAA AAD//////////2AAAAAtAGMAbwBtAHAAbwBuAGUAbgB0AAMAAAAFAAAABgAAAAkAAAAGAAAA BgAAAAYAAAAGAAAABgAAAAMAAAAlAAAADAAAAAEAAAAoAAAADAAAAAYAAAASAAAADAAAAAEA AAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAAmAAAAHAAAAAgAAAAAAAAA AQAAAAAAAAAAAAAAJQAAAAwAAAAIAAAAGwAAABAAAADSAAAASP///zYAAAAQAAAA0gAAAGL/ //82AAAAEAAAAIYAAABi////NgAAABAAAACGAAAAlP///xsAAAAQAAAAhgAAAJT///9WAAAA KAAAAHsAAABQAAAAhgAAAF8AAAADAAAAjACF/4EAhf+GAJT/EgAAAAwAAAACAAAAGQAAAAwA AAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAIAAAA JgAAABwAAAAIAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAACAAAABsAAAAQAAAAhQAAAMH+ //82AAAAEAAAAIUAAADQ/v//NgAAABAAAADSAAAA0P7//zYAAAAQAAAA0gAAAAL///8bAAAA EAAAANIAAAAC////VgAAACgAAADHAAAA4gAAANIAAADxAAAAAwAAANgA8/7NAPP+0gAC/xIA AAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAA AwAAACgAAAAMAAAACAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAgA AAAbAAAAEAAAAFoBAADB/v//NgAAABAAAABaAQAA0P7//zYAAAAQAAAA0gAAAND+//82AAAA EAAAANIAAAAC////GwAAABAAAADSAAAAAv///1YAAAAoAAAAxwAAAOIAAADSAAAA8QAAAAMA AADYAPP+zQDz/tIAAv8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAAlAAAADAAAAA0AAIAoAAAADAAAAAEA AAAoAAAADAAAAAcAAAAlAAAADAAAAAAAAIAoAAAADAAAAAIAAAAlAAAADAAAAAcAAIAoAAAA DAAAAAMAAAAOAAAAFAAAAAAAAAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		20		GoF Structural Patterns		Facade				This pattern provides a unified interface to a set of interfaces in a subsystem. It defines a higher-level interface that makes the subsystem easier to use.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:06:11">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_80C39CDB_8019_4b48_B05A_E1B57C2D02F3">
			<UML:Namespace.ownedElement>
				<UML:Class name="Facade" xmi.id="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) knows which subsystem classes are responsible for a request, and (b) delegates client requests to appropriate subsystem objects."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:34"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:19:04"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_74BDE5F8_0EDE_40fb_8B1D_FE04A45C4A7A" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=5;SY=2;EX=-10;EY=2;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_5D32F4D2_E5A0_4235_881E_4DF1327AD04F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Association xmi.id="EAID_780741D7_9A4A_407d_A19F_9164BF366EFE" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=-5;SY=-4;EX=25;EY=-5;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_12B47071_1665_4e80_AE4C_993D13E6A6F6">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Association xmi.id="EAID_8E7AA0CD_250B_43ad_8A57_F0430E85F21D" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_34041B6B_2A1E_48a9_B84D_76582EFB691C">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Association xmi.id="EAID_E5595822_D870_42bf_95B8_7300C9E960DC" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=-2;SY=-3;EX=25;EY=-5;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_3D92A114_433E_41ce_9E64_F5BCFB35A015">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="SubsystemClass1" xmi.id="EAID_B5DC4ABD_65EF_40b0_88F2_94FB7B11A8B4" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:20:54"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Association xmi.id="EAID_0B53D27F_EB4C_44ff_BF52_942C55A4163E" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Unspecified"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=-3;SY=-1;EX=-3;EY=-3;"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_12B47071_1665_4e80_AE4C_993D13E6A6F6">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_B5DC4ABD_65EF_40b0_88F2_94FB7B11A8B4">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_3D92A114_433E_41ce_9E64_F5BCFB35A015" supertype="EAID_B5DC4ABD_65EF_40b0_88F2_94FB7B11A8B4" xmi.id="EAID_5F97BE9E_553F_4db4_AFC9_85B6D4497A73" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="SubsystemClass2" xmi.id="EAID_34041B6B_2A1E_48a9_B84D_76582EFB691C" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:20:56"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="SubsystemClass3" xmi.id="EAID_12B47071_1665_4e80_AE4C_993D13E6A6F6" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:20:58"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="SubsystemClass4" xmi.id="EAID_3D92A114_433E_41ce_9E64_F5BCFB35A015" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-17 15:05:41"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="SubsystemClass5" xmi.id="EAID_0EB51009_BC66_479a_97DB_736BDD92B3BD" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:21:02"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Generalization subtype="EAID_D0890323_388E_4b9d_9B93_BC929FD43065" supertype="EAID_0EB51009_BC66_479a_97DB_736BDD92B3BD" xmi.id="EAID_7366D6E4_A68E_49d6_939A_B47C74A00941" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_5D32F4D2_E5A0_4235_881E_4DF1327AD04F" supertype="EAID_0EB51009_BC66_479a_97DB_736BDD92B3BD" xmi.id="EAID_8289629F_C2B6_49a3_A0F0_A2D773E32C43" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="SubsystemClass6" xmi.id="EAID_5D32F4D2_E5A0_4235_881E_4DF1327AD04F" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:21:04"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
				<UML:Class name="SubsystemClass7" xmi.id="EAID_D0890323_388E_4b9d_9B93_BC929FD43065" visibility="public" namespace="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:57:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:21:12"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Facade"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Facade" xmi.id="EAID_0D703CEC_9791_45d6_98C0_674E877A78B2" diagramType="ClassDiagram" owner="EAPK_0D703CEC_9791_45d6_98C0_674E877A78B2" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern provides a unified interface to a set of interfaces in a subsystem. It defines a higher-level interface that makes the subsystem easier to use."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:58"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 16:57:52"/>
				<UML:TaggedValue tag="package" value="EAPK_80C39CDB_8019_4b48_B05A_E1B57C2D02F3"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=421;Top=248;Right=518;Bottom=279;imgL=412;imgT=210;imgR=509;imgB=241;" subject="EAID_D0890323_388E_4b9d_9B93_BC929FD43065" seqno="1" style="DUID=6A014717;LBL=;"/>
				<UML:DiagramElement geometry="Left=287;Top=248;Right=384;Bottom=279;imgL=278;imgT=210;imgR=375;imgB=241;" subject="EAID_5D32F4D2_E5A0_4235_881E_4DF1327AD04F" seqno="2" style="DUID=32410636;LBL=;"/>
				<UML:DiagramElement geometry="Left=360;Top=136;Right=457;Bottom=167;imgL=351;imgT=98;imgR=448;imgB=129;" subject="EAID_0EB51009_BC66_479a_97DB_736BDD92B3BD" seqno="3" style="DUID=3BD63445;LBL=;"/>
				<UML:DiagramElement geometry="Left=19;Top=253;Right=116;Bottom=284;imgL=10;imgT=215;imgR=107;imgB=246;" subject="EAID_3D92A114_433E_41ce_9E64_F5BCFB35A015" seqno="4" style="DUID=47594C01;LBL=;"/>
				<UML:DiagramElement geometry="Left=158;Top=200;Right=255;Bottom=231;imgL=149;imgT=162;imgR=246;imgB=193;" subject="EAID_12B47071_1665_4e80_AE4C_993D13E6A6F6" seqno="5" style="DUID=4DB4266B;LBL=;"/>
				<UML:DiagramElement geometry="Left=126;Top=119;Right=223;Bottom=150;imgL=117;imgT=81;imgR=214;imgB=112;" subject="EAID_34041B6B_2A1E_48a9_B84D_76582EFB691C" seqno="6" style="DUID=02B040DC;LBL=;"/>
				<UML:DiagramElement geometry="Left=19;Top=154;Right=116;Bottom=185;imgL=10;imgT=116;imgR=107;imgB=147;" subject="EAID_B5DC4ABD_65EF_40b0_88F2_94FB7B11A8B4" seqno="7" style="DUID=996FACBF;LBL=;"/>
				<UML:DiagramElement geometry="Left=219;Top=48;Right=316;Bottom=79;imgL=210;imgT=10;imgR=307;imgB=41;" subject="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05" seqno="8" style="DUID=1AE164BA;LBL=;"/>
				<UML:DiagramElement geometry="SX=-2;SY=-3;EX=25;EY=-5;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=265:-272$;" subject="EAID_E5595822_D870_42bf_95B8_7300C9E960DC" style="Mode=3;EOID=47594C01;SOID=1AE164BA;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=-5;SY=-4;EX=25;EY=-5;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_780741D7_9A4A_407d_A19F_9164BF366EFE" style="Mode=3;EOID=4DB4266B;SOID=1AE164BA;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=5;SY=2;EX=-10;EY=2;EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_74BDE5F8_0EDE_40fb_8B1D_FE04A45C4A7A" style="Mode=3;EOID=32410636;SOID=1AE164BA;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=3;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_8E7AA0CD_250B_43ad_8A57_F0430E85F21D" style="Mode=3;EOID=02B040DC;SOID=1AE164BA;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_5F97BE9E_553F_4db4_AFC9_85B6D4497A73" style="Mode=2;EOID=996FACBF;SOID=47594C01;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=-3;SY=-1;EX=-3;EY=-3;EDGE=4;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=137:-215$137:-169$;" subject="EAID_0B53D27F_EB4C_44ff_BF52_942C55A4163E" style="Mode=3;EOID=996FACBF;SOID=4DB4266B;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=469:-217$408:-217$;" subject="EAID_7366D6E4_A68E_49d6_939A_B47C74A00941" style="Mode=3;EOID=3BD63445;SOID=6A014717;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=335:-217$408:-217$;" subject="EAID_8289629F_C2B6_49a3_A0F0_A2D773E32C43" style="Mode=3;EOID=3BD63445;SOID=32410636;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05" name="Facade" UMLType="Class"/>
		<EAStub xmi.id="EAID_5D32F4D2_E5A0_4235_881E_4DF1327AD04F" name="SubsystemClass6" UMLType="Class"/>
		<EAStub xmi.id="EAID_12B47071_1665_4e80_AE4C_993D13E6A6F6" name="SubsystemClass3" UMLType="Class"/>
		<EAStub xmi.id="EAID_34041B6B_2A1E_48a9_B84D_76582EFB691C" name="SubsystemClass2" UMLType="Class"/>
		<EAStub xmi.id="EAID_3D92A114_433E_41ce_9E64_F5BCFB35A015" name="SubsystemClass4" UMLType="Class"/>
		<EAStub xmi.id="EAID_B5DC4ABD_65EF_40b0_88F2_94FB7B11A8B4" name="SubsystemClass1" UMLType="Class"/>
		<EAStub xmi.id="EAID_D0890323_388E_4b9d_9B93_BC929FD43065" name="SubsystemClass7" UMLType="Class"/>
		<EAStub xmi.id="EAID_0EB51009_BC66_479a_97DB_736BDD92B3BD" name="SubsystemClass5" UMLType="Class"/>
		<UMLPattern name="Facade" category="GoF Structural Patterns" version="2.0" notes="This pattern provides a unified interface to a set of interfaces in a subsystem. It defines a higher-level interface that makes the subsystem easier to use.">
			<UMLPattern.PromptList>
				<Element name="SubsystemClass7:Class" guid="EAID_D0890323_388E_4b9d_9B93_BC929FD43065" id="164" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="SubsystemClass6:Class" guid="EAID_5D32F4D2_E5A0_4235_881E_4DF1327AD04F" id="163" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="SubsystemClass5:Class" guid="EAID_0EB51009_BC66_479a_97DB_736BDD92B3BD" id="162" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="SubsystemClass4:Class" guid="EAID_3D92A114_433E_41ce_9E64_F5BCFB35A015" id="161" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="SubsystemClass3:Class" guid="EAID_12B47071_1665_4e80_AE4C_993D13E6A6F6" id="160" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="SubsystemClass2:Class" guid="EAID_34041B6B_2A1E_48a9_B84D_76582EFB691C" id="159" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="SubsystemClass1:Class" guid="EAID_B5DC4ABD_65EF_40b0_88F2_94FB7B11A8B4" id="158" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.">
						<![CDATA[This class (a) implements subsystem functionality, (b) handles work assigned by the Facade object, and (c) keeps no reference to the facade.]]>
					</Comment>
				</Element>
				<Element name="Facade:Class" guid="EAID_27140057_DC91_470f_B501_2EBDD5E6AB05" id="157" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) knows which subsystem classes are responsible for a request, and (b) delegates client requests to appropriate subsystem objects.">
						<![CDATA[This class (a) knows which subsystem classes are responsible for a request, and (b) delegates client requests to appropriate subsystem objects.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="14596" cy="7250">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 YQBzAHMANwCtugcAAAAGAAAABgAAAAYAAAAFAAAABgAAAAMAAAAGAAAACQAAAAcAAAADAAAA BgAAAAYAAAAGAAAABgAAACUAAAAMAAAAAQAAABgAAAAMAAAAiwAAABgAAAAMAAAAAAAAABgA AAAMAAAAAEBAABgAAAAMAAAAAAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAA DAAAAAYAAAAbAAAAEAAAAAkBAACx////NgAAABAAAAAJAQAA8P7//zYAAAAQAAAAdAAAAPD+ //8bAAAAEAAAAHQAAADw/v//GwAAABAAAAB0AAAA8P7//zYAAAAQAAAAgwAAAPb+//8bAAAA EAAAAHQAAADw/v//NgAAABAAAACDAAAA6v7//xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIA AAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAA BgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAAAMBAACx////NgAAABAA AADrAAAAOP///xsAAAAQAAAA6wAAADj///8bAAAAEAAAAOsAAAA4////NgAAABAAAADpAAAA SP///xsAAAAQAAAA6wAAADj///82AAAAEAAAAPQAAABF////EgAAAAwAAAACAAAAGQAAAAwA AAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAA JgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAFAEAALH/ //82AAAAEAAAAEEBAAAI////GwAAABAAAABBAQAACP///xsAAAAQAAAAQQEAAAj///82AAAA EAAAADgBAAAV////GwAAABAAAABBAQAACP///zYAAAAQAAAAQwEAABj///8SAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAA DAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAA AAD2AAAAsf///zYAAAAQAAAAwQAAAIn///8bAAAAEAAAAMEAAACJ////GwAAABAAAADBAAAA if///zYAAAAQAAAAyQAAAJf///8bAAAAEAAAAMEAAACJ////NgAAABAAAADRAAAAjf///xIA AAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAA AwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYA AAAbAAAAEAAAAEMAAAAD////NgAAABAAAABDAAAAJf///zYAAAAQAAAAQwAAACX///82AAAA EAAAAEMAAABH////GwAAABAAAABDAAAAR////1YAAAAoAAAANQAAAJMAAABAAAAAogAAAAMA AABJADj/PgA4/0MAR/8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAA DAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAA AAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAACeAAAAKf///zYAAAAQAAAAiQAAACn///82AAAA EAAAAIkAAABX////NgAAABAAAAB0AAAAV////xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIA AAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAA BgAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAANUBAAAI////NgAAABAA AADVAQAAJ////zYAAAAQAAAAmAEAACf///82AAAAEAAAAJgBAABZ////GwAAABAAAACYAQAA Wf///1YAAAAoAAAAigEAAIEAAACVAQAAkAAAAAMAAACeAUr/kwFK/5gBWf8SAAAADAAAAAIA AAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAA DAAAAAYAAAAmAAAAHAAAAAYAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAA AABPAQAACP///zYAAAAQAAAATwEAACf///82AAAAEAAAAJgBAAAn////NgAAABAAAACYAQAA Wf///xsAAAAQAAAAmAEAAFn///9WAAAAKAAAAIoBAACBAAAAlQEAAJAAAAADAAAAngFK/5MB Sv+YAVn/EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8A JQAAAAwAAAADAAAAKAAAAAwAAAAGAAAAJQAAAAwAAAANAACAKAAAAAwAAAABAAAAKAAAAAwA AAAFAAAAJQAAAAwAAAAAAACAKAAAAAwAAAACAAAAJQAAAAwAAAAHAACAKAAAAAwAAAADAAAA DgAAABQAAAAAAAAAEAAAABQAAAA=</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		21		GoF Structural Patterns		Flyweight				This pattern uses sharing to support large numbers of fine-grained objects efficiently.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:06:33">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021">
			<UML:Namespace.ownedElement>
				<UML:Class name="FlyweightFactory" xmi.id="EAID_6E8BD5BB_AD33_476b_869C_781904B97BA3" visibility="public" namespace="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) creates and manages flyweight objects, and (b) ensures that flyweights are shared properly."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:09:36"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:31:48"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Flyweight"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="GetFlyweight" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="if (flyweight[key] exists) {
   return existing flyweight;
} else {
   create new flyweight;
   add it to pool of flyweights;
   return the new flyweight;
}"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{46872B4A-905F-4dc1-AF63-65A8D6711518}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-905F-4dc1-AF63-65A8D6711518}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="key" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid1"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="key"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{3DB08D6D-6FED-42ff-B17F-2A3CA276953B}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_12EEF313_AF25_4d93_9BEA_ECD59F557FAD" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="flyweight" aggregation="shared" isOrdered="false" isNavigable="false" type="EAID_6E8BD5BB_AD33_476b_869C_781904B97BA3">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" multiplicity="1..*" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Association xmi.id="EAID_D1C61E73_B6E0_4117_A05E_427906A35F91" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_86090CB7_5167_4431_99EC_07077812C461">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_6E8BD5BB_AD33_476b_869C_781904B97BA3">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Flyweight" xmi.id="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19" visibility="public" namespace="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class declares an interface through which flyweights can receive and act on extrinsic state."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:12:10"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:31:07"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Flyweight"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{F4516A0D-12B0-4a89-80E9-499C814FF441}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-12B0-4a89-80E9-499C814FF441}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="extrinsicState" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid2"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="extrinsicState"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{6F539668-C28B-4ad1-A5C7-A119BC4F1E59}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_E3DC1307_ACD6_42a5_92AE_CB3478DA62C7" supertype="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19" xmi.id="EAID_4C195636_BD17_43da_8A2F_80BF68B93ADF" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_93B919D3_27E6_4a01_A9B5_F0647CF5159F" supertype="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19" xmi.id="EAID_52985701_D571_42f8_9CA5_0C7F840CCE1A" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="ConcreteFlyweight" xmi.id="EAID_E3DC1307_ACD6_42a5_92AE_CB3478DA62C7" visibility="public" namespace="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class implements the Flyweight interface and adds storage for intrinsic state, if any."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:16:31"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:30:32"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Flyweight"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="intrinsicState" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{6BC0C7BA-477D-4b91-A9CF-24A46E1AE249}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{F4516A0D-12B0-4a89-80E9-499C814FF441}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-12B0-4a89-80E9-499C814FF441}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="extrinsicState" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid2"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="extrinsicState"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{6F539668-C28B-4ad1-A5C7-A119BC4F1E59}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_B8F7AE33_81B5_4b86_A138_B42AFD4ABF50" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="EX=-14;EY=-8;SX=43;SY=-2;EDGE=2;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_86090CB7_5167_4431_99EC_07077812C461">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_E3DC1307_ACD6_42a5_92AE_CB3478DA62C7">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="UnsharedConcreteFlyweight" xmi.id="EAID_93B919D3_27E6_4a01_A9B5_F0647CF5159F" visibility="public" namespace="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="Not all Flyweight subclasses need to be shared. The Flyweight interface enables sharing; it doesn't enforce it."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:16:50"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:33:23"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Flyweight"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Attribute name="allState" changeable="none" visibility="private" ownerScope="instance" targetScope="instance">
							<UML:Attribute.initialValue>
								<UML:Expression/>
							</UML:Attribute.initialValue>
							<UML:StructuralFeature.type>
								<UML:Classifier xmi.idref="eaxmiid0"/>
							</UML:StructuralFeature.type>
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="derived" value="0"/>
								<UML:TaggedValue tag="containment" value="Not Specified"/>
								<UML:TaggedValue tag="length" value="0"/>
								<UML:TaggedValue tag="ordered" value="0"/>
								<UML:TaggedValue tag="precision" value="0"/>
								<UML:TaggedValue tag="scale" value="0"/>
								<UML:TaggedValue tag="collection" value="false"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="lowerBound" value="1"/>
								<UML:TaggedValue tag="upperBound" value="1"/>
								<UML:TaggedValue tag="duplicates" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{7A720B80-1B62-4e0a-A458-E63D51B6CA05}"/>
							</UML:ModelElement.taggedValue>
						</UML:Attribute>
						<UML:Operation name="Operation" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{F4516A0D-12B0-4a89-80E9-499C814FF441}"/>
							</UML:ModelElement.taggedValue>
							<UML:BehavioralFeature.parameter>
								<UML:Parameter kind="return" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid0"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{RETURNID-12B0-4a89-80E9-499C814FF441}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
								<UML:Parameter name="extrinsicState" kind="in" visibility="public">
									<UML:Parameter.type>
										<UML:Classifier xmi.idref="eaxmiid2"/>
									</UML:Parameter.type>
									<UML:ModelElement.taggedValue>
										<UML:TaggedValue tag="pos" value="0"/>
										<UML:TaggedValue tag="type" value="extrinsicState"/>
										<UML:TaggedValue tag="const" value="0"/>
										<UML:TaggedValue tag="ea_guid" value="{6F539668-C28B-4ad1-A5C7-A119BC4F1E59}"/>
									</UML:ModelElement.taggedValue>
									<UML:Parameter.defaultValue>
										<UML:Expression/>
									</UML:Parameter.defaultValue>
								</UML:Parameter>
							</UML:BehavioralFeature.parameter>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_84BC1D3B_F0E4_4f89_9E49_6E07694A4DD9" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=-1;EX=-7;EY=-8;EDGE=2;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_86090CB7_5167_4431_99EC_07077812C461">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_93B919D3_27E6_4a01_A9B5_F0647CF5159F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Client" xmi.id="EAID_86090CB7_5167_4431_99EC_07077812C461" visibility="public" namespace="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) maintains a reference to a flyweight, and (b) computes or stores the extrinsic state of flyweight(s)."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:18:08"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 11:29:57"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Flyweight"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Flyweight" xmi.id="EAID_AD8F6E4F_28C7_4d12_8B11_2A92B317235D" diagramType="ClassDiagram" owner="EAPK_AD8F6E4F_28C7_4d12_8B11_2A92B317235D" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern uses sharing to support large numbers of fine-grained objects efficiently."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:00"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-16 12:13:21"/>
				<UML:TaggedValue tag="package" value="EAPK_BEA61E1B_0666_4e2e_B4F0_C9E0832D5021"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=53;Top=375;Right=143;Bottom=405;imgL=38;imgT=334;imgR=128;imgB=364;" subject="EAID_86090CB7_5167_4431_99EC_07077812C461" seqno="1" style="DUID=F9FD74CE;LBL=;"/>
				<UML:DiagramElement geometry="Left=377;Top=281;Right=523;Bottom=351;imgL=362;imgT=240;imgR=508;imgB=310;" subject="EAID_93B919D3_27E6_4a01_A9B5_F0647CF5159F" seqno="2" style="DUID=C67AD25D;LBL=;"/>
				<UML:DiagramElement geometry="Left=199;Top=283;Right=342;Bottom=353;imgL=184;imgT=242;imgR=327;imgB=312;" subject="EAID_E3DC1307_ACD6_42a5_92AE_CB3478DA62C7" seqno="3" style="DUID=60DE5DEA;LBL=;"/>
				<UML:DiagramElement geometry="Left=283;Top=68;Right=427;Bottom=138;imgL=268;imgT=27;imgR=412;imgB=97;" subject="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19" seqno="4" style="DUID=C5568ADB;LBL=;"/>
				<UML:DiagramElement geometry="Left=25;Top=51;Right=177;Bottom=221;imgL=10;imgT=10;imgR=162;imgB=180;" subject="EAID_6E8BD5BB_AD33_476b_869C_781904B97BA3" seqno="5" style="DUID=2CD61695;LBL=;"/>
				<UML:DiagramElement geometry="EX=0;EY=0;EDGE=2;$LLB=;LLT=CX=55:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=CX=26:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;Path=;" subject="EAID_12EEF313_AF25_4d93_9BEA_ECD59F557FAD" style="Mode=2;EOID=C5568ADB;SOID=2CD61695;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_D1C61E73_B6E0_4117_A05E_427906A35F91" style="Mode=2;EOID=2CD61695;SOID=F9FD74CE;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=270:-188$355:-188$;" subject="EAID_4C195636_BD17_43da_8A2F_80BF68B93ADF" style="Mode=3;EOID=C5568ADB;SOID=60DE5DEA;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=450:-188$355:-188$;" subject="EAID_52985701_D571_42f8_9CA5_0C7F840CCE1A" style="Mode=3;EOID=C5568ADB;SOID=C67AD25D;Hidden=0;"/>
				<UML:DiagramElement geometry="EX=-14;EY=-8;SX=43;SY=-2;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=178:-391$178:-324$;" subject="EAID_B8F7AE33_81B5_4b86_A138_B42AFD4ABF50" style="Mode=3;EOID=60DE5DEA;SOID=F9FD74CE;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=-1;EX=-7;EY=-8;EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=354:-391$354:-321$;" subject="EAID_84BC1D3B_F0E4_4f89_9E49_6E07694A4DD9" style="Mode=3;EOID=C67AD25D;SOID=F9FD74CE;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_6E8BD5BB_AD33_476b_869C_781904B97BA3" name="FlyweightFactory" UMLType="Class"/>
		<EAStub xmi.id="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19" name="Flyweight" UMLType="Class"/>
		<EAStub xmi.id="EAID_86090CB7_5167_4431_99EC_07077812C461" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_E3DC1307_ACD6_42a5_92AE_CB3478DA62C7" name="ConcreteFlyweight" UMLType="Class"/>
		<EAStub xmi.id="EAID_93B919D3_27E6_4a01_A9B5_F0647CF5159F" name="UnsharedConcreteFlyweight" UMLType="Class"/>
		<UMLPattern name="Flyweight" category="GoF Structural Patterns" version="2.0" notes="This pattern uses sharing to support large numbers of fine-grained objects efficiently.">
			<UMLPattern.PromptList>
				<Element name="Client:Class" guid="EAID_86090CB7_5167_4431_99EC_07077812C461" id="156" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) maintains a reference to a flyweight, and (b) computes or stores the extrinsic state of flyweight(s).">
						<![CDATA[This class (a) maintains a reference to a flyweight, and (b) computes or stores the extrinsic state of flyweight(s).]]>
					</Comment>
				</Element>
				<Element name="UnsharedConcreteFlyweight:Class" guid="EAID_93B919D3_27E6_4a01_A9B5_F0647CF5159F" id="155" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="Not all Flyweight subclasses need to be shared. The Flyweight interface enables sharing; it doesn't enforce it.">
						<![CDATA[Not all Flyweight subclasses need to be shared. The Flyweight interface enables sharing; it doesn't enforce it.]]>
					</Comment>
				</Element>
				<Element name="ConcreteFlyweight:Class" guid="EAID_E3DC1307_ACD6_42a5_92AE_CB3478DA62C7" id="154" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class implements the Flyweight interface and adds storage for intrinsic state, if any.">
						<![CDATA[This class implements the Flyweight interface and adds storage for intrinsic state, if any.]]>
					</Comment>
				</Element>
				<Element name="Flyweight:Class" guid="EAID_C7AF5428_91C2_4d48_90DD_59FC8970AB19" id="153" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class declares an interface through which flyweights can receive and act on extrinsic state.">
						<![CDATA[This class declares an interface through which flyweights can receive and act on extrinsic state.]]>
					</Comment>
				</Element>
				<Element name="FlyweightFactory:Class" guid="EAID_6E8BD5BB_AD33_476b_869C_781904B97BA3" id="152" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) creates and manages flyweight objects, and (b) ensures that flyweights are shared properly.">
						<![CDATA[This class (a) creates and manages flyweight objects, and (b) ensures that flyweights are shared properly.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="14568" cy="10591">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 GAAAADkAAAABAAAAAADhQQCQ4sEeAAAAqv///wIAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAAKwAgAAYAAAADAAAAVAAAALQAAAAgAAAALQAAAHMAAAA5AAAAAQAAAAAA4UEAkOLB LwAAAKr///8RAAAATAAAAAAAAAAAAAAAAAAAAP//////////cAAAAEcAZQB0AEYAbAB5AHcA ZQBpAGcAaAB0ACgAawBlAHkAKQCtuggAAAAGAAAAAwAAAAYAAAADAAAABQAAAAcAAAAGAAAA AwAAAAYAAAAGAAAAAwAAAAMAAAAEAAAABgAAAAUAAAADAAAAGAAAAAwAAACAgIAAHgAAABgA AAA2AAAAnf///7EAAAAj////SwAAABAAAAAAAAAABQAAABYAAAAMAAAAAQAAABIAAAAMAAAA AQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ 4sE2AAAAnf///wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtunAAAAAWAAAA DAAAAAAAAABUAAAAYAAAACcAAAA6AAAAMAAAAEYAAAABAAAAAADhQQCQ4sE2AAAAnf///wMA AABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAAaQBmACAArboDAAAAAwAAAAMAAABUAAAA VAAAADAAAAA6AAAAMwAAAEYAAAABAAAAAADhQQCQ4sE/AAAAnf///wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAKACtugMAAABUAAAAhAAAADMAAAA6AAAAXQAAAEYAAAABAAAA AADhQQCQ4sFCAAAAnf///wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAAZgBsAHkA dwBlAGkAZwBoAHQArboDAAAAAwAAAAUAAAAHAAAABgAAAAMAAAAGAAAABgAAAAMAAABUAAAA VAAAAF0AAAA6AAAAYAAAAEYAAAABAAAAAADhQQCQ4sFsAAAAnf///wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAWwCtugMAAABUAAAAYAAAAGAAAAA6AAAAbwAAAEYAAAABAAAA AADhQQCQ4sFvAAAAnf///wMAAABMAAAAAAAAAAAAAAAAAAAA//////////9UAAAAawBlAHkA rboEAAAABgAAAAUAAABUAAAAWAAAAG8AAAA6AAAAdQAAAEYAAAABAAAAAADhQQCQ4sF+AAAA nf///wIAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAXQAgAAMAAAADAAAAVAAAAHAA AAB1AAAAOgAAAI4AAABGAAAAAQAAAAAA4UEAkOLBhAAAAJ3///8GAAAATAAAAAAAAAAAAAAA AAAAAP//////////WAAAAGUAeABpAHMAdABzAAYAAAAFAAAAAwAAAAQAAAADAAAABAAAAFQA AABYAAAAjgAAADoAAACUAAAARgAAAAEAAAAAAOFBAJDiwZ0AAACd////AgAAAEwAAAAAAAAA AAAAAAAAAAD//////////1AAAAApACAAAwAAAAMAAABUAAAAVAAAAJQAAAA6AAAAlwAAAEYA AAABAAAAAADhQQCQ4sGjAAAAnf///wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAA ewCtugMAAAAbAAAAEAAAALAAAACy////FgAAAAwAAAAAAAAAFgAAAAwAAAABAAAAEgAAAAwA AAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFB AJDiwTYAAACQ////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26ewAAABYA AAAMAAAAAAAAAFQAAAD0AAAAJwAAAEcAAACfAAAAUwAAAAEAAAAAAOFBAJDiwTYAAACQ//// HAAAAEwAAAAAAAAAAAAAAAAAAAD//////////4QAAAAgACAAIAByAGUAdAB1AHIAbgAgAGUA eABpAHMAdABpAG4AZwAgAGYAbAB5AHcAZQBpAGcAaAB0AAMAAAADAAAAAwAAAAMAAAAGAAAA AwAAAAYAAAADAAAABgAAAAMAAAAGAAAABQAAAAMAAAAEAAAAAwAAAAMAAAAGAAAABgAAAAMA AAADAAAAAwAAAAUAAAAHAAAABgAAAAMAAAAGAAAABgAAAAMAAABUAAAAVAAAAJ8AAABHAAAA ogAAAFMAAAABAAAAAADhQQCQ4sGuAAAAkP///wEAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAAOwCtugMAAAAbAAAAEAAAALAAAACy////FgAAAAwAAAAAAAAAFgAAAAwAAAABAAAA EgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEA AAAAAOFBAJDiwTYAAACD////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26 HwAAABYAAAAMAAAAAAAAAFQAAABYAAAAJwAAAFQAAAAtAAAAYAAAAAEAAAAAAOFBAJDiwTYA AACD////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAB9ACAAAwAAAAMAAABUAAAA bAAAAC0AAABUAAAAQwAAAGAAAAABAAAAAADhQQCQ4sE8AAAAg////wUAAABMAAAAAAAAAAAA AAAAAAAA//////////9YAAAAZQBsAHMAZQAgAK26BgAAAAMAAAAEAAAABgAAAAMAAABUAAAA VAAAAEMAAABUAAAARgAAAGAAAAABAAAAAADhQQCQ4sFSAAAAg////wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAewCtugMAAAAbAAAAEAAAALAAAACy////FgAAAAwAAAAAAAAA FgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAA AAD//////////wEAAAAAAOFBAJDiwTYAAAB2////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAA AAAAAFAAAAADAK26bAAAABYAAAAMAAAAAAAAAFQAAADYAAAAJwAAAGEAAACQAAAAbQAAAAEA AAAAAOFBAJDiwTYAAAB2////FwAAAEwAAAAAAAAAAAAAAAAAAAD//////////3wAAAAgACAA IABjAHIAZQBhAHQAZQAgAG4AZQB3ACAAZgBsAHkAdwBlAGkAZwBoAHQArboDAAAAAwAAAAMA AAAFAAAAAwAAAAYAAAAGAAAAAwAAAAYAAAADAAAABgAAAAYAAAAHAAAAAwAAAAMAAAADAAAA BQAAAAcAAAAGAAAAAwAAAAYAAAAGAAAAAwAAAFQAAABUAAAAkAAAAGEAAACTAAAAbQAAAAEA AAAAAOFBAJDiwZ8AAAB2////AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAA7AK26 AwAAABsAAAAQAAAAsAAAALL///8WAAAADAAAAAAAAAAWAAAADAAAAAEAAAASAAAADAAAAAEA AAAbAAAAEAAAAAAAAAAAAAAAVAAAAFQAAAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLB NgAAAGn///8BAAAATAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMArbpXAAAAFgAAAAwA AAAAAAAAVAAAAMwAAAAnAAAAbgAAAH4AAAB6AAAAAQAAAAAA4UEAkOLBNgAAAGn///8VAAAA TAAAAAAAAAAAAAAAAAAAAP//////////eAAAACAAIAAgAGEAZABkACAAaQB0ACAAdABvACAA cABvAG8AbAAgAG8AZgAgAK26AwAAAAMAAAADAAAABgAAAAYAAAAGAAAAAwAAAAMAAAADAAAA AwAAAAMAAAAGAAAAAwAAAAYAAAAGAAAABgAAAAMAAAADAAAABgAAAAMAAAADAAAAGwAAABAA AACwAAAAsv///xYAAAAMAAAAAAAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAA AAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sE2AAAAXP///wEA AABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtujEAAAAWAAAADAAAAAAAAABUAAAA iAAAACcAAAB7AAAAVQAAAIcAAAABAAAAAADhQQCQ4sE2AAAAXP///woAAABMAAAAAAAAAAAA AAAAAAAA//////////9gAAAAZgBsAHkAdwBlAGkAZwBoAHQAcwADAAAAAwAAAAUAAAAHAAAA BgAAAAMAAAAGAAAABgAAAAMAAAAEAAAAVAAAAFQAAABVAAAAewAAAFgAAACHAAAAAQAAAAAA 4UEAkOLBZAAAAFz///8BAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAADsArboDAAAA GwAAABAAAACwAAAAsv///xYAAAAMAAAAAAAAABYAAAAMAAAAAQAAABIAAAAMAAAAAQAAABsA AAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA//////////8BAAAAAADhQQCQ4sE2AAAA T////wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAwCtuk8AAAAWAAAADAAAAAAA AABUAAAAuAAAACcAAACIAAAAdgAAAJQAAAABAAAAAADhQQCQ4sE2AAAAT////xIAAABMAAAA AAAAAAAAAAAAAAAA//////////9wAAAAIAAgACAAcgBlAHQAdQByAG4AIAB0AGgAZQAgAG4A ZQB3ACAAAwAAAAMAAAADAAAAAwAAAAYAAAADAAAABgAAAAMAAAAGAAAAAwAAAAMAAAAGAAAA BgAAAAMAAAAGAAAABgAAAAcAAAADAAAAGwAAABAAAACwAAAAsv///xYAAAAMAAAAAAAAABYA AAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA //////////8BAAAAAADhQQCQ4sE2AAAAQv///wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAA AABQAAAAAwCtui0AAAAWAAAADAAAAAAAAABUAAAAhAAAACcAAACVAAAAUQAAAKEAAAABAAAA AADhQQCQ4sE2AAAAQv///wkAAABMAAAAAAAAAAAAAAAAAAAA//////////9gAAAAZgBsAHkA dwBlAGkAZwBoAHQArboDAAAAAwAAAAUAAAAHAAAABgAAAAMAAAAGAAAABgAAAAMAAABUAAAA VAAAAFEAAACVAAAAVAAAAKEAAAABAAAAAADhQQCQ4sFgAAAAQv///wEAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAOwCtugMAAAAbAAAAEAAAALAAAACy////FgAAAAwAAAAAAAAA FgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAAAAAAAAAAAAAAAFQAAABUAAAAAAAAAAAA AAD//////////wEAAAAAAOFBAJDiwTYAAAA1////AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAA AAAAAFAAAAADAK26AwAAABYAAAAMAAAAAAAAAFQAAABUAAAAJwAAAKIAAAAqAAAArgAAAAEA AAAAAOFBAJDiwTYAAAA1////AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAB9AK26 AwAAABsAAAAQAAAAsAAAALL///8WAAAADAAAAAAAAAAYAAAADAAAAABAQAAYAAAADAAAAAAA AAAnAAAAGAAAAAQAAAAAAAAAwL/AAAAAAAAlAAAADAAAAAQAAAAmAAAAHAAAAAYAAAAAAAAA AQAAAAAAAADAv8AAJQAAAAwAAAAGAAAAKwAAABgAAAAeAQAAuf///60BAAB0////JQAAAAwA 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 AAAIAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAACAAAABsAAAAQAAAADgEAAOX+//82AAAA EAAAAA4BAABE////NgAAABAAAABjAQAARP///zYAAAAQAAAAYwEAAHb///8bAAAAEAAAAGMB AAB2////VgAAACgAAABPAQAAYQAAAFoBAABwAAAAAwAAAGkBZ/9eAWf/YwF2/xIAAAAMAAAA AgAAABkAAAAMAAAA////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgA AAAMAAAACAAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAAAAAAAlAAAADAAAAAgAAAAbAAAA EAAAAMIBAADn/v//NgAAABAAAADCAQAARP///zYAAAAQAAAAYwEAAET///82AAAAEAAAAGMB AAB2////GwAAABAAAABjAQAAdv///1YAAAAoAAAATwEAAGEAAABaAQAAcAAAAAMAAABpAWf/ XgFn/2MBdv8SAAAADAAAAAIAAAAZAAAADAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP// /wAlAAAADAAAAAMAAAAoAAAADAAAAAgAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAAAAAAAA JQAAAAwAAAAIAAAAGwAAABAAAACPAAAAef7//zYAAAAQAAAAsgAAAHn+//82AAAAEAAAALIA AAC8/v//NgAAABAAAADHAAAAvP7//xsAAAAQAAAAxwAAALz+//8bAAAAEAAAAMcAAAC8/v// NgAAABAAAAC5AAAAt/7//xsAAAAQAAAAxwAAALz+//82AAAAEAAAALkAAADC/v//EgAAAAwA AAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAA KAAAAAwAAAAIAAAAJgAAABwAAAAIAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAACAAAABsA AAAQAAAAjwAAAHn+//82AAAAEAAAAGIBAAB5/v//NgAAABAAAABiAQAAv/7//zYAAAAQAAAA eQEAAL/+//8bAAAAEAAAAHkBAAC//v//GwAAABAAAAB5AQAAv/7//zYAAAAQAAAAawEAALr+ //8bAAAAEAAAAHkBAAC//v//NgAAABAAAABrAQAAxf7//xIAAAAMAAAAAgAAABkAAAAMAAAA ////ABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAACAAAACUA AAAMAAAADQAAgCgAAAAMAAAAAQAAACgAAAAMAAAABQAAACUAAAAMAAAAAAAAgCgAAAAMAAAA AgAAACUAAAAMAAAABwAAgCgAAAAMAAAAAwAAAA4AAAAUAAAAAAAAABAAAAAUAAAA</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		22		GoF Structural Patterns		Proxy				This pattern provides a surrogate or placeholder for another object to control access to it.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:06:53">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_E39875A3_7561_43bd_8600_F32C040426F6">
			<UML:Namespace.ownedElement>
				<UML:Class name="Subject" xmi.id="EAID_A1898357_DB93_4998_9005_C8FA7F052B8F" visibility="public" namespace="EAPK_E39875A3_7561_43bd_8600_F32C040426F6" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the common interface for RealSubject and Proxy so that a Proxy can be used anywhere a RealSubject is expected."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_E39875A3_7561_43bd_8600_F32C040426F6"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:22:55"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 12:13:10"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Proxy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Request" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0EA8C5C3-3A53-4be8-92A1-AEDACAD94329}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Generalization subtype="EAID_1EB3FECD_BD49_4e77_ABE9_1C571FE68599" supertype="EAID_A1898357_DB93_4998_9005_C8FA7F052B8F" xmi.id="EAID_5875D68D_E74F_4e94_9188_C161B2F54348" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=1;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Generalization subtype="EAID_3854CDCA_089E_4552_AF19_89EAEAEF56B9" supertype="EAID_A1898357_DB93_4998_9005_C8FA7F052B8F" xmi.id="EAID_B2BD9C6E_972E_4f21_9F30_70AB09DD786E" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="subtype" value="Tree"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="RealSubject" xmi.id="EAID_1EB3FECD_BD49_4e77_ABE9_1C571FE68599" visibility="public" namespace="EAPK_E39875A3_7561_43bd_8600_F32C040426F6" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the real object that the proxy represents."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_E39875A3_7561_43bd_8600_F32C040426F6"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:23:31"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 12:11:50"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Proxy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Request" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0EA8C5C3-3A53-4be8-92A1-AEDACAD94329}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_8B93B4D0_EE39_4fa7_AD1E_B26E831FCCBE" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;EX=0;EY=0;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
						<UML:TaggedValue tag="lt" value="-realSubject"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="realSubject" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_3854CDCA_089E_4552_AF19_89EAEAEF56B9">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_1EB3FECD_BD49_4e77_ABE9_1C571FE68599">
							<UML:ModelElement.taggedValue/>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Proxy" xmi.id="EAID_3854CDCA_089E_4552_AF19_89EAEAEF56B9" visibility="public" namespace="EAPK_E39875A3_7561_43bd_8600_F32C040426F6" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class (a) maintains a reference that lets the proxy access the real subject, (b) provides an interface identical to Subject's so that a proxy can be substituted for the real subject, and (c) controls access to the real subject and may be responsible for creating and deleting it."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_E39875A3_7561_43bd_8600_F32C040426F6"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:23:54"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-16 12:11:23"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Proxy"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Request" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="...
realSubject-&gt;Request();
..."/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{0EA8C5C3-3A53-4be8-92A1-AEDACAD94329}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Proxy" xmi.id="EAID_16DAB86E_BA4F_4197_8C5A_90749F85384C" diagramType="ClassDiagram" owner="EAPK_16DAB86E_BA4F_4197_8C5A_90749F85384C" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern provides a surrogate or placeholder for another object to control access to it."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:32:04"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-16 12:13:18"/>
				<UML:TaggedValue tag="package" value="EAPK_E39875A3_7561_43bd_8600_F32C040426F6"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=304;Top=182;Right=463;Bottom=274;imgL=170;imgT=151;imgR=329;imgB=243;" subject="EAID_3854CDCA_089E_4552_AF19_89EAEAEF56B9" seqno="1" style="DUID=012C0A6C;LBL=;"/>
				<UML:DiagramElement geometry="Left=144;Top=181;Right=234;Bottom=251;imgL=10;imgT=150;imgR=100;imgB=220;" subject="EAID_1EB3FECD_BD49_4e77_ABE9_1C571FE68599" seqno="2" style="DUID=9D40ECCF;LBL=;"/>
				<UML:DiagramElement geometry="Left=225;Top=41;Right=315;Bottom=111;imgL=91;imgT=10;imgR=181;imgB=80;" subject="EAID_A1898357_DB93_4998_9005_C8FA7F052B8F" seqno="3" style="DUID=BFA6A7D1;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=1;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=189:-161$270:-161$;" subject="EAID_5875D68D_E74F_4e94_9188_C161B2F54348" style="Mode=3;EOID=BFA6A7D1;SOID=9D40ECCF;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=383:-161$270:-161$;" subject="EAID_B2BD9C6E_972E_4f21_9F30_70AB09DD786E" style="Mode=3;EOID=BFA6A7D1;SOID=012C0A6C;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EX=0;EY=0;EDGE=4;$LLB=;LLT=CX=67:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_8B93B4D0_EE39_4fa7_AD1E_B26E831FCCBE" style="Mode=2;EOID=9D40ECCF;SOID=012C0A6C;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_1EB3FECD_BD49_4e77_ABE9_1C571FE68599" name="RealSubject" UMLType="Class"/>
		<EAStub xmi.id="EAID_A1898357_DB93_4998_9005_C8FA7F052B8F" name="Subject" UMLType="Class"/>
		<EAStub xmi.id="EAID_3854CDCA_089E_4552_AF19_89EAEAEF56B9" name="Proxy" UMLType="Class"/>
		<UMLPattern name="Proxy" category="GoF Structural Patterns" version="2.0" notes="This pattern provides a surrogate or placeholder for another object to control access to it.">
			<UMLPattern.PromptList>
				<Element name="Proxy:Class" guid="EAID_3854CDCA_089E_4552_AF19_89EAEAEF56B9" id="151" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class (a) maintains a reference that lets the proxy access the real subject, (b) provides an interface identical to Subject's so that a proxy can be substituted for the real subject, and (c) controls access to the real subject and may be responsible for creating and deleting it.">
						<![CDATA[This class (a) maintains a reference that lets the proxy access the real subject, (b) provides an interface identical to Subject's so that a proxy can be substituted for the real subject, and (c) controls access to the real subject and may be responsible for creating and deleting it.]]>
					</Comment>
				</Element>
				<Element name="RealSubject:Class" guid="EAID_1EB3FECD_BD49_4e77_ABE9_1C571FE68599" id="150" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the real object that the proxy represents.">
						<![CDATA[This class defines the real object that the proxy represents.]]>
					</Comment>
				</Element>
				<Element name="Subject:Class" guid="EAID_A1898357_DB93_4998_9005_C8FA7F052B8F" id="149" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the common interface for RealSubject and Proxy so that a Proxy can be used anywhere a RealSubject is expected.">
						<![CDATA[This class defines the common interface for RealSubject and Proxy so that a Proxy can be used anywhere a RealSubject is expected.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="9534" cy="7165">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 AAC4JxUDAAAAAAAAUgJ04RIA+CchEDBxJRD/////eN8SAO8pIRBkdgAIAAAAACUAAAAMAAAA BwAAAFQAAACQAAAAGQAAAJ8AAABVAAAAqgAAAAEAAAAAAOFBAJDiwZ8AAABC////CwAAAEwA AAAAAAAAAAAAAAAAAAD//////////2QAAABSAGUAYQBsAFMAdQBiAGoAZQBjAHQArboHAAAA BgAAAAYAAAADAAAABwAAAAYAAAAGAAAABAAAAAYAAAAGAAAAAwAAACUAAAAMAAAAAQAAABsA AAAQAAAAkAAAADD///82AAAAEAAAAOkAAAAw////GAAAAAwAAACLAAAAGAAAAAwAAAAAAAAA GAAAAAwAAAAAQEAAVAAAAFgAAAAPAAAAuQAAABgAAADFAAAAAQAAAAAA4UEAkOLBlQAAACj/ //8CAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAACsAIAAGAAAAAwAAAFQAAACEAAAA IAAAALkAAABMAAAAxQAAAAEAAAAAAOFBAJDiwaYAAAAo////CQAAAEwAAAAAAAAAAAAAAAAA AAD//////////2AAAABSAGUAcQB1AGUAcwB0ACgAKQCtugcAAAAGAAAABgAAAAYAAAAGAAAA BAAAAAMAAAADAAAAAwAAABgAAAAMAAAAAAAAACcAAAAYAAAABgAAAAAAAADAv8AAAAAAACUA AAAMAAAABgAAACYAAAAcAAAACAAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAgAAAArAAAA GAAAADMBAABH////0QEAAOz+//8lAAAADAAAAAIAAAAoAAAADAAAAAYAAAAlAAAADAAAAAMA AAAoAAAADAAAAAgAAAArAAAAGAAAADABAABK////zgEAAO/+//8lAAAADAAAAAcAAABUAAAA bAAAAOsAAACgAAAABwEAAKsAAAABAAAAAADhQQCQ4sFxAQAAQf///wUAAABMAAAAAAAAAAAA AAAAAAAA//////////9YAAAAUAByAG8AeAB5AK26BwAAAAQAAAAGAAAABgAAAAUAAAAlAAAA DAAAAAEAAAAbAAAAEAAAADABAAAv////NgAAABAAAADOAQAAL////xgAAAAMAAAAiwAAABgA AAAMAAAAAAAAABgAAAAMAAAAAEBAAFQAAABYAAAArwAAALoAAAC4AAAAxgAAAAEAAAAAAOFB AJDiwTUBAAAn////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAArACAABgAAAAMA AABUAAAAhAAAAMAAAAC6AAAA7AAAAMYAAAABAAAAAADhQQCQ4sFGAQAAJ////wkAAABMAAAA AAAAAAAAAAAAAAAA//////////9gAAAAUgBlAHEAdQBlAHMAdAAoACkArboHAAAABgAAAAYA AAAGAAAABgAAAAQAAAADAAAAAwAAAAMAAAAYAAAADAAAAICAgAAeAAAAGAAAAE0BAAAa//// zwEAAO7+//9LAAAAEAAAAAAAAAAFAAAAFgAAAAwAAAABAAAAEgAAAAwAAAABAAAAGwAAABAA AAAAAAAAAAAAAFQAAABUAAAAAAAAAAAAAAD//////////wEAAAAAAOFBAJDiwU0BAAAa//// AQAAAEwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAADAK26CQAAABYAAAAMAAAAAAAAAFQA AABgAAAAxwAAAMcAAADQAAAA0wAAAAEAAAAAAOFBAJDiwU0BAAAa////AwAAAEwAAAAAAAAA AAAAAAAAAAD//////////1QAAAAuAC4ALgCtugMAAAADAAAAAwAAABsAAAAQAAAAzgEAAC// //8WAAAADAAAAAAAAAAWAAAADAAAAAEAAAASAAAADAAAAAEAAAAbAAAAEAAAAAAAAAAAAAAA VAAAAFQAAAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLBTQEAAA3///8BAAAATAAAABQA AAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMArbpuAAAAFgAAAAwAAAAAAAAAVAAAAJAAAADHAAAA 1AAAAP0AAADgAAAAAQAAAAAA4UEAkOLBTQEAAA3///8LAAAATAAAAAAAAAAAAAAAAAAAAP// ////////ZAAAAHIAZQBhAGwAUwB1AGIAagBlAGMAdACtugMAAAAGAAAABgAAAAMAAAAHAAAA BgAAAAYAAAADAAAABgAAAAUAAAADAAAAVAAAAFQAAAD9AAAA1AAAAAABAADgAAAAAQAAAAAA 4UEAkOLBgwEAAA3///8BAAAATAAAAAAAAAAAAAAAAAAAAP//////////UAAAAC0ArboDAAAA VAAAAFQAAAAAAQAA1AAAAAYBAADgAAAAAQAAAAAA4UEAkOLBhgEAAA3///8BAAAATAAAAAAA AAAAAAAAAAAAAP//////////UAAAAD4ArboGAAAAVAAAAHgAAAAGAQAA1AAAACwBAADgAAAA AQAAAAAA4UEAkOLBjAEAAA3///8HAAAATAAAAAAAAAAAAAAAAAAAAP//////////XAAAAFIA ZQBxAHUAZQBzAHQArboHAAAABgAAAAYAAAAGAAAABgAAAAQAAAADAAAAVAAAAFgAAAAsAQAA 1AAAADIBAADgAAAAAQAAAAAA4UEAkOLBsgEAAA3///8CAAAATAAAAAAAAAAAAAAAAAAAAP// ////////UAAAACgAKQADAAAAAwAAAFQAAABUAAAAMgEAANQAAAA1AQAA4AAAAAEAAAAAAOFB AJDiwbgBAAAN////AQAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AAAAA7AK26AwAAABsA AAAQAAAAzgEAAC////8WAAAADAAAAAAAAAAWAAAADAAAAAEAAAASAAAADAAAAAEAAAAbAAAA EAAAAAAAAAAAAAAAVAAAAFQAAAAAAAAAAAAAAP//////////AQAAAAAA4UEAkOLBTQEAAAD/ //8BAAAATAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAMArboJAAAAFgAAAAwAAAAAAAAA VAAAAGAAAADHAAAA4QAAANAAAADtAAAAAQAAAAAA4UEAkOLBTQEAAAD///8DAAAATAAAAAAA AAAAAAAAAAAAAP//////////VAAAAC4ALgAuAK26AwAAAAMAAAADAAAAGwAAABAAAADOAQAA L////xYAAAAMAAAAAAAAABgAAAAMAAAAAEBAABgAAAAMAAAAAAAAACYAAAAcAAAACAAAAAAA AAABAAAAAAAAAAAAAAAlAAAADAAAAAgAAAAbAAAAEAAAAL0AAABL////NgAAABAAAAC9AAAA X////zYAAAAQAAAADgEAAF////82AAAAEAAAAA4BAACR////GwAAABAAAAAOAQAAkf///1YA AAAoAAAAgwAAAFAAAACOAAAAXwAAAAMAAAAUAYL/CQGC/w4Bkf8SAAAADAAAAAIAAAAZAAAA DAAAAP///wASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMAAAAoAAAADAAAAAgA AAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAAAAAAAAJQAAAAwAAAAIAAAAGwAAABAAAAB/AQAA Sv///zYAAAAQAAAAfwEAAF////82AAAAEAAAAA4BAABf////NgAAABAAAAAOAQAAkf///xsA AAAQAAAADgEAAJH///9WAAAAKAAAAIMAAABQAAAAjgAAAF8AAAADAAAAFAGC/wkBgv8OAZH/ EgAAAAwAAAACAAAAGQAAAAwAAAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwA AAADAAAAKAAAAAwAAAAIAAAAJgAAABwAAAAIAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAA CAAAABsAAAAQAAAAMAEAACj///82AAAAEAAAAA0BAAAo////NgAAABAAAAANAQAAKP///zYA AAAQAAAA6gAAACj///8bAAAAEAAAAOoAAAAo////GwAAABAAAADqAAAAKP///zYAAAAQAAAA +QAAAC7///8bAAAAEAAAAOoAAAAo////NgAAABAAAAD5AAAAIv///xIAAAAMAAAAAgAAABkA AAAMAAAA////AFIAAABwAQAABgAAAPb///8AAAAAAAAAAAAAAAAAAAAAAAAAAQAAAABBAFIA SQBBAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAACSfAAAUgJgAABAbQWRfAjrEgDY5hIAAAAAAKzeEgD4JyEQMHElEP/////43BIA 7ykhEB0AAAAAAAAAAQAAAFAAAADQGRUDXNuVfAAAUgKs25V8CAAAAAAAUgIAAFIC0BkVAyTd AAARzZZ8AAASAAAAAADw3RIAGO6QfMhqknwAAP//vmqSfK1oknwAAFICYAAAQG0FkXwI6xIA 2OYSAAAAAABE3RIAkdZCXwAAAQAI6xIAvNwSAAAAAACw3RIAAACQfHAFkXxAAAAAkCcVA1zb lXzYJxUDrNuVfAAAAAAAAAAAAABSApAnFQNkdgAIAAAAANjmEgAAAAAAOtmgAWR2AAgAAAAA JQAAAAwAAAAGAAAAVAAAAJQAAABuAAAApwAAAKcAAACzAAAAAQAAAAAA4UEAkOLB9AAAADr/ //8MAAAATAAAAAAAAAAAAAAAAAAAAP//////////ZAAAAC0AcgBlAGEAbABTAHUAYgBqAGUA YwB0AAMAAAADAAAABgAAAAYAAAADAAAABwAAAAYAAAAGAAAAAwAAAAYAAAAFAAAAAwAAACUA AAAMAAAAAQAAACgAAAAMAAAABgAAABIAAAAMAAAAAQAAABkAAAAMAAAA////ACUAAAAMAAAA AwAAACgAAAAMAAAACAAAACUAAAAMAAAADQAAgCgAAAAMAAAAAQAAACgAAAAMAAAABwAAACUA AAAMAAAAAAAAgCgAAAAMAAAAAgAAACUAAAAMAAAABwAAgCgAAAAMAAAAAwAAAA4AAAAUAAAA AAAAABAAAAAUAAAA</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0

		23		GoF Structural Patterns		Adapter				This pattern converts the interface of a class into another interface that clients expect. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces.		<?xml version="1.0"?>
<XMI xmi.version="1.1" xmlns:UML="omg.org/UML1.3" timestamp="2004-12-17 15:02:33">
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>Enterprise Architect</XMI.exporter>
			<XMI.exporterVersion>2.5</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model name="EA Model" xmi.id="MX_EAID_8842436B_DDC4_472d_A638_B1DF8B788037">
			<UML:Namespace.ownedElement>
				<UML:Class name="Target" xmi.id="EAID_AC4E6D1A_864D_46e8_B553_537FC55A70BE" visibility="public" namespace="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037" isRoot="false" isLeaf="false" isAbstract="true" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines the domain-specific interface that Client uses."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:01:39"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:09:10"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Adapter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Request" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="isAbstract" value="1"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{D3DAC14C-AC28-4e4c-A2A9-8360BAF034EF}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_168C3BBB_465C_4d55_A000_D38A96A7A122" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_66FAC688_1444_4e5a_924F_5E088648D069">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_AC4E6D1A_864D_46e8_B553_537FC55A70BE">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Generalization subtype="EAID_202C9C3E_50D9_4900_B445_6A5369DF309F" supertype="EAID_AC4E6D1A_864D_46e8_B553_537FC55A70BE" xmi.id="EAID_D1B0D045_BDD1_4f6f_A0A5_27DC49C4966C" visibility="public">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="2"/>
						<UML:TaggedValue tag="ea_type" value="Generalization"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="2"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="src_visibility" value="Public"/>
						<UML:TaggedValue tag="src_aggregation" value="0"/>
						<UML:TaggedValue tag="src_isOrdered" value="false"/>
						<UML:TaggedValue tag="src_isNavigable" value="false"/>
						<UML:TaggedValue tag="dst_visibility" value="Public"/>
						<UML:TaggedValue tag="dst_aggregation" value="0"/>
						<UML:TaggedValue tag="dst_isOrdered" value="false"/>
						<UML:TaggedValue tag="dst_isNavigable" value="false"/>
						<UML:TaggedValue tag="$ea_xref_property" value="$XREFPROP=$XID={B9F9E6B4-82D6-46bf-8AD4-862407B42233}$XID;$NAM=CustomProperties$NAM;$TYP=connector property$TYP;$VIS=Public$VIS;$DES=@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;$DES;$CLT={D1B0D045-BDD1-4f6f-A0A5-27DC49C4966C}$CLT;$SUP=&lt;none&gt;$SUP;$ENDXREF;"/>
						<UML:TaggedValue tag="privatedata5" value="SX=0;SY=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Generalization>
				<UML:Class name="Adaptee" xmi.id="EAID_E194B416_8D47_4d08_BBE9_84CE1E27A086" visibility="public" namespace="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class defines an existing interface that needs adapting."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:02:03"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:07:32"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Adapter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="SpecificRequest" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{646FE6BF-C04B-4d5e-874A-B2F0C5CBA65E}"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Association xmi.id="EAID_E7AAE5D5_6EE9_404d_9EB9_BE69F7BB7980" visibility="public" isRoot="false" isLeaf="false" isAbstract="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="style" value="3"/>
						<UML:TaggedValue tag="ea_type" value="Association"/>
						<UML:TaggedValue tag="direction" value="Source -&gt; Destination"/>
						<UML:TaggedValue tag="linemode" value="3"/>
						<UML:TaggedValue tag="linecolor" value="0"/>
						<UML:TaggedValue tag="linewidth" value="0"/>
						<UML:TaggedValue tag="seqno" value="0"/>
						<UML:TaggedValue tag="headStyle" value="0"/>
						<UML:TaggedValue tag="lineStyle" value="0"/>
						<UML:TaggedValue tag="privatedata5" value="SX=13;SY=17;EX=24;EY=-2;"/>
						<UML:TaggedValue tag="virtualInheritance" value="0"/>
					</UML:ModelElement.taggedValue>
					<UML:Association.connection>
						<UML:AssociationEnd visibility="private" name="adaptee" aggregation="none" isOrdered="false" isNavigable="false" type="EAID_202C9C3E_50D9_4900_B445_6A5369DF309F">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
						<UML:AssociationEnd visibility="public" aggregation="none" isOrdered="false" isNavigable="true" type="EAID_E194B416_8D47_4d08_BBE9_84CE1E27A086">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="containment" value="Unspecified"/>
							</UML:ModelElement.taggedValue>
						</UML:AssociationEnd>
					</UML:Association.connection>
				</UML:Association>
				<UML:Class name="Adapter" xmi.id="EAID_202C9C3E_50D9_4900_B445_6A5369DF309F" visibility="public" namespace="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class adapts the interface of Adaptee to the Target interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 22:02:32"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:08:00"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Adapter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
					<UML:Classifier.feature>
						<UML:Operation name="Request" visibility="public" ownerScope="instance" isQuery="false" concurrency="sequential">
							<UML:ModelElement.taggedValue>
								<UML:TaggedValue tag="const" value="false"/>
								<UML:TaggedValue tag="behaviour" value="adaptee-&gt;SpecificRequest()"/>
								<UML:TaggedValue tag="synchronised" value="0"/>
								<UML:TaggedValue tag="concurrency" value="Sequential"/>
								<UML:TaggedValue tag="position" value="0"/>
								<UML:TaggedValue tag="returnarray" value="0"/>
								<UML:TaggedValue tag="pure" value="0"/>
								<UML:TaggedValue tag="ea_guid" value="{D3DAC14C-AC28-4e4c-A2A9-8360BAF034EF}"/>
								<UML:TaggedValue tag="styleex" value="ShowBeh=1;"/>
							</UML:ModelElement.taggedValue>
						</UML:Operation>
					</UML:Classifier.feature>
				</UML:Class>
				<UML:Class name="Client" xmi.id="EAID_66FAC688_1444_4e5a_924F_5E088648D069" visibility="public" namespace="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037" isRoot="false" isLeaf="false" isAbstract="false" isActive="false">
					<UML:ModelElement.taggedValue>
						<UML:TaggedValue tag="documentation" value="This class collaborates with objects conforming to the Target interface."/>
						<UML:TaggedValue tag="isSpecification" value="false"/>
						<UML:TaggedValue tag="ea_stype" value="Class"/>
						<UML:TaggedValue tag="ea_ntype" value="0"/>
						<UML:TaggedValue tag="version" value="1.0"/>
						<UML:TaggedValue tag="package" value="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037"/>
						<UML:TaggedValue tag="date_created" value="2003-09-06 23:34:00"/>
						<UML:TaggedValue tag="date_modified" value="2004-12-15 15:08:34"/>
						<UML:TaggedValue tag="gentype" value="&lt;none&gt;"/>
						<UML:TaggedValue tag="tagged" value="0"/>
						<UML:TaggedValue tag="package_name" value="Adapter"/>
						<UML:TaggedValue tag="phase" value="1.0"/>
						<UML:TaggedValue tag="complexity" value="1"/>
						<UML:TaggedValue tag="status" value="Proposed"/>
						<UML:TaggedValue tag="style" value="BackColor=-1;BorderColor=-1;BorderWidth=-1;FontColor=-1;VSwimLanes=0;HSwimLanes=0;BorderStyle=0;"/>
					</UML:ModelElement.taggedValue>
				</UML:Class>
			</UML:Namespace.ownedElement>
		</UML:Model>
		<UML:Diagram name="Adapter" xmi.id="EAID_7124960A_3381_4dea_B193_4E6836886F9C" diagramType="ClassDiagram" owner="EAPK_7124960A_3381_4dea_B193_4E6836886F9C" toolName="Enterprise Architect 2.5">
			<UML:ModelElement.taggedValue>
				<UML:TaggedValue tag="documentation" value="This pattern converts the interface of a class into another interface that clients expect. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces."/>
				<UML:TaggedValue tag="version" value="1.0"/>
				<UML:TaggedValue tag="created_date" value="2004-12-14 13:31:48"/>
				<UML:TaggedValue tag="modified_date" value="2004-12-15 15:09:22"/>
				<UML:TaggedValue tag="package" value="EAPK_8842436B_DDC4_472d_A638_B1DF8B788037"/>
				<UML:TaggedValue tag="type" value="Logical"/>
				<UML:TaggedValue tag="swimlanes" value="locked=false;orientation=0;width=0;names=false;color=0;bold=false;fcol=0;;cls=0;"/>
				<UML:TaggedValue tag="EAStyle" value="ShowPrivate=1;ShowProtected=1;ShowPublic=1;HideRelationships=0;Locked=0;Border=1;HighlightForeign=1;PackageContents=1;SequenceNotes=0;ScalePrintImage=0;PPgs.cx=0;PPgs.cy=0;DocSize.cx=780;DocSize.cy=1138;ShowDetails=0;Orientation=P;Zoom=100;ShowTags=0;OpParams=1;ShowIcons=1;CollabNums=0;HideProps=0;ShowReqs=0;ShowCons=0;PaperSize=9;HideParents=0;UseAlias=0;HideAtts=0;HideOps=0;HideStereo=0;HideElemStereo=0;ShowTests=0;ShowMaint=0;"/>
				<UML:TaggedValue tag="styleex" value="ExcludeRTF=0;DocAll=0;HideQuals=0;AttPkg=1;ShowTests=0;ShowMaint=0;SuppressFOC=0;TDurLow=0;TDurHigh=100;TDurUnit=;TDurHide=0;"/>
			</UML:ModelElement.taggedValue>
			<UML:Diagram.element>
				<UML:DiagramElement geometry="Left=20;Top=67;Right=110;Bottom=137;imgL=10;imgT=10;imgR=100;imgB=80;" subject="EAID_66FAC688_1444_4e5a_924F_5E088648D069" seqno="1" style="DUID=FB2FAEA0;LBL=;"/>
				<UML:DiagramElement geometry="Left=165;Top=230;Right=335;Bottom=300;imgL=155;imgT=173;imgR=325;imgB=243;" subject="EAID_202C9C3E_50D9_4900_B445_6A5369DF309F" seqno="2" style="DUID=3030A886;LBL=;"/>
				<UML:DiagramElement geometry="Left=336;Top=69;Right=445;Bottom=139;imgL=326;imgT=12;imgR=435;imgB=82;" subject="EAID_E194B416_8D47_4d08_BBE9_84CE1E27A086" seqno="3" style="DUID=67E590EC;LBL=;"/>
				<UML:DiagramElement geometry="Left=164;Top=69;Right=254;Bottom=139;imgL=154;imgT=12;imgR=244;imgB=82;" subject="EAID_AC4E6D1A_864D_46e8_B553_537FC55A70BE" seqno="4" style="DUID=E7FFFBBB;LBL=;"/>
				<UML:DiagramElement geometry="SX=0;SY=0;EDGE=1;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=249:-182$208:-182$;" subject="EAID_D1B0D045_BDD1_4f6f_A0A5_27DC49C4966C" style="Mode=2;EOID=E7FFFBBB;SOID=3030A886;Hidden=0;"/>
				<UML:DiagramElement geometry="EDGE=2;$LLB=;LLT=;LMT=;LMB=;LRT=;LRB=;Path=;" subject="EAID_168C3BBB_465C_4d55_A000_D38A96A7A122" style="Mode=2;EOID=E7FFFBBB;SOID=FB2FAEA0;Hidden=0;"/>
				<UML:DiagramElement geometry="SX=13;SY=17;EX=24;EY=-2;EDGE=1;$LLB=;LLT=CX=52:CY=15:OX=0:OY=0:HDN=0:BLD=0:ITA=0:UND=0:CLR=-1:ALN=0:DIR=0:ROT=0;LMT=;LMB=;LRT=;LRB=;Path=313:-230$313:-102$;" subject="EAID_E7AAE5D5_6EE9_404d_9EB9_BE69F7BB7980" style="Mode=3;EOID=67E590EC;SOID=3030A886;Hidden=0;"/>
			</UML:Diagram.element>
		</UML:Diagram>
	</XMI.content>
	<XMI.difference/>
	<XMI.extensions xmi.extender="Enterprise Architect 2.5">
		<EAStub xmi.id="EAID_66FAC688_1444_4e5a_924F_5E088648D069" name="Client" UMLType="Class"/>
		<EAStub xmi.id="EAID_AC4E6D1A_864D_46e8_B553_537FC55A70BE" name="Target" UMLType="Class"/>
		<EAStub xmi.id="EAID_202C9C3E_50D9_4900_B445_6A5369DF309F" name="Adapter" UMLType="Class"/>
		<EAStub xmi.id="EAID_E194B416_8D47_4d08_BBE9_84CE1E27A086" name="Adaptee" UMLType="Class"/>
		<UMLPattern name="Adapter" category="GoF Structural Patterns" version="2.0" notes="This pattern converts the interface of a class into another interface that clients expect. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces.">
			<UMLPattern.PromptList>
				<Element name="Client:Class" guid="EAID_66FAC688_1444_4e5a_924F_5E088648D069" id="182" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class collaborates with objects conforming to the Target interface.">
						<![CDATA[This class collaborates with objects conforming to the Target interface.]]>
					</Comment>
				</Element>
				<Element name="Adapter:Class" guid="EAID_202C9C3E_50D9_4900_B445_6A5369DF309F" id="181" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class adapts the interface of Adaptee to the Target interface.">
						<![CDATA[This class adapts the interface of Adaptee to the Target interface.]]>
					</Comment>
				</Element>
				<Element name="Adaptee:Class" guid="EAID_E194B416_8D47_4d08_BBE9_84CE1E27A086" id="180" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines an existing interface that needs adapting.">
						<![CDATA[This class defines an existing interface that needs adapting.]]>
					</Comment>
				</Element>
				<Element name="Target:Class" guid="EAID_AC4E6D1A_864D_46e8_B553_537FC55A70BE" id="179" prompt="yes" link="yes" classifier="no" type="no">
					<Comment comment="This class defines the domain-specific interface that Client uses.">
						<![CDATA[This class defines the domain-specific interface that Client uses.]]>
					</Comment>
				</Element>
			</UMLPattern.PromptList>
			<UMLPattern.PreviewImage xmlns:dt="urn:schemas-microsoft-com:datatypes" dt:dt="bin.base64" cx="12515" cy="7165">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 AAAAAFICdOESAPgnIRAwcSUQ/////3jfEgDvKSEQZHYACAAAAAAlAAAADAAAAAcAAABUAAAA eAAAAGgBAAAVAAAAkAEAACAAAAABAAAAAADhQQCQ4sFyAQAAsv///wcAAABMAAAAAAAAAAAA AAAAAAAA//////////9cAAAAQQBkAGEAcAB0AGUAZQCtugcAAAAGAAAABgAAAAYAAAADAAAA BgAAAAYAAAAlAAAADAAAAAEAAAAbAAAAEAAAAFABAACg////NgAAABAAAAC8AQAAoP///xgA AAAMAAAAiwAAABgAAAAMAAAAAAAAABgAAAAMAAAAAEBAAFQAAABYAAAASwEAAC8AAABUAQAA OwAAAAEAAAAAAOFBAJDiwVUBAACY////AgAAAEwAAAAAAAAAAAAAAAAAAAD//////////1AA AAArACAABgAAAAMAAABUAAAAtAAAAFwBAAAvAAAArgEAADsAAAABAAAAAADhQQCQ4sFmAQAA mP///xEAAABMAAAAAAAAAAAAAAAAAAAA//////////9wAAAAUwBwAGUAYwBpAGYAaQBjAFIA ZQBxAHUAZQBzAHQAKAApAK26BwAAAAYAAAAGAAAABQAAAAMAAAADAAAAAwAAAAUAAAAHAAAA BgAAAAYAAAAGAAAABgAAAAQAAAADAAAAAwAAAAMAAAAYAAAADAAAAAAAAAAnAAAAGAAAAAYA AAAAAAAAwL/AAAAAAAAlAAAADAAAAAYAAAAmAAAAHAAAAAgAAAAAAAAAAQAAAAAAAADAv8AA JQAAAAwAAAAIAAAAKwAAABgAAACoAAAAF////1EBAADS/v//JQAAAAwAAAACAAAAKAAAAAwA AAAGAAAAJQAAAAwAAAADAAAAKAAAAAwAAAAIAAAAKwAAABgAAAClAAAAGv///04BAADV/v// JQAAAAwAAAAHAAAAVAAAAHgAAADdAAAAtgAAAAMBAADBAAAAAQAAAAAA4UEAkOLB5wAAABH/ //8HAAAATAAAAAAAAAAAAAAAAAAAAP//////////XAAAAEEAZABhAHAAdABlAHIArboHAAAA BgAAAAYAAAAGAAAAAwAAAAYAAAAEAAAAJQAAAAwAAAABAAAAGwAAABAAAAClAAAA//7//zYA AAAQAAAATgEAAP/+//8YAAAADAAAAIsAAAAYAAAADAAAAAAAAAAYAAAADAAAAABAQABUAAAA WAAAAKAAAADQAAAAqQAAANwAAAABAAAAAADhQQCQ4sGqAAAA9/7//wIAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAKwAgAAYAAAADAAAAVAAAAIQAAACxAAAA0AAAAN0AAADcAAAA AQAAAAAA4UEAkOLBuwAAAPf+//8JAAAATAAAAAAAAAAAAAAAAAAAAP//////////YAAAAFIA ZQBxAHUAZQBzAHQAKAApAK26BwAAAAYAAAAGAAAABgAAAAYAAAAEAAAAAwAAAAMAAAADAAAA GAAAAAwAAACAgIAAHgAAABgAAADCAAAA6v7//08BAADU/v//SwAAABAAAAAAAAAABQAAABYA AAAMAAAAAQAAABIAAAAMAAAAAQAAABsAAAAQAAAAAAAAAAAAAABUAAAAVAAAAAAAAAAAAAAA //////////8BAAAAAADhQQCQ4sHCAAAA6v7//wEAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAA AABQAAAAAwCtuoIAAAAWAAAADAAAAAAAAABUAAAAeAAAALgAAADdAAAA3wAAAOkAAAABAAAA AADhQQCQ4sHCAAAA6v7//wcAAABMAAAAAAAAAAAAAAAAAAAA//////////9cAAAAYQBkAGEA cAB0AGUAZQCtugYAAAAGAAAABgAAAAYAAAADAAAABgAAAAYAAABUAAAAVAAAAN8AAADdAAAA 4gAAAOkAAAABAAAAAADhQQCQ4sHpAAAA6v7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////// //9QAAAALQCtugMAAABUAAAAVAAAAOIAAADdAAAA6AAAAOkAAAABAAAAAADhQQCQ4sHsAAAA 6v7//wEAAABMAAAAAAAAAAAAAAAAAAAA//////////9QAAAAPgCtugYAAABUAAAAqAAAAOgA AADdAAAANAEAAOkAAAABAAAAAADhQQCQ4sHyAAAA6v7//w8AAABMAAAAAAAAAAAAAAAAAAAA //////////9sAAAAUwBwAGUAYwBpAGYAaQBjAFIAZQBxAHUAZQBzAHQArboHAAAABgAAAAYA AAAFAAAAAwAAAAMAAAADAAAABQAAAAcAAAAGAAAABgAAAAYAAAAGAAAABAAAAAMAAABUAAAA WAAAADQBAADdAAAAOgEAAOkAAAABAAAAAADhQQCQ4sE+AQAA6v7//wIAAABMAAAAAAAAAAAA AAAAAAAA//////////9QAAAAKAApAAMAAAADAAAAGwAAABAAAABOAQAA//7//xYAAAAMAAAA AAAAABgAAAAMAAAAAEBAABgAAAAMAAAAAAAAACcAAAAYAAAACAAAAAAAAADAv8AAAAAAACUA AAAMAAAACAAAACYAAAAcAAAABgAAAAAAAAABAAAAAAAAAMC/wAAlAAAADAAAAAYAAAArAAAA GAAAABcAAAC6////cAAAAHX///8lAAAADAAAAAIAAAAoAAAADAAAAAgAAAAlAAAADAAAAAMA AAAoAAAADAAAAAYAAAArAAAAGAAAABQAAAC9////bQAAAHj///8lAAAADAAAAAcAAABUAAAA cAAAACkAAAATAAAARQAAAB4AAAABAAAAAADhQQCQ4sEzAAAAtP///wYAAABMAAAAAAAAAAAA AAAAAAAA//////////9YAAAAQwBsAGkAZQBuAHQABwAAAAMAAAADAAAABgAAAAYAAAADAAAA JQAAAAwAAAABAAAAGwAAABAAAAAUAAAAov///zYAAAAQAAAAbQAAAKL///8YAAAADAAAAIsA AAAYAAAADAAAAAAAAAAYAAAADAAAAABAQAAYAAAADAAAAAAAAAAmAAAAHAAAAAYAAAAAAAAA AQAAAAAAAAAAAAAAJQAAAAwAAAAGAAAAGwAAABAAAADRAAAAGv///zYAAAAQAAAA0QAAAEj/ //82AAAAEAAAANEAAABI////NgAAABAAAADRAAAAdf///xsAAAAQAAAA0QAAAHX///9WAAAA KAAAAMIAAABSAAAAzQAAAGEAAAADAAAA1wBm/8wAZv/RAHX/EgAAAAwAAAACAAAAGQAAAAwA AAD///8AEgAAAAwAAAABAAAAGQAAAAwAAAD///8AJQAAAAwAAAADAAAAKAAAAAwAAAAGAAAA JgAAABwAAAAGAAAAAAAAAAEAAAAAAAAAAAAAACUAAAAMAAAABgAAABsAAAAQAAAAbgAAAJn/ //82AAAAEAAAAIkAAACZ////NgAAABAAAACJAAAAmf///zYAAAAQAAAApAAAAJn///8bAAAA EAAAAKQAAACZ////GwAAABAAAACkAAAAmf///zYAAAAQAAAAlgAAAJT///8bAAAAEAAAAKQA AACZ////NgAAABAAAACWAAAAn////xIAAAAMAAAAAgAAABkAAAAMAAAA////ABIAAAAMAAAA AQAAABkAAAAMAAAA////ACUAAAAMAAAAAwAAACgAAAAMAAAABgAAACYAAAAcAAAABgAAAAAA AAABAAAAAAAAAAAAAAAlAAAADAAAAAYAAAAbAAAAEAAAADkBAAAa////NgAAABAAAAA5AQAA Gv///zYAAAAQAAAAOQEAAJr///82AAAAEAAAAFABAACa////GwAAABAAAABQAQAAmv///xsA AAAQAAAAUAEAAJr///82AAAAEAAAAEIBAACV////GwAAABAAAABQAQAAmv///zYAAAAQAAAA QgEAAKD///8SAAAADAAAAAIAAAAZAAAADAAAAP///wBSAAAAcAEAAAgAAAD2////AAAAAAAA AAAAAAAAAAAAAAAAAAEAAAAAQQBSAEkAQQBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAknwAAFICYAAAQG0FkXwI6xIA2OYSAAAA AACs3hIA+CchEDBxJRD/////+NwSAO8pIRAdAAAAAAAAAAEAAABQAAAAYK4OA1zblXwAAFIC rNuVfAgAAAAAAFICAABSAmCuDgMk3QAAEc2WfAAAEgAAAAAA8N0SABjukHzIapJ8AAD//75q knytaJJ8AABSAmAAAEBtBZF8COsSANjmEgAAAAAARN0SAJHWQl8AAAEACOsSALzcEgAAAAAA sN0SAAAAkHxwBZF8QAAAAChQDQNc25V8cFANA6zblXwAAAAAAAAAAAAAUgIoUA0DZHYACAAA AADY5hIAAAAAADrZoAFkdgAIAAAAACUAAAAMAAAACAAAAFQAAAB8AAAAAgEAAJwAAAAsAQAA qAAAAAEAAAAAAOFBAJDiwQwBAAAr////CAAAAEwAAAAAAAAAAAAAAAAAAAD//////////1wA AAAtAGEAZABhAHAAdABlAGUAAwAAAAYAAAAGAAAABgAAAAYAAAADAAAABgAAAAYAAAAlAAAA DAAAAAEAAAAoAAAADAAAAAgAAAASAAAADAAAAAEAAAAZAAAADAAAAP///wAlAAAADAAAAAMA AAAoAAAADAAAAAYAAAAlAAAADAAAAA0AAIAoAAAADAAAAAEAAAAoAAAADAAAAAcAAAAlAAAA DAAAAAAAAIAoAAAADAAAAAIAAAAlAAAADAAAAAcAAIAoAAAADAAAAAMAAAAOAAAAFAAAAAAA AAAQAAAAFAAAAA==</UMLPattern.PreviewImage>
		</UMLPattern>
	</XMI.extensions>
</XMI>
		2.0



		ElementID		VersionID		ElementType		Flags		ExternalFile		Notes		Owner		VersionDate		Branch		ElementXML



		XrefID		Name		Type		Visibility		Namespace		Requirement		Constraint		Behavior		Partition		Description		Client		Supplier		Link

		{63169D06-3BA5-467b-97EA-1EB049CF1AEC}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{001AB757-F72D-47d2-92EB-9CA4EA15E0A1}		<none>		

		{264DF76A-DA72-47be-BAE3-3064A43721AC}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{001AB757-F72D-47d2-92EB-9CA4EA15E0A1}		<none>		

		{38463125-233E-4e1e-9215-639F6860B231}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{0809440E-51E3-4a78-B8CA-89939627FDA9}		<none>		

		{F9ECD4C7-805E-4388-BBE3-766B12854EB0}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{0809440E-51E3-4a78-B8CA-89939627FDA9}		<none>		

		{69AF58CA-962E-489b-BF7F-2A8F18B887C4}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{0EFEF0CD-6D5D-4625-B508-5A67E854F737}		<none>		

		{05DCC175-6948-46d1-BB7C-FDA3FE8BCEC6}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{0EFEF0CD-6D5D-4625-B508-5A67E854F737}		<none>		

		{0DC6755C-30AC-4731-8D70-B79CB41E8324}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{195CE92E-94BD-4ea6-AD65-861A42D0CCC9}		<none>		

		{7513CE81-6903-4f85-955D-D4FD2E8C5F73}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{195CE92E-94BD-4ea6-AD65-861A42D0CCC9}		<none>		

		{9EC37A53-4BFD-4f7f-B036-1B5F31971843}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{1B5DD48A-99FB-415b-81E2-366C1118918B}		<none>		

		{62776F5D-8ADF-4897-B07E-B24D552692FE}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{1B5DD48A-99FB-415b-81E2-366C1118918B}		<none>		

		{4825BC85-D639-4d3c-A2DC-194A36283D3E}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{20D9A9D1-262B-47ac-89A2-E31B5B2AAF58}		<none>		

		{16D5D321-E89D-450c-A036-7A9F259C4958}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{23261424-BC61-498a-B482-79943FD75049}		<none>		

		{60FD15A8-C777-4c7c-AA3F-F6BA5E81BE3E}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{23261424-BC61-498a-B482-79943FD75049}		<none>		

		{DA684E59-DB1D-4390-98B7-C37A702A2D4D}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{35E0DBD1-6326-4942-B8EA-3498B8232ED3}		<none>		

		{96F9ED86-419F-454c-AEA3-50ECC862D273}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{35E0DBD1-6326-4942-B8EA-3498B8232ED3}		<none>		

		{7B319F80-DC89-4265-A41F-CFBDB37646F2}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{38ABEECF-9083-4974-8562-758BBEEB7DAA}		<none>		

		{AA43DF33-DA8F-40bc-AC06-A22B2DB7EC46}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{38ABEECF-9083-4974-8562-758BBEEB7DAA}		<none>		

		{C245E2BD-4282-4eae-974A-7083DCE66B55}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{49DACFA1-02C0-47b1-B5A6-F13A24D6F13C}		<none>		

		{DC38BC44-D467-4af3-80F7-AA7B64681696}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{49DACFA1-02C0-47b1-B5A6-F13A24D6F13C}		<none>		

		{BF50CA99-6BF8-4d9f-B09E-5E660314509A}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{4C80416C-4ED9-4d5f-89AD-7CABD773FB07}		<none>		

		{064F5EEE-CA17-491e-8C6C-9D42135629BF}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{4C80416C-4ED9-4d5f-89AD-7CABD773FB07}		<none>		

		{3B6D4F48-6D78-4dca-947C-14D348430E3E}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{53F90673-7F38-4748-8BE1-01F6E638BF77}		<none>		

		{4D7DDF19-ACB0-4875-9197-560AFB12916A}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{53F90673-7F38-4748-8BE1-01F6E638BF77}		<none>		

		{CB3E0281-C689-49b2-BDCF-644D5FC65FF4}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{64AD3D3F-FAD7-4a69-97EC-F5E597413308}		<none>		

		{0FAC4343-CA19-4f75-8959-0267B70F18B6}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{64AD3D3F-FAD7-4a69-97EC-F5E597413308}		<none>		

		{20C6B515-CE8C-40df-8A20-2A8A84BC1775}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{651D203C-AC4E-42ea-978F-BAA7CC24EC0B}		<none>		

		{C62531CD-CBC1-4eca-A7CD-A9CD5EACBBB4}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{651D203C-AC4E-42ea-978F-BAA7CC24EC0B}		<none>		

		{EA9DFD53-4339-48ca-A7C6-FDCD11F1521B}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{68321C32-5EFB-464a-BDD8-44E3B5151B74}		<none>		

		{8DCCD40A-E557-4955-A362-CBA06EA9DFE7}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{68321C32-5EFB-464a-BDD8-44E3B5151B74}		<none>		

		{F24B02EC-57E4-4fe3-BD64-E1A3C1A55D0F}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{73AEA82A-77EC-456b-8886-21CBDBC3AD3B}		<none>		

		{6138E09F-7F37-4a81-84D0-F8DA3489410B}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{73C0C5DC-DD86-40f3-B838-D5048EF4017B}		<none>		

		{84666098-B4B4-4c29-A1E1-B0FE0ADAEB5B}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{73C0C5DC-DD86-40f3-B838-D5048EF4017B}		<none>		

		{6B82B33E-6CC7-428f-93CA-7DB616F38D7E}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{7591D9F4-29AA-4750-A5C3-180ADB3F9113}		<none>		

		{97FDF319-A1B1-42bd-B0DF-EFA8DEEA9B9A}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{7591D9F4-29AA-4750-A5C3-180ADB3F9113}		<none>		

		{EA85A151-EADB-41b5-BB97-C0076EF3EB5C}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{89772E02-3965-4995-9872-B4F9A392CFAC}		<none>		

		{7C8AE072-F493-4e47-8362-A3DF107647D1}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{89772E02-3965-4995-9872-B4F9A392CFAC}		<none>		

		{FCFD2C3B-8E57-4622-9B03-3A5EE4725BA1}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{8DEA478C-8359-4566-8C05-72FF70D4C32E}		<none>		

		{1C63F12E-36ED-469f-A845-A0E32047FA61}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{8DEA478C-8359-4566-8C05-72FF70D4C32E}		<none>		

		{162CA429-434B-4799-A4DB-BD43E4DEBC93}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{8F2576F5-5215-44cb-8540-262AF694A8FE}		<none>		

		{8061CAC4-B52B-4aaf-9445-96B9D0B27AD1}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{8F2576F5-5215-44cb-8540-262AF694A8FE}		<none>		

		{F0753BEC-ADC3-4ef1-AC17-C62ABC9AE3DB}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{AD600C01-3A97-4d5c-BB00-089E4D474EE7}		<none>		

		{3C5A8D58-E9A5-4f6c-96CF-E342165A6FBF}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{AD600C01-3A97-4d5c-BB00-089E4D474EE7}		<none>		

		{34E1D66B-9A0E-45a3-870B-AEA0B0A68C7A}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{B6E5A039-1892-44b2-AC39-76C16BAD23F7}		<none>		

		{46AA5557-5742-4c8a-9CC6-1AAA1D87DD93}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{B6E5A039-1892-44b2-AC39-76C16BAD23F7}		<none>		

		{B2D9331D-CC09-4351-A63D-BFFD48394901}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{B7604E7F-2F65-45bb-A2FB-6CFD0A61BCCF}		<none>		

		{7746D60F-C1EF-4993-8ECB-ADA5B5855A4E}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{B7604E7F-2F65-45bb-A2FB-6CFD0A61BCCF}		<none>		

		{138A9ABB-866E-4902-AA83-4E7A330FECA7}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{B98A0CCA-FDE2-42ba-97BA-7A3CF2C3EF5D}		<none>		

		{0BA5C0F6-6786-476f-B269-D7D95C47878A}		Stereotypes		element property		Public												@STEREO;Name=DataObject;GUID={E2EB3FF1-15D4-43fb-AB18-872225E97C58};@ENDSTEREO;		{B98A0CCA-FDE2-42ba-97BA-7A3CF2C3EF5D}		<none>		

		{E3AC8030-A922-4e04-A4C5-26B3C2C8FA6E}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{D61BAAA7-2B9E-4d6a-B4AB-222DF6A56496}		<none>		

		{BB25735E-854F-435c-8C49-68F33173FE55}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{D61BAAA7-2B9E-4d6a-B4AB-222DF6A56496}		<none>		

		{A5CA3B62-4166-4132-939A-8FF4348F4298}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{F18302A4-CB84-4cf8-8F91-D54A5D537D34}		<none>		

		{AA977178-9159-43a9-8AA9-3AD0DCA5A0F5}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{F18302A4-CB84-4cf8-8F91-D54A5D537D34}		<none>		

		{31DF7E29-D45B-4c9c-81E4-AA80E1414A3D}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{F4C0534C-339C-4e9d-9C2D-DD035D04D359}		<none>		

		{4D9785F7-69F5-451c-881A-7FABC19A220F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{98ECB1E8-3FEA-413b-9EFA-26BBB05FAFC6}		<none>		

		{9D5820D2-711C-4782-82CA-9F1F7254EA40}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{4AA6C551-4197-4f4d-A076-A673C9E74C15}		<none>		

		{EBC1199A-49AF-4281-95F7-934B5980C08C}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{9CBF4FEB-8E57-4253-94D8-F4B0A96AB097}		<none>		

		{6DD4FAE3-51BE-4142-A55C-8F5A29A25682}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{A5ED0647-281E-4264-8D5F-914970BA0258}		<none>		

		{95AE141A-8FE6-4bdd-A6B5-D39235A0137C}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{EA0B2C41-1A70-46fb-91EE-22B4F59BC87C}		<none>		

		{A5A208E8-B249-413a-9F8C-3CEC76EA0DE1}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{0040E4F7-D9E7-4ab3-858F-EAFE32FD279D}		<none>		

		{C28A5878-B8D3-45b0-BA2C-7841E923AA41}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{FAA51575-3E01-4642-BE41-F22C9094B3E2}		<none>		

		{AEA3FD84-6005-42e6-8F7D-D542983603AC}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{ED72F3DE-6362-4106-801B-4EA539F3CEBC}		<none>		

		{F6D718BC-4511-4352-ACA1-57B9EC34B79B}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DC6AD1F6-64BF-4eb7-832D-C7D5AEA0B91E}		<none>		

		{8C992FEF-C2EA-420c-A5B6-D000D5962B2F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{81D08F5E-0B3F-4e6a-8E98-22E45B4DBF3D}		<none>		

		{C205B95A-3E59-43c4-BA82-39A99F3E4D73}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{44104FA2-6C8D-473f-9D1B-0F2CE4B86588}		<none>		

		{D74AFA14-EC81-415d-9D8F-421402B22C19}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DAE97A33-0232-459f-AB58-3A5336B7BB74}		<none>		

		{A5AB3798-C742-4569-8DA4-2745DBFD85DA}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{AFE29132-125E-4f85-87BD-698011D531FB}		<none>		

		{5A7BFF64-E629-475d-813B-7FB9A4A1C76C}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{F14D223A-88A4-4fd5-8459-120CF1826F24}		<none>		

		{3DF06DB3-3716-4e2f-954E-5ACE88019A92}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{40C76331-0E11-47a2-A441-E51B0C0E3477}		<none>		

		{60BC328B-60E5-4454-8A13-57A1B2448C8A}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{1B482929-54CD-4152-9CD6-A2A6858B5879}		<none>		

		{729415FC-3117-4b54-AD48-4F3AD1B5811F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{A74300E0-6CD0-4140-9424-92B150481B3D}		<none>		

		{E264DC65-E2C8-40d1-AC71-23AAE69AF85A}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{05851E2C-4345-479f-B369-34836BD36C27}		<none>		

		{4E569A97-A44B-42a3-AF48-4DC1022C9986}		Stereotypes		element property		Public												@STEREO;Name=type;GUID={EEB9245E-3970-45ff-85A6-BB440CAC4690};@ENDSTEREO;		{05851E2C-4345-479f-B369-34836BD36C27}		<none>		

		{B007C0B5-B8E0-4234-B008-139F4B7082B5}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{064AC959-B2E3-4791-865F-EAB3F027C0D0}		<none>		

		{273C7E97-6941-46ba-A86C-B73C15A8A3FB}		Stereotypes		element property		Public												@STEREO;Name=MetaClass;GUID={8BD35E7F-3D53-4812-BC07-2E5816EA75BF};@ENDSTEREO;		{064AC959-B2E3-4791-865F-EAB3F027C0D0}		<none>		

		{0C227D52-4AD0-4adc-B21A-308148E2B9C7}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{1C80BCF0-2A5F-4eef-A330-5CB34A15BFBD}		<none>		

		{9715E103-48E2-4af2-8160-77EABE1E3705}		Stereotypes		element property		Public												@STEREO;Name=type;GUID={EEB9245E-3970-45ff-85A6-BB440CAC4690};@ENDSTEREO;		{1C80BCF0-2A5F-4eef-A330-5CB34A15BFBD}		<none>		

		{1076A3B9-D1EB-4827-AFEC-FED6C1CD733D}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{1C8DE820-2536-4a8b-ADAF-29EB463F68D5}		<none>		

		{99DF71EA-E9E7-434c-9BC0-CA75D7851DEA}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{1C8DE820-2536-4a8b-ADAF-29EB463F68D5}		<none>		

		{3DDDE6ED-689F-4f8d-8A2C-DA19ACC193AB}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{259C255D-F318-42c3-8924-D6848F284C06}		<none>		

		{9273C986-FABB-45a5-9627-C8F67430F3DA}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{259C255D-F318-42c3-8924-D6848F284C06}		<none>		

		{790AF3FC-DBA7-43b5-A1B1-559DFCA2DAB3}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{32C4F133-F6BE-4892-AC88-C55EF7AE356A}		<none>		

		{BEAE0E1D-1C04-48e8-9B65-A03621F91469}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{32C4F133-F6BE-4892-AC88-C55EF7AE356A}		<none>		

		{4B2B5487-C8CC-4463-ACEF-A7E5AD7BD7A4}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{37DEB374-8F98-4761-A8F1-5176BB16CCC7}		<none>		

		{011FD1E9-E782-4933-9745-3F6DC5FE9A36}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{37DEB374-8F98-4761-A8F1-5176BB16CCC7}		<none>		

		{B7BAE5AC-B158-4a95-AE8F-95000576DA9E}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{41D4CBA5-6501-4195-9C68-EDDF03DB23EF}		<none>		

		{9B2229DE-E664-4765-B4BA-3E1E2F3E295A}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{41D4CBA5-6501-4195-9C68-EDDF03DB23EF}		<none>		

		{14750331-279B-4e95-A716-A6EBCE4D0514}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{49107904-5F30-4e4c-AC3E-624AE4999165}		<none>		

		{CD294496-6311-4354-9EE9-5562B3172465}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{49107904-5F30-4e4c-AC3E-624AE4999165}		<none>		

		{1CC0A7D5-F268-488b-9F2B-6553CF9C681F}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{496E2D6A-4507-492e-9257-5A4CC4E1AA3C}		<none>		

		{68F6D39E-AAE9-48b2-A596-F553FEC1C9AB}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{496E2D6A-4507-492e-9257-5A4CC4E1AA3C}		<none>		

		{0D5BAABB-4A8F-4dcb-8A8B-5F5F4EA33064}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{4BC6349C-1DCD-4d20-AE16-FB5EEE69BAA4}		<none>		

		{F654A22D-E079-4a28-833E-35F15AC933BD}		Stereotypes		element property		Public												@STEREO;Name=Specification;GUID={578A1534-4B5F-4b52-9224-36F0B90CF907};@ENDSTEREO;		{4BC6349C-1DCD-4d20-AE16-FB5EEE69BAA4}		<none>		

		{C04FA026-425D-441a-B001-D6C4F2735194}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{4D87D740-9556-4ab1-8339-21F92AFFF71C}		<none>		

		{BBF5F535-5E05-4210-B37D-322354EB9470}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{4D87D740-9556-4ab1-8339-21F92AFFF71C}		<none>		

		{152E99B1-F172-4c40-893F-895E21855C62}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{64E6A017-3485-49fd-950F-7341584AE171}		<none>		

		{BAD9FD47-648F-4603-83AF-DC94FEE779B5}		Stereotypes		element property		Public												@STEREO;Name=interface;GUID={1687A0E9-3214-4094-8D5D-0C7959967229};@ENDSTEREO;		{64E6A017-3485-49fd-950F-7341584AE171}		<none>		

		{F016AE32-2E41-42b4-BE2A-2961EF010647}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{7425D644-1924-4935-BEE6-2CE8CF1F412F}		<none>		

		{7E94FF02-5A57-45a4-B0FF-163F3BF427A7}		Stereotypes		element property		Public												@STEREO;Name=type;GUID={EEB9245E-3970-45ff-85A6-BB440CAC4690};@ENDSTEREO;		{7425D644-1924-4935-BEE6-2CE8CF1F412F}		<none>		

		{22C7BCD7-C87B-4c1f-A320-67CC80318F2D}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{78763E24-5566-436c-95A2-B6CA66D34D1B}		<none>		

		{C5D3FEC8-47D1-4365-8468-3DDBD7CDF6E0}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{78763E24-5566-436c-95A2-B6CA66D34D1B}		<none>		

		{3D30E4FD-E41F-4904-97BD-D830FB59D90F}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{7C7F2DDF-9912-4e4f-A098-0D1194A38F3A}		<none>		

		{FC4BE3E6-E496-4797-81CB-8D2C4822DAF4}		Stereotypes		element property		Public												@STEREO;Name=Specification;GUID={578A1534-4B5F-4b52-9224-36F0B90CF907};@ENDSTEREO;		{7C7F2DDF-9912-4e4f-A098-0D1194A38F3A}		<none>		

		{0E75EB95-0DF9-4f4e-9EDE-6FCA7CCEFAA0}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{828F377A-8A7F-4648-BB4F-2DC8FCA3098D}		<none>		

		{421C6BCC-7784-4e31-8320-8E8AD2501424}		Stereotypes		element property		Public												@STEREO;Name=type;GUID={EEB9245E-3970-45ff-85A6-BB440CAC4690};@ENDSTEREO;		{828F377A-8A7F-4648-BB4F-2DC8FCA3098D}		<none>		

		{187CF513-FF3C-42d8-9932-ADDC220432A7}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{8327BB88-0E26-4e70-94A6-6C1EDA7E8437}		<none>		

		{7EFD8C06-313C-4abf-BC72-91197D136643}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{8327BB88-0E26-4e70-94A6-6C1EDA7E8437}		<none>		

		{50EBF565-80DB-4024-8CBD-79E0DA90F24B}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{8F68C644-9C8F-4aa9-9134-BA8233D68FB0}		<none>		

		{606B8476-45F1-484a-B83D-2C303C49632D}		Stereotypes		element property		Public												@STEREO;Name=ServiceType;GUID={5CEDB611-E248-42bf-A6B6-D85491FE975D};@ENDSTEREO;		{8F68C644-9C8F-4aa9-9134-BA8233D68FB0}		<none>		

		{B04500F3-022C-4ba4-B075-92FDC61BE20F}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{950A4AA3-15FB-4913-8259-95BE03BDF060}		<none>		

		{EFA57231-D7D8-47ab-9E2A-4F48B00EF2CB}		Stereotypes		element property		Public												@STEREO;Name=ServiceType;GUID={5CEDB611-E248-42bf-A6B6-D85491FE975D};@ENDSTEREO;		{950A4AA3-15FB-4913-8259-95BE03BDF060}		<none>		

		{C71E6115-6C6A-4ee6-A35E-3DFB07597D13}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{9B22E9CE-D516-4d05-AC19-1B08BDD5E337}		<none>		

		{C65BAAB0-5C78-467e-9591-D86EBDFFCA6A}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{9B22E9CE-D516-4d05-AC19-1B08BDD5E337}		<none>		

		{94B89C27-A1A2-4b28-98F3-2869FE518D56}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{9B857191-2941-4de9-9892-E436C5706998}		<none>		

		{6D0E6B00-4F24-4cdc-AF48-DE2C8A900167}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{9B857191-2941-4de9-9892-E436C5706998}		<none>		

		{EE7E9E64-4E60-45fc-8514-4E1279F2522A}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{9FB940FC-A2CA-48b8-A513-1241F5865209}		<none>		

		{624346B8-289A-454f-B332-B4B7FC2244C5}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{9FB940FC-A2CA-48b8-A513-1241F5865209}		<none>		

		{79613222-1BB6-4338-92DF-14254F144590}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{B312DC0A-FBC8-4135-9CCD-17B964A0DA3E}		<none>		

		{3D8DD6ED-2A55-41d9-88C9-ADD33D725D46}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{CFFDE4D7-9D14-40a4-A2BA-07FE1D4C8A37}		<none>		

		{DED2B961-3A2F-4e98-9912-72634860A537}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DBF42D37-A45C-4574-944A-EAD69F28AD75}		<none>		

		{853A3B8C-DED9-4a30-8487-BF39DAD34041}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{DBF42D37-A45C-4574-944A-EAD69F28AD75}		<none>		

		{779249FE-20D8-4185-8B22-BF2D2DB8B1ED}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DDADFD5A-6F7E-4f1d-8FD4-912D5BEFB636}		<none>		

		{44FE5216-011C-4ee8-ACE4-4C67D0E7B427}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{DDADFD5A-6F7E-4f1d-8FD4-912D5BEFB636}		<none>		

		{8EA6D47A-CCE2-4a30-9C97-F193BA8869E7}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DEE77D36-D4A0-4312-AF0E-FE083D29300C}		<none>		

		{EE80D45E-3E20-4037-A3DF-96F98D219E4C}		Stereotypes		element property		Public												@STEREO;Name=Specification;GUID={578A1534-4B5F-4b52-9224-36F0B90CF907};@ENDSTEREO;		{DEE77D36-D4A0-4312-AF0E-FE083D29300C}		<none>		

		{8934265F-0695-4bf5-B843-25B65EF463B4}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DF83880B-366F-4d54-9E29-95157E9A7056}		<none>		

		{15B21583-6320-4d31-AB76-21232F88F37D}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{DF83880B-366F-4d54-9E29-95157E9A7056}		<none>		

		{C6813494-22F6-4ad9-BFBE-C7B59045D6BC}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{E5191F83-D483-44db-AA73-E7089E642CE6}		<none>		

		{CCBD6C15-F87D-4456-A055-E858B9260125}		Stereotypes		element property		Public												@STEREO;Name=Specification;GUID={578A1534-4B5F-4b52-9224-36F0B90CF907};@ENDSTEREO;		{E5191F83-D483-44db-AA73-E7089E642CE6}		<none>		

		{6BB1063D-C0BB-46e1-AC9E-79EAA1E14715}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{E580D204-CD05-498a-BAA9-C91C70974332}		<none>		

		{EF1645DF-6DEA-4a52-8410-AD374F03588F}		Stereotypes		element property		Public												@STEREO;Name=type;GUID={EEB9245E-3970-45ff-85A6-BB440CAC4690};@ENDSTEREO;		{E580D204-CD05-498a-BAA9-C91C70974332}		<none>		

		{003B29D1-00AD-48ef-B87F-E469C9448DC2}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{EB82D5D7-8617-4e27-B4CE-DA202DE89344}		<none>		

		{40BDE7CF-A4C2-4ea6-BC57-A41B64519E3E}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{EDF6279D-6917-48bd-B385-D2EDB74E0EF8}		<none>		

		{5DD20A0C-1093-4a76-B346-B6111F70F55B}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{EDF6279D-6917-48bd-B385-D2EDB74E0EF8}		<none>		

		{E71BB438-AB83-443b-8A84-873B04F01A52}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{EE589C15-4C7E-408b-A3C5-4B81DAB66676}		<none>		

		{F98967E0-3C85-4a23-BAA2-B1B542FAFA01}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{EE589C15-4C7E-408b-A3C5-4B81DAB66676}		<none>		

		{A8C952FD-2691-4349-8AED-3057EB8F763C}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{FBCED484-CBED-402a-B464-57B17E7BE19A}		<none>		

		{1FE48ADA-5D4D-41f9-82D3-EB6EAE7B4FAC}		Stereotypes		element property		Public												@STEREO;Name=ServiceType;GUID={5CEDB611-E248-42bf-A6B6-D85491FE975D};@ENDSTEREO;		{FBCED484-CBED-402a-B464-57B17E7BE19A}		<none>		

		{50DB3040-E1B4-4a8f-B459-2DD17974E814}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{FF8AC022-3009-4d5b-BD4C-03A51C1A85D1}		<none>		

		{93511A51-3D24-4c04-8D0F-36990A658F83}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{FF8AC022-3009-4d5b-BD4C-03A51C1A85D1}		<none>		

		{228A395B-9A07-47aa-8BA5-3DF70FA6193E}		CustomProperties		connector property		Public												@PROP=@NAME=isDerived@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=false@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{6482258B-B1CF-46c6-9BF8-D59BF2B0CBC7}		<none>		

		{5C2A59B8-76E3-4cd0-9D51-334525FA6F2F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{00B9A116-C43D-4443-A581-BF96EC9F8C19}		<none>		

		{EFA80BB3-7D9A-467c-9F60-3B03FEA09F0F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{60ADE6C7-1476-4547-8D22-82D30614A3F5}		<none>		

		{FD279BAE-CDDD-45f3-8300-25CBE29F2DF7}		CustomProperties		connector property		Public												@PROP=@NAME=isDerived@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=false@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{939AB416-E5F7-4fe9-A602-7B4824ED35A8}		<none>		

		{01AC701C-7FBA-47d0-9423-312656174282}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{81D0BBDE-DE30-43ea-A503-A13F2E12B671}		<none>		

		{90CFCF01-686D-4b00-8AF2-09CBC77A2F5F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{3D45F1A6-D836-43f8-839B-B3492194A26A}		<none>		

		{71DBBED0-F38F-435f-A8CC-45991E13A27F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{23357026-CF30-4a15-ADFD-ED540A180EB4}		<none>		

		{5C4EA676-B770-41ed-AB57-BBE46913BB5F}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{B312DC0A-FBC8-4135-9CCD-17B964A0DA3E}		<none>		

		{13828A47-FF43-4fe0-9C1E-6CA44501AF77}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{B97A4AC8-60F7-4d10-8473-A31E43C7F636}		<none>		

		{8878451D-2242-4d93-8D73-AF922340DA66}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{B97A4AC8-60F7-4d10-8473-A31E43C7F636}		<none>		

		{C3FBDAD4-2542-4d9a-9BCC-4A1DD6485C37}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{B985221A-41E9-4ced-A8ED-8809A65D1B59}		<none>		

		{15AADB70-A258-4bf6-9EC0-31B104E7AD4B}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{B985221A-41E9-4ced-A8ED-8809A65D1B59}		<none>		

		{28BB8290-0E0E-4ced-9F40-E8B010088921}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{BA8570FE-87FF-48b8-979F-31AED6567FF9}		<none>		

		{45D5059F-9713-44cc-83BB-D5A1DAC04E34}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{BA8570FE-87FF-48b8-979F-31AED6567FF9}		<none>		

		{765E0ADF-D37E-44f9-933E-2E73A4BF594D}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{C1AB87F0-7D9A-49a3-B7F2-A63DC398FB39}		<none>		

		{BEB1E90A-749C-49a4-91BA-7E0014C4ABBA}		Stereotypes		element property		Public												@STEREO;Name=interface;GUID={1687A0E9-3214-4094-8D5D-0C7959967229};@ENDSTEREO;		{C1AB87F0-7D9A-49a3-B7F2-A63DC398FB39}		<none>		

		{377316C0-52C1-4bd6-978F-68CD82E50BF3}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{C6AD0876-DD21-43d5-BDB9-E5449FCF679E}		<none>		

		{6B175FE2-1714-4284-A628-68DEBB647863}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{CDD77DD6-7A46-44ba-AAE2-355890FA5B93}		<none>		

		{B5C20251-BC17-44ea-B186-909C3D68224C}		Stereotypes		element property		Public												@STEREO;Name=metaclass;GUID={1C397409-6CD2-4160-B569-DA9AC42F0A94};@ENDSTEREO;		{CDD77DD6-7A46-44ba-AAE2-355890FA5B93}		<none>		

		{4BC150FB-DC6E-4c02-9C60-8489F3A627D1}		CustomProperties		element property		Public												@PROP=@NAME=isActive@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{CFFDE4D7-9D14-40a4-A2BA-07FE1D4C8A37}		<none>		

		{6788CE18-57C0-4ed2-B843-3E809AF3C10F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{F380D724-83BA-454c-B526-7F3CC864F972}		<none>		

		{05BEF368-96A2-453e-A650-A4B88C53733C}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{29112EA0-1B57-4dc5-AA67-C82024C7BF79}		<none>		

		{379EC5EA-94F2-4660-82A8-DCCF1A86EFC5}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{849746AE-E64E-409c-83DE-2AD9BA094299}		<none>		

		{8AEDF712-AFCA-4fdd-B012-8517D2D68C2F}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{5C09C8D5-4657-471b-B1F6-CAD14D6CE02D}		<none>		

		{C6272AC8-6448-4f3b-AD45-1F7E32C1F988}		CustomProperties		connector property		Public												@PROP=@NAME=isDerived@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=false@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{DB4488B1-EDB0-43db-B323-D8AB68EF25E7}		<none>		

		{E982B498-5F3F-486d-9771-796AABE22D47}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{A032BC0F-7179-4d0b-96A4-0EF3C678C0B8}		<none>		

		{77DF1E40-74E0-472d-9726-6C73AEF6368C}		CustomProperties		connector property		Public												@PROP=@NAME=isDerived@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=false@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{A5FB2885-704E-4e1a-B934-40ED79D24084}		<none>		

		{8412FE57-CDAB-4e56-A889-3B4947F97B26}		CustomProperties		connector property		Public												@PROP=@NAME=isDerived@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=false@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{F0A2D730-BCBB-471f-BC1A-95F6552AFFDE}		<none>		

		{DC8DE412-9517-40cc-B7D6-96A914F7D390}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{C2468BB6-11B7-4396-8BD4-1A02F255CA42}		<none>		

		{0BE80602-8944-41b4-8FCA-53C670025FEC}		CustomProperties		connector property		Public												@PROP=@NAME=isDerived@ENDNAME;@TYPE=Boolean@ENDTYPE;@VALU=false@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{02EFAC3F-CCF3-413e-BB74-8818655F3C99}		<none>		

		{15C36CFE-C828-4e60-B7A9-956C1A734BE7}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{C86E1E2C-B077-4fca-87DC-1A05992B8C19}		<none>		

		{DAD33E7A-1265-4fa1-83CF-A477458AED9E}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{C1D47D96-6A3C-4b42-9CB3-AD3F55ED2609}		<none>		

		{97789258-062D-4e7e-87FA-9BF21EE7FD31}		CustomProperties		connector property		Public												@PROP=@NAME=isSubstitutable@ENDNAME;@TYPE=boolean@ENDTYPE;@VALU=@ENDVALU;@PRMT=@ENDPRMT;@ENDPROP;		{932F881C-0877-454d-9949-BE7F9F2E4D6B}		<none>		



		XrefID		ToolID		Name		Type		Visibility		Namespace		Requirement		Constraint		Behavior		Partition		Description		Client		Supplier		Link



		XrefID		ToolID		Name		Type		Visibility		Namespace		Requirement		Constraint		Behavior		Partition		Description		Client		Supplier		Link



		Property		Value

		310_Category		1

		310_Columns		1

		310_FileTable		1

		310_Generalization		1

		310_Images		1

		310_Metafile		2

		310_Palette		1

		310_QObject		1

		310_TableList		1

		310_TableList2		1

		310_Tasks		1

		310_XREF		1

		350_AttGUID		1

		350_DataTypes		1

		350_DiagramConnectorID		1

		350_DiagramObjectID		1

		350_DocumentEX		1

		350_FeaturePos		1

		350_Flags		1

		350_IssueEx		1

		350_OpGUID		1

		350_Package		1

		350_ParamGUID		1

		350_Phases		1

		350_ResourceHours		1

		350_ResourceTables		1

		350_RoleExtra		1

		350_Scenario		1

		350_Snapshot		1

		350_Stereotype		1

		350_Styles		1

		350_SystemTaggedValues		1

		350_TableList		1

		350_TableListEx		1

		350_Tables		1

		350_TestTables		1

		350_TRXTypes		1

		350_UserSecurity		1

		Association		1

		AttID		1

		CheckObjectTypes		1

		Classifier		1

		ClassifierGUID		1

		CodeGen		1

		Const		1

		DDL		1

		DiagramLink		1

		DiagramObjectStyle		1

		EA300Classifier		1

		EA300MSAccessDT		1

		EA300VBDT		1

		EA3FieldSizes		3

		EA3TableNames		1

		EAGUID		1

		Elem300		1

		FileDir		$EAPDIR

		Gen25Fixes		1

		GenericDataType		1

		GUID		2

		IsNavigable		1

		LangDT25		1

		LastUpdate		3B58F782F406:123456789012

		Namespace		1

		NodeStereo		1

		ObjectParent		1

		ObjectScope		1

		OperationCode		1

		OpPos		1

		OpsClean		1

		Orphans30		1

		PackageControl		3

		Packages		1

		ParamIDX		1

		QDF_25		1

		QueryDefs_116		1

		RoleConstraints		1

		RTFFIELDS		1

		RunState		1

		Seq_Gap		35

		Stereotypes		1

		Styles		1

		TaggedVals		1

		TPos		2

		Version		4.01

		VersionDate		Jan-31-2004

		WebStereo		1

		EA600Updates		1

		ProjectGUID		{27AF6E8F-970D-4d9a-BB00-08E3A21FEB3F}

		EA610Updates		1

		EA650Updates		1



		TableName		NewName		RelOrder		FixCode

		TRXTypes		t_trxtypes		1		true

		TestTypes		t_testtypes		1		true

		TestClass		t_testclass		1		true

		TCF		t_tcf		1		true

		Stereotypes		t_stereotypes		1		true

		StatusTypes		t_statustypes		1		true

		ScenarioTypes		t_scenariotypes		1		true

		RTFReport		t_rtfreport		1		true

		RTF		t_rtf		1		true

		RoleConstraint		t_roleconstraint				true

		RiskTypes		t_risktypes		1		true

		Resources		t_resources		1		true

		RequireTypes		t_requiretypes		1		true

		PropertyTypes		t_propertytypes		1		true

		ProjectRoles		t_projectroles		1		true

		ProblemTypes		t_problemtypes		1		true

		Primitives		t_primitives		1		true

		Package		t_package		1		false

		OperationPres		t_operationpres		6		true

		OperationPosts		t_operationposts		6		true

		OperationParams		t_operationparams		6		true

		Operation		t_operation		5		false

		OCF		t_ocf		1		true

		ObjectTRX		t_objecttrx		5		true

		ObjectTests		t_objecttests		5		true

		ObjectScenarios		t_objectscenarios		5		true

		ObjectRisks		t_objectrisks		5		true

		ObjectResource		t_objectresource		5		true

		ObjectRequires		t_objectrequires		5		true

		ObjectProperties		t_objectproperties		5		true

		ObjectProblems		t_objectproblems		5		true

		ObjectMetrics		t_objectmetrics		5		true

		ObjectFiles		t_objectfiles		5		true

		ObjectEffort		t_objecteffort		5		true

		ObjectConstraint		t_objectconstraint		5		true

		Object_Types		t_objecttypes		5		true

		Object		t_object		3		true

		MetricTypes		t_metrictypes		1		true

		Method		t_method		5		true

		MaintTypes		t_mainttypes		1		true

		Implement		t_implement		2		true

		HTML		t_html		1		true

		Glossary		t_glossary		2		true

		EffortTypes		t_efforttypes		1		true

		ECF		t_ecf		1		true

		DiagramTypes		t_diagramtypes		1		true

		DiagramObjects		t_diagramobjects		6		true

		Diagram		t_diagram		5		true

		ConstraintTypes		t_constrainttypes		1		true

		Constants		t_constants		1		true

		ConnectorConstraint		t_connectorconstraint		7		true

		Connector_Types		t_connectortypes		1		true

		Connector		t_connector		6		true

		ComplexityTypes		t_complexitytypes		1		true

		Clients		t_clients		1		true

		Cardinality		t_cardinality		1		true

		Authors		t_authors		1		true

		AttributeConstraints		t_attributeconstraints		7		true

		Attribute		t_attribute		6		true

				t_issues		6		true



		QueryName		NewName		FixCode

		qAttribute		q_attribute		true

		qConnections		q_connections		true

		qConnections2		q_connections2		true

		qConnections3		q_connections3		true

		qConnector		q_connector		true

		qDatatypes		q_datatypes		true

		qECF		q_ecf		true

		qImplements		q_implements		true

		qImplements2		q_implements2		true

		qMethod		q_method		true

		qObject		q_object		true

		qObjectRealizes		q_objectrealizes		true

		qObjectTests		q_objecttests		true

		qOrphans		q_orphans		true

		qPackages		q_packages		true

		qRealizes1		q_realizes1		true

		qRealizes2		q_realizes2		true

		qResource		q_resource		true

		qSumECF		q_sumecf		true

		qSumTCF		q_sumtcf		true

		qTCF		q_tcf		true

		qUCMetrics		q_ucmetrics		true

		qVisibleObject		q_visibleobject		true



		TableName		RelOrder		DisplayName		FromVer		ToVer

		t_attribute		6		Object Attributes		1.1.0		9.9.9

		t_attributeconstraints		7		Attribute Constraints		1.1.0		9.9.9

		t_attributetag		7		Attribute Tag		3.0.0		9.9.9

		t_authors		1		Project Authors		1.1.0		9.9.9

		t_cardinality		1		Object Cardinality		1.1.0		9.9.9

		t_category		1		Category		3.5.0		9.9.9

		t_clients		1		Project Clients		1.1.0		9.9.9

		t_complexitytypes		1		Complexity Types		1.1.0		9.9.9

		t_connector		6		Connectors		1.1.0		9.9.9

		t_connectorconstraint		7		Connector Constraints		1.1.0		9.9.9

		t_connectortag		7		Connector Tag		3.0.0		9.9.9

		t_connectortypes		1		Connector Types		3.5.0		9.9.9

		t_constants		1		Constants		1.1.0		9.9.9

		t_constrainttypes		1		Constraint Types		1.1.0		9.9.9

		t_datatypes		1		Data Types		1.1.0		9.9.9

		t_diagram		5		Diagrams		1.1.0		9.9.9

		t_diagramlinks		6		Diagram Links		1.1.0		9.9.9

		t_diagramobjects		6		Diagram Objects		1.1.0		9.9.9

		t_diagramtypes		2		Diagram Types		1.1.0		9.9.9

		t_document		7		Document		3.5.0		9.9.9

		t_ecf		1		ECF Values		1.1.0		9.9.9

		t_efforttypes		1		Effort Types		1.1.0		9.9.9

		t_files		7		Files		3.5.0		9.9.9

		t_genopt		1		Generation Options		1.1.0		9.9.9

		t_glossary		2		Glossary		1.1.0		9.9.9

		t_html		7		HTML		3.5.0		9.9.9

		t_image		7		Images		3.1.0		9.9.9

		t_implement		2		Implementation Details		1.1.0		9.9.9

		t_issues		6		Issue Details		1.1.0		9.9.9

		t_lists		1		Lists		3.5.0		9.9.9

		t_mainttypes		1		Maintenance Types		1.1.0		9.9.9

		t_method		5		Methods		1.1.0		9.9.9

		t_metrictypes		1		Metric Types		1.1.0		9.9.9

		t_object		3		Object Details		1.1.0		9.9.9

		t_objectconstraint		5		Object Constraints		1.1.0		9.9.9

		t_objecteffort		5		Object Effort		1.1.0		9.9.9

		t_objectfiles		5		Object Files		1.1.0		9.9.9

		t_objectmetrics		5		Object Metrics		1.1.0		9.9.9

		t_objectproblems		5		Object Problems		1.1.0		9.9.9

		t_objectproperties		5		Object Properties		1.1.0		9.9.9

		t_objectrequires		5		Object Requires		1.1.0		9.9.9

		t_objectresource		5		Object Resources		1.1.0		9.9.9

		t_objectrisks		5		Object Risks		1.1.0		9.9.9

		t_objectscenarios		5		Object Scenarios		1.1.0		9.9.9

		t_objecttests		5		Object Tests		1.1.0		9.9.9

		t_objecttrx		5		Object TRX		1.1.0		9.9.9

		t_objecttypes		1		Object Types		3.5.0		9.9.9

		t_ocf		1		OCF Values		1.1.0		9.9.9

		t_operation		5		Operations		1.1.0		9.9.9

		t_operationparams		6		Operation Parameters		1.1.0		9.9.9

		t_operationposts		6		Operation Post Conditions		1.1.0		9.9.9

		t_operationpres		6		Operation Pre Conditions		1.1.0		9.9.9

		t_operationtag		7		Operation Tag		3.0.0		9.9.9

		t_package		1		Packages		1.1.0		9.9.9

		t_palette		5		Palettes		3.1.0		9.9.9

		t_paletteitem		7		Palette Items		3.1.0		9.9.9

		t_phase		7		Phases		3.5.0		9.9.9

		t_problemtypes		1		Problem Types		1.1.0		9.9.9

		t_projectroles		1		Project Roles		1.1.0		9.9.9

		t_propertytypes		1		Property Types		1.1.0		9.9.9

		t_requiretypes		1		Require Types		1.1.0		9.9.9

		t_resources		1		Resources		1.1.0		9.9.9

		t_risktypes		1		Risk Types		1.1.0		9.9.9

		t_roleconstraint				Role Constraints		1.1.0		9.9.9

		t_rtf		7		RTF		3.5.0		9.9.9

		t_rtfreport		1		RTF Reports		1.1.0		9.9.9

		t_rules		7		Rules		3.5.0		9.9.9

		t_scenariotypes		1		Scenario Types		1.1.0		9.9.9

		t_script		7		Scripts		3.5.0		9.9.9

		t_secgroup		3		Security Groups		3.5.0		9.9.9

		t_secgrouppermission		7		Group Permissions		3.5.0		9.9.9

		t_seclocks		7		Security Locks		3.5.0		9.9.9

		t_secpermission		3		Permissions		3.5.0		9.9.9

		t_secpolicies		1		Security Policies		3.5.0		9.9.9

		t_secuser		3		Security User		3.5.0		9.9.9

		t_secusergroup		7		User Group		3.5.0		9.9.9

		t_secuserpermission		7		User Permissions		3.5.0		9.9.9

		t_snapshot		7		Snapshots		3.5.0		9.9.9

		t_statustypes		1		Status Types		1.1.0		9.9.9

		t_stereotypes		1		Stereotypes		1.1.0		9.9.9

		t_taggedvalue		7		Model Tagged Values		3.5.0		9.9.9

		t_tasks		7		To Do List		3.1.0		9.9.9

		t_tcf		1		TCF Values		1.1.0		9.9.9

		t_template		7		Templates		3.5.0		9.9.9

		t_testclass		1		Test Classes		1.1.0		9.9.9

		t_testplans		7		Test Plans		3.5.0		9.9.9

		t_testtypes		1		Test Types		1.1.0		9.9.9

		t_trxtypes		1		TRX Types		1.1.0		9.9.9

		t_umlpattern		7		UML Patterns		3.5.0		9.9.9

		t_version		7		Files		3.5.0		9.9.9

		t_xref		7		XRef		3.1.0		9.9.9

		t_xrefsystem		7		System XRef		3.5.0		9.9.9

		t_xrefuser		7		User XRef		3.5.0		9.9.9

		usys_system		7		System Settings		3.1.0		9.9.9



SELECT t_attribute.Object_ID, t_attribute.Name, t_attribute.Scope, t_attribute.Type
FROM t_object INNER JOIN t_attribute ON t_object.Object_ID = t_attribute.Object_ID
ORDER BY t_attribute.Object_ID, t_attribute.Name;

SELECT t_object.Object_ID AS SourceID, t_object.Name AS SourceName, t_object.Object_Type AS SourceType, t_connector.Connector_Type, Object_1.Object_Type AS DestType, Object_1.Name AS DestName, Object_1.Object_ID AS DestID, t_connector.Connector_ID
FROM t_object INNER JOIN (t_connector INNER JOIN t_object AS Object_1 ON t_connector.End_Object_ID = Object_1.Object_ID) ON t_object.Object_ID = t_connector.Start_Object_ID;

SELECT Object_1.Object_ID AS SourceID, Object_1.Name AS SourceName, Object_1.Object_Type AS SourceType, t_connector.Connector_Type, t_object.Object_Type AS DestType, t_object.Name AS DestName, t_object.Object_ID AS DestID, t_connector.Connector_ID
FROM t_object INNER JOIN (t_connector INNER JOIN t_object AS Object_1 ON t_connector.End_Object_ID = Object_1.Object_ID) ON t_object.Object_ID = t_connector.Start_Object_ID;

SELECT t_connector.Name AS ConName, Object_1.Object_ID AS SourceID, Object_1.Name AS SourceName, Object_1.Object_Type AS SourceType, t_connector.Connector_Type, t_connector.Stereotype, t_object.Object_Type AS DestType, t_object.Name AS DestName, t_object.Object_ID AS DestID, t_connector.Notes
FROM t_object INNER JOIN (t_connector INNER JOIN t_object AS Object_1 ON t_connector.End_Object_ID = Object_1.Object_ID) ON t_object.Object_ID = t_connector.Start_Object_ID;

SELECT t_connector.*, t_diagramobjects.Diagram_ID
FROM (t_diagramobjects INNER JOIN t_connector ON t_diagramobjects.Object_ID = t_connector.Start_Object_ID) INNER JOIN t_diagramobjects AS DiagramObjects_1 ON (t_connector.End_Object_ID = DiagramObjects_1.Object_ID) AND (t_diagramobjects.Diagram_ID = DiagramObjects_1.Diagram_ID)
WHERE (((t_connector.DiagramID)=0 Or (t_connector.DiagramID)=[t_diagramobjects].[Diagram_ID]))
ORDER BY t_connector.SeqNo;

select Name from t_object where Object_Type='Class'
UNION select Datatype as Name from t_primitives;

SELECT t_ecf.ECFID, t_ecf.Description, t_ecf.Weight, t_ecf.Value, t_ecf.Notes, [Weight]*[Value] AS ExValue
FROM t_ecf;

SELECT t_package.Package_ID, t_package.Name AS Package, t_connector.End_Object_ID AS ObjectID, Object_1.Name AS ObjectName, Object_1.Object_Type AS ObjectType, t_connector.Connector_Type AS Connector, t_object.Object_ID AS ImplementedByID, t_object.Name AS ImplementorName, t_object.Object_Type AS ImplementorType, t_objecttypes.DesignObject
FROM (t_objecttypes INNER JOIN t_object ON t_objecttypes.Object_Type = t_object.Object_Type) INNER JOIN ((t_connector INNER JOIN t_object AS Object_1 ON t_connector.End_Object_ID = Object_1.Object_ID) INNER JOIN t_package ON Object_1.Package_ID = t_package.Package_ID) ON t_object.Object_ID = t_connector.Start_Object_ID
WHERE (((t_connector.Connector_Type)="Realisation"))
ORDER BY t_package.Package_ID;

SELECT t_diagram.Diagram_ID, t_method.Object_ID, t_method.Name, t_method.Scope, t_method.Type
FROM (t_diagram INNER JOIN t_object ON t_diagram.Diagram_ID = t_object.Diagram_ID) INNER JOIN t_method ON t_object.Object_ID = t_method.Object_ID
ORDER BY t_method.Object_ID, t_method.Name;

SELECT t_diagramobjects.RectTop, t_diagramobjects.RectLeft, t_diagramobjects.RectRight, t_diagramobjects.RectBottom, t_diagramobjects.Diagram_ID, t_diagramobjects.ObjectStyle, t_object.Object_ID, t_object.Object_Type, t_object.Name, t_object.Alias, t_object.Author, t_object.Version, t_object.Note, t_object.Package_ID, t_object.Stereotype, t_object.NType, t_object.Complexity, t_object.Effort, t_object.Style, t_object.BorderStyle, t_object.Backcolor, t_object.CreatedDate, t_object.ModifiedDate, t_package.Name AS PackageName, t_object.Status, t_diagramobjects.Sequence, t_object.Abstract, t_object.Tagged, t_object.BorderWidth, t_object.Fontcolor, t_object.Bordercolor, t_object.PDATA1, t_object.PDATA2, t_object.PDATA3, t_object.PDATA4, t_object.PDATA5, t_object.GenType, t_object.GenFile, t_object.Header1, t_object.Header2, t_object.Phase, t_object.Scope, t_object.GenOption, t_object.GenLinks, t_object.Classifier, t_object.ea_guid, t_object.RunState, t_object_1.Name AS ClassName, t_object.IsRoot, t_object.IsLeaf, t_object.IsSpec, t_object.IsActive, t_object.StateFlags, t_object.PackageFlags, t_object.Multiplicity
FROM t_package INNER JOIN ((t_object LEFT JOIN t_diagramobjects ON t_object.Object_ID = t_diagramobjects.Object_ID) LEFT JOIN t_object AS t_object_1 ON t_object.Classifier = t_object_1.Object_ID) ON t_package.Package_ID = t_object.Package_ID;

SELECT t_object.Object_ID, t_object.Name, t_object.Object_Type AS Type, t_package.Name AS Package, t_objecttypes.DesignObject
FROM t_package INNER JOIN (t_objecttypes INNER JOIN t_object ON t_objecttypes.Object_Type = t_object.Object_Type) ON t_package.Package_ID = t_object.Package_ID
WHERE (((t_objecttypes.DesignObject)=True));

SELECT t_object.Package_ID, t_objecttests.Object_ID, t_objecttests.Test, t_objecttests.TestClass, t_objecttests.TestType, t_objecttests.Notes, t_objecttests.InputData, t_objecttests.AcceptanceCriteria, t_objecttests.Status, t_objecttests.DateRun, t_objecttests.Results, t_objecttests.RunBy, t_objecttests.CheckBy
FROM t_objecttests INNER JOIN t_object ON t_objecttests.Object_ID = t_object.Object_ID;

SELECT Object_1.Name, t_objecttypes.ImageID, t_object.Object_ID, t_package.Package_ID, Object_1.Stereotype, Object_1.Object_Type
FROM ((t_object INNER JOIN t_package ON (t_object.Name = t_package.Name) AND (t_object.Package_ID = t_package.Parent_ID)) INNER JOIN t_object AS Object_1 ON t_package.Package_ID = Object_1.Package_ID) INNER JOIN t_objecttypes ON Object_1.Object_Type = t_objecttypes.Object_Type
WHERE (((t_objecttypes.ImageID)>0));

SELECT t_package.Name AS Package, t_object.Object_ID, t_object.Object_Type, t_object.Diagram_ID, t_object.Name, t_object.Alias, t_object.Author, t_object.Version, t_object.Note, t_object.Package_ID, t_object.Stereotype, t_object.NType, t_object.Complexity, t_object.Effort, t_object.Style, t_object.Backcolor, t_object.BorderStyle, t_object.BorderWidth, t_object.Fontcolor, t_object.Bordercolor, t_object.CreatedDate, t_object.ModifiedDate, t_object.Status, t_object.Abstract, t_object.Tagged, t_object.PDATA1, t_object.PDATA2, t_object.PDATA3, t_object.PDATA4, t_object.PDATA5, t_object.Concurrency, t_object.Visibility, t_object.Persistence, t_object.Cardinality, t_object.GenType, t_object.GenFile, t_object.Header1, t_object.Header2, t_object.Phase
FROM t_package INNER JOIN t_object ON t_package.Package_ID = t_object.Package_ID;

SELECT t_object.Name, t_object.Object_Type AS Type, t_package.Name AS Package, t_connector.End_Object_ID AS ObjectID, t_object.Object_ID AS RealizedByID, t_connector.Connector_Type, t_objecttypes.DesignObject
FROM t_package INNER JOIN ((t_objecttypes INNER JOIN t_object ON t_objecttypes.Object_Type = t_object.Object_Type) INNER JOIN t_connector ON t_object.Object_ID = t_connector.Start_Object_ID) ON t_package.Package_ID = t_object.Package_ID
WHERE (((t_connector.Connector_Type)="Realisation"));

SELECT t_object.Name, t_object.Object_Type AS Type, t_package.Name AS Package, t_connector.Start_Object_ID AS ObjectID, t_object.Object_ID AS RealizedByID, t_connector.Connector_Type, t_objecttypes.DesignObject
FROM t_package INNER JOIN ((t_objecttypes INNER JOIN t_object ON t_objecttypes.Object_Type = t_object.Object_Type) INNER JOIN t_connector ON t_object.Object_ID = t_connector.End_Object_ID) ON t_package.Package_ID = t_object.Package_ID
WHERE (((t_connector.Connector_Type)="Realisation"));

SELECT t_object.Package_ID, t_objectresource.Object_ID, t_object.Name, t_object.Object_Type, t_objectresource.Resource, t_objectresource.Role, t_objectresource.Time, t_objectresource.Notes, t_objectresource.PercentComplete, t_objectresource.DateStart, t_objectresource.DateEnd
FROM t_objectresource INNER JOIN t_object ON t_objectresource.Object_ID = t_object.Object_ID;

SELECT Sum([Weight]*[Value]) AS ECF
FROM t_ecf;

SELECT Sum([Weight]*[Value]) AS TCF
FROM t_tcf;

SELECT t_tcf.TCFID, t_tcf.Description, t_tcf.Weight, t_tcf.Value, t_tcf.Notes, [Weight]*[Value] AS ExValue
FROM t_tcf;

SELECT t_object.Object_Type, t_object.Name, Val([t_object].[Complexity])*Val([ComplexityWeight]) AS Complexity, t_package.Name, t_package.Package_ID, t_object.Phase
FROM t_package INNER JOIN (t_ocf INNER JOIN t_object ON t_ocf.ObjectType = t_object.Object_Type) ON t_package.Package_ID = t_object.Package_ID
WHERE (((t_object.Object_Type)="UseCase" Or (t_object.Object_Type)="Actor"));

SELECT t_object.*, t_objecttypes.Description, t_objecttypes.DesignObject, t_objecttypes.ImageID
FROM t_object INNER JOIN t_objecttypes ON t_object.Object_Type = t_objecttypes.Object_Type
WHERE (((t_objecttypes.ImageID)>0));

PARAMETERS Object Long;
SELECT *
FROM t_attribute
WHERE (((t_attribute.Object_ID)=[Object]))
ORDER BY t_attribute.Pos, t_attribute.Scope, t_attribute.Name;

PARAMETERS Dgm_ID Long, Con_ID Long;
SELECT *
FROM t_diagramlinks
WHERE (((t_diagramlinks.DiagramID)=[Dgm_ID]) AND ((t_diagramlinks.ConnectorID)=[Con_ID]));

PARAMETERS [Object] Long;
SELECT t_diagramobjects.RectTop, t_diagramobjects.RectLeft, t_diagramobjects.RectRight, t_diagramobjects.RectBottom, t_diagramobjects.Diagram_ID, t_diagramobjects.ObjectStyle, t_object.Object_ID, t_object.Object_Type, t_object.Name, t_object.Alias, t_object.Author, t_object.Version, t_object.Note, t_object.Package_ID, t_object.Stereotype, t_object.NType, t_object.Complexity, t_object.Effort, t_object.Style, t_object.BorderStyle, t_object.Backcolor, t_object.CreatedDate, t_object.ModifiedDate, t_package.Name AS PackageName, t_object.Status, t_diagramobjects.Sequence, t_object.Abstract, t_object.Tagged, t_object.BorderWidth, t_object.Fontcolor, t_object.Bordercolor, t_object.PDATA1, t_object.PDATA2, t_object.PDATA3, t_object.PDATA4, t_object.PDATA5, t_object.GenType, t_object.GenFile, t_object.Header1, t_object.Header2, t_object.Phase, t_object.Scope, t_object.GenOption, t_object.GenLinks, t_object.Classifier, t_object.ea_guid, t_object.RunState, t_object_1.Name AS ClassName, t_object.IsRoot, t_Object.IsLeaf, t_Object.IsSpec, t_Object.IsActive, t_object.StateFlags, t_object.PackageFlags, t_object.Multiplicity
FROM t_package INNER JOIN ((t_object LEFT JOIN t_diagramobjects ON t_object.Object_ID = t_diagramobjects.Object_ID) LEFT JOIN t_object AS t_object_1 ON t_object.Classifier = t_object_1.Object_ID) ON t_package.Package_ID = t_object.Package_ID
WHERE (((t_object.Object_ID)=[Object]));

PARAMETERS Object Long;
SELECT *
FROM t_operation
WHERE (((t_operation.Object_ID)=[Object]))
ORDER BY t_operation.Pos DESC, t_operation.Scope, t_operation.Name DESC;

PARAMETERS ID Long;
Select * from q_connections where SourceID=[ID]
UNION Select * from q_connections2 where SourceID=[ID];

PARAMETERS ID Long;
SELECT t_object.*
FROM t_object
WHERE (((t_object.Object_ID)=[ID]));

SELECT t_package.Name AS [t_package Name], t_diagram.Name AS [t_diagram Name], t_diagram.Diagram_Type, t_object.Object_Type, t_object.Name, t_object.Note, t_object.Complexity
FROM (t_package INNER JOIN t_object ON t_package.Package_ID = t_object.Package_ID) INNER JOIN t_diagram ON (t_package.Package_ID = t_diagram.Package_ID) AND (t_object.Diagram_ID = t_diagram.Diagram_ID);

SELECT t_object.Name, t_object.Note
FROM Object
WHERE (((t_object.Note)<>"") AND ((t_object.Object_Type)="UseCAse"));

SELECT t_package.Name AS [t_package Name], t_diagram.Name AS [t_diagram Name], t_diagram.Diagram_Type, t_object.Object_Type, t_object.Name, t_object.Note, t_object.Complexity, IIf([Tagged]=0,'No','Yes') AS Tag
FROM t_package INNER JOIN (t_object INNER JOIN t_diagram ON t_object.Diagram_ID = t_diagram.Diagram_ID) ON (t_package.Package_ID = t_diagram.Package_ID) AND (t_package.Package_ID = t_object.Package_ID)
WHERE (((t_object.Object_Type)="Usecase"));

SELECT Object_1.Name, Object_1.Object_Type, t_object.Object_Type, t_object.Name, t_object.Note, Object_1.Object_ID, t_object.Object_ID
FROM t_object, t_object AS Object_1, Connector
WHERE (((Object_1.Object_Type)="Actor") AND ((t_object.Object_Type)="Usecase") AND ((Object_1.Object_ID)=[Start_Object_ID]) AND ((t_object.Object_ID)=[End_Object_ID]));

SELECT t_package.Package_ID, t_package.Name AS Package, Object_1.Object_ID AS ObjectID, Object_1.Name AS ObjectName, Object_1.Object_Type AS ObjectType, "" AS Connector, "" AS ImplementedByID, "" AS ImplementorName, "" AS ImplementorType, t_objecttypes.DesignObject
FROM t_package INNER JOIN ((t_implement INNER JOIN (t_objecttypes INNER JOIN t_object AS Object_1 ON t_objecttypes.Object_Type = Object_1.Object_Type) ON t_implement.Type = Object_1.Object_Type) LEFT JOIN q_implements ON Object_1.Object_ID = q_implements.ObjectID) ON t_package.Package_ID = Object_1.Package_ID
WHERE (((q_implements.Package_ID) Is Null) AND ((Object_1.Abstract) Is Null Or (Object_1.Abstract)="0"))
ORDER BY t_package.Package_ID;

SELECT t_package.Name AS Package, t_object.Object_ID, t_object.Object_Type, t_object.Name, t_object.Note, t_object.Stereotype
FROM t_package INNER JOIN (t_object LEFT JOIN t_diagramobjects ON t_object.Object_ID = t_diagramobjects.Object_ID) ON t_package.Package_ID = t_object.Package_ID
WHERE (((t_diagramobjects.Object_ID) Is Null));


