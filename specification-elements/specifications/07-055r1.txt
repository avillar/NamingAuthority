
07-055r1 WCTS Draft Folder/gml/3.1.1/base/basicTypes.xsd
 
   
     basicTypes.xsd
     
    Generic simpleContent components for use in GML 
    Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
    
  
  
   
     
        Some common reasons for a null value:   
			
        innapplicable - the object does not have a value
        missing - The correct value is not readily available to the sender of this data.  
                           Furthermore, a correct value may not exist.
        template - the value will be available later
        unknown - The correct value is not known to, and not computable by, the sender of this data. 
                           However, a correct value probably exists.
        withheld - the value is not divulged 
        
        other:reason - as indicated by "reason" string
        
        Specific communities may agree to assign more strict semantics when these terms are used in a particular context.  
      
    
     
       
         
           
           
           
           
           
        
      
       
         
           
        
      
    
  
  
   
     
       Utility type for null elements.  The value may be selected from one of the enumerated tokens, or may be a URI in which case this should identify a resource which describes the reason for the null. 
    
     
  
  
   
  
   
     
       Utility type used in various places 
      - e.g. to indicate the direction of topological objects;
      "+" for forwards, or "-" for backwards.
    
     
       
       
    
  
  
   
     
       Union of the XML Schema boolean type and the GML Nulltype.  An element which uses this type may have content which is either a boolean {0,1,true,false} or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of boolean values {0,1,true,false} with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
    
     
  
  
   
     
       Union of the XML Schema string type and the GML Nulltype.  An element which uses this type may have content which is either a string or a value from Nulltype.  Note that a "string" may contain whitespace.  
    
     
  
  
   
     
       Union of the XML Schema Name type and the GML Nulltype.  An element which uses this type may have content which is either a Name or a value from Nulltype.  Note that a "Name" may not contain whitespace.  
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of Name values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema Name type.  An element of this type contains a space-separated list of Name values
    
     
  
  
   
     
       Union of the XML Schema double type and the GML Nulltype.  An element which uses this type may have content which is either a double or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of double values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       Union of the XML Schema integer type and the GML Nulltype.  An element which uses this type may have content which is either an integer or a value from Nulltype
    
     
  
  
   
     
       XML List based on the union type defined above.  An element declared with this type contains a space-separated list of integer values with null values interspersed as needed
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.   
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       List of values on a uniform nominal scale.  List of text tokens.   
      In a list context a token should not include any spaces, so xsd:Name is used instead of xsd:string.  
      A member of the list may be a typed null.  
      If a codeSpace attribute is present, then its value is a reference to 
      a Reference System for the value, a dictionary or code list.
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      A member of the list may be a typed null. 
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       Tables or arrays of tuples.  
        May be used for text-encoding of values from a table.  
        Actually just a string, but allows the user to indicate which characters are used as separators.  
        The value of the 'cs' attribute is the separator for coordinate values, 
        and the value of the 'ts' attribute gives the tuple separator (a single space by default); 
        the default values may be changed to reflect local usage.
        Defaults to CSV within a tuple, space between tuples.  
        However, any string content will be schema-valid.  
    
     
       
         
         
         
      
    
  
  
   
     
       A set of values, representing a list of token with the lexical value space of NCName. The tokens are seperated by whitespace.
    
     
  
  
   
     
       A set of values, representing a list of token with the lexical value space of QName. The tokens are seperated by whitespace.
    
     
  
  




07-055r1 WCTS Draft Folder/gml/3.1.1/base/coordinateOperations.xsd
 
	 
		 
		 How to encode coordinate operation definitions. Builds on referenceSystems.xsd to encode the data needed to define coordinate operations, including Transformations, Conversions, and other specific subtypes of operations. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
						 
							 Unordered set of estimates of the impact of this coordinate operation on point position accuracy. Gives position error estimates for target coordinates of this coordinate operation, assuming no errors in source coordinates. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
	
	 
		 
			 Association to a concatenated operation, either referencing or containing the definition of that concatenated operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
	
	 
		 
			 Association to a pass through operation, either referencing or containing the definition of that pass through operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	 
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 Association to a general transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a transformation, either referencing or containing the definition of that transformation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 Value of an angle operation parameter, in either degree-minute-second format or single value format. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 A group of related parameter values. The same group can be repeated more than once in a Conversion, Transformation, or higher level parameterValueGroup, if those instances contain different values of one or more parameterValues which suitably distinquish among those groups. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
							 Unordered set of composition associations to the parameter values and groups of values included in this group. 
						
					
					 
				
			
		
	
	
	 
		 
			 A composition association to a parameter value or group of values included in this group. 
		
	
	
	 
		 
			 Association to the operation parameter group for which this element provides parameter values. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter group objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter group is identified. 
		
	
	
	 
		 
			 The definition of a group of parameters used by an operation method. This complexType is expected to be used or extended for all applicable operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter group. The first groupID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter group, including source information. 
						
					
					 
					 
						 
							 Unordered list of associations to the set of operation parameters that are members of this group. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter group. 
		
	
	
	 
		 
			 The maximum number of times that values for this parameter group can be included. If this attribute is omitted, the maximum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter that is a member of a group. 
		
	
	
	 
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/coordinateReferenceSystems.xsd
 
	 
		 
		 How to encode coordinate reference system definitions. Builds on referenceSystems.xsd to encode the data needed to define coordinate reference systems, including the specific subtypes of coordinate reference systems. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Coordinate Reference System (SC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates, with the exception of the abstract "SC_CRS" class. The "SC_CRS" class is encoded in referenceSystems.xsd, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 Association to a compound coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a geographic coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 3D coordinate reference system with the origin at the approximate centre of mass of the earth. A geocentric CRS deals with the earth's curvature by taking a 3D spatial view, which obviates the need to model the earth's curvature. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the spherical coordinate system used by this CRS.
		
	
	
	 
	
	 
		 
			 Association to a geocentric coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Association to a projected coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a non-projected derived coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A contextually local coordinate reference system; which can be divided into two broad categories:
- earth-fixed systems applied to engineering activities on or near the surface of the earth;
- CRSs on moving platforms such as road vehicles, vessels, aircraft, or spacecraft.
For further information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the engineering datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an engineering coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the oblique Cartesian coordinate system used by this CRS.
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to an image coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for the recording of time. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the temporal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the temporal datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/coordinateSystems.xsd
 
	 
		 
		 How to encode coordinate system definitions. Builds on referenceSystems.xsd to encode the data needed to define coordinate systems, including the specific subtypes of coordinate systems. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Coordinate System (CS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system containing a single time axis, used to describe the temporal position of a point in the specified time units from a specified time origin. A TemporalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a temporal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system that consists of the points that lie on the single axis described. The associated ordinate is the distance from the specified origin to the point along the axis. Example: usage of the line feature representing a road to describe points on or along that road. A LinearCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a linear coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system that consists of any combination of coordinate axes not covered by any other coordinate system type. An example is a multilinear coordinate system which contains one coordinate axis that may have any 1-D shape which has no intersections with itself. This non-straight axis is supplemented by one or two straight axes to complete a 2 or 3 dimensional coordinate system. The non-straight axis is typically incrementally straight or curved. A UserDefinedCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a user-defined coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system with one distance measured from the origin and two angular coordinates. Not to be confused with an ellipsoidal coordinate system based on an ellipsoid "degenerated" into a sphere. A SphericalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a spherical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two-dimensional coordinate system in which position is specified by the distance from the origin and the angle between the line from the origin to a point and a reference direction. A PolarCS shall have two usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a polar coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A three-dimensional coordinate system consisting of a polar coordinate system extended by a straight coordinate axis perpendicular to the plane spanned by the polar coordinate system. A CylindricalCS shall have three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to a cylindrical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system with straight axes that are not necessarily orthogonal. An ObliqueCartesianCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an oblique-Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/coverage.xsd
 
	 
		 coverage.xsd
		 GML Coverage schema. 
        Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	 
	 
	
	
	
	
	 
	
	 
		 
			 Abstract element which acts as the head of a substitution group for coverages. Note that a coverage is a GML feature.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A continuous coverage as defined in ISO 19123 is a coverage that can return different values for the same feature attribute at different direct positions within a single spatiotemporal object in its spatiotemporal domain
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 A discrete coverage consists of a domain set, range set and optionally a coverage function. The domain set consists of either geometry or temporal objects, finite in number. The range set is comprised of a finite number of attribute values each of which is associated to every direct position within any single spatiotemporal object in the domain. In other words, the range values are constant on each spatiotemporal object in the domain. This coverage function maps each element from the coverage domain to an element in its range. This definition conforms to ISO 19123.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 The spatiotemporal domain of a coverage.  
  Typically 
  * a geometry collection, 
  * an implicit geometry (e.g. a grid), 
  * an explicit or implicit collection of time instances or periods, or

N.B. Temporal geometric complexes and temporal grids are not yet implemented in GML.
		
		 
			 
				 
				 
			
		
		 
	
	
	 
	
	 
		 
			 
				 
					 each member _Value holds a tuple or "row" from the equivalent table
				
			
			 
				 
					 each list holds the complete set of one scalar component from the values - i.e. a "column" from the equivalent table
				
			
			 
				 
					 Its tuple list holds the values as space-separated tuples each of which contains comma-separated components, and the tuple structure is specified using the rangeParameters property.
				
			
			 
				 
					 a reference to an external source for the data, together with a description of how that external source is structured
				
			
		
	
	
	 
	
	 
		 
			 The function or rule which defines the map from members of the domainSet to the range.  
      More functions will be added to this list
		
		 
			 
			 
		
	
	
	
	
	 
	
	 
		 
			 
			 
				 
				 
			
		
	
	
	 
	
	 
	
	 
	
	 
		 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 List of codes that identifies the file structure model for records stored in files.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Metadata about the rangeSet.  Definition of record structure.   
      This is required if the rangeSet is encoded in a DataBlock.  
      We use a gml:_Value with empty values as a map of the composite value structure.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Description of a rule for associating members from the domainSet with members of the rangeSet.
		
	
	
	 
	
	 
		 
			 Defines how values in the domain are mapped to the range set. The start point and the sequencing rule are specified here.
		
		 
			 
				 
					 If absent, the implied value is "Linear".
				
			
			 
				 
					 Index position of the first grid post, which must lie somwhere in the GridEnvelope.  If absent, the startPoint is equal to the value of gridEnvelope::low from the grid definition.
				
			
		
	
	
	 
	
	 
		 
			 Exends GridFunctionType with a lookUpTable.  This contains a list of indexes of members within the rangeSet corresponding with the members of the domainSet.  The domainSet is traversed in list order if it is enumerated explicitly, or in the order specified by a SequenceRule if the domain is an implicit set.    The length of the lookUpTable corresponds with the length of the subset of the domainSet for which the coverage is defined.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
				 
			
		
	
	
	 
		 
			 List of codes (adopted from ISO 19123 Annex C) that identifies the rule for traversing a grid to correspond with the sequence of members of the rangeSet.
		
		 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 The enumeration value here indicates the incrementation order  to be used on the first 2 axes, i.e. "+x-y" means that the points on the first axis are to be traversed from lowest to highest and  the points on the second axis are to be traversed from highest to lowest. The points on all other axes (if any) beyond the first 2 are assumed to increment from lowest to highest.
		
		 
			 
			 
			 
			 
		
	
	
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of point
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of curves.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of surface patches (includes polygons, triangles, rectangles, etc).
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A discrete coverage type whose domain is defined by a collection of Solids.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
				 
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/dataQuality.xsd
 
	 
		 
		 How to encode positional data quality information. Builds on units.xsd to encode the data needed to describe the positional accuracy of coordinate operations. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Data Quality (DQ) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/datums.xsd
 
	 
		 
		 How to encode datum definitions. Builds on referenceSystems.xsd to encode the data needed to define datums, including the specific subtypes of datums. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Datum (CD_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. 
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 Association to a datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An engineering datum defines the origin of an engineering coordinate reference system, and is used in a region around that origin. This origin can be fixed with respect to the earth (such as a defined point at a construction site), or be a defined point on a moving vehicle (such as on a ship or satellite). 
		
		 
			 
		
	
	
	 
	
	 
		 
			 Association to an engineering datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Partially defines the origin of a temporal coordinate reference system. This type restricts the AbstractDatumType to remove the "anchorPoint" and "realizationEpoch" elements. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Defines the origin of a temporal coordinate reference system. This type extends the TemporalDatumRestrictionType to add the "origin" element with the dateTime type. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The date and time origin of this temporal datum. 
		
	
	
	 
	
	 
		 
			 Association to a temporal datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is Greenwich, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is Greenwich. 
		
	
	
	 
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. Value is a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/defaultStyle.xsd
 
	 
		 defaultStyle.xsd
		 Default Style schema for GML 3.1.0
		Copyright (c) 2001-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		Compliance: reference to ISO Specifications
	
	
	 
	 
	
	 
		 
			 Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
	
	
	 
		 
			 [complexType of] Top-level property. Used in application schemas to "attach" the styling information to GML data. The link between the data and the style should be established through this property only.
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
	
	
	 
		 
			 [complexType of] The value of the top-level property. It is an abstract element. Used as the head element of the substitution group for extensibility purposes.
		
		 
			 
		
	
	
	 
		 
			 Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
	
	
	 
		 
			 [complexType of] Predefined concrete value of the top-level property. Encapsulates all other styling information.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for features.
		
	
	
	 
		 
			 [complexType of] The style descriptor for features.
		
		 
			 
				 
					 
					 
					 
					 
				
				 
				 
				 
			
		
	
	
	 
		 
			 Used to specify the grammar of the feature query mechanism.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Base complex type for geometry, topology, label and graph styles.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for geometries of a feature.
		
	
	
	 
		 
			 [complexType of] The style descriptor for geometries of a feature.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
	
	
	 
		 
			 [complexType of] The style descriptor for topologies of a feature. Describes individual topology elements styles.
		
		 
			 
				 
					 
						 
						 
							 
								 deprecated
								 Deprecated in GML version 3.1.0. Use symbol with inline content instead.
							
						
					
					 
				
				 
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for labels of a feature, geometry or topology.
		
	
	
	 
		 
			 [complexType of] The style descriptor for labels of a feature, geometry or topology.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 
		
		 
			 
		
		 
		 
	
	
	 
		 
			 The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
	
	
	 
		 
			 [complexType of] The style descriptor for a graph consisting of a number of features. Describes graph-specific style attributes.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 The symbol property. Extends the gml:AssociationType to allow for remote referencing of symbols.
		
	
	
	 
		 
			 [complexType of] The symbol property. Allows for remote referencing of symbols.
		
		 
			 
		
		 
		 
		 
		 
	
	
	 
		 
			 Used to specify the type of the symbol used.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Label is mixed -- composed of text and XPath expressions used to extract the useful information from the feature.
		
		 
			 
		
		 
	
	
	 
		 
			 Defines the geometric transformation of entities. There is no particular grammar defined for this value.
		
	
	
	 
		 
			 Used to vary individual graphic parameters and attributes of the style, symbol or text.
		
		 
			 
				 
				 
			
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
		
	
	
	 
		 
			 Graph-specific styling property.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/dictionary.xsd
 
	 
		 
		 
			Dictionary schema for GML 3.1.1 
			Components to support the lists of definitions.  
    Copyright (c) 2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	
	 
		 
			 This content model group makes it easier to construct types that 
      derive from DefinitionType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard definition properties. 
      See definition of StandardObjectProperties for more documentation
		
		 
			 
			 
			 
		
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
					 
				
				 
			
		
	
	
	 
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
						 
							 
								 An identified reference to a remote entry in this dictionary, to be used when this entry should be identified to allow external references to this specific entry. 
							
						
					
				
			
		
	
	
	 
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains or refers to a definition object.  

The number of definitions contained in this dictionaryEntry is restricted to one, but a DefinitionCollection or Dictionary that contains multiple definitions can be substituted if needed. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
		 
			 
				 A non-identified reference to a remote entry in this dictionary, to be used when this entry need not be identified to allow external references to this specific entry. The remote entry referenced will usually be in a dictionary in the same XML document. This element will usually be used in dictionaries that are inside of another dictionary. 
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions that contains a GML object which references a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 A proxy entry in a dictionary of definitions. An element of this type contains a reference to a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. 
		
		 
			 
				 
					 
						 
							 A reference to a remote entry in this dictionary, used when this dictionary entry is identified to allow external references to this specific entry. The remote entry referenced can be in a dictionary in the same or different XML document. 
						
					
				
			
		
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/direction.xsd
 
	 
		 direction.xsd
		 This schema defines "direction" element and type.
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	 
	
	 
		 
			 
		
		 
			 
			 
			 
			 
		
		 
	
	
	 
	
	 
		 
			 Direction expressed as a vector, either using components, or using angles.
		
		 
			 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/dynamicFeature.xsd
 
	 
		 
		 Basic support for tracking moving objects and objects with changing state.     
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	 
	 
	
	 
	
	 
		 
			 A timeslice encapsulates the time-varying properties of a dynamic feature--it 
        must be extended to represent a timestamped projection of a feature. The dataSource 
        property describes how the temporal data was acquired.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 This type encapsulates various dynamic properties of moving objects        
             (points, lines, regions). It is useful for dealing with features whose        
             geometry or topology changes over time.
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 The history relationship associates a feature with a sequence of TimeSlice instances.
		
		 
			 
		
	
	
	 
	
	 
		 
			 The track of a moving object is a sequence of specialized timeslices        that indicate the status of the object.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 A dynamic feature may possess a history and/or a timestamp.
		
		 
			 
				 
			
		
	
	
	 
		 
			 A dynamic feature collection may possess a history and/or a timestamp.
		
		 
			 
				 
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/feature.xsd
 
	 
		 
		 GML Feature schema. 		      
    Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	
	 
	 
	
	 
	
	 
		 
			 An abstract feature provides a set of common properties, including id, metaDataProperty, name and description inherited from AbstractGMLType, plus boundedBy.    A concrete feature type must derive from this type and specify additional  properties in an application schema. A feature must possess an identifying attribute ('id' - 'fid' has been deprecated).
		
		 
			 
				 
					 
					 
						 
							 deprecated
							 deprecated in GML version 3.1
						
					
					
				
			
		
	
	
	
	 
	
	 
		 
			 Bounding shape.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 Envelope that includes also a temporal extent.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	
	 
	 
	
	 
		 
			 Container for a feature - follow gml:AssociationType pattern.
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Container for features - follow gml:ArrayAssociationType pattern.
		
		 
			 
		
	
	
	
	 
	
	 
		 
			 A feature collection contains zero or more features.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Concrete generic feature collection.
		
		 
			 
		
	
	
	
	 
	 
	
	
	 
	 
	 
	 
	 
	
	
	 
		 
			 Makes boundedBy mandatory
		
		 
			 
				 
					 
					 
					 
						 
							 deprecated
							 deprecated in GML version 3.1
						
					
				
			
		
	
	
	 
		 
			 Deprecated in GML 3.1.0
		
	
	
	 
		 
			 Convenience property for generalised location.  
      A representative location for plotting or analysis.  
      Often augmented by one or more additional geometry properties with more specific semantics.
			 Deprecated in GML 3.1.0
		
		 
			 
				 
				 
				 
				 
			
		
		 
	
	
	 
		 
			 Deprecated in GML 3.1.0
		
	
	
	 
		 
			 G-XML component
			 Deprecated in GML 3.1.0
		
		 
			 
				 
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/geometryAggregates.xsd
 
	 
		 geometryAggregates.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	
	
	
	 
		 
			 The "_GeometricAggregate" element is the abstract head of the substituition group for all geometric aggremates.
		
	
	
	 
		 
			 This is the abstract root type of the geometric aggregates.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A geometry collection must include one or more geometries, referenced through geometryMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a geometric aggregate via the XLink-attributes or contains the "multi geometry" element. multiGeometryProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _GeometricAggregate.
		
	
	
	 
		 
			 A property that has a geometric aggregate as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiPoint is defined by one or more Points, referenced through pointMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a point aggregate via the XLink-attributes or contains the "multi point" element. multiPointProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiPoint.
		
	
	
	 
		 
			 A property that has a collection of points as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiCurve is defined by one or more Curves, referenced through curveMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve aggregate via the XLink-attributes or contains the "multi curve" element. multiCurveProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiCurve.
		
	
	
	 
		 
			 A property that has a collection of curves as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiSurface is defined by one or more Surfaces, referenced through surfaceMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface aggregate via the XLink-attributes or contains the "multi surface" element. multiSurfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiSurface.
		
	
	
	 
		 
			 A property that has a collection of surfaces as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A MultiSolid is defined by one or more Solids, referenced through solidMember elements.
		
		 
			 
				 
					 
						 The members of the geometric aggregate can be specified either using the "standard" property or the array property style. It is also valid to use both the "standard" and the array property style in the same collection.
NOTE: Array properties cannot reference remote geometry elements.
					
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a solid aggregate via the XLink-attributes or contains the "multi solid" element. multiSolidProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for MultiSolid.
		
	
	
	 
		 
			 A property that has a collection of solids as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "MultiSurface" element instead.
		
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "MultiCurve" element instead.
		
	
	
	 
		 
			 A MultiLineString is defined by one or more LineStrings, referenced through lineStringMember elements. Deprecated with GML version 3.0. Use MultiCurveType instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use MultiCurvePropertyType instead.
A property that has a collection of line strings as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
		 
			 A MultiPolygon is defined by one or more Polygons, referenced through polygonMember elements. Deprecated with GML version 3.0. Use MultiSurfaceType instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use MultiSurfacePropertyType instead.

A property that has a collection of polygons as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	 
		 
			 This property element either references a geometry element via the XLink-attributes or contains the geometry element.
		
	
	 
		 
			 This property element contains a list of geometry elements. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a Point via the XLink-attributes or contains the Point element.
		
	
	 
		 
			 This property element contains a list of points. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element contains a list of curves. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for "_Surface".
		
	
	 
		 
			 This property element contains a list of surfaces. The order of the elements is significant and shall be preserved when processing the array.
		
	
	 
		 
			 This property element either references a solid via the XLink-attributes or contains the solid element. A solid element is any element which is substitutable for "_Solid".
		
	
	 
		 
			 This property element contains a list of solids. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
	 
	 
	 
	 
	 
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveMember" instead.
This property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveMember" instead.
This property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	 
		 
			 deprecated
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceMember" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/geometryBasic0d1d.xsd
 
	 
		 geometryBasic0d1d.xsd
		 
			 Schematron validation
			 
				 
					 The presence of a dimension attribute implies the presence of the srsName attribute.
					 The presence of an axisLabels attribute implies the presence of the srsName attribute.
					 The presence of an uomLabels attribute implies the presence of the srsName attribute.
					 The presence of an uomLabels attribute implies the presence of the axisLabels attribute and vice versa.
				
			
			 
				 
					 The presence of a count attribute implies the presence of the dimension attribute.
				
			
		
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
		 
			 This includes not only measures.xsd, but also units.xsd, gmlBase.xsd and basicTypes.xsd.
		
	
	
	
	
	 
		 
			 The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This 
			includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction 
			of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 A geometric property can either be any geometry element encapsulated in an element of this type or an XLink reference 
			to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Note that either 
			the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference 
				remote resources (including those elsewhere in the same document). A simple link element can be constructed by 
				including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation 
				of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create 
				sophisticated links between resources; such links can be used to reference remote properties. A simple link element 
				can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by 
				including the gml:AssociationAttributeGroup.
			
		
	
	
	 
		 
			 A container for an array of geometry elements. The elements are always contained in the array property, 
			referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may 
			have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated 
			with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive 
			from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the 
			substitution group of _Geometry.
		
		 
			 
				 
					 
						 This attribute is included for backward compatibility with GML 2 and is deprecated with GML 3. 
						This identifer is superceded by "gml:id" inherited from AbstractGMLType. The attribute "gid" should not be used 
						anymore and may be deleted in future versions of GML without further notice.
					
				
				 
			
		
	
	
	 
		 
			 Optional reference to the CRS used by this geometry, with optional additional information to simplify use when 
			a more complete definition of the CRS is not needed.
		
		 
			 
				 In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType 
				(see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the 
				location the URI points to. If no srsName attribute is given, the CRS must be specified as part of the larger context this 
				geometry element is part of, e.g. a geometric element like point, curve, etc. It is expected that this attribute will be specified 
				at the direct position level only in rare cases.
			
		
		 
			 
				 The "srsDimension" is the length of coordinate sequence (the number of entries in the list). This dimension is 
				specified by the coordinate reference system. When the srsName attribute is omitted, this attribute shall be omitted.
			
		
		 
	
	
	 
		 
			 Optional additional and redundant information for a CRS to simplify use when a more complete definition of the 
			CRS is not needed. This information shall be the same as included in the more complete definition of the CRS, referenced by the 
			srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes 
			shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
		
		 
			 
				 Ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis 
				labels, after spaces and forbiddden characters are removed. When the srsName attribute is included, this attribute is optional. 
				When the srsName attribute is omitted, this attribute shall also be omitted.
			
		
		 
			 
				 Ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the 
				gml:catalogSymbol should be used for this uom labels, after spaces and forbiddden characters are removed. When the 
				axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute 
				shall also be omitted.
			
		
	
	
	 
		 
			 The "_GeometricPrimitive" element is the abstract head of the substituition group for all (pre- and user-defined) 
			geometric primitives.
		
	
	
	 
		 
			 This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not 
			decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their 
			coordinate tuples.
		
		 
			 
		
	
	
	 
		 
			 A property that has a geometric primitive as its value domain can either be an appropriate geometry element 
			encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry 
			elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither 
			both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a 
				specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide 
				Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between 
				resources; such links can be used to reference remote properties. A simple link element can be used to implement pointer 
				functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	
	
	 
	
	 
		 
			 A Point is defined by a single coordinate tuple.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the direct poisiton of a point. 1. The "pos" element is of type 
							DirectPositionType.
						
						 
						 
							 
								 Deprecated with GML version 3.1.0 for coordinates with ordinate values that are numbers. Use "pos" 
								instead. The "coordinates" element shall only be used for coordinates with ordinates that require a string 
								representation, e.g. DMS representations.
							
						
						 
							 
								 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for 
								backwards compatibility with GML 2.
							
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a point via the XLink-attributes or contains the point element. pointProperty 
			is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that 
			is substitutable for Point.
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
		
	
	
	 
		 
			 A property that has a point as its value domain can either be an appropriate geometry element encapsulated in an 
			element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located 
			elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific 
				set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. 
				XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be 
				used to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has 
				been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of points. The elements are always contained in the array property, referencing geometry 
			elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	
	
	 
		 
			 The "_Curve" element is the abstract head of the substituition group for all (continuous) curve elements.
		
	
	
	 
		 
			 An abstraction of a curve to support the different levels of complexity. The curve can always be viewed as a geometric 
			primitive, i.e. is continuous.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the 
			predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is 
			substitutable for _Curve.
		
	
	
	 
		 
			 A property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an 
			element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere 
			in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote 
				resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific 
				set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. 
				XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used 
				to reference remote properties. A simple link element can be used to implement pointer functionality, and this functionality has been built 
				into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of curves. The elements are always contained in the array property, referencing geometry elements 
			or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate 
			tuples, with linear interpolation between them. It is backwards compatible with the LineString of GML 2, GM_LineString of ISO 19107 is 
			implemented by LineStringSegment.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a line string. 1. A sequence of "pos" 
							(DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part 
							of this curve, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference 
							another point defined outside of this curve (reuse of existing points). 2. The "posList" element allows for a compact way to 
							specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong 
							to this curve only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility 
									with GML 3.0.0.
								
							
							 
								 
									 Deprecated with GML version 3.0. Use "pos" instead. The "coord" element is included for backwards 
									compatibility with GML 2.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
			
		
	
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since 
			DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the 
			"srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a 
			CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 DirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate 
			reference system (CRS).
		
		 
			 
				 
				 
					 
						 "count" allows to specify the number of direct positions in the list. If the attribute count is present then 
						the attribute srsDimension shall be present, too.
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 Vector instances hold the compoents for a (usually spatial) vector within some coordinate reference system (CRS). 
			Since Vectors will often be included in larger objects that have references to CRS, the "srsName" attribute may be missing. 
			In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.

			Note that this content model is the same as DirectPositionType, but is defined separately to reflect the distinct semantics, and to avoid validation problems. SJDC 2004-12-02
		
		 
			 
				 
			
		
	
	
	 
		 
			 A geometric position represented either by a DirectPosition or a Point.
		
		 
			 
			 
		
	
	
	 
		 
			 A list of geometric positions represented either by a DirectPosition or a Point.
		
		 
			 
			 
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0.
		
	
	
	
	
	 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct 
			position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), 
			the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the 
			envelope).
		
		 
			 
				 
				 
			
			 
				 
					 deprecated
					 deprecated with GML version 3.0
				
			
			 
				 
					 deprecated
					 Deprecated with GML version 3.1. Use the explicit properties "lowerCorner" and "upperCorner" instead.
				
			
			 
				 
					 Deprecated with GML version 3.1.0. Use the explicit properties "lowerCorner" and "upperCorner" instead.
				
			
		
		 
	
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the "pos" element instead.
		
	
	 
		 
			 Represents a coordinate tuple in one, two, or three dimensions. Deprecated with GML 3.0 and replaced by 
			DirectPositionType.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "curveProperty" instead. This 
			property element either references a line string via the XLink-attributes or contains the line string element.
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use 
			CurvePropertyType instead. A property that has a line string as its value domain can either be an appropriate geometry element encapsulated 
			in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere 
			in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources 
				(including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. 
				The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to 
				be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties. 
				A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by 
				including the gml:AssociationAttributeGroup.
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	
	
	 
		 
			 The "_Surface" element is the abstract head of the substituition group for all (continuous) surface elements.
		
	
	
	 
		 
			 An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Surface.
		
	
	
	 
		 
			 A property that has a surface as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	
	 
		 
			 The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
		
		 
			 
		
	
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	 
		 
			 A boundary of a surface consists of a number of rings. The "interior" rings seperate the surface / surface patch from the area enclosed by the rings.
		
	
	 
		 
			 Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "exterior" instead.
		
	
	 
		 
			 Deprecated with GML 3.0, included only for backwards compatibility with GML 2. Use "interior" instead.
		
	
	
	 
		 
			 Encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a linear ring.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this ring, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this ring (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this ring only. The number of direct positions in the list must be at least four.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
						 
							 
								 Deprecated with GML version 3.0 and included for backwards compatibility with GML 2. Use "pos" elements instead.
							
						
					
				
			
		
	
	
	 
		 
			 Encapsulates a ring to represent properties in features or geometry collections.
		
		 
			 
		
	
	
	
	
	 
		 
			 Deprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use "surfaceProperty" instead.
This property element either references a polygon via the XLink-attributes or contains the polygon element.
		
	
	
	 
		 
			 This type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use SurfacePropertyType instead.
A property that has a polygon as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/geometryComplexes.xsd
 
	 
		 geometryComplexes.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	 
	
	 
	
	 
		 
			 A CompositeCurve is defined by a sequence of (orientable) curves such that the each curve in the sequence terminates at the start point of the subsequent curve in the list.
		
		 
			 
				 
					 
						 
							 This element references or contains one curve in the composite curve. The curves are contiguous, the collection of curves is ordered.
NOTE: This definition allows for a nested structure, i.e. a CompositeCurve may use, for example, another CompositeCurve as a curve member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A CompositeSurface is defined by a set of orientable surfaces. A composite surface is geometry type with all the geometric properties of a (primitive) surface. Essentially, a composite surface is a collection of surfaces that join in pairs on common boundary curves and which, when considered as a whole, form a single surface.
		
		 
			 
				 
					 
						 
							 This element references or contains one surface in the composite surface. The surfaces are contiguous.
NOTE: This definition allows for a nested structure, i.e. a CompositeSurface may use, for example, another CompositeSurface as a member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A composite solid is a geometry type with all the geometric properties of a (primitive) solid. 
				Essentially, a composite solid is a collection of solids that join in pairs on common boundary surfaces and which, when considered as a whole, form a single solid.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
								
							
							 This element references or contains one solid in the composite solid. The solids are contiguous.
NOTE: This definition allows for a nested structure, i.e. a CompositeSolid may use, for example, another CompositeSolid as a member.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A geometric complex.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A property that has a geometric complex as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
NOTE: The allowed geometry elements contained in such a property (or referenced by it) have to be modelled by an XML Schema choice element since the composites inherit both from geometric complex *and* geometric primitive and are already part of the _GeometricPrimitive substitution group.
		
		 
			 
				 
				 
				 
				 
			
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/geometryPrimitives.xsd
 
	 
		 geometryPrimitives.xsd
		 Copyright (c) 2001-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	 
	
	 
		 
			 Curve is a 1-dimensional primitive. Curves are continuous, connected, and have a measurable length in terms of the coordinate system. 
				A curve is composed of one or more curve segments. Each curve segment within a curve may be defined using a different interpolation method. The curve segments are connected to one another, with the end point of each segment except the last being the start point of the next segment in the segment list.
				The orientation of the curve is positive.
		
		 
			 
				 
					 
						 
							 This element encapsulates the segments of the curve.
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for "_Curve".
		
	
	
	 
	
	 
		 
			 OrientableCurve consists of a curve and an orientation. If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another _Curve with a parameterization that reverses the sense of the curve traversal.
		
		 
			 
				 
					 
						 
							 References or contains the base curve (positive orientation).
NOTE: This definition allows for a nested structure, i.e. an OrientableCurve may use another OrientableCurve as its base curve.
						
					
				
				 
					 
						 If the orientation is "+", then the OrientableCurve is identical to the baseCurve. If the orientation is "-", then the OrientableCurve is related to another _Curve with a parameterization that reverses the sense of the curve traversal. "+" is the default value.
					
				
			
		
	
	
	
	
	
	 
		 
			 The "_CurveSegment" element is the abstract head of the substituition group for all curve segment elements, i.e. continuous segments of the same interpolation mechanism.
		
	
	
	 
		 
			 Curve segment defines a homogeneous segment of a curve.
		
		 
		 
			 
				 The attribute "numDerivativesAtStart" specifies the type of continuity between this curve segment and its predecessor. If this is the first curve segment in the curve, one of these values, as appropriate, is ignored. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
		 
			 
				 The attribute "numDerivativesAtEnd" specifies the type of continuity between this curve segment and its successor. If this is the last curve segment in the curve, one of these values, as appropriate, is ignored. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
		 
			 
				 The attribute "numDerivativesInterior" specifies the type of continuity that is guaranteed interior to the curve. The default value of "0" means simple continuity, which is a mandatory minimum level of continuity. This level is referred to as "C 0 " in mathematical texts. A value of 1 means that the function and its first derivative are continuous at the appropriate end point: "C 1 " continuity. A value of "n" for any integer means the function and its first n derivatives are continuous: "C n " continuity.
NOTE: Use of these values is only appropriate when the basic curve definition is an underdetermined system. For example, line string segments cannot support continuity above C 0 , since there is no spare control parameter to adjust the incoming angle at the end points of the segment. Spline functions on the other hand often have extra degrees of freedom on end segments that allow them to adjust the values of the derivatives to support C 1 or higher continuity.
			
		
	
	
	 
		 
			 This property element contains a list of curve segments. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
		 
			 A container for an array of curve segments.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LineStringSegment is a curve segment that is defined by two or more coordinate tuples, with linear interpolation between them.
				Note: LineStringSegment implements GM_LineString of ISO 19107.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a LineStringSegment the interpolation is fixed as "linear".
					
				
			
		
	
	
	 
	
	 
		 
			 An ArcString is a curve segment that uses three-point circular arc interpolation.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcString the interpolation is fixed as "circularArc3Points".
					
				
				 
					 
						 The number of arcs in the arc string can be explicitly stated in this attribute. The number of control points in the arc string must be 2 * numArc + 1.
					
				
			
		
	
	
	 
	
	 
		 
			 An Arc is an arc string with only one arc unit, i.e. three control points.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
				
				 
					 
						 An arc is an arc string consiting of a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 A Circle is an arc whose ends coincide to form a simple closed loop. The "start" and "end" bearing are equal and shall be the bearing for the first controlPoint listed. The three control points must be distinct non-co-linear points for the Circle to be unambiguously defined. The arc is simply extended past the third control point until the first control point is encountered.
		
		 
			 
		
	
	
	 
	
	 
		 
			 This variant of the arc computes the mid points of the arcs instead of storing the coordinates directly. The control point sequence consists of the start and end points of each arc plus the bulge.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The bulge controls the offset of each arc's midpoint. The "bulge" is the real number multiplier for the normal that determines the offset direction of the midpoint of each arc. The length of the bulge sequence is exactly 1 less than the length of the control point array, since a bulge is needed for each pair of adjacent points in the control point array. The bulge is not given by a distance, since it is simply a multiplier for the normal.
The midpoint of the resulting arc is given by: midPoint = ((startPoint + endPoint)/2.0) + bulge*normal
						
					
					 
						 
							 The attribute "normal" is a vector normal (perpendicular) to the chord of the arc, the line joining the first and last
point of the arc. In a 2D coordinate system, there are only two possible directions for the normal, and it is often given as a signed real, indicating its length, with a positive sign indicating a left turn angle from the chord line, and a negative sign indicating a right turn from the chord. In 3D, the normal determines the plane of the arc, along with the start and endPoint of the arc.
The normal is usually a unit vector, but this is not absolutely necessary. If the normal is a zero vector, the geometric object becomes equivalent to the straight line between the two end points. The length of the normal sequence is exactly the same as for the bulge sequence, 1 less than the control point sequence length.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcStringByBulge the interpolation is fixed as "circularArc2PointWithBulge".
					
				
				 
					 
						 The number of arcs in the arc string can be explicitly stated in this attribute. The number of control points in the arc string must be numArc + 1.
					
				
			
		
	
	
	 
	
	 
		 
			 An ArcByBulge is an arc string with only one arc unit, i.e. two control points and one bulge.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be two.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The bulge controls the offset of each arc's midpoint. The "bulge" is the real number multiplier for the normal that determines the offset direction of the midpoint of each arc. The length of the bulge sequence is exactly 1 less than the length of the control point array, since a bulge is needed for each pair of adjacent points in the control point array. The bulge is not given by a distance, since it is simply a multiplier for the normal.
The midpoint of the resulting arc is given by: midPoint = ((startPoint + endPoint)/2.0) + bulge*normal
						
					
					 
						 
							 The attribute "normal" is a vector normal (perpendicular) to the chord of the arc, the line joining the first and last
point of the arc. In a 2D coordinate system, there are only two possible directions for the normal, and it is often given as a signed real, indicating its length, with a positive sign indicating a left turn angle from the chord line, and a negative sign indicating a right turn from the chord. In 3D, the normal determines the plane of the arc, along with the start and endPoint of the arc.
The normal is usually a unit vector, but this is not absolutely necessary. If the normal is a zero vector, the geometric object becomes equivalent to the straight line between the two end points. The length of the normal sequence is exactly the same as for the bulge sequence, 1 less than the control point sequence length.
						
					
				
				 
					 
						 An arc is an arc string consiting of a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 This variant of the arc requires that the points on the arc have to be computed instead of storing the coordinates directly. The control point is the center point of the arc plus the radius and the bearing at start and end. This represenation can be used only in 2D.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) element. The "pos" element contains a center point that is only part of this curve segment, a "pointProperty" element contains a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element can be used to specifiy the coordinates of the center point, too. The number of direct positions in the list must be one.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The radius of the arc.
						
					
					 
						 
							 The bearing of the arc at the start.
						
					
					 
						 
							 The bearing of the arc at the end.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For an ArcByCenterPoint the interpolation is fixed as "circularArcCenterPointWithRadius".
					
				
				 
					 
						 Since this type describes always a single arc, the attribute is fixed to "1".
					
				
			
		
	
	
	 
	
	 
		 
			 A CircleByCenterPoint is an ArcByCenterPoint with identical start and end angle to form a full circle. Again, this represenation can be used only in 2D.
		
		 
			 
		
	
	
	 
	
	 
		 
			 An offset curve is a curve at a constant
		 distance from the basis curve. They can be useful as a cheap
		 and simple alternative to constructing curves that are offsets	
		 by definition.
		
		 
			 
				 
					 
						 
							 offsetBase is a reference to thecurve from which this
							 curve is define	as an offset.
						
					
					 
						 
							 distance is the distance at which the
							 offset curve is generated from the basis curve. In 2D systems, positive distances
							 are to be to the left of the basis curve, and the negative distances are to be to the 
							 right of the basis curve.
						
					
					 
						 
							 refDistance is used to define the vector
       direction of the offset curve from the basis curve. It can
       be omitted in the 2D case, where the distance can be 
       positive or negative. In that case, distance defines left
       side (positive distance) or right side (negative distance)
       with respect to the tangent to the basis curve.

       In 3D the basis curve shall have a well defined tangent 
       direction for every point. The offset curve at any point 
       in 3D, the basis curve shall have a well-defined tangent
       direction for every point. The offset curve at any point
       (parameter) on the basis curve c is in the direction
       -   -   -         -               
       s = v x t  where  v = c.refDirection()  
       and
       -
       t = c.tangent()
                                                    -
       For the offset direction to be well-defined, v shall not
       on any point of the curve be in the same, or opposite, 
       direction as
       - 
       t.

       The default value of the refDirection shall be the local
       co-ordinate axis vector for elevation, which indicates up for
       the curve in a geographic sense.

       NOTE! If the refDirection is the positive tangent to the
       local elevation axis ("points upward"), then the offset
       vector points to the left of the curve when viewed from
       above.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A placement takes a standard geometric
   construction and places it in geographic space. It defines a
   transformation from a constructive parameter space to the 
   co-ordinate space of the co-ordinate reference system being used.  
   Parameter spaces in formulae in this International Standard are 
   given as (u, v) in 2D and(u, v, w) in 3D. Co-ordinate reference 
   systems positions are given in formulae, in this International 
   Standard, by either (x, y) in 2D, or (x, y, z) in 3D.

   Affine placements are defined by linear transformations from 
   parameter space to the target co-ordiante space. 2-dimensional 
   Cartesian parameter space,(u,v) transforms into 3-dimensional co-
   ordinate reference systems,(x,y,z) by using an affine 
   transformation,(u,v)->(x,y,z) which is defined :

	x	ux vx  	x0
			 u	  
	y =	uy vy   + y0
			 v		
	x	uz vz	z0
	
   Then, given this equation, the location element of the 
   AffinePlacement is the direct position (x0, y0, z0), which is the
   target position of the origin in (u, v). The two reference
   directions (ux, uy, uz) and (vx, vy, vz) are the target     
   directions of the unit vectors at the origin in (u, v).
		
		 
			 
				 
					 The location property gives 
     the target of the parameter space origin. This is the vector  
    (x0, y0, z0) in the formulae above.
				
			
			 
				 
					 The attribute refDirection gives the    
target directions for the co-ordinate basis vectors of the  
parameter space. These are the columns of the matrix in the 
formulae given above. The number of directions given shall be 
inDimension. The dimension of the directions shall be 
outDimension.
				
			
			 
				 
					 Dimension of the constructive parameter 
     space.
				
			
			 
				 
					 Dimension of the co-ordinate space.
				
			
		
	
	
	 
	
	 
		 
			 A clothoid, or Cornu's spiral, is plane
   curve whose curvature is a fixed function of its length.
   In suitably chosen co-ordinates it is given by Fresnel's
   integrals.

    x(t) = 0-integral-t cos(AT*T/2)dT    
    
    y(t) = 0-integral-t sin(AT*T/2)dT
   
   This geometry is mainly used as a transition curve between
   curves of type straight line to circular arc or circular arc
   to circular arc. With this curve type it is possible to 
   achieve a C2-continous transition between the above mentioned
   curve types. One formula for the Clothoid is A*A = R*t where
   A is constant, R is the varying radius of curvature along the
   the curve and t is the length along and given in the Fresnel 
   integrals.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 The "refLocation" is an affine mapping 
          that places  the curve defined by the Fresnel Integrals  
          into the co-ordinate reference system of this object.
									
								
							
						
					
					 
						 
							 The element gives the value for the
       constant in the Fresnel's integrals.
						
					
					 
						 
							 The startParameter is the arc length
       distance from the inflection point that will be the start
       point for this curve segment. This shall be lower limit
       used in the Fresnel integral and is the value of the
       constructive parameter of this curve segment at its start
       point. The startParameter can either be positive or
       negative. 
       NOTE! If 0.0 (zero), lies between the startParameter and
       the endParameter of the clothoid, then the curve goes
       through the clothoid's inflection point, and the direction
       of its radius of curvature, given by the second
       derivative vector, changes sides with respect to the
       tangent vector. The term length distance for the
						
					
					 
						 
							 The endParameter is the arc length
       distance from the inflection point that will be the end
       point for this curve segment. This shall be upper limit
       used in the Fresnel integral and is the value of the
       constructive parameter of this curve segment at its
       start point. The startParameter can either be positive
       or negative.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A GeodesicString consists of sequence of
   geodesic segments. The type essentially combines a sequence of
   Geodesic into a single object.
   The GeodesicString is computed from two or more positions and an
   interpolation using geodesics defined from the geoid (or 
   ellipsoid) of the co-ordinate reference system being used.
		
		 
			 
				 
					 
					 
				
				 
					 
						 The attribute "interpolation" specifies the
     curve interpolation mechanism used for this segment. This
     mechanism uses the control points and control parameters to
     determine the position of this curve segment. For an 
     GeodesicString the interpolation is fixed as "geodesic".
					
				
			
		
	
	
	 
	
	 
		 
			 A Geodesic consists of two distinct
   positions joined by a geodesic curve. The control points of
   a Geodesic shall lie on the geodesic between its start
   point and end points. Between these two points, a geodesic
   curve defined from ellipsoid or geoid model used by the
   co-ordinate reference systems may be used to interpolate
   other positions. Any other point in the controlPoint array
   must fall on this geodesic.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Cubic splines are similar to line strings in that they are a sequence of segments each with its own defining function. A cubic spline uses the control points and a set of derivative parameters to define a piecewise 3rd degree polynomial interpolation. Unlike line-strings, the parameterization by arc length is not necessarily still a polynomial. 
				The function describing the curve must be C2, that is, have a continuous 1st and 2nd derivative at all points, and pass through the controlPoints in the order given. Between the control points, the curve segment is defined by a cubic polynomial. At each control point, the polynomial changes in such a manner that the 1st and 2nd derivative vectors are the same from either side. The control parameters record must contain vectorAtStart, and vectorAtEnd which are the unit tangent vectors at controlPoint[1] and controlPoint[n] where n = controlPoint.count. 
				Note: only the direction of the vectors is relevant, not their length.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only. The number of direct positions in the list must be at least three.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 "vectorAtStart" is the unit tangent vector at the start point of the spline.
						
					
					 
						 
							 "vectorAtEnd" is the unit tangent vector at the end point of the spline.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a CubicSpline the interpolation is fixed as "cubicSpline".
					
				
				 
					 
						 The degree for a cubic spline is "3".
					
				
			
		
	
	
	 
		 
			 A knot is a breakpoint on a piecewise spline curve.
		
		 
			 
				 
					 The property "value" is the value of the parameter at the knot of the spline. The sequence of knots shall be a non-decreasing sequence. That is, each knot's value in the sequence shall be equal to or greater than the previous knot's value. The use of equal consecutive knots is normally handled using the multiplicity.
				
			
			 
				 
					 The property "multiplicity" is the multiplicity of this knot used in the definition of the spline (with the same weight).
				
			
			 
				 
					 The property "weight" is the value of the averaging weight used for this knot of the spline.
				
			
		
	
	
	 
		 
			 Encapsulates a knot to use it in a geometric type.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A B-Spline is a piecewise parametric polynomial or rational curve described in terms of control points and basis functions. Knots are breakpoints on the curve that connect its pieces. They are given as a non-decreasing sequence of real numbers. If the weights in the knots are equal then it is a polynomial spline. The degree is the algebraic degree of the basis functions.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The attribute "degree" shall be the degree of the polynomial used for interpolation in this spline.
						
					
					 
						 
							 The property "knot" shall be the sequence of distinct knots used to define the spline basis functions.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a BSpline the interpolation can be either "polynomialSpline" or "rationalSpline", default is "polynomialSpline".
					
				
				 
					 
						 The attribute isPolynomial is set to true if this is a polynomial spline.
					
				
				 
					 
						 The attribute "knotType" gives the type of knot distribution used in defining this spline. This is for information only
and is set according to the different construction-functions.
					
				
			
		
	
	
	 
	
	 
		 
			 Bezier curves are polynomial splines that use Bezier or Bernstein polynomials for interpolation purposes. It is a special case of the B-Spline curve with two knots.
		
		 
			 
				 
					 
						 
							 GML supports two different ways to specify the control points of a curve segment.
1. A sequence of "pos" (DirectPositionType) or "pointProperty" (PointPropertyType) elements. "pos" elements are control points that are only part of this curve segment, "pointProperty" elements contain a point that may be referenced from other geometry elements or reference another point defined outside of this curve segment (reuse of existing points).
2. The "posList" element allows for a compact way to specifiy the coordinates of the control points, if all control points are in the same coordinate reference systems and belong to this curve segment only.
						
						 
							 
							 
							 
								 
									 Deprecated with GML version 3.1.0. Use "pointProperty" instead. Included for backwards compatibility with GML 3.0.0.
								
							
						
						 
						 
							 
								 Deprecated with GML version 3.1.0. Use "posList" instead.
							
						
					
					 
						 
							 The attribute "degree" shall be the degree of the polynomial used for interpolation in this spline.
						
					
					 
						 
							 The property "knot" shall be the sequence of distinct knots used to define the spline basis functions.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the curve interpolation mechanism used for this segment. This mechanism
uses the control points and control parameters to determine the position of this curve segment. For a Bezier the interpolation is fixed as "polynomialSpline".
					
				
				 
					 
						 The attribute isPolynomial is set to true as this is a polynomial spline.
					
				
				 
					 
						 The property "knotType" is not relevant for Bezier curve segments.
					
				
			
		
	
	
	 
	
	 
		 
			 A Surface is a 2-dimensional primitive and is composed of one or more surface patches. The surface patches are connected to one another.
				The orientation of the surface is positive ("up"). The orientation of a surface chooses an "up" direction through the choice of the upward normal, which, if the surface is not a cycle, is the side of the surface from which the exterior boundary appears counterclockwise. Reversal of the surface orientation reverses the curve orientation of each boundary component, and interchanges the conceptual "up" and "down" direction of the surface. If the surface is the boundary of a solid, the "up" direction is usually outward. For closed surfaces, which have no boundary, the up direction is that of the surface patches, which must be consistent with one another. Its included surface patches describe the interior structure of the Surface.
		
		 
			 
				 
					 
						 
							 This element encapsulates the patches of the surface.
						
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a surface via the XLink-attributes or contains the surface element. A surface element is any element which is substitutable for "_Surface".
		
	
	
	 
	
	 
		 
			 OrientableSurface consists of a surface and an orientation. If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a Surface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface".
		
		 
			 
				 
					 
						 
							 References or contains the base surface (positive orientation).
						
					
				
				 
					 
						 If the orientation is "+", then the OrientableSurface is identical to the baseSurface. If the orientation is "-", then the OrientableSurface is a reference to a Surface with an up-normal that reverses the direction for this OrientableSurface, the sense of "the top of the surface". "+" is the default value.
					
				
			
		
	
	
	
	
	
	 
		 
			 The "_SurfacePatch" element is the abstract head of the substituition group for all surface pach elements describing a continuous portion of a surface.
		
	
	
	 
		 
			 A surface patch defines a homogenuous portion of a surface.
		
		 
	
	
	 
		 
			 This property element contains a list of surface patches. The order of the elements is significant and shall be preserved when processing the array.
		
	
	
	 
		 
			 A container for an array of surface patches.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A PolygonPatch is a surface patch that is defined by a set of boundary curves and an underlying surface to which these curves adhere. The curves are coplanar and the polygon uses planar interpolation in its interior. Implements GM_Polygon of ISO 19107.
		
		 
			 
				 
					 
					 
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
	
	 
		 
			 Represents a triangle as a surface with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring must be four.
		
		 
			 
				 
					 
						 
							 Constraint: The Ring shall be a LinearRing and must form a triangle, the first and the last position must be co-incident.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
	
	 
		 
			 Represents a rectangle as a surface with an outer boundary consisting of a linear ring. Note that this is a polygon (subtype) with no inner boundaries. The number of points in the linear ring must be five.
		
		 
			 
				 
					 
						 
							 Constraint: The Ring shall be a LinearRing and must form a rectangle; the first and the last position must be co-incident.
						
					
				
				 
					 
						 The attribute "interpolation" specifies the interpolation mechanism used for this surface patch. Currently only planar surface patches are defined in GML 3, the attribute is fixed to "planar", i.e. the interpolation method shall return points on a single plane. The boundary of the patch shall be contained within that plane.
					
				
			
		
	
	
	 
		 
			 This property element either references a curve via the XLink-attributes or contains the curve element. A curve element is any element which is substitutable for "_Curve".
		
	
	
	 
	
	 
		 
			 A Ring is used to represent a single connected component of a surface boundary. It consists of a sequence of curves connected in a cycle (an object whose boundary is empty).
A Ring is structurally similar to a composite curve in that the endPoint of each curve in the sequence is the startPoint of the next curve in the Sequence. Since the sequence is circular, there is no exception to this rule. Each ring, like all boundaries, is a cycle and each ring is simple.
NOTE: Even though each Ring is simple, the boundary need not be simple. The easiest case of this is where one of the interior rings of a surface is tangent to its exterior ring.
		
		 
			 
				 
					 
						 
							 This element references or contains one curve in the composite curve. The curves are contiguous, the collection of curves is ordered.
NOTE: This definition allows for a nested structure, i.e. a CompositeCurve may use, for example, another CompositeCurve as a curve member.
						
					
				
			
		
	
	
	 
		 
			 Encapsulates a ring to represent properties in features or geometry collections.
		
		 
			 
		
	
	
	 
		 
			 Reference points which are organised
   into sequences or grids(sequences of equal length sequences).
		
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
	
	 
		 
			 
			
		
		 
			 
		
	
	
	 
	
	 
		 
			 A gridded surface is a parametric curve
   surface derived from a rectangular grid in the parameter
   space. The rows from this grid are control points for
   horizontal surface curves; the columns are control points
   for vertical surface curves. The working assumption is that
   for a pair of parametric co-ordinates (s, t) that the
   horizontal curves for each integer offset are calculated
   and evaluated at "s". The defines a sequence of control
   points:
   
   cn(s) : s  1 .....columns 

   From this sequence a vertical curve is calculated for "s",
   and evaluated at "t". In most cases, the order of
   calculation (horizontal-vertical vs. vertical-horizontal)
   does not make a difference. Where it does, the horizontal-   
   vertical order shall be the one used.

   Logically, any pair of curve interpolation types can lead
   to a subtype of GriddedSurface. The following clauses
   define some most commonly encountered surfaces that can
   be represented in this manner.
		
		 
			 
				 
					 
						 
							 This is the double indexed sequence
       of control points, given in row major form. 
       NOTE! There in no assumption made about the shape
       of the grid. 
       For example, the positions need not effect a "21/2D"
       surface, consecutive points may be equal in any or all
       of the ordinates. Further, the curves in either or both
       directions may close.
						
					
					 
						 
							 The attribute rows gives the number
         of rows in the parameter grid.
						
					
					 
						 
							 The attribute columns gives the number
        of columns in the parameter grid.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A cone is a gridded surface given as a
   family of conic sections whose control points vary linearly.
   NOTE! A 5-point ellipse with all defining positions identical
   is a point. Thus, a truncated elliptical cone can be given as a
   2x5 set of control points
   ((P1, P1, P1, P1, P1), (P2, P3, P4, P5, P6)). P1 is the apex 
   of the cone. P2, P3,P4, P5 and P6 are any five distinct points
   around the base ellipse of the cone. If the horizontal curves
   are circles as opposed to ellipses, the a circular cone can
   be constructed using ((P1, P1, P1),(P2, P3, P4)). The apex most     
   not coinside with the other plane.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A cylinder is a gridded surface given as a
   family of circles whose positions vary along a set of parallel
   lines, keeping the cross sectional horizontal curves of a
   constant shape.
   NOTE! Given the same working assumptions as in the previous
   note, a Cylinder can be given by two circles, giving us the
   control points of the form ((P1, P2, P3),(P4, P5, P6)).
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A sphere is a gridded surface given as a
   family of circles whose positions vary linearly along the
   axis of the sphere, and whise radius varies in proportions to
   the cosine function of the central angle. The horizontal 
   circles resemble lines of constant latitude, and the vertical
   arcs resemble lines of constant longitude. 
   NOTE! If the control points are sorted in terms of increasing
   longitude, and increasing latitude, the upNormal of a sphere
   is the outward normal.
   EXAMPLE If we take a gridded set of latitudes and longitudes
   in degrees,(u,v) such as

	(-90,-180)  (-90,-90)  (-90,0)  (-90,  90) (-90, 180) 
	(-45,-180)  (-45,-90)  (-45,0)  (-45,  90) (-45, 180) 
	(  0,-180)  (  0,-90)  (  0,0)  (  0,  90) (  0, 180)
	( 45,-180)  ( 45,-90)  ( 45,0)  ( 45, -90) ( 45, 180)
	( 90,-180)  ( 90,-90)  ( 90,0)  ( 90, -90) ( 90, 180)
   
   And map these points to 3D using the usual equations (where R
   is the radius of the required sphere).

    z = R sin u
    x = (R cos u)(sin v)
    y = (R cos u)(cos v)

   We have a sphere of Radius R, centred at (0,0), as a gridded
   surface. Notice that the entire first row and the entire last
   row of the control points map to a single point in each 3D
   Euclidean space, North and South poles respectively, and that
   each horizontal curve closes back on itself forming a 
   geometric cycle. This gives us a metrically bounded (of finite
   size), topologically unbounded (not having a boundary, a
   cycle) surface.
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A polyhedral surface is a surface composed
   of polygon surfaces connected along their common boundary 
   curves. This differs from the surface type only in the
   restriction on the types of surface patches acceptable.
		
		 
			 
				 
					 
					 
						 
							 This property encapsulates the patches of 
      the polyhedral surface.
						
					
				
			
		
	
	
	 
		 
			 This property element contains a list of
   polygon patches. The order of the patches is significant and 
   shall be preserved when processing the list.
		
	
	
	 
		 
			 This type defines a container for an array of 
   polygon patches.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 This property element contains a list of
   triangle patches. The order of the patches is significant and 
   shall be preserved when processing the list.
		
	
	
	 
		 
			 This type defines a container for an array of 
     triangle patches.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 A triangulated surface is a polyhedral 
   surface that is composed only of triangles. There is no
   restriction on how the triangulation is derived.
		
		 
			 
				 
					 
					 
						 
							 This property encapsulates the patches of 
      the triangulated surface.
						
					
				
			
		
	
	
	 
	
	 
		 
			 A tin is a triangulated surface that uses
   the Delauny algorithm or a similar algorithm complemented with
   consideration of breaklines, stoplines, and maximum length of 
   triangle sides. These networks satisfy the Delauny's criterion
   away from the modifications: Fore each triangle in the 
   network, the circle passing through its vertices does not
   contain, in its interior, the vertex of any other triangle.
		
		 
			 
				 
					 
						 
							 Stoplines are lines where the local
       continuity or regularity of the surface is questionable.
       In the area of these pathologies, triangles intersecting
       a stopline shall be removed from the tin surface, leaving
       holes in the surface. If coincidence occurs on surface
       boundary triangles, the result shall be a change of the 
       surface boundary. Stoplines contains all these
       pathological segments as a set of line strings.
						
					
					 
						 
							 Breaklines are lines of a critical
       nature to the shape of the surface, representing local
       ridges, or depressions (such as drainage lines) in the
       surface. As such their constituent segments must be
       included in the tin eve if doing so
       violates the Delauny criterion. Break lines contains these
       critical segments as a set of line strings.
						
					
					 
						 
							 Areas of the surface where data is not 
       sufficiently dense to assure reasonable calculation shall be    
       removed by adding a retention criterion for triangles based 
       on the length of their sides. For many triangle sides  
       exceeding maximum length, the adjacent triangles to that 
       triangle side shall be removed from the surface.
						
					
					 
						 
							 The corners of the triangles in the TIN 
  are often referred to as pots. ControlPoint shall contain a 
  set of the GM_Position used as posts for this TIN. Since each  
  TIN contains triangles, there must be at least 3 posts. The 
       order in which these points are given does not affect the 
       surface that is represented. Application schemas may add 
       information based on ordering of control points to facilitate 
       the reconstruction of the TIN from the control points.
						
						 
							 
								 
								 
							
						
					
				
			
		
	
	 
		 
			 
		
	
	
	
	
	
	 
		 
			 The "_Solid" element is the abstract head of the substituition group for all (continuous) solid elements.
		
	
	
	 
		 
			 An abstraction of a solid to support the different levels of complexity. A solid is always contiguous.
		
		 
			 
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 This property element either references a solid via the XLink-attributes or contains the solid element. solidProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Solid.
		
	
	
	 
		 
			 A property that has a solid as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.
		
		 
			 
		
		 
			 
				 This attribute group includes the XLink attributes (see xlinks.xsd). XLink is used in GML to reference remote resources (including those elsewhere in the same document). A simple link element can be constructed by including a specific set of XLink attributes. The XML Linking Language (XLink) is currently a Proposed Recommendation of the World Wide Web Consortium. XLink allows elements to be inserted into XML documents so as to create sophisticated links between resources; such links can be used to reference remote properties.
A simple link element can be used to implement pointer functionality, and this functionality has been built into various GML 3 elements by including the gml:AssociationAttributeGroup.
			
		
	
	
	 
	
	 
		 
			 A container for an array of solids. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A solid is the basis for 3-dimensional geometry. The extent of a solid is defined by the boundary surfaces (shells). A shell is represented by a composite surface, where every  shell is used to represent a single connected component of the boundary of a solid. It consists of a composite surface (a list of orientable surfaces) connected in a topological cycle (an object whose boundary is empty). Unlike a Ring, a Shell's elements have no natural sort order. Like Rings, Shells are simple.
		
		 
			 
				 
					 
						 
							 
								 
									 
										 
									
								
							
							 Boundaries of solids are similar to surface boundaries. In normal 3-dimensional Euclidean space, one (composite) surface is distinguished as the exterior. In the more general case, this is not always possible.
						
					
					 
						 
							 
								 
									 
										 
									
								
							
							 Boundaries of solids are similar to surface boundaries.
						
					
				
			
		
	
	
	
	
	 
		 
			 CurveInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an
application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 SurfaceInterpolationType is a list of codes that may be used to identify the interpolation mechanisms specified by an
application schema.
		
		 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
		
	
	
	 
		 
			 Defines allowed values for the knots` type. Uniform knots implies that all knots are of multiplicity 1 and they differ by a positive constant from the preceding knot. Knots are quasi-uniform iff they are of multiplicity (degree + 1) at the ends, of multiplicity 1 elsewhere, and they differ by a positive constant from the preceding knot.
		
		 
			 
			 
			 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/gml.xsd
 
	 
		 gml.xsd
		 Top level GML schema
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	 
	 
	 
	 
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/gmlBase.xsd
 
	 
		 
			 Schematron validation
			 
			 
			 
				 
					 Property element may not carry both a reference to an object and contain an object.
					 Property element must either carry a reference to an object or contain an object.
				
			
		
		 GML base schema for GML 3
		Components to support the GML encoding model.  
		The abstract Schematron rules can be used by any schema that includes gmlBase.  
		Copyright (c) 2001-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that 
      derive from AbstractGMLType and its descendents "by restriction".  
      A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype 
	to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. 
	Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	 
		 
			 Generic GML element to contain a heterogeneous collection of GML _Objects
		
	
	
	 
		 
			 A non-abstract generic collection type that can be used as a document element for a collection of any GML types - Geometries, Topologies, Features ...

FeatureCollections may only contain Features.  GeometryCollections may only contain Geometrys.  Bags are less constrained  they must contain objects that are substitutable for gml:_Object.  This may mix several levels, including Features, Definitions, Dictionaries, Geometries etc.  

The content model would ideally be 
   member 0..*
   members 0..1
   member 0..*
for maximum flexibility in building a collection from both homogeneous and distinct components: 
included "member" elements each contain a single Object
an included "members" element contains a set of Objects 

However, this is non-deterministic, thus prohibited by XSD.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	 
		 
			 Generic GML element to contain a homogeneous array of GML _Objects
		
	
	
	 
		 
			 A non-abstract generic collection type that can be used as a document element for a homogeneous collection of any GML types - Geometries, Topologies, Features ...
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 Abstract element which acts as the head of a substitution group for packages of MetaData properties.
		
	
	
	 
		 
			 An abstract base type for complex metadata types.
		
		 
	
	
	
	 
		 
			 Concrete element in the _MetaData substitution group, which permits any well-formed XML content.  Intended to act as a container for metadata defined in external schemas, for which it is not possible to add the concrete components to the GML _MetaData substitution group directly. Deprecated with GML version 3.1.0.
		
	
	
	 
		 
			 Deprecated with GML version 3.1.0.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	
	
	 
	
	 
		 
			 
				 
					 
						 
					
				
			
			 must carry a reference to an object or contain an object but not both
		
	
	
	 
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  

Descendents of this type can be restricted in an application schema to 
* allow only specified classes as valid participants in the aggregation
* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    

When used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   

In many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   

If co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a "cached" version of the value(s).
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.
		
		 
		 
	
	
	
	 
	
	 
		 
			 A base for derived types used to specify complex types containing an array of objects, by unspecified UML association - either composition or aggregation.  An instance of this type contains elements representing Objects.

Ideally this type would be derived by extension of AssociationType.  
However, this leads to a non-deterministic content model, since both the base and the extension have minOccurs="0", and is thus prohibited in XML Schema.
		
		 
			 
		
	
	
	
	 
		 
			 Contains or refers to a metadata package that contains metadata properties.
		
	
	
	 
		 
			 Base type for complex metadata property types.
		
		 
			 
			
		
		 
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Reference to an XML Schema fragment that specifies the content model of the propertys value. This is in conformance with the XML Schema Section 4.14 Referencing Schemas from Elsewhere.
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the simple link components from xlinks.xsd, with all members optional, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance.
		
		 
		 
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object, or refers to an external description.
		
	
	
	 
		 
			 This type is available wherever there is a need for a "text" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.
		
		 
			 
				 
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/grids.xsd
 
	 
		 grids.xsd
		 Grid geometries
    A subset of implicit geometries
    Designed for use with GML Coverage schema, but maybe useful elsewhere as well.  
    
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	 
	
	 
	
	 
		 
			 An unrectified grid, which is a network composed of two or more sets of equally spaced parallel lines in which the members of each set intersect the members of the other sets at right angles.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 
		
	
	
	 
		 
			 Provides grid coordinate values for the diametrically opposed corners of an envelope that bounds a section of grid. The value of a single coordinate is the number of offsets from the origin of the grid in the direction of a specific axis.
		
		 
			 
			 
		
	
	
	 
		 
			 Should be substitutionGroup="gml:Grid" but changed in order to accomplish Xerces-J schema validation
		
	
	
	 
		 
			 A rectified grid has an origin and vectors that define its post locations.
		
		 
			 
				 
					 
					 
				
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/measures.xsd
 
	 
		 
		 Extends the units.xsd and basicTypes.xsd schemas with types for recording measures using specific types of units, especially the measures and units needed for coordinate reference systems and coordinate operations. The specific unit types encoded are length, angle, scale factor, time, area, volume, speed, and grid length. This schema allows angle values to be recorded as single numbers or in degree-minute-second format. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on Subclause 4.7 of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations.
	
	
	 
	
	
	
	 
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million.
		
		 
			 
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks.
		
		 
			 
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial area quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an area, such as square metres or square miles.
		
		 
			 
		
	
	
	 
		 
			 Value of a spatial volume quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a volume, such as cubic metres or cubic feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a speed, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour.
		
		 
			 
		
	
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Angle value provided in degree-minute-second or degree-minute format.
		
		 
			 
			 
				 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Integer number of degrees, plus the angle direction. This element can be used for geographic Latitude and Longitude. For Latitude, the XML attribute direction can take the values "N" or "S", meaning North or South of the equator. For Longitude, direction can take the values "E" or "W", meaning East or West of the prime meridian. This element can also be used for other angles. In that case, the direction can take the values "+" or "-" (of SignType), in the specified rotational direction from a specified reference direction.
		
		 
			 
				 
					 
						 
							 
								 
									 
									 
									 
									 
								
							
							 
								 
							
						
					
				
			
		
	
	
	 
		 
			 Integer number of degrees in a degree-minute-second or degree-minute angular value, without indication of direction.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Decimal number of arc-minutes in a degree-minute angular value.
		
		 
			 
			 
		
	
	
	 
	
	 
		 
			 Integer number of arc-minutes in a degree-minute-second angular value.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Number of arc-seconds in a degree-minute-second angular value.
		
		 
			 
			 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/observation.xsd
 
	 
		 observation.xsd
		 Observation schema for GML 3.1     
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	 
	 
	 
	
	
	 
		 
			 This element contains or points to a description of a sensor, instrument or procedure used for the observation
		
	
	
	 
		 
			 This element contains or points to the specimen, region or station which is the object of the observation
		
	
	
	 
		 
			 Synonym for target - common word used for photographs
		
	
	
	 
		 
			 Container for an object representing the target or subject of an observation.
		
		 
			 
				 
				 
			
		
		 
	
	
	 
		 
			 The result of the observation: an image, external object, etc
		
	
	
	
	 
	
	 
		 
			 
				 
					 
					 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 
				 
					 
				
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/ReadMe.txt
This set of XML Schema Documents for GML Version 3.1.1 has been edited
to reflect the corrigendum to documents 0GC 03-105r1 and OGC 04-092r4 
that is based on the change requests: 
OGC 05-068r1 "Store xlinks.xsd file at a fixed location"
OGC 05-081r2 "Change to use relative paths"
OGC 05-105 "Remove description and copyright tags from XML schema documents"

Arliss Whiteside, 2005-11-22





07-055r1 WCTS Draft Folder/gml/3.1.1/base/referenceSystems.xsd
 
	 
		 
		 How to encode reference system definitions. Builds on several other parts of GML 3 to encode the data needed to define reference systems. 
		Copyright (c) 2002-2005 OGC, All Rights Reserved. For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		This schema encodes the Reference System (RS_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That UML model is adapted from ISO 19111 - Spatial referencing by coordinates, as described in Annex C of Topic 2. The SC_CRS class is also encoded here, to eliminate the (circular) references from coordinateOperations.xsd to coordinateReferenceSystems.xsd. The RS_SpatialReferenceSystemUsingGeographicIdentifier class is not encoded, since it is not applicable to coordinate positions. The CI_Citation class is not directly encoded, since such information can be included as metaDataProperty elements which are optionally allowed. A modified version of the EX_Extent (DataType) class from ISO 19115 is currently encoded here, using GML 3 schema types. (A more extensive version of the EX_Extent package might be XML encoded in the future, probably in a separate extent.xsd schema.)
		Caution: The CRS package in GML 3.1 and GML 3.1.1 is preliminary, and is expected to undergo some modifications that are not backward compatible during the development of GML 3.2 (ISO 19136). The GML 3.2 package will implement the model described in the revised version of ISO 19111.
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. Contains text or refers to external text.
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
			 
				 
					 Unordered list of time periods whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	
	 
		 
			 A time period defining the temporal domain of this object.
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/temporal.xsd
 
	 
		 
		 The temporal schema for GML 3.1 provides constructs for handling time-varying spatial data. 
    This schema reflects a partial implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal primitives and complexes.
		
	
	
	 
		 
			 The abstract supertype for temporal objects.
		
		 
			 
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal primitives.
		
	
	
	 
		 
			 The abstract supertype for temporal primitives.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
		 
			 
				 
					 
						 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
							 
						
					
				
			
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal complexes. 
			Temporal complex is an aggregation of temporal primitives as its components, 
			represents a temporal geometric complex and a temporal topology complex. 
			N.B. Temporal geometric complex is not defined in this schema.
		
	
	
	 
		 
			 The abstract supertype for temporal complexes.
		
		 
			 
		
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal geometric primitives.
		
	
	
	 
		 
			 The abstract supertype for temporal geometric primitives.
       A temporal geometry must be associated with a temporal reference system via URI. 
       The Gregorian calendar with UTC is the default reference system, following ISO 
       8601. Other reference systems in common use include the GPS calendar and the 
       Julian calendar.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 Omit back-pointers begunBy, endedBy.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 
				 
					 
						 
						 
					
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
		 
			 This model group is provided as an alternative to the abstract susbstitutionGroup head _timeLength.
		ISO 19136 comment 411
		
		 
			 
			 
		
	
	
	 
		 
			 This element is an instance of the primitive xsd:duration simple type to 
      enable use of the ISO 8601 syntax for temporal length (e.g. P5DT4H30M). 
      It is a valid subtype of TimeDurationType according to section 3.14.6, 
      rule 2.2.4 in XML Schema, Part 1.
		
	
	
	 
		 
			 This element is a valid subtype of TimeDurationType 
			according to section 3.14.6, rule 2.2.4 in XML Schema, Part 1.
		
	
	
	 
		 
			 This type extends the built-in xsd:decimal simple type to allow floating-point 
      values for temporal length. According to  the ISO 11404 model you have to use 
      positiveInteger together with appropriate values for radix and factor. The 
      resolution of the time interval is to one radix ^(-factor) of the specified 
      time unit (e.g. unit="second", radix="10", factor="3" specifies a resolution 
      of milliseconds). It is a subtype of TimeDurationType.
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 Standard units for measuring time intervals (see ISO 31-1).
		
		 
			 
				 
					 
					 
					 
					 
					 
				
			
			 
				 
					 
				
			
		
	
	
	
	
	 
		 
			 Direct representation of a temporal position
		
	
	
	 
		 
			 Direct representation of a temporal position. 
      Indeterminate time values are also allowed, as described in ISO 19108. The indeterminatePosition 
      attribute can be used alone or it can qualify a specific value for temporal position (e.g. before 
      2002-12, after 1019624400). 
      For time values that identify position within a calendar, the calendarEraName attribute provides 
      the name of the calendar era to which the date is referenced (e.g. the Meiji era of the Japanese calendar).
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 The ISO 19108:2002 hierarchy of subtypes for temporal position are collapsed 
      by defining a union of XML Schema simple types for indicating temporal position relative 
      to a specific reference system. 
      
      Dates and dateTime may be indicated with varying degrees of precision.  
      dateTime by itself does not allow right-truncation, except for fractions of seconds. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      
      An ordinal position may be referenced via URI identifying the definition of an ordinal era.  
      
      A time coordinate value is indicated as a decimal (e.g. UNIX time, GPS calendar).
		
		 
	
	
	 
		 
			 Calendar dates may be indicated with varying degrees of precision, 
      using year, year-month, date. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      time is used for a position that recurs daily (see clause 5.4.4.2 of ISO 19108:2002).
		
		 
	
	
	 
		 
			 This enumerated data type specifies values for indeterminate positions.
		
		 
			 
			 
			 
			 
		
	
	
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/temporalReferenceSystems.xsd
 
	 
		 
		 The Temporal Reference Systems schema for GML 3.1 provides constructs for handling various styles of temporal reference system. 
    This schema reflects a partial implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	 
	
	
	
	 
		 
			 Abstract element serves primarily as the head of a substitution group for temporal reference systems.
		
	
	
	 
		 
			 A value in the time domain is measured relative to a temporal reference system. Common 
        types of reference systems include calendars, ordinal temporal reference systems, and 
        temporal coordinate systems (time elapsed since some epoch, e.g. UNIX time).
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 A temporal coordinate system is based on a continuous interval scale defined in terms of a single time interval.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 In an ordinal reference system the order of events in time can be well 
      established, but the magnitude of the intervals between them can not be 
      accurately determined (e.g. a stratigraphic sequence).
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Ordinal temporal reference systems are often hierarchically structured 
      such that an ordinal era at a given level of the hierarchy includes a 
      sequence of shorter, coterminous ordinal eras. This captured using the member/group properties.  
      
      Note that in this schema, TIme Ordinal Era is patterned on TimeEdge, which is a variation from ISO 19108.  
      This is in order to fulfill the requirements of ordinal reference systems based on eras delimited by 
      named points or nodes, which are common in geology, archeology, etc.  
      
      This change is subject of a change proposal to ISO
		
		 
			 
				 
					 
					 
					 
					 
					 
						 
							 An Era may be composed of several member Eras. The "member" element implements the association to the Era at the next level down the hierarchy.  "member" follows the standard GML property pattern whereby its (complex) value may be either described fully inline, or may be the target of a link carried on the member element and described fully elsewhere, either in the same document or from another service.
						
					
					 
						 
							 In a particular Time System, an Era may be a member of a group.  The "group" element implements the back-pointer to the Era at the next level up in the hierarchy. 

If the hierarchy is represented by describing the nested components fully in the their nested position inside "member" elements, then the parent can be easily inferred, so the group property is unnecessary.  

However, if the hierarchy is represented by links carried on the "member" property elements, pointing to Eras described fully elsewhere, then it may be useful for a child (member) era to carry an explicit pointer back to its parent (group) Era.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A calendar is a discrete temporal reference system 
      that provides a basis for defining temporal position to a resolution of one day. 
      A single calendar may reference more than one calendar era.
		
		 
			 
				 
					 
						 
							 Link to the CalendarEras that it uses as a reference for dating.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	 
	
	 
		 
			 In every calendar, years are numbered relative to the date of a 
      reference event that defines a calendar era. 
      In this implementation, we omit the back-pointer "datingSystem".
		
		 
			 
				 
					 
						 
							 Name or description of a mythical or historic event which fixes the position of the base scale of the calendar era.
						
					
					 
						 
							 Date of the referenceEvent expressed as a date in the given calendar. 
              In most calendars, this date is the origin (i.e., the first day) of the scale, but this is not always true.
						
					
					 
						 
							 Julian date that corresponds to the reference date.  
              The Julian day numbering system is a temporal coordinate system that has an 
              origin earlier than any known calendar, 
              at noon on 1 January 4713 BC in the Julian proleptic calendar.  
              The Julian day number is an integer value; 
              the Julian date is a decimal value that allows greater resolution. 
              Transforming calendar dates to and from Julian dates provides a 
              relatively simple basis for transforming dates from one calendar to another.
						
					
					 
						 
							 Period for which the calendar era was used as a basis for dating.
						
					
				
			
		
	
	
	 
		 
			 
		
		 
	
	
	
	
	 
	
	 
		 
			 A clock provides a basis for defining temporal position within a day. 
      A clock must be used with a calendar in order to provide a complete description of a temporal position 
      within a specific day.
		
		 
			 
				 
					 
						 
							 Name or description of an event, such as solar noon or sunrise, 
              which fixes the position of the base scale of the clock.
						
					
					 
						 
							 time of day associated with the reference event expressed as 
              a time of day in the given clock. The reference time is usually the origin of the clock scale.
						
					
					 
						 
							 24 hour local or UTC time that corresponds to the reference time.
						
					
					 
				
			
		
	
	
	 
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/temporalTopology.xsd
 
	 
		 
		 The temporal topology schema for ISO19136 provides constructs for handling topological complexes and 
		temporal feature relationships. 
		Temporal geometric characteristics of features are represented as instants and periods. 
		While, temporal context of features that does not relate to the position of time is described as connectivity relationships 
		among instants and periods. These relationships are called temporal topology as they do not change in time, 
		as long as the direction of time does not change. 
		It is used effectively in the case of describing a family tree expressing evolution of species, an ecological cycle, 
		a lineage of lands or buildings, or a history of separation and merger of administrative boundaries.
		This schema reflects a partial yet consistent implementation of the model described in ISO 19108:2002. 
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	 
	
	
	
	
	 
		 
			 This element represents temporal topology complex. It shall be the connected acyclic directed graph composed of time nodes and time edges.
		
	
	
	 
		 
			 A temporal topology complex.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A time topology complex property can either be any time topology complex element
			 encapsulated in an element of this type or an XLink reference to a remote time topology complex element 
			 (where remote includes elements located elsewhere in the same document). 
			 Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 This abstract element acts as the head of the substitution group for temporal topology primitives.
		
	
	
	 
		 
			 The element "complex" carries a reference to the complex containing this primitive.
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A time topology primitive property can either hold any time topology complex element
			 eor carry an XLink reference to a remote time topology complex element 
			 (where remote includes elements located elsewhere in the same document). 
			 Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 "TimeNode" is a zero dimensional temporal topology primitive, 
			expresses a position in topological time, and is a start and an end of time edge, which represents states of time.
			Time node may be isolated. However, it cannot describe the ordering relationships with other primitives. 
			An isolated node may not be an element of any temporal topology complex.
		
	
	
	 
		 
			 Type declaration of the element "TimeNode".
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 A time node property can either be any time node element encapsulated in an element of this type 
			or an XLink reference to a remote time node element (where remote includes elements located elsewhere in the same document). 
			Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 TimeEdge is one dimensional temporal topology primitive,
			 expresses a state in topological time. It has an orientation from its start toward the end, 
			 and its boundaries shall associate with two different time nodes.
		
	
	
	 
		 
			 Type declaration of the element "TimeEdge".
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 A time edge property can either be any time edge element encapsulated in an element of this type 
			or an XLink reference to a remote time edge element (where remote includes elements located elsewhere in the same document). 
			Note that either the reference or the contained element must be given, but not both or none.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 Feature succession is a semantic relationship derived from evaluation of observer, and 
			Feature Substitution, Feature Division and Feature Fusion are defined as associations between 
			previous features and next features in the temporal context. 
			Successions shall be represented in either following two ways. 
			* define a temporal topological complex element as a feature element 
			* define an association same as temporal topological complex between features.
		
		 
			 
			 
			 
			 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/topology.xsd
 
	 
		 topology.xsd
		 
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
		
	
	 
	
	
	 
	
	 
		 
			 
		
	
	
	 
		 
			 Substitution group branch for Topo Primitives, used by TopoPrimitiveArrayAssociationType
		
	
	
	 
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
			 
		
		 
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
				 
			
		
		 
	
	
	
	
	 
	
	 
		 
			 Its optional co-boundary is a set of connected directedEdges.  The orientation of one of these dirEdges is "+" if the Node is the "to" node of the Edge, and "-" if it is the "from" node.
		
		 
			 
				 
					 
					 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 There is precisely one positively directed and one negatively directed node in the boundary of every edge. The negatively and positively directed nodes correspond to the start and end nodes respectively. The optional coboundary of an edge is a circular sequence of directed faces which are incident on this edge in document order. Faces which use a particular boundary edge in its positive orientation appear with positive orientation on the coboundary of the same edge. In the 2D case, the orientation of the face on the left of the edge is "+"; the orientation of the face on the right on its right is "-". An edge may optionally be realised by a 1-dimensional (curve) geometric primitive.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 . The topological boundary of a face consists of a set of directed edges. Note that all edges associated with a Face, including dangling and interior edges, appear in the boundary.  Dangling and interior edges are each referenced by pairs of directedEdges with opposing orientations.  The optional coboundary of a face is a pair of directed solids which are bounded by this face. If present, there is precisely one positively directed and one negatively directed solid in the coboundary of every face. The positively directed solid corresponds to the solid which lies in the direction of the positively directed normal to the face in any geometric realisation.  A face may optionally be realised by a 2-dimensional (surface) geometric primitive.
		
		 
			 
				 
					 
					 
					 
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	
	
	 
	
	 
		 
			 The topological boundary of a TopoSolid consists of a set of directed faces. Note that all faces associated with the TopoSolid, including dangling faces, appear in the boundary. The coboundary of a TopoSolid is empty and hence requires no representation.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
		
		 
		 
	
	
	 
	
	 
		 
			 The intended use of TopoPoint is to appear within a point feature to express the structural and possibly geometric relationships of this point to other features via shared node definitions. Note the orientation assigned to the directedNode has no meaning in this context. It is preserved for symmetry with the types and elements which follow.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 The end Node of each directedEdge of a TopoCurveType
is the start Node of the next directedEdge of the TopoCurveType in document order.  The TopoCurve type and element represent a homogeneous topological expression, a list of directed edges, which if realised are isomorphic to a geometric curve primitive. The intended use of TopoCurve is to appear within a line feature instance to express the structural and geometric relationships of this line to other features via the shared edge definitions.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 The TopoSurface type and element represent a homogeneous topological expression, a set of directed faces, which if realised are isomorphic to a geometric surface primitive. The intended use of TopoSurface is to appear within a surface feature instance to express the structural and possibly geometric relationships of this surface to other features via the shared face definitions.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	 
	
	 
		 
			 The TopoVolume type and element represent a homogeneous topological expression, a set of directed TopoSolids, which if realised are isomorphic to a geometric solid primitive. The intended use of TopoVolume is to appear within a 3D solid feature instance to express the structural and geometric relationships of this solid to other features via the shared TopoSolid definitions.  . Note the orientation assigned to the directedSolid has no meaning in three dimensions. It is preserved for symmetry with the preceding types and elements.
		
		 
			 
				 
					 
				
			
		
	
	
	
	 
	
	 
		 
			 
		
	
	
	
	 
	
	 
		 
			 This type represents a TP_Complex capable of holding topological primitives.
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 
				 
					 
						 
					
				
			
			 Need schamatron test here that isMaximal attribute value is true
		
	
	
	 
		 
			 This Property can be used to embed a TopoComplex in a feature collection.
		
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 This type supports embedding topological primitives in a TopoComplex.
		
		 
			 
		
		 
	
	
	
	 
		 
			 
				 
					 
						 
					
				
			
		
	
	
	 
		 
			 This type supports embedding an array of topological primitives in a TopoComplex
		
		
		 
			 
				 
			
		
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/units.xsd
 
	 
		 
		 Builds on gmlBase.xsd to encode units of measure (or uom), including definitions of units of measure and dictionaries of such definitions. GML 3.0 candidate schema, primary editor: Arliss Whiteside. Last updated 2005-06-22.
	Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	Parts of this schema are based on Subclause 6.5.7 of ISO/CD 19103 Geographic information - Conceptual schema language, on Subclause A.5.2.2.3 of ISO/CD 19118 Geographic information - Encoding, and on most of OpenGIS Recommendation Paper OGC 02-007r4 Units of Measure Use and Definition Recommendations.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure (or uom). The definition includes a quantityType property, which indicates the phenomenon to which the units apply, and a catalogSymbol, which gives the short symbol used for this unit. This element is used when the relationship of this unit to other units or units systems is unknown.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is a base unit from the system of units.  A base unit cannot be derived by combination of other base units within this system.  Sometimes known as "fundamental unit".
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is defined through algebraic combination of more primitive units, which are usually base units from a particular system of units. Derived units based directly on base units are usually preferred for quantities other than the base units or fundamental quantities within a system.  If a derived unit is not the preferred unit, the ConventionalUnit element should be used instead.
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Definition of a unit of measure which is related to a preferred unit for this quantity type through a conversion formula.  A method for deriving this unit by algebraic combination of more primitive units, may also be provided.
		
		 
			 
				 
					 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Informal description of the phenomenon or type of quantity that is measured or observed. For example, "length", "angle", "time", "pressure", or "temperature". When the quantity is the result of an observation or measurement, this term is known as Observable Type or Measurand.
		
	
	
	 
		 
			 For global understanding of a unit of measure, it is often possible to reference an item in a catalog of units, using a symbol in that catalog. The "codeSpace" attribute in "CodeType" identifies a namespace for the catalog symbol value, and might reference the catalog. The "string" value in "CodeType" contains the value of a symbol that is unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units. For example, the symbol "cm" might indicate that it is the "m" symbol combined with the "c" prefix.
		
	
	
	 
	
	 
		 
			 Definition of one unit term for a derived unit of measure. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent can be positive or negative, but not zero.
		
		 
			 
				 
			
		
	
	
	 
		 
			 This element is included when this unit has an accurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 This element is included when the correct definition of this unit is unknown, but this unit has a rough or inaccurate conversion to the preferred unit for this quantity type.
		
	
	
	 
		 
			 Relation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute "uom" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: "factor" or "formula".
		
		 
			 
				 
					 
						 
							 Specification of the scale factor by which a value using this unit of measure can be multiplied to obtain the corresponding value using the preferred unit of measure.
						
					
					 
						 
							 Specification of the formula by which a value using this unit of measure can be converted to obtain the corresponding value using the preferred unit of measure.
						
					
				
			
		
	
	
	 
		 
			 Paremeters of a simple formula by which a value using this unit of measure can be converted to the corresponding value using the preferred unit of measure. The formula element contains elements a, b, c and d, whose values use the XML Schema type "double". These values are used in the formula y = (a + bx) / (c + dx), where x is a value using this unit, and y is the corresponding value using the preferred unit. The elements a and d are optional, and if values are not provided, those parameters are considered to be zero. If values are not provided for both a and d, the formula is equivalent to a fraction with numerator and denominator parameters.
		
		 
			 
			 
			 
			 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/base/valueObjects.xsd
 
	 
		 valueObjects.xsd
		 GML conformant schema for Values in which the  
		    * scalar Value types and lists have their values recorded in simpleContent elements 
		    * complex Value types are built recursively
    Copyright (c) 2002-2005 OGC, All Rights Reserved.
	For conditions, see OGC Software Notice http://www.opengeospatial.org/about/?page=ipr
	
	
	
	 
	 
	
	 
		 
			 Utility choice group which unifies generic Values defined in this schema document with 
			Geometry and Temporal objects and the Measures described above, 
			so that any of these may be used within aggregate Values.
		
		 
			
			 
			 
			
			 
		
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 
			 
			 
			 
		
	
	
	
	 
		 
			 A value from two-valued logic, using the XML Schema boolean type.  An instance may take the values {true, false, 1, 0}.
		
	
	
	 
		 
			 XML List based on XML Schema boolean type.  An element of this type contains a space-separated list of boolean values {0,1,true,false}
		
	
	
	
	 
		 
			 A term representing a classification.  It has an optional XML attribute codeSpace, whose value is a URI which identifies a dictionary, codelist or authority for the term.
		
	
	
	 
		 
			 A space-separated list of terms or nulls.  A single XML attribute codeSpace may be provided, which authorises all the terms in the list.
		
	
	
	
	 
		 
			 A numeric value with a scale.  The content of the element is an amount using the XML Schema type double which permits decimal or scientific notation.  An XML attribute uom (unit of measure) is required, whose value is a URI which identifies the definition of the scale or units by which the numeric value must be multiplied.
		
	
	
	 
		 
			 A space separated list of amounts or nulls.  The amounts use the XML Schema type double.  A single XML attribute uom (unit of measure) is required, whose value is a URI which identifies the definition of the scale or units by which all the amounts in the list must be multiplied.
		
	
	
	
	 
		 
			 An integer representing a frequency of occurrence.
		
	
	
	 
		 
			 A space-separated list of integers or nulls.
		
	
	
	
	
	
	 
		 
			 Aggregate value built from other Values using the Composite pattern. It contains zero or an arbitrary number of valueComponent elements, and zero or one valueComponents elements.  It may be used for strongly coupled aggregates (vectors, tensors) or for arbitrary collections of values.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Aggregate value built using the Composite pattern.
		
	
	
	
	 
		 
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.  The member values may be scalars, composites, arrays or lists.  ValueArray has the same content model as CompositeValue, but the member values must be homogeneous.  The element declaration contains a Schematron constraint which expresses this restriction precisely.            Since the members are homogeneous, the referenceSystem (uom, codeSpace) may be specified on the ValueArray itself and implicitly inherited by all the members if desired.    Note that a_ScalarValueList is preferred for arrays of Scalar Values since this is a more efficient encoding.
		
		 
			 
				 
			
		
	
	
	 
		 
			 
				 
					 
						 ValueArray may not carry both a reference to a codeSpace and a uom
					
				
				 
					 
						 All components of   must be of the same type
						 All components of   must be of the same type
					
				
			
			 A Value Array is used for homogeneous arrays of primitive and aggregate values.   _ScalarValueList is preferred for arrays of Scalar Values since this is more efficient.  Since "choice" is not available for attribute groups, an external constraint (e.g. Schematron) would be required to enforce the selection of only one of these through schema validation
		
	
	
	 
		 
		 
	
	
	
	 
		 
			 
			 
			 
		
	
	
	 
		 
			 Utility element to store a 2-point range of numeric values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of numeric values. If one member is a null, then this is a single ended interval.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Utility element to store a 2-point range of ordinal values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of ordinal values. If one member is a null, then this is a single ended interval.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Utility element to store a 2-point range of frequency values. If one member is a null, then this is a single ended interval.
		
	
	
	 
		 
			 Restriction of list type to store a 2-point range of frequency values. If one member is a null, then this is a single ended interval.
		
		 
			 
		
	
	
	
	 
		 
			 Element which refers to, or contains, a Value
		
	
	
	 
		 
			 Element which refers to, or contains, a Value.  This version is used in CompositeValues.
		
	
	
	 
		 
			 GML property which refers to, or contains, a Value
		
		 
			 
		
		 
	
	
	
	 
		 
			 Element which refers to, or contains, a set of homogeneously typed Values.
		
	
	
	 
		 
			 GML property which refers to, or contains, a set of homogeneously typed Values.
		
		 
			 
		
	
	
	 
		 
			 Property whose content is a scalar value.
		
		 
			 
				 
					
					
				
			
		
	
	 
		 
			 Property whose content is a Boolean value.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Category.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Quantity.
		
		 
			 
				 
					 
				
			
		
	
	 
		 
			 Property whose content is a Count.
		
		 
			 
				 
					 
				
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/commonCRSsProfile.xsd
 
	 
		 commonCRSsProfile.xsd
		 GML 3.1.1 profile for Common CRSs. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateOperations.xsd
 
	 
		 
		 Subset of coordinateOperations.xsd for GML 3.1.1 Common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that does not include any change of datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This abstract complexType is expected to be extended for well-known operation methods with many Conversion instances, in Application Schemas that define operation-method-specialized element names and contents. This conversion uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references the "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include zero or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
		 
			 Association to a general conversion, either referencing or containing the definition of that conversion. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that does not include any change of Datum. The best-known example of a coordinate conversion is a map projection. The parameters describing coordinate conversions are defined rather than empirically derived. Note that some conversions have no parameters.

This concrete complexType can be used with all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Conversion instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered list of composition associations to the set of parameter values used by this conversion operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateReferenceSystems.xsd
 
	 
		 
		 Subset of coordinateReferenceSystems.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
		 
			 Association to a coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	 
	
	 
		 
			 A coordinate reference system describing the position of points through two or more independent coordinate reference systems. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to all the component coordinate reference systems included in this compound coordinate reference system. 
						
					
				
			
		
	
	
	 
		 
			 An association to a component coordinate reference system included in this compound coordinate reference system. 
		
	
	
	 
	
	 
		 
			 A coordinate reference system based on an ellipsoidal approximation of the geoid; this provides an accurate representation of the geometry of geographic features for a large portion of the earth's surface.
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the ellipsoidal coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the geodetic datum used by this CRS. 
		
	
	
	 
	
	 
		 
			 A 1D coordinate reference system used for recording heights or depths. Vertical CRSs make use of the direction of gravity to define the concept of height or depth, but the relationship with gravity may not be straightforward. By implication, ellipsoidal heights (h) cannot be captured in a vertical coordinate reference system. Ellipsoidal heights cannot exist independently, but only as an inseparable part of a 3D coordinate tuple defined in a geographic 3D coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the vertical coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the vertical datum used by this CRS. 
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system (not by a datum). This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the coordinate reference system used by this derived CRS. 
		
	
	
	 
		 
			 Association to the coordinate conversion used to define this derived CRS. 
		
	
	
	 
	
	 
		 
			 A 2D coordinate reference system used to approximate the shape of the earth on a planar surface, but in such a way that the distortion that is inherent to the approximation is carefully controlled and known. Distortion correction is commonly applied to calculated bearings and distances to produce values that are a close match to actual field values. 
		
		 
			 
				 
					 
				
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateSystems.xsd
 
	 
		 
		 Subset of coordinateSystems.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A two- or three-dimensional coordinate system in which position is specified by geodetic latitude, geodetic longitude, and (in the three-dimensional case) ellipsoidal height. An EllipsoidalCS shall have two or three usesAxis associations. 
		
		 
			 
		
	
	
	 
		 
			 Association to an ellipsoidal coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A one-dimensional coordinate system used to record the heights (or depths) of points. Such a coordinate system is usually dependent on the Earth's gravity field, perhaps loosely as when atmospheric pressure is the basis for the vertical coordinate system axis. A VerticalCS shall have one usesAxis association. 
		
		 
			 
		
	
	
	 
		 
			 Association to a vertical coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/dataQuality.xsd
 
	 
		 
		 Subset of dataQuality.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.  
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/datums.xsd
 
	 
		 
		 Subset of datums.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 A textual description and/or a set of parameters identifying a particular reference level surface used as a zero-height surface, including its position with respect to the Earth for any of the height types recognized by this standard. There are several types of Vertical Datums, and each may place constraints on the Coordinate Axis with which it is combined to create a Vertical CRS. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a vertical datum. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this VerticalDatumTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to a vertical datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A geodetic datum defines the precise location and orientation in 3-dimensional space of a defined ellipsoid (or sphere) that approximates the shape of the earth, or of a Cartesian coordinate system centered in this ellipsoid (or sphere). 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Association to the prime meridian used by this geodetic datum. 
		
	
	
	 
		 
			 Association to the ellipsoid used by this geodetic datum. 
		
	
	
	 
		 
			 Association to a geodetic datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for prime meridian objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this prime meridian is identified. The meridianName most common value is Greenwich, and that value shall be used when the greenwichLongitude value is zero. 
		
	
	
	 
		 
			 A prime meridian defines the origin from which longitude values are determined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this prime meridian. The first meridianID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this prime meridian, including source information. 
						
					
					 
				
			
		
	
	
	 
		 
			 An identification of a prime meridian. 
		
	
	
	 
		 
			 Longitude of the prime meridian measured from the Greenwich meridian, positive eastward. The greenwichLongitude most common value is zero, and that value shall be used when the meridianName value is Greenwich. 
		
	
	
	 
		 
			 Association to a prime meridian, either referencing or containing the definition of that meridian. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for ellipsoid objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this ellipsoid is identified. 
		
	
	
	 
		 
			 An ellipsoid is a geometric figure that can be used to describe the approximate shape of the earth. In mathematical terms, it is a surface formed by the rotation of an ellipse about its minor axis.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this ellipsoid. The first ellipsoidID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this ellipsoid, including source information. 
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of an ellipsoid. 
		
	
	
	 
		 
			 Length of the semi-major axis of the ellipsoid, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 Association to an ellipsoid, either referencing or containing the definition of that ellipsoid. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Definition of the second parameter that defines the shape of an ellipsoid. An ellipsoid requires two defining parameters: semi-major axis and inverse flattening or semi-major axis and semi-minor axis. When the reference body is a sphere rather than an ellipsoid, only a single defining parameter is required, namely the radius of the sphere; in that case, the semi-major axis "degenerates" into the radius of the sphere.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Inverse flattening value of the ellipsoid. Value is a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length of the semi-minor axis of the ellipsoid. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet. 
		
	
	
	 
		 
			 The ellipsoid is degenerate and is actually a sphere. The sphere is completely defined by the semi-major axis, which is the radius of the sphere. 
		
		 
			 
				 
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/column.xml
 
	
	 Grid column axis
	 
		 Column
	
	 
		 Sample
	
	 For this second grid axis, column coordinate values match grid column numbers, but allow fractional coordinate values between grid points. The first column is sometimes called the "left" column, so the direction of this axis is "right", but these terms are not required. 
	 C
	 urn:ogc:def:axisDirection:OGC:1.0:columnPositive




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/compoundCRS#2.xml
 
	
	 OSGB36 /British National Grid + ODN
	 
		 7405
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
	
	 
		 
			 OSGB 1936 / British National Grid
			 
				 27700
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
				 
					 OSGB 1936
					 
						 4277
					
					 
						 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
					
					 
						 
							 ellipsoidal
							 
								 6402
							
							 
								 
									 Geodetic latitude in north direction with degree units
									 
										 9901
									
									 Lat
									 north
								
							
							 
								 
									 Geodetic longitude in east direction with degree units
									 
										 9902
									
									 Lon
									 east
								
							
						
					
					 
						 
							 OSGB 1936
							 
								 6277
							
							 
								 
									 Greenwich
									 
										 8901
									
									 
										 0
									
								
							
							 
								 
									 Airy 1830
									 
										 7001
									
									 6377563.396
									 
										 299.3249646
									
								
							
						
					
				
			
			 
				 
					 Transverse Mercator
					 
						 19916
					
					 
						 
							 Transverse Mercator
							 
								 9807
							
							 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
							 2
							 2
							 
								 
									 Latitude of natural origin
									 
										 8801
									
								
							
							 
								 
									 Longitude of natural origin
									 
										 8802
									
								
							
							 
								 
									 Scale factor at natural origin
									 
										 8805
									
								
							
							 
								 
									 False Easting
									 
										 8806
									
								
							
							 
								 
									 False Northing
									 
										 8807
									
								
							
						
					
					 
						 49
						 
					
					 
						 -2
						 
					
					 
						 0.999601272
						 
					
					 
						 400000
						 
					
					 
						 -100000
						 
					
				
			
			 
				 
					 Easting and Northing in metres
					 
						 4400
					
					 
						 
							 Easting in east direction with metre units
							 
								 9906
							
							 E
							 east
						
					
					 
						 
							 Northing in north direction with metre units
							 
								 9907
							
							 N
							 north
						
					
				
			
		
	
	 
		 
			 Newlyn
			 
				 5701
			
			 
				 
					 Gravity-related height up in metres
					 
						 6499
					
					 
						 
							 Gravity-related height in up direction with metre units
							 
								 9904
							
							 H
							 up
						
					
				
			
			 
				 
					 Ordnance Datum Newlyn
					 
						 5101
					
					 geoidal
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/crsDictionaryv1.xml
 
	
	 Example GML Dictionary of some coordinate reference systems and components. 
	 CRS Dictionary
	 
		 
			 OSGB36 /British National Grid + ODN
			 
				 7405
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
			 
		
	
	 
		 
			 OSGB 1936 / British National Grid
			 
				 27700
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
			 
			 
		
	
	 
		 
			 OSGB 1936
			 
				 4277
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
			 
		
	
	 
		 
			 ellipsoidal
			 
				 6402
			
			 
			 
		
	
	 
		 
			 Geodetic latitude in north direction with degree units
			 
				 9901
			
			 Lat
			 north
		
	
	 
		 
			 Geodetic longitude in east direction with degree units
			 
				 9902
			
			 Lon
			 east
		
	
	 
		 
			 OSGB 1936
			 
				 6277
			
			 
			 
		
	
	 
		 
			 Greenwich
			 
				 8901
			
			 
				 0
			
		
	
	 
		 
			 Airy 1830
			 
				 7001
			
			 6377563.396
			 
				 299.3249646
			
		
	
	 
		 
			 Transverse Mercator
			 
				 19916
			
			 
			 
				 49
				 
			
			 
				 -2
				 
			
			 
				 0.999601272
				 
			
			 
				 400000
				 
			
			 
				 -100000
				 
			
		
	
	 
		 
			 Transverse Mercator
			 
				 9807
			
			 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
			 2
			 2
			 
			 
			 
			 
			 
		
	
	 
		 
			 Latitude of natural origin
			 
				 8801
			
		
	
	 
		 
			 Longitude of natural origin
			 
				 8802
			
		
	
	 
		 
			 Scale factor at natural origin
			 
				 8805
			
		
	
	 
		 
			 False Easting
			 
				 8806
			
		
	
	 
		 
			 False Northing
			 
				 8807
			
		
	
	 
		 
			 Easting and Northing in metres
			 
				 4400
			
			 
			 
		
	
	 
		 
			 Easting in east direction with metre units
			 
				 9906
			
			 E
			 east
		
	
	 
		 
			 Northing in north direction with metre units
			 
				 9907
			
			 N
			 north
		
	
	 
		 
			 Height up in metres
			 
				 6499
			
			 
		
	
	 
		 
			 Gravity-related height in up direction with metre units
			 
				 9904
			
			 H
			 up
		
	
	 
		 
			 Ordnance Datum Newlyn
			 
				 5101
			
			 geoidal
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleCompoundCRS.xml
 
	
	 OSGB36 /British National Grid + ODN
	 
		 7405
	
	 
		 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man.

	
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleConversion.xml
 
	
	
	
	 Transverse Mercator
	 
		 19916
	
	 
		 
			 Transverse Mercator
			 
				 9807
			
			 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
			 2
			 2
			 
				 
					 Latitude of natural origin
					 
						 8801
					
				
			
			 
				 
					 Longitude of natural origin
					 
						 8802
					
				
			
			 
				 
					 Scale factor at natural origin
					 
						 8805
					
				
			
			 
				 
					 False Easting
					 
						 8806
					
				
			
			 
				 
					 False Northing
					 
						 8807
					
				
			
		
	
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleConversionSimplified.xml
 
	
	
	
	 Transverse Mercator
	 
		 19916
	
	 
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleGeographicCRS.xml
 
	
	 OSGB 1936
	 
		 4277
	
	 
		 
			 ellipsoidal
			 
				 6402
			
			 
				 
					 Geodetic latitude in north direction with degree units
					 
						 9901
					
					 Lat
					 north
				
			
			 
				 
					 Geodetic longitude in east direction with degree units
					 
						 9902
					
					 Lon
					 east
				
			
		
	
	 
		 
			 OSGB 1936
			 
				 6277
			
			 
				 
					 Greenwich
					 
						 8901
					
					 
						 0
					
				
			
			 
				 
					 Airy 1830
					 
						 7001
					
					 6377563.396
					 
						 299.3249646
					
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleGeographicCRSsimplified.xml
 
	
	 OSGB 1936
	 
		 4277
	
	 
	 
		 
			 OSGB 1936
			 
				 6277
			
			 
			 
				 
					 Airy 1830
					 
						 7001
					
					 6377563.396
					 
						 299.3249646
					
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleProjectedCRS.xml
 
	
	 OSGB 1936 / British National Grid
	 
		 27700
	
	 
	 
	 
		 
			 Easting and Northing in metres
			 
				 4400
			
			 
				 
					 Easting in east direction with metre units 
					 
						 9906
					
					 E
					 east
				
			
			 
				 
					 Northing in north direction with metre units 
					 
						 9907
					
					 N
					 north
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleProjectedCRSsimplified.xml
 
	
	 OSGB 1936 / British National Grid
	 
		 27700
	
	 
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleVerticalCRS.xml
 
	
	 Newlyn
	 
		 5701
	
	 
		 
			 Height up in metres
			 
				 6499
			
			 
				 
					 Gravity-related height in up direction with metre units
					 
						 9904
					
					 H
					 up
				
			
		
	
	 
		 
			 Ordnance Datum Newlyn
			 
				 5101
			
			 geoidal
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/exampleVerticalCRSsimplified.xml
 
	
	 Newlyn
	 
		 5701
	
	 
	 
		 
			 Ordnance Datum Newlyn
			 
				 5101
			
			 geoidal
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/grid2dSquareCRS.xml
 
	
	 2D square-cell grid based coordinate system
	 
		 Grid2dSquareCS
	
	 2D grid-based coordinate system for use by an image or other continuous grid coverage. It can be used for a grid of any size, since no grid size is defined. This coordinate system specifies that each row coordinate value will be listed before the column coordinate value. The grid cells are assumed to be square, with the same grid spacing or pixel spacing in each direction. 

In a grid coverage file, the "row" axis shall be the first axis by which grid points are sequenced, and the "column" axis shall be the second axis, as could be specified by the "scanDirection : Sequence(CharacterString)" attribute of the CV_SequenceRule class in Clause 8 of ISO 19123. With linear sequencing, the grid points in the first row shall be listed first, followed by other rows, with the grid points in each row listed in column number order. This relationship between the "row" and "column" names and the first grid points shall apply whether this Grid2dSquareCS is associated with a grid file before or after that file is recorded.

The "row" and "column" axis names are used here although the "scanDirection : Sequence(CharacterString)" attribute may provide other axis names. Use of other axis names would require defining different CartesianCSs for other names, or adding other names as additional axisID values. The following XML includes the axis names "line" and "sample" as additional axisID values.

If not otherwise identified in an image file, the "row" axis shall be the first axis whose number of pixels is identified, and the "column" axis shall be the second axis, as could be specified by the "extent[0..1] : CV_GridEnvelope" attribute of the CV_Grid class in Clause 8 of ISO 19123. In either case, the first point in the grid coverage file is assumed to be numbered (1, 1), meaning row 1, column 1. 

The first row in a grid is sometimes called the "top" row, the first column is sometimes called the "left" column, and the first grid point is then called the "upperLeft" point. If desired, those names can be used with this Grid2dSquareCS. However other names can also be used, since this Grid2dSquareCS has been defined so that it does not depend on such left/right, top/bottom, and up/down names. 
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/row.xml
 
	
	 Grid row axis
	 
		 Row
	
	 
		 Line
	
	 For this first grid axis, row coordinate values match grid row numbers, but allow fractional coordinate values between grid points. The first row in a grid is sometimes called the "top" row, so the direction of this axis is "down", but these terms are not required. 
	 R
	 urn:ogc:def:axisDirection:OGC:1.0:rowPositive




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/transverse mercator application schema/transverseMercator.xsd
 
	 
		 transverseMercator.xsd
		 How to encode definition of specific Transverse Mercator conversion. Example Application Schema to encode the data needed to define a specific Transverse Mercator type of map projection, which is a coordinate conversion. Written in the "ex" namespace. 
		This schema encodes a draft Transverse Mercator package that builds on the Coordinate Operation (CC_) package of the extended UML Model for OGC Abstract Specification Topic 2: Spatial Referencing by Coordinates. That draft package defines restricted subtypes of the CC_Conversion and CC_ParameterValue classes as needed for the Transverse Mercator map projection conversion. 
		Reference: Guidance Note Number 7 "Coordinate Conversions and Transformations including Formulas" (available through http://www.epsg.org/), especially Section 1.4.6 "Transverse Mercator". 
		Primary editor: Arliss Whiteside. Last updated 2005-10-06
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 

	
	
	 
	 
	
	 
	
	 
		 
			 Specific Transverse Mercator map projection. Uses the AbstractGeneralConversionType with restricted values for included elements, including elements in the coordinateOperationID element with the IdentifierType. If appropriate, the "codeSpace" element should have the string value "EPSG", and the "code" element should then have the appropriate EPSG code value. The other elements in the IdentifierType can be omitted. The "coordinateOperationName" element shall have a string value that names a specific Transverse Mercator map projection. The "_PositionalAccuracy" and "metaDataProperty" elements can be omitted. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	
	 
		 
			 Reference to Transverse Mercator operation method. 
		
		 
			 
			 
		
	
	
	 
		 
			 Value of the Latitude of the natural origin parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the Longitude of the natural origin (or central meridian) parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the scale factor at the natural origin (on the central meridian) parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the false Easting coordinate of the origin parameter for a specific coordinate conversion. 
		
	
	
	 
		 
			 Value of the false Northing coordinate of the origin parameter for a specific coordinate conversion. 
		
	
	
	
	 
		 
			 Angle measure operation parameter value. 
		
		 
			 
				 
					 
						 
					
					 
				
			
		
	
	
	 
		 
			 Scale measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 Length measure operation parameter value. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	
	 
		 
			 Angle value of an operation parameter, recorded as a single number, with a unit of measure suitable for an angle, such as degrees or radians. 
		
	
	
	 
		 
			 Scale factor value of an operation parameter, with a unit of measure suitable for a scale factor, such as percent, permil, or parts-per-million. 
		
	
	
	 
		 
			 Length value of an operation parameter, with a unit of measure suitable for a length, such as metres or feet. 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/transverseMercatorGeneral#2.xml
 
	
	
	
	 Transverse Mercator
	 
		 19916
		 6.0
	
	 
	 
		 49
		 
	
	 
		 -2
		 
	
	 
		 0.999601272
		 
	
	 
		 400000
		 
	
	 
		 -100000
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/Examples/transverseMercatorMethod#1.xml
 
	
	 Transverse Mercator
	 
		 9807
		 6.0
	
	 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
	 2
	 2
	 
		 
			 Latitude of natural origin
			 
				 8801
			
		
	
	 
		 
			 Longitude of natural origin
			 
				 8802
			
		
	
	 
		 
			 Scale factor at natural origin
			 
				 8805
			
		
	
	 
		 
			 False Easting
			 
				 8806
			
		
	
	 
		 
			 False Northing
			 
				 8807
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CommonCRSs/1.0.0/gmlCommonCRSsProfile.xsd
 
	 
		 commonCRSsProfile.xsd
		 GML 3.1.1 profile for Common CRSs. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/basicTypes.xsd
 
   
     basicTypes.xsd
	 Subset of basicTypes.xsd for GML 3.1.1 CRS Support profile. Primary editor: Arliss Whiteside. Last updated 2005-11-14
	Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
  
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/crsSupportProfile.xsd
 
	 
		 crsSupportProfile.xsd
		 GML 3.1.1 profile for CRS Support. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/dictionary.xsd
 
	 
		 
		 Subset of dictionary.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
					
				
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/geometryBasic0d1d.xsd
 
	 
		 geometryBasic0d1d.xsd
		 Subset of geometryBasic0d1d.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
		 
			 The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
		
	
	
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of _Geometry.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Optional reference to the CRS used by this geometry.
		
		 
			 
				 In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType (see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the location the URI points to.
			
		
	
	
	 
		 
			 This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
		
		 
			 
		
	
	
	
	
	 
	
	 
		 
			 DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the "srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
		
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 DirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS).
		
		 
			 
				 
			
		
	
	
	
	
	 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
		
		 
			 
				 
				 
			
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 Subset of geometryBasic2d.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
		 
			 An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
		 
			 The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
		
		 
			 
		
	
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	
	 
		 
			 Encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
		
		 
			 
				 
					 
						 
							 The "posList" element provides a compact way to specifiy the coordinates of the control points, assuming all control points are in the same coordinate reference systems. The number of direct positions in the list must be at least four.
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/gmlBase.xsd
 
	 
		 
		 Subset of gmlBase.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that derive from AbstractGMLType and its descendents "by restriction".  A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.
		
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the simple link components from xlinks.xsd, with all members optional, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance.
		
		 
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object.
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/gmlCrsSupportProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 profile for CRS Support. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/measures.xsd
 
	 
		 
		 Subset of measures.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
	
	 
		 
			 Value of a length (or distance) quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a length, such as metres or feet.
		
		 
			 
		
	
	
	 
		 
			 Value of a scale factor (or ratio) that has no physical unit. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a scale factor, such as percent, permil, or parts-per-million.
		
		 
			 
		
	
	
	 
		 
			 Value of a time or temporal quantity, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a time value, such as seconds or weeks.
		
		 
			 
		
	
	
	 
		 
			 Value of a length (or distance) quantity in a grid, where the grid spacing does not have any associated physical units, or does not have a constant physical spacing. This grid length will often be used in a digital image grid, where the base units are likely to be pixel spacings. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for length along the axes of a grid, such as pixel spacings or grid spacings.
		
		 
			 
		
	
	
	 
		 
			 Value of a speed, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for a velocity, such as metres per second or miles per hour.
		
		 
			 
		
	
	
	 
		 
			 Value of an angle quantity provided in either degree-minute-second format or single value format.
		
		 
			 
		
	
	
	 
	
	 
		 
			 Value of an angle quantity recorded as a single number, with its units. Uses the MeasureType with the restriction that the unit of measure referenced by uom must be suitable for an angle, such as degrees or radians.
		
		 
			 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/referenceSystems.xsd
 
	 
		 
		 Subset of referenceSystems.xsd for GML 3.1.1 common CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11. 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. 
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/CrsSupport/1.0.0/units.xsd
 
	 
		 
		 Subset of units.xsd for GML 3.1.1 CRS Support profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-11.
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsf.xsd
 
    
       gmlsf.xsd
       
         GML 3.1.1 Simplified Features profile Levels 0 and 1.
         Copyright (c) 2006 Open Geospatial Consortium, Inc.
         All Rights Reserved.
      
   
   
   
   
    
   
   
   
   
   
    
       
          
            The "_GeometricAggregate" element is the abstract head of
            the substitution group for all geometric aggregates.
         
      
   
   
    
       
          
            This is the abstract root type of the geometric aggregates.
         
      
       
          
      
   
   
    
       
          
            A property that has a geometric aggregate as its value domain
            shall contain an appropriate geometry element encapsulated in
            an element of this type.
         
      
       
          
      
   
   
    
   
    
       
          
            A MultiPoint is defined by one or more Points, referenced
            through pointMember elements.
         
      
       
          
             
                 
            
         
      
   
   
    
       
          
            A property that has a collection of points as its value
            domain shall contain an appropriate geometry element
            encapsulated in an element of this type.
         
      
       
          
      
   
   
    
   
    
       
          
            A MultiCurve is defined by one or more Curves, referenced
            through curveMember elements.
         
      
       
          
             
                
            
         
      
   
   
    
       
          
            A property that has a collection of curves as its value domain
            shall contain an appropriate geometry element encapsulated in
            an element of this type.
         
      
       
          
      
   
   
    
   
    
       
          
            A MultiSurface is defined by one or more Surfaces,
            referenced through surfaceMember elements.
         
      
       
          
             
                
            
         
      
   
   
    
       
          
            A property that has a collection of surfaces as its value
            domain shall contain an appropriate geometry element
            encapsulated in an element of this type.
         
      
       
          
      
   
   
    
       
          
            This property element contains the Point element.
         
      
   
   
    
       
          
            This property element contains the surface element. A surface
            element is any element which is substitutable for "_Surface".
         
      
   
   
   
   
    
   
    
       
          
            Curve is a 1-dimensional primitive. Curves are continuous,
            connected, and have a measurable length in terms of the
            coordinate system. 
            A curve is composed of one or more curve segments.
            The curve segments are connected to one another, with the
            end point of each segment except the last being the start
            point of the next segment in the segment list.
            The orientation of the curve is positive.
         
      
       
          
             
                
                   
                      
                        This element encapsulates the segments of the
                        curve.
                     
                  
               
            
         
      
   
   
   
   
    
       
          
            The "_CurveSegment" element is the abstract head of the
            substituition group for all curve segment elements,
            i.e. continuous segments of the same interpolation
            mechanism.
         
      
   
   
    
       
          
            Curve segment defines a homogeneous segment of a curve.
         
      
       
   
   
    
       
          
            This property element contains a list of curve segments.
            The order of the elements is significant and shall be
            preserved when processing the array.
         
      
   
   
    
       
          
            A container for an array of curve segments.
         
      
       
          
      
   
   
    
       
          
            This property element contains the curve element. A curve
            element is any element which is substitutable for "_Curve".
         
      
   
   
   
   
    
   
    
       
          
            A LineStringSegment is a curve segment that is defined by
            two or more coordinate tuples, with linear interpolation
            between them.
            Note: LineStringSegment implements GM_LineString of ISO 19107.
         
      
       
          
             
                
            
             
                
                   
                     The attribute "interpolation" specifies
                     the curve interpolation mechanism used
                     for this segment. This mechanism uses
                     the control points and control parameters
                     to determine the position of this curve
                     segment. For a LineStringSegment the
                     interpolation is fixed as "linear".
                  
               
            
         
      
   
   
   
   
    
       
          
            The "_SurfacePatch" element is the abstract head of the
            substituition group for all surface pach elements describing
            a continuous portion of a surface.
         
      
   
   
    
       
          
            A surface patch defines a homogenuous portion of a surface.
         
      
       
   
   
    
       
          
             This property element contains a list of surface patches.
             The order of the elements is significant and shall be
             preserved when processing the array.
         
      
   
   
    
       
          
            A container for an array of surface patches.
         
      
       
          
      
   
   
    
   
    
       
          
            A PolygonPatch is a surface patch that is defined by
            a set of boundary curves and an underlying surface to
            which these curves adhere. The curves are coplanar and
            the polygon uses planar interpolation in its interior.
            Implements GM_Polygon of ISO 19107. 
         
      
       
          
             
                
                
            
             
                
                   
                     The attribute "interpolation" specifies the
                     interpolation mechanism used for this surface
                     patch. Currently only planar surface patches
                     are defined in GML 3, the attribute is fixed
                     to "planar", i.e. the interpolation method
                     shall return points on a single plane. The
                     boundary of the patch shall be contained within
                     that plane.
                  
               
            
         
      
   
   
    
   
    
       
          
            A Surface is a 2-dimensional primitive and is composed
            of one or more surface patches. The surface patches are
            connected to one another.
            The orientation of the surface is positive ("up"). The
            orientation of a surface chooses an "up" direction
            through the choice of the upward normal, which, if the
            surface is not a cycle, is the side of the surface from
            which the exterior boundary appears counterclockwise.
            Reversal of the surface orientation reverses the curve
            orientation of each boundary component, and interchanges
            the conceptual "up" and "down" direction of the surface.
            If the surface is the boundary of a solid, the "up"
            direction is usually outward. For closed surfaces, which
            have no boundary, the up direction is that of the surface
            patches, which must be consistent with one another. Its
            included surface patches describe the interior structure
            of the Surface.
         
      
       
          
             
                
                   
                      
                        This element encapsulates the patches of the
                        surface.
                     
                  
               
            
         
      
   
   
    
       
          
            CurveInterpolationType is a list of codes that may be
            used to identify the interpolation mechanisms specified
            by an schema.
         
      
       
          
      
   
    
       
          
            SurfaceInterpolationType is a list of codes that may be
            used to identify the interpolation mechanisms specified
            by an application schema.
         
      
       
          
      
   
   
   
   
   
   
    
       
          
            The "_Surface" element is the abstract head of the
            substituition group for all (continuous) surface elements.
         
      
   
   
    
       
          
            An abstraction of a surface to support the different
            levels of complexity. A surface is always a continuous
            region of a plane.
         
      
       
          
      
   
   
    
       
          
            A property that has a surface as its value domain shall contain 
            an appropriate geometry element encapsulated in an element
            of this type.
         
      
       
          
      
   
   
    
   
    
       
          
            A Polygon is a special surface that is defined by a single
            surface patch. The boundary of this patch is coplanar and
            the polygon uses planar interpolation in its interior. It
            is backwards compatible with the Polygon of GML 2.
         
      
       
          
             
                
                
            
         
      
   
   
   
   
    
       
          
            A boundary of a surface consists of a number of rings.
            In the normal 2D case, one of these rings is distinguished
            as being the exterior boundary. In a general manifold this
            is not always possible, in which case all boundaries shall
            be listed as interior boundaries, and the exterior will be
            empty.
         
      
   
   
    
       
          
            A boundary of a surface consists of a number of rings. The
            "interior" rings seperate the surface / surface patch from
            the area enclosed by the rings.
         
      
   
   
    
       
          
            Encapsulates a ring to represent the surface boundary property
            of a surface.
         
      
       
          
      
   
   
    
   
    
       
          
            A LinearRing is defined by four or more coordinate tuples,
            with linear interpolation between them; the first and last
            coordinates must be coincident.
         
      
       
          
             
                
                   
                      
                        The "posList" element provides a compact way to
                        specifiy the coordinates of the control points,
                        if all control points are in the same coordinate
                        reference systems and belong to this ring only.
                        The number of direct positions in the list must
                        be at least four.
                     
                  
               
            
         
      
   
   
   
   
   
   
   
    
       
          
            The "_Geometry" element is the abstract head of the
            substituition group for all geometry elements of GML 3.
            This includes pre-defined and user-defined geometry elements.
            Any geometry element must be a direct or indirect
            extension/restriction  of AbstractGeometryType
            and must be directly or indirectly in the substitution
            group of "_Geometry".
         
      
   
   
    
       
          
            A geometric property shall contain any geometry element
            encapsulated in an element of this type.
         
      
       
          
      
   
   
    
       
          
            All geometry elements are derived directly or indirectly
            from this abstract supertype. A geometry element may
            have an identifying attribute ("gml:id"), a name (attribute
            "name") and a description (attribute "description"). It may
            be associated with a spatial reference system (attribute
            "srsName"). The following rules shall be adhered: - Every
            geometry type shall derive from this abstract type. - Every
            geometry element (i.e. an element of a geometry type) shall
            be directly or indirectly in the substitution group of _Geometry.
         
      
       
          
             
                
                   
                     In general this reference points to a CRS instance of
                     gml:CoordinateReferenceSystemType (see
                     coordinateReferenceSystems.xsd). For well known
                     references it is not required that the CRS description
                     exists at the location the URI points to. If no srsName
                     attribute is given, the CRS must be specified as part of
                     the larger context this geometry element is part of, e.g.
                     a geometric element like point, curve, etc. It is expected
                     that this attribute will be specified at the direct
                     position level only in rare cases.
                  
               
            
         
      
   
   
    
       
          
            The "_GeometricPrimitive" element is the abstract head of
            the substituition group for all (pre- and user-defined)
            geometric primitives.
         
      
   
   
    
       
          
            This is the abstract root type of the geometric primitives.
            A geometric primitive is a geometric object that is not
            decomposed further into other primitives in the system.
            All primitives are oriented in the direction implied by
            the sequence of their coordinate tuples.
         
      
       
          
      
   
   
   
   
    
   
    
       
          
            A Point is defined by a single coordinate tuple.
         
      
       
          
             
                
            
         
      
   
   
    
       
          
            A property that has a point as its value domain shall contain 
            an appropriate geometry element encapsulated in an element
            of this type.
         
      
       
          
      
   
   
   
   
    
       
          
            The "_Curve" element is the abstract head of the
            substituition group for all (continuous) curve elements.
         
      
   
   
    
       
          
            An abstraction of a curve to support the different levels
            of complexity. The curve can always be viewed as a geometric
            primitive, i.e. is continuous.
         
      
       
          
      
   
   
    
       
          
            A property that has a curve as its value domain shall contain
            an appropriate geometry element encapsulated in an element
            of this type.
         
      
       
          
      
   
   
    
   
    
       
          
            A LineString is a special curve that consists of a
            single segment with linear interpolation. It is defined
            by two or more coordinate tuples, with linear interpolation
            between them. It is backwards compatible with the LineString
            of GML 2.
         
      
       
          
             
                
            
         
      
   
   
   
   
    
   
    
       
          
            DirectPosition instances hold the coordinates for one position
            in the coordinate reference system (CRS) referenced in a 
            larger element. In this case, the CRS shall be assumed to be
            the value referenced in the containing object's CRS.
         
      
       
          
      
   
   
    
   
    
       
          
            DirectPositionList instances hold the coordinates for a
            sequence of direct positions within the same coordinate
            reference system (CRS).
         
      
       
          
      
   
   
   
   
    
   
    
       
          
            Envelope defines an extent using a pair of positions
            defining opposite corners in arbitrary dimensions. The
            first direct position is the "lower corner" (a coordinate
            position consisting of all the minimal ordinates for each
            dimension for all points within the envelope), the second
            one the "upper corner" (a coordinate position consisting
            of all the maximal ordinates for each dimension for all
            points within the envelope).
         
      
       
          
          
      
       
          
             
               In general this reference points to a CRS instance of
               gml:CoordinateReferenceSystemType (see
               coordinateReferenceSystems.xsd). For well known
               references it is not required that the CRS description
               exists at the location the URI points to.
            
         
      
   
   
   
   
   
    
   
    
       
          
            An abstract feature provides a set of common properties,
            including id, name and description inherited from
            AbstractGMLType, plus boundedBy.  A concrete feature type
            must derive from this type and specify additional properties
            in an application schema.
         
      
       
          
             
                
               
            
         
      
   
   
    
       
          
            A abstract feature base type, that shall include an
            identifying attribute ('id').
         
      
       
          
             
                
            
             
         
      
   
   
   
    
   
    
       
          Bounding shape.
      
       
          
      
   
   
   
   
   
   
   
   
   
   
    
       
          
            This abstract element is the head of a substitutionGroup
            hierararchy which may contain either simpleContent or
            complexContent elements.  It is used to assert the model
            position of "class" elements declared in other GML schemas.
         
      
   
   
   
    
       
          
            Global element which acts as the head of a substitution group
            that may include any element which is a GML feature, object,
            geometry or complex value
         
      
   
   
    
       
          
            This content model group makes it easier to construct types
            that derive from AbstractGMLType and its descendents "by
            restriction".  A reference to the group saves having to
            enumerate the standard object properties.
         
      
       
          
          
             
                
                  Multiple names may be provided.  These will often be
                  distinguished by being assigned by different authorities,
                  as indicated by the value of the codeSpace attribute.
                  In an instance document there will usually only be one
                  name per authority.
               
            
         
      
   
   
    
       
          
            All complexContent GML elements are directly or indirectly
            derived from this abstract supertype to establish a hierarchy
            of GML types that may be distinguished from other XML types
            by their ancestry.  Elements in this hierarchy must have an
            ID and are thus referenceable.
         
      
       
          
      
       
   
   
   
   
    
       
          
            A pattern or base for derived types used to specify complex
            types corresponding to a UML aggregation association. An
            instance of this type serves as a pointer to a remote Object.
         
      
       
   
   
   
   
   
    
       
          
            Database handle for the object.  It is of XML type ID,
            so is constrained to be unique in the XML document within
            which it occurs.  An external identifier for the object
            in the form of a URI may be constructed using standard XML
            and XPointer methods.  This is done by concatenating the
            URI for the document, a fragment separator, and the value
            of the id attribute.
         
      
   
   
    
       
          
            Attribute group used to enable property elements to refer
            to their value remotely. It contains the simple link
            components from xlinks.xsd, with all members optional.
            These attributes can be attached to any element, thus
            allowing it to act as a pointer.
         
      
       
   
   
    
       
          
            Label for the object, normally a descriptive name. An
            object may have several names, typically assigned by
            different authorities.  The authority for a name is
            indicated by the value of its (optional) codeSpace
            attribute.  The name may or may not be unique, as
            determined by the rules of the organization responsible
            for the codeSpace.
         
      
   
   
    
       
          
            Contains a simple text description of the object.
         
          
            Restricted to only allow a text string, as done in GML 3.2.
         
      
   
   
   
   
   
    
       
          
            XML List based on XML Schema double type.  An element
            of this type contains a space-separated list of double
            values
         
      
       
   
   
    
       
          
            Name or code with an (optional) authority.  Text token.
            If the codeSpace attribute is present, then its value
            should identify a dictionary, thesaurus or authority
            for the term, such as the organisation who assigned
            the value, or the dictionary from which it is taken.
            A text string with an optional codeSpace attribute.
         
      
       
          
             
         
      
   
   
    
       
          
            Number with a scale. The value of uom (Units Of Measure)
            attribute is a reference to a Reference System for the
            amount, either a ratio or position scale.
         
      
       
          
             
         
      
   
   
    
       
          
            A set of values, representing a list of token with the
            lexical value space of NCName. The tokens are seperated
            by whitespace.
         
      
       
   
   




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsfLevels.xsd
 
    
       gmlsfLevels.xsd
       
         Compliance levels schema for Simple features GML 3.1.1 Profile
         Copyright (c) 2006 Open Geospatial Consortium, Inc.
         All Rights Reserved.
      
   
   
    
       
          
            Level 0 = no complex-valued properties and minOccurs,maxOccurs
                      have a value domain of 0 or 1
            Level 1 = complex-valued properties with no restriction on
                      minOccurs and maxOccurs
            Level 2 = no restrictions on type of non-spatial scalar properties 
                      but must only support spatial properties declared in
                      clause 8
         
      
       
          
             
             
             
         
      
   
   
    
       
          
            This URI references the profile schema to which a GML
            application schema conforms.
         
      
   




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/coordinateOperations.xsd
 
	 
		 
		 Subset of coordinateOperations.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/coordinateReferenceSystems.xsd
 
	 
		 
		 Subset of coordinateReferenceOperations.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	
	 
	
	 
		 
			 A coordinate reference system that is defined by its coordinate conversion from another coordinate reference system but is not a projected coordinate reference system. This category includes coordinate reference systems derived from a projected coordinate reference system. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
	
	 
		 
			 Type of a derived coordinate reference system. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this DerivedCRSTypeType. 
					
				
			
		
	
	
	 
		 
			 Association to the coordinate system used by this CRS. 
		
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/dataQuality.xsd
 
	 
		 
		 Subset of dataQuality.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/datums.xsd
 
	 
		 
		 Subset of datums.xsd for GML 3.1.1 GridCRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-11-15 
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/exampleImageCRSpixelCenter.xml
 
	
	 Image C543D041201T084027 CRS pixel centers
	 
		 C543D041201T084027
		
	
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/exampleImageCRSpixelCorner.xml
 
	
	 Image C543D041201T084027 CRS pixel corners
	 
		 C543D041201T084027
		
	
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/exampleMethodEPSG9624.xml
 
	
	 Affine general parametric transformation
	 
		 9624
	
	 
XT   =  A0  +  A1. XS  +  A2.YS; 
YT   =  B0  +  B1. XS  +  B2.YS; 
where XT , YT  are the coordinates of a point P in the target coordinate system; 
		XS , YS  are the coordinates of P in the source coordinate system. 

Reversibility: The parameter values for an affine transformation cannot be used for the reverse transformation. However, the reverse transformation is another affine transformation using the same formulas but with different parameter values. The reverse parameter values, indicated by a prime ('), can be calculated from those of the forward transformation as follows:
D    = A1 . B2   -   A2 . B1; 
A0' = (A2 . B0   -   B2 . A0) / D; 
B0' = (B1 . A0   -   A1 . B0) / D; 
A1' = +B2 / D; 
A2' = - A2 / D; 
B1' = - B1 / D; 
B2' = +A1 / D. 

See Section 2.4.2.1 of EPSG Guidance Note 7. 
	 2
	 2
	
	 
		 
			 A0
			 
				 8623
			
		
	
	
	 
		 
			 A1
			 
				 8624
			
		
	
	
	 
		 
			 A2
			 
				 8625
			
		
	
	
	 
		 
			 B0
			 
				 8639
			
		
	
	
	 
		 
			 B1
			 
				 8640
			
		
	
	
	 
		 
			 B2
			 
				 8641
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/exampleMethodGridElevation.xml
 
	
	 Grid elevation model
	 
		 GridElevationModel
	
	 This operation method is for a coordinate Transformation that implements an elevation model using grid elevation data. 
	 The elevation value for the input horizontal position shall be bilinear interpolated between the surrounding four grid points, and added to the input horizontal coordinates. 
	 2
	 3
	 
		 
			 Grid Elevation Data
			 
				 GridElevationData
			
			 The value of this operation parameter is the URL of a source of grid elevation data, in the 3D targetCRS of the coordinate Transformation that contains the value of this operation parameter. 
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/exampleMethodRSM.xml
 
	
	 Replacement Sensor Model (RSM) coordinate Transformation
	 
		 ReplacementSensorModel
	
	 This operation method is for a coordinate Transformation that georeferences an unrectified image using the Replacement Sensor Model (RSM). 
	 urn:ogc:def:method:OGC:0.0:ReplacementSensorModel. 
	 3
	 2
	 
		 
			 Parameters for Replacement Sensor Model (RSM). 
			 
				 
			
			 The value of this operation parameter is the URL of a file containing all the parameters for the Replacement Sensor Model (RSM) for the specific image. 
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/gridSpacing.xml
 
	
	 Spacing between adjacent grid points, or between centers of adjacent pixels
	 GridSpacing
	 Length
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/imageCRSpixelCenter.xml
 
	
	
	
	 Image TBD CRS pixel centers
	
	 
		 TBD
		
	
	 Parameterized definition of 2D image coordinate reference systems with the origin at the center of the first pixel in the image file. This CRS definition can be used for any size image, since no image size is specified. 

This CRS definition is designed to be used for ungeorectified images, and is not expected to be used for a georectified image. This definition can be used for a georeferenced or ungeoreferenced image, where a georeferenced image CRS is associated with the coordinate Transformation(s) that georeference it. 
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/imageCRSpixelCorner.xml
 
	
	
	
	 Image TBD CRS pixel corner
	
	 
		 TBD
		
	
	 Parameterized definition of 2D image coordinate reference systems with the origin at the outside corner of the first pixel in the image file. This CRS definition can be used for any size image, since no image size is specified. 

This CRS definition is designed to be used for ungeorectified images, and is not expected to be used for a georectified image. This definition can be used for a georeferenced or ungeoreferenced image, where a georeferenced image CRS is associated with the coordinate Transformation(s) that georeference it. 
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/imageDatumPixelCenter.xml
 
	
	 Origin at center of first pixel
	 
		 ImageDatumPixelCenter
	
	 2D image datum with the origin at the center of the first pixel in the image file, usually the first pixel collected by the image sensor. In an image file, the pixels in the first row are assumed to be listed first, followed by other rows, with pixels in each row listed (and collected) in column number order. 
	 center of first pixel
	 cellCenter




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/imageDatumPixelCorner.xml
 
	
	 Origin at outside corner of first pixel
	 
		 ImageDatumPixelCorner
	
	 2D image datum with the origin at the outside corner of the first pixel in the image file, usually the first pixel collected by the image sensor. In an image file, the pixels in the first row are assumed to be listed first, followed by other rows, with pixels in each row listed (and collected) in column number order. 
	 outside corner of first pixel
	 cellCorner




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateConcatenatedOperation.xml
 
	
	 Template for ConcatenatedOperation
	 Template for coordinate ConcatenatedOperation to unrectified image coordinates from ground CRS coordinates. 
	 
		
	
	 
	 
		 
			 Template for grid elevation model coordinate Transformations
			 1.0
			 
				
			
			 
				
			
			 
				 
					 Grid elevation model
					 
						 GridElevationModel
					
					 This operation method is for a coordinate Transformation that implements an elevation model using grid elevation data. 
					 The elevation value for the input horizontal position shall be bilinear interpolated between the surrounding four grid points, and added to the input horizontal coordinates. 
					 2
					 3
					 
						 
							 Grid Elevation Data
							 
								 GridElevationData
							
							 The value of this operation parameter is the URL of a source of grid elevation data, in the 3D targetCRS of the coordinate Transformation that contains the value of this operation parameter. 
						
					
				
			
			 
				 http://baesystems.com/DEM/TBD
				 
			
		
	
	 
		 
			 Template for image georeferencing coordinate Transformation
			 1.0
			 
				
			
			 
			 
				 
					 Replacement Sensor Model (RSM) coordinate Transformation
					 
						 ReplacementSensorModel
					
					 This operation method is for a coordinate Transformation that georeferences an unrectified image using the Replacement Sensor Model (RSM). 
					 urn:ogc:def:method:OGC:0.0:ReplacementSensorModel. 
					 3
					 2
					 
						 
							 Parameters for Replacement Sensor Model (RSM). 
							 
								 
							
							 The value of this operation parameter is the URL of a file containing all the parameters for the Replacement Sensor Model (RSM) for the specific image. 
						
					
				
			
			 
				 http://baesystems.com/rsm/rsmParameterValues/TBD.xml
				 
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateConcatenatedOperationSimplified.xml
 
	
	 Template for ConcatenatedOperation
	 Template for coordinate ConcatenatedOperation to unrectified image coordinates from ground CRS coordinates. 
	 
		
	
	 
	 
		 
			 Template for grid elevation model coordinate Transformations
			 1.0
			 
				
			
			 
				
			
			 
			 
				 http://baesystems.com/DEM/TBD
				 
			
		
	
	 
		 
			 Template for image georeferencing coordinate Transformation
			 1.0
			 
				
			
			 
			 
			 
				 http://baesystems.com/rsm/rsmParameterValues/TBD.xml
				 
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateGeorectifiedGridCRS.xml
 
	
	
	
	 Georectified Image XXXX CRS
	
	 
		 GeorectifiedImageXXXXCRS
		
	
	 Template for georectified 2D image coordinate reference system definition. In this CRS, the origin is at the center of the first pixel in the georectified image file. This CRS template can be used for any size georectified image, since no image size is specified. A CRS definition using this template is expected to be needed and thus created before the georectified image pixels are produced. The coordinate Conversion used by this CRS definition is expected to NOT closely approximate the reverse of the coordinate Transformation used to georectify this image. This CRS template is not expected to be useful for an ungeorectified image. 
	 
	
	
	 
		 
			
			 Georectified image XXXX conversion
			
			 
				 
					 Affine general parametric transformation
					 
						 9624
					
					 
XT   =  A0  +  A1. XS  +  A2.YS; 
YT   =  B0  +  B1. XS  +  B2.YS; 
where XT , YT  are the coordinates of a point P in the target coordinate system; 
		XS , YS  are the coordinates of P in the source coordinate system. 

Reversibility: The parameter values for an affine transformation cannot be used for the reverse transformation. However, the reverse transformation is another affine transformation using the same formulas but with different parameter values. The reverse parameter values, indicated by a prime ('), can be calculated from those of the forward transformation as follows:
D    = A1 . B2   -   A2 . B1; 
A0' = (A2 . B0   -   B2 . A0) / D; 
B0' = (B1 . A0   -   A1 . B0) / D; 
A1' = +B2 / D; 
A2' = - A2 / D; 
B1' = - B1 / D; 
B2' = +A1 / D. 

See Section 2.4.2.1 of EPSG Guidance Note 7. 
					 2
					 2
					
					 
						 
							 A0
							 
								 8623
							
						
					
					
					 
						 
							 A1
							 
								 8624
							
						
					
					
					 
						 
							 A2
							 
								 8625
							
						
					
					
					 
						 
							 B0
							 
								 8639
							
						
					
					
					 
						 
							 B1
							 
								 8640
							
						
					
					
					 
						 
							 B2
							 
								 8641
							
						
					
				
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
		
	
	
	 #image
	
	 
		 
			 2D square-cell grid based coordinate system
			 
				 Grid2dSquareCS
			
			 A 2D grid-based coordinate system for use by an image or other continuous grid coverage. It can be used for a grid of any size, since no grid size is defined. This coordinate system specifies that each row coordinate value shall be listed before the column coordinate value. The grid cells are assumed to be square, with the same grid spacing or pixel spacing in each direction. 

In a grid coverage file, the "row" axis shall be the first axis by which grid points are sequenced, and the "column" axis shall be the second axis, as could be specified by the "scanDirection : Sequence(CharacterString)" attribute of the CV_SequenceRule class in Clause 8 of ISO 19123. With linear sequencing, the grid points in the first row shall be listed first, followed by other rows, with the grid points in each row listed in column number order. This relationship between the "row" and "column" names and the first grid points shall apply whether this Grid2dSquareCS is associated with a grid file before or after that file is recorded.

The "row" and "column" axis names are used here although the "scanDirection : Sequence(CharacterString)" attribute may provide other axis names. Use of other axis names would require defining different CartesianCSs for other names, or adding other names as additional axisID values. The following XML includes the axis names "line" and "sample" as additional axisID values.

If not otherwise identified in an image file, the "row" axis shall be the first axis whose number of pixels is identified, and the "column" axis shall be the second axis, as could be specified by the "extent[0..1] : CV_GridEnvelope" attribute of the CV_Grid class in Clause 8 of ISO 19123. In either case, the first point in the grid coverage file is assumed to be numbered (1, 1), meaning row 1, column 1. 

The first row in a grid is sometimes called the "top" row, the first column is sometimes called the "left" column, and the first grid point is then called the "upperLeft" point. If desired, those names can be used with this Grid2dSquareCS. However other names can also be used, since this Grid2dSquareCS has been defined so that it does not depend on such left/right, top/bottom, and up/down names. 
			 
				 
					 Grid row axis
					 
						 Row
					
					 For this grid axis, row coordinate values match grid row numbers, but allow fractional coordinate values between grid points. The first row in a grid is sometimes called the "top" row, so the direction of this axis is "down", but these terms are not required. 
					 R
					 urn:ogc:def:axisDirection:OGC:1.0:rowPositive
				
			
			 
				 
					 Grid column axis
					 
						 Column
					
					 For this grid axis, column coordinate values match grid column numbers, but allow fractional coordinate values between grid points. The first column is sometimes called the "left" column, so the direction of this axis is "right", but these terms are not required. 
					 C
					 urn:ogc:def:axisDirection:OGC:1.0:columnPositive
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateGeorectifiedGridCRSsimplified.xml
 
	
	
	
	 Georectified Image XXXX CRS
	
	 
		 GeorectifiedImageXXXXCRS
		
	
	 Template for georectified 2D image coordinate reference system definition. In this CRS, the origin is at the center of the first pixel in the georectified image file. This CRS template can be used for any size georectified image, since no image size is specified. A CRS definition using this template is expected to be needed and thus created before the georectified image pixels are produced. The coordinate Conversion used by this CRS definition is expected to NOT closely approximate the reverse of the coordinate Transformation used to georectify this image. This CRS template is not expected to be useful for an ungeorectified image. 
	 
	
	
	 
		 
			
			 Georectified image XXXX conversion
			
			 
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
			
			 
				 9999
				
				 
			
		
	
	
	 #image
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateGeoreferencingTransformation.xml
 
	
	 Example template for image georeferencing coordinate Transformations
	 1.0
	 
		
	
	 
	 
		 
			 Replacement Sensor Model (RSM) coordinate Transformation
			 
				 ReplacementSensorModel
			
			 This operation method is for a coordinate Transformation that georeferences an unrectified image using the Replacement Sensor Model (RSM). 
			 urn:ogc:def:method:OGC:0.0:ReplacementSensorModel. 
			 3
			 2
			 
				 
					 Parameters for Replacement Sensor Model (RSM). 
					 
						 
					
					 The value of this operation parameter is the URL of a file containing all the parameters for the Replacement Sensor Model (RSM) for the specific image. 
				
			
		
	
	 
		 http://baesystems.com/rsm/rsmParameterValues/TBD.xml
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateGeoreferencingTransformationSimplified.xml
 
	
	 Example template for image georeferencing coordinate Transformations
	 1.0
	 
		
	
	 
	 
	 
		 http://baesystems.com/rsm/rsmParameterValues/TBD.xml
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateGridElevationTransformation.xml
 
	
	 Template for grid elevation model coordinate Transformations
	 1.0
	 
		
	
	 
		
	
	 
		 
			 Grid elevation model
			 
				 GridElevationModel
			
			 This operation method is for a coordinate Transformation that implements an elevation model using grid elevation data. 
			 The elevation value for the input horizontal position shall be bilinear interpolated between the surrounding four grid points, and added to the input horizontal coordinates. 
			 2
			 3
			 
				 
					 Grid Elevation Data
					 
						 GridElevationData
					
					 The value of this operation parameter is the URL of a source of grid elevation data, in the 3D targetCRS of the coordinate Transformation that contains the value of this operation parameter. 
				
			
		
	
	 
		 http://baesystems.com/DEM/TBD
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateGridElevationTransformationSimplified.xml
 
	
	 Template for grid elevation model coordinate Transformations
	 1.0
	 
		
	
	 
		
	
	 
	 
		 http://baesystems.com/DEM/TBD
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateImageCRS.xml
 
	
	 Image TBD CRS pixel centers
	
	 
		 ImageTBDCRSpixelCenter
		
	
	 Parameterized definition of 2D image coordinate reference systems with the origin at the center of the first pixel in the image file. This CRS definition can be used for any size image, since no image size is specified. 

This CRS definition is designed to be used for ungeorectified images, and is not expected to be used for a georectified image. This definition can be used for a georeferenced or ungeoreferenced image, where a georeferenced image CRS is associated with the coordinate Transformation(s) that georeference it. 
	 
		 
			 2D square-cell grid based coordinate system
			 
				 Grid2dSquareCS
			
			 A 2D grid-based coordinate system for use by an image or other continuous grid coverage. It can be used for a grid of any size, since no grid size is defined. This coordinate system specifies that each row coordinate value shall be listed before the column coordinate value. The grid cells are assumed to be square, with the same grid spacing or pixel spacing in each direction. 

In a grid coverage file, the "row" axis shall be the first axis by which grid points are sequenced, and the "column" axis shall be the second axis, as could be specified by the "scanDirection : Sequence(CharacterString)" attribute of the CV_SequenceRule class in Clause 8 of ISO 19123. With linear sequencing, the grid points in the first row shall be listed first, followed by other rows, with the grid points in each row listed in column number order. This relationship between the "row" and "column" names and the first grid points shall apply whether this Grid2dSquareCS is associated with a grid file before or after that file is recorded.

The "row" and "column" axis names are used here although the "scanDirection : Sequence(CharacterString)" attribute may provide other axis names. Use of other axis names would require defining different CartesianCSs for other names, or adding other names as additional axisID values. The following XML includes the axis names "line" and "sample" as additional axisID values.

If not otherwise identified in an image file, the "row" axis shall be the first axis whose number of pixels is identified, and the "column" axis shall be the second axis, as could be specified by the "extent[0..1] : CV_GridEnvelope" attribute of the CV_Grid class in Clause 8 of ISO 19123. In either case, the first point in the grid coverage file is assumed to be numbered (1, 1), meaning row 1, column 1. 

The first row in a grid is sometimes called the "top" row, the first column is sometimes called the "left" column, and the first grid point is then called the "upperLeft" point. If desired, those names can be used with this Grid2dSquareCS. However other names can also be used, since this Grid2dSquareCS has been defined so that it does not depend on such left/right, top/bottom, and up/down names. 
			 
				 
					 Grid row axis
					 
						 Row
					
					 For this grid axis, row coordinate values match grid row numbers, but allow fractional coordinate values between grid points. The first row in a grid is sometimes called the "top" row, so the direction of this axis is "down", but these terms are not required. 
					 R
					 urn:ogc:def:axisDirection:OGC:1.0:rowPositive
				
			
			 
				 
					 Grid column axis
					 
						 Column
					
					 For this grid axis, column coordinate values match grid column numbers, but allow fractional coordinate values between grid points. The first column is sometimes called the "left" column, so the direction of this axis is "right", but these terms are not required. 
					 C
					 urn:ogc:def:axisDirection:OGC:1.0:columnPositive
				
			
		
	
	 
		 
			 Origin at center of first pixel
			 
				 ImageDatumPixelCenter
			
			 A 2D image datum with the origin at the center of the first pixel in the image file. In an image file, the pixels in the first row are assumed to be listed first, followed by other rows, with pixels in each row listed (and collected) in column number order. 
			 center of first pixel
			 cellCenter
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/Examples/templateImageCRSsimplified.xml
 
	
	 Image TBD CRS pixel centers
	
	 
		 ImageTBDCRSpixelCenter
		
	
	 Parameterized definition of 2D image coordinate reference systems with the origin at the center of the first pixel in the image file. This CRS definition can be used for any size image, since no image size is specified. 

This CRS definition is designed to be used for ungeorectified images, and is not expected to be used for a georectified image. This definition can be used for a georeferenced or ungeoreferenced image, where a georeferenced image CRS is associated with the coordinate Transformation(s) that georeference it. 
	 
	 




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/gmlGridCRSsProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 grid CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/GridCRSs/1.0.0/gridCRSsProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 grid CRSs profile. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright © 2005 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/basicTypes.xsd
 
   
     basicTypes.xsd
		 Subset of basicTypes.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Arliss Whiteside. Last updated 2005-10-14 
  
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus  or authority for the term, such as the organisation who assigned the value,  or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/dictionary.xsd
 
	 
		 
		 Subset of dictionary.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-14 
	
	
	 
	
	
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
					
				
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/gmlBase.xsd
 
	 
		 
		 Subset of gmlBase.xsd for GML 3.1.1 Simple Dictionary profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2005-10-14 
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
	
	
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that  derive from AbstractGMLType and its descendents "by restriction".  A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object.
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	




07-055r1 WCTS Draft Folder/gml/3.1.1/profiles/SimpleDictionary/1.0.0/gmlSimpleDictionaryProfile.xsd
 
	 
		 gml.xsd
		 GML 3.1.1 profile for Dictionary. Primary editor: Arliss Whiteside. Last updated 2005-10-11
		Copyright (c) Open Geospatial Consortium, Inc. (2005) 
	
	
	 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/readme.txt
GML 3.1.1 Schema Package Readme

The schema package contained in this directory is the normative GML
3.1.1 schema set as approved by the OGC membership in May 2005. This
version corrects a number of errors in the GML 3.1.0 schemas that
prevented validation.

Reason for Changes: The XML Schema for GML 3.1 fails to validate using
several of the most popular XML processing software applications.

Four sets of errors have been found in the GML 3.1 Schema, with
corrections applied as described:

1. the content model for "metaDataProperty" is non-determinstic: you
can't have a choice group containing <any> with anything else 
	- delete _MetaData from the choice group

2. membership of the _timeLength, _Value, _ScalarValue,
_ScalarValueList substitution groups relies on an interpretation of the
XML Schema specification which is not uniformly accepted
	- replace with an explicit <choice> groups 

3. axisName (type="string") in grids.xsd clashes with axisName
(different type) in coordinateSystems.xsd 
	- Remove the latter, use the gml:name property instead

4. a "derivation-by-restriction" pattern used widely throughout the
schema has a cardinality constraint (minOccurs="0", and sometimes
maxOccurs="unbounded") applied to a "property" element in a base type,
where the property element is the head of a substitution group; in a
type derived by restriction in which one or more members of the
substitution group is selected, the validation procedure described in
the W3C XML Schema specification requires that the validation
constraint appear on a <choice> container element, rather than on the
substitution group member element
	- move the cardinality constraint up to the <sequence>
	  container element
	- remove unnecessary derivation-by-restriction chains,
	  particularly concerning derivation of property elements

As this pattern is used pervasively in GML, there are numerous changes
in almost all of the schema documents.

The revised schema has been tested with Xerces-J, XSV, .NET, MSXML and
no validation errors are found. 

http://schemas.opengis.net/gml/3.1.1/

2005-08-11





07-055r1 WCTS Draft Folder/gml/3.1.1/smil/smil20-language.xsd
 
	
	 
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
				 
			
		
	
	 
		 
		 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
	
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
				 
			
		
	
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
				 
			
		
	
	 
	 
		 
			 
				 
					 
				
				 
				 
				 
				 
				 
			
		
	




07-055r1 WCTS Draft Folder/gml/3.1.1/smil/smil20.xsd
 
	 
	
	 
	 
		 
		 
		 
	
	
	 
		 
	
	
	 
		 
		 
	
	
	 
		 
			 
		
	
	
	 
	 
		 
		 
		 
	
	 
		 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
		 
			 
				 
					 
					 
				
			
		
		 
			 
				 
					 
					 
				
			
		
	
	 
		 
		 
		 
		 
	
	 
		 
	
	 
		 
	
	 
		 
			 
				 
					 
					 
					 
				
			
		
	
	 
	 
		 
		 
		 
	
	 
	 
		 
		 
		 
	
	 
	 
		 
		 
	
	
	 
		 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
	
	 
		 
			 
			 
			 
			 
			 
			 
		
	
	 
		 
		 
	
	 
		 
	
	 
		 
		 
	
	 
		 
	
	 
		 
		 
	




07-055r1 WCTS Draft Folder/gml/3.1.1/smil/xml-mod.xsd
 
	 
		 
			 In due course, we should install the relevant ISO 2- and 3-letter
                codes as the enumerated possible values . . .
		
	
	 
		 
			 
				 
				 
			
		
	
	 
		 
		 
	




07-055r1 WCTS Draft Folder/ows/1.1.0/ows19115subset.xsd
 
	 
		 ows19115subset.xsd 2006-10-20
		 This XML Schema Document encodes the parts of ISO 19115 used by the common "ServiceIdentification" and "ServiceProvider" sections of the GetCapabilities operation response, known as the service metadata XML document. The parts encoded here are the MD_Keywords, CI_ResponsibleParty, and related classes. The UML package prefixes were omitted from XML names, and the XML element names were all capitalized, for consistency with other OWS Schemas. This document also provides a simple coding of text in multiple languages, simplified from Annex J of ISO 19115.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Text string with the language of the string identified as recommended in the XML 1.0 W3C Recommendation, section 2.12. 
		
		 
			 
				 
			
		
	
	
	 
		 
			 Title of this resource, normally used for display to a human. 
		
	
	
	 
		 
			 Brief narrative description of this resource, normally used for display to a human. 
		
	
	
	 
	
	 
		 
			 Unordered list of one or more commonly used or formalised word(s) or phrase(s) used to describe the subject. When needed, the optional "type" can name the type of the associated list of keywords that shall all have the same type. Also when needed, the codeSpace attribute of that "type" can reference the type name authority and/or thesaurus.
			If the xml:lang attribute is not included in a Keyword element, then no language is specified for that element unless specified by another means.  All Keyword elements in the same Keywords element that share the same xml:lang attribute value represent different keywords in that language. 
			 For OWS use, the optional thesaurusName element was omitted as being complex information that could be referenced by the codeSpace attribute of the Type element. 
		
		 
			 
			 
		
	
	
	 
		 
			 Name or code with an (optional) authority. If the codeSpace attribute is present, its value shall reference a dictionary, thesaurus, or authority for the name or code, such as the organisation who assigned the value, or the dictionary from which it is taken. 
			 Type copied from basicTypes.xsd of GML 3 with documentation edited, for possible use outside the ServiceIdentification section of a service metadata document. 
		
		 
			 
				 
			
		
	
	
	 
		 
			 Identification of, and means of communication with, person(s) responsible for the resource(s). 
			 For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The optional individualName element was made mandatory, since either the organizationName or individualName element is mandatory. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section. 
		
	
	
	 
		 
			 Identification of, and means of communication with, person responsible for the server. At least one of IndividualName, OrganisationName, or PositionName shall be included. 
		
		 
			 
			 
			 
			 
			 
		
	
	
	
	 
		 
			 Identification of, and means of communication with, person responsible for the server. 
			 For OWS use in the ServiceProvider section of a service metadata document, the optional organizationName element was removed, since this type is always used with the ProviderName element which provides that information. The mandatory "role" element was changed to optional, since no clear use of this information is known in the ServiceProvider section. 
		
		 
			 
			 
			 
			 
		
	
	
	 
		 
			 Name of the responsible person: surname, given name, title separated by a delimiter. 
		
	
	
	 
		 
			 Name of the responsible organization. 
		
	
	
	 
		 
			 Role or position of the responsible person. 
		
	
	
	 
		 
			 Function performed by the responsible party. Possible values of this Role shall include the values and the meanings listed in Subclause B.5.5 of ISO 19115:2003. 
		
	
	
	 
		 
			 Address of the responsible party. 
		
	
	
	 
		 
			 Information required to enable contact with the responsible person and/or organization. 
			 For OWS use in the service metadata document, the optional hoursOfService and contactInstructions elements were retained, as possibly being useful in the ServiceProvider section. 
		
		 
			 
				 
					 Telephone numbers at which the organization or individual may be contacted. 
				
			
			 
				 
					 Physical and email address at which the organization or individual may be contacted. 
				
			
			 
				 
					 On-line information that can be used to contact the individual or organization. OWS specifics: The xlink:href attribute in the xlink:simpleLink attribute group shall be used to reference this resource. Whenever practical, the xlink:href attribute with type anyURI should be a URL from which more contact information can be electronically retrieved. The xlink:title attribute with type "string" can be used to name this set of information. The other attributes in the xlink:simpleLink attribute group should not be used. 
				
			
			 
				 
					 Time period (including time zone) when individuals can contact the organization or individual. 
				
			
			 
				 
					 Supplemental instructions on how or when to contact the individual or organization. 
				
			
		
	
	
	 
		 
			 Reference to on-line resource from which data can be obtained. 
			 For OWS use in the service metadata document, the CI_OnlineResource class was XML encoded as the attributeGroup "xlink:simpleLink", as used in GML. 
		
		 
	
	
	 
		 
			 Telephone numbers for contacting the responsible individual or organization. 
		
		 
			 
				 
					 Telephone number by which individuals can speak to the responsible organization or individual. 
				
			
			 
				 
					 Telephone number of a facsimile machine for the responsible
organization or individual. 
				
			
		
	
	
	 
		 
			 Location of the responsible individual or organization. 
		
		 
			 
				 
					 Address line for the location. 
				
			
			 
				 
					 City of the location. 
				
			
			 
				 
					 State or province of the location. 
				
			
			 
				 
					 ZIP or other postal code. 
				
			
			 
				 
					 Country of the physical address. 
				
			
			 
				 
					 Address of the electronic mailbox of the responsible organization or individual. 
				
			
		
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsAll.xsd
 
	 
		 owsAll.xsd 2006-10-04
		 This XML Schema Document includes and imports, directly and indirectly, all the XML Schemas defined by the OWS Common Implemetation Specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	 
	 




07-055r1 WCTS Draft Folder/ows/1.1.0/owsCommon.xsd
 
	 
		 owsCommon.xsd 2006-10-04
		 This XML Schema Document encodes various parameters and parameter types that can be used in OWS operation requests and responses.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 XML encoded identifier of a standard MIME type, possibly a parameterized MIME type. 
		
		 
			 
		
	
	
	 
		 
			 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
	
	 
		 
			 This element either references or contains more metadata about the element that includes this element. To reference metadata stored remotely, at least the xlinks:href attribute in xlink:simpleLink shall be included. Either at least one of the attributes in xlink:simpleLink or a substitute for the AbstractMetaData element shall be included, but not both. An Implementation Specification can restrict the contents of this element to always be a reference or always contain metadata. (Informative: This element was adapted from the metaDataProperty element in GML 3.0.) 
		
		 
			 
		
		 
			 
				 Reference to metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, the xlink:href attribute with type anyURI should include a URL from which this metadata can be electronically retrieved. 
			
		
		 
			 
				 Optional reference to the aspect of the element which includes this "metadata" element that this metadata provides more information about. 
			
		
	
	
	 
		 
			 Abstract element containing more metadata about the element that includes the containing "metadata" element. A specific server implementation, or an Implementation Specification, can define concrete elements in the AbstractMetaData substitution group. 
		
	
	
	
	 
	
	 
		 
			 XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. 
			 This type is adapted from the EnvelopeType of GML 3.1, with modified contents and documentation for encoding a MINIMUM size box SURROUNDING all associated data. 
		
		 
			 
				 
					 Position of the bounding box corner at which the value of each coordinate normally is the algebraic minimum within this bounding box. In some cases, this position is normally displayed at the top, such as the top left for some image coordinates. For more information, see Subclauses 10.2.5 and C.13. 
				
			
			 
				 
					 Position of the bounding box corner at which the value of each coordinate normally is the algebraic maximum within this bounding box. In some cases, this position is normally displayed at the bottom, such as the bottom right for some image coordinates. For more information, see Subclauses 10.2.5 and C.13. 
				
			
		
		 
			 
				 Usually references the definition of a CRS, as specified in [OGC Topic 2]. Such a CRS definition can be XML encoded using the gml:CoordinateReferenceSystemType in [GML 3.1]. For well known references, it is not required that a CRS definition exist at the location the URI points to. If no anyURI value is included, the applicable CRS must be either:
a)	Specified outside the bounding box, but inside a data structure that includes this bounding box, as specified for a specific OWS use of this bounding box type.
b)	Fixed and specified in the Implementation Specification for a specific OWS use of the bounding box type. 
			
		
		 
			 
				 The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here. 
			
		
	
	
	 
		 
			 Position instances hold the coordinates of a position in a coordinate reference system (CRS) referenced by the related "crs" attribute or elsewhere. For an angular coordinate axis that is physically continuous for multiple revolutions, but whose recorded values can be discontinuous, special conditions apply when the bounding box is continuous across the value discontinuity:
a)  If the bounding box is continuous clear around this angular axis, then ordinate values of minus and plus infinity shall be used.
b)  If the bounding box is continuous across the value discontinuity but is not continuous clear around this angular axis, then some non-normal value can be used if specified for a specific OWS use of the BoundingBoxType. For more information, see Subclauses 10.2.5 and C.13. 
			 This type is adapted from DirectPositionType and doubleList of GML 3.1. The adaptations include omission of all the attributes, since the needed information is included in the BoundingBoxType. 
		
		 
	
	
	 
	
	 
		 
			 XML encoded minimum rectangular bounding box (or region) parameter, surrounding all the associated data. This box is specialized for use with the 2D WGS 84 coordinate reference system with decimal values of longitude and latitude. 
			 This type is adapted from the general BoundingBoxType, with modified contents and documentation for use with the 2D WGS 84 coordinate reference system. 
		
		 
			 
				 
					 
						 
							 Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13. 
						
					
					 
						 
							 Position of the bounding box corner at which the values of longitude and latitude normally are the algebraic minimums within this bounding box. For more information, see Subclauses 10.4.5 and C.13. 
						
					
				
				 
					 
						 This attribute can be included when considered useful. When included, this attribute shall reference the 2D WGS 84 coordinate reference system with longitude before latitude and decimal values of longitude and latitude. 
					
				
				 
					 
						 The number of dimensions in this CRS (the length of a coordinate sequence in this use of the PositionType). This number is specified by the CRS definition, but can also be specified here. 
					
				
			
		
	
	
	 
		 
			 Two-dimensional position instances hold the longitude and latitude coordinates of a position in the 2D WGS 84 coordinate reference system. The longitude value shall be listed first, followed by the latitude value, both in decimal degrees. Latitude values shall range from -90 to +90 degrees, and longitude values shall normally range from -180 to +180 degrees. For the longitude axis, special conditions apply when the bounding box is continuous across the +/- 180 degrees meridian longitude value discontinuity:
a)  If the bounding box is continuous clear around the Earth, then longitude values of minus and plus infinity shall be used.
b)  If the bounding box is continuous across the value discontinuity but is not continuous clear around the Earth, then some non-normal value can be used if specified for a specific OWS use of the WGS84BoundingBoxType. For more information, see Subclauses 10.4.5 and C.13. 
		
		 
			 
		
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsContents.xsd
 
	 
		 owsContents.xsd 2006-02-14
		 This XML Schema  Document encodes the typical Contents section of an OWS service metadata (Capabilities) document. This  Schema can be built upon to define the Contents section for a specific OWS. If the ContentsBaseType in this XML Schema cannot be restricted and extended to define the Contents section for a specific OWS, all other relevant parts defined in owsContents.xsd shall be used by the "ContentsType" in the wxsContents.xsd prepared for the specific OWS.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Contents of typical Contents section of an OWS service metadata (Capabilities) document. This type shall be extended and/or restricted if needed for specific OWS use to include the specific metadata needed. 
		
		 
			 
				 
					 Unordered set of summary descriptions for the datasets available from this OWS server. This set shall be included unless another source is referenced and all this metadata is available from that source. 
				
			
			 
				 
					 Unordered set of references to other sources of metadata describing the coverage offerings available from this server. 
				
			
		
	
	
	 
		 
			 Reference to a source of metadata describing  coverage offerings available from this server. This  parameter can reference a catalogue server from which dataset metadata is available. This ability is expected to be used by servers with thousands or millions of datasets, for which searching a catalogue is more feasible than fetching a long Capabilities XML document. When no DatasetDescriptionSummaries are included, and one or more catalogue servers are referenced, this set of catalogues shall contain current metadata summaries for all the datasets currently available from this OWS server, with the metadata for each such dataset referencing this OWS server. 
		
	
	
	 
	
	 
		 
			 Typical dataset metadata in typical Contents section of an OWS service metadata (Capabilities) document. This type shall be extended and/or restricted if needed for specific OWS use, to include the specific Dataset  description metadata needed. 
		
		 
			 
				 
					 
						 
							 Unordered list of zero or more minimum bounding rectangles surrounding coverage data, using the WGS 84 CRS with decimal degrees and longitude before latitude. If no WGS 84 bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If WGS 84 bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. For each lowest-level coverage in a hierarchy, at least one applicable WGS84BoundingBox shall be either recorded or inherited, to simplify searching for datasets that might overlap a specified region. If multiple WGS 84 bounding boxes are included, this shall be interpreted as the union of the areas of these bounding boxes. 
						
					
					 
						 
							 Unambiguous identifier or name of this coverage, unique for this server. 
						
					
					 
						 
							 Unordered list of zero or more minimum bounding rectangles surrounding coverage data, in AvailableCRSs.  Zero or more BoundingBoxes are  allowed in addition to one or more WGS84BoundingBoxes to allow more precise specification of the Dataset area in AvailableCRSs. These Bounding Boxes shall not use any CRS not listed as an AvailableCRS. However, an AvailableCRS can be listed without a corresponding Bounding Box. If no such bounding box is recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall apply to this coverage. If such bounding box(es) are recorded for a coverage, any such bounding boxes recorded for a higher level in a hierarchy of datasets shall be ignored. If multiple bounding boxes are included with the same CRS, this shall be interpreted as the union of the areas of these bounding boxes. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this dataset. A list of optional metadata elements for this dataset description could be specified in the Implementation Specification for this service. 
						
					
					 
						 
							 Metadata describing zero or more unordered subsidiary datasets available from this server. 
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsDataIdentification.xsd
 
	 
		 owsDataIdentification.xsd 2006-10-04
		 This XML Schema Document encodes the parts of the MD_DataIdentification class of ISO 19115 (OGC Abstract Specification Topic 11) which are expected to be used for most datasets. This Schema also encodes the parts of this class that are expected to be useful for other metadata. Both may be used within the Contents section of OWS service metadata (Capabilities) documents.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Human-readable descriptive information for the object it is included within.
This type shall be extended if needed for specific OWS use to include additional metadata for each type of information. This type shall not be restricted for a specific OWS to change the multiplicity (or optionality) of some elements.
			If the xml:lang attribute is not included in a Title, Abstract or Keyword element, then no language is specified for that element unless specified by another means.  All Title, Abstract and Keyword elements in the same Description that share the same xml:lang attribute value represent the description of the parent object in that language. Multiple Title or Abstract elements shall not exist in the same Description with the same xml:lang attribute value unless otherwise specified. 
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Basic metadata identifying and describing a set of data. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier or name of this dataset. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	
	 
		 
			 Extended metadata identifying and describing a set of data. This type shall be extended if needed for each specific OWS to include additional metadata for each type of dataset. If needed, this type should first be restricted for each specific OWS to change the multiplicity (or optionality) of some elements. 
		
		 
			 
				 
					 
						 
							 Unordered list of zero or more bounding boxes whose union describes the extent of this dataset. 
						
					
					 
						 
							 Unordered list of zero or more references to data formats supported for server outputs. 
						
					
					 
						 
							 Unordered list of zero or more available coordinate reference systems. 
						
					
				
			
		
	
	
	 
		 
			 Unique identifier or name of this dataset. 
		
	
	
	 
		 
			 Reference to a format in which this data can be encoded and transferred. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
	 
		 
			 Coordinate reference system in which data from this data(set) or resource is available or supported. More specific parameter names should be used by specific OWS specifications wherever applicable. More than one such parameter can be included for different purposes. 
		
	
	
	 
		 
			 Access constraint applied to assure the protection of privacy or intellectual property, or any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. 
		
	
	
	 
		 
			 Fees and terms for retrieving data from or otherwise using this server, including the monetary units as specified in ISO 4217. The reserved value NONE (case insensitive) shall be used to mean no fees or terms. 
		
	
	
	 
		 
			 Identifier of a language used by the data(set) contents. This language identifier shall be as specified in IETF RFC 4646. When this element is omitted, the language used is not identified. 
		
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsDomainType.xsd
 
	 
		 owsDomainType.xsd 2006-10-06
		 This XML Schema Document encodes the allowed values (or domain) of a quantity, often for an input or output parameter to an OWS. Such a parameter is sometimes called a variable, quantity, literal, or typed literal. Such a parameter can use one of many data types, including double, integer, boolean, string, or URI. The allowed values can also be encoded for a quantity that is not explicit or not transferred, but is constrained by a server implementation.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Valid domain (or allowed set of values) of one quantity, with its name or identifier. 
		
		 
			 
				 
					 
						 Name or identifier of this quantity. 
					
				
			
		
	
	
	 
		 
			 Valid domain (or allowed set of values) of one quantity, with needed metadata but without a quantity name or identifier. 
		
		 
			 
			 
				 
					 Optional default value for this quantity, which should be included when this quantity has a default value. 
				
			
			 
				 
					 Meaning metadata should be referenced or included for each quantity. 
				
			
			 
				 
					 This data type metadata should be referenced or included for each quantity. 
				
			
			 
				 
					 Unit of measure, which should be included when this set of PossibleValues has units or a more complete reference system. 
				
			
			 
				 
					 Optional unordered list of other metadata about this quantity. A list of required and optional other metadata elements for this quantity should be specified in the Implementation Specification for this service. 
				
			
		
	
	
	 
		 
			 Specifies the possible values of this quantity. 
		
			 
				 
				 
				 
				 
			
	
	
	 
		 
			 Specifies that any value is allowed for this parameter.
		
		 
	
	
	 
		 
			 Specifies that no values are allowed for this parameter or quantity.
		
		 
	
	
	 
		 
			 Reference to externally specified list of all the valid values and/or ranges of values for this quantity. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.) 
		
		 
			 
				 
					 
						 Human-readable name of the list of values provided by the referenced document. Can be empty string when this list has no name. 
					
					 
					
				
			
		
	
	
	 
		 
			 Indicates that this quantity has units or a reference system, and identifies the unit or reference system used by the AllowedValues or ValuesReference. 
		
			 
				 
					 
						 Identifier of unit of measure of this set of values. Should be included then this set of values has units (and not a more complete reference system). 
					
				
				 
					 
						 Identifier of reference system used by this set of values. Should be included then this set of values has a reference system (not just units). 
					
				
			
	
	
	
	 
		 
			 List of all the valid values and/or ranges of values for this quantity. For numeric quantities, signed values should be ordered from negative infinity to positive infinity. 
		
		 
			 
				 
				 
			
		
	
	
	 
	
	 
		 
			 A single value, encoded as a string. This type can be used for one value, for a spacing between allowed values, or for the default value of a parameter. 
		
		 
			 
		
	
	
	 
		 
			 The default value for a quantity for which multiple values are allowed. 
		
	
	
	 
	
	 
		 
			 A range of values of a numeric parameter. This range can be continuous or discrete, defined by a fixed spacing between adjacent valid values. If the MinimumValue or MaximumValue is not included, there is no value limit in that direction. Inclusion of the specified minimum and maximum values in the range shall be defined by the rangeClosure. 
		
		 
			 
			 
			 
				 
					 Shall be included when the allowed values are NOT continuous in this range. Shall not be included when the allowed values are continuous in this range. 
				
			
		
		 
			 
				 Shall be included unless the default value applies. 
			
		
	
	
	 
		 
			 Minimum value of this numeric parameter. 
		
	
	
	 
		 
			 Maximum value of this numeric parameter. 
		
	
	
	 
		 
			 The regular distance or spacing between the allowed values in a range. 
		
	
	
	 
		 
			 Specifies which of the minimum and maximum values are included in the range. Note that plus and minus infinity are considered closed bounds. 
		
		 
			 
				 
					 
						 The specified minimum and maximum values are included in this range. 
					
				
				 
					 
						 The specified minimum and maximum values are NOT included in this range. 
					
				
				 
					 
						 The specified minimum value is NOT included in this range, and the specified maximum value IS included in this range. 
					
				
				 
					 
						 The specified minimum value IS included in this range, and the specified maximum value is NOT included in this range. 
					
				
			
		
	
	
	
	 
		 
			 References metadata about a quantity, and provides a name for this metadata. (Informative: This element was simplified from the metaDataProperty element in GML 3.0.) 
		
		 
			 
				 
					 Human-readable name of the metadata described by associated referenced document. 
				
				 
			
		
	
	
	 
		 
			 Reference to data or metadata recorded elsewhere, either external to this XML document or within it. Whenever practical, this attribute should be a URL from which this metadata can be electronically retrieved. Alternately, this attribute can reference a URN for well-known metadata. For example, such a URN could be a URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Definition of the meaning or semantics of this set of values. This Meaning can provide more specific, complete, precise, machine accessible, and machine understandable semantics about this quantity, relative to other available semantic information. For example, other semantic information is often provided in "documentation" elements in XML Schemas or "description" elements in GML objects. 
		
	
	
	 
		 
			 Definition of the data type of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known data type. For example, such a URN could be a data type identification URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Definition of the reference system used by this set of values, including the unit of measure whenever applicable (as is normal). In this case, the xlink:href attribute can reference a URN for a well-known reference system, such as for a coordinate reference system (CRS). For example, such a URN could be a CRS identification URN defined in the "ogc" URN namespace. 
		
	
	
	 
		 
			 Definition of the unit of measure of this set of values. In this case, the xlink:href attribute can reference a URN for a well-known unit of measure (uom). For example, such a URN could be a UOM identification URN defined in the "ogc" URN namespace. 
		
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsExceptionReport.xsd
 
	 
		 owsExceptionReport.xsd 2006-10-05
		 This XML Schema Document encodes the Exception Report response to all OWS operations.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Report message returned to the client that requested any OWS operation when the server detects an error while processing that operation request. 
		
		 
			 
				 
					 
						 Unordered list of one or more Exception elements that each describes an error. These Exception elements shall be interpreted by clients as being independent of one another (not hierarchical). 
					
				
			
			 
				 
					 Specification version for OWS operation. The string value shall contain one x.y.z "version" value (e.g., "2.1.3"). A version number shall contain three non-negative integers separated by decimal points, in the form "x.y.z". The integers y and z shall not exceed 99. Each version shall be for the Implementation Specification (document) and the associated XML Schemas to which requested operations will conform. An Implementation Specification version normally specifies XML Schemas against which an XML encoded operation response must conform and should be validated. See Version negotiation subclause for more information. 
				
				 
					 
						 
					
				
			
			 
				 
					 Identifier of the language used by all included exception text values. These language identifiers shall be as specified in IETF RFC 4646. When this attribute is omitted, the language used is not identified. 
				
			
		
	
	
	 
	
	 
		 
			 An Exception element describes one detected error that a server chooses to convey to the client. 
		
		 
			 
				 
					 Ordered sequence of text strings that describe this specific exception or error. The contents of these strings are left open to definition by each server implementation. A server is strongly encouraged to include at least one ExceptionText value, to provide more information about the detected error than provided by the exceptionCode. When included, multiple ExceptionText values shall provide hierarchical information about one detected error, with the most significant information listed first. 
				
			
		
		 
			 
				 A code representing the type of this exception, which shall be selected from a set of exceptionCode values specified for the specific service operation and server. 
			
		
		 
			 
				 When included, this locator shall indicate to the client where an exception was encountered in servicing the client's operation request. This locator should be included whenever meaningful information can be provided by the server. The contents of this locator will depend on the specific exceptionCode and OWS service, and shall be specified in the OWS Implementation Specification. 
			
		
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsGetCapabilities.xsd
 
	 
		 owsGetCapabilities.xsd 2006-02-14
		 This XML Schema Document defines the GetCapabilities operation request and response XML elements and types, which are common to all OWSs. This XML Schema shall be edited by each OWS, for example, to specify a specific value for the "service" attribute.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 XML encoded GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, usually including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. This base type shall be extended by each specific OWS to include the additional contents needed. 
		
		 
			 
			 
			 
		
		 
		 
			 
				 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. When not supported by server, server shall not return this attribute. 
			
		
	
	
	 
	
	 
		 
			 XML encoded GetCapabilities operation request. This operation allows clients to retrieve service metadata about a specific service instance. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. This base type shall be extended by each specific OWS to include the additional required "service" attribute, with the correct value for that OWS. 
		
		 
			 
				 
					 When omitted, server shall return latest supported version. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return complete service metadata (Capabilities) document. 
				
			
			 
				 
					 When omitted or not supported by server, server shall return service metadata document using the MIME type "text/xml". 
				
			
		
		 
			 
				 When omitted or not supported by server, server shall return latest complete service metadata document. 
			
		
	
	
	
	 
		 
			 Service type identifier, where the string value is the OWS type abbreviation, such as "WMS" or "WFS". 
		
		 
	
	
	 
		 
			 Prioritized sequence of one or more specification versions accepted by client, with preferred versions listed first. See Version negotiation subclause for more information. 
		
		 
			 
		
	
	
	 
		 
			 Unordered list of zero or more names of requested sections in complete service metadata document. Each Section value shall contain an allowed section name as specified by each OWS specification. See Sections parameter subclause for more information.  
		
		 
			 
		
	
	
	 
		 
			 Service metadata document version, having values that are "increased" whenever any change is made in service metadata document. Values are selected by each server, and are always opaque to clients. See updateSequence parameter use subclause for more information. 
		
		 
	
	
	 
		 
			 Prioritized sequence of zero or more GetCapabilities operation response formats desired by client, with preferred formats listed first. Each response format shall be identified by its MIME type. See AcceptFormats parameter use subclause for more information. 
		
		 
			 
		
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsGetResourceByID.xsd
 
	 
		 owsGetResourceByID.xsd 2006-02-14
		 This XML Schema Document encodes the GetResourceByID operation request message. This typical operation is specified as a base for profiling in specific OWS specifications. For information on the allowed changes and limitations in such profiling, see Subclause 9.4.1 of the OWS Common specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 XML encoded GetResourceByID operation response. The complexType used by this element shall be specified by each specific OWS.  
		
	
	
	 
	
	 
		 
			 Request to a service to perform the GetResourceByID operation. This operation allows a client to retrieve one or more identified resources, including datasets and resources that describe datasets or parameters. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 Unordered list of zero or more resource identifiers. These identifiers can be listed in the Contents section of the service metadata (Capabilities) document. For more information on this parameter, see Subclause 9.4.2.1 of the OWS Common specification. 
				
			
			 
				 
					 Optional reference to the data format to be used for response to this operation request. This element shall be included when multiple output formats are available for the selected resource(s), and the client desires a format other than the specified default, if any. 
				
			
		
		 
		 
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsInputOutputData.xsd
 
	 
		 owsInputOutputData.xsd 2006-04-06
		 This XML Schema Document specifies types and elements for input and output of operation data, allowing including multiple data items with each data item either included or referenced. The contents of each type and element specified here can be restricted and/or extended for each use in a specific OWS specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Response from an OWS operation, allowing including multiple output data items with each item either included or referenced. This OperationResponse element, or an element using the ManifestType with a more specific element name, shall be used whenever applicable for responses from OWS operations. 
			 This element is specified for use where the ManifestType contents are needed for an operation response, but the Manifest element name is not fully applicable. This element or the ManifestType shall be used instead of using the ows:ReferenceType proposed in OGC 04-105. 
		
	
	
	 
		 
			 Input data in a XML-encoded OWS operation request, allowing including multiple data items with each data item either included or referenced. This InputData element, or an element using the ManifestType with a more-specific element name (TBR), shall be used whenever applicable within XML-encoded OWS operation requests. 
		
	
	
	 
	
	 
		 
			 Complete reference to a remote resource that needs to be retrieved from an OWS using an XML-encoded operation request. This element shall be used, within an InputData or Manifest element that is used for input data, when that input data needs to be retrieved from another web service using a XML-encoded OWS operation request. This element shall not be used for local payload input data or for requesting the resource from a web server using HTTP Get. 
		
		 
			 
				 
					 
						 
							 The XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. 
						
					
					 
						 
							 Reference to the XML-encoded operation request message to be sent to request this input data from another web server using HTTP Post. The referenced message shall be attached to the same message (using the cid scheme), or be accessible using a URL. 
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsManifest.xsd
 
	 
		 owsManifest.xsd 2006-10-04
		 This XML Schema Document specifies types and elements for document or resource references and for package manifests that contain multiple references. The contents of each type and element specified here can be restricted and/or extended for each use in a specific OWS specification.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			  Base for a reference to a remote or local resource. 
			 This type contains only a restricted and annotated set of the attributes from the xlink:simpleLink attributeGroup. 
		
		 
		 
				 
					 Reference to a remote resource or local payload. A remote resource is typically addressed by a URL. For a local payload (such as a multipart mime message), the xlink:href must start with the prefix cid:. 
			
		
		 
			 
				 Reference to a resource that describes the role of this reference. When no value is supplied, no particular role value is to be inferred. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
		 
			 
				 Describes the meaning of the referenced resource in a human-readable fashion. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
		 
			 
				 Although allowed, this attribute is not expected to be useful in this application of xlink:simpleLink. 
			
		
	
	
	 
	
	 
		 
			 Complete reference to a remote or local resource, allowing including metadata about that resource. 
		
		 
			 
				 
					 
						 
							 Optional unique identifier of the referenced resource. 
						
					
					 
					 
						 
							 The format of the referenced resource. This element is omitted when the mime type is indicated in the http header of the reference. 
						
					
					 
						 
							 Optional unordered list of additional metadata about this resource. A list of optional metadata elements for this ReferenceType could be specified in the Implementation Specification for each use of this type in a specific OWS. 
						
					
				
			
		
	
	
	
	 
	
	 
		 
			 Logical group of one or more references to remote and/or local resources, allowing including metadata about that group. A Group can be used instead of a Manifest that can only contain one group. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Unordered list of one or more groups of references to remote and/or local resources. 
		
		 
			 
				 
					 
				
			
		
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsOperationsMetadata.xsd
 
	 
		 owsOperationsMetadata.xsd 2006-02-14
		 This XML Schema Document encodes the basic contents of the "OperationsMetadata" section of the GetCapabilities operation response, also known as the Capabilities XML document.
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 Metadata about the operations and related abilities specified by this service and implemented by this server, including the URLs for operation requests. The basic contents of this section shall be the same for all OWS types, but individual services can add elements and/or change the optionality of optional elements. 
		
		 
			 
				 
					 
						 Metadata for unordered list of all the (requests for) operations that this server interface implements. The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of parameter valid domains that each apply to one or more operations which this server interface implements. The list of required and optional parameter domain limitations shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this server. The list of required and optional constraints shall be specified in the Implementation Specification for this service. 
					
				
				 
			
		
	
	
	 
		 
			 Individual software vendors and servers can use this element to provide metadata about any additional server abilities. 
		
	
	
	 
		 
			 Metadata for one operation that this server implements. 
		
		 
			 
				 
					 
						 Unordered list of Distributed Computing Platforms (DCPs) supported for this operation. At present, only the HTTP DCP is defined, so this element will appear only once. 
					
				
				 
					 
						 Optional unordered list of parameter domains that each apply to this operation which this server implements. If one of these Parameter elements has the same "name" attribute as a Parameter element in the OperationsMetadata element, this Parameter element shall override the other one for this operation. The list of required and optional parameter domain limitations for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this operation shall be specified in the Implementation Specification for this service. 
					
				
				 
					 
						 Optional unordered list of additional metadata about this operation and its' implementation. A list of required and optional metadata elements for this operation should be specified in the Implementation Specification for this service. (Informative: This metadata might specify the operation request parameters or provide the XML Schemas for the operation request.) 
					
				
			
			 
				 
					 Name or identifier of this operation (request) (for example, GetCapabilities). The list of required and optional operations implemented shall be specified in the Implementation Specification for this service. 
				
			
		
	
	
	 
		 
			 Information for one distributed Computing Platform (DCP) supported for this operation. At present, only the HTTP DCP is defined, so this element only includes the HTTP element.

		
		 
			 
				 
			
		
	
	
	 
		 
			 Connect point URLs for the HTTP Distributed Computing Platform (DCP). Normally, only one Get and/or one Post is included in this element. More than one Get and/or Post is allowed to support including alternative URLs for uses such as load balancing or backup. 
		
		 
			 
				 
					 
						 Connect point URL prefix and any constraints for the HTTP "Get" request method for this operation request. 
					
				
				 
					 
						 Connect point URL and any constraints for the HTTP "Post" request method for this operation request. 
					
				
			
		
	
	
	 
		 
			 Connect point URL and any constraints for this HTTP request method for this operation request. In the OnlineResourceType, the xlink:href attribute in the xlink:simpleLink attribute group shall be used to contain this URL. The other attributes in the xlink:simpleLink attribute group should not be used. 
		
		 
			 
				 
					 
						 
							 Optional unordered list of valid domain constraints on non-parameter quantities that each apply to this request method for this operation. If one of these Constraint elements has the same "name" attribute as a Constraint element in the OperationsMetadata or Operation element, this Constraint element shall override the other one for this operation. The list of required and optional constraints for this request method for this operation shall be specified in the Implementation Specification for this service. 
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsServiceIdentification.xsd
 
	 
		 owsServiceIdentification.xsd 2006-08-31
		 This XML Schema Document encodes the common "ServiceIdentification" section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceIdentification class of ISO 19119 (OGC Abstract Specification Topic 12). 
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 General metadata for this specific server. This XML Schema of this section shall be the same for all OWS. 
		
		 
			 
				 
					 
						 
							 
								 A service type name from a registry of services. For example, the values of the codeSpace URI and name and code string may be "OGC" and "catalogue." This type name is normally used for machine-to-machine communication. 
							
						
						 
							 
								 Unordered list of one or more versions of this service type implemented by this server. This information is not adequate for version negotiation, and shall not be used for that purpose. 
							
						
						 
							 
								 Unordered list of identifiers of Application Profiles that are implemented by this server. This element should be included for each specified application profile implemented by this server. The identifier value should be specified by each Application Profile. If this element is omitted, no meaning is implied. 
							
						
						 
							 
								 If this element is omitted, no meaning is implied. 
							
						
						 
							 
								 Unordered list of access constraints applied to assure the protection of privacy or intellectual property, and any other restrictions on retrieving or using data from or otherwise using this server. The reserved value NONE (case insensitive) shall be used to mean no access constraints are imposed. When this element is omitted, no meaning is implied. 
							
						
					
				
			
		
	




07-055r1 WCTS Draft Folder/ows/1.1.0/owsServiceProvider.xsd
 
	 
		 owsServiceProvider.xsd 2006-02-14
		 This XML Schema Document encodes the common "ServiceProvider" section of the GetCapabilities operation response, known as the Capabilities XML document. This section encodes the SV_ServiceProvider class of ISO 19119 (OGC Abstract Specification Topic 12). 
		Copyright (c) 2006 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Metadata about the organization that provides this specific service instance or server. 
		
		 
			 
				 
					 
						 A unique identifier for the service provider organization. 
					
				
				 
					 
						 Reference to the most relevant web site of the service provider. 
					
				
				 
					 
						 Information for contacting the service provider. The OnlineResource element within this ServiceContact element should not be used to reference a web site of the service provider. 
					
				
			
		
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/gml4wcs.xsd
 
	 
		 gml.xsd
		 GML profile for WCS 1.2. Primary editor: Arliss Whiteside. Last updated 2007-04-23
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 	
	 	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/basicTypes.xsd
 
   
     
	 Subset of basicTypes.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23
	Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
  
  
  
   
     
       XML List based on XML Schema double type.  An element of this type contains a space-separated list of double values
    
     
  
  
   
     
       XML List based on XML Schema integer type.  An element of this type contains a space-separated list of integer values
    
     
  
  
   
     
       Name or code with an (optional) authority.  Text token.  
      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus 
      or authority for the term, such as the organisation who assigned the value, 
      or the dictionary from which it is taken.  
      A text string with an optional codeSpace attribute. 
    
     
       
         
      
    
  
  
   
     
       Number with a scale.  
      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  
   
     
       List of numbers with a uniform scale.  
      The value of uom (Units Of Measure) attribute is a reference to 
      a Reference System for the amount, either a ratio or position scale. 
    
     
       
         
      
    
  
  




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/coordinateOperations.xsd
 
	 
		 
		 Subset of coordinateOperations.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate operation objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate operation is identified. 
		
	
	
	 
		 
			 A mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. Many but not all coordinate operations (from CRS A to CRS B) also uniquely define the inverse operation (from CRS B to CRS A). In some cases, the operation method algorithm for the inverse operation is the same as for the forward algorithm, but the signs of some operation parameter values must be reversed. In other cases, different algorithms are required for the forward and inverse operations, but the same operation parameter values are used. If (some) entirely different parameter values are needed, a different coordinate operation shall be defined.
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate operation. The first coordinateOperationID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate operation, including source information. 
						
					
					 
					 
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a coordinate operation. 
		
	
	
	 
		 
			 Version of the coordinate transformation (i.e., instantiation due to the stochastic nature of the parameters). Mandatory when describing a transformation, and should not be supplied for a conversion. 
		
	
	
	 
		 
			 Association to the source CRS (coordinate reference system) of this coordinate operation. 
		
	
	
	 
		 
			 Association to the target CRS (coordinate reference system) of this coordinate operation. For constraints on multiplicity of "sourceCRS" and "targetCRS", see UML model of Coordinate Operation package in OGC Abstract Specification topic 2. 
		
	
	
	 
		 
			 Association to a coordinate operation, either referencing or containing the definition of that coordinate operation. 
		
		 
			 
		
		 
	
	
	 
		 
			 A single (not concatenated) coordinate operation. 
		
	
	
	 
		 
			 A parameterized mathematical operation on coordinates that transforms or converts coordinates to another coordinate reference system. This coordinate operation uses an operation method, usually with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type.

This abstract complexType shall not be directly used, extended, or restricted in a compliant Application Schema. 
		
	
	
	 
	
	 
		 
			 An ordered sequence of two or more single coordinate operations. The sequence of operations is constrained by the requirement that the source coordinate reference system of step (n+1) must be the same as the target coordinate reference system of step (n). The source coordinate reference system of the first step and the target coordinate reference system of the last step are the source and target coordinate reference system associated with the concatenated operation. Instead of a forward operation, an inverse operation may be used for one or more of the operation steps mentioned above, if the inverse operation is uniquely defined by the forward operation.
		
		 
			 
				 
					 
						 
							 Ordered sequence of associations to the two or more single operations used by this concatenated operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to a single operation. 
		
	
	
	 
		 
			 Association to a single operation, either referencing or containing the definition of that single operation. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A pass-through operation specifies that a subset of a coordinate tuple is subject to a specific coordinate operation. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of positive integers defining the positions in a coordinate tuple of the coordinates affected by this pass-through operation. 
						
					
					 
				
			
		
	
	
	 
		 
			 A positive integer defining a position in a coordinate tuple. 
		
	
	
	 
		 
			 Association to the operation applied to the specified ordinates. 
		
	
	
	 
		 
			 Association to an abstract operation, either referencing or containing the definition of that operation. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 An abstract operation on coordinates that usually includes a change of Datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This abstract complexType is expected to be extended for well-known operation methods with many Transformation instances, in Application Schemas that define operation-method-specialized value element names and contents. This transformation uses an operation method with associated parameter values. However, operation methods and parameter values are directly associated with concrete subtypes, not with this abstract type. All concrete types derived from this type shall extend this type to include a "usesMethod" element that references one "OperationMethod" element. Similarly, all concrete types derived from this type shall extend this type to include one or more elements each named "uses...Value" that each use the type of an element substitutable for the "_generalParameterValue" element. 
		
		 
			 
				 
					 
					 
					 
					 
					 
					 
					 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A concrete operation on coordinates that usually includes a change of datum. The parameters of a coordinate transformation are empirically derived from data containing the coordinates of a series of points in both coordinate reference systems. This computational process is usually "over-determined", allowing derivation of error (or accuracy) estimates for the transformation. Also, the stochastic nature of the parameters may result in multiple (different) versions of the same coordinate transformation.

This concrete complexType can be used for all operation methods, without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one Transformation instance. 
		
		 
			 
				 
					 
					 
						 
							 Unordered set of composition associations to the set of parameter values used by this transformation operation. 
						
					
				
			
		
	
	
	 
		 
			 Association to the operation method used by this coordinate operation. 
		
	
	
	 
		 
			 Composition association to a parameter value used by this coordinate operation. 
		
	
	
	
	 
	
	 
		 
			 Abstract parameter value or group of parameter values.
			
This abstract complexType is expected to be extended and restricted for well-known operation methods with many instances, in Application Schemas that define operation-method-specialized element names and contents. Specific parameter value elements are directly contained in concrete subtypes, not in this abstract type. All concrete types derived from this type shall extend this type to include one "...Value" element with an appropriate type, which should be one of the element types allowed in the ParameterValueType. In addition, all derived concrete types shall extend this type to include a "valueOfParameter" element that references one element substitutable for the "OperationParameter" element. 
		
		 
	
	
	 
	
	 
		 
			 A parameter value, ordered sequence of values, or reference to a file of parameter values. This concrete complexType can be used for operation methods without using an Application Schema that defines operation-method-specialized element names and contents, especially for methods with only one instance. This complexType can be used, extended, or restricted for well-known operation methods, especially for methods with many instances. 
		
		 
			 
				 
					 
						 
						 
						 
						 
						 
						 
						 
					
					 
				
			
		
	
	
	 
		 
			 Numeric value of an operation parameter, with its associated unit of measure. 
		
	
	
	 
		 
			 String value of an operation parameter. A string value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Positive integer value of an operation parameter, usually used for a count. An integer value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Boolean value of an operation parameter. A Boolean value does not have an associated unit of measure. 
		
	
	
	 
		 
			 Ordered sequence of two or more numeric values of an operation parameter list, where each value has the same associated unit of measure. An element of this type contains a space-separated sequence of double values. 
		
	
	
	 
		 
			 Ordered sequence of two or more integer values of an operation parameter list, usually used for counts. These integer values do not have an associated unit of measure. An element of this type contains a space-separated sequence of integer values. 
		
	
	
	 
		 
			 Reference to a file or a part of a file containing one or more parameter values, each numeric value with its associated unit of measure. When referencing a part of a file, that file must contain multiple identified parts, such as an XML encoded document. Furthermore, the referenced file or part of a file can reference another part of the same or different files, as allowed in XML documents. 
		
	
	
	 
		 
			 Association to the operation parameter that this is a value of. 
		
	
	
	
	 
	
	 
		 
			 Basic encoding for operation method objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation method is identified. 
		
	
	
	 
		 
			 Definition of an algorithm used to perform a coordinate operation. Most operation methods use a number of operation parameters, although some coordinate conversions use none. Each coordinate operation using the method assigns values to these parameters. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation method. The first methodID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation method, including source information.
						
					
					 
					 
					 
					 
						 
							 Unordered list of associations to the set of operation parameters and parameter groups used by this operation method. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation method. 
		
	
	
	 
		 
			 Formula(s) used by this operation method. The value may be a reference to a publication. Note that the operation method may not be analytic, in which case this element references or contains the procedure, not an analytic formula.
		
	
	
	 
		 
			 Number of dimensions in the source CRS of this operation method. 
		
	
	
	 
		 
			 Number of dimensions in the target CRS of this operation method. 
		
	
	
	 
		 
			 Association to an operation parameter or parameter group used by this operation method. 
		
	
	
	 
		 
			 Association to a concrete general-purpose operation method, either referencing or containing the definition of that method. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Abstract definition of a parameter or group of parameters used by an operation method. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 The minimum number of times that values for this parameter group or parameter are required. If this attribute is omitted, the minimum number is one. 
		
	
	
	 
		 
			 Association to an operation parameter or group, either referencing or containing the definition of that parameter or group. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 Basic encoding for operation parameter objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this operation parameter is identified. 
		
	
	
	 
		 
			 The definition of a parameter used by an operation method. Most parameter values are numeric, but other types of parameter values are possible. This complexType is expected to be used or extended for all operation methods, without defining operation-method-specialized element names.  
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this operation parameter. The first parameterID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this operation parameter, including source information. 
						
					
				
			
		
	
	
	 
		 
			 An identification of an operation parameter. 
		
	
	
	 
		 
			 Association to an operation parameter, either referencing or containing the definition of that parameter. 
		
		 
			 
		
		 
	
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/coordinateReferenceSystems.xsd
 
	 
		 
		 Subset of coordinateReferenceOperations.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 A coordinate reference system consists of an ordered sequence of coordinate system axes that are related to the earth through a datum. A coordinate reference system is defined by one datum and by one coordinate system. Most coordinate reference system do not move relative to the earth, except for engineering coordinate reference systems defined on moving platforms such as cars, ships, aircraft, and spacecraft. For further information, see OGC Abstract Specification Topic 2.

Coordinate reference systems are commonly divided into sub-types. The common classification criterion for sub-typing of coordinate reference systems is the way in which they deal with earth curvature. This has a direct effect on the portion of the earth's surface that can be covered by that type of CRS with an acceptable degree of error. The exception to the rule is the subtype "Temporal" which has been added by analogy. 
		
	
	
	 
	
	 
		 
			 An engineering coordinate reference system applied to locations in images. Image coordinate reference systems are treated as a separate sub-type because a separate user community exists for images with its own terms of reference. 
		
		 
			 
				 
					 
						 
					
					 
				
			
		
	
	
	 
		 
			 Association to the Cartesian coordinate system used by this CRS. 
		
	
	
	 
		 
			 Association to the image datum used by this CRS. 
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/coordinateSystems.xsd
 
	 
		 
		 Subset of coordinateSystems.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23. 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for coordinate system axis objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
						 
							 The name by which this coordinate system axis is identified. 
						
					
				
				 
			
		
	
	
	 
		 
			 Definition of a coordinate system axis. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system axis. The first axisID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system axis, including data source information. 
						
					
					 
					 
				
				 
			
		
	
	
	 
		 
			 An identification of a coordinate system axis. 
		
	
	
	 
		 
			 The abbreviation used for this coordinate system axis. This abbreviation can be used to identify the ordinates in a coordinate tuple. Examples are X and Y. The codeSpace attribute can reference a source of more information on a set of standardized abbreviations, or on this abbreviation. 
		
	
	
	 
		 
			 Direction of this coordinate system axis (or in the case of Cartesian projected coordinates, the direction of this coordinate system axis at the origin). Examples: north or south, east or west, up or down. Within any set of coordinate system axes, only one of each pair of terms can be used. For earth-fixed CRSs, this direction is often approximate and intended to provide a human interpretable meaning to the axis. When a geodetic datum is used, the precise directions of the axes may therefore vary slightly from this approximate direction. Note that an EngineeringCRS can include specific descriptions of the directions of its coordinate system axes. For example, the path of a linear CRS axis can be referenced in another document, such as referencing a GML feature that references or includes a curve geometry. The codeSpace attribute can reference a source of more information on a set of standardized directions, or on this direction. 
		
	
	
	 
		 
			 Identifier of the unit of measure used for this coordinate system axis. The value of this coordinate in a coordinate tuple shall be recorded using this unit of measure, whenever those coordinates use a coordinate reference system that uses a coordinate system that uses this axis.
		
	
	
	 
		 
			 Association to a coordinate system axis, either referencing or containing the definition of that axis. 
		
		 
			 
		
		 
	
	
	
	 
	
	 
		 
			 Basic encoding for coordinate system objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this coordinate system is identified. 
		
	
	
	 
		 
			 A coordinate system (CS) is the set of coordinate system axes that spans a given coordinate space. A CS is derived from a set of (mathematical) rules for specifying how coordinates in a given space are to be assigned to points. The coordinate values in a coordinate tuple shall be recorded in the order in which the coordinate system axes associations are recorded, whenever those coordinates use a coordinate reference system that uses this coordinate system. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this coordinate system. The first csID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on or information about this coordinate system, including data source information. 
						
					
					 
						 
							 Ordered sequence of associations to the coordinate system axes included in this coordinate system. 
						
					
				
			
		
	
	
	 
		 
			 An identification of a coordinate system. 
		
	
	
	 
		 
			 Association to a coordinate system axis. 
		
	
	
	 
		 
			 Association to a coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	
	 
	
	 
		 
			 A 1-, 2-, or 3-dimensional coordinate system. Gives the position of points relative to orthogonal straight axes in the 2- and 3-dimensional cases. In the 1-dimensional case, it contains a single straight coordinate axis. In the multi-dimensional case, all axes shall have the same length unit of measure. A CartesianCS shall have one, two, or three usesAxis associations. 
		
		 
			 
		
	
	
	 
		 
			 Association to a Cartesian coordinate system, either referencing or containing the definition of that coordinate system. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/dataQuality.xsd
 
	 
		 
		 Subset of dataQuality.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Position error estimate (or accuracy) data. 
		
		 
			 
		
	
	
	 
		 
			 A description of the position accuracy parameter(s) provided. 
		
	
	
	 
	
	 
		 
			 Closeness of reported coordinate values to values accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Closeness of the relative positions of two or more positions to their respective relative positions accepted as or being true. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
		 
			 A quantitative result defined by the evaluation procedure used, and identified by the measureDescription. 
		
	
	
	 
	
	 
		 
			 Error estimate covariance matrix. 
		
		 
			 
				 
					 
						 
							 Ordered sequence of units of measure, corresponding to the row and column index numbers of the covariance matrix, starting with row and column 1 and ending with row/column N. Each unit of measure is for the ordinate reflected in the relevant row and column of the covariance matrix. 
						
					
					 
						 
							 Unordered set of elements in this covariance matrix. Because the covariance matrix is symmetrical, only the elements in the upper or lower diagonal part (including the main diagonal) of the matrix need to be specified. Any zero valued covariance elements can be omitted. 
						
					
				
			
		
	
	
	 
	
	 
		 
			 An element of a covariance matrix.
		
		 
			 
			 
			 
		
	
	
	 
		 
			 Row number of this covariance element value. 
		
	
	
	 
		 
			 Column number of this covariance element value. 
		
	
	
	 
		 
			 Value of covariance matrix element. 
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/datums.xsd
 
	 
		 
		 Subset of datums.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Basic encoding for datum objects, simplifying and restricting the DefinitionType as needed. 
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this datum is identified. 
		
	
	
	 
		 
			 A datum specifies the relationship of a coordinate system to the earth, thus creating a coordinate reference system. A datum uses a parameter or set of parameters that determine the location of the origin of the coordinate reference system. Each datum subtype can be associated with only specific types of coordinate systems. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document. 
		
		 
			 
				 
					 
						 
							 Set of alternative identifications of this datum. The first datumID, if any, is normally the primary identification code, and any others are aliases. 
						
					
					 
						 
							 Comments on this reference system, including source information. 
						
					
					 
					 
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a datum. 
		
	
	
	 
		 
			 Description, possibly including coordinates, of the point or points used to anchor the datum to the Earth. Also known as the "origin", especially for engineering and image datums. The codeSpace attribute can be used to reference a source of more detailed on this point or surface, or on a set of such descriptions. 
- For a geodetic datum, this point is also known as the fundamental point, which is traditionally the point where the relationship between geoid and ellipsoid is defined. In some cases, the "fundamental point" may consist of a number of points. In those cases, the parameters defining the geoid/ellipsoid relationship have been averaged for these points, and the averages adopted as the datum definition.
- For an engineering datum, the anchor point may be a physical point, or it may be a point with defined coordinates in another CRS. When appropriate, the coordinates of this anchor point can be referenced in another document, such as referencing a GML feature that references or includes a point position.
- For an image datum, the anchor point is usually either the centre of the image or the corner of the image.
- For a temporal datum, this attribute is not defined. Instead of the anchor point, a temporal datum carries a separate time origin of type DateTime. 
		
	
	
	 
		 
			 The time after which this datum definition is valid. This time may be precise (e.g. 1997.0 for IRTF97) or merely a year (e.g. 1983 for NAD83). In the latter case, the epoch usually refers to the year in which a major recalculation of the geodetic control network, underlying the datum, was executed or initiated. An old datum can remain valid after a new datum is defined. Alternatively, a datum may be superseded by a later datum, in which case the realization epoch for the new datum defines the upper limit for the validity of the superseded datum. 
		
	
	
	 
	
	 
		 
			 An image datum defines the origin of an image coordinate reference system, and is used in a local context only. For more information, see OGC Abstract Specification Topic 2. 
		
		 
			 
				 
					 
				
			
		
	
	
	 
	
	 
		 
			 Specification of the way an image grid is associated with the image data attributes. 
		
		 
			 
				 
					 
						 Reference to a source of information specifying the values and meanings of all the allowed string values for this PixelInCellType. 
					
				
			
		
	
	
	 
		 
			 Association to an image datum, either referencing or containing the definition of that datum. 
		
		 
			 
		
		 
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/dictionary.xsd
 
	 
		 
		 Subset of dictionary.xsd for WCS 1.2 profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2007-04-23
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	
	 
	
	 
		 
			 A definition, which can be included in or referenced by a dictionary. In this extended type, the inherited "description" optional element can hold the definition whenever only text is needed. The inherited "name" elements can provide one or more brief terms for which this is the definition. The inherited "metaDataProperty" elements can be used to reference or include more information about this definition.  
The gml:id attribute is required - it must be possible to reference this definition using this handle.  
		
		 
			 
				 
					 
					 
				
				 
			
		
	
	
	 
	
	 
		 
			 A non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional "description" element can be used for a description of this dictionary. The inherited optional "name" element can be used for the name(s) of this dictionary. The inherited "metaDataProperty" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. 
		
		 
			 
				 
					 
						 
							 
								 An entry in this dictionary. The content of an entry can itself be a lower level dictionary or definition collection. This element follows the standard GML property model, so the value may be provided directly or by reference. Note that if the value is provided by reference, this definition does not carry a handle (gml:id) in this context, so does not allow external references to this specific entry in this context. When used in this way the referenced definition will usually be in a dictionary in the same XML document. 
							
						
					
				
			
		
	
	
	 
	
	 
		 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
			 An entry in a dictionary of definitions. An instance of this type contains one definition object. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. 
		
		 
			 
				 
					 This element in a dictionary entry contains the actual definition. 
				
			
		
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/geometryBasic0d1d.xsd
 
	 
		 
		 Subset of geometryBasic0d1d.xsd for WCS 1.2 profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2007-04-28 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
		 
			 The "_Geometry" element is the abstract head of the substituition group for all geometry elements of GML 3. This includes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction of AbstractGeometryType and must be directly or indirectly in the substitution group of "_Geometry".
		
	
	
	 
		 
			 All geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may have an identifying attribute ("gml:id"), a name (attribute "name") and a description (attribute "description"). It may be associated with a spatial reference system (attribute "srsName"). The following rules shall be adhered: - Every geometry type shall derive from this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the substitution group of _Geometry.
		
		 
			 
				 
			
		
	
	
	 
		 
			 Optional reference to the CRS used by this geometry.
		
		 
			 
				 In general this reference points to a CRS instance of gml:CoordinateReferenceSystemType (see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the location the URI points to.
			
		
	
	
	 
		 
			 The "_GeometricPrimitive" element is the abstract head of the substituition group for all (pre- and user-defined) geometric primitives.
		
	
	
	 
		 
			 This is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not decomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their coordinate tuples.
		
		 
			 
		
	
	
	
	
	 
	
	 
		 
			 DirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since DirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the "srsName" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a CRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.
		
		 
			 
				 
			
		
	
	
	 
	
	 
		 
			 DirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate reference system (CRS).
		
		 
			 
				 
			
		
	
	
	
	
	 
	
	 
		 
			 Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
		
		 
			 
				 
				 
			
		
		 
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/geometryBasic2d.xsd
 
	 
		 geometryBasic2d.xsd
		 Subset of geometryBasic2d.xsd for WCS 1.2 profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2007-04-23 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	
	
	 
		 
			 The "_Surface" element is the abstract head of the substituition group for all (continuous) surface elements.
		
	
	
	 
		 
			 An abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.
		
		 
			 
				 
					 
				
			
		
	
	
	
	
	 
		 
			 The "_Ring" element is the abstract head of the substituition group for all closed boundaries of a surface patch.
		
	
	
	 
		 
			 An abstraction of a ring to support surface boundaries of different complexity.
		
		 
			 
		
	
	
	 
		 
			 A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.
		
	
	
	 
		 
			 Encapsulates a ring to represent the surface boundary property of a surface.
		
		 
			 
		
	
	
	 
	
	 
		 
			 A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.
		
		 
			 
				 
					 
						 
							 The "posList" element provides a compact way to specifiy the coordinates of the control points, assuming all control points are in the same coordinate reference systems. The number of direct positions in the list must be at least four.
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/gmlBase.xsd
 
	 
		 
		 Subset of gmlBase.xsd for WCS 1.2 profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2007-04-23 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	 
	
	
	
	
	
	 
		 
			 This abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of "class" elements declared in other GML schemas.
		
	
	
	
	 
		 
			 Global element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value
		
	
	
	 
		 
			 This content model group makes it easier to construct types that derive from AbstractGMLType and its descendents "by restriction".  A reference to the group saves having to enumerate the standard object properties.
		
		 
			 
			 
				 
					 Multiple names may be provided.  These will often be distinguished by being assigned by different authorities, as indicated by the value of the codeSpace attribute.  In an instance document there will usually only be one name per authority.
				
			
		
	
	
	 
		 
			 All complexContent GML elements are directly or indirectly derived from this abstract supertype to establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. Elements in this hierarchy may have an ID and are thus referenceable.
		
		 
			 
		
		 
	
	
	
	
	 
		 
			 A pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.
		
		 
	
	
	
	 
		 
			 Database handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.
		
	
	
	 
		 
			 Attribute group used to enable property elements to refer to their value remotely. It contains the simple link components from xlinks.xsd, with all members optional, and the remoteSchema attribute, which is also optional.  These attributes can be attached to any element, thus allowing it to act as a pointer. The 'remoteSchema' attribute allows an element  that carries link attributes to indicate that the element is declared  in a remote schema rather than by the schema that constrains the current document instance.
		
		 
	
	
	 
		 
			 Label for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.
		
	
	
	 
		 
			 Contains a simple text description of the object.
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/referenceSystems.xsd
 
	 
		 
		 Subset of referenceSystems.xsd for WCS 1.2 profile. Primary editor: Arliss Whiteside. Last updated 2007-04-23. 
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
	
	 
		 
			 Basic encoding for reference system objects, simplifying and restricting the DefinitionType as needed.
		
		 
			 
				 
					 
				
				 
			
		
	
	
	 
		 
			 The name by which this reference system is identified.
		
	
	
	 
		 
			 Description of a spatial and/or temporal reference system used by a dataset.
		
		 
			 
				 
					 
						 
							 Set of alterative identifications of this reference system. The first srsID, if any, is normally the primary identification code, and any others are aliases.
						
					
					 
						 
							 Comments on or information about this reference system, including source information.
						
					
					 
					 
				
			
		
	
	
	 
		 
			 An identification of a reference system.
		
	
	
	 
		 
			 Association to a reference system, either referencing or containing the definition of that reference system.
		
		 
			 
		
		 
	
	
	 
		 
			 Abstract coordinate reference system, usually defined by a coordinate system and a datum. This abstract complexType shall not be used, extended, or restricted, in an Application Schema, to define a concrete subtype with a meaning equivalent to a concrete subtype specified in this document.
		
	
	
	 
		 
			 Association to a CRS abstract coordinate reference system, either referencing or containing the definition of that CRS.
		
		 
			 
		
		 
	
	
	
	 
		 
			 An identification of a CRS object. The first use of the IdentifierType for an object, if any, is normally the primary identification code, and any others are aliases.
		
		 
			 
				 
					 The code or name for this Identifier, often from a controlled list or pattern defined by a code space. The optional codeSpace attribute is normally included to identify or reference a code space within which one or more codes are defined. This code space is often defined by some authority organization, where one organization may define multiple code spaces. The range and format of each Code Space identifier is defined by that code space authority. Information about that code space authority can be included as metaDataProperty elements which are optionally allowed in all CRS objects.
				
			
			 
			 
				 
					 Remarks about this code or alias.
				
			
		
	
	
	 
		 
			 Identifier of the version of the associated codeSpace or code, as specified by the codeSpace or code authority. This version is included only when the "code" or "codeSpace" uses versions. When appropriate, the version is identified by the effective date, coded using ISO 8601 date format.
		
	
	
	 
		 
			 Information about this object or code. 
			 Restricted to only allow a text string, as done in GML 3.2. 
		
	
	
	 
		 
			 Description of domain of usage, or limitations of usage, for which this CRS object is valid.
		
	
	
	 
		 
			 Area or region in which this CRS object is valid.
		
	
	
	 
		 
			 Information about the spatial, vertical, and/or temporal extent of a reference system object. Constraints: At least one of the elements "description", "boundingBox", "boundingPolygon", "verticalExtent", and temporalExtent" must be included, but more that one can be included when appropriate. Furthermore, more than one "boundingBox", "boundingPolygon", "verticalExtent", and/or temporalExtent" element can be included, with more than one meaning the union of the individual domains.
		
		 
			 
				 
					 Description of spatial and/or temporal extent of this object.
				
			
			 
				 
					 Geographic domain of this reference system object.
				
				 
					 
						 Unordered list of bounding boxes (or envelopes) whose union describes the spatial domain of this object.
					
				
				 
					 
						 Unordered list of bounding polygons whose union describes the spatial domain of this object.
					
				
			
			 
				 
					 Unordered list of vertical intervals whose union describes the spatial domain of this object.
				
			
		
	
	
	 
		 
			 A bounding box (or envelope) defining the spatial domain of this object.
		
	
	
	 
		 
			 A bounding polygon defining the horizontal spatial domain of this object.
		
	
	
	 
		 
			 An interval defining the vertical spatial domain of this object.
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/temporal.xsd
 
	 
		 
		 Subset of temporal.xsd for WCS 1.2 profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2007-04-23.
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	
	
	
	 
		 
			 Direct representation of a temporal position
		
	
	
	 
		 
			 Direct representation of a temporal position. 
      Indeterminate time values are also allowed, as described in ISO 19108. The 
      indeterminatePosition attribute can be used alone or it can qualify a specific value for temporal 
      position (e.g. before 2002-12, after 1019624400). 
      For time values that identify position within a calendar, the calendarEraName attribute provides 
      the name of the calendar era to which the date is referenced (e.g. the Meiji era of the 
      Japanese calendar).
		
		 
			 
				 
				 
				 
			
		
	
	
	 
		 
			 The ISO 19108:2002 hierarchy of subtypes for temporal position are  
      collapsed by defining a union of XML Schema simple types for indicating temporal position  
      relative to a specific reference system. 
      
      Dates and dateTime may be indicated with varying degrees of precision.  
      dateTime by itself does not allow right-truncation, except for fractions of seconds. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      
      An ordinal position may be referenced via URI identifying the definition of an ordinal era.  
      
      A time coordinate value is indicated as a decimal (e.g. UNIX time, GPS calendar).
		
		 
	
	
	 
		 
			 Calendar dates may be indicated with varying degrees of precision, 
      using year, year-month, date. 
      When used with non-Gregorian calendars based on years, months, days, 
      the same lexical representation should still be used, with leading zeros added if the 
      year value would otherwise have fewer than four digits.  
      time is used for a position that recurs daily (see clause 5.4.4.2 of ISO 19108:2002).
		
		 
	
	
	 
		 
			 This enumerated data type specifies values for indeterminate positions.
		
		 
			 
			 
			 
			 
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/GMLprofileForWCS/units.xsd
 
	 
		 
		 Subset of units.xsd for WCS 1.2 profile. Primary editor: Primary editor: Arliss Whiteside. Last updated 2007-04-23.
		Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved.
	
	
	 
	
	 
	
	 
		 
			 Reference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.
		
		 
		 
			 
				 Reference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the "#" symbol should be used, followed by a text abbreviation of the unit name. However, the "#" symbol may be optional, and still may be interpreted as a reference.
			
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/interpolationMethods.xml
 
	
	 This dictionary specifies the standard values fo interpolation types specified in the WCS 1.1 specification, based on ISO 19123. In addition, this dictionary specifies definition URNs in the "ogc URN namespace for these interpolation types. 
	 Interpolation methods standard values
	
	 
		 
			 Identifier of nearest neighbour interpolation defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. 
			 nearest
			 urn:ogc:def:interpolation:OGC:1.0:nearest
		
	
	
	 
		 
			 Identifier of bilinear interpolation defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. ISO 19123 specifies two-dimensional bilinear, biquadratic, and bicubic interpolation types. When also interpolating in the elevation dimension of a 3D CRS, the 3D extensions of these interpolation types shall be used. 
			 linear
			 urn:ogc:def:interpolation:OGC:1.0:linear
		
	
	
	 
		 
			 Identifier of biquadratic interpolation defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. ISO 19123 specifies two-dimensional bilinear, biquadratic, and bicubic interpolation types. When also interpolating in the elevation dimension of a 3D CRS, the 3D extensions of these interpolation types shall be used. 
			 quadratic
			 urn:ogc:def:interpolation:OGC:1.0:quadratic
		
	
	
	 
		 
			 Identifier of bicubic interpolation defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. ISO 19123 specifies two-dimensional bilinear, biquadratic, and bicubic interpolation types. When also interpolating in the elevation dimension of a 3D CRS, the 3D extensions of these interpolation types shall be used. 
			 cubic
			 urn:ogc:def:interpolation:OGC:1.0:cubic
		
	
	
	 
		 
			 Identifier that no interpolation is available; requests must be for locations that are among the original domain locations. 
			 none
			 urn:ogc:def:interpolation:OGC:1.0:none
		
	
	
	 
		 
			 Identifier that nulls in the input grid(s) have no effect on the interpolated value; resampling uses only non-null valued cells. 
			 full
			 urn:ogc:def:nullResistance:OGC:1.0:full
		
	
	
	 
		 
			 Identifier that interpolated value is Null if any one input value is Null. 
			 zero
			 urn:ogc:def:nullResistance:OGC:1.0:zero
		
	
	
	 
		 
			 Identifier that interpolated value is Null if half or more of the input values are Null. 
			 half
			 urn:ogc:def:nullResistance:OGC:1.0:half
		
	
	
	 
		 
			 Identifier that resampling treats nulls differently from any method described above. 
			 other
			 urn:ogc:def:nullResistance:OGC:1.0:other
		
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/ReadMe.txt
The XML Schema Documents for the OpenGIS® Web Services (OWS) Common
Implementation Specification version 1.0.0 [OGC 05-008] that are modified for use in WCS 1.1 have been moved into this WCS/1.1 directory and modified to use the www.opengis.net/wcs/1.1.0/ows namespace identifier.

The following XML Schema Document is essentially unchanged:
	owsGetCapabilities.xsd

The following XML Schema Documents are changed some:
	owsServiceIdentification.xsd
	owsOperationsMetadata.xsd
	owsDataIdentification.xsd

The following XML Schema Documents are added by WCS 1.1:
	owsDomainType.xsd
	owsManifest.xsd
	owsCoverages.xsd
	owsInterpolationMethod.xsd


Arliss Whiteside, 2006-10-12
Steven Keens, 2006-10-11





07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsAll.xsd
 
	 
		 wcsAll.xsd 2007-04-28
		 This XML Schema Document includes, directly and indirectly, all the XML Schema Documents defined by the OGC Web Coverage Service (WCS). 
			Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	 
	 




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsCommon.xsd
 
	 
		 wcsContents.xsd 2007-04-19
		 
			 http://schemas.opengis.net/wcs/1.1.0/gml4wcs.xsd
		
		 This XML Schema Document encodes the elements and types that are shared by multiple WCS operations. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	
	 
		 
			 XML encoded WCS operation request base, for all operations except GetCapabilities. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
		 
			 
				 Service type identifier, where the value is the OWS type abbreviation. For WCS operation requests, the value is "WCS". 
			
		
		 
			 
				 Specification version for WCS version and operation. See Version parameter Subclause 7.3.1 of OWS Common for more information. 
			
		
	
	
	 
	
	 
		 
			 Unambiguous identifier. Although there is no formal restriction on characters included, these identifiers shall be directly usable in GetCoverage operation requests for the specific server, whether those requests are encoded in KVP or XML. Each of these encodings requires that certain characters be avoided, encoded, or escaped (TBR). 
		
		 
			 
		
	
	
	 
		 
			 List of time positions and periods. The time positions and periods should be ordered from the oldest to the newest, but this is not required. 
		
		 
			 
			 
		
	
	
	 
		 
			 This is a variation of the GML TimePeriod, which allows the beginning and end of a time-period to be expressed in short-form inline using the begin/endPosition element, which allows an identifiable TimeInstant to be defined simultaneously with using it, or by reference, using xlinks on the begin/end elements. 
			 (Arliss) What does this mean? What do the TimeResolution and "frame" mean? 
		
		 
			 
			 
			 
		
		 
	
	
	 
		 
			 
      Base type for describing temporal length or distance. The value space is further 
      constrained by subtypes that conform to the ISO 8601 or ISO 11404 standards.
      
		
		 
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsContents.xsd
 
	 
		 wcsContents.xsd v1.1.0 2007-04-22
		 This XML Schema Document encodes the Contents section of a GetCapabilities operation response used by the OGC Web Coverage Service (WCS). 
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Contents section of WCS service metadata (or Capabilities) XML document. For the WCS, these contents are brief metadata about the coverages available from this server, or a reference to another source from which this metadata is available. 
		
		 
			 
				 
					 
						 Unordered list of brief metadata describing top-level coverages available from this WCS server. This list shall be included unless one or more OtherSources are referenced and all this metadata is available from those sources. 
					
				
				 
					 
						 Unordered list of references to coordinate reference systems in which GetCoverage operation requests and responses may be expressed. This list of SupportedCRSs shall be the union of all of the supported CRSs in all of the nested CoverageSummaries. Servers should include this list since it reduces the work clients need to do to determine that they can interoperate with the server. There may be a dependency of SupportedCRS on SupportedFormat, as described in Subclause 10.3.5. 
					
				
				 
					 
						 Unordered list of identifiers of formats in which GetCoverage operation response may be encoded. This list of SupportedFormats shall be the union of all of the supported formats in all of the nested CoverageSummaries. Servers should include this list since it reduces the work clients need to do to determine that they can interoperate with the server. There may be a dependency of SupportedCRS on SupportedFormat, as described in clause 10.3.5. 
					
				
				 
					 
						 Unordered list of references to other sources of coverage metadata. This list shall be included unless one or more CoverageSummaries are included. 
					
				
			
		
	
	
	 
	
	 
		 
			 Brief metadata describing one or more coverages available from this WCS server. 
		
		 
			 
				 
					 
						 
							 Optional unordered list of more metadata elements about this coverage. A list of metadata elements for CoverageSummaries could be specified in a WCS Application Profile. 
						
					
					 
						 
							 Unordered list of minimum bounding rectangles surrounding coverage data, using WGS 84 CRS with decimal degrees and longitude before latitude. These bounding boxes shall also apply to lower-level CoverageSummaries under this CoverageSummary, unless other bounding boxes are specified. 
						
					
					 
						 
							 Unordered list of references to CRSs in which GetCoverage operation requests and responses may be expressed. These CRSs shall also apply to all lower-level CoverageSummaries under this CoverageSummary, in addition to any other CRSs referenced. 
						
					
					 
						 
							 Unordered list of identifiers of formats in which GetCoverage operation responses may be encoded. These formats shall also apply to all lower-level CoverageSummaries under this CoverageSummary, in addition to any other formats identified. 
						
					
					 
						 
							 Each coverage summary shall contain one or more lower-level CoverageSummaries and/or one identifier. 
						
						 
							 
								 
									 Unordered list of lower-level CoverageSummaries under this CoverageSummary. 
								
							
							 
								 
									 Optional identifier of this coverage. This identifier shall be included only when this coverage can be accessed by the GetCoverage operation, and the CoverageDescription can be accessed by the DescribeCoverage operation. This identifier must be unique for this WCS server. 
								
							
						
						 
							 
								 Identifier of this coverage. This identifier must be unique for this WCS server. 
							
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsDescribeCoverage.xsd
 
	 
		 wcsDescribeCoverage.xsd 2007-04-23
		 
			 http://schemas.opengis.net/wcs/1.2.0/gml4wcs.xsd
		
		 This XML Schema Document defines the DescribeCoverage operation request and response XML elements and types, used by the OGC Web Coverage Service (WCS). 
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	 
	 
	 
	
	 
		 
			 Request to a WCS to perform the DescribeCoverage operation. This operation allows a client to retrieve descriptions of one or more coverages. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
						 
							 
								 Unordered list of identifiers of desired coverages. A client can obtain identifiers by a prior GetCapabilities request, or from a third-party source. 
							
						
					
				
			
		
	
	
	 
		 
			 Response from a WCS DescribeCoverage operation, containing one or more coverage descriptions. 
		
		 
			 
				 
			
		
	
	
	 
		 
			 Full description of one coverage available from a WCS server. This description shall include sufficient information to allow all valid GetCoverage operation requests to be prepared by a WCS client. 
		
		 
			 
				 
					 
						 
							 Unambiguous identifier of this coverage, unique for this WCS server. 
						
					
					 
						 
							 Optional unordered list of more metadata elements about this coverage. A list of metadata elements for CoverageDescriptions could be specified in a WCS Application Profile. 
						
					
					 
					 
					 
						 
							 Unordered list of references to all the coordinate reference systems in which GetCoverage operation requests and responses can be encoded for this coverage. 
						
					
					 
						 
							 Unordered list of identifiers of all the formats in which GetCoverage operation responses can be encoded for this coverage. 
						
					
				
			
		
	
	
	 
		 
			 Definition of the spatial-temporal domain of a coverage. The Domain shall include a SpatialDomain (describing the spatial locations for which coverages can be requested), and should included a TemporalDomain (describing the time instants or intervals for which coverages can be requested). 
		
		 
			 
			 
				 
					 Although optional, the TemporalDomain should be included whenever a value is known or a useful estimate is available. 
				
			
		
	
	
	 
		 
			 Definition of the spatial domain of a coverage. 
		
		 
			 
				 
					 Unordered list of bounding boxes whose union covers the spatial domain of this coverage. One bounding box could simply duplicate the information in the ows:WGS84BoundingBox in the CoverageSummary; but the intent is to describe the spatial domain in more detail (e.g., in several different CRSs, or several rectangular areas instead of one overall bounding box). This bounding box shall use the ImageCRS of the stored coverage when that coverage is not georeferenced and not georectified. Notice that WCS use of this BoundingBox is further specified in specification Subclause 7.5. 
				
			
			 
				 
					 Definition of GridCRS of the stored coverage. This GridCRS shall be included when this coverage is georectified and is thus stored in a GridCRS. The definition of the GridCRS of a stored georectified coverage is included to inform clients of this GridCRS, for possible use in a GetCoverage operation request. 
				
			
			 
				 
					 Georeferencing coordinate transformation for unrectified coverage, which should be included when available for a coverage that is georeferenced but not georectified. To support use cases 4, 5, 9, and/or 10 specified in Annex H, a WCS server needs to use a georeferencing coordinate transformation for a georeferenced but not georectified coverage. That georeferencing transformation can be specified as a Transformation, or a ConcatenatedOperation that includes at least one Transformation. However, a WCS server may not support those use cases, not use a georeferencing transformation specified in that manner, or not make that transformation available to clients. 
				
			
			 
				 
					 Association to ImageCRS of the stored coverage. This ImageCRS shall be included when this coverage is an image. The ImageCRS for an image coverage is referenced to inform clients of the ImageCRS, for possible use in a GetCoverage operation request. The definition of this ImageCRS shall be included unless the association reference URI completely specifies that ImageCRS (such as by using the URL of the definition or using a suitable URN). 
				
			
			 
				 
					 Unordered list of polygons whose union covers the spatial domain of this coverage. Polygons are particularly useful for areas that are poorly approximated by a BoundingBox (such as satellite image swaths, island groups, other non-convex areas). 
				
			
		
	
	
	 
		 
			 Association to an image coordinate reference system, either referencing or containing the definition of that reference system. 
		
		 
			 
		
		 
	
	
	 
		 
			 Definition of the temporal domain of a coverage, the times for which valid data are available. The times should to be ordered from the oldest to the newest. 
		
	
	
	 
		 
			 Defines the fields (categories, measures, or values) in the range records available for each location in the coverage domain. Each such field may be a scalar (numeric or text) value, such as population density, or a vector (compound or tensor) of many similar values, such as incomes by race, or radiances by wavelength. Each range field is typically an observable whose meaning and reference system are referenced by URIs. 
		
		 
			 
				 
					 Unordered list of the Fields in the Range of a coverage. 
				
			
		
	
	
	 
		 
			 Description of an individual field in a coverage range record. 
		
		 
			 
				 
					 
						 
							 Identifier of this Field. These field identifiers shall be unique in one CoverageDescription. 
						
					
					 
						 
							 Further definition of this field, including meaning, units, etc. In this Definition, the AllowedValues should be used to encode the extent of possible values for this field, excluding the Null Value. If the range is not known, AnyValue should be used. 
						
					
					 
						 
							 Unordered list of the values used when valid Field values are not available for whatever reason. The coverage encoding itself may specify a fixed value for null (e.g. “–99999” or “N/A”), but often the choice is up to the provider and must be communicated to the client outside the coverage itself. Each null value shall be encoded as a string. The optional codeSpace attribute can reference a definition of the reason why this value is null. 
						
					
					 
						 
							 Spatial interpolation method(s) that server can apply to this field. One of these interpolation methods shall be used when a GetCoverage operation request requires resampling. When the only interpolation method listed is ‘none’, clients may only retrieve coverages from this coverage in its native CRS at its native resolution. 
						
					
					 
						 
							 Unordered list of the axes in a vector field for which there are Field values. This list shall be included when this Field has a vector of values. Notice that the axes can be listed here in any order; however, the axis order listed here shall be used in the KVP encoding of a GetCoverage operation request (TBR). 
						
					
				
			
		
	
	
	 
		 
			 Definition of one axis in a field for which there are a vector of values. 
			 This type is largely a subset of the ows:DomainType as needed for a range field axis. 
		
		 
			 
				 
					 
					 
						 
							 Meaning metadata, which should be referenced for this axis. 
						
					
					 
						 
							 Data type metadata, which may be referenced for this axis. 
						
					
					 
						 
							 Unit of measure, which should be included when this axis has units or a more complete reference system. 
						
					
					 
						 
							 Optional unordered list of other metadata elements about this axis. A list of required and optional other metadata elements for this quantity can be specified in a WCS Application Profile. 
						
					
				
				 
					 
						 Name or identifier of this axis. 
					
				
			
		
	
	
	 
		 
			 List of all the available (valid) key values for this axis. For numeric keys, signed values should be ordered from negative infinity to positive infinity. 
		
		 
			 
				 
					 
						 Valid key value for this axis. There will normally be more than one key value for an axis, but one is allowed for special circumstances. 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsGetCapabilities.xsd
 
	 
		 wcsGetCapabilities.xsd v1.1.0 2007-04-22
		 This XML Schema Document encodes the GetCapabilities operation request and response used by the OGC Web Coverage Service (WCS). 
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Request to a WCS server to perform the GetCapabilities operation. This operation allows a client to retrieve a Capabilities XML document providing metadata for the specific WCS server. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 XML encoded WCS GetCapabilities operation response. The Capabilities document provides clients with service metadata about a specific service instance, including metadata about the coverages served. If the server does not implement the updateSequence parameter, the server shall always return the Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional sections shall be included or not depending on the actual value of the Contents parameter in the GetCapabilities operation request. 
		
		 
			 
				 
					 
						 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsGetCoverage.xsd
 
	 
		 wcsGetCoverage.xsd 2007-04-22
		 
			 http://schemas.opengis.net/wcs/1.2.0/gml4wcs.xsd
		
		 This XML Schema Document defines the GetCoverage operation request elements and types, for the OGC Web Coverage Service (WCS). 
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	 
	
	 
		 
			 Request to a WCS to perform the GetCoverage operation. This operation allows a client to retrieve a subset of one coverage. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
						 
							 
								 Identifier of the coverage that this GetCoverage operation request shall draw from. 
							
						
						 
						 
							 
								 Optional selection of a subset of the coverage's range. 
							
						
						 
					
				
			
		
	
	
	 
		 
			 Asks for the GetCoverage response to be expressed in a particular CRS and encoded in a particular format. Can also ask for the response coverage to be stored remotely from the client at a URL, instead of being returned in the operation response. 
		
		 
			 
				 
					 Optional definition of the GridCRS in which the GetCoverage response shall be expressed. When this GridCRS is not included, the output shall be in the ImageCRS of the stored image, as identified in the CoverageDescription. 
				
			
		
		 
			 
				 Identifier of the format in which GetCoverage response shall be encoded. This identifier value shall be among those listed as SupportedFormats in the DescribeCoverage operation response. 
			
		
		 
			 
				 Specifies if the output coverage should be stored, remotely from the client at a network URL, instead of being returned with the operation response. This parameter should be included only if this operation parameter is supported by server, as encoded in the OperationsMetadata section of the Capabilities document. 
			
		
	
	
	
	
	 
		 
			 Definition of the desired subset of the domain of the coverage. Contains a spatial BoundingBox and optionally a TemporalSubset. 
		
		 
			 
				 
					 Definition of desired spatial subset of a coverage domain. When the entire spatail extent of this coverage is desired, this BoundingBox can be copied from the Domain part of the Coverage Description. However, the entire spatial extent may be larger than a WCS server can output, in which case the server shall respond with an error message. Notice that WCS use of this BoundingBox is further specified in specification Subclause 7.5. 
				
			
			 
				 
					 Optional definition of desired temporal subset of a coverage domain. If this data structure is omitted, the entire Temporal domain shall be output. 
				
			
		
	
	
	 
		 
			 Definition of subset of coverage temporal domain. 
		
	
	
	
	
	 
		 
			 Selection of desired subset of the coverage's range fields, (optionally) the interpolation method applied to eachfield, and (optionally) field subsets. 
		
		 
			 
				 
					 Unordered list of one or more desired subsets of range fields. TBD. 
				
				 
					 
						 
							 
								 Identifier of this requested Field. This identifier must be unique for this Coverage. 
							
						
						 
							 
								 Optional identifier of the spatial interpolation type to be applied to this range field. This interpolation type shall be one that is identified for this Field in the CoverageDescription. When this parameter is omitted, the interpolation method used shall be the default method specified for this Field, if any. 
							
						
						 
							 
								 Unordered list of zero or more axis subsets for this field. TBD. 
							
						
					
				
			
		
	
	
	 
		 
			 List of selected Keys for this axis, to be used for selecting values in a vector range field. TBD. 
		
		 
			 
				 
					 
						 Identifier of this Axis. This identifier must be unique for this Field. 
					
				
				 
					 
						 Unordered list of (at least one) Key, to be used for selecting values in a range vector field. The Keys within this list shall be unique. TBD. 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsGridCRS.xsd
 
	 
		 wcsGridCRS.xsd 2007-04-22
		 
			 http://schemas.opengis.net/wcs/1.2.0/gml4wcs.xsd
		
		 This XML Schema Document defines a GridCRS element that is much simpler but otherwise similar to a specialization of gml:DerivedCRS. This GridCRS roughly corresponds to the CV_RectifiedGrid class in ISO 19123, without inheritance from CV_Grid. This GridCRS is designed for use by the OGC Web Coverage Service (WCS) and elsewhere. 
		This XML Schema Document is not a GML Application Schema, although it uses the GML profile for WCS 1.2. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
	
	 
		 
			 Definition of a coordinate reference system (CRS) for a quadrilateral grid that is defined in another CRS, where this grid is defined by its coordinate Conversion from the other CRS. This GridCRS is not a ProjectedCRS. However, like a ProjectedCRS, the coordinate system used is Cartesian. This GridCRS can use any type of baseCRS, including GeographicCRS, ProjectedCRS, ImageCRS, or a different GridCRS. 
			 This GridCRS is a simplification and specialization of a gml:DerivedCRS. All elements and attributes not required to define this GridCRS are optional. 
		
		 
			 
			 
			 
				 
					 When this GridType reference is omitted, the OperationMethod shall be the most commonly used method in a GridCRS, which is referenced by the URN "urn:ogc:def:method:WCS:1.1:2dSimpleGrid". 
				
			
			 
				 
					 When this GridOrigin position is omitted, the origin shall be the most commonly used origin in a GridCRS used in the output part of a GetCapabilities operation request, namely "0 0".  
				
			
			 
			 
				 
					 When this GridCS reference is omitted, the GridCS shall be the most commonly used grid coordinate system, which is referenced by the URN "urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS". 
				
			
		
		 
	
	
	 
		 
			 Association to the coordinate reference system (CRS) in which this Grid CRS is specified. A GridCRS can use any type of baseCRS, including GeographicCRS, ProjectedCRS, ImageCRS, or a different GridCRS. 
			 For a GridCRS, this association is limited to a remote definition of the baseCRS (not encoded in-line). 
		
	
	
	 
		 
			 Association to the OperationMethod used to define this Grid CRS. This association defaults to an association to the most commonly used method, which is referenced by the URN "urn:ogc:def:method:WCS:1.1:2dSimpleGrid". 
			 For a GridCRS, this association is limited to a remote definition of a grid definition Method (not encoded in-line) that encodes a variation on the method implied by the CV_RectifiedGrid class in ISO 19123, without the inheritance from CV_Grid. 
		
	
	
	 
		 
			 Coordinates of the grid origin position in the GridBaseCRS of this GridCRS. 
			 This element is adapted from gml:pos. 
		
	
	
	 
		 
			 Two or more grid position offsets from the grid origin in the GridBaseCRS of this GridCRS. Example: For the grid2dIn2dCRs OperationMethod, this Offsets element shall contain four values, the first two values shall specify the grid offset for the first grid axis in the 2D base CRS, and the second pair of values shall specify the grid offset for the second grid axis. In this case, the middle two values are zero for un-rotated and un-skewed grids. 
		
	
 	
	 
		 
			 Association to the (Cartesian) grid coordinate system used by this Grid CRS. In this use of a (Cartesian) grid coordinate system, the grid positions shall be in the centers of the image or other grid coverage values (not between the grid values), as specified in ISO 19123. Also, the grid point indices at the origin shall be 0, 0 (not 1,1), as specified in ISO 19123. 
			 For a GridCRS, this association is limited to a remote definition of the GridCS (not encoded in-line). 
		
	
	




07-055r1 WCTS Draft Folder/wcs/1.2.0/wcsInterpolationMethod.xsd
 
	 
		 wcsInterpolationMethod.xsd 2007-04-22
		 This XML Schema Document defines interpolation method elements and types, used by the OGC Web Coverage Service (WCS) version 1.2. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	
	 
		 
			 List of the interpolation method(s) that can uses when continuous grid coverage resampling is needed. 
		
		 
			 
				 
					 
						 Unordered list of identifiers of spatial interpolation methods. 
					
				
				 
					 
						 Identifier of interpolation method that will be used if the client does not specify one. Should be included when a default exists and is known. 
						 (Arliss) Can any string be used to identify an interpolation method in a KVP encoded Get Coverage operation request? 
					
				
			
		
	
	
	 
		 
			 Identifier of a spatial interpolation method applicable to continuous grid coverages, plus the optional "null Resistance" parameter. 
		
		 
			 
				 
					 
						 Identifier of how the server handles null values when spatially interpolating values in this field using this interpolation method. This identifier shall be selected from the referenced dictionary. This parameter shall be omitted when the rule for handling nulls is unknown. 
					
				
			
		
	
	
	 
		 
			 Identifier of an interpolation method applicable to continuous grid coverages. The string in this type shall be one interpolation type identifier string, selected from the referenced dictionary. 
			 Adapts gml:CodeWithAuthorityType from GML 3.2 for this WCS purpose, allowing the codeSpace to be omitted but providing a default value for the standard interpolation methods defined in Annex C of ISO 19123: Geographic information - Schema for coverage geometry and functions. 
		
		 
			 
				 
					 
						 Reference to a dictionary that specifies allowed values for interpolation method identifier strings and nullResistance identifier strings. This reference defaults to the standard interpolation methods dictionary specified in WCS 1.1.0. 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/coverageTypes.xml
 
	
	 This dictionary specifies the standard values for coverage types specified in the WCTS 0.0 specification, based on ISO 19123. In addition, this dictionary specifies definition URNs in the "ogc URN namespace for these coverage types. 
	 Coverage types standard values
	
	 
		 
			 Type of 2D coverage with a domain consisting of the set of polygons that each enclose one of a set of points in a plane so as to include all positions that are closer to that point than to any other point in the set. 
			 QuadrilateralGrid
			 urn:ogc:def:coverageType:OGC:0.0:ThiessenPolygon
		
	
	
	 
		 
			 Type of 2D coverage with a domain consisting of the set of points defined by the intersections of two sets of straight lines in one plane, in which the lines of each set intersect lines of other set in a systematic way. 
			 QuadrilateralGrid
			 urn:ogc:def:coverageType:OGC:0.0:QuadrilateralGrid
		
	
	
	 
		 
			 Abbreviation for a QuadrilateralGrid coverage as described above. 
			 GRID
			 urn:ogc:def:coverageType:OGC:0.0:GRID
		
	
	
	 
		 
			 Type of 2D coverage with a domain consisting of the network of hexagons centred on a set of grid points in a plane, using interpolation between the centres of the hexagons surrounding the grid points. 
			 HexagonalGrid
			 urn:ogc:def:coverageType:OGC:0.0:HexagonalGrid
		
	
	
	 
		 
			 Type of 2D coverage with a domain consisting of the set of triangles which partition the convex hull of a set of points in a plane into a computationally unique set of non-overlapping triangles, with each triangle formed by three of the points. 
			 TriangulatedIrregularNetwork
			 urn:ogc:def:coverageType:OGC:0.0:TriangulatedIrregularNetwork
		
	
	
	 
		 
			 Abbreviation for triangulated irregular network described above. 
			 TIN
			 urn:ogc:def:nullResistance:OGC:0.0:TIN
		
	
	
	 
		 
			 Type of 1D coverage with a domain consisting of a set of curves that includes all the positions in all the curves in a set of curves. 
			 SegmentedCurve
			 urn:ogc:def:nullResistance:OGC:0.0:SegmentedCurve
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Capabilities Examples/exampleCapabilities1.xml
 
	
	 
		 Web Coordinate Transformation Service
		 Network service for transforming coordinates from one CRS to another
		 
			 Coordinate Reference System
			 transformation
			 conversion
			 coordinate operation
		
		 OGC WCTS
		 1.0.0
		 NONE
		 NONE
	
	 
		 lat/lon
		 
		 
			 Andreas Poth
			 Senior Software Engineer
			 
				 
					 ++49 228 732838
					 ++49 228 732153
				
				 
					 Meckenheimer Allee 176
					 Bonn
					 NRW
					 53115
					 Germany
					 poth@lat-lon.de
				
			
		
	
	 
		 
			 
				 
					 
				
			
		
		 
			 
				 
					 
				
			
		
		 
			 
				 
					 
				
			
		
		 
			 
				 
					 
				
			
		
	
	 
		 urn:ogc:def:coordinateOperation:EPSG::WWWW
		 urn:ogc:def:coordinateOperation:EPSG::XXXX
		 urn:ogc:def:coordinateOperation:EPSG::YYYY
		 urn:ogc:def:coordinateOperation:EPSG::ZZZZ
		 urn:ogc:def:method:EPSG::9801
		 urn:ogc:def:method:EPSG::9802
		 urn:ogc:def:method:EPSG::9803
		 urn:ogc:def:crs:EPSG::4326
		 urn:ogc:def:crs:EPSG::23031
		 urn:ogc:def:crs:EPSG::23032
		 urn:ogc:def:crs:EPSG::31467
		 urn:ogc:def:crs:EPSG::4326
		 urn:ogc:def:crs:EPSG::23031
		 urn:ogc:def:crs:EPSG::23032
		 urn:ogc:def:crs:EPSG::31467
		 
			 GRID
			 image/pix
			 image/HDF-EOS
			 image/DTED
			 image/GeoTIFF
			 image/NITF
			 
				 nearest
				 linear
			
		
		 
			 Point
			 LineString
			 Polygon
			 text/xml; gmlVersion=3.1.0
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Capabilities Examples/exampleGetCapabilitiesMinimum1.xml
 



07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Capabilities Examples/exampleGetCapabilitiesTemplate1.xml
 
	
	 
		 0.0.0
	
	 
		 All
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceCRS1.xml
 
	
	 urn:ogc:def:crs:EPSG:6.3:4277




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceMethod1.xml
 
	
	 urn:ogc:def:method:EPSG:6.3:9807




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceResponseCRS.xml
 
	
	
	 GetResourceByIdOperationResponse
	
	 
		 
			 OSGB 1936
			 
				 4277
			
			 
				 United Kingdom (UK) - Great Britain - England Scotland Wales - onshore; Isle of Man. 
			
			 
				 
					 ellipsoidal
					 
						 6402
					
					 
						 
							 Geodetic latitude
							 
								 9901
							
							 Lat
							 north
						
					
					 
						 
							 Geodetic longitude
							 
								 9902
							
							 Lon
							 east
						
					
				
			
			 
				 
					 OSGB 1936
					 
						 6277
					
					 
						 
							 Greenwich
							 
								 8901
							
							 
								 0
							
						
					
					 
						 
							 Airy 1830
							 
								 7001
							
							 6377563.396
							 
								 299.3249646
							
						
					
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceResponseMethod1.xml
 
	
	
	 GetResourceByIdOperationResponse
	
	 
		 
			 Transverse Mercator
			 
				 9807
			
			 TBD
			 See Section 1.4.6 "Transverse Mercator" of EPSG Guidance Note 7, December 2000. 
			 2
			 2
			 
				 
					 Latitude of natural origin
					 
						 8801
					
				
			
			 
				 
					 Longitude of natural origin
					 
						 8802
					
				
			
			 
				 
					 Scale factor at natural origin
					 
						 8805
					
				
			
			 
				 
					 False Easting
					 
						 8806
					
				
			
			 
				 
					 False Northing
					 
						 8807
					
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceResponseMethod2.xml
 
	
	
	 GetResourceByIdOperationResponse
	
	 
		 
			 SPOT SRIT (Orthorectification)
			 
				 SPOT_SRIT
				 1.0.0
			
			 PCI Geomatics' SRIT (rectification system for remote-sensing imagery) mathematical model is applied in correcting SPOT images. This rigorous method of geometric correction takes into account all global system distortions (satellite, sensor, earth). This implementation relies on DIMAP information to compute the positioning of the imagery. It does not use Ground Control Points. It provides a good accuracy of ~20-40 m even without Ground Control Points. 
			 CCRS SRIT Model
			 2
			 2
			 
				 
					 List of channels
					 
						 bands
					
					 Comma delimited list of channel number (index starting at 1)
					 
						 
							 
								 1
							
						
					
				
			
			 
				 
					 DIMAP URL
					 
						 DIMAP_URL
					
					 DIMAP Metadata URL for SPOT Imagery typically metadata.dim file
					 
						 
							 TBD
						
					
				
			
			 
				 
					 Pixel X, Y output size
					 
						 pixel-size
					
					 pixel size in X and Y in either decimal degree or meter. The pixel size are defined as comma-delimited value pixelSizeX,pixelSizeY. This value may be moved to the WCTS parameter
					 
						 
							 
								 0.001
							
						
					
				
			
			 
				 
					 Elevation (DEM) datafile URL
					 
						 DEM_URL
					
					 Digital elevation model (DEM) url used for the orthorectification process
					 
						 
							 
						
					
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceResponseTransformation1.xml
 
	
	
	 GetResourceByIdOperationResponse
	
	 
		 
			 Transverse Mercator
			 
				 19916
			
			 
			 
				 49
				 
			
			 
				 -2
				 
			
			 
				 0.999601272
				 
			
			 
				 400000
				 
			
			 
				 -100000
				 
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Resource  Examples/exampleGetResourceTransformation1.xml
 
	
	 urn:ogc:def:coordinateOperation:EPSG:6.3:19916




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Transformation Examples/exampleGet TransforamtionResponseTemplate1.xml
 
	
	
	 GetTransformationOperationResponse
	 




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Transformation Examples/exampleGet TransforamtionResponseTemplate2.xml
 
	
	
	 GetTransformationOperationResponse
	 
		 
			 
			 
			 
			 
			 
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Transformation Examples/exampleGetTransformationEPSG1.xml
 
	
	 urn:ogc:def:crs:EPSG:6.0:4277
	 urn:ogc:def:crs:EPSG:6.0:27700




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Transformation Examples/exampleGetTransformationResponseTM1.xml
 
	
	
	 GetTransformationOperationResponse
	
	 
		
		 
			 Transverse Mercator
			 
				 19916
			
			 
			 
				 49
				 
			
			 
				 -2
				 
			
			 
				 0.999601272
				 
			
			 
				 400000
				 
			
			 
				 -100000
				 
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Get Transformation Examples/exampleGetTransformationTemplate1.xml
 
	
	
	 urn:ogc:def:crs:XXXX:N.N:NNNN
	 urn:ogc:def:crs:XXXX:N.N:NNNN




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Is Transformable Examples/isTransformableResponseFalse1.xml
 

	 geometryType




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Is Transformable Examples/isTransformableResponseTrue1.xml
 



07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Is Transformable Examples/isTransformableSimple1.xml
 
	
	 urn:ogc:def:crs:EPSG:6.0:4326
	 urn:ogc:def:crs:EPSG:6.0:23032
	 LineString




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleCapital.xsd
 
	
	 
	 
	 
		 
			 
				 
					 
					 
					 
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleFeatureIn.xml
 
	
	 
		 
			 -115.467123 16.743654
			 -88.291157 32.654688
		
	
	 
		 
			 Aguascalientes
			 AGUASCALIENTES
			 
				 
					 -102.28969800 21.88751600
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleFeatureOut.xml
 
	
	 
		 
			 -115.467123 16.743654
			 -88.291157 32.654688
		
	
	 
		 
			 Aguascalientes
			 AGUASCALIENTES
			 
				 
					 -102.28969800 21.88751600
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleTransformCoverage1.xml
 
	
	 
	 
		 
		 
	
	 
		 
			 
		
	
	 linear




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleTransformedCoverage1.xml
 
	 
		 
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleTransformedFeature1.xml
 
	
	 
			 The Capital feature "Aguascalientes"
			 
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Examples/Transform Examples/exampleTransformFeature1.xml
 
	
	 urn:ogc:def:crs:EPSG:6.0:4326
	 urn:ogc:def:crs:EPSG:6.0:32611
	 
		 
			 The Capital feature "Aguascalientes"
			 
		
	
	 text/xml; gmlVersion=3.1.1




07-055r1 WCTS Draft Folder/wcts/0.4.0/geometryTypes.xml
 
	
	 This dictionary specifies the standard values for geometry primitive types specified in the WCTS 0.0 specification, based on GML 3.1.1. These type names using the XML Schema type name without the “Type” suffix. In addition, this dictionary specifies definition URNs in the "ogc URN namespace for these geometry types. 
	 Geometry primitive types standard values
	
	 
		 
			 Envelope
			 urn:ogc:def:geometryType:OGC:0.0:Envelope
		
	
	
	 
		 
			 Point
			 urn:ogc:def:geometryType:OGC:0.0:Point
		
	
	
	 
		 
			 LineString
			 urn:ogc:def:geometryType:OGC:0.0:LineString
		
	
	
	 
		 
			 Polygon
			 urn:ogc:def:geometryType:OGC:0.0:Polygon
		
	
	
	 
		 
			 LinearRing
			 urn:ogc:def:geometryType:OGC:0.0:LinearRing
		
	
	
	 
		 
			 Curve
			 urn:ogc:def:geometryType:OGC:0.0:Curve
		
	
	
	 
		 
			 LineStringSegment
			 urn:ogc:def:geometryType:OGC:0.0:LineStringSegment
		
	
	
	 
		 
			 ArcString
			 urn:ogc:def:geometryType:OGC:0.0:ArcString
		
	
	
	 
		 
			 Arc
			 urn:ogc:def:geometryType:OGC:0.0:Arc
		
	
	
	 
		 
			 Circle
			 urn:ogc:def:geometryType:OGC:0.0:Circle
		
	
	
	 
		 
			 ArcStringByBulge
			 urn:ogc:def:geometryType:OGC:0.0:ArcStringByBulge
		
	
	
	 
		 
			 ArcByBulge
			 urn:ogc:def:geometryType:OGC:0.0:ArcByBulge
		
	
	
	 
		 
			 ArcByCenterPoint
			 urn:ogc:def:geometryType:OGC:0.0:ArcByCenterPoint
		
	
	
	 
		 
			 CircleByCenterPoint
			 urn:ogc:def:geometryType:OGC:0.0:CircleByCenterPoint
		
	
	
	 
		 
			 CubicSpline
			 urn:ogc:def:geometryType:OGC:0.0:CubicSpline
		
	
	
	 
		 
			 BSpline
			 urn:ogc:def:geometryType:OGC:0.0:BSpline
		
	
	
	 
		 
			 Bezier
			 urn:ogc:def:geometryType:OGC:0.0:Bezier
		
	
	
	 
		 
			 OrientableCurve
			 urn:ogc:def:geometryType:OGC:0.0:OrientableCurve
		
	
	
	 
		 
			 Surface
			 urn:ogc:def:geometryType:OGC:0.0:Surface
		
	
	
	 
		 
			 PolygonPatch
			 urn:ogc:def:geometryType:OGC:0.0:PolygonPatch
		
	
	
	 
		 
			 Triangle
			 urn:ogc:def:geometryType:OGC:0.0:Triangle
		
	
	
	 
		 
			 Rectangle
			 urn:ogc:def:geometryType:OGC:0.0:Rectangle
		
	
	
	 
		 
			 Ring
			 urn:ogc:def:geometryType:OGC:0.0:Ring
		
	
	
	 
		 
			 OrientableSurface
			 urn:ogc:def:geometryType:OGC:0.0:OrientableSurface
		
	
	
	 
		 
			 Solid
			 urn:ogc:def:geometryType:OGC:0.0:Solid
		
	
	
	 
		 
			 CompositeCurve
			 urn:ogc:def:geometryType:OGC:0.0:CompositeCurve
		
	
	
	 
		 
			 CompositeSurface
			 urn:ogc:def:geometryType:OGC:0.0:CompositeSurface
		
	
	
	 
		 
			 CompositeSolid
			 urn:ogc:def:geometryType:OGC:0.0:CompositeSolid
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/problemTypes.xml
 
	
	 This dictionary specifies the standard values for IsTransformable problem types specified in the WCTS 0.0 specification. In addition, this dictionary specifies definition URNs in the "ogc" URN namespace for these problem types. 
	 Problem types standard values
	
	 
		 
			 WCTS server cannot transform from identified source CRS. 
			 sourceCRS
			 urn:ogc:def:problemType:OGC:0.0:sourceCRS
		
	
	
	 
		 
			 WCTS server cannot transform to identified target CRS from identified source CRS. 
			 targetCRS
			 urn:ogc:def:problemType:OGC:0.0:targetCRS
		
	
	
	 
		 
			 WCTS server cannot transform one or more identified geometry primitive types. 
			 geometryType
			 urn:ogc:def:problemType:OGC:0.0:geometryType
		
	
	
	 
		 
			 WCTS server cannot transform one or more identified coverage types. 
			 coverageType
			 urn:ogc:def:problemType:OGC:0.0:coverageType
		
	
	
	 
		 
			 WCTS server cannot perform one or more identified interpolation methods. 
			 interpolationMethod
			 urn:ogc:def:problemType:OGC:0.0:interpolationMethod
		
	
	
	 
		 
			 WCTS server cannot perform identified transformation due to some other problem, including incompatibility between identified parameters. 
			 other
			 urn:ogc:def:problemType:OGC:0.0:other
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Transform Points/pointsApplicationSchema.xsd
 
	 
		 pointsApplicationSchema.xsd 2007-04-28
		 This XML Schema is a GML Application Schema for encoding point positions in a pseudo-feature for transformation by a WCTS. 
		Primary editor: Arliss Whiteside. Last updated 2007-04-09
	
	
	 
	
	 
	 
		 
			 
				 
					 
				
			
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Transform Points/pointsTemplate#2.xml
 
	 
		 
			 99.9999 99.9999
		
	
	 
		 
			 99.9999 99.9999
		
	
	 
		 
			 99.9999 99.9999
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/Transform Points/pointsTemplate.xml
 
	
	 
		 
			 99.9999 99.9999
		
	
	 
		 
			 99.9999 99.9999
		
	
	 
		 
			 99.9999 99.9999
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsAll.xsd
 
	 
		 wctsAll.xsd 2007-04-25
		 This XML Schema Document includes, directly and indirectly, all the XML Schema documents defined by the OGC Web Coordinate Transformation Service (WCTS). 
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	 
	 
	 
	 




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsCommon.xsd
 
	 
		 wctsCommon.xsd 2007-05-01
		 
			 http://schemas.opengis.net/gml/3.1.1/profiles/GridCRSs/1.0.0/gmlGridCRSsProfile.xsd
		
		 This XML Schema Document encodes the elements and types that are shared by muliple WCTS operations. This XML Schema for WCTS is a GML 3.1.1 Application Schema, that uses the gmlGridCRSsProfile.
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 XML encoded WCTS operation request base, for all operations except Get Capabilities. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
		 
			 
				 Service type identifier. 
			
		
		 
			 
				 Specification version for this WCTS. See Version parameter Subclause 7.3.1 in OWS Common for more information. 
			
		
	
	
	 
		 
			 Group combining SourceCRS and TargetCRS elements, used by some WCTS operation requests. 
		
		 
			 
				 
					 Identifier of the coordinate reference system (CRS) used by coordinates input to a Transform operation. This element shall uniquely identify the desired CRS, but the definition of that CRS need not be known to the WCTS server. 
				
			
			 
				 
					 Identifier of the coordinate reference system (CRS) used by coordinates output from a Transform operation. This element shall uniquely identify the desired CRS, but the definition of that CRS need not be known to the WCTS server. 
				
			
		
	
	
	 
		 
			 A coordinate operation that can transform coordinates from a sourceCRS to a targetCRS. This element is often a reference to a well-known coordinate operation, but can contain the definition of a user-defined coordinate operation that references a well-known operation method. Alternately, this element can contain the definition of a ConcatenatedOperation that combines two or more well-known coordinate operations or coordinate operations that reference a well-known operation method. When the definiton of a coordinate operation is contained, the element shall also include a xlink:href value containing the URN that references this definition. Well-known coordinate operations and operation methods can be defined in documents referenced by the WCTS Implementation Specification. Alternately or in addition, well-known coordinate operations and operation methods can be defined in metadata referenced by or contained in the Contents section of the Capabilities XML document available from this WCTS server. 
		
		 
			 
				 
					 
						 
							 This sourceCRS and targetCRS shall be included only when the referenced or contained coordinate operation is a Conversion, which does not identify its sourceCRS and targetCRS. 
						
						 
							 
								 Identifier or definition of the coordinate reference system (CRS) used by coordinates input to a Conversion. This element shall uniquely identify the desired CRS, but the definition of that CRS need not be known to the WCTS server. This element is normally a reference to that CRS, but can contain the definition of a user-defined CRS. When this element contains the CRS definition object, it shall also contain a xlink:href containing the URN that references this definition. 
							
						
						 
							 
								 Identifier or definition of the coordinate reference system (CRS) used by coordinates output from a Conversion. This element shall uniquely identify the desired CRS, but the definition of that CRS need not be known to the WCTS server. This element is normally a reference to that CRS, but can contain the definition of a user-defined CRS. When this element contains the CRS definition object, it shall also contain a xlink:href containing the URN that references this definition. 
							
						
					
				
			
		
	
	
	 
		 
			 Type of geometry primitive possibly handled by an OWS server. The possible values are all names of GML 3.1.1 complexTypes, omitting any "Type" suffix. 
		
		 
			 
				 
					 
						 Reference to a dictionary that specifies allowed values for geometry type identifier strings. This reference defaults to the standard geometry type dictionary specified in WCTS 0.0.0. 
					
				
			
		
	
	
	 
		 
			 Type of coverage possibly handled by an OWS server. The meanings of these coverage types are defined in ISO 19123: Geographic information - Schema for coverage geometry and functions. 
		
		 
			 
				 
					 
						 Reference to a dictionary that specifies allowed values for coverage type identifier strings. This reference defaults to the standard coverage type dictionary specified in WCTS 0.0.0. 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsContents.xsd
 
	 
		 wctsContents.xsd 2007-05-16
		 This XML Schema Document encodes the Contents section of the WCTS GetCapabilities operation response. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 Contents section of WCTS service metadata (or Capabilites) XML document. For the WCTS, these contents are data and functions that the WCTS server supports (not data that can be accessed from this server). 
		
		 
			 
				 
					 
						 Unordered list of zero or more identifiers of well-known coordinate operations which the server can perform. 
					
				
				 
					 
						 Unordered list of zero or more identifiers of well-known operation methods which the server can apply in user-defined coordinate Transformations and Conversions. 
					
				
				 
					 
						 Unordered list of one or more identifiers of well-known CRSs in which the server can accept sourceCRS values. 
					
				
				 
					 
						 Unordered list of one or more identifiers of well-known CRSs in which the server can accept targetCRS values. 
					
				
				 
					 
						 
						 
					
					 
				
				 
					 
						 Optional unordered list of additional metadata about the data served by this WCTS implementation. For example, this metadata could include more detailed definitions of the Methods, Transformations, and CRSs known to this server, perhaps in the form of a gml:Dictionary of such information. 
					
				
			
			 
				 
					 Specifies if this server supports user-defined Coordinate Reference Systems (CRSs). 
				
			
		
	
	
	 
		 
			 Specifies feature transformation abilities of WCTS server
.
		
		 
			 
				 
					 
						 Unordered list of one or more GML 3 geometric primitive types supported by this WCTS server. It is assumed that a WCTS server can also transform the corresponding geometric complexes and aggregates. It is also assumed that this WCTS server can transform at least one geometric primitive type. 
					
				
				 
					 
						 Unordered list of one or more identifiers of well-known feature formats in which the transform operation can accept input features and/or produce output features. 
					
				
			
			 
				 
					 Specifies if this server supports remote properties in features transformed. 
				
			
		
	
	
	 
		 
			 Specifies coverage transformation abilities of WCTS server. 
		
		 
			 
				 
					 
						 Unordered list of one or more GML 3 coverage types supported by this WCTS server. If no coverage types are supported, the enclosing sequence of elements shall be omitted. 
					
				
				 
					 
						 Unordered list of one or more identifiers of well-known coverage formats in which the transform operation can accept input coverages and/or produce output coverages. 
					
				
				 
					 
						 List of one or more interpolation method identifiers which the transform operation can apply to coverages. 
					
				
			
		
	
	
	 
		 
			 Format supported by OWS server for inputs and/or outputs. This element extends the ows:MimeType by adding two boolean attributes "input" and "output", which indicate if this format is supported in input and output respectively. By default, the "input" and "output" attribute values are true, indicating that this format is supported in both input and output.
		
		 
			 
				 
					 
						 Indicates if this format can be used as the input format. 
					
				
				 
					 
						 Indicates if this format can be used as the output format. 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsGetCapabilities.xsd
 
	 
		 wctsGetCapabilities.xsd 2007-04-25
		 This XML Schema Document encodes the WCTS GetCapabilities operation request and response. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Request to a WCTS to perform the GetCapabilities operation. This operation allows a client to retrieve a Capabilities XML document providing metadata for the specific WCTS server. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
					 
				
			
		
	
	
	 
		 
			 XML encoded WCTS GetCapabilities operation response. This document provides clients with service metadata about a specific service instance, including metadata about the tightly-coupled data served. If the server does not implement the updateSequence parameter, the server shall always return the complete Capabilities document, without the updateSequence parameter. When the server implements the updateSequence parameter and the GetCapabilities operation request included the updateSequence parameter with the current value, the server shall return this element with only the "version" and "updateSequence" attributes. Otherwise, all optional elements shall be included or not depending on the actual value of the Sections parameter in the GetCapabilities operation request. 
		
		 
			 
				 
					 
						 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsGetResourceByID.xsd
 
	 
		 wctsGetResourceByID.xsd 2007-05-01
		 This XML Schema Document encoded the WCTS GetResourceByID operation request message. The response from this operation is a gml:Dictionary element.
		Copyright (c) 2007 Open Geospatial Consortium, Inc, All Rights Reserved. 
	
	
	 
	
	 
		 
			 Request to a WCTS service to perform the GetResourceByID operation. This operation allows a client to retrieve one or more identified resources, including datasets and resources that describe datasets or parameters. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsGetTransformation.xsd
 
	 
		 wctsGetTransformation.xsd 2007-04-28
		 This XML Schema Document encodes the GetTransformation operation request. The GetTransformation operation response is encoding in a gml;Dictionary.
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	
	 
		 
			 Request to a WCTS to perform the GetTransformation operation. This operation allows a client to retrieve the descriptions of all server-known transformations from the identified source CRS to the target CRS. 
		
		 
			 
				 
					 
						 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsIsTransformable.xsd
 
	 
		 wctsIsTransformable.xsd 2007-05-01
		 This XML Schema Document encodes the IsTransformable operation request and response. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 Request to a WCTS to perform the IsTransformable operation. This operation allows clients to check if transformation of a specific set of geometry and/or coverage types is possible between two coordinate reference systems. Either the desired source and target CRSs can be directly identified, or a specific coordinate transformation between two CRSs can be identified. This operation will check if the identified geometries are supported and if there is a valid way (sequence of transformation steps) to transform the coordinates from the source CRS to the target CRS. (This operation will not check if this transformation makes any sense.) In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
						 
							 
								 
									 
										 References to the well-known SourceCRS and desired TargetCRS, included when client is not specifying a specific coordinate operation. 
									
								
							
							 
								 
									 Identifier or definition of the desired coordinate operation, included when client is specifying a specific coordinate operation. 
								
							
							 
								 
									 Identifier od desired well-known operation method that can be used in a user-defined coordinate operation, included when client is considering specifying a specific user-defined coordinate operation. 
								
							
						
						 
							 
								 
									 Unordered list of one or more GML 3 geometric primitive types that a client can request be transformed by a WCTS server. It is assumed that a WCTS server can also transform the corresponding geometric complexes and aggregates. 
								
							
							 
								 
									 
										 Unordered list of one or more GML 3 coverage types that a client can request be transformed by a WCTS server. 
									
								
								 
									 
										 Unordered list of zero or more identifiers of interpolation methods that a client can request be performed on a coverage by a WCTS server. An interpolation is used after coverage points have been transformed. 
									
								
								 
									 
										 Unordered list of zero or more GML 3 geometric primitive types that a client can request be transformed by a WCTS server. It is assumed that a WCTS server can also transform the corresponding geometric complexes and aggregates. 
									
								
							
						
					
				
			
		
	
	
	
	 
		 
			 Response to a valid IsTransformable operation request sent to a WCTS. 
		
		 
			 
				 
					 
						 Type of transformation problem detected by WCTS server. This element shall be included whenever the "transformable" attribute is false. 
					
				
			
			 
				 
					 Indicates whether this WCTS server can perform a transformation from the sourceCRS to the targetCRS identified in the operation request. The value shall be "true" or "false". 
				
			
		
	
	
	 
		 
			 Type of IsTransformable problem detected by WCTS server. 
		
		 
			 
				 
					 
						 Reference to a dictionary that specifies allowed values for problem type identifier strings. This reference defaults to the standard problem type dictionary specified in WCTS 0.0.0. 
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsOperationParameter.xsd
 
	 
		 wctsOperationParameter.xsd 2007-05-01
		 
			 http://schemas.opengis.net/gml/3.1.1/profiles/CommonCRSs/1.0.0/coordinateOperations.xsd
		
		 This XML Schema Document is a GML Application Schema that expands the definitions of OperationParameters. 
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	
	 
		 
			 Extended definition of an WCTS operation parameter. 
		
	
	
	 
		 
			 
				 
					 
						 
							 List the allowed values for the parameter, often including the meaning and the referenceSystem or units of measure (Uom) of this parameter. 
						
					
					 
						 
							 Unordered list of the zero or more identifiers of other units of measure supported for the value of this operations parameter.  This list shall be omitted when this parameter does not use a unit of measure, or when the only units supported are specified by the ows:UOM included in the allowedValues. 
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/wcts/0.4.0/wctsTransform.xsd
 
	 
		 wctsTransform.xsd 2007-05-01
		 This XML Schema Document encodes the WCTS Transform operation request and response.  
		Copyright (c) 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
	
	
	 
	 
	 
	
	 
		 
			 Request to a WCTS to perform the Transform operation. This operation transforms coordinates from one coordinate reference system into another, where those coordinates are in geometric primitives in GML features. The InputData references the feature(s) and/or feature collection(s) whose geometry elements are to be transformed. Alternately, this operation transforms one or more coverages from one coordinate reference system into another. In this XML encoding, no "request" parameter is included, since the element name specifies the specific operation. 
		
		 
			 
				 
					 
						 
							 
								 This choice implements the transformationChoice data structure. 
							
							 
								 
									 References to the well-known SourceCRS and desired TargetCRS, included when client is not specifying a specific coordinate operation. 
								
							
							 
								 
									 Identifier or definition of the desired coordinate operation, included when client is specifying a specific coordinate operation, possibly a user-defined coordinate operation. In this use, this element shall either:
* Reference a well-known coordinate operation, whose definition is known to the WCTS server
* Contain a URL from which that coordinate operation definition object can be retrieved, using GML encoding
* Contain the coordinate operation definition object, using GML encoding, and a xlink:href value containing the URN that references this definition 
								
							
						
						 
							 
								 Definition of output GridCRS referenced by the transformation, which shall be Included when the Included Transformation references a GridCRS (usually for a grid coverage that is georectified). 
							
						
						 
							 
								 Data to be transformed. Each ReferenceGroup in the InputData shall reference data to be transformed, either attached or referenced from an external source. In addition to the data to be transformed, each ReferenceGroup can also reference associated metadata. For example, this metadata can include a human readable title and/or abstract, plus a link to more metadata.
								
For digital feature data, the data to be transformed can be encoded as either a gml:_Geometry or a gml:_Feature that contains a gml:Geometry. For grid coverage data, the grid point values can be encoded in any suitable format that is supported by the WCTS server. The coverage metadata can be encoded in the same file and/or in separate metadata files that are encoded in XML. 
							
						
						 
							 
								 Identifier of the interpolation method to be used for Coverage transformation. Shall be included when transforming a coverage using interpolation. Transforming a grid coverage usually requires resampling of coverage values to obtain the values at different grid points. For example, a coverage can be transformed from an unrectified grid to a rectified grid. When transforming a grid coverage, the SourceCRS and TargetCRS parameters shall completely specify the grids of the input and output coverages. These SourceCRS and TargetCRS parameters can be included in either the Transformation or the SourceAndTargetCRSs groups. 
							
						
						 
							 
								 Identifier of the output format to be used for the transformed features or coverage, allowing advanced WCTS servers to perform reformatting. The output formats supported by a WCTS server are listed in the Contents section of the Capabilities document. If this element is omitted, the output format shall be the same as the format of the InputData. If that output format is not supported by a WCTS server, an exception message shall be returned. 
							
						
					
					 
						 
							 Specifies if the response transformed data should be stored, remotely from the client at a network URL, instead of being returned within the operation response. This attribute should be included only it this operation parameter is supported, as encoded in the OperationsMetadata section of the Capabilities document. 
						
					
				
			
		
	
	




07-055r1 WCTS Draft Folder/xlink/1.0.0/xlinks.xsd
 
	 
		 xlinks.xsd v3.0b2 2001-07
		 
			GML 3.0 candidate xlinks schema. Copyright (c) 2001 OGC, All Rights Reserved.
		
	
	
	
	 
	
	 
	 
	 
	
	 
		 
			 
        The 'show' attribute is used to communicate the desired presentation 
        of the ending resource on traversal from the starting resource; it's 
        value should be treated as follows: 
        new - load ending resource in a new window, frame, pane, or other 
              presentation context
        replace - load the resource in the same window, frame, pane, or 
                  other presentation context
        embed - load ending resource in place of the presentation of the 
                starting resource
        other - behavior is unconstrained; examine other markup in the 
                link for hints 
        none - behavior is unconstrained 
      
		
		 
			 
				 
				 
				 
				 
				 
			
		
	
	 
		 
			 
        The 'actuate' attribute is used to communicate the desired timing 
        of traversal from the starting resource to the ending resource; 
        it's value should be treated as follows:
        onLoad - traverse to the ending resource immediately on loading 
                 the starting resource 
        onRequest - traverse from the starting resource to the ending 
                    resource only on a post-loading event triggered for 
                    this purpose 
        other - behavior is unconstrained; examine other markup in link 
                for hints 
        none - behavior is unconstrained
      
		
		 
			 
				 
				 
				 
				 
			
		
	
	
	 
	 
	 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
		 
		 
		 
	
	 
		 
		 
		 
		 
	
	 
		 
	
	 
		 
	




07-055r1.pdf


 


  
 


 


Open Geospatial Consortium Inc. 


Date: 2007-10-08 


Reference number of this document: OGC 07-055r1 


Version: 0.4.0 


Category: OpenGIS
® 


Discussion Paper 


Editors: Arliss Whiteside, Markus Müller, Stephane Fellah, Frank Warmerdam 


Web Coordinate Transformation Service (WCTS) 


Interface Engineering Report 


 


 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 


To obtain additional rights of use, visit http://www.opengeospatial.org/legal/  


 


Warning 


This document is not an OGC Standard. This document is an OGC Discussion 


Paper and is therefore not an official position of the OGC membership. It is 


distributed for review and comment. It is subject to change without notice and may 


not be referred to as an OGC Standard. Further, an OGC Discussion Paper should 


not be referenced as required or mandatory technology in procurements. 


 


Document type: OpenGIS
® 


Discussion Paper 
Document subtype:   
Document stage: Revised Discussion Paper 


Document language: English 



http://www.opengeospatial.org/legal/





OGC 07-055r1 


ii Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Contents  Page 


i. Preface.................................................................................................................. viii 


ii. Document terms and definitions .......................................................................... viii 


iii. Submitting organizations ..................................................................................... viii 


iv. Document contributor contact points ..................................................................... ix 


v. Revision history ..................................................................................................... ix 


vi. Changes to the OGC Abstract Specification ............................................................x 


vii. Future work ..............................................................................................................x 


Foreword .......................................................................................................................... xiii 


Introduction ...................................................................................................................... xiv 


1 Scope ........................................................................................................................1 


2 Conformance ............................................................................................................2 


3 Normative references ...............................................................................................2 


4 Terms and definitions ..............................................................................................3 


5 Conventions .............................................................................................................3 


5.1 Abbreviated terms ..............................................................................................3 


5.2 UML notation.....................................................................................................3 


5.3 Used parts of other documents ...........................................................................4 


5.4 Platform-neutral and platform-specific specifications .......................................4 


5.5 Data dictionary tables ........................................................................................4 


6 WCTS overview.......................................................................................................4 


7 Shared aspects ..........................................................................................................6 


7.1 Introduction ........................................................................................................6 


7.2 Shared data structures ........................................................................................6 


7.3 Operation request encoding .............................................................................10 


7.4 Standard operation exceptions .........................................................................10 


8 Transform operation (mandatory) ..........................................................................11 


8.1 Introduction ......................................................................................................11 


8.2 Operation request .............................................................................................11 


8.2.1 Transform request parameters....................................................................11 


8.2.2 Use of InputData structure .........................................................................14 


8.2.3 Transform request implementation requirements ......................................15 


8.2.4 Transform request KVP encoding (optional) .............................................15 


8.2.5 Transform request XML encoding (required) ............................................16 


8.2.6 Transform request SOAP encoding ...........................................................17 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. iii 
 


8.3 Operation response...........................................................................................17 


8.3.1 Transform operation exceptions ................................................................17 


8.3.2 Transform normal response .......................................................................17 


8.3.3 Transform response encodings ..................................................................18 


8.3.4 Transform response XML encoding (required) .........................................18 


8.3.5 MIME multipart response ..........................................................................19 


8.3.6 Transform response SOAP encoding (optional) ........................................19 


8.4 Feature transformation examples .....................................................................19 


8.4.1 Transform request example ........................................................................19 


8.4.2 Transform response example .....................................................................20 


8.5 Grid coverage inputs and outputs ....................................................................21 


8.5.1 Introduction ................................................................................................21 


8.5.2 Input and output coverage formats ............................................................22 


8.5.3 Input and output coverage metadata ..........................................................22 


8.5.4 Output coverage CRS ................................................................................23 


8.5.5 Output coverage spatial extent ...................................................................23 


8.5.6 SupportedFormat and SupportedCRS dependencies .................................23 


8.5.7 Output coverage range and temporal extent ..............................................24 


8.5.8 Image transformation examples .................................................................24 


9 GetCapabilities operation (mandatory) ..................................................................25 


9.1 Introduction ......................................................................................................25 


9.2 Operation request .............................................................................................25 


9.2.1 GetCapabilities request parameters............................................................25 


9.2.2 GetCapabilities request implementation requirements ..............................25 


9.2.3 GetCapabilities request KVP encoding (required) ....................................26 


9.2.4 GetCapabilities request XML encoding (optional) ....................................26 


9.2.5 GetTransformation request SOAP encoding (optional) .............................26 


9.3 Operation response...........................................................................................26 


9.3.1 GetCapabilities operation exceptions ........................................................26 


9.3.2 GetCapabilities normal response ...............................................................27 


9.3.3 OperationsMetadata section standard contents ..........................................28 


9.3.4 Contents section contents ...........................................................................29 


9.3.5 GetCapabilities response implementation requirements ............................33 


9.3.6 Capabilities document XML encoding (required) .....................................34 


9.4 Examples ..........................................................................................................34 


9.4.1 GetCapabilities request ..............................................................................34 


9.4.2 GetCapabilities response ............................................................................34 


10 IsTransformable operation (optional) ....................................................................37 


10.1 Introduction ......................................................................................................37 


10.2 Operation request .............................................................................................37 


10.2.1 IsTransformable request parameters ..........................................................37 


10.2.2 IsTransformable request implementation requirements.............................40 


10.2.3 IsTransformable request KVP encoding (optional) ...................................40 


10.2.4 IsTransformable request XML encoding (required) ..................................41 


10.2.5 IsTransformable request SOAP encoding (optional) .................................41 







OGC 07-055r1 


iv Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


10.3 Operation response...........................................................................................42 


10.3.1 IsTransformable operation exceptions .......................................................42 


10.3.2 IsTransformable normal response ..............................................................42 


10.3.3 IsTransformable response XML encoding (required) ................................43 


10.3.4 IsTransformable response SOAP encoding (optional) ..............................43 


10.4 Examples ..........................................................................................................44 


10.4.1 IsTransformable request.............................................................................44 


10.4.2 IsTransformable response ..........................................................................44 


11 GetTransformation operation (optional) ................................................................44 


11.1 Introduction ......................................................................................................44 


11.2 Operation request .............................................................................................45 


11.2.1 GetTransformation request parameters ......................................................45 


11.2.2 GetTransformation request implementation requirements ........................46 


11.2.3 GetTransformation request KVP encoding (required) ...............................46 


11.2.4 GetTransformation request XML encoding (optional) ..............................47 


11.2.5 GetTransformation request SOAP encoding (optional) .............................47 


11.3 Operation response...........................................................................................47 


11.3.1 GetTransformation operation exceptions ...................................................47 


11.3.2 GetTransformation response XML encoding (required) ...........................47 


11.3.3 GetTransformation response SOAP encoding (optional) ..........................47 


11.4 Examples ..........................................................................................................47 


11.4.1 GetTransformation request ........................................................................47 


11.4.2 GetTransformation response ......................................................................48 


12 GetResourceByID operation (optional) .................................................................49 


12.1 Introduction ......................................................................................................49 


12.2 Operation request .............................................................................................49 


12.2.1 GetResourceByID request parameters .......................................................49 


12.2.2 ResourceID values .....................................................................................50 


12.2.3 GetResourceByID request implementation requirements .........................50 


12.2.4 GetResourceByID request KVP encoding (optional) ................................50 


12.2.5 GetResourceByID request XML encoding (optional) ...............................51 


12.2.6 GetResourceByID request SOAP encoding (optional) ..............................51 


12.3 Operation response...........................................................................................51 


12.3.1 GetResourceByID operation exceptions ....................................................51 


12.3.2 GetResourceByID normal response ...........................................................51 


12.3.3 GML Application Schema .........................................................................52 


12.3.4 GetResourceByID response SOAP encoding (optional) ...........................52 


12.3.5 GetResourceByID response implementation requirements .......................52 


12.4 Examples ..........................................................................................................52 


12.4.1 GetResourceByID request for a Transformation .......................................52 


12.4.2 GetResourceByID response for a Transformation .....................................53 


12.4.3 GetResourceByID request for a CRS ........................................................54 


12.4.4 GetResourceByID response for a CRS ......................................................54 


12.4.5 GetResourceByID request for a Method....................................................56 


12.4.6 GetResourceByID response for a Method .................................................57 


12.4.7 GetResourceByID response for an orthorectification method ...................57 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. v 
 


Annex A (normative)  Abstract test suite ..........................................................................60 


A.1 Conformance testing overview ........................................................................60 


A.2 Documentation review .....................................................................................60 


A.3 GetCapabilities operation testing .....................................................................61 


A.4 Transform operation testing .............................................................................62 


A.5 IsTransformable operation testing ...................................................................62 


A.6 GetTransformation operation testing ...............................................................62 


A.7 GetResourceByID operation testing ................................................................63 


Annex B (normative)  Conformance classes .....................................................................64 


B.1 Introduction ......................................................................................................64 


B.2 WCTS core conformance class ........................................................................64 


B.3 WCTS additional operation conformance classes ...........................................65 


B.4 Operation request encoding conformance classes ...........................................65 


B.5 Operation request parameter conformance classes ..........................................66 


B.6 Other general conformance classes ..................................................................66 


B.7 Features transformation core conformance class .............................................66 


B.8 Features transformation additional conformance classes ................................67 


B.9 Coverages transformation core conformance class ..........................................67 


B.10 Coverage resampling conformance classes .....................................................67 


B.11 Interpolation method conformance classes ......................................................68 


B.12 Coverage domain conformance classes ...........................................................68 


B.13 Coverage range conformance classes ..............................................................68 


B.14 Grid coverages transformation additional conformance classes ......................69 


B.15 Interoperability .................................................................................................69 


Annex C (normative)  XML schema documents ...............................................................70 


Annex D (informative)  Use cases .....................................................................................72 


D.1 Introduction ......................................................................................................72 


D.2 Desktop application .........................................................................................72 


D.3 WMS ................................................................................................................73 


D.4 Service chain ....................................................................................................74 


D.5 Defining and using user-defined coordinate transformation ...........................75 


Annex E (informative)  UML model .................................................................................76 


E.1 Introduction ......................................................................................................76 


E.2 UML packages .................................................................................................77 


E.3 WCTS Service package ...................................................................................78 


E.4 WCTS Transform package ..............................................................................80 


E.5 WCTS Is Transformable package ....................................................................82 


E.6 WCTS Get Transformation package ................................................................83 


E.7 WCTS Get Capabilities package .....................................................................84 


E.8 WCTS Contents package .................................................................................84 


E.9 WCTS Operation Method package ..................................................................86 


Annex F (informative)  GML application schemas for features ........................................87 


F.1 Introduction ......................................................................................................87 


F.2 Simple example GML application schemas for features .................................87 


F.3 GML application schemas for pseudo-features ...............................................88 







OGC 07-055r1 


vi Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex G (normative)  SOAP transfer ................................................................................90 


Annex H (informative)  Design decisions .........................................................................91 


H.1 Introduction ......................................................................................................91 


H.2 Included interface abilities ...............................................................................91 


H.3 Excluded interface abilities ..............................................................................92 


H.4 Implementation of interface abilities ...............................................................92 


H.5 Specification approaches .................................................................................93 


Bibliography ......................................................................................................................94 


Figures Page 


Figure 1 — WCTS interface UML diagram .................................................................................... 6 


Figure 2 — WCTS shared operation data UML class diagram ....................................................... 7 


Figure 3 — WCTS Transform request UML class diagram ......................................................... 12 


Figure 4 — WCTS service metadata UML class diagram ............................................................ 28 


Figure 5 — WCTS contents section UML class diagram ............................................................. 30 


Figure 6 — WCTS IsTransformable request UML class diagram ................................................ 38 


Figure 7 — WCTS IsTransformable response UML class diagram .............................................. 42 


Figure 8 — WCTS GetTransformation request UML class diagram ............................................ 45 


Figure D.1 — Desktop Application use case: application - WCTS interaction ............................ 72 


Figure D.2 — WMS use case: client - WMS - WCTS interaction ................................................ 73 


Figure D.3 — Service Chain use case: client - WMS - WFS - WCTS interaction ....................... 74 


Figure D.4 — Service Chain use case two4: service chain ........................................................... 74 


Figure E.1 — WCTS interface UML diagram .............................................................................. 76 


Figure E.2 — WCTS interface package diagram .......................................................................... 77 


Figure E.3 — WCTS Service package class diagram ................................................................... 79 


Figure E.4 — WCTS Transform package class diagram, part 1 ................................................... 80 


Figure E.5 — WCTS Transform package class diagram, part 2 ................................................... 81 


Figure E.6 — WCTS Is Transformable package class diagram .................................................... 82 


Figure E.7 — WCTS Get Transformation package class diagram ................................................ 83 


Figure E.8 — WCTS Get Capabilities package class diagram ..................................................... 84 


Figure E.9 — WCTS Contents package class diagram ................................................................. 85 


Figure E.10 — WCTS Operation Method package class diagram ................................................ 86 


 


 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. vii 
 


Tables Page 


Table 1 — SourceAndTargetCRSs data structure ........................................................................... 7 


Table 2 — Transformation data structure........................................................................................ 8 


Table 3 — CoverageType values .................................................................................................... 8 


Table 4 — GeometryType values .................................................................................................... 9 


Table 5 — Operation request encoding ......................................................................................... 10 


Table 6 — Exception codes for WCTS optional operations ......................................................... 10 


Table 7 — Parameters in Transform operation request ................................................................. 13 


Table 8 — Parameters in TransformationChoice data structure ................................................... 14 


Table 9 — Data types to be transformed ....................................................................................... 15 


Table 10 — Implementation of parts of Transform operation request .......................................... 15 


Table 11 — Transform operation request URL parameters .......................................................... 16 


Table 12 — Exception codes for Transform operation ................................................................. 17 


Table 13 — Transform response encodings .................................................................................. 18 


Table 14 — Required coverage metadata...................................................................................... 22 


Table 15 — Implementation of parameters in GetCapabilities operation request ........................ 26 


Table 16 — Section name values and contents ............................................................................. 27 


Table 17 — Required values of OperationMetadata section attributes ......................................... 28 


Table 18 — Optional values of OperationMetadata section attributes.......................................... 29 


Table 19 — Parameters included in Contents section ................................................................... 31 


Table 20 — Parameters included in FeatureAbilities data structure ............................................. 32 


Table 21 — Parameters included in CoverageAbilities data structure .......................................... 33 


Table 22 — Parameters included in InputOutputFormat data structure ........................................ 33 


Table 23 — Parameters in IsTransformable operation request ..................................................... 39 


Table 24 — Alternatives in IsTransformableChoice data structure .............................................. 40 


Table 25 — Implementation of parameters in IsTransformable operation request ....................... 40 


Table 26 — IsTransformable operation request URL parameters................................................. 41 


Table 27 — Parameters in IsTransformable operation response ................................................... 43 


Table 28 — Problem values for IsTransformable operation response .......................................... 43 


Table 29 — Parameters in GetTransformation operation request ................................................. 46 


Table 30 — GetTransformation operation request URL parameters ............................................ 46 


Table 31 — Parameters in GetResourceByID operation request .................................................. 50 


Table 32 — GetResourceByID operation request URL parameters ............................................. 51 


 







OGC 07-055r1 


viii Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


i. Preface 


This Discussion Paper describes an interface specification for a web coordinate 


transformation service that now builds on version 1.1 of the OWS Common Specification 


[OGC 06-121r3]. All versions of this document specify an ―OGC Web Service‖ type of 


interface to a service that performs coordinate transformations. Such transformations 


include all the types of coordinate operations defined in OGC Abstract Specification 


Topic 2 [OGC 05-103], including both coordinate ―Transformations‖ and ―Conversions‖. 


Suggested additions, changes, and comments on this draft specification are welcome and 


encouraged. Such suggestions may be submitted to the editor by email message. 


Extensive and/or multiple changes can be suggested by making changes in an edited copy 


of this document. 


ii. Document terms and definitions 


This document uses the specification terms defined in Subclause 5.3 of [OGC 06-121r3]. 


In particular, the word ―shall‖ (not ―must‖) is the verb form used to indicate a 


requirement to be strictly followed to conform to this specification 


iii. Submitting organizations 


The following organizations submitted this proposed Implementation Specification to the 


Open Geospatial Consortium Inc. as a part of the WCTS Request For Comment (RFC): 


(TBR) 


a) Galdos Systems, Inc. 


b) BAE Systems 


c) lat/lon 


d) DM Solutions Group Inc. 


e) CadCorp 


f) PCI Geomatics Inc. 


g) George Mason University 


h) US Census (?) 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. ix 
 


iv. Document contributor contact points 


All questions regarding this document should be directed to the editor or the contributors: 


Contact Organization 


Arliss Whiteside BAE Systems E&IS 


Markus U. Müller lat/lon 


Andreas Poth lat/lon 


Frank Warmerdam DM Solutions Group 


Paul Daisey U.S. Census 


George Percivall NASA / GST, Inc. 


v. Revision history 


Date Release Editor Primary clauses 
modified 


Description 


2002-07-26 0.0.1 Andreas 
Poth 


 initial version 


2002-08-01 0.0.2 Markus 
Müller 


7-11 added paragraphs 7-11 


2002-08-14 0.0.3 Andreas 
Poth 


6-11 chapter content slightly modified; schema 


definitions changed; example requests and 


responses added 


2002-09-15 0.0.4 Markus 
Müller 


i, 3 included changes requested by CRS SIG for public 


discussion paper status 


2002-11-25 0.1.0 Markus 
Müller 


All Adapted spec to GML3 and included some 


changes responding to NASA comments on 


discussion paper. Dropped support of WKT. 


2003-03-17 0.1.1 Markus 
Müller 


All Minor changes (support of Xlink, renamed some 


XML elements, grammatical changes, formatting) 


2003-03-30 0.1.2 Markus 
Müller 


7-11, Annex A Changes according to Frank’s and Arliss’ 


comments and questions (added example 


transformation, corrected some minor mistakes). 


2003-04-08 0.1.3 Arliss 
Whiteside 


I to 6, Annex C Edit front of document to improve it and to better 


match OGC/ISO document template 


2003-04-26 0.1.4 Arliss 
Whiteside 


vi, 5.3, 6, Annex 
D 


Add UML diagrams and list of open questions 


2003-06-24 0.1.5 Arliss 
Whiteside 


vi, Annex F Edited based on recent design decisions, added 


Annex F 


2003-09-16 0.1.6 Arliss 
Whiteside 


Annex B, E Edited UML model and XML Schemas 


2003-12-01 0.1.7 Arliss 
Whiteside 


1, 3 to 11, 
Bibliography 


Edited to build on OWS Common Implementation 
Specification 03-088r2 


2004-02-06 0.1.8 Arliss 
Whiteside 


3, 7.4, 8-11, B, E Edited to build on OWS Common Implementation 
Specification 04-016 


2004-05-27 0.1.9 Arliss 
Whiteside 


vi, 3, 5.1, 7, 8.2, 
8.3, B 


Further edited to build on OWS Common 
Implementation Specification 04-016r4 







OGC 07-055r1 


x Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Date Release Editor Primary clauses 
modified 


Description 


2004-10-11 0.2.0 Stephane 
Fellah, 
Arliss 
Whiteside 


All Update to latest schema version after OWS-2 
implementation and adding more explanation 


2004-11-09 0.2.1 Arliss 
Whiteside 


All Many small corrections and improvements 


2004-12-21 0.2.2 Arliss 
Whiteside 


A, All Added draft of Annex A, Many small corrections 
and improvements 


2005-01-07 0.2.2 Arliss 
Whiteside 


i, 2, 3, 6, 9.2.1, 
A, E.12 


Some small improvements and corrections, many 
suggested by Charles Roswell 


2005-01-31 0.3.0 Arliss 
Whiteside 


Cover, i Approved Recommendation Paper 


2007-05-16 0.4.0 Arliss 
Whiteside 


Most Draft Revised Recommendation Paper, updated to 
use OWS Common 1.1 


2007-10-08 0.4.1 Arliss 
Whiteside 


cover, vii, B Approved Revised Recommendation Paper 


vi. Changes to the OGC Abstract Specification 


The OpenGIS
® 


Abstract Specification does not require changes to accommodate the 


technical contents of this document.  


vii. Future work 


NOTE            Generalization of the service interface now specified in this Discussion Paper has not yet 
been considered by the OGC. Such generalization of this interface will include considering combining the 
functions supported here with functions currently supported by other OGC (approved and draft) Web 
Services. 


EDITOR’S NOTE This clause needs to be updated based on recent changes to this document. 


This document should be updated to use GML 3.2. This document now uses the CRS 


Schemas for GML 3.1.1, in document [OGC 04-092r4]. 


The design and documentation questions that need to be resolved for the initial version of 


the WCTS specification, with the decisions made then being incorporated in this draft 


specification, include: (in no particular order) 


a) What standardized CRS Application Schemas should be specified for ―well-known‖ 
coordinate operations? (I assume most of these Application Schemas and XML 


documents will be specified in the CRS Schemas application profile.) 


b) What standardized XML documents should be specified for ―well-known‖ coordinate 
operations, operation methods, CRSs, and units? (I assume most of these XML 


documents will be specified in the CRS Schemas application profile.) 


c) What standard srsName contents should be defined (in the CRS Schemas Application 
Profile or WCTS)? 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xi 
 


d) How will the Transform operation compute a transformed "boundedBy" 
gml:Envelope in an enclosing feature or feature collection? (Notice that the name 


gml:Box was deprecated in GML 3.0, and gml:Envelope was re-defined in GML 


3.1.1.) 


e) What are the GML geometric primitive types that should be transformed by a WCTS 
server? 


f) When the CRS Schemas are used to transfer actual definitions of user defined 
coordinate operations and/or CRSs, how will the required gml:id attributes be used? 


How will they be used in server inputs? How will they be used in server outputs? 


Specifically, what values will they be used when the transferred GML object is never 


expected to be the target of a remote reference? 


g) What abilities will be included in the ―limited‖ WCTS? (The questions in this list 
that are answered with non-minimum abilities might have lesser abilities defined as 


required in the limited WCTS profile.) 


h) What standard GML Application Schema(s) should be specified for use in 
transforming one or more point positions? 


i) Include position in inputs to IsTransformable operation? 


A later version of this draft specification is expected to specify a limited set of abilities 


required to be implemented by a minimal conformant server implementation. Abilities 


that might be excluded from or limited in that minimal set include: 


a) Not support transforming coverages, or not support transforming ordinary features 


b) Reduce set of GML geometric primitive types handled 


c) Reduce sets of coordinate operations and operation methods handled 


d) Not support any Concatenated Operation abilities 


e) Not use any specified CRS Application Schemas for well-known coordinate 
operations 


f) Limit GML Application Schemas which can be used to define feature and feature 
collection types, in inputs to the Transform operation, more than just restricting the 


geometric primitive types included in the input features and feature collections. 


g) Not compute a transformed "boundedBy" gml:Envelope in any enclosing feature or 
feature collection, by the Transform operation. 


h) Not implement the optional "Sections" and ―updateSequence‖ parameters in the 
GetCapabilities operation request 


Future versions of this WCTS specification are expected to consider various possible 


expansions of the abilities specified herein, including: 


a) Expand the set of GML geometric primitive types that can be handled by the 
Transform operation 


b) Allow combinations of Feature, File, and Remote OWS (e.g., WFS) inputData in one 
Transform operation request. If so, specify what flexibility should be and can be 


supported 







OGC 07-055r1 


xii Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


c) Allow transforming geometry elements separate from containing features 


d) Provide special abilities for transforming a single point or few points, not otherwise 
contained in a GML geometry or feature. If so, specify what special abilities. 


e) Support returning information on the quality of the available transformation(s), from 
the IsTransformable operation 


f) Support returning information on the quality of the transformation performed, from 
the Transform operation 


g) Support updating metadata to reflect the transformation performed, from the 
Transform operation 


h) Require supporting transformations that can change the type of a geometry element. 
(For example, North Pole point becomes a line.) 


i) Check the contents of the input srsName attributes, in geometry elements being 
transformed. If so, specify what form(s) of srsName contents are supported within 


the geometries included in, or referenced by, Transform operation requests. 


j) When appropriate, change the locations of srsName attributes in geometries 
transformed, relative to input locations. (In GML 3.1.1, the srsName must either be 


included in each geometry element or inherited from an enclosing geometry element. 


The GML 3.1.1 the srsName can be inherited from the "boundedBy" gml:Envelope 


element in an enclosing feature or feature collection.) 


k) Support use of two-way coordinate operations and operation methods. If so, specify 
required type(s) of support. (A coordinate operation and its operations method are 


generally two-way, as defined in Abstract Specification Topic 2.) 


l) Support user-defined operation methods. If so, specify how operation methods can be 
user specified any limitations on such user-defined operation methods. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. xiii 
 


Foreword 


This version of this future specification supersedes all previous versions, including OGC 


documents 05-013, 04-072, and 02-061r1, titled Web Coordinate Transformation Service 


draft Implementation Specification. This engineering report supplements, and does not 


supersede, OGC document 00-009 titled OpenGIS Implementation Specification: 


Coordinate Transformation Services.  


This WCTS interface uses profiles of the Geography Markup Language (GML) Version 


3.1.1 [OGC 04-092r4], which partially-specifies XML-encoding of geospatial data. The 


geometries in GML are largely based on ISO 19107:2003. 


This specification includes eight annexes; Annexes A, B, C, and G are normative and the 


other four are informative. 


Attention is drawn to the possibility that some of the elements of this document may be 


the subject of patent rights. The Open Geospatial Consortium Inc. shall not be held 


responsible for identifying any or all such patent rights. To date, no such patent rights 


have been claimed or identified. 


Recipients of this document are requested to submit, with their comments, notification of 


any relevant patent claims or other intellectual property rights of which they may be 


aware that might be infringed by any implementation of the standard set forth in this 


document, and to provide supporting documentation. 


 







OGC 07-055r1 


xiv Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Introduction 


This document specifies the interface to a Web Coordinate Transformation Service 


(WCTS), which can be used by geospatial applications and other services. Such 


transformation of geospatial data from one coordinate reference system (CRS) to another 


is frequently required when using data from different sources in one application. That is, 


geospatial data are often stored in different coordinate reference systems (CRSs). To use 


together data stored in different CRSs, such data must be transformed into the same CRS. 


Not all applications or services are capable of performing such transformations.  


This document specifies an ―OGC Web Service‖ type of interface to a service that 


performs coordinate transformations. Such transformations include all the types of 


coordinate operations, including both ―transformations‖ and ―conversions‖. This service 


inputs digital features or coverages in one CRS and outputs the same features in a 


different CRS. The service inputs include identifications of the input and output CRSs, 


and optionally the coordinate transformation between these CRSs. 


This WCTS interface specifies five operations that can be requested by a client and 


performed by a WCTS server. Those operations are: 


a) Transform (required implementation) – This operation allows a client to request 
transformation of the coordinates in a specified set of features, and to receive back 


the transformed features. This operation allows the client to identify the CRS of the 


input features and the desired CRS of the output features. Each feature can be a 


single feature, a feature collection containing multiple features, or a coverage. 


b) GetCapabilities (required implementation) – This operation allows a client to request 
and receive back a service metadata (or Capabilities) document that describes the 


abilities of the specific server implementation. 


c) IsTransformable (optional implementation) – This operation allows a client to ask a 
server if it can perform any coordinate transformation from one identified CRS into 


another. This operation also allows the client to ask if this transformation can be 


performed on specified geometric primitive or coverage types. The response back is 


binary, plus problem information when the answer is false. 


d) GetTransfomation (optional implementation) – This operation allows a client to 
request and receive back the XML-encoded definition of the server-known 


coordinate transformation(s) from one identified CRS into another. 


e) GetResourceByID (optional implementation) – This operation allows a client to 
request and receive back XML-encoded definitions of one or more identified abilities 


provided by the WCTS server. Those abilities can be coordinate transformations, 


coordinate reference systems (CRSs), or operation methods. 







OpenGIS
®
 Discussion Paper OGC 07-055r1 


 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 1 
 


Web Coordinate Transformation Service (WCTS) 
draft Implementation Specification 


1 Scope 


This document specifies the interface to a Web Coordinate Transformation Service 


(WCTS), which can be used by geospatial applications and other services. More 


specifically, this service transforms geospatial coordinates from one coordinate reference 


system (CRS) into another, as requested by clients of this service. This WCTS is an OGC 


Web Service, with appropriate similarities to other OGC Web Services. 


The central ability of the specified WCTS is to transform digital feature and coverage 


data from one CRS to another. The supported abilities include allowing a client to: 


a) Provide the feature or coverage data to be transformed. 


b) Identify the current CRS of the data to be transformed. 


c) Identify the needed CRS of the transformed data. 


d) Identify the desired coordinate transformation between the two CRSs, when desired. 


e) Check if a coordinate transformation between two identified CRSs is supported by a 
WCTS server. 


f) Determine the source and target CRSs that are supported by a WCTS server. 


g) Obtain definitions of the CRSs that are supported by a WCTS server. 


h) Determine the coordinate transformations that are supported by a WCTS server. 


i) Obtain definitions of the coordinate transformations that are supported by a WCTS 
server. 


j) Determine the geometric primitive types that are supported by a WCTS server. 


k) Determine the coverage types that are supported by a WCTS server. 


l) Determine if user-defined coordinate transformations are supported by a WCTS 
server. 


m) Determine the operation methods that are supported by a WCTS server which can be 
used in user-defined coordinate transformations. 


n) Obtain definitions of the operation methods that are supported by a WCTS server. 


o) Provide user-defined coordinate transformation definitions to a WCTS server. 


p) Determine if user-defined CRSs are supported by a WCTS server. 


q) Provide user-defined CRS definitions to a WCTS server. 







OGC 07-055r1 


2 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


NOTE  The above list can be considered to be a list of requirements on the design of this WCTS 
interface. 


This specification is applicable to geospatial data that are XML encoded using GML 


3.1.1 [OGC 04-092r4], and profiles thereof. The geometries in GML 3.1.1 are largely 


based on ISO 19107:2003. This specification is applicable to geospatial data that use 


CRSs and coordinate transformations which are or can be defined using the XML 


encoding of coordinate reference system definitions specified in GML 3.1.1. Those 


coordinate reference system definitions are largely based on OGC Abstract Specification 


Topic 2 [OGC 05-103], which is the proposed revision of ISO 19111. 


This specification largely uses the terminology used in Abstract Specification Topic 2. 


However, all the types of coordinate operations defined in that document are usually 


referred to here as transformations or coordinate transformations. (That document 


separately defines ConcatenatedOperations, PassThroughOperations, Conversions, and 


Transformations, as the concrete subtypes of the abstract CoordinateOperation.) 


2 Conformance 


Conformance with this specification shall be checked using all the relevant tests specified 


in Annex A (normative). 


In order to conform to this specification, a software implementation shall choose to 


implement one or more of the conformance classes specified in Annex B (normative). 


3 Normative references 


The following normative documents contain provisions which, through reference in this 


document, constitute provisions of this specification. For dated references, subsequent 


amendments to, or revisions of, any of these publications do not apply. For undated 


references, the latest edition of the normative document referred to applies. 


European Petroleum Survey Group database: EPSG Geodesy Parameters, available 


through http://www.epsg.org/ 


ISO 19123:2005, Geographic information - Schema for coverage geometry and functions 


OGC 05-094r1, GML 3.1.1 CRS support profile 


OGC 05-095r1, GML 3.1.1 common CRSs profile 


OGC 05-096r1, GML 3.1.1 grid CRSs profile 


OGC 05-099r2, GML 3.1.1 simple dictionary profile 


OGC 05-103, The OpenGIS
® 


Abstract Specification Topic 2: Spatial referencing by 


coordinates 


OGC 06-023r1, URNs of definitions in ogc namespace 


OGC 06-047r1, GML simple features profile 



http://www.epsg.org/





OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 3 
 


OGC 07-067r2, Web Coverage Service (WCS), Version 1.1.1 


OGC 06-121r3, OGC Web Services Common Specification, Version 1.1.0 


NOTE  This OWS Common Specification contains a list of normative references that are also 


applicable to this Implementation Specification. 


4 Terms and definitions 


For the purposes of this specification, the definitions given in Abstract Specification 


Topic 2: Spatial referencing by coordinates [OGC 05-103] and in OGC Web Services 


Common Specification [OGC 06-121r3] shall apply. In addition, the following terms and 


definitions apply. 


4.1  
coverage 


feature that acts as a function to return values from its range for any direct position within 


its spatial, temporal, or spatiotemporal domain 


EXAMPLE  Examples include a raster image, polygon overlay, or digital elevation matrix. 


4.2  
feature 


abstraction of real world phenomena [ISO 19101] 


4.3  
geometric primitive 


a geometric object that is not decomposed further into other primitives 


NOTE  All geometric primitives are oriented in the direction implied by the sequence of their 
coordinate tuples. 


5 Conventions 


5.1 Abbreviated terms 


Most of the abbreviated terms listed in Subclause 5.1 of the OWS Common Specification 


[OGC 06-121r3] apply to this document, plus the following abbreviated terms. 


OWS-2 OGC Web Services interoperability initiative, phase 2 


RFC  Request for Comments 


WCTS Web Coordinate Transformation Service 


5.2 UML notation 


The diagrams that appear in this specification are presented using the Unified Modeling 


Language (UML) static structure diagram, as described in Subclause 5.2 of the OGC 


Web Services Common Specification [OGC 06-121r3]. 







OGC 07-055r1 


4 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


5.3 Used parts of other documents 


This document uses significant parts of document [OGC 06-121r3]. To reduce the need to 


refer to that document, this document copies some of those parts with small 


modifications. To indicate those parts to readers of this document, the largely copied 


parts are shown with a light grey background (15%). 


5.4 Platform-neutral and platform-specific specifications 


As specified in Subclause 5.4 of the OWS Common Specification [OGC 06-121r3], this 


document includes both platform-neutral and platform-specific specifications.  


EXAMPLES 1 Platform-neutral specifications are contained in Subclauses 8.2.1, 8.3.2, 9.2.1. 9.3.2, 
10.2.1, 10.3.2, 11.2.1, 11.3.2, 12.2.1and 12.3.2. 


EXAMPLES 2 Platform-specific specifications for KVP encoding are contained in Subclauses 8.2.4, 
9.2.3, 10.2.3, 11.2.3 and 12.2.4. 


EXAMPLES 3 Platform-specific specifications for XML encoding are contained in Subclauses 8.2.5, 
8.3.4, 9.2.4, 9.3.6, 10.2.3, 10.3.3, 11.2.4, 11.3.4, and 12.2.5. 


5.5 Data dictionary tables 


The UML model data dictionary is specified herein in a series of tables. The contents of 


the columns in these tables are described in Table 1 of [OGC 06-121r3]. 


6 WCTS overview 


A Web Coordinate Transformation Service (WCTS) transforms digital geospatial data 


from one Coordinate Reference System (CRS) to another. The geospatial data 


transformed is digital feature data, including digital coverages. Such transformations 


include all the types of coordinate operations, including both coordinate 


―transformations‖ and ―conversions‖. This service inputs digital features in one CRS and 


outputs the same features in a different CRS. The service inputs include the 


identifications of the input and output CRSs, and optionally the coordinate transformation 


between these CRSs. 


A Web Coordinate Transformation Service (WCTS) can be used by many different 


geospatial applications and other services. Transformation of geospatial data from one 


Coordinate Reference System (CRS) to another is a frequent requirement when using 


data from different sources in one application. That is, geospatial data are often stored in 


different coordinate reference systems (CRSs). To integrate or otherwise use together 


data stored in different CRSs, such data must be transformed or converted into the same 


CRS. Not all applications or services are capable of directly performing such 


transformations. More information on expected uses of a WCTS is provided in Annex C: 


Use cases (informative). 


The WCTS is an ―OGC Web Service‖ type of interface, where client and server software 


interact using HTTP messages. This WCTS interface specifies five operations that can be 


requested by a client and performed by a WCTS server. Those operations are: 


a) Transform (required implementation by servers) – This operation allows a client to 
request transformation of the coordinates in a specified set of features, and to receive 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 5 
 


back the transformed features. This operation allows the client to identify the CRS of 


the input features and the desired CRS of the output features. Each feature can be a 


single feature, a feature collection containing multiple features, or a coverage. 


b) GetCapabilities (required implementation by servers) – This operation allows a client 
to request and receive back a service metadata (or Capabilities) document that 


describes the abilities of the specific server implementation. This operation also 


supports negotiation of the specification version being used for client-server 


interactions. 


c) IsTransformable (optional implementation by servers) – This operation allows a 
client to ask a server if it can perform any coordinate transformation from one 


identified CRS into another. This operation also allows the client to ask if this 


transformation can be performed on specified geometric primitive or coverage types. 


This transformation can be a single transformation, or a ConcatenatedOperation 


which combines multiple single transformations. The response back is binary, plus 


problem information when the answer is false. 


d) GetTransfomation (optional implementation by servers) – This operation allows a 
client to request and receive back the definition of the server-known coordinate 


transformation(s) from one identified CRS into another. Each transformation can be a 


single transformation, or a ConcatenatedOperation that combines multiple single 


transformations. Each transformation definition is encoded in XML using the GML 


3.1.1 Grid CRSs profile [OGC 05-096r1]. 


e) GetResourceByID (optional implementation by servers) – This operation allows a 
client to request and receive back definitions of one or more identified abilities 


provided by the WCTS server. Those abilities can be coordinate transformations, 


coordinate reference systems (CRSs), or operation methods. Each transformation, 


CRS, or operation method definition is encoded in XML using the GML 3.1.1 Grid 


CRSs profile [OGC 05-096r1]. 


The GetCapabilities operation has many similarities to the GetCapabilities operation in 


other OGC Web Services, including the WMS, WFS, and WCS. The other four WCTS 


operations also have similarities to other operations in other OWSs. Many of the WCTS 


interface aspects that are common with other OWSs are thus specified in the OWS 


Common Specification [OGC 06-121r3]. Many of these common aspects are normatively 


referenced herein, instead of being repeated in this specification. 


Figure 1 is a simple UML diagram summarizing the WCTS interface. This class diagram 


shows that the WCTService interface class inherits the GetCapabilities and 


GetResourceByID operations from the OGCWebService interface class, and adds the 


―transform‖, isTransformable, and getTransformation operations. (This capitalization of 


names uses the OGC/ISO profile of UML.) A more complete UML model of the WCTS 


is provided in Annex E (informative). 







OGC 07-055r1 


6 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


+ getResourceByID(request : GetResourceByID) : Resources


(from OWS Get Capabi lites)


<<Interface>>


WCTService


+ transform(request : Transform) : OperationResponse


+ isTransformable(request : IsTransformable) : IsTransformableResponse


+ getTransformation(request : GetTransformation) : Dictionary


Each server instance normally instantiates only one object of this 


class, and this object always exists while rhe server is available.


 


Figure 1 — WCTS interface UML diagram 


NOTE  In this UML diagram, the request and response for each operation is shown as a single 


parameter that is a data structure containing multiple lower-level parameters, which are discussed in 


subsequent clauses. The UML classes modelling these data structures are included in the complete UML 


model in Annex E. 


Each of the five operations is described in more detail in subsequent clauses. 


7 Shared aspects 


7.1 Introduction 


This clause specifies aspects of Web Coordinate Transformation Service behaviour that 


are shared by several operations. 


7.2 Shared data structures 


This clause specifies four data structures used by multiple operation requests and 


responses specified in the following clauses. The parameter names, meanings, and 


formats shall be as specified below. These data structures are shown graphically in the 


UML class diagram in Figure 2 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 7 
 


SourceAndTargetCRSs


+ sourceCRS : URI


+ targetCRS : URI


SC_CRS {Abstract}
(from ISO 19111)


Transformation


0..1


0..*


+targetCRS0..1


0..*


0..1


0..*


+sourceCRS 0..1


0..*


GeometryType


+ Envelope


+ Point


+ LineString


+ Polygon


+ LinearRing


+ Curve


+ LineStringSegment


+ ArcString


+ Arc


+ Circle


+ ArcStringByBulge


+ ArcByBulge


+ ArcByCenterPoint


+ CircleByCenterPoint


+ CubicSpline


+ BSpline


+ Bezier


+ OrientableCurve


+ Surface


+ PolygonPatch


+ Triangle


+ Rectangle


+ Ring


+ OrientableSurface


+ Solid


+ CompositCurve


+ CompositeSurface


+ CompositeSolid


<<CodeList>>


CoverageType


+ ThiessenPolygon


+ QuadrilateralGrid


+ HexagonalGrid


+ TriangulatedIrregularNetwork


+ SegmentedCurve


<<CodeList>>


 


Figure 2 — WCTS shared operation data UML class diagram 


Table 1 specifies the class (or data structure) named SourceAndTargetCRSs, which 


references the input and desired output coordinate reference systems (CRSs), and is used 


by multiple operation requests. 


Table 1 — SourceAndTargetCRSs data structure 


Names Definition Data type and value Multiplicity 


sourceCRS 


SourceCRS 


Reference to input 
coordinate reference 
system 


URI a 


Values defined in service metadata 
or in data known to client 


One (mandatory) 


targetCRS 


TargetCRS 


Reference to desired output 
coordinate reference 
system 


URI a 


Values defined in service metadata 
or in data known to client 


One (mandatory) 


a A URI shall reference a CRS as specified in Subclause 10.3 of [OGC 06-121r3]. 


 


Table 2 specifies the class (or data structure) named Transformation, which references or 


defines a coordinate Transformation, and is used by multiple operation requests and 


responses. 







OGC 07-055r1 


8 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Table 2 — Transformation data structure 


Names Definition Data type and value Multiplicity and use 


coordinate
Operation 


(none) 


Reference to or 
definition of 
coordinate 
operation 


URI a or CC_CoordinateOperation b 


Values defined in service metadata 
or known to client 


One (mandatory) 


sourceCRS 


SourceCRS 


Reference to or 
definition of input 
coordinate 
reference system 


URI a or SC_CRS c 


Values defined in service metadata 
or known to client 


Zero or one (optional) 


Include when operation 
is Conversion 


targetCRS 


TargetCRS 


Reference to or 
definition of output 
coordinate 
reference system 


URI a or SC_CRS c 


Values defined in service metadata 
or known to client 


Zero or one (optional) 


Include when operation 
is Conversion 


a A URI shall reference a CRS or coordinate operation as specified in Subclause 10.3 of [OGC 06-121r3]. 


b The CC_CoordinateOperation UML class defines a coordinate operation and is specified in Subclause 12.4 
of OGC Abstract Specification Topic 2. GML 3.1.1 [OGC 04-092r4] specifies how to XML encode the 
CC_CoordinateOperation class. A KVP encoding of the CC_CoordinateOperation class is not considered 
practical. 


c The SC_CRS UML class defines a CRS and is specified in Subclause 9.4 of OGC Abstract Specification 
Topic 2. GML 3.1.1 [OGC 04-092r4] specify how to XML encode the SC_CRS class. A KVP encoding of the 
SC_CRS class is not considered practical. 


 


Table 3 specifies the CodeList class named CoverageType, which lists various possible 


coverage types, and is used by multiple operation requests and responses. These types are 


based on ISO 19123. 


Table 3 — CoverageType values 


CoverageType value Definition 


ThiessenPolygon 2D Coverage with domain consisting of set of polygons that each enclose 
one of a set of points in a plane so as to include all positions that are 
closer to that point than to any other point in the set 


QuadrilateralGrid 2D Coverage with domain consisting of set of points defined by the 
intersections of two sets of straight lines in one plane, in which the lines 
of each set intersect lines of other set in a systematic way 


GRID Abbreviation for QuadrilateralGrid described above 


HexagonalGrid 2D Coverage with domain consisting of network of hexagons centred on a 
set of grid points in a plane, using interpolation between the centres of 
the hexagons surrounding the grid points 


TriangulatedIrregular
Network 


2D Coverage with domain consisting of set of triangles which partition the 
convex hull of a set of points in a plane into a computationally unique set 
of non-overlapping triangles, with each triangle formed by three of the 
points 


TIN Abbreviation for triangulated irregular network described above 


SegmentedCurve 1D Coverage with domain consisting of set of curves that includes all 
positions in all curves in a set of curves 


 


Table 4 specifies the CodeList class named GeometryType, which lists possible geometry 


primitive types, and is used by multiple operation requests and responses. These types are 


based on GML 3.1.1, using the XML Schema type name without the ―Type‖ suffix. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 9 
 


Table 4 — GeometryType values 


GeometryType value 


Envelope 


Point 


LineString 


Polygon 


LinearRing 


Curve 


LineStringSegment 


ArcString 


Arc 


Circle 


ArcStringByBulge 


ArcByBulge 


ArcByCenterPoint 


CircleByCenterPoint 


CubicSpline 


BSpline 


Bezier 


OrientableCurve 


Surface 


PolygonPatch 


Triangle 


Rectangle 


Ring 


OrientableSurface 


Solid 


CompositeCurve 


CompositeSurface 


CompositeSolid 


 


These shared UML classes are XML encoded in the attached normative XML Schema 


Document named wctsCommon.xsd.  The CoverageType and GeometryType are UML 


<CodeList> stereotyped classes, which are thus converted into XML Schema following 


the GML pattern for XML encoding of <CodeList> classes. That is, in wctsCommon.xsd, 


the normal values of CoverageType and GeometryType are NOT encoded in the XML 
Schema, but in the default-referenced GML Dictionaries named coverageType.xml and 


geometryType.xml, and also attached to this document. This approach is used since not all 


useful values of these quantities are currently known, and this approach allows additional or 


different values to be more easily specified and used. 


 







OGC 07-055r1 


10 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


7.3 Operation request encoding 


The encoding of operation requests may use HTTP GET with KVP encoding and/or 


HTTP POST with XML encoding as specified in Clause 11 of [OGC 06-121r3]. SOAP 


encapsulation of XML encoded operation requests may also be used, as specified in 


Annex G of this document. Table 5 summarizes the WCTS operations and their encoding 


methods defined in this specification. 


Table 5 — Operation request encoding 


Operation Request encoding 


Transform (mandatory) XML and optional SOAP, KVP 


GetCapabilities (mandatory) KVP and optional XML, SOAP 


IsTransformable (optional) XML, SOAP, and/or KVP 


GetTransformation (optional) XML, SOAP, and/or KVP 


GetResourceByID (optional) XML, SOAP, and/or KVP 


 


The KVP values may include XML elements. For example, this is the case when 


encoding a Transform operation request with an in-line feature. That feature shall be 


encoded using GML 3.1.1 encoded to use it the HTTP GET request. 


7.4 Standard operation exceptions 


When a WCTS server encounters an error while performing an operation, it shall return 


an exception report message as specified in Subclause 7.4 of [OGC 06-121r3]. For most 


WCTS operations, the allowed standard exception codes shall include those listed in 


Table 6. For each listed exceptionCode, the contents of the ―locator‖ parameter value 


shall be as specified in the right column of Table 6. 


NOTE  To reduce the need for readers to refer to other documents, all four values listed below are 
copied from Table 25 in Subclause 8.3 of [OGC 06-121r3]. 


Table 6 — Exception codes for WCTS optional operations 


exceptionCode value Meaning of code “locator” value 


OperationNotSupported  Request is for an operation that is not supported by 
this server 


Name of operation 
not supported 


MissingParameterValue Operation request does not include a parameter 
value, and this server did not declare a default 
value for that parameter 


Name of missing 
parameter 


InvalidParameterValue Operation request contains an invalid parameter 
value 


Name of parameter 
with invalid value 


NoApplicableCode No other exceptionCode specified by this service 
and server applies to this exception 


None, omit ―locator‖ 
parameter 


 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 11 
 


8 Transform operation (mandatory) 


8.1 Introduction 


The mandatory Transform operation allows WCTS clients to request transformation of 


coordinates from one coordinate reference system (CRS) into another. Input data is 


provided in the operation request as one or more references to a remote resource or local 


payload (attachment to the message), in a supported format. A remote resource is 


referenced using a URL, which can be a request to a specific server providing the data. 


For example, this remote server may be a WFS or WCS. The WCTS may optionally 


support user-defined coordinate transformations, in which case it is necessary for the 


client to provide the parameter values for the transformation. 


This clause first discusses the Transform operation request and response for digital 


features, largely ignoring grid coverages. The additional Transform operation aspects for 


grid coverages are then discussed in Subclause 8.5. 


8.2 Operation request 


8.2.1 Transform request parameters 


A request to perform the Transform operation shall include the parameters and data 


structures shown graphically in the UML diagram in Figure 3, and specified in Table 7 


and Table 8. 







OGC 07-055r1 


12 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


1


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


(from WCTS Service)


RequestBase


+ version : CharacterString


(from OWS Common)


Shall contain or 


reference data to 


be trqnsformed
SourceAndTargetCRSs


(from WCTS Service)


Transformation
(from WCTS Service)


TransformationChoice


<<Union>>


1


1


+sourceAndTargetCRSs 1


1


1


1


+transformation1


1


InputData
(from OWS Input Output Data)


InterpolationType


+ nearest


+ linear


+ cubic


+ quadratic


+ none


(from Interpolation Methods)


<<CodeList>>


GridCRS
(from WCS GridCRS)


Transform


+ request : CharacterString = "Transform" {frozen}


+ outputFormat : CharacterString


+ store [0..1] : Boolean = "False"


1


1


+transformationChoice1


1


1


1


+inputData1


10..1


1


+interpolationType0..1


1


1


1


+gridCRS


1


 


Figure 3 — WCTS Transform request UML class diagram 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 13 
 


NOTE 1 The first three parameters listed below are largely copied from Table 26 in Subclause 9.2.1 of 
[OGC 06-121r3]. The InterpolationType parameter listed below is largely copied from Subclause I.4.1 of 
WCS 1.1 [OGC 07-067r2]. The OutputFormat parameter listed below is largely copied from Table 32 in 
Subclause 10.6.1 of [OGC 06-121r3]. 


Table 7 — Parameters in Transform operation request 


Names Definition Data type and value Multiplicity and use 


service 


service 


Service type 
identifier 


Character String type, not empty 


Value is OWS type abbreviation, 
namely ―WCTS‖ 


One (mandatory) 


request 


request 


Operation name Character String type, not empty 


Value is operation name, namely 
―Transform‖ 


One (mandatory) 


version 


version 


Specification 
version for 
operation 


Character String type, not empty 


Value is specified by each 
Implementation Specification 
and Schemas version 


One (mandatory) 


transformation
Choice 


(none) 


Identification or 
definition of 
desired coordinate 
operation 


TransformationChoice data 
structure, see Table 8 


One (mandatory) 


gridCRS 


GridCRS 


Definition of output 
GridCRS 
referenced by 
transformation 


GridCRS data structure, see 
Annex G of WCS 1.1 [OGC 
07-067r2] 


Zero or one (optional) 


Include when 
transforming grid 
coverage 


inputData  


InputData 


Data to be 
transformed 


InputData data structure, see 
13.5 of [OGC 06-121r3]  


One (mandatory) 


interpolation


Type a 


Interpolation
Type 


Identifier of spatial 
interpolation type 
which should be 
used to transform 
coverage 


InterpolationType code list, see 
I.4.1 of [OGC 07-067r2] 


Values defined in service 
metadata 


Zero or one (optional) 


Include when 
transforming 
coverage(s) using 
spatial interpolation 


outputFormat 


OutputFormat 


Identifier of output 
format to be used 
for the transformed 
features or 


coverage(s)
 b


 


MIME type, see Subclause 10.5 
of [OGC 06-121r3] 


Allowed values defined in 
service metadata 


Zero or one (optional) 


Include when output 
data not in input 
format 


store 


store 


Specifies if 
transformed data 
to be stored as 
remote resource(s) 


Boolean 


Values are: true or false 


Zero or one (optional) 


Include when not 
default (false, return 
in response) 


a Transforming a grid coverage usually requires resampling of coverage values to obtain the values at 
different grid points. For example, a coverage can be transformed from an unrectified grid to a georectified 
grid. When transforming a grid coverage, the SourceCRS and TargetCRS parameters shall completely specify 
the grids of the input and output coverages. These SourceCRS and TargetCRS parameters can be included in 
either the Transformation or the SourceAndTargetCRSs data structures. 


b Allows WCTS servers to perform reformatting. The output formats supported by a WCTS are listed in the 
Contents section of the Capabilities document. 


 
EDITOR’S NOTE  This draft does not support different interpolation types for different components of a 
coverage range (as allowed in WCS 1.1). 







OGC 07-055r1 


14 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


EDITOR’S NOTE  The Transformations (or coordinate operations) implemented by WCTS servers are 
currently limited to transformations in one direction only (not including the reverse direction). The group 
working on the WCTS specification has not yet considered what would be required to implement two-way 
transformations. 


EDITOR’S NOTE It is not clear whether an optional bounding box would be useful in the Transform 
operation request. 


Table 8 — Parameters in TransformationChoice data structure 


Names Definition Data type and value Multiplicity and use 


sourceAnd
TargetCRSs 


SourceAnd
TargetCRSs 


References to SourceCRS 
and desired TargetCRS 


SourceAnd
TargetCRSs data 
structure, see Table 1 


Zero or one (Mutually 
exclusive) 


a
 


transformation 


Transformation 


Identification or definition of 
desired coordinate 
operation 


Transformation data 
structure, see Table 2 


Zero or one (Mutually 
exclusive) 


b
 


a Included when the server is permitted to select any coordinate operation which it knows about that can 
transform coordinates from the identified sourceCRS to the targetCRS. 


b Included when client is specifying a specific coordinate operation, possibly a user-defined coordinate 
operation. In this use, this element shall either: 


* Reference a well-known coordinate operation, whose definition is known to the WCTS server 


* Contain a URL from which that transformation definition can be retrieved, using GML encoding 


* Contain the coordinate operation definition object, using GML encoding, and a xlink:href value containing 
the URN that references this definition 


 


8.2.2 Use of InputData structure 


Each ReferenceGroup in the InputData structure shall reference separate data to be 


transformed, each in one contained Reference data structure. The data referenced may be 


attached to the Transform request or referenced from an external source. In addition to 


the data to be transformed, each ReferenceGroup may also reference associated metadata, 


in separate References. For example, this metadata can include a human readable title 


and/or abstract, plus a link to more metadata. 


NOTE  The associated referenced metadata will be either passed unchanged to the Transform output 


OperationResponse, or modified to reflect the coordinate transformation performed, as specified in 


Subclause 8.3.1. For example, attached data quality metadata might be updated to reflect the coordinate 


transformation applied. 


For digital feature data, the data to be transformed can be encoded as either a 


gml:_Geometry or a gml:_Feature that contains a gml:_Geometry. For grid coverage 


data, the grid point values can be encoded in any suitable format that is supported by the 


WCTS server. The coverage metadata may be encoded in the same coverage file and/or 


in separate metadata files that are encoded in XML. 


The xlink:role in the Reference to data to be transformed shall be included and used to 


indicate the type of the data to be transformed, as specified in Table 9. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 15 
 


Table 9 — Data types to be transformed 


Data type Value of xlink:role 


Feature collection FeatureCollection 


Single feature Feature 


Geometry Geometry 


Grid coverage Coverage 


 


8.2.3 Transform request implementation requirements 


The ―Multiplicity and use‖ columns in Table 7 and Table 8 specify the optionality of 


each listed parameter in the Transform operation request. Table 10 specifies the 


implementation of those parameters by servers and clients that implement the WCTS. 


Table 10 — Implementation of parts of Transform operation request 


Name Multiplicity Server implementation Client implementation 


service One (mandatory) Each shall be implemented by 


all servers a 


Each shall be implemented by 
all clients, using allowed 
values 


request One (mandatory) 


version One (mandatory) 


InputData One (mandatory) 


SourceAnd
TargetCRSs 


Zero or one 
(Mutually 
exclusive) 


Each shall be implemented by 


all servers a 


Each should be implemented by 
all clients 


Transformation 


GridCRS Zero or one 
(optional) 


Each shall be implemented by 
all servers that can 


transform coverages a 


Each should be implemented by 
all clients that can transform 
coverages Interpolation


Type 
Zero or one 


(optional) 


OutputFormat Zero or one 
(optional)  


Shall be implemented by all 
servers that offer different 


output formats a, b 


Should be implemented by a 


client c 


store Zero or one 
(optional) 


Shall be implemented by all 
servers that can transform 


coverages a, b, d 


May be implemented by a client 
c 


a Server shall check that each value received is an allowed value. 


b If this parameter is not implemented or not received, server shall provide the specified default response. If 
implemented and received, server shall provide specified response. 


c If this parameter is not provided, client shall expect the specified default response. If provided, client shall 
allow default or specified response. 


d The ―store‖ parameter may also be implemented by servers that cannot transform coverages. 


 


8.2.4 Transform request KVP encoding (optional) 


WCTS servers may implement HTTP GET transfer of the Transform operation request, 


using KVP encoding. The KVP encoding of the Transform operation request is limited to 


transforming one gml:_Feature or gml:_Geometry, and shall use the parameters specified 







OGC 07-055r1 


16 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


in Table 11. The parameters listed in Table 11 shall be as specified in Table 7 and Table 


8 above. 


Table 11 — Transform operation request URL parameters 


Name and example a Optionality Definition and format 


service=WCTS Mandatory Service type identifier 


request= Transform Mandatory Operation name 


version=0.0.0 Mandatory  Specification and schema version for this operation 


sourceCRS=urn:ogc:def
:crs:EPSG:6.3:4326 


Optional b  Identifier URI of input coordinate reference system 


targetCRS=urn:ogc:def:
crs:EPSG:6.3:32611 


Optional b  Identifier URI of desired output coordinate reference system 


transformation=urn:ogc
:def:coordinateOperati
on:EPSG:6.6:TBD 


Optional b Identifier URI of desired coordinate operation 


inputData=TBD Mandatory feature data to be transformed, either encoded inline as GML 
or referenced using a URL 


interpolation
Type=linear 


Optional Identifier of interpolation type that should be used to transform 
a coverage 


outputFormat=TBD Optional c Identifier of output format to be used for the transformed 
features or coverage c 


store=true Optional Boolean (true and false values) used to indicate if the 
transformed data needs to be stored on a remote resource or 
returned directly in the response. By default, it is set to false. 
(return directly in response) 


a All parameter names are here listed using mostly lower case letters. See Table 1 of [OGC 06-121r3] for 
UML and XML naming conventions. 


b Either the SourceCRS and TargetCRS shall be included, or the Transformation shall be included. If the 
SourceCRS and TargetCRS are included, the server is permitted to select any coordinate operation which it 
knows about that can transform coordinates from the sourceCRS to the targetCRS identified. When the 
Transformation is included, this "transformation" shall not be a Conversion and shall either: 


   * Reference a coordinate operation listed in the Contents part of the Capabilities XML document 


   * Contain a URL from which the definition of a coordinate operation can be retrieved using GML encoding 


c Allows advanced WCTS servers to perform reformatting. The output formats supported by a WCTS are 
listed in the Contents section of the Capabilities document. 


 


8.2.5 Transform request XML encoding (required) 


All WCTS servers shall implement HTTP POST transfer of the Transform operation 


request, using XML encoding only. The XML schema fragment for the Transform 


request is specified by the Transform element in the attached normative 


wctsTransform.xsd file. This fragment uses the gmlGridCRSsProfile of GML 3.1.1, as 


specified in [OGC 05-096r1], which is referenced in the attached normative 


wctsCommon.xsd file. This fragment also uses the interpolationMethods.xsd part of the 


WCS 1.2 XML Schema. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 17 
 


8.2.6 Transform request SOAP encoding 


WCTS servers may implement SOAP version 1.2 transfer of the Transform operation 


request as specified in Annex G, using the XML encoding referenced above. 


8.3 Operation response 


8.3.1 Transform operation exceptions 


When a web coordinate transformation server encounters an error while performing a 


Transform operation, it shall return an exception report message as specified in Subclause 


7.4 of [OGC 06-121r3]. The allowed exception codes shall include those listed in Table 


12. For each listed exceptionCode, the contents of the ―locator‖ parameter value shall be 


as specified in the right column of Table 12. 


NOTE  The first three values listed below are copied from Table 25 in Subclause 8.3 of [OGC 06-
121r3]. 


Table 12 — Exception codes for Transform operation 


exceptionCode value Meaning of code “locator” value 


MissingParameterValue Request does not include a parameter value, and 
this server did not declare a default value for 
that parameter a 


Name of missing 
parameter 


InvalidParameterValue Request contains an invalid parameter value Name of parameter 
with invalid value 


NoApplicableCode No other exceptionCode specified by this service 
and server applies to this exception 


None, omit ―locator‖ 
parameter 


NoInputData No input data was available from a specified 
source for input data b 


Value of xlink:href 
in InputData 


InvalidArea One or more points in InputData are outside the 
domainOfValidity of the transformation 


Value of xlink:href 
in InputData 


TransformException Used where a computation error occurs while 
performing the transformation 


None, omit ―locator‖ 
parameter 


UnsupportedCombination Operation request contains output CRS that can 
not be used within output format 


Name of Format or 
name of CRS 


NotEnoughStorage Operation request specifies ―store‖ result, but not 
enough storage is available to do this 


None, omit ―locator‖ 
parameter 


a This code shall be used when the optional OuputFormat parameter is omitted, but the server does not 
support as an output format the same format as used by the input data. 


b The specified source for input data could be the URL of the file containing a gml:_Feature or an OWS 
operation request to get a gml:_Feature. If remote access of input data was requested, and an exception report 
or other error response was returned by that resource, then the first ExceptionText element shall contain the 
received exception report or other error response. 


 


8.3.2 Transform normal response 


The normal response to a Transform operation request is at least one GML 3.1.1 feature, 


feature collection, geometry, or (usually not GML) grid coverage. More precisely, a 


response from the Transform operation shall use the OperationResponse data structure 


specified in Subclause 13.4 of [OGC 06-121r3]. Each ReferenceGroup in the 







OGC 07-055r1 


18 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


OperationResponse shall reference separate data that was transformed, either attached or 


referenced by URL. 


In addition to the data transformed, each ReferenceGroup may also reference associated 


metadata. For example, this metadata can include a human readable title and/or abstract, 


plus a link to more metadata. The associated referenced metadata shall be either passed 


unchanged to the Transform output OperationResponse, or modified to reflect the 


coordinate transformation performed, as may be specified in a WCTS Profile. 


For digital feature data, the data transformed will be GML 3.1.1 encoded as it was in the 


InputData, either a gml:_Geometry or a gml:_Feature that contains a gml:Geometry. For 


grid coverage data, the grid point values can be encoded in any suitable format that is 


supported by the WCTS server. The coverage metadata can be encoded in the same 


coverage file and/or in separate metadata files that are encoded in XML.  


The xlink:role in the Reference to data transformed shall be included and used to indicate 


the type of the data transformed, as specified in Table 9. 


8.3.3 Transform response encodings 


The encoding of the Transform operation response consists of an OperationResponse 


XML document (see 8.3.4 below), packaged according to the request encoding and the 


value of the ―store‖ parameter (specified in Table 7). WCTS servers shall implement 


Transform response encodings according to Table 13. 


Table 13 — Transform response encodings 


Request encoding store=true
 a
 store=false (default) 


KVP or XML 
OperationResponse 


alone 
(see 8.3.4) 


OperationResponse in MIME 
Multipart message 
(see 8.3.5) 


SOAP 
OperationResponse 


in SOAP envelope 
(see 8.3.6) 


OperationResponse in SOAP 
envelope with Attachments 
(see 8.3.5) 


a Applies only when the server supports the ―store‖ parameter (see Subclause 8.2.3). 


 


If the ―store‖ parameter has the value ―true‖, the server shall store the result file(s) at 


URL-addressable location(s) of its choosing, and return only the OperationResponse data 


structure (within a SOAP envelope in the case of a SOAP request) with references to the 


other files as indicated in 8.3.4 and 8.3.6 below. 


When the ―store‖ parameter is absent or has the value ―false‖, the server shall transfer the 


complete OperationResponse response to the client, either as a MIME multipart message 


(for KVP or XML requests) or as a SOAP message with attachments (for SOAP 


requests). The OperationResponse shall reference the other parts of the MIME multi-part 


message (or SOAP attachments) as indicated in 8.3.5 below. 


8.3.4 Transform response XML encoding (required) 


The XML Schema fragment for the OperationResponse is specified in the normative 


owsInputOutputData.xsd file attached to [OGC 06-121r3]. If multiple data sets are input, 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 19 
 


the transformed data shall be returned in the same order as the input (possibly in 


attachments in a multipart MIME message). 


8.3.5 MIME multipart response 


Transform operation responses transferred using MIME multipart shall be encoded 


according to [IETF RFC 2387], with the first part containing the XML encoded 


OperationResponse element. Every part of the multipart message shall have a content-id. 


The part containing the OperationResponse element shall have a content-id equal to 


―urn:ogc:wcts:1.1:transformResponse‖; other parts may have any content-id values. The 


Reference elements in the OperationResponse element shall reference other parts of the 


multipart message by their content-id values, prefixed by ―cid:‖. 


EXAMPLE 1 If a multipart message contains a part with ―content-id:ottawa_temp.tiff‖, 
then the OperationResponse element would reference that part with the following XML fragment: 


<Reference xlink:href="cid:ottawa_temp.tiff"/> 


NOTE Using prefixes other than ―cid:‖, the Coverages OperationResponse can (but normally should 


not) reference resources external to the MIME multipart message. 


8.3.6 Transform response SOAP encoding (optional) 


WCTS servers that implement SOAP transfer of Transform operation requests shall also 


implement SOAP version 1.2 transfer of the corresponding operation responses. These 


operation responses shall be encoded as specified in Annex G, using the XML encoding 


referenced above. When the ―store‖ parameter has the value ―true‖, the body of the 


SOAP envelope shall contain one XML encoded OperationResponse element with one or 


more references to URLs of files containing coverage content and metadata. 


When the ―store‖ parameter is absent or has the value ―false‖, responses to Transform 


SOAP requests shall be encoded as SOAP with Attachments as defined in [W3C Note] 


(but using SOAP 1.2 rather than SOAP 1.1). These responses shall consist of MIME 


multipart messages, as specified in 8.3.5, with the OperationResponse element contained 


within a SOAP 1.2 envelope, encoded as specified in Annex G. 


8.4 Feature transformation examples 


8.4.1 Transform request example 


If a client wants to transform a GML Feature Collection from EPSG:4326 to 


EPSG:32611 using the default transformation, it may issue the following XML encoded 


Transform operation request: 


<?xml version="1.0" encoding="UTF-8"?> 


<Transform xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:ows="http://www.opengis.net/ows/1.1"  


xmlns:xlink="http://www.w3.org/1999/xlink"  


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsTransform.xsd http://www.opengis.net/ows/1.1 


../../../../ows/1.1.0/owsAll.xsd" ="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-05-01--> 


 <SourceCRS>urn:ogc:def:crs:EPSG:6.0:4326</SourceCRS> 


 <TargetCRS>urn:ogc:def:crs:EPSG:6.0:32611</TargetCRS> 



cid:





OGC 07-055r1 


20 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


 <ows:InputData> 


  <ows:ReferenceGroup> 


   <ows:Title>The Capital feature "Aguascalientes"</ows:Title> 


   <ows:Reference xlink:href="Aquascalientes4326.xml" 


xlink:role="FeatureCollection"/> 


  </ows:ReferenceGroup> 


 </ows:InputData> 


 <OutputFormat>text/xml; gmlVersion=3.1.1</OutputFormat> 


</Transform> 


 


The above example requests coordinate transformation between two well-known CRSs, 


each referenced using a URN. Alternately, a well-known coordinate transformation can 


be requested, by providing its URI. For a user-defined coordinate transformation, the 


desired transformation must be specified in a concrete element that substitutes for the 


gml:_CoordinateOperation abstract element. 


The above example references a feature collection that can be XML encoded as: 


<?xml version="1.0" encoding="UTF-8"?> 


<gml:FeatureCollection xmlns="http://www.opengis.net/examples" 


xmlns:gml="http://www.opengis.net/gml"  


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/examples 


exampleCapital.xsd"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2006-10-10--> 


 <gml:boundedBy> 


  <gml:Envelope srsName="urn:ogc:def:crs:EPSG:6.0:4326"> 


   <gml:lowerCorner>-115.467123 16.743654</gml:lowerCorner> 


   <gml:upperCorner>-88.291157 32.654688</gml:upperCorner> 


  </gml:Envelope> 


 </gml:boundedBy> 


 <gml:featureMember> 


  <Capital gml:id="AC"> 


   <cityName>Aguascalientes</cityName> 


   <stateName>AGUASCALIENTES</stateName> 


   <gml:pointProperty> 


    <gml:Point srsName="urn:ogc:def:crs:EPSG:6.0:4326"> 


     <gml:pos>-102.28969800 21.88751600</gml:pos> 


    </gml:Point> 


   </gml:pointProperty> 


  </Capital> 


 </gml:featureMember> 


</gml:FeatureCollection> 


 


This XML document could be either bundled with the Transform operation request or 


accessed remotely. As indicated, this feature collection is XML encoded using an 


example GML 3.1.1 Application Schema, named exampleCapital.xsd and listed in 


Subclause F.2.  


8.4.2 Transform response example 


The response to a request for transforming a point from EPSG:4326 to EPSG:32611 


could be, if no exception occurs: 


<?xml version="1.0" encoding="UTF-8"?> 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 21 
 


<OperationResponse xmlns="http://www.opengis.net/ows/1.1" 


xmlns:xlink="http://www.w3.org/1999/xlink"  


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/ows/1.1 


../../../../ows/1.1.0/owsAll.xsd"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2006-10-10--> 


 <ReferenceGroup> 


   <Title>The Capital feature "Aguascalientes"</Title> 


   <Reference xlink:href="Aquascalientes32611.xml" 


xlink:role="FeatureCollection"/> 


 </ReferenceGroup> 


</OperationResponse> 


 


The above example references a feature collection that can be XML encoded as: 


<?xml version="1.0" encoding="UTF-8"?> 


<gml:FeatureCollection xmlns="http://www.opengis.net/examples" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/examples 


exampleCapital.xsd"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2006-10-10--> 


 <gml:boundedBy> 


  <gml:Envelope srsName="urn:ogc:def:crs:EPSG:6.0:32611"> 


   <gml:lowerCorner>-115.467123 16.743654</gml:lowerCorner> 


   <gml:upperCorner>-88.291157 32.654688</gml:upperCorner> 


  </gml:Envelope> 


 </gml:boundedBy> 


 <gml:featureMember> 


  <Capital gml:id="AC"> 


   <cityName>Aguascalientes</cityName> 


   <stateName>AGUASCALIENTES</stateName> 


   <gml:pointProperty> 


    <gml:Point srsName="urn:ogc:def:crs:EPSG:6.0:32611"> 


     <gml:pos>-102.28969800 21.88751600</gml:pos> 


    </gml:Point> 


   </gml:pointProperty> 


  </Capital> 


 </gml:featureMember> 


</gml:FeatureCollection> 


 


That XML document could be either bundled with the Transform output 


OperationResponse or accessed remotely. Again, this feature collection is XML encoded 


using an example GML 3.1.1 Application Schema, named exampleCapital.xsd and listed 


in Subclause F.2. 


8.5 Grid coverage inputs and outputs 


8.5.1 Introduction 


The preceding subclauses discussed the Transform operation request and response 


primarily for digital features, largely ignoring grid coverages. The additional Transform 


operation aspects for grid coverages are now discussed. 







OGC 07-055r1 


22 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


8.5.2 Input and output coverage formats 


A WCTS server shall input and output coverages in any of the formats identified as an 


input or output CoverageFormat in CoverageAbilities in the Contents section of the 


Capabilities document. For most possible formats, more information is required to 


specify how a coverage shall (or can) be encoded using that format. That specific 


information should be specified in a WCTS or WCS Application Profile document (see 


Subclause 9.3.2.2 of WCS 1.1, OGC 07-067r2). 


NOTE Encoding may reduce the coverage’s range accuracy when the format chosen does not support 


the coverage’s accuracy in terms of range types. For example, GIF can only represent 256 colour values; 


hence a GIF converter will approximate colours while determining a best-match colour map. Encoding a 


result coverage in JPEG (with quality less than 1.0) will incur range value approximation. In all of these 


cases the pixels’ radiometry will be inaccurate. 


Regardless of the coverage format, the Transform operation response shall be encoded as 


an OperationResponse XML document that references one or more files. Similarly, the 


Transform operation request shall be encoded using an InputData XML structure that 


references one or more files. In either case, the referenced files may be bundled with it or 


accessible separately via URL(s), as detailed in Subclause 8.3.4 above. 


8.5.3 Input and output coverage metadata 


The metadata listed in Table 14, or the equivalent information, shall be included with 


each WCTS input and output coverage. Such equivalent metadata may be encoded with 


the coverage in some of the possible coverage formats. When not encoded with the 


coverage data, this metadata shall be encoded using GML 3.1.1. 


Table 14 — Required coverage metadata 


Names Definition Data type Multiplicity and use 


transformation 


Transformation 


Definition of 
georeferencing 
coordinate 
transformation 


CC_Transformation or 
CC_ConcatenatedOperation 


Zero or one (optional) 


Should include when 
coverage is not 
georectified but is 
georeferenced 


gridCRS 


GridCRS 


Definition of GridCRS 
used by coverage 


GridCRS data structure, see 
Annex G of WCS 1.1 [OGC 
07-067r2] 


Zero or one (optional) 


Include when coverage 
is georectified 


imageCRS 


ImageCRS 


Association to 
ImageCRS of this 
coverage 


Association to ImageCRS Zero or one (optional) 


Include when coverage 
is an image 


boundingBox 


BoundingBox 


Minimum bounding box 


for this coverage a 
BoundingBox data structure, 


see Subclause 10.2 in OWS 
Common [OGC 06-121r3] 


One (mandatory) 


a This bounding box shall use the ImageCRS or GridCRS of this coverage. Grid coverages use of this 
BoundingBox is further specified in Subclause 7.7 of WCS 1.1 [OGC 07-067r2]. 


 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 23 
 


8.5.4 Output coverage CRS 


Each output coverage from a Transform operation shall be in the GridCRS that is 


specified in the Transform operation request. This GridCRS specifies the desired grid for 


the output coverage(s), including the desired grid spacings, one of many possible origin 


locations, optional rotation, and optional skewing (angle between the axes) in a base 


CRS. However, this GridCRS is NOT required or expected to specify the actual position 


of the origin in the Transform operation output. The position of the origin in the 


Transform operation output shall be as directly or indirectly specified by the input 


coverage in the Transform operation request. 


8.5.5 Output coverage spatial extent 


The spatial extent of each output coverage shall be a rectangle in the CRS of that output 


coverage, using null values for any grid points whose values cannot be interpolated 


(when allowed) from grid point values included in the input coverage. The BoundingBox 


of this spatial extent shall be computed, in the CRS of that output coverage, from the 


BoundingBox of the input coverage. This extent may be skewed with curved edges in the 


desired output coverage CRS, although it is rectangular in the CRS of the input coverage. 


Such a skewed and curved extent in the desired resampled output coverage shall be 


interpreted as the minimum extent desired. 


NOTE 1 Grid coverages use of BoundingBoxes is further specified in Subclause 7.7 of WCS 1.1 [OGC 


07-067r2]. 


When the specified extent is skewed/curved in the output coverage CRS, the server shall 


extend this extent to the minimum rectangle surrounding that skewed/curved extent. In 


addition, the server shall extend this minimum rectangle to the next grid point rows and 


columns in the output coverage GridCRS. 


NOTE 2 Computing the minimum surrounding rectangle may be done by considering a polygon with 


vertices at the four corner points of the specified bounding box and at least the centre points in each side of 


that bounding box. The positions of these eight or more polygon vertices may be transformed from the 


input coverage GridCRS (not the baseCRS of this GridCRS). The minimum rectangle surrounding all these 


polygon vertex positions can then be computed, followed by extending each side to the next row of column 


of grid point positions. 


This transformed and squared-off extent will often be skewed with curved edges in the 


input coverage, although it is rectangular in the output coverage CRS. When the 


transformed skewed/curved extent does not lie wholly within the input coverage, padding 


with null values shall be applied to all output grid points falling outside the input 
coverage. 


8.5.6 SupportedFormat and SupportedCRS dependencies 


Some coverage formats require that the coverage data be stored in a specific CRS, or the 


CRS must be chosen from a small list of CRSs. The dependency between CRSs and 


formats can not be expressed in this specification. When a WCTS server receives a 


request where the requested output coverage format and the requested output CRS are 


incompatible, the server shall return an UnsupportedCombination exception, see Table 


12. 







OGC 07-055r1 


24 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


8.5.7 Output coverage range and temporal extent 


The range and temporal extent of a Transform operation output coverage shall be the 


same as for that input coverage. 


8.5.8 Image transformation examples 


8.5.8.1 Transform request example 


If a client wants to transform an image from OGC:XXXX to OGC:YYYY using the 


default transformation, it may issue the following XML encoded Transform operation 


request: 


<?xml version="1.0" encoding="UTF-8"?> 


<Transform xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:wcs="http://www.opengis.net/wcs/1.2" 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xlink="http://www.w3.org/1999/xlink" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsTransform.xsd  


http://www.opengis.net/wcs/1.2 ../../../../wcs/1.2.0/wcsAll.xsd  


http://www.opengis.net/gml ../../../../wcs/1.2.0/gml4wcs.xsd"  


service="WCTS" version="0.0.0" store="true"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28--> 


 <Transformation xlink:href="http://TBD"/> 


 <wcs:GridCRS gml:id="GridCRSabcd"> 


  <wcs:GridBaseCRS></wcs:GridBaseCRS> 


  <wcs:GridOffsets></wcs:GridOffsets> 


 </wcs:GridCRS> 


 <ows:InputData> 


  <ows:ReferenceGroup> 


   <ows:Reference 


xlink:href="http://baesystems.com/images/ABC123.pix" 


xlink:role="wcsCoverage"/> 


  </ows:ReferenceGroup> 


 </ows:InputData> 


 <InterpolationType>linear</InterpolationType> 


</Transform> 


 


The input image is referenced at the URL http://baesystems.com/images/ABC123.pix. 


The sourceCRS is the ImageCRS of that image, using a URN specified in Subclause 10.2 


of [OGC 05-096r1]. The targetCRS is a GridCRS 


NOTE  The sourceCRS and targetCRS cannot be any CRS defined by the EPSG, because the EPSG 
has defined no CRSs that (completely) specify an image CRS. In addition, each image will normally have a 
different CRS. 


8.5.8.2 Transform response example 


The response to a request for transforming an image from the server could be, if no 


exception occurs: 


<?xml version="1.0" encoding="UTF-8"?> 


<OperationResponse xmlns="http://www.opengis.net/ows/1.1" 


xmlns:xlink="http://www.w3.org/1999/xlink"  



http://baesystems.com/images/ABC123.pix





OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 25 
 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/1.0 


../../wctsTransform.xsd"> 


 <ReferenceGroup> 


  <Reference xlink:href="http://baesystems.com/images/DEF456.pix" 


xlink:role="Coverage"/> 


 </ReferenceGroup> 


</OperationResponse> 


 


In this example, the output image is assumed to be referenced at 


http://baesystems.com/images/DEF456.pix. 


9 GetCapabilities operation (mandatory) 


9.1 Introduction 


The mandatory GetCapabilities operation allows WCTS clients to retrieve service 


metadata from a server. The response to a GetCapabilities request shall be a XML 


document containing service metadata about the server, including information about its 


coordinate transformation abilities. This clause specifies the XML document that a 


WCTS server shall return to describe its capabilities. 


9.2 Operation request 


9.2.1 GetCapabilities request parameters 


The GetCapabilities operation request shall be as specified in Subclauses 7.2.2 of [OGC 


06-121r3]. The value of the ―service‖ parameter shall be ―WCTS‖. The allowed set of 


service metadata (or Capabilities) XML document section names and meanings shall be 


as specified in Table 3 in Subclause 7.3.3 of [OGC 06-121r3]. 


9.2.2 GetCapabilities request implementation requirements 


The ―Multiplicity and use‖ column in Table 1 of [OGC 06-121r3] specifies the 


optionality of each listed parameter in the GetCapabilities operation request. Table 15 


specifies the implementation of those parameters by WCTS clients and servers. 







OGC 07-055r1 


26 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Table 15 — Implementation of parameters in GetCapabilities operation request 


Names Multiplicity WCTS server implementation WCTS client implementation 


service One (mandatory) Each parameter shall be 


implemented by all servers a 


Each parameter shall be 
implemented by all clients, 
using specified value 


request One (mandatory) 


Accept
Versions 


Zero or one 
(optional) 


Shall be implemented by all 
servers 


Should be implemented by all 
software clients, using 
allowed values 


Sections Zero or one 
(optional) 


Each parameter should be 


implemented by each server a, b 


Each parameter may be 


implemented by each client c 


update
Sequence 


Zero or one 
(optional) 


Accept
Formats 


Zero or one 
(optional) 


a Server shall check that each value received is an allowed value. 


b If this parameter is not implemented or not received, server shall provide the specified default response. If it 
is implemented and received, the server shall provide the specified response. 


c If this parameter is not provided, client shall expect the specified default response. If it is provided, the client 
shall allow either the default or specified response. 


 


9.2.3 GetCapabilities request KVP encoding (required) 


All WCTS servers shall implement HTTP GET transfer of the GetCapabilities operation 


request, using KVP encoding as specified in Subclause 7.2.3 of [OGC 06-121r3]. 


EXAMPLE  To request a WCTS capabilities document, a client could issue the following KVP 
encoded GetCapabilities operation request with near-minimum contents: 


www.baesystems.com/webservice/igs&service=WCTS&request=getCapabilities 


 


9.2.4 GetCapabilities request XML encoding (optional) 


Servers may also implement HTTP POST transfer of the GetCapabilities operation 


request, using XML encoding only. The XML Schema fragment for encoding a WCTS 


GetCapabilities operation request extends the ows:GetCapabilitiesType in 


owsCommon.xsd of [OGC 06-121r3], and is the GetCapabilities element in the attached 


normative wctsGetCapabilities.xsd file. The GetCapabilities operation request examples 


are very similar to those listed in Subclauses 7.2.2 and 7.2.3 of [OGC 06-121r3]. 


9.2.5 GetTransformation request SOAP encoding (optional) 


WCTS servers may implement SOAP version 1.2 transfer of the GetTransformation 


operation request as specified in Annex G, using the XML encoding referenced above. 


9.3 Operation response 


9.3.1 GetCapabilities operation exceptions 


When a web coordinate transformation server encounters an error while performing a 


GetCapabilities operation, it shall return an exception report message as specified in 


Clause 8 of [OGC 06-121r3]. The allowed exception codes shall include those listed in 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 27 
 


Table 5 of [OGC 06-121r3], if the updateSequence parameter is implemented by the 


server. 


9.3.2 GetCapabilities normal response 


The complete service metadata document shall contain the four sections specified in 


Table 16. Depending on the values in the Sections parameter of the GetCapabilities 


operation request, any combination of these sections can be requested and returned. 


Table 16 — Section name values and contents 


Section name Contents 


ServiceIdentification Metadata about this specific server. The schema of this section shall be the 
same as for all OWSs, as specified in Subclause 7.4.3 and 
owsServiceIdentification.xsd of [OGC 06-121r3]. 


ServiceProvider Metadata about the organization operating this server. The schema of this 
section shall be the same for all OWSs, as specified in Subclause 7.4.4 and 
owsServiceProvider.xsd of [OGC 06-121r3]. 


OperationsMetadata Metadata about the operations specified by this service and implemented by 
this server, including the URLs for operation requests. The schema of this 
section shall be the same as for all OWSs, as specified in Subclause 7.4.5 and 
owsOperationsMetadata.xsd of [OGC 06-121r3]. 


Contents Metadata about the data served by this server. For the WCTS, this section shall 
contain data about the coordinate transformations and CRSs known to this 
server, as specified in Subclauses 11.3.3 and 11.3.4 below. 


 
NOTE  The name Contents is slightly misleading because a WCTS server does not provide any feature 
or coverage data Contents, but provides processing abilities. However, a WCTS server does contain data 
defining the coordinate transformations and CRSs which it supports, which can be considered to be 
geospatial data. 


These data structures are shown graphically in the UML class diagram in Figure 4. In 


addition to the sections listed above, each service metadata document shall include the 


mandatory ―version‖ and optional updateSequence parameters specified in Table 6 in 


Subclause 7.4.1 of [OGC 06-121r3]. 







OGC 07-055r1 


28 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


WCTSContents
(from WCTS Contents)


<<DataType>>


WCTSserviceMetadata


0..1


1


+contents0..1


1


ServiceIdentification
(from OWS Service Identification)


OperationsMetadata
(from OWS Operations Metadata)


ServiceMetadata {Abstract}


+ version : CharacterString


+ updateSequence [0..1] : CharacterString


(from OWS Get Capabi li tes)


0..1


1


+serviceIdentification 0..1


1


0..1


1


+operationsMetadata 0..1


1


ServiceProvider
(from OWS Service Provider)


1


0..1


1


+serviceProvider0..1


 


Figure 4 — WCTS service metadata UML class diagram 


9.3.3 OperationsMetadata section standard contents 


9.3.3.1 Overview 


For the WCTS, the OperationsMetadata section structure shall be the same as for all 


OGC Web Services, as specified in Subclause 7.4.5 and owsOperationsMetadata.xsd of 


[OGC 06-121r3]. The mandatory values of various (XML) attributes shall be as specified 


in Table 17. Similarly, the items listed in Table 18 shall be included when these 


operations are implemented. In Table 17 and Table 18, the ―Attribute name‖ column uses 


dot-separator notation to identify parts of a parent item. 


Table 17 — Required values of OperationMetadata section attributes 


Attribute name Attribute value Meaning of attribute value 


Operation.name GetCapabilities The GetCapabilities operation is implemented by this server. 


Transform The Transform operation is implemented by this server. 


 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 29 
 


Table 18 — Optional values of OperationMetadata section attributes 


Attribute name Attribute value Meaning of attribute value 


Operation.name IsTransformable The IsTransformable operation is implemented by this server. 


GetTransformation The GetTransformation operation is implemented by this 
server. 


GetResourceByID The GetResourceByID operation is implemented by this 
server. 


 


In addition to the optional values listed in Table 18, there are many optional values of the 


―name‖ attributes and ―value‖ elements in the OperationsMetadata section, which may be 


included when considered useful. Most of these attributes and elements are for recording 


the domains of various parameters and quantities. 


EXAMPLE  The domain of the exceptionCode parameter could record all the codes implemented for 
each operation by that specific server. Similarly, each of the GetCapabilities operation optional request 
parameters might have its domain recorded. 


9.3.3.2 Indicating allowed encodings 


All WCTS servers shall specify the encodings that may be sent using HTTP POST 


transfer of operation requests. Specifically, an ows:Constraint element shall be included, 


with ―PostEncoding‖ as the value of the ―name‖ attribute and specifying different 


allowed values for each allowed encoding: 


a) The value ―SOAP‖ shall indicate that SOAP encoding is allowed, as specified in 
Annex G. 


b) The value ―XML‖ shall indicate that XML encoding is allowed (without SOAP 
message encapsulation). 


When the HTTP POST connect point URL is different for different encodings of the 


operation requests, this ows:Constraint element shall be included in each Post element. 


When the connect point URL is the same for all encodings of all operation requests, this 


ows:Constraint element shall be included in the OperationsMetadata element. 


9.3.3.3 Indicating support for the “store” parameter 


All WCTS servers shall specify whether or not that server implements the ―store‖ 


parameter in Transform operation requests, doing this in the ows:Operation element for 


the Transform operation. When this WCTS server implements the ―store‖ parameter, this 


shall be specified by including an ows:Parameter element with ―store‖ as the ―name‖ 


attribute value, and both ―True‖ and ―False‖ as allowed Values. When this WCS server 


does not implement the ―store‖ parameter, this shall be specified by including an 


ows:Parameter element with ―store‖ as the ―name‖ attribute value, and only ―False‖ as an 


allowed Value. 


9.3.4 Contents section contents 


The Contents section of a service metadata document contains metadata about the data 


served by this server. For the WCTS, this Contents section shall contain data about the 


coordinate transformations and CRSs known to this server, plus other abilities of this 







OGC 07-055r1 


30 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


server. The Contents section shall include the parameters and data structures shown 


graphically in the UML diagram in Figure 5 and specified in Table 19 through Table 22. 


At least one 


shall be 


included


CoverageType


+ ThiessenPolygon


+ QuadrilateralGrid


+ HexagonalGrid


+ TriangulatedIrregularNetwork


+ SegmentedCurve


(from WCTS Service)


<<CodeList>>


GeometryType


+ Envelope


+ Point


+ LineString


+ Polygon


+ LinearRing


+ Curve


+ LineStringSegment


+ ArcString


+ Arc


+ Circle


+ ArcStringByBulge


+ ArcByBulge


+ ArcByCenterPoint


+ CircleByCenterPoint


+ CubicSpline


+ BSpline


+ Bezier


+ OrientableCurve


+ Surface


+ PolygonPatch


+ Triangle


+ Rectangle


+ Ring


+ OrientableSurface


+ Solid


+ CompositCurve


+ CompositeSurface


+ CompositeSolid


(from WCTS Service)


<<CodeList>>


WCTSserviceMetadata
(from WCTS Get Capabi li ties)


Metadata


+ metadata [0..1] : Any


+ link [0..1] : URL


+ about [0..1] : URI


(from OWS Common)


WCTSContents


+ transformation [0..*] : URI


+ method [0..*] : URI


+ sourceCRS [1..*] : URI


+ targetCRS [1..*] : URI


+ userDefinedCRSs : Boolean = True


<<DataType>>


0..1


1


+contents0..1


1


0..*0..*


+metadata


0..*0..*


InterpolationMethods
(from Interpolation Methods)


<<DataType>>


CoverageAbilities


+ coverageType [1..*] : CoverageType


0..1


1


+coverageAbilities0..1


1


1


1


+interpolation


Methods1


1


FeatureAbilities


+ geometryType [1..*] : GeometryType


+ remoteProperties : Boolean = False


0..1


1


+featureAbilities 0..1


1


InputOutputFormat


+ format : CharacterString


+ input [0..1] : Boolean


+ output [0..1] : Boolean


1..*


1


1..*


11
1


1..* 1..*


+featureF


ormat
+coverage


Format


 


Figure 5 — WCTS contents section UML class diagram 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 31 
 


Table 19 — Parameters included in Contents section 


Names Definition and data type Multiplicity and use 


transformation 


Transformation 


Identifier of well-known coordinate 
operation which the server can perform 


URI a 


Zero or more (optional) 


One for each coordinate operation 


implemented by this server b 


method 


Method 


Identifier of well-known operation method 
which the server can use in user-defined 
coordinate operations 


URI a 


Zero or more (optional) 


One for each such operation 
method implemented by this 
server 


sourceCRS 


SourceCRS 


Reference to well-known CRS in which the 
server can accept sourceCRS values 


URI a 


One or more (mandatory) 


One for each source CRS 
implemented by this server 


targetCRS 


TargetCRS 


Reference to well-known CRS in which the 
server can accept targetCRS values 


URI a 


One or more (mandatory) 


One for each target CRS 
implemented by this server 


featureAbilities 


FeatureAbilities 


Information about the feature handling 
abilities of this WCTS server 


FeatureAbilities data structure, see Table 20 


Zero or one (optional) 


Include when server can 
transform features 


coverageAbilities 


CoverageAbilities 


Information about the coverage handling 
abilities of this WCTS server 


CoverageAbilities data structure, see Table 
21 


Zero or one (optional) 


Include when server can 
transform coverages 


metadata 


Metadata 


Metadata about the data served by this 


WCTS implementation c 


Metadata contents or reference to metadata 


Zero or more (optional) 


One for each such metadata 
object, unordered 


userDefinedCRSs 


userDefinedCRSs 


Specifies if this server supports user defined 
Coordinate Reference Systems (CRSs) 


Boolean type, true or false 


One (mandatory) 


a A URI shall reference a Transformation, Method, or CRS as specified in Subclause 10.3 of [OGC 06-121r3]. 


b The details of well-known transformations are not always available to clients. That is, only the sourceCRS 
and targetCRS information may be available to clients. Also, a WCTS server could support only user-defined 
transformations, and no well-known Transformations. 


c For example, this metadata could include more detailed definitions of the CRSs, Transformations, and 
Methods known to this server, perhaps in the form of a gml:Dictionary of such information. 


 
NOTE 1 This WCTS specification assumes that many implementations will list all of the coordinate 
operations they implement, as Transformations in the Contents section of a Capabilities document. One 
alternative is to not list all or most coordinate operations. In that case, Metadata parameters could be 
included in the Contents section to indicate the transformation abilities (loosely or precisely). If not, clients 
will need to discover which transformations are supported by trial and error (for example, using the 
IsTransformable and Transform operations). 


NOTE 2 If highly useful Metadata is included or referenced in the Contents section, a WCTS profile 


should be written that specifies the contents of that Metadata. 


EDITOR’S NOTE  The Transformations (or coordinate operations) implemented by prototype WCTS 
servers (and listed in the Contents section) are currently limited to transformations in one direction only 
(not including the reverse direction). The team working on the WCTS specification has not yet considered 
what would be required to implement two-way transformations, as allowed in Topic 2 [OGC 05-103]. 







OGC 07-055r1 


32 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Any WCTS server has to understand at least two coordinate reference systems so that it is 


able to perform one coordinate transformation. The well-known transformations and 


coordinate reference systems are defined in the ―transformation‖s, ―sourceCRS‖s, and 


―targetCRS‖s parameters. 


The operation ―method‖s refer to general methods for transformation of coordinates from 


one CRS into another, and not to complete transformations between two particular 


reference systems. Only the methods that can be used in user-specified coordinate 


operations shall be listed. Examples of such methods are longitude rotation, abridged 


Molodenski, and geocentric to ellipsoid. 


The FeatureAbilities data structure is specified in Table 20. The geometryType 


parameters identify the types of geometric primitives the WCTS is able to transform. 


Although GML 3 defines a wide spectrum of geometries, a WCTS is not required to 


support all those different kinds of geometries. Many WCTS servers will only need to 


support ―simple‖ geometries as they were defined in GML 2. Other servers will not 


support all of the possible curve and surface interpolations available in GML 3 or are not 


interested in 3D geometries. The geometryType parameters allow the client to find out 


which GML 3 geometric primitives the WCTS supports. It is assumed that a WCTS has 


the ability to work with the corresponding geometric complexes and aggregates if used. 


Table 20 — Parameters included in FeatureAbilities data structure 


Names Definition  Data type Multiplicity and use 


geometryType 


GeometryType 


Name of GML geometric 
primitive type supported by 
this WCTS server a  


GeometryType 
code list, see 
Table 4 


One or more (mandatory) 


One for each primitive type 
supported by this server 


featureFormat 


FeatureFormat 


Identifier of feature format in 
which the Transform 
operation can input and 
output features 


InputOutputFormat 
data structure, see 
Table 22 


One or more (mandatory) 


One for each feature format 
supported by this server 


remoteProperties 


remoteProperties 


Specifies if this server 
supports remote properties 
in features transformed 


Boolean type, true 
or false 


One (mandatory) 


a It is assumed that a WCTS server can also transform the corresponding geometric complexes and aggregates. 
It is also assumed that this server can transform at least one geometric primitive type. 


 


The featureFormat parameters identify the formats that can be used for feature data input 


and/or output from this WCTS server. GML 3 allows the definition of remote properties 


that are referenced by Xlink components. When these remote properties contain 


geometries, the WCTS would have to follow the Xlink, transform the corresponding 


geometries and deliver those back to the client. This functionality might or might not be 


implemented by a WCTS server and is therefore specified by the Boolean 


remoteProperties parameter. 


The CoverageAbilities data structure is specified in Table 21. The coverageType 


parameters identify the types of coverages the WCTS is able to transform. In the case of 


non-grid coverages which use specific geometric primitives, a client would have to check 


if the corresponding geometric primitive types and the coverage types are supported. The 


coverageFormat parameters identify the formats that can be used for coverage input 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 33 
 


and/or output from this WCTS server. The InterpolationMethods parameters identify the 


interpolation methods the WCTS is able to use to transform coverages, in case an 


interpolation is necessary (such as for transformation of rectified grids). 


Table 21 — Parameters included in CoverageAbilities data structure 


Names Definition Data type Multiplicity and use 


coverageType 


CoverageType 


Name of coverage type 
supported by this WCTS 
server 


CoverageType code 
list, see Table 3 


One or more (mandatory) 


One for each coverage type 
supported by this server 


coverage
Format 


Coverage
Format 


Identifier of coverage format 
in which Transform 
operation can input and/or 
output coverages 


InputOutputFormat 
data structure, see 
Table 22 


One or more (mandatory) 


One for each coverage 
format supported by this 
server 


interpolation
Methods 


Interpolation
Methods 


Identifiers of interpolation 
methods 


InterpolationMethods 
data structure, see 
I.4 of OGC 07-
067r2 


One (mandatory) 


 


Table 22 — Parameters included in InputOutputFormat data structure 


Names Definition Data type Multiplicity and use 


format 


Format 


Identifier of format type supported by this 
WCTS server 


Character String type, 
not empty 


One (mandatory) 


input 


input 


Defines if this format can be input to this 
server 


Boolean type, default 
true 


Zero or one (optional) 


When omitted, can be 
input by this server 


output 


output 


Defines if this format can be output from 
this server 


Boolean type, default 
true 


Zero or one (optional) 


When omitted, can be 
output by this server 


 
EDITOR’S NOTE  Questions were raised during OWS-2 about richer description of the format options 
available (tile, pyramid, tile size, compression rate…). Another issue is the lack of standard MIME type for 
geospatial grid coverage formats and guidelines to create new MIME types.  


9.3.5 GetCapabilities response implementation requirements 


The ―Multiplicity and use‖ columns in Table 6 through Table 16 in [OGC 06-121r3], and 


in Table 19 through Table 22 of this document, specify the optionality of each listed 


parameter and data structure in the GetCapabilities operation response. All the 


―mandatory‖ parameters and data structures shall be implemented by all OWS servers, 


using a specified value(s). 


The ―updateSequence‖ parameter defined in Table 6 of [OGC 05-008] is optional 


implementation by OWS servers. As indicated in Table 15 of this document, the 


―updateSequence‖ parameter may be implemented by each WCTS server, and then shall 


also be required in the operation response. 







OGC 07-055r1 


34 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


All other ―optional‖ parameters and data structures, in the GetCapabilities operation 


response, should be implemented by all OWS servers using specified values, whenever 


and wherever each is considered useful metadata for that server. 


9.3.6 Capabilities document XML encoding (required) 


A XML Schema fragment for a WCTS service metadata document extends the 


ows:CapabilitiesBaseType in owsGetCapabilities.xsd in [OGC 06-121r3], and is 


specified by the Capabilities element in the attached normative wctsGetCapabilities.xsd 


file. This fragment also uses the wctsContents.xsd attached normative schema document. 


9.4 Examples 


9.4.1 GetCapabilities request 


To request a capabilities document, a client could issue the following GetCapabilities 


operation request with minimum contents encoded using KVP: 


www.lat-lon.de/transform?service=WCTS&request=getCapabilities 


 


The corresponding minimum request encoded in XML is: 


<?xml version="1.0" encoding="UTF-8"?> 


<GetCapabilities xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts 


../../wctsGetCapabilities.xsd"  


service="WCTS"/> 


<!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 


A maximum request encoded in XML is: 


<?xml version="1.0" encoding="UTF-8"?> 


<GetCapabilities xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetCapabilities.xsd"  


service="WCTS" updateSequence="XYZ123"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <ows:AcceptVersions> 


  <ows:Version>0.0.0</ows:Version> 


 </ows:AcceptVersions> 


 <ows:Sections> 


  <ows:Section>All</ows:Section> 


 </ows:Sections> 


</GetCapabilities> 


  


9.4.2 GetCapabilities response 


In response to such a request, the web coordinate transformation server might generate a 


XML document that looks like: 


<?xml version="1.0" encoding="UTF-8"?> 


<Capabilities xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:ows="http://www.opengis.net/ows/1.1"  







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 35 
 


xmlns:wcs="http://www.opengis.net/wcs/1.2"  


xmlns:xlink="http://www.w3.org/1999/xlink"  


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetCapabilities.xsd  


http://www.opengis.net/wcs/1.2 ../../../../wcs/1.2.0/wcsAll.xsd"  


version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28--> 


 <ows:ServiceIdentification> 


  <ows:Title>Web Coordinate Transformation Service</ows:Title> 


  <ows:Abstract>Network service for transforming coordinates from 


one CRS to another</ows:Abstract> 


  <ows:Keywords> 


   <ows:Keyword>Coordinate Reference System</ows:Keyword> 


   <ows:Keyword>transformation</ows:Keyword> 


   <ows:Keyword>conversion</ows:Keyword> 


   <ows:Keyword>coordinate operation</ows:Keyword> 


  </ows:Keywords> 


  <ows:ServiceType>OGC WCTS</ows:ServiceType> 


  <ows:ServiceTypeVersion>1.0.0</ows:ServiceTypeVersion> 


  <ows:Fees>NONE</ows:Fees> 


  <ows:AccessConstraints>NONE</ows:AccessConstraints> 


 </ows:ServiceIdentification> 


 <ows:ServiceProvider> 


  <ows:ProviderName>lat/lon</ows:ProviderName> 


  <ows:ProviderSite xlink:href="TBD"/> 


  <ows:ServiceContact> 


   <ows:IndividualName>Andreas Poth</ows:IndividualName> 


   <ows:PositionName>Senior Software Engineer</ows:PositionName> 


   <ows:ContactInfo> 


    <ows:Phone> 


     <ows:Voice>++49 228 732838</ows:Voice> 


     <ows:Facsimile>++49 228 732153</ows:Facsimile> 


    </ows:Phone> 


    <ows:Address> 


     <ows:DeliveryPoint>Meckenheimer Allee 


176</ows:DeliveryPoint> 


     <ows:City>Bonn</ows:City> 


     <ows:AdministrativeArea>NRW</ows:AdministrativeArea> 


     <ows:PostalCode>53115</ows:PostalCode> 


     <ows:Country>Germany</ows:Country> 


     <ows:ElectronicMailAddress>poth@lat-


lon.de</ows:ElectronicMailAddress> 


    </ows:Address> 


   </ows:ContactInfo> 


  </ows:ServiceContact> 


 </ows:ServiceProvider> 


 <ows:OperationsMetadata> 


  <ows:Operation name="GetCapabilities"> 


   <ows:DCP> 


    <ows:HTTP> 


     <ows:Get xlink:href="www.lat-lon.de/transform"/> 


    </ows:HTTP> 


   </ows:DCP> 


  </ows:Operation> 


  <ows:Operation name="Transform"> 


   <ows:DCP> 


    <ows:HTTP> 







OGC 07-055r1 


36 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


     <ows:Get xlink:href="www.lat-lon.de/transform"/> 


    </ows:HTTP> 


   </ows:DCP> 


  </ows:Operation> 


  <ows:Operation name="IsTransformable"> 


   <ows:DCP> 


    <ows:HTTP> 


     <ows:Get xlink:href="www.lat-lon.de/transform"/> 


    </ows:HTTP> 


   </ows:DCP> 


  </ows:Operation> 


  <ows:Operation name="DescribeTransformation"> 


   <ows:DCP> 


    <ows:HTTP> 


     <ows:Get xlink:href="www.lat-lon.de/transform"/> 


    </ows:HTTP> 


   </ows:DCP> 


  </ows:Operation> 


 </ows:OperationsMetadata> 


 <Contents userDefinedCRSs="true"> 


 


 <Transformation>urn:ogc:def:coordinateOperation:EPSG::WWWW</Transfor


mation> 


 


 <Transformation>urn:ogc:def:coordinateOperation:EPSG::XXXX</Transfor


mation> 


 


 <Transformation>urn:ogc:def:coordinateOperation:EPSG::YYYY</Transfor


mation> 


 


 <Transformation>urn:ogc:def:coordinateOperation:EPSG::ZZZZ</Transfor


mation> 


  <Method>urn:ogc:def:method:EPSG::9801</Method> 


  <Method>urn:ogc:def:method:EPSG::9802</Method> 


  <Method>urn:ogc:def:method:EPSG::9803</Method> 


  <SourceCRS>urn:ogc:def:crs:EPSG::4326</SourceCRS> 


  <SourceCRS>urn:ogc:def:crs:EPSG::23031</SourceCRS> 


  <SourceCRS>urn:ogc:def:crs:EPSG::23032</SourceCRS> 


  <SourceCRS>urn:ogc:def:crs:EPSG::31467</SourceCRS> 


  <TargetCRS>urn:ogc:def:crs:EPSG::4326</TargetCRS> 


  <TargetCRS>urn:ogc:def:crs:EPSG::23031</TargetCRS> 


  <TargetCRS>urn:ogc:def:crs:EPSG::23032</TargetCRS> 


  <TargetCRS>urn:ogc:def:crs:EPSG::31467</TargetCRS> 


  <CoverageAbilities> 


   <CoverageType>GRID</CoverageType> 


   <CoverageFormat>image/pix</CoverageFormat> 


   <CoverageFormat>image/HDF-EOS</CoverageFormat> 


   <CoverageFormat>image/DTED</CoverageFormat> 


   <CoverageFormat>image/GeoTIFF</CoverageFormat> 


   <CoverageFormat>image/NITF</CoverageFormat> 


   <wcs:InterpolationMethods> 


    <wcs:InterpolationMethod>nearest</wcs:InterpolationMethod> 


    <wcs:InterpolationMethod>linear</wcs:InterpolationMethod> 


   </wcs:InterpolationMethods> 


  </CoverageAbilities> 


  <FeatureAbilities remoteProperties="false"> 


   <GeometryType>Point</GeometryType> 


   <GeometryType>LineString</GeometryType> 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 37 
 


   <GeometryType>Polygon</GeometryType> 


   <FeatureFormat>text/xml; gmlVersion=3.1.0</FeatureFormat> 


  </FeatureAbilities> 


 </Contents> 


</Capabilities> 


 


This service indicates it supports transformation of point/line/polygon features and grid 


coverages. 


10 IsTransformable operation (optional) 


10.1 Introduction 


The IsTransformable operation allows WCTS clients to check if coordinate 


transformation of an identified set of geometry primitive types or coverage types is 


possible between two coordinate reference systems. This check will succeed only if the 


identified types are supported, and if there is a valid sequence of one or more known 


transformations to transform the coordinates from the source CRS to the target CRS. This 


check will NOT evaluate if this transformation makes any sense, nor if it is possible to be 


performed for each set of coordinates that may be submitted by a Transform request. 


Implementation of the IsTransformable operation is optional for a web coordinate 


transformation server. 


NOTE  In principle, this information could be extracted from the Capabilities document of the WCTS, 
since the parameters GeometryType, CoverageType, InterpolationType, Transformation, SourceCRS, and 
TargetCRS provide the necessary information. However, analysis of these parameters to check the 
possibility of a transformation between two CRSs, for some specific geometries or coverages, is in some 
cases rather complicated and would need powerful client logic. It seems to make more sense to provide this 
information directly via a distinct operation, allowing simple clients to use the service. 


10.2 Operation request 


10.2.1 IsTransformable request parameters 


A request to perform the IsTransformable operation shall include the parameters and data 


structures shown graphically in the UML diagram in Figure 6, and specified in Table 23 


and Table 24. These tables specify the meaning to servers when each optional parameter 


is not included in the operation request. 







OGC 07-055r1 


38 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


(from WCTS Service)


At least one of either geometryType 


or coverageType shall be included. If 


no coverageType is included, no 


interpolationType shall be included.


IsTransformableChoice


+ sourceAndTargetCRSs : SouceAndTargetCRSs


+ transformation : URI


+ method : URI


<<Union>>


IsTransformable


+ request : String = "IsTransformable" {frozen}


+ coverageType [0..*] : CoverageType


+ interpolationType [0..*] : InterpolationType


+ geometryType [0..*] : GeometryType


<<DataType>>


1


1


+isTransformableChoice1


1


SourceAndTargetCRSs


+ sourceCRS : URI


+ targetCRS : URI


(from WCTS Service)


RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


InterpolationType


+ nearest


+ linear


+ cubic


+ quadratic


+ none


(from Interpolation Methods)


<<CodeList>>


GeometryType


+ Envelope


+ Point


+ LineString


+ Polygon


+ LinearRing


+ Curve


+ LineStringSegment


+ ArcString


+ Arc


+ Circle


+ ArcStringByBulge


+ ArcByBulge


+ ArcByCenterPoint


+ CircleByCenterPoint


+ CubicSpline


+ BSpline


+ Bezier


+ OrientableCurve


+ Surface


+ PolygonPatch


+ Triangle


+ Rectangle


+ Ring


+ OrientableSurface


+ Solid


+ CompositCurve


+ CompositeSurface


+ CompositeSolid


(from WCTS Service)


<<CodeList>>


CoverageType


+ ThiessenPolygon


+ QuadrilateralGrid


+ HexagonalGrid


+ TriangulatedIrregularNetwork


+ SegmentedCurve


(from WCTS Service)


<<CodeList>>


 


Figure 6 — WCTS IsTransformable request UML class diagram 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 39 
 


NOTE 1 The first three parameters listed below are largely copied from Table 22 in Subclause 9.2.1 of 
[OGC 06-121r3]. The last parameter listed below is largely copied from Table I.6 in Subclause I.4.1 of 
WCS 1.1 [OGC 07-067r2]. 


Table 23 — Parameters in IsTransformable operation request 


Names Definition Data type and value Multiplicity and use 


service 


service 


Service type identifier Character String, not empty 


Value is OWS type 
abbreviation,  
namely ―WCTS‖ 


One (mandatory) 


request 


request 


Operation name Character String, not empty 


Value is operation name, 
namely 
―IsTransformable‖ 


One (mandatory) 


version 


version 


Specification version for 
operation 


Character String, not empty 


Value is specified by each 
Implementation 
Specification and 
Schemas version 


One (mandatory) 


isTransformable
Choice 


(none) 


Identification or 
definition of desired 
coordinate operation 


IsTransformableChoice 
data structure, see Table 
24 


One (mandatory) 


geometryType 


GeometryType 


Identifier of type of 
GML 3 geometric 
primitive that will be 
requested to be 
transformed 


GeometryType code list, 
see Table 4 


Unordered list of geometric 
primitive types 


Zero or more (Optional) a 


Included for transforming 
specific geometric 
primitive types 


coverageType 


CoverageType 


Identifier of coverage 
type that will be 
requested to be 
transformed 


CoverageType code list, see 
Table 3  


Unordered list of coverage 
type identifiers 


Zero or more (Optional) a 


Included for transforming 
coverages 


interpolation
Type 


Interpolation
Type 


Identifier of 
interpolation method 
which should be used 
to transform coverage 


Character string, not empty 


Values defined in service 
metadata, unordered list  


Zero or more (Optional) b 


Included when 
transforming coverages 


a Either at least one CoverageType or at least one GeometryType shall be included. 


b One or more Interpolation Methods shall be included only if one or more Coverage Types are included. 


 
NOTE 2 The data type of many parameters is specified as ―Character String, not empty‖. In the XML 
Schemas specified herein, these parameters are encoded with the xsd:string type, which does NOT require 
that these strings not be empty. 







OGC 07-055r1 


40 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Table 24 — Alternatives in IsTransformableChoice data structure 


Names Definition Data type Multiplicity 


sourceAndTargetCRSs 


SourceAndTargetCRSs 


References to 
SourceCRS and 
desired TargetCRS 


SourceAnd
TargetCRSs data 
structure, see Table 1 


Zero or one (Mutually 
exclusive) 


a
 


transformation 


Transformation 


Identification of desired 
coordinate operation 


URI Zero or one (Mutually 
exclusive) 


b
 


method 


Method 


Identification of desired 
operation method 


URI Zero or one (Mutually 
exclusive) 


c
 


a Included when the server is permitted to select any coordinate operation which it knows about that can 
transform coordinates from the sourceCRS to the targetCRS identified. 


b Included when client is specifying a specific well-known coordinate operation, whose definition is known to 
the WCTS server 


c Included when client is considering specifying a specific user-defined coordinate operation that uses a well-
known operation method. 


 


10.2.2 IsTransformable request implementation requirements 


The ―Multiplicity and use‖ columns in Table 23 and Table 24 specify the optionality of 


each listed parameter in the IsTransformable operation request. Table 25 specifies the 


implementation of those parameters by servers and clients that implement the 


IsTransformable operation. 


Table 25 — Implementation of parameters in IsTransformable operation request 


Name Multiplicity Server implementation Client implementation 


service One (mandatory) Each parameter shall be 


implemented by all servers a 


Each parameter shall be 
implemented by all clients, 
using allowed values 


request One (mandatory) 


version One (mandatory) 


sourceAnd
TargetCRSs 


One (Mutually 
exclusive) 


One or more shall be 


implemented by all servers a 


One or more shall be 
implemented by all clients 


transformation 


method 


coverageType Zero or one 
(optional) 


Each shall be implemented by all 
servers that can transform 


coverages a 


Each should be implemented 
by all clients that can 
transform coverages interpolation


Type 
Zero or one 


(optional) 


geometryType Zero or more 
(optional)  


Shall be implemented by all 
servers that can transform 


features or geometries a 


Should be implemented by 
clients that can transform 


features or geometries b 


a Server shall check that each value received is an allowed value. 


b If this parameter is not provided, client shall expect the specified default response. If provided, client shall 
allow default or specified response. 


 


10.2.3 IsTransformable request KVP encoding (optional) 


WCTS servers that implement the IsTransformable operation may implement HTTP GET 


transfer of the IsTransformable operation request, using KVP encoding. The KVP 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 41 
 


encoding of the IsTransformable operation request shall use the parameters specified in 


Table 26. The parameters listed in Table 26 shall be as specified in Table 23 and Table 


24above. 


Table 26 — IsTransformable operation request URL parameters 


Name and example a  Optionality and use Definition and format 


service=WCTS Mandatory Service type identifier 


request= IsTransformable Mandatory Operation name 


version=0.0.0 Mandatory  Specification and schema version for 
this operation 


sourceCRS=urn:ogc:def:
crs:EPSG:6.3:4326 


Optional b Identifier URI of input coordinate 
reference system 


targetCRS=urn:ogc:def:
crs:EPSG:6.3:23032 


Optional b Identifier URI of desired output 
coordinate reference system 


transformation=urn:ogc:d
ef:coordinatOperation:E
PSG:6.3:TBD 


Optional b Identifier URI of desired coordinate 
operation 


method=urn:ogc:def:meth
od:EPSG:6.3:TBD 


Optional b Identifier URI of operation method to 
be used in user-defined coordinate 
transformation 


geometryTypes=TBD Optional 


Included for transforming specific 
geometric primitive types 


Unordered list of types of GML 3 
geometric primitives that will be 
requested to be transformed, 
separated by commas 


coverageTypes=TBD Optional 


Included for transforming 
coverages 


Unordered list of coverage types that 
will be requested to be transformed, 
separated by commas 


interpolationTypes=linear Optional 


Included for transforming 
coverages 


Unordered list of interpolation 
methods which could be used to 
transform coverages, separated by 
commas 


a All parameter names are here listed using mostly lower case letters. However, any parameter name 
capitalization shall be allowed in KVP encoding, see Subclause 11.5.2 of [OGC 06-121r3]. 


b Either Transformation, Method, or both SourceCRS and TargetCRS shall be included. 


 


10.2.4 IsTransformable request XML encoding (required) 


All WCTS servers that implement the IsTransformable operation shall implement HTTP 


POST transfer of the IsTransformable operation request, using XML encoding only. The 


XML Schema fragment for the IsTransformable operation is specified by the 


IsTransformable element in the attached normative wctsIsTransformable.xsd file. As 


indicated, that XML Schema fragment uses the Grid CRSs profile of GML 3.1.1 [OGC 


05-096r1]. 


10.2.5 IsTransformable request SOAP encoding (optional) 


WCTS servers that implement the IsTransformable operation may implement SOAP 


version 1.2 transfer of the IsTransformable operation request as specified in Annex G, 


using the XML encoding referenced above. 







OGC 07-055r1 


42 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


10.3 Operation response 


10.3.1 IsTransformable operation exceptions 


When a web coordinate transformation server encounters an error while performing an 


IsTransformable operation, it shall return an exception report message as specified in 


Subclause 8.5 of [OGC 06-121r3]. The allowed standard exception codes shall include 


those listed in Table 3 in Subclause 7.3 of this document.  


EDITOR’S NOTE  Do any more exceptionCode values need to be defined, for any other problem(s) that 
may prevent completing the IsTransformable operation? 


10.3.2 IsTransformable normal response 


The normal response to an IsTransformable request shall be ―true‖ or ―false‖ depending 


on whether the WCTS server can perform the requested transformation. When the 


response is ―false‖, this response shall include an indication of the problem. More 


completely, a response from the IsTransformable operation shall include the data 


structures shown graphically in the UML diagram in Figure 7, and specified in Table 27 


and Table 28. 


IsTransformableResponse


+ transformable : Boolean


+ problem [0..1] : Problem


<<DataType>>


Problem


+ source CRS


+ target CRS


+ coordinate transformation


+ operation method


+ geometry type


+ coverage type


+ interpolation type


+ other


<<CodeList>>


 


Figure 7 — WCTS IsTransformable response UML class diagram 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 43 
 


Table 27 — Parameters in IsTransformable operation response 


Names Definition Data type and value Multiplicity and use 


transformable 


transformable 


Indicates whether this server can 
perform the transformation 


indicated in operation request a 


Boolean type 


Value shall be "true" 
or "false" 


One (mandatory) 


problem 


problem 


Type of transformation problem 
detected by WCTS server 


Problem code list, see 
Table 28 


Zero or one (optional) 


Included when 
―transformable‖ is false 


a The indicated transformation is from the sourceCRS to the targetCRS identified by the input sourceAnd
TargetCRSs when included in the operation request. Alternately, the indicated transformation is identified by the 
input ―transformation‖ when included, or the ―method‖ when included. 


 


Table 28 — Problem values for IsTransformable operation response 


“problem” value Meaning 


source CRS WCTS server cannot transform from identified source CRS. 


target CRS WCTS server cannot transform to identified target CRS from identified 
source CRS. 


geometry type WCTS server cannot transform one or more identified geometry types. 


coverage type WCTS server cannot transform one or more identified coverage types. 


interpolation method WCTS server cannot perform one or more identified interpolation 
methods. 


other WCTS server cannot perform identified transformation due to some other 
problem, including incompatibility between identified parameters. 


 


10.3.3 IsTransformable response XML encoding (required) 


The XML Schema fragment for the IsTransformable operation response is specified by 


the IsTransformableResponse element in the attached normative 


wctsIsTransformable.xsd file. The Problem UML class is <CodeList> stereotyped, which 


is thus converted into XML Schema following the GML pattern for XML encoding of 


<CodeList> classes. That is, in wctsCommon.xsd, the normal values of Problem are NOT 
encoded in the XML Schema, but in the default-referenced GML Dictionaries named 


problemType.xml, and also attached to this document. This approach is used since not all 


useful values of this quantity are currently known, and this approach allows additional or 


different values to be more easily specified and used. 


10.3.4 IsTransformable response SOAP encoding (optional) 


WCTS servers that implement SOAP transfer of IsTransformable operation requests shall 


also implement SOAP version 1.2 transfer of the corresponding Transform operation 


responses. These operation responses shall be encoded as specified in Annex G, using the 


XML encoding referenced above. 







OGC 07-055r1 


44 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


10.4 Examples 


10.4.1 IsTransformable request 


An IsTransformable operation request for checking whether a transformation from 


EPSG:4326 to EPSG:23032 is possible may look like this when encoded in XML: 


<?xml version="1.0" encoding="UTF-8"?> 


<IsTransformable xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts 


../../wctsIsTransformable.xsd"  


service="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28--> 


 <SourceCRS>urn:ogc:def:crs:EPSG:6.0:4326</SourceCRS> 


 <TargetCRS>urn:ogc:def:crs:EPSG:6.0:23032</TargetCRS> 


 <GeometryType>LineString</GeometryType> 


</IsTransformable> 


 


The corresponding IsTransformable operation request encoded in KVP is: 


www.latlon.de/transform&service=WCTS&request=isTransformable&version=0.


0.20&sourceCRS=urn:ogc:def:crs:EPSG:6.3:4326&targetCRS=urn:ogc:def:crs:


EPSG:6.3:23032& 


 


10.4.2 IsTransformable response 


Example ―true‖ and ―false‖ responses to the IsTransformable operation request are: 


<?xml version="1.0" encoding="UTF-8"?> 


<IsTransformableResponse xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsIsTransformable.xsd"  


transformable="true"/> 


<!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 


<?xml version="1.0" encoding="UTF-8"?> 


<IsTransformableResponse xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation=http://www.opengis.net/wcts/0.0 


../../wctsIsTransformable.xsd 


transformable ="false"> 


<!-- Primary editor: Arliss Whiteside. Last updated 2007-05-01 --> 


 <problem>geometryType</problem> 


</IsTransformableResponse> 


 


11 GetTransformation operation (optional) 


11.1 Introduction 


The GetTransformation operation allows clients to retrieve the definition of the 


transformation(s) from one coordinate reference system (CRS) into another. The 


definition(s) in the operation response are encoded in XML using GML 3.1.1. 



http://www.opengis.net/wcts/wctsIsTransformable.xsd

http://www.opengis.net/wcts/wctsIsTransformable.xsd

http://www.opengis.net/wcts/wctsIsTransformable.xsd





OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 45 
 


Implementation of the GetTransformation operation is optional for a web coordinate 


transformation server. 


11.2 Operation request 


11.2.1 GetTransformation request parameters 


A request to perform the GetTransformation operation shall include the parameters and 


data structures shown graphically in the UML diagram in Figure 8, and specified in Table 


29.  


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


(from WCTS Service)


SourceAndTargetCRSs


+ sourceCRS : URI


+ targetCRS : URI


(from WCTS Service)


GetTransformation


+ request : CharacterString = "GetTransformation" {frozen}


<<DataType>>


1


1


+sourceAndTargetCRSs 1


1


RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


 


Figure 8 — WCTS GetTransformation request UML class diagram 







OGC 07-055r1 


46 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


NOTE  The first three parameters listed below are largely copied from Table 22 in Subclause 9.2.1 of 
[OGC 06-121r3]. The other parameter listed below is defined in Table 1 in Subclause 7.2 of this document. 


Table 29 — Parameters in GetTransformation operation request 


Names Definition Data type and value Multiplicity 


service 


service 


Service type 
identifier 


Character String type, not empty 


Value is OWS type abbreviation, 
namely ―WCTS‖ 


One (mandatory) 


request 


request 


Operation name Character String type, not empty 


Value is operation name, namely 
―GetTransformation‖ 


One (mandatory) 


version 


version 


Specification 
version for 
operation 


Character String type, not empty 


Value is specified by each 
Implementation Specification 
and Schemas version 


One (mandatory) 


sourceAndTargetCRSs 


(none) 


References to 
SourceCRS and 
desired TargetCRS 


SourceAndTargetCRSs data 
structure, see Table 1 


One (mandatory) 


 


11.2.2 GetTransformation request implementation requirements 


The ―Multiplicity and use‖ column in Table 29 specifies the optionality of each listed 


parameter and data structure in the GetTransformation operation request. Since all 


parameters and data structures are mandatory in the operation request, all parameters and 


data structures shall be implemented by all WCTS clients, using specified value(s). 


Similarly, all parameters and data structures shall be implemented by all WCTS servers, 


checking that each request parameter is received with allowed value(s). 


11.2.3 GetTransformation request KVP encoding (required) 


All WCTS servers that implement the GetTransformation operation may implement 


HTTP GET transfer of the GetTransformation operation request, using KVP encoding. 


The KVP encoding of the GetTransformation operation request shall use the parameters 


specified in Table 30. The parameters listed in Table 30 shall be as specified in Table 29 


above. 


Table 30 — GetTransformation operation request URL parameters 


Name and example a Optionality Definition and format 


service=WCTS Mandatory Service type identifier 


request=GetTransformation Mandatory Operation name 


version=0.0.20 Mandatory  Specification and schema version for this operation 


sourceCRS=urn:ogc:def:crs:EPSG:
6.3:4277 


Mandatory Identifier URI of input coordinate reference system 


targetCRS=urn:ogc:def:crs:EPSG:6
.3:2770 


Mandatory  Identifier URI of desired output coordinate 
reference system 


a All parameter names are here listed using mostly lower case letters. However, any parameter name 
capitalization shall be allowed in KVP encoding, see Subclause 11.5.2 of [OGC 06-121r3]. 


 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 47 
 


11.2.4 GetTransformation request XML encoding (optional) 


WCTS servers that implement the GetTransformation operation may implement HTTP 


POST transfer of the GetTransformation operation request, using XML encoding only. 


The XML Schema fragment for the GetTransformation operation request is specified by 


the GetTransformation element in the attached normative wctsGetTransformation.xsd 


file. As indicated, this XML Schema fragment uses the coordinate reference systems 


portion of GML 3.1.1 [OGC 04-092r4]. 


11.2.5 GetTransformation request SOAP encoding (optional) 


WCTS servers may implement SOAP version 1.2 transfer of the GetTransformation 


operation request as specified in Annex G, using the XML encoding referenced above. 


11.3 Operation response 


11.3.1 GetTransformation operation exceptions 


When a web coordinate transformation server encounters an error while performing a 


GetTransformation operation, it shall return an exception report message as specified in 


Subclause 8.5 of [OGC 06-121r3]. The allowed exception codes shall include those listed 


in Table 3 in Subclause 7.3 of this document. 


EDITOR’S NOTE  Do any more exceptionCode values need to be defined, for any other problem(s) that 
may prevent completing the GetTransformation operation? 


11.3.2 GetTransformation response XML encoding (required) 


The normal response to a GetTransformation operation request shall be the definitions of 


one or more coordinate transformations. Each of these transformations shall be encoded 


in XML using a concrete element in the gml:_CoordinateOperation substitutionGroup, 


specified in coordinateOperations.xsd of GML 3.1.1. Those transformation definitions 


shall always be encoded in one gml:Dictionary element as specified in the GML 3.1.1 


simple dictionary profile [OGC 05-099r2]. 


It is possible that a transformation is not feasible. Possible reasons are that the web 


coordinate transformation server does not know the necessary transformation steps or that 


a transformation is not possible at all (for example, the transformation of a 2D to a 3D 


CRS). If a transformation is not feasible for a service, the WCTS shall return an 


exception report message. 


11.3.3 GetTransformation response SOAP encoding (optional) 


WCTS servers that implement SOAP transfer of GetTransformation operation requests 


shall also implement SOAP version 1.2 transfer of the corresponding operation 


responses. These operation responses shall be encoded as specified in Annex G, using the 


XML encoding referenced above. 


11.4 Examples 


11.4.1 GetTransformation request 


A GetTransformation operation request might be encoded in KVP like this: 







OGC 07-055r1 


48 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


www.lat-lon.de/transform&service=WCTS&request=GetTransformation 


&version=0.0.0&sourceCRS=urn:ogc:def:crs:EPSG:6.3:4277&targetCRS=urn:og


c:def:crs:EPSG:6.3:2770& 


 


The corresponding GetTransformation operation request encoded in XML is: 


<?xml version="1.0" encoding="UTF-8"?> 


<GetTransformation xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:xlink="http://www.w3.org/1999/xlink" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetTransformation.xsd"  


service="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28--> 


 <SourceCRS>urn:ogc:def:crs:EPSG:6.0:4277</SourceCRS> 


 <TargetCRS>urn:ogc:def:crs:EPSG:6.0:27700</TargetCRS> 


</GetTransformation> 


 


11.4.2 GetTransformation response 


If no exception occurs, the server will respond to a GetTransformation request with a list 


of one or more transformations. To transform EPSG:4277 to EPSG:2770 just one 


transformation might be known: 


<?xml version="1.0" encoding="UTF-8"?> 


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:wcts="http://www.opengis.net/wcts/0.0" 


xmlns:xlink="http://www.w3.org/1999/xlink" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation=http://www.opengis.net/gml 


../../../../gml/3.1.1/base/gml.xsd http://www.opengis.net/wcts/0.0 


../../wctsOperationParameter.xsd 


gml:id="root"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <!-- ===================================================== --> 


 <name>GetTransformationOperationResponse</name> 


 <!-- ===================================================== --> 


 <dictionaryEntry> 


  <!-- This XML example is for a specific coordinate operation that 


uses the well-known Transverse Mercator operation method as defined by 


the EPSG. 


 sourceCRS: urn:ogc:def:srs:EPSG:6.0:4277 (OSGB 1936) 


 targetCRS: urn:ogc:def:srs:EPSG:6.0:27700 (OSGB 1936 / British 


National Grid) --> 


  <Conversion gml:id="EPSG19916"> 


   <coordinateOperationName>Transverse 


Mercator</coordinateOperationName> 


   <coordinateOperationID> 


    <name 


codeSpace="urn:ogc:def:coordinateOperation:EPSG:6.0:">19916</name> 


   </coordinateOperationID> 


   <usesMethod xlink:href="urn:ogc:def:method:EPSG:6.0:9807" 


xlink:title="Transverse Mercator"/> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:degree">49</value> 



http://www.opengis.net/gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd





OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 49 
 


    <valueOfParameter 


xlink:href="urn:ogc:parameter:EPSG:6.0:8801" xlink:title="Latitude of 


natural origin"/> 


   </usesValue> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:degree">-2</value> 


    <valueOfParameter 


xlink:href="urn:ogc:parameter:EPSG:6.0:8802" xlink:title="Longitude of 


natural origin"/> 


   </usesValue> 


   <usesValue> 


    <value 


uom="urn:ogc:def:uom:OGC:1.0:unity">0.999601272</value> 


    <valueOfParameter 


xlink:href="urn:ogc:parameter:EPSG:6.0:8805" xlink:title="Scale factor 


at natural origin"/> 


   </usesValue> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:metre">400000</value> 


    <valueOfParameter 


xlink:href="urn:ogc:parameter:EPSG:6.0:8806" xlink:title="False 


Easting"/> 


   </usesValue> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:metre">-100000</value> 


    <valueOfParameter 


xlink:href="urn:ogc:parameter:EPSG:6.0:8807" xlink:title="False 


Northing"/> 


   </usesValue> 


  </Conversion> 


 </dictionaryEntry> 


</Dictionary> 


 


12  GetResourceByID operation (optional) 


12.1 Introduction 


The GetResourceByID operation allows WCTS clients to retrieve definitions of one or 


more identified abilities provided by the WCTS server. Those resources can be 


coordinate transformations, coordinate reference systems (CRSs), or operation methods. 


All definitions in the operation response are encoded in XML using GML 3.1.1. 


Implementation of the GetResourceByID operation is optional for a WCTS server. This 


WCTS GetResourceByID operation is adapted from the GetResourceByID operation 


specified in Subclause 9.4 of OWS Common [OGC 06-121r3]. 


12.2 Operation request 


12.2.1 GetResourceByID request parameters 


A request to perform the GetResourceByID operation shall include the parameters listed 


and defined in Table 31. This table also specifies the UML model data type, source of 


values, and multiplicity of each listed parameter. 







OGC 07-055r1 


50 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


NOTE  All four parameters listed below (with grey background) are largely copied from Table 23 in 
Subclause 9.2.1 of [OGC 06-121r3]. 


Table 31 — Parameters in GetResourceByID operation request 


Name Definition Data type and value Multiplicity and use 


service 


service 


Service type identifier Character String type, not empty 


Value is OWS type abbreviation, 
namely ―WCTS‖ 


One (mandatory) 


request 


request 


Operation name Character String type, not empty 


Value is operation name, namely 
―GetResourceByID‖ 


One (mandatory) 


version 


version 


Specification version 
for operation 


Character String type, not empty 


Value is specified by each 
specification and Schemas 
version 


One (mandatory) 


resourceID  


ResourceID 


Unambiguous identifier 
of desired object, 
identifying specific 
version when needed 


URI 


Values defined in service metadata 
(Capabilities) or in other 
metadata known to client 


One or more (optional) 


Include one for each 
object requested 


a If there are multiple versions of the same basic resource, each version shall have a different ResourceID. The 
version may be identified within that ResourceID, but this version shall be opaque to OWS servers. 


 


12.2.2 ResourceID values 


For the WCTS, three categories of ResourceID may be allowed, each category being 


optional implementation by a server. Only one category of resource can be included in 


one GetResourceByID operation request. These three categories are: 


a) Transformation – Each of these transformations can be a single transformation, or a 
ConcatenatedOperation that combines multiple single transformations. 


b) CRS – Each of these CRSs can be any one of the six different concrete types of CRS 
included in the GML 3.1.1 Grid CRSs profile [OGC 05-096r1]. 


c) Method – Each operation method can include zero or more operation parameters. 


12.2.3 GetResourceByID request implementation requirements 


The ―Multiplicity and use‖ column in Table 31 specifies the optionality of each listed 


parameter in the GetResourceByID operation request. Since all parameters are mandatory 


in the operation request, all parameters shall be implemented by all WCTS clients, using 


a specified value(s). Similarly, all parameters shall be implemented by all WCTS servers, 


checking that each request parameter is received with allowed value(s). 


12.2.4 GetResourceByID request KVP encoding (optional) 


A server that implements the GetResourceByID operation may implement HTTP GET 


transfer of the operation request, using KVP encoding. The KVP encoding of the 


GetResourceByID operation request shall use the parameters specified in Table 32, which 


shall be as specified in Table 31 above. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 51 
 


Table 32 — GetResourceByID operation request URL parameters 


Name and example a Optionality Definition and format 


service=WCTS Mandatory Service or profile type identifier 


request=GetResourceByID Mandatory Operation name 


version=0.0.0 Mandatory  Specification and schema version for this operation 


ResourceIDs=urn:ogc:def:coordina
teOperation:EPSG:6.3:19916 


Mandatory Identifier URIs of one or more objects, comma-
separated list 


a All parameter names are here listed using mostly lower case letters. However, any parameter name 
capitalization shall be allowed in KVP encoding, see Subclause 11.5.2 of [OGC 06-121r3]. 


 


12.2.5 GetResourceByID request XML encoding (optional) 


A server that implements the GetResourceByID operation may implement HTTP POST 


transfer of the operation request, using XML encoding only. The XML Schema fragment 


for the GetResourceByID operation request is specified by the GetResourceByID element 


in the attached normative wctsGetResourceByID.xsd file. 


12.2.6 GetResourceByID request SOAP encoding (optional) 


WCTS servers may implement SOAP version 1.2 transfer of the GetResourceByID 


operation request as specified in Annex G, using the XML encoding referenced above. 


12.3 Operation response 


12.3.1 GetResourceByID operation exceptions 


When a web coordinate transformation server encounters an error while performing an 


GetResourceByID operation, it shall return an exception report message as specified in 


Subclause 8.5 of [OGC 06-121r3]. The allowed standard exception codes shall include 


those listed in Table 3 in Subclause 7.3 of this document.  


12.3.2 GetResourceByID normal response 


The normal response to a GetResourceByID operation request shall be the definitions of 


the one or more requested objects. Those definitions shall always be encoded in one 


Dictionary element as specified in dictionary.xsd of the GML 3.1.1 simple dictionary 


profile [OGC 05-099r2]. For the three allowed categories of objects, the definitions in the 


dictionary shall be: 


a) Transformation  – Transformation or ConcatenatedOperation elements encoded as 
specified in coordinateOperations.xsd of the GML 3.1.1 Grid CRSs profile [OGC 05-


096r1].  


b) CRS – GeographicCRS, ProjectedCRS, VerticalCRS, CompoundCRS, ImageCRS, or 
DerivedCRS elements encoded as specified in coordinateReferenceSystems.xsd of 


the GML 3.1.1 Grid CRSs profile [OGC 05-096r1]. 


c) Method – Operation Method elements encoded as specified in 
coordinateOperations.xsd of the GML 3.1.1 Grid CRSs profile [OGC 05-096r1]. 







OGC 07-055r1 


52 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


12.3.3 GML Application Schema 


The definition of a Method should use a GML Application Schema developed for use by 


the WCTS. This GML Application Schema extends the definition of the 


gml:OperationParameter element to allow providing more information defining each 


operation parameter. This additional information includes the allowed parameter values, 


plus the supported Units of Measure for the values. This information is expected to be 


useful by a client that chooses to specify a user-defined coordinate transformation, using 


an operation method supported by a WCTS server. 


This GML Application Schema is the attached normative XML Schema Document 


named wctsOperationParameter.xsd. This schema adds five XML elements to the 


definition of an OperationParameter, namely: 


a) One of the alternative elements in the PossibleValues group, specifying the allowed 
values or range(s) of this parameter. 


b) DefaultValue element, which should be included to specify the default value 
whenever a default value exists for this parameter. 


c) Meaning element, which should be included to provide the meaning of this 
parameter. 


d) DataType element, which should be included to identify the data type of this 
parameter. 


e) ValuesUnit element, which should be included to identify the units of measure or 
reference system for values of this parameter whenever that parameter has units or a 


reference system. 


f) otherUOM elements, which should be included to any other supported units of 
measure for values of this parameter. 


NOTE  This GML Application Schema uses the owsDomainType.xsd XML Schema document 


specified in OWS Common [OGC 06-121r3] 


12.3.4 GetResourceByID response SOAP encoding (optional) 


WCTS servers that implement SOAP transfer of GetResourceByID operation requests 


shall also implement SOAP version 1.2 transfer of the corresponding operation 


responses. These operation responses shall be encoded as specified in Annex G, using the 


XML encoding referenced above. 


12.3.5 GetResourceByID response implementation requirements 


TBD 


12.4 Examples 


12.4.1 GetResourceByID request for a Transformation 


A GetResourceByID operation request for one Transformation might be encoded in KVP 


like this: 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 53 
 


www.lat-


lon.de/transform&service=WCTS&request=GetResourceByID&version=0.0. 


0&ResourceIDs=urn:ogc:def:coordinateOperation:EPSG:6.3:19916& 


 


The corresponding operation request encoded in XML is: 


<?xml version="1.0" encoding="UTF-8"?> 


<GetResourceByID xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetResourceByID.xsd"  


service="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <ows:ResourceID>urn:ogc:def:coordinateOperation:EPSG:6.3:19916</ows:


ResourceID> 


</GetResourceByID> 


 


12.4.2 GetResourceByID response for a Transformation 


If no exception occurs, the server will reply to a GetResourceByID operation request for 


one or more Transformation with a gml:Dictionary containing one or more 


transformations. If the one EPSG 19916 transformation is requested, the response might 


be: 


<?xml version="1.0" encoding="UTF-8"?> 


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xlink="http://www.w3.org/1999/xlink" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation=http://www.opengis.net/gml 


../../../../gml/3.1.1/base/gml.xsd 


gml:id="root"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <!-- ===================================================== --> 


 <name>GetResourceByIdOperationResponse</name> 


 <!-- ===================================================== --> 


 <dictionaryEntry> 


  <Conversion gml:id="EPSG19916"> 


   <coordinateOperationName>Transverse 


Mercator</coordinateOperationName> 


   <coordinateOperationID> 


    <name 


codeSpace="urn:ogc:def:coordinateOperation:EPSG:6.0:">19916</name> 


   </coordinateOperationID> 


   <usesMethod xlink:href="urn:ogc:def:method:EPSG:6.0:9807" 


xlink:title="Transverse Mercator"/> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:degree">49</value> 


    <valueOfParameter 


xlink:href="urn:ogc:def:parameter:EPSG:6.0:8801" xlink:title="Latitude 


of natural origin"/> 


   </usesValue> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:degree">-2</value> 



http://www.opengis.net/gml/3.1.1/base/gml.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd





OGC 07-055r1 


54 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


    <valueOfParameter 


xlink:href="urn:ogc:def:parameter:EPSG:6.0:8802" xlink:title="Longitude 


of natural origin"/> 


   </usesValue> 


   <usesValue> 


    <value 


uom="urn:ogc:def:uom:OGC:1.0:unity">0.999601272</value> 


    <valueOfParameter 


xlink:href="urn:ogc:def:parameter:EPSG:6.0:8805" xlink:title="Scale 


factor at natural origin"/> 


   </usesValue> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:metre">400000</value> 


    <valueOfParameter 


xlink:href="urn:ogc:def:parameter:EPSG:6.0:8806" xlink:title="False 


Easting"/> 


   </usesValue> 


   <usesValue> 


    <value uom="urn:ogc:def:uom:OGC:1.0:metre">-100000</value> 


    <valueOfParameter 


xlink:href="urn:ogc:def:parameter:EPSG:6.0:8807" xlink:title="False 


Northing"/> 


   </usesValue> 


  </Conversion> 


 </dictionaryEntry> 


</Dictionary> 


 


12.4.3 GetResourceByID request for a CRS 


A GetResourceByID operation request for the EPSG 4277 CRS can look like this 


encoded in KVP: 


http://www.lat-


lon.de/transform&service=WCTS&request=GetResourceByID&version=0.0.0&Res


ourceIDs=urn:ogc:def:crs:EPSG:6.3:4277& 


 


The corresponding operation request encoded in XML is: 


<?xml version="1.0" encoding="UTF-8"?> 


<GetResourceByID xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetResourceByID.xsd"  


service="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <ows:ResourceID>urn:ogc:def:crs:EPSG:6.3:4277</ows:ResourceID> 


</GetResourceByID> 


 


12.4.4 GetResourceByID response for a CRS 


If no exception occurs, the server will reply to a GetResourceByID operation request with 


a gml:Dictionary containing one or more CRS definitions. If the one EPSG 4277 CRS is 


requested, the response might be: 


<?xml version="1.0" encoding="UTF-8"?> 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 55 
 


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation=http://www.opengis.net/gml 


../../../../gml/3.1.1/base/gml.xsd 


gml:id="root"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <!-- ===================================================== --> 


 <name>GetResourceByIdOperationResponse</name> 


 <!-- ===================================================== --> 


 <dictionaryEntry> 


  <GeographicCRS gml:id="EPSG4277"> 


   <srsName>OSGB 1936</srsName> 


   <srsID> 


    <name codeSpace="urn:ogc:def:crs:EPSG:6.0:">4277</name> 


   </srsID> 


   <validArea> 


    <description>United Kingdom (UK) - Great Britain - England 


Scotland Wales - onshore; Isle of Man. </description> 


   </validArea> 


   <usesEllipsoidalCS> 


    <EllipsoidalCS gml:id="EPSG6402"> 


     <csName>ellipsoidal</csName> 


     <csID> 


      <name 


codeSpace="urn:ogc:def:ellipsoid:EPSG:6.0:">6402</name> 


     </csID> 


     <usesAxis> 


      <CoordinateSystemAxis gml:id="EPSG9901" 


gml:uom="urn:ogc:uom:OGC:1.0:degree"> 


       <name>Geodetic latitude</name> 


       <axisID> 


        <name 


codeSpace="urn:ogc:def:axis:EPSG:6.0:">9901</name> 


       </axisID> 


       <axisAbbrev>Lat</axisAbbrev> 


       <axisDirection 


codeSpace="urn:ogc:def:axisDirection:OGC:1.0:">north</axisDirection> 


      </CoordinateSystemAxis> 


     </usesAxis> 


     <usesAxis> 


      <CoordinateSystemAxis gml:id="EPSG9902" 


gml:uom="urn:ogc:uom:OGC:1.0:degree"> 


       <name>Geodetic longitude</name> 


       <axisID> 


        <name 


codeSpace="urn:ogc:def:axis:EPSG:6.0:">9902</name> 


       </axisID> 


       <axisAbbrev>Lon</axisAbbrev> 


       <axisDirection 


codeSpace="urn:ogc:def:axisDirection:OGC:1.0:">east</axisDirection> 


      </CoordinateSystemAxis> 


     </usesAxis> 


    </EllipsoidalCS> 


   </usesEllipsoidalCS> 


   <usesGeodeticDatum> 


    <GeodeticDatum gml:id="EPSG6277"> 


     <datumName>OSGB 1936</datumName> 



http://www.opengis.net/gml/3.1.1/base/gml.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd

http://www.opengis.net/gml/3.1.1/base/gml.xsd





OGC 07-055r1 


56 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


     <datumID> 


      <name 


codeSpace="urn:ogc:def:datum:EPSG:6.0:">6277</name> 


     </datumID> 


     <usesPrimeMeridian> 


      <PrimeMeridian gml:id="EPSG8901"> 


       <meridianName>Greenwich</meridianName> 


       <meridianID> 


        <name 


codeSpace="urn:ogc:def:meridain:EPSG:6.0:">8901</name> 


       </meridianID> 


       <greenwichLongitude> 


        <angle 


uom="urn:ogc:uom:OGC:1.0:degree">0</angle> 


       </greenwichLongitude> 


      </PrimeMeridian> 


     </usesPrimeMeridian> 


     <usesEllipsoid> 


      <Ellipsoid gml:id="EPSG7001"> 


       <ellipsoidName>Airy 1830</ellipsoidName> 


       <ellipsoidID> 


        <name 


codeSpace="urn:ogc:def:ellipsoid:EPSG:6.0:">7001</name> 


       </ellipsoidID> 


       <semiMajorAxis 


uom="urn:ogc:uom:OGC:1.0:metre">6377563.396</semiMajorAxis> 


       <secondDefiningParameter> 


        <inverseFlattening 


uom="urn:ogc:uom:EPSG:6.0:9201">299.3249646</inverseFlattening> 


       </secondDefiningParameter> 


      </Ellipsoid> 


     </usesEllipsoid> 


    </GeodeticDatum> 


   </usesGeodeticDatum> 


  </GeographicCRS> 


 </dictionaryEntry> 


</Dictionary> 


 


12.4.5 GetResourceByID request for a Method 


A GetResourceByID operation request for the EPSG 9807 operation method (Transverse 


Mercator) can look like this encoded in KVP: 


http://www.lat-


lon.de/transform&service=WCTS&request=GetResourceByID&version=0.0.0&Res


ourceIDs=urn:ogc:def:method:EPSG:6.3:9807& 


 


The corresponding operation request encoded in XML is: 


<?xml version="1.0" encoding="UTF-8"?> 


<?xml version="1.0" encoding="UTF-8"?> 


<GetResourceByID xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetResourceByID.xsd"  


service="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 57 
 


 <ows:ResourceID>urn:ogc:def:method:EPSG:6.3:9807</ows:ResourceID> 


</GetResourceByID> 


 


12.4.6 GetResourceByID response for a Method 


If no exception occurs, the server will reply to a GetResourceByID operation request with 


a gml:Dictionary containing one or more operation method definitions. If the one EPSG 


9807 operation method is requested, the response might be: 


<?xml version="1.0" encoding="UTF-8"?> 


<GetResourceByID xmlns="http://www.opengis.net/wcts/0.0" 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts/0.0 


../../wctsGetResourceByID.xsd"  


service="WCTS" version="0.0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <ows:ResourceID>urn:ogc:def:method:EPSG:6.3:9807</ows:ResourceID> 


</GetResourceByID> 


  


12.4.7 GetResourceByID response for an orthorectification method 


If no exception occurs, the server will reply to a GetResourceByID operation request for 


methods with a gml:Dictionary containing of one or more operation method definitions. 


If one user defined orthorectification operation method is requested, the response might 


be: 


EDITOR’S NOTE  This example was showcased during OWS-2. 


<?xml version="1.0" encoding="UTF-8"?> 


<Dictionary xmlns="http://www.opengis.net/gml" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xlink="http://www.w3.org/1999/xlink" 


xmlns:wcts=http://www.opengis.net/wcts/0.0 


xmlns:ows="http://www.opengis.net/ows/1.1" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation=”http://www.opengis.net/gml 


../../../../gml/3.1.1/base/gml.xsd http://www.opengis.net/wcts/0.0 


../../wctsOperationParameter.xsd”  


gml:id="root"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2007-04-28 --> 


 <!-- ===================================================== --> 


 <name>GetResourceByIdOperationResponse</name> 


 <!-- ===================================================== --> 


 <dictionaryEntry> 


  <OperationMethod gml:id="_SPOT_SRIT"> 


   <methodName>SPOT SRIT (Orthorectification)</methodName> 


   <methodID> 


    <name 


codeSpace="http://www.pcigeomatics.com/ontology/opengis/services/wcts/w


arper#">SPOT_SRIT</name> 


    <version>1.0.0</version> 


   </methodID> 


   <remarks>PCI Geomatics' SRIT (rectification system for remote-


sensing imagery) mathematical model is applied in correcting SPOT 


images. This rigorous method of geometric correction takes into account 


all global system distortions (satellite, sensor, earth). This 



http://www.opengis.net/wcts/0.0

gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd�

gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd�

gml/3.1.1/base/gml.xsd%20http:/www.opengis.net/wcts/wctsOperationParameter.xsd�





OGC 07-055r1 


58 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


implementation relies on DIMAP information to compute the positioning 


of the imagery. It does not use Ground Control Points. It provides a 


good accuracy of ~20-40 m even without Ground Control Points. 


</remarks> 


   <methodFormula>CCRS SRIT Model</methodFormula> 


   <sourceDimensions>2</sourceDimensions> 


   <targetDimensions>2</targetDimensions> 


   <usesParameter> 


    <wcts:OperationParameter gml:id="_bands"> 


     <parameterName>List of channels</parameterName> 


     <parameterID> 


      <name 


codeSpace="http://www.pcigeomatics.com/ontology/opengis/services/wcts/w


arper#">bands</name> 


     </parameterID> 


     <remarks>Comma delimited list of channel number (index 


starting at 1)</remarks> 


     <wcts:allowedValues> 


      <ows:AllowedValues> 


       <ows:Range> 


        <ows:MinimumValue>1</ows:MinimumValue> 


       </ows:Range> 


      </ows:AllowedValues> 


     </wcts:allowedValues> 


    </wcts:OperationParameter> 


   </usesParameter> 


   <usesParameter> 


    <wcts:OperationParameter gml:id="_DIMAP_URL"> 


     <parameterName>DIMAP URL</parameterName> 


     <parameterID> 


      <name 


codeSpace="http://www.pcigeomatics.com/ontology/opengis/services/wcts/w


arper#">DIMAP_URL</name> 


     </parameterID> 


     <remarks>DIMAP Metadata URL for SPOT Imagery typically 


metadata.dim file</remarks> 


     <wcts:allowedValues> 


      <ows:AllowedValues> 


       <ows:Value>TBD</ows:Value> 


      </ows:AllowedValues> 


     </wcts:allowedValues> 


    </wcts:OperationParameter> 


   </usesParameter> 


   <usesParameter> 


    <wcts:OperationParameter gml:id="_pixel-size"> 


     <parameterName>Pixel X, Y output size</parameterName> 


     <parameterID> 


      <name 


codeSpace="http://www.pcigeomatics.com/ontology/opengis/services/wcts/w


arper#">pixel-size</name> 


     </parameterID> 


     <remarks>pixel size in X and Y in either decimal degree 


or meter. The pixel size are defined as comma-delimited value 


pixelSizeX,pixelSizeY. This value may be moved to the WCTS 


parameter</remarks> 


     <wcts:allowedValues> 


      <ows:AllowedValues> 


       <ows:Range> 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 59 
 


        <ows:MinimumValue>0.001</ows:MinimumValue> 


       </ows:Range> 


      </ows:AllowedValues> 


     </wcts:allowedValues> 


    </wcts:OperationParameter> 


   </usesParameter> 


   <usesParameter> 


    <wcts:OperationParameter gml:id="_DEM_URL"> 


     <parameterName>Elevation (DEM) datafile 


URL</parameterName> 


     <parameterID> 


      <name 


codeSpace="http://www.pcigeomatics.com/ontology/opengis/services/wcts/w


arper#">DEM_URL</name> 


     </parameterID> 


     <remarks>Digital elevation model (DEM) url used for the 


orthorectification process</remarks> 


     <wcts:allowedValues> 


      <ows:AllowedValues> 


       <ows:Range/> 


      </ows:AllowedValues> 


     </wcts:allowedValues> 


    </wcts:OperationParameter> 


   </usesParameter> 


  </OperationMethod> 


 </dictionaryEntry> 


</Dictionary> 


  


NOTE  The orthorectified image resolution in each direction needs to be specified by the values of one 
or more of the Transformation parameters. In this example, the orthorectified image resolution is set by the 
value of a transformation parameter named pixel_size. This is probably not the optimum parameter name or 
meaning. 







OGC 07-055r1 


60 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex A 
(normative) 


 
Abstract test suite 


NOTE   This annex is not yet an Abstract Test Suite as specified in ISO 19105, in either structure or 


content.  This annex will thus need to be revised before this Implementation Specification can be submitted 


to ISO/TC 211. 


A.1 Conformance testing overview 


The first step in testing conformance of a server with the interface specified in this 


document shall be review of the server implementation documentation. This review shall 


determine the abilities that are implemented which need to be tested, and shall verify that 


the abilities implemented are sufficiently specified to allow testing. Documentation 


review is discussed in more detail in Subclause A.2. 


Conformance testing of server software that implements this Implementation 


Specification is logically organised by the coordinate transformations which are 


implemented by that software. Only those coordinate transformations identified as being 


implemented by that implementation should be tested, except when testing error 


handling. 


Ideally, all coordinate transformations identified as being implemented by an 


implementation should be tested. However, if more than 100 (TBR) different coordinate 


transformations are implemented, a diverse sample of 100 (TBR) of those 


transformations may be tested. That diverse sample should include each supported source 


CRS, target CRS, and operation method (including those used by coordinate Conversions 


without specific source and target CRSs). 


For each implemented operation, a sequence of operation requests shall be made using 


that operation. These sequences of operation requests are outlined below in Subclauses 


A.3 through A.9. These sequences of operation requests shall be intermixed with other 


operation requests, involving the same and different coordinate transformations. 


A.2 Documentation review 


Conformance testing shall begin with a documentation review, to determine the abilities 


that are implemented and need to be tested. This documentation review shall also check if 


all the abilities implemented are sufficiently specified to support adequate testing. 


Specifically, this review shall check if the documentation clearly specifies the abilities 


implemented, including: 


a) Which coordinate transformations it implements 


b) Which operation methods it implements 


c) Which coordinate reference systems it implements 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 61 
 


d) Which interface operations it implements 


e) Which data formats it implements 


a) Which of the specified compliance classes it fully supports 


The documentation reviewed shall include the complete Capabilities (service metadata) 


document that can be retrieved from the server, plus any other documentation available 


for that server (including the documentation referenced by that Capabilities document). 


All of this information shall be used to select and define the conformance tests to be 


performed. The list of implemented coordinate transformations shall be used to select the 


set of transformations that should each be tested. The specification of each implemented 


coordinate transformation shall be used to determine the correct relationship of output 


data to the corresponding input data. Each implemented interface operation shall be 


tested. 


A.3 GetCapabilities operation testing 


The GetCapabilities operation shall be tested by using that operation to retrieve: 


a) Only the ServiceIdentification section of the Capabilities document 


b) Only the ServiceProvider section of the Capabilities document 


c) Only the OperationsMetadata section of the Capabilities document 


d) Only the Contents section of the Capabilities document 


e) All sections of the Capabilities document 


KVP, (plain) XML, and/or SOAP encoding of the GetCapabilities operation request shall 


be tested, depending on which encoding(s) are implemented. In addition to testing this 


operation with correct inputs, this operation shall be tested with incorrect inputs, 


including at least one incorrect value for each operation request parameter (TBR). 


The Capabilities document including all sections shall be compared against the individual 


section Capabilities documents to verify that they are consistent. Each Capabilities 


document shall be checked to ensure that it is valid with respect to the XML Schema 


definition of that service metadata document. 


Each section of the complete Capabilities document shall be checked to ensure that it 


corrected represents the specific server. These checks shall include checking that the: 


a) OperationsMetadata section lists all and only the operations implemented by this 
server 


b) All URLs listed for each operation are supported and provide correct results 


c) Contents section lists all and only the abilities implemented by this server 







OGC 07-055r1 


62 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


A.4 Transform operation testing 


The Transform operation shall be tested by using that operation to perform each of the 


selected set of coordinate transformations on a selected set of example data. 


Transforming features shall be tested if the server implements transforming features, and 


the set of features tested shall include each geometry type and feature format that is 


implemented by the server. Transforming coverages shall be tested if the server 


implements transforming coverages, and the set of coverages tested shall include each 


coverage type, coverage format, and interpolation method that is implemented by the 


server. 


KVP, (plain) XML, and/or SOAP encoding of the Transform operation request shall be 


tested, depending on which encoding(s) are implemented. In addition to testing this 


operation with correct inputs, this operation shall be tested with incorrect inputs, 


including at least one incorrect value for each operation request parameter (TBR). 


The response from each Transform operation requested shall be checked for the proper 


correspondence to the operation inputs, depending on the specific coordinate 


transformation and input feature(s) or coverage. Each response shall also be checked to 


ensure that it is valid with respect to the XML Schema definition of that response. 


NOTE  The bulk of the work involved in preparing conformance tests will be in obtaining the ―correct‖ 


outputs that correspond to the various inputs, for each coordinate transformation. For each ―correct‖ output 


coordinate value, a suitable allowed error tolerance must also be selected.  Significant work is also required 


to find suitable inputs, including the coordinates of one or more points for each coordinate transformation 


tested. 


A.5 IsTransformable operation testing 


If implemented, the IsTransformable operation shall be tested by using that operation to 


check the transformability of a selected set of examples. These examples shall be selected 


to use a variety of values for the IsTransformable operation request parameters, targeting 


a set of the coordinate Transformations that are implemented by the server. 


KVP, (plain) XML, and/or SOAP encoding of the IsTransformable operation request 


shall be tested, depending on which encoding(s) are implemented. In addition to testing 


this operation with correct inputs, this operation shall be tested with incorrect inputs, 


including at least one incorrect value for each operation request parameter (TBR). 


The response from each IsTransformable operation requested shall be checked for the 


proper correspondence to the operation inputs, depending on the specific coordinate 


transformations and other abilities implemented. Each response shall also be checked to 


ensure that it is valid with respect to the XML Schema definition of that response. 


A.6 GetTransformation operation testing 


If implemented, the GetTransformation operation shall be tested by using that operation 


to retrieve a variety of coordinate transformation definitions, singly and in groups. These 


examples shall be selected from the set of the coordinate transformations that are 


implemented by the server, using the SourceCRS and TargetCRS of each selected 


transformation. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 63 
 


KVP, (plain) XML, and/or SOAP encoding of the GetTransformation operation request 


shall be tested, depending on which encoding(s) are implemented. In addition to testing 


this operation with correct inputs, this operation shall be tested with incorrect inputs, 


including at least one incorrect value for each operation request parameter (TBR). 


The response from each GetTransformation operation requested shall be checked for the 


proper correspondence to the operation inputs, depending on the specific coordinate 


transformations implemented. Each response shall also be checked to ensure that it is 


valid with respect to the XML Schema definition of that response. 


A.7 GetResourceByID operation testing 


If implemented, the GetResourceByID operation shall be tested by using that operation to 


retrieve a variety of coordinate transformation, CRS, and operation method definitions, 


singly and in groups. These examples shall be selected from the sets of the coordinate 


transformations, CRSs, and operation methods that are implemented by the server, using 


the identifier of each selected objects. 


KVP, (plain) XML, and/or SOAP encoding of the GetResourceByID operation request 


shall be tested, depending on which encoding(s) are implemented. In addition to testing 


this operation with correct inputs, this operation shall be tested with incorrect inputs, 


including at least one incorrect value for each operation request parameter (TBR). 


The response from each GetResourceByID operation requested shall be checked for the 


proper correspondence to the operation inputs, depending on the specific objects 


implemented. Each response shall also be checked to ensure that it is valid with respect to 


the XML Schema definition of that response. 







OGC 07-055r1 


64 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex B 
(normative) 


 
Conformance classes 


B.1 Introduction 


This annex specifies a set of implementation conformance classes for this WCTS 


specification. These conformance classes include one core class that shall always be 


implemented, plus many extension conformance classes (or modules) which may also be 


implemented. These extension conformance classes are based on the optional abilities 


specified and implied in this document. 


NOTE 1 Most of the possible extension conformance classes listed below are intended to be 


independently selectable server abilities, although interface and implementation details will often 


overlap. However, at least one of the extension classes in some categories must be implemented. Extension 


classes that extend other classes can be defined, but few of the possible classes listed below extend other 


listed classes. 


NOTE 2 One could define extension conformance classes that are mutually exclusive, but none of the 


extension classes listed below are (intended to be) mutually exclusive. This was done to simplify selecting 


extension class groups for interoperability, as discussed below. 


EDITOR’S NOTE This annex is currently a first draft, and defines too many individual extension classes. 


Therefore, most of these extension classes should be combined into a few groups. On the other hand, some 


of these extension classes could be sub-divided. 


B.2 WCTS core conformance class 


The WCTS core conformance class includes the abilities that shall always be 


implemented, and excludes all the abilities included in all the extension conformance 


classes defined below. Briefly, the core conformance class includes implementation and 


testing of the: 


a) Transform operation, with the operation request parameters: 


1) service 


2) request 


3) version 


4) SourceAndTargetCRSs 


5) Transformation 


6) InputData 


b) GetCapabilities operation, with the operation request parameters: 


1) service 


2) request 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 65 
 


3) AcceptVersions 


c) Capabilities document, with the Sections: 


1) ServiceIdentification 


2) ServiceProvider 


3) OperationsMetadata 


4) Contents, not including FeatureAbilities and CoverageAbilities 


d) (At least one specific coordinate Transformation supported by Transform operation, 
one of multiple alternate profiles) 


B.3 WCTS additional operation conformance classes 


Some WCTS extension conformance classes support additional operations, providing 


more abilities. These ―operation‖ conformance classes include (optional) implementation 


and testing of zero or more of the following: 


a) GetTransformation operation, with all operation request parameters 


b) IsTransformable operation, with the operation request parameters: 


1) service 


2) request 


3) version 


4) SourceAndTargetCRSs 


5) Transformation 


6) Method, if any Methods are implemented that the server can use in user-defined 
coordinate Transformations 


c) GetResourceByID operation, with all operation request parameters, to get one or 
more of following: 


1) One or more CRS definitions 


2) One or more Transformation definitions 


3) One or more Method definitions that the server can use in user-defined coordinate 
Transformations 


B.4 Operation request encoding conformance classes 


Some WCTS extension conformance classes support the alternate methods of encoding 


all implemented operation requests. These ―encoding‖ conformance classes include 


(optional) implementation and testing of ONE or more of the following: 


a) KVP encoding in HTTP GET transfer of all implemented operation requests (in 
addition to the GetCapabilities operation) 


b) XML encoding in HTTP POST transfer of all implemented operation requests 







OGC 07-055r1 


66 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


c) SOAP encoding (in HTTP POST transfer) of all implemented operation requests and 
responses 


B.5 Operation request parameter conformance classes 


Some WCS extension conformance classes support additional (optional) parameters in 


operation requests. These ―parameters‖ conformance classes include (optional) 


implementation and testing of zero or more of the following: 


a) Support optional Sections parameter in GetCapabilities operation request 


b) Support optional UpdateSequence parameter in GetCapabilities operation request 


c) Support optional AcceptFormats parameter in GetCapabilities operation request 


d) Support optional ―store‖ parameter in Transform operation request 


e) Support OutputFormat parameter in Transform operation request that is different 
than the format of the input, supporting changing formats 


B.6 Other general conformance classes 


Some WCS extension conformance classes support other options that are independent of 


abilities to transform (non grid coverage) features and/or grid coverages, which are listed 


later. These ―general‖ conformance classes include (optional) implementation and testing 


of zero or more of the following: 


a) Each specific coordinate Transformation supported by Transform operation (multiple 
profiles, at least one implemented) 


b) Each specific operation Method, which servers can use in user-defined coordinate 
Transformations, supported by Transform operations (multiple profiles, zero or more 


implemented) 


B.7 Features transformation core conformance class 


Some of the WCTS extension conformance classes support coordinate transformation of 


(non grid coverage) features. These extension conformance classes may be implemented 


independent of whether any extension conformance classes are implemented to support 


coordinate transformation of grid coverages. In order to transform features, a ―feature 


core‖ extension profile may be provided, that includes implementing and testing of ALL 


of the following abilities: 


a) FeatureAbilities data structure in the Contents section of the Capabilities document, 
with all its contents 


b) Additional GeometryType parameter in the IsTransformable operation request 


c) Ability to transform features, feature collections, and geometries 


d) (At least one specific geometry type supported in inputs, one of multiple alternate 
profiles) 


e) (At least one specific(non-coverage) feature format supported in inputs, one of 
multiple alternate profiles) 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 67 
 


B.8 Features transformation additional conformance classes 


In addition to the above ―feature core‖ profile, additional feature extension conformance 


classes include (optional) implementation and testing of: 


a) Additional OutputFormat parameter in the Transform operation request, supporting 
changing feature formats 


b) Each specific (non-coverage) feature format supported in inputs (multiple profiles, at 
least one implemented) 


c) Each specific group of geometry types supported in inputs (multiple profiles, at least 
one implemented) 


NOTE  We assume that the geometry types with similar transformation requirements will be grouped 


for implementation. 


B.9 Coverages transformation core conformance class 


Some of the WCTS extension conformance classes support coordinate transformation of 


grid coverages. These extension classes may be implemented independent of whether any 


extension conformance classes are implemented to support coordinate transformation of 


(non grid coverage) features. In order to transform coverages, a ―coverage core‖ 


extension profile may be provided, that includes implementation and testing of ALL of 


the following abilities: 


a) Additional parameters in the Transform operation request, both: 


1) GridCRS 


2) InterpolationType 


b) Additional parameters in the IsTransformable operation request, both: 


1) CoverageType 


2) InterpolationType 


c) Transform coverages with (only) one range scalar field 


d) QuadrilateralGrid and GRID coverage type supported in inputs 


NOTE  We assume that only grid coverage transformation will be implemented in the short term. 


B.10 Coverage resampling conformance classes 


In addition to the above ―coverage core‖ conformance class, some WCTS extension 


conformance classes support optional grid position interpolation abilities. These 


―coverage resampling‖ conformance classes include (optional) implementation and 


testing of zero or more of the following: 


a) Support rotation and skew grid resampling by Transform operation 


b) Support non-linear Transformations between CRSs 


c) Each specific coordinate Transformation supported by Transform operation for 
georectified coverages (multiple profiles) 







OGC 07-055r1 


68 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


NOTE  These Transformations are used to change the base CRS of GridCRSs. 


d) Each specific coverage rectification transformation method supported by Transform 
operation for unrectified coverages (multiple profiles) 


e) Each specific grid elevation data format supported by Transform operation for image 
orthorectification (multiple profiles) 


B.11 Interpolation method conformance classes 


In addition to the above ―coverage core‖ conformance class, some WCTS extension 


conformance classes support implementing different interpolation methods for 


resampling of offered grid coverages. These ―interpolation method‖ conformance classes 


include (optional) implementation and testing of ONE or more of the following: 


a) Support the ―none‖ interpolation method by GetCoverage operation 


b) Support the ―nearest‖ interpolation method by GetCoverage operation 


c) Support the ―linear‖ interpolation method by GetCoverage operation 


d) Support the ―cubic‖ interpolation method by GetCoverage operation 


e) Support the ―quadratic‖ interpolation method by GetCoverage operation 


f) Each additional specific interpolation method supported by GetCoverage operation 
(multiple classes) 


B.12 Coverage domain conformance classes 


In addition to the above ―coverage core‖ conformance class, some WCTS extension 


conformance classes support coverage domain options, to handle different numbers and 


types of domain dimensions. These ―coverage domain‖ conformance classes include 


(optional) implementation and testing of ONE or more of the following: 


a) Transform coverages with two spatial domain dimensions (not necessarily both 
horizontal) 


b) Transform coverages with three spatial domain dimensions 


c) Transform coverages with one spatial domain dimension (not necessarily horizontal) 


d) Transform coverages with one temporal domain dimension 


e) Transform coverages with two or more temporal domain dimensions 


f) Transform coverages with one or more non-spatial-temporal domain dimensions 


B.13 Coverage range conformance classes 


In addition to the above ―coverage core‖ conformance class, some WCTS extension 


conformance classes support coverage range options, to handle more complex ranges 


than one scalar field in a coverage. These ―coverage range‖ conformance classes include 


(optional) implementation and testing of zero or more of the following: 


a) Support more than one range field 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 69 
 


b) Support vector range field(s), with one axis in a range field 


c) Support more than one axis in range field(s) (requires above profile) 


d) Support RangeSubset in GetCoverage operation request (requires one or more above 
conformance classes) 


B.14 Grid coverages transformation additional conformance classes 


In addition to the above coverage extension conformance classes, additional coverage 


extension conformance classes include (optional) implementation and testing of: 


a) Each specific grid coverage format supported in inputs (multiple profiles, including 
how this format is used) 


b) Additional OutputFormat parameter in the Transform operation request, supporting 
changing coverage formats 


NOTE  Many people will think that some of the extension conformance classes listed above should be 


included in the core profile, or should be combined with another extension profile.  However, a simple 


WCTS for rectifying (unrectified) ordinary images in one format might include only a few of these 


extension conformance classes. 


B.15 Interoperability 


For one client to use one server, each must implement the core conformance class plus a 


compatible set of WCTS conformance classes. That client will require use of some set of 


extension conformance classes in addition to the core conformance class. That is, this 


client will use some set of extension conformance classes when it is used in one or more 


use cases (which should be identified and specified). That server must implement at least 


this required set of extension conformance classes, but can implement more extensions. 


One definition of implementation interoperability is that two or more clients can equally 


use two or more servers. Such interoperability requires that all these clients and servers 


implement a shared set of extension classes. Each server in such an interoperable group 


must implement at least this shared set of extension classes, but can implement more 


extensions. Each client in such an interoperable group must not require implementation 


of any additional extensions, but can require implementation of only a subset of that 


shared set. 


It is possible for one interoperable group of clients and servers to share two or more sets 


of extension conformance classes. Each server in such an interoperable group must 


implement all these sets of extension classes. Each client in such an interoperable group 


must require implementation of (a subset of) one or more of those sets of extension 


classes. For example, these sets might differ only in which one of the extension classes in 


the operation request encoding category must be implemented. 


NOTE  Implementation of some of these listed extension conformance classes will be, or may be, 


explicitly listed as implemented Profiles in the OperationsMetadata Section of the Capabilities document. 


However, such explicit indication does NOT reduce the needs stated above for interoperable clients and 


servers to implement shared set(s) of extension conformance classes. 







OGC 07-055r1 


70 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex C 
(normative) 


 
XML schema documents 


The coordinate transformation abilities now specified in this document use the XML 


Schema specified in nine normative XML Schema Documents, bundled in a zip file with 


the present document. These XML Schema files roughly match the eight UML packages 


defined in Annex E, and are named: 


a) wctsCommon.xsd 


b) wctsContents.xsd 


c) wctsGetCapabilities.xsd 


d) wctsGetResourceByID.xsd 


e) wctsGetTransformation.xsd 


f) wctsIsTransformable.xsd 


g) wctsOperationParameter.xsd 


h) wctsTransform.xsd 


i) wctsAll.xsd 


The WCTS Schema references three XML documents that specify some values and their 
meanings of the three UML CodeList classes, namely: 


a) coverageTypes.xml, referenced at 
http://schemas.opengis.net/wcts/0.0.0/coverageTypes.xml 


b) geometryTypes.xml, referenced at 
http://schemas.opengis.net/wcts/0.0.0/geometryTypes.xml 


c) problemTypes.xml, referenced at 
http://schemas.opengis.net/wcts/0.0.0/problemTypes.xml 


The WCTS Schema builds on the OWS common XML Schema Documents listed in 


Annex A of [OGC 06-121r3], and named: 


a) ows19115subset.xsd 


b) owsCommon.xsd 


c) owsContents.xsd 


d) owsDataIdentification.xsd 


e) owsDomainType.xsd 


f) owsExceptionReport.xsd 


g) owsGetCapabilities.xsd 



http://schemas.opengis.net/wcts/0.0.0/coverageTypes.xml

http://schemas.opengis.net/wcts/0.0.0/geometryTypes.xml

http://schemas.opengis.net/wcts/0.0.0/problemTypes.xml





OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 71 
 


h) owsGetResourceByID.xsd 


i) owsOperationsMetadata.xsd 


j) owsServiceIdentification.xsd 


k) owsServiceProvider.xsd 


l) owsAll.xsd 


This WCTS Schema also uses parts of the WCS 1.1 XML Schema listed in Annex TBD 


of [OGC 07-067r2], and named: 


a) wcsGridCRS.xsd 


b) wcsInterpolationMethod.xsd 


This WCTS Schema also uses parts of the CRS-related XML Schemas for the GML 3.1.1 


grid CRSs profile, specified in [OGC 05-096r1] and named 


a) coordinateOperations.xsd 


b) coordinateReferenceSystems.xsd 


c) coordinateSystems.xsd 


d) datums.xsd 


e) dataQuality.xsd 


All these XML Schemas contain documentation of the meaning of each element and 


attribute, and this documentation shall be considered normative as specified in Subclause 


11.6.3 of [OGC 06-121r3]. 


EXAMPLES Most of the example XML documents listed in this document are included in the files 
attached to this document. 







OGC 07-055r1 


72 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex D 
(informative) 


 
Use cases 


D.1 Introduction 


Transformation of geospatial data from one CRS to another is frequently required when 


integrating data from different sources into one application. Not all applications are 


capable of performing such transformations. This annex describes use cases that show 


how a web based transformation service can solve this problem. These use cases also 


help clarify the requirements on a WCTS interface and its’ implementations. 


The basis of all use cases is the following scenario: 


A map must be created that uses EPSG:23032 (UTM band 32) as its CRS. The borders of 


the Federal Republic of Germany (layer 1), the major rivers of the Federal Republic of 


Germany (layer 2), and the largest cities of the Federal Republic of Germany (layer 3) 


shall be used to create this map. The borders of the Federal Republic of Germany are 


available in EPSG:31467 (Gauß-Krüger band 3). The major rivers are stored in 


EPSG:4230 (International 1924), and the largest cities are in EPSG:4326 


D.2 Desktop application 


The term ‖Desktop Application‖ describes an application running on a PC that accesses 


the data it uses through a file system. It is assumed that this application is allowed to 


access a network (internet or intranet) where a WCTS is available. It is also assumed that 


all map layers defined by the scenario are available from a local data store. Figure D.1 


shows a diagram for this use case. 


EDITORS NOTE  The diagram format used in these four figures needs to be explained! 


In te rne t


a p p lic a tio n


We b  C o o rd ina te


Tra nsfo rm a tio n


Se rvic e


 


Figure D.1 — Desktop Application use case: application - WCTS interaction 


a) The application defines a new map with the target CRS. 


b) The application loads layer 1 and recognises that its’ coordinates are not stored in 
EPSG:4326. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 73 
 


c) The application connects to a WCTS through the network, and requests its 
capabilities. 


d) Using the WCTS capabilities, the application evaluates if a transformation from 
EPSG:31467 to EPSG:4326 can be performed by the WCTS. (This can also be done 


by sending an IsTransformable request to the WCTS.) 


e) The application sends the geospatial data of layer 1 to the WCTS requesting their 
transformation to EPSG:4326. 


f) The WCTS sends the transformed data back to the application. 


g) Steps b) to f) are repeated for layers 2 and 3. 


h) The application renders the map by combining the transformed data. 


D.3 WMS 


The map defined in the scenario could be requested by a client through a network using a 


valid Web Map Service (WMS) GetMap request. All required data are assumed to be 


stored in sources that can be directly accessed by the WMS (an integrated WMS). Figure 


D.2 shows a diagram for this use case. 


In te rne t


WM S


We b  C o o rd ina te


Tra nsfo rm a tio n


Se rvic e


In te rne t


c lie nt (b ro wse r)


 


Figure D.2 — WMS use case: client - WMS - WCTS interaction 


The sequence of steps is similar to the Desktop Application use case. First, however, the 


client must inquire of the WMS (using a GetCapabilities request) whether it can render 


the map in the desired coordinate reference system. Afterwards the map will be rendered 


and passed to the client (web browser) via the internet or intranet. 


The following steps are required in this use case: 


a) The client defines the parameters for a new map. 


b) The client posts a GetMap request to a WMS. 


c) The WMS determines that the requested layer is not stored in the correct CRS. 


d) The WMS already knows that the WCTS offers the necessary transformation; it 
therefore sends the data of the first layer for transformation to the WCTS. 


e) Step d) is repeated for layers 2 and 3. 


f) The WMS renders the map and sends it back to the client (web browser) 







OGC 07-055r1 


74 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


D.4 Service chain 


This use case is the same as the WMS use case except the data to be rendered are not 


directly stored by the WMS. Therefore, the WMS must request them via the Internet from 


a WFS (Web Feature Service (a component WMS). This WFS supplies the data in the 


CRS specified above. Figure D.3 shows a diagram for this use case. 


In te rne t


WM S


WFS


Inte rne t


c lie n t (b ro wse r)


We b  C o o rd ina te


Tra nsfo rm a tio n


Se rvic e


 


Figure D.3 — Service Chain use case: client - WMS - WFS - WCTS interaction 


In this use case, the WMS sends a request to the WCTS, providing the input data as a 


getFeature operation request to a specific WFS. The WCTS then sends this request to the 


WFS, transforms the coordinates and sends those as response to the WMS. The 


remaining steps are performed as described above. 


EDITORS NOTE  The above paragraph does not match the figure. Is the figure wrong? 


In principle, the model is expandable for further levels e.g., in the case of a cascading 


WMS or a service chain. Figure D.4 shows a diagram for this use case. 


In te rne t


WM S


WFS


Inte rne t


c lie n t (b ro wse r)


We b  C o o rd ina te


Tra nsfo rm a tio n


Se rvic e


WM S


Inte rne t


 


Figure D.4 — Service Chain use case two4: service chain 


EDITORS NOTE  The above figure needs an explanation. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 75 
 


In the case of a cascading WMS, the WMS actually providing each layer must supply the 


requested Layer in the target CRS, since the transformation of a raster image would be 


too expensive. In addition, the result of transforming a raster image possibly would not 


meet expectations (e.g., by substantial distortions of the labelling). 


D.5 Defining and using user-defined coordinate transformation 


EDITOR’S NOTE This subclause needs further editing. 


In addition to known coordinate transformations, a WCTS server can implement user-


defined coordinate transformations, which use known operation methods with parameters 


whose values are supplied by user. For example, it is possible to perform image 


orthorectification, using a complex transformation that uses image geometry (sensor) 


model data, Digital Elevation Model (DEM), and perhaps ground control points.  


The operation method definitions, including the list of parameters with their valid values 


(for example URI for DEM or SensorML resource, coefficient of equations etc.), can be 


obtained using the GetResourceByID operation. 


The following steps are required in this use case: 


a) A user wants to perform a custom transformation based on a well-known method. 


b) The user performs a GetCapabilities request to the WCTS to retrieve the list of 
supported methods. 


c) Based on the brief descriptions of the methods or their well-known identifiers, the 
user selects the operation method of interest. 


d) The user invokes GetResourceByID operation to obtain the method definition from 
the WCTS by providing the methodID published in the Contents section of the 


Capabilities document. 


e) The server returns the wcts:OperationMethod description along with the list of 
parameters its supports. Each parameter has a unique name, cardinality information, 


list of valid values and supported Unit of measures. 


f) The parameters description is used to build a form on the client side, which the 
parameters value to validate the user inputs. 


g) The client builds an Operation based on the method parameters and refers the 
Method identifier in the Coordinate Operation. Select the input data and send a 


Transform query. 


h) The Server process the query and performs the transformation. 


i) The WCTS sends the response back.  







OGC 07-055r1 


76 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex E 
(informative) 


 
UML model 


E.1 Introduction 


This annex provides a UML model of the WCTS interface, using the OGC/ISO profile of 


UML summarized in Subclause 5.3 of [OGC 06-121r3]. This UML model builds on the 


UML model for OWS Common, specified in Annex C of [OGC 06-121r3]. This model 


also builds on the UML model specified in [ISO 19111] and OGC Abstract Specification 


Topic 2. 


Figure E.1 is a simple UML diagram summarizing the WCTS interface. This class 


diagram shows that the WCTService class inherits the getCapabilities and 


GetResourceByID operations from the OGCWebService interface class, and adds the 


―transform‖, isTransformable, and getTransformation operations. (This capitalization of 


names uses the OGC/ISO profile of UML.) 


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


+ getResourceByID(request : GetResourceByID) : Resources


(from OWS Get Capabi lites)


<<Interface>>


WCTService


+ transform(request : Transform) : OperationResponse


+ isTransformable(request : IsTransformable) : IsTransformableResponse


+ getTransformation(request : GetTransformation) : Dictionary


Each server instance normally instantiates only one object of this 


class, and this object always exists while rhe server is available.


 
 


Figure E.1 — WCTS interface UML diagram 


Each of the six operations uses a request and a response data structure, each of which is 


defined by one or more additional UML classes. The following subclauses provide a 


more complete UML model of the WCTS interface, adding UML classes defining the 


operation request and response data types. This annex uses the capitalization of names 


defined in the OGC/ISO profile of UML, which is different from the capitalization of 


names used in XML encoding. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 77 
 


E.2 UML packages 


The WCTS interface UML model is organized in 7 packages, as shown in the package 


diagram in Figure E.2. These WCTS-specific packages make direct use of 5 OWS 


common packages, named OWS Common, OWS Input Output Data, OWS 


GetCapabilities, OWS Get resource By ID, and OWS Domain. The WCTS-specific 


packages also make direct and indirect use of all six packages in the UML model for 


OGC Abstract Specification Topic 2 [OGC 05-103], here shown as part of an ISO 19111 


package. 


ISO 19111


(from Logical View)


+ CC_ConcatenatedOperation


+ CC_Conversion


+ CC_OperationMethod


+ CC_Transformation


+ SC_CRS {Abstract}


WCTS Service


+ CoverageType


+ GeometryType


+ SourceAndTargetCRSs


+ Transformation


+ WCTSRequestBase {Abstract}


+ WCTService


WCTS Get Capabilities


+ WCTSserviceMetadata


+ WCTSGetCapabilities


WCTS 


Transform


+ Transform


WCTS Is Transformable


+ IsTransformable


+ IsTransformableResponse


+ Problem


WCTS Get 


Transformation


+ GetTransformation


WCTS Contents


+ CoverageAbilities


+ FeatureAbilities


+ InputOutputFormat


+ WCTSContents


OWS Get Capabilites


(from OWS Common)


+ GetCapabilities


+ Section


+ OWSServiceMetadata


OWS Get Resource By 


ID


(from OWS Common)


+ GetResourceByID


OWS Input Output Data


(from OWS Common)


+ InputData


+ OperationResponse


+ ServiceReference


OWS Common


(from OWS Common)


+ BoundingBox


+ OGCWebService


+ RequestBase


WCTS Operation Method


+ OperationParameter


OWS Domain


(from OWS Common)


+ AllowedValues


+ AnyValue


+ DataType


+ Domain


+ DomainMetadata


+ Meaning


+ Metadata {Abstract}


+ NoValues


+ PossibleValues


+ Range


+ RangeClosure


+ ReferenceSystem


+ UOM


+ UnNamedDomain


+ ValuesReference


+ ValuesUnit
 


Figure E.2 — WCTS interface package diagram 







OGC 07-055r1 


78 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


This package diagram shows the dependencies among the WCTS packages, and the 


direct dependencies of the WCTS packages on OWS Common packages. This diagram 


does not show the dependencies among the OWS Common packages. This diagram does 


not show two packages of the WCS 1.1 UML model, named WCS GridCRS and 


Interpolation Methods. The WCTS Transform package uses both of these WCS packages, 


and the WCTS Is Transformable package uses the Interpolation Methods package. 


Each of the WCTS-specific packages shown in Figure E.2 is described in the following 


subclauses. The OWS Common packages are described in Annex C of [OGC 06-121r3]. 


The ISO 19111 packages are described in the UML model in Clauses 7-13 of [OGC 05-


103]. 


E.3 WCTS Service package 


The WCTS Service package is shown in the class diagram in Figure E.3. This diagram 


does not show the classes used by the six operation requests and responses, which are 


shown (with part of this package) in the WCTS Transform, WCTS Is Transformable, 


WCTS Get Transformation, and WCTS Get Capabilities packages. This diagram also 


shows two used classes from the OWS Web Service package, which is common to all 


OGC Web Services, plus one used class from ISO 19111. The four classes introduced by 


this package are further defined by Table 1 through Table 4 in this document. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 79 
 


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


+ getResourceByID(request : GetResourceByID) : Resources


(from OWS Get Capabil ites)


<<Interface>>


WCTService


+ transform(request : Transform) : OperationResponse


+ isTransformable(request : IsTransformable) : IsTransformableResponse


+ getTransformation(request : GetTransformation) : Dictionary


Each server instance normally instantiates only one object of this 


class, and this object always exists while the server is available.


SourceAndTargetCRSs


+ sourceCRS : URI


+ targetCRS : URI


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


SC_CRS {Abstract}
(from ISO 19111)


Transformation


0..1


0..*


+targetCRS0..1


0..*


0..1


0..*


+sourceCRS 0..1


0..*


RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


GeometryType


+ Envelope


+ Point


+ LineString


+ Polygon


+ LinearRing


+ Curve


+ LineStringSegment


+ ArcString


+ Arc


+ Circle


+ ArcStringByBulge


+ ArcByBulge


+ ArcByCenterPoint


+ CircleByCenterPoint


+ CubicSpline


+ BSpline


+ Bezier


+ OrientableCurve


+ Surface


+ PolygonPatch


+ Triangle


+ Rectangle


+ Ring


+ OrientableSurface


+ Solid


+ CompositCurve


+ CompositeSurface


+ CompositeSolid


<<CodeList>>


CoverageType


+ ThiessenPolygon


+ QuadrilateralGrid


+ HexagonalGrid


+ TriangulatedIrregularNetwork


+ SegmentedCurve


<<CodeList>>


 


Figure E.3 — WCTS Service package class diagram 







OGC 07-055r1 


80 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


E.4 WCTS Transform package 


The WCTS Transform package is shown in the class diagram in Figures E.4 and E.5. 


This diagram also shows two classes of the WCTS Service package, three classes from 


OWS Common, and two classes from WCS 1.1. The Transform and 


TransformationChoice classes introduced by this package are further defined by Table 7 


and Table 8 in this document. 


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


+ getResourceByID(request : GetResourceByID) : Resources


(from OWS Get Capabili tes)


<<Interface>>


WCTService


+ transform(request : Transform) : OperationResponse


+ isTransformable(request : IsTransformable) : IsTransformableResponse


+ getTransformation(request : GetTransformation) : Dictionary


(from WCTS Service)


Transform


Further modeled 


in part 2


OperationResponse


(from OWS Input Output D...


Shall contain or 


reference data 


trqnsformed


 


Figure E.4 — WCTS Transform package class diagram, part 1 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 81 
 


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


(from WCTS Service)


RequestBase


+ version : CharacterString


(from OWS Common)


Shall contain or 


reference data to 


be trqnsformed
SourceAndTargetCRSs


(from WCTS Service)


Transformation
(from WCTS Service)


TransformationChoice


<<Union>>


1


1


+sourceAndTargetCRSs 1


1


1


1


+transformation1


1


InputData
(from OWS Input Output Data)


InterpolationType


+ nearest


+ linear


+ cubic


+ quadratic


+ none


(from Interpolation Methods)


<<CodeList>>


GridCRS
(from WCS GridCRS)


Transform


+ request : CharacterString = "Transform" {frozen}


+ outputFormat : CharacterString


+ store [0..1] : Boolean = "False"


1


1


+transformationChoice1


1


1


1


+inputData1


10..1


1


+interpolationType0..1


1


1


1


+gridCRS1


1


 


Figure E.5 — WCTS Transform package class diagram, part 2 







OGC 07-055r1 


82 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


E.5 WCTS Is Transformable package 


The WCTS Is Transformable package is shown in the class diagram in Figure E.6. This 


diagram also shows two classes of the WCTS Service package plus several used classes 


from OWS Common packages. The four classes introduced by this package are further 


defined in Table 23 through Table 28 in this document. 


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


+ getResourceByID(request : GetResourceByID) : Resources


(from OWS Get Capabil ites)


<<Interface>>


IsTransformableResponse


+ transformable : Boolean


+ problem [0..1] : Problem


<<DataType>>


WCTService


+ transform(request : Transform) : OperationResponse


+ isTransformable(request : IsTransformable) : IsTransformableResponse


+ getTransformation(request : GetTransformation) : Dictionary


(from WCTS Service)


Problem


+ source CRS


+ target CRS


+ coordinate transformation


+ operation method


+ geometry type


+ coverage type


+ interpolation type


+ other


<<CodeList>>


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


(from WCTS Service)


At least one of either geometryType 


or coverageType shall be included. If 


no coverageType is included, no 


interpolationMethod shall be included.


IsTransformableChoice


+ sourceAndTargetCRSs : SouceAndTargetCRSs


+ transformation : URI


+ method : URI


<<Union>>


IsTransformable


+ request : String = "IsTransformable" {frozen}


+ coverageType [0..*] : CoverageType


+ interpolationType [0..*] : InterpolationType


+ geometryType [0..*] : GeometryType


<<DataType>>


1


1


+isTransformableChoice1


1


RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


CoverageType
(from WCTS Service)


<<CodeList>>


GeometryType
(from WCTS Service)


<<CodeList>>


InterpolationMerthod
(from Interpolation Methods)


<<DataType>>


 


Figure E.6 — WCTS Is Transformable package class diagram 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 83 
 


E.6 WCTS Get Transformation package 


The WCTS Get Transformation package is shown in the class diagram in Figure E.7. 


This diagram also shows two classes of the WCTS Service package plus several used 


classes from OWS Common packages. The GetTransformation class introduced by this 


package is further defined by Table 29 in this document. 


WCTService


+ transform(request : Transform) : OperationResponse


+ isTransformable(request : IsTransformable) : IsTransformableResponse


+ getTransformation(request : GetTransformation) : Dictionary


(from WCTS Service)


OGCWebService


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


+ getResourceByID(request : GetResourceByID) : Resources


+ getWSDL(request : GetWSDL) : WSDLDocument


(from OWS Get Capabil ites)


<<Interface>>


WCTSRequestBase {Abstract}


+ service : CharacterString = "WCTS" {frozen}


(from WCTS Service)


SourceAndTargetCRSs


+ sourceCRS : URI


+ targetCRS : URI


(from WCTS Service)


GetTransformation


+ request : CharacterString = "GetTransformation" {frozen}


<<DataType>>


1


1


+sourceAndTargetCRSs 1


1 Transformation
(from WCTS Service)


Dictionary
(from ISO 19136)


<<DataType>>


0..*


0..*


+transformation 0..*


0..*


RequestBase


+ service : CharacterString


+ request : CharacterString


+ version : CharacterString


(from OWS Common)


 


Figure E.7 — WCTS Get Transformation package class diagram 







OGC 07-055r1 


84 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


E.7 WCTS Get Capabilities package 


The WCTS Get Capabilities package is shown in the class diagram in Figure E.8. This 


diagram does not show details of the WCTSContents, ServiceIdentification, 


ServiceProvider, and OperationsMetadata classes, which are in separate packages. The 


WCTSContents class is in the WCTS Contents package that is described in the following 


subclause. The ServiceIdentification, ServiceProvider, and OperationsMetadata classes 


are in the OWS Service Identification, OWS Service Provider, and OWS Operations 


Metadata packages that are described in Annex B of [OGC 06-121r3]. 


OWService {Abstract}


+ getCapabilities(request : GetCapabilities) : ServiceMetadata


(from OWS Get Capabil ites)


<<Interface>>


WCTSGetCapabilities


+ service : CharacterString = "WCTS" {frozen} WCTSContents
(from WCTS Contents)


<<DataType>>


WCTSserviceMetadata


1


1


+contents1


1


GetCapabilities {Abstract}


+ service : CharacterString


+ request : CharacterString = "GetCapabilities" {frozen}


+ acceptVersions [0..1] : Sequence<CharacterString>


+ sections [0..1] : List<Section>


+ acceptFormats [0..1] : Sequence<CharacterString>


+ updateSequence [0..1] : CharacterString


(from OWS Get Capabil ites)


Section


+ serviceIdentification


+ serviceProvider


+ operationsMetadata


+ contents


+ all


(from OWS Get Capabi lites)


<<CodeList>>


ServiceIdentification
(from OWS Service Identification)


OperationsMetadata
(from OWS Operations Metadata)


ServiceProvider
(from OWS Service Provider)


ServiceMetadata {Abstract}


+ version : CharacterString


+ updateSequence [0..1] : CharacterString


(from OWS Get Capabil ites)


1


1


+serviceIdentification 1


1


1


1


+operationsMetadata 1


1 1


1


1


+serviceProvider1


 


Figure E.8 — WCTS Get Capabilities package class diagram 


E.8 WCTS Contents package 


The WCTS Contents package is shown in the class diagram in Figure E.9. This diagram 


also shows one class from the WCTS Get Capabilities package. The WCTSContents, 


CoverageAbilities, and FeatureAbilities classes introduced by this package are further 


defined by Table 19 through Table 22 in this document. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 85 
 


At least one 


shall be 


included


CoverageType


+ ThiessenPolygon


+ QuadrilateralGrid


+ HexagonalGrid


+ TriangulatedIrregularNetwork


+ SegmentedCurve


(from WCTS Service)


<<CodeList>>


GeometryType


+ Envelope


+ Point


+ LineString


+ Polygon


+ LinearRing


+ Curve


+ LineStringSegment


+ ArcString


+ Arc


+ Circle


+ ArcStringByBulge


+ ArcByBulge


+ ArcByCenterPoint


+ CircleByCenterPoint


+ CubicSpline


+ BSpline


+ Bezier


+ OrientableCurve


+ Surface


+ PolygonPatch


+ Triangle


+ Rectangle


+ Ring


+ OrientableSurface


+ Solid


+ CompositCurve


+ CompositeSurface


+ CompositeSolid


(from WCTS Service)


<<CodeList>>


WCTSserviceMetadata
(from WCTS Get Capabi li ties)


Metadata


+ metadata [0..1] : Any


+ link [0..1] : URL


+ about [0..1] : URI


(from OWS Common)


WCTSContents


+ transformation [0..*] : URI


+ method [0..*] : URI


+ sourceCRS [1..*] : URI


+ targetCRS [1..*] : URI


+ userDefinedCRSs : Boolean = True


<<DataType>>


0..1


1


+contents0..1


1


0..*0..*


+metadata


0..*0..*


InterpolationMethods
(from Interpolation Methods)


<<DataType>>


CoverageAbilities


+ coverageType [1..*] : CoverageType


0..1


1


+coverageAbilities0..1


1


1


1


+interpolation


Methods1


1


FeatureAbilities


+ geometryType [1..*] : GeometryType


+ remoteProperties : Boolean = False


0..1


1


+featureAbilities 0..1


1


InputOutputFormat


+ format : CharacterString


+ input [0..1] : Boolean


+ output [0..1] : Boolean


1..*


1


1..*


11
1


1..* 1..*


+featureF


ormat
+coverage


Format


 


Figure E.9 — WCTS Contents package class diagram 







OGC 07-055r1 


86 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


E.9 WCTS Operation Method package 


The WCTS Operation Method package is shown in the class diagram in Figure E.10. This 


package builds on the CC Coordinate Operation package of ISO 19111 [OGC 05-103]. 


This package uses the UnNamedDomain and UOM classes from the OWS Domain 


package. 


CC_OperationParameter
(from ISO 19111)


UnNamedDomain
(from OWS Domain)


OperationParameter


0..1


1


0..1+allowedValues


1


UOM
(from OWS Domain)


0..*


11


0..* +otherUOM


 


Figure E.10 — WCTS Operation Method package class diagram 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 87 
 


Annex F 
(informative) 


 
GML application schemas for features 


F.1 Introduction 


This WCTS interface transforms the coordinates of points contained within feature 


geometries encoded in GML 3.1.1. In order to encode a feature in GML, a GML 


Application Schema is required, which specifies specific feature type name(s) and 


included geometry properties. This annex provides two such GML Application Schemas, 


one used in the examples in Subclause 8.4, and another for a pseudo-feature that can 


contain a sequence of point coordinates to be transformed that are not a real feature. 


F.2 Simple example GML application schemas for features 


Some of the examples in Subclause 8.4 use this simple example GML 3.1.1 Application 


Schema: 


<?xml version="1.0" encoding="UTF-8"?> 


<schema targetNamespace="http://www.opengeospatial.net/examples" 


xmlns:ex="http://www.opengeospatial.net/examples" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 


version="0.0"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2004/12/07 --> 


 <import namespace="http://www.opengis.net/gml" 


schemaLocation="../gml/3.1.1/base/feature.xsd"/> 


 <element name="Capital" type="ex:CapitalType" 


substitutionGroup="gml:_Feature"/> 


 <complexType name="CapitalType"> 


  <complexContent> 


   <extension base="gml:AbstractFeatureType"> 


    <sequence> 


     <element name="cityName" type="string"/> 


     <element name="stateName" type="string"/> 


     <element ref="gml:pointProperty"/> 


    </sequence> 


   </extension> 


  </complexContent> 


 </complexType> 


</schema> 


 


This example GML Application Schema defines a feature type named ―Capital‖ with 


properties ―cityName‖, ―stateName‖, and ―pointProperty‖. The property ―pointProperty‖ 


contains a gml:Point geometry primitive. One or more of these ―Capital‖ features can be 


included in a feature collection. 







OGC 07-055r1 


88 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


F.3 GML application schemas for pseudo-features 


To transform the coordinates of a sequence of points, a pseudo-feature can be used. A 


simple GML Application Schemas that can be used to encode an ordered sequence of 


point coordinates that are not a real feature is: 


<?xml version="1.0" encoding="UTF-8"?> 


<schema targetNamespace="http://www.opengis.net/wcts" 


xmlns:wcts="http://www.opengis.net/wcts" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" 


version="0.0"> 


 <annotation> 


  <appinfo>pointsApplicationSchema.xsd 2004/12/20</appinfo> 


  <documentation>This XML Schema is a GML Application Schema for 


encoding point positions in a pseudo-feature for transformation by a 


WCTS.  


  Primary editor: Arliss Whiteside. Last updated 2007-04-


09</documentation> 


 </annotation> 


 <!-- ============================================================== 


  includes and imports 


 ============================================================== --> 


 <import namespace="http://www.opengis.net/gml" 


schemaLocation="../gml/3.1.1/base/feature.xsd"/> 


 <!-- ============================================================== 


  elements and types 


 ============================================================== --> 


 <element name="Points" type="wcts:PointsType" 


substitutionGroup="gml:_Feature"/> 


 <complexType name="PointsType"> 


  <complexContent> 


   <extension base="gml:AbstractFeatureType"> 


    <sequence> 


     <element ref="gml:pointProperty" maxOccurs="unbounded"/> 


    </sequence> 


   </extension> 


  </complexContent> 


 </complexType> 


</schema> 


  


This GML Application Schema defines a feature type named ―Points‖ with the property 


―pointProperty‖ which can be repeated. Each ―pointProperty‖ contains a gml:Point 


geometry primitive. A template XML document containing three point coordinates using 


this Application Schema is: 


<?xml version="1.0" encoding="UTF-8"?> 


<Points xmlns="http://www.opengis.net/wcts" 


xmlns:gml="http://www.opengis.net/gml" 


xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 


xsi:schemaLocation="http://www.opengis.net/wcts 


pointsApplicationSchema.xsd"> 


 <!-- Primary editor: Arliss Whiteside. Last updated 2004/12/20 --> 


 <gml:pointProperty> 


  <gml:Point> 


   <gml:pos>99.9999 99.9999</gml:pos> 


  </gml:Point> 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 89 
 


 </gml:pointProperty> 


 <gml:pointProperty> 


  <gml:Point> 


   <gml:pos>99.9999 99.9999</gml:pos> 


  </gml:Point> 


 </gml:pointProperty> 


 <gml:pointProperty> 


  <gml:Point> 


   <gml:pos>99.9999 99.9999</gml:pos> 


  </gml:Point> 


 </gml:pointProperty> 


</Points> 


  


In this template, the dummy coordinate values 99.9999 can be replaced by the desired 


coordinate values, using negative values where needed. The number of coordinates 


provided for each Point can be increased, and the number of Points can be increased or 


decreased. 


If the WCTS server and client do not validate these feature XML documents, a shorter 


template could be used: 


<?xml version="1.0" encoding="UTF-8"?> 


<Points> 


 <pointProperty> 


  <Point> 


   <pos>99.9999 99.9999</pos> 


  </Point> 


 </pointProperty> 


 <pointProperty> 


  <Point> 


   <pos>99.9999 99.9999</pos> 


  </Point> 


 </pointProperty> 


 <pointProperty> 


  <Point> 


   <pos>99.9999 99.9999</pos> 


  </Point> 


 </pointProperty> 


</Points> 







OGC 07-055r1 


90 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Annex G 
(normative) 


 
SOAP transfer 


All compliant WCTS servers may implement SOAP 1.2 transfer of all WCTS operation 


requests and responses, using the XML encodings specified in the body of this document. 


When SOAP is implemented, the SOAP Request-Response message exchange pattern 


shall be used with the HTTP POST binding. 


For SOAP transfer, each XML-encoded operation request shall be encapsulated in the 


body of a SOAP envelope, which shall contain only this request in that body. Similarly, 


each XML-encoded operation response shall be encapsulated in the body of a SOAP 


envelope, which shall contain only this response in that body. A WCTS server shall 


return operation responses and error messages using only SOAP transfer when the 


operation request is sent using SOAP. 


All compliant WCTS servers shall specify the URLs to which SOAP operation requests 


may be sent, within the OperationsMetadata section of a service metadata (Capabilities) 


XML document, as specified in Subclause 7.4.7 of [OGC 06-121r3]. 


When an error is detected while processing an operation request encoded in a SOAP 


envelope, the WCS server shall generate a SOAP response message where the content of 


the Body element is a Fault element containing an ExceptionReport element. This shall 


be done using the following XML fragment:  


<soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope"> 


 <soap:Body> 


  <soap:Fault> 


   <soap:Code> 


    <soap:Value>soap:Server</soap:Value> 


   </soap:Code> 


   <soap:Reason> 


    <soap:Text>A server exception was encountered.<soap:Text> 


   </soap:Reason> 


   <soap:Detail> 


    <ows:ExceptionReport> 


     ... 


    </ows:ExceptionReport> 


   </soap:Detail> 


  </soap:Fault> 


 </soap:Body> 


</soap:Envelope> 


 


The Code element shall have the Value ―soap:server‖ indicating that this is a server 


exception. The Reason element shall have the Text ―Server exception was encountered.‖ 


This fixed string is used since the details of the exception shall be specified in the Detail 


element using an ows:ExceptionReport element as specified in OWS Common [OGC 06-


121r3]. 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 91 
 


Annex H 
(informative) 


 
Design decisions 


H.1 Introduction 


This annex briefly lists some of the decisions made in the design of the WCTS interface 


specified herein. These decisions are organized by included abilities, excluded abilities, 


implementation of abilities, and specification approaches. 


EDITOR’S NOTE This annex needs to be updated based on recent changes to this document. 


H.2 Included interface abilities 


The decisions made to include certain interface abilities included: 


a) Allow simple referencing of specified sets of well-known transformations (and other 
coordinate operations), coordinate reference systems, units, and operation methods 


with associated operation parameters. Require conforming server implementations to 


support a minimum subset of each of these specified sets, and allow implementation 


of additional specified subsets. 


b) Allow returning a list of possible transformations or other coordinate operations in 
one GetTransformation operation response. 


c) Allow returning (one or more) Concatenated Operation coordinate operations in a 
GetTransformation operation response, where each Concatenated Operation is treated 


as one coordinate operation. 


d) Allow sending one Concatenated Operation in a Transform operation request, where 
this Concatenated Operation is defined as a sequence of two or other coordinate 


operations. 


e) Allow use of any GML 3.1.1 Application Schema defining feature and feature 
collection types, in inputs to the Transform operation, as long as only supported 


geometric primitive types are included in the input features and feature collections. 


f) Compute an accurate transformed "boundedBy" gml:Envelope in any enclosing 
feature or feature collection, by the Transform operation. (The boundedBy 


gml:Envelope is defined as the minimum bounding rectangle.) 


g) When the IsTransformable operation returns ―false‖, return one problem identifier 
text string, where identifiers are specified for the common error conditions. 


h) Support one or more of either Feature or Remote OWS (e.g., WFS) inputs in one 
Transform operation request. 


i) Allow handling operation methods that decrease the number of dimensions in each 
coordinate. (For example, allow image coordinate transformations from 3D ground 


coordinate to 2D image coordinates.) That is, the interface will be specified to allow 







OGC 07-055r1 


92 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


this, although no such operation methods will be specified or required to be 


implemented. 


H.3 Excluded interface abilities 


The decisions made to exclude and limit interface abilities, in this version of this 


specification, included: 


a) Not support returning information on the quality of the available transformation(s), 
from the IsTransformable operation. 


b) Not support returning information on the quality of the transformation performed, 
from the Transform operation. 


c) Not require supporting transformations that can change the type of a geometry 
element. (For example, North Pole point becomes a line.) 


d) Not check the contents of any input srsName attributes. 


e) Not allow combinations of Feature, File, and Remote OWS (e.g., WFS) inputs in one 
Transform operation request. 


f) Not support use of two-way coordinate operations and operation methods. (A 
coordinate operation and its operations method are generally two-way, as defined in 


Abstract Specification Topic 2.) 


g) Not support user-defined operation methods. 


h) Limit the set of GML geometric primitive types that can be handled by the Transform 
operation, to a specified set of types. 


i) Not provide special abilities for transforming a single point or few points, not 
contained in a GML geometry or feature. 


j) Not support additions made to GML 3.1.1 for identifying the axis order and units of 
coordinates, in addition to the srsName in geometry elements. 


H.4 Implementation of interface abilities 


The decisions made on how to implement needed interface abilities included: 


a) In responses from the Transform operation, always use the same GML Application 
Schema as used for the input to that Transform operation. 


b) Only modify the supported types of geometry elements found in the inputs to the 
Transform operation, and copy the rest of the input XML document to the output. 


c) In responses from the Transform operation, include the target srsName values in 
exactly the same places as srsName values were included in input feature data. 


d) Support URN and URL forms of srsName contents in responses from the Transform 
operation, and in the target SRS inputs to the Transform and IsTransformable 


operations. Support the URN and URL forms specified in the CRS Schemas 


Application Profile. 


e) Use gml:CRSRefType for source and target CRS inputs to operations. In the 
gml:CRSRefType, usually use a GML association xlink:href (with type anyURI) and 







OGC 07-055r1 


Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 93 
 


use the URN or URL forms specified in the CRS Schemas Application Profile. Also 


allow in-line encoding of the CRS definition. 


f) Use gml:CoordinateOperationRefType for transformation inputs to, and outputs 
from, operations. In the gml:CoordinateOperationRefType, usually use a GML 


association xlink:href (with type anyURI) and use the URN or URL forms specified 


in the CRS Schemas Application Profile. Also allow in-line encoding of the 


coordinate operation definition when the operation method and associated operation 


parameters are well-known, implemented by the server, and referenced. 


H.5 Specification approaches 


The documentation approaches used in this Implementation Specification include: 


a) Use parts of the CRS Schemas specified in Recommendation Paper 04-092r4 when 
applicable, where the used parts constitute a GML 3.1.1 Profile. Normatively 


reference the applicable parts of GML 3.1.1 (04-092r4). 


b) Specify standard URN values for well-known coordinate operations, coordinate 
reference systems, units, and operation methods with corresponding operation 


parameters. 


c) Provide a standardized GML Application Schema, and corresponding example XML 
document template, of a simple feature containing one or a few points, for use when a 


client needs to transform a single point or few points. Do this in an informative 


Annex in the Implementation Specification. 


d) Normatively reference parts of OWS Common Specification [OGC 06-121r3], 
instead of copying this material. 







OGC 07-055r1 


94 Copyright © 2007 Open Geospatial Consortium, Inc. All Rights Reserved. 
 


Bibliography 


[1] ISO 19118, Geographic information – Encoding 


[2] OGC 01-004, Implementation Specification: Grid Coverage 


[3] OGC 01-009, Implementation Specification: Coordinate Transformation Services 


[4] OGC 04-071, Some image geometry models 


[5] OGC 04-094, Web Feature Service Implementation Specification, version 1.1.0 


 






