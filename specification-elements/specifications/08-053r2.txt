
/*}]]>*/

Annex A - Abstract Test Suite for the Web
Coverage Service (WCS) Processing Extension
Peter Baumann

Editor
Jacobs University Bremen
p.baumann@jacobs-university.de

Revision History

Revision 0.1 2008-03-24

Revision 0.2 2008-04-29

Revision 1.0 2009-01-11

TBD: spec artifact#

Overview

This document is an abstract test suite (ATS): a compendium of test assertions applicable to all
implementations of the WCS Processing Extension. An ATS provides a basis for developing an
executable test suite (ETS) to verify that the implementation under test (IUT) conforms to all
relevant functional specifications.

The abstract test cases (assertions) are organized into test groups that correspond to distinct
conformance classes or sets of capabilities defined in the WCPS specification (see below for the
version it applies to). The following mandatory test groups are defined:

1. GetCapabilities - WCS-inherited request type
2. DescribeCoverage - WCS-inherited request type
3. ProcessCoverages - core WCPS request type

Source documents

OGC Web Coverage Processing Service (WCPS) Language, version 1.0.0 (OGC 08-068r2)
OGC Web Coverage Service (WCS) - Processing extension, version 1.0.0 (OGC 08-059r3)
OGC Web Coverage Service (WCS) Implementation Specification, Corrigendum 2,
Version 1.1.2 (OGC 08-067r5)

What is tested

http://www.opengeospatial.org/
mailto:p.baumann@jacobs-university.de
http://portal.opengeospatial.org/files/?artifact_id=XXX
http://portal.opengeospatial.org/files/?artifact_id=8798
http://portal.opengeospatial.org/files/?artifact_id=4700


GetCapabilities
DescribeCoverage
ProcessCoverages

Test prerequisites

The WCPS service under test must be accessible online.
All sub-test prerequisites must be fulfilled. In particular, the WCS request types
GetCapabilities and DescribeCoverage must have passed the WCS test successfully (see
tests groups GetCapabilities and DescribeCoverage below).

Test Data

Test data required are described by the sub-tests.

Schemas

All schemas used for validation in these tests can be found at: http://schemas.opengis.net/

Table of Contents

1. GetCapabilities
2. DescribeCoverage
3. ProcessCoverages

1. GetCapabilities

Purpose

The GetCapabilities test group consists of the assertions that are defined on the GetCapabilities
request type of the WCS specification.

2. DescribeCoverage

Purpose

The DescribeCoverage test group consists of the assertions that are defined on the
DescribeCoverage request type of the WCS specification.

3. ProcessCoverages

Purpose

The ProcessCoverages test group consists of the assertions that validate the ProcessCoverages
request type of the WCPS specification, using one of the protocol encodings specified in the WCS
Processing Extension specification.

Table 4.11. ProcessCoverages - expressions

http://schemas.opengis.net/
https://portal.opengeospatial.org/files/?artifact_id=32888#process


Test case
identifier WCPS.ProcessCoverages-expressions

Test purpose The expression language of WCPS must be evaluated
correctly.

Test method Perform the ATS of WCPS. Pass if all assertions hold; fail
otherwise.

Reference WCPS specification, Section 7

Test type Capability

Table 4.22. ProcessCoverages - encoding
Test case
identifier WCPS.ProcessCoverages-encoding

Test
purpose

All protocols supported by the server under test must work
properly.

Test
method

For each of the following result categories, send sample
requests:

coverage set (check for empty set, one element,
several elements)
scalar (check for each scalar-returning function)

Send each of the above sample requests in each
supported protocol, which can be:

request GET/KVP
request XML
request XML/SOAP

Check the result retrieved whether it contains the
predetermined value in a correct encoding. Pass if all
assertions hold; fail otherwise.

Reference WCPS, Section 7.1.4

Test type Capability

Table 5.33. ProcessCoverages - exceptions
Test case
identifier WCPS.ProcessCoverages-exceptions

Test
purpose Exceptions must be thrown in the specified error conditions.

Test
method

Send ProcessCoverages requests as described below to provoke
each of the specified exception types.

WCS specific exceptions:
Omit one mandatory parameter; required
exception response: MissingParameterValue
Provide a syntactically invalid parameter;
required exception response:
InvalidParameterValue

Provide a semantically invalid parameter;



required exception response:
InvalidParameterValue

Provide a semantically invalid parameter;
required exception response:
InvalidParameterValue

Request an output CRS / format combination
that is not supported; required exception
response: UnsupportedCombination
Delimit service's disk space for storing output
coverages, then request a coverage to be stored
on server side which is larger than the remaining
disk space; required exception response:
NotEnoughStorage

Note: exception code NoApplicableCode seemingly
cannot be tested, as there is no indication provided on a
situation that can provoke it.
WCPS specific exceptions:

Send a request which is syntactically invalid:
SyntaxError

Send a request which is syntactically correct, but
semantically invalid; required exception
response: IllegalRequest
Send a valid request and generate, during
evaluation of this request, a situation on server
side which prevents it from successfully
providing a result; required exception response:
ProcessingError

Check whether the response is an exception in its appropriate
encoding. Pass if all assertions hold; fail otherwise.

Reference WCS specification, Section 10.3.2
WCPS specification, Section 7.3
WCS Processing Extension specification, Section 7.2.2

Test type Capability


